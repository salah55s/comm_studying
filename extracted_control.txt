Farid Golnaraghi • Benjamin C. Kuo 
A fresh new approach to 
mastering the fundamentals of control systems 
-now including a new chapter on virtual lab 
Integrating software and hardware tools, Automatic Control Systems gives engineers an unprece­
dented ability tu see how the design an<l simulation of control systems is accomplished. 
With the revolutionary idea of including virtual labs that replicate physical systems in its 
course, Automatic Control Systems gives you authoritative coverage of modern design tools 
and examples. Its special emphasis on mechatronics will engage and motivate you as you 
proceed through the chapters to: 
Absorb the theoretical foundations of control systems 
Examine modeling of dynamic systems, complex variables, the Laplace transform, and more 
Understand such issues as stability, time-domain analysis, root-locus techniques, 
state variable analysis, and others 
Apply your knowledge to real-world design of control systems in problems such as an Active 
Suspension System 
Practice using the included Virtual Lab, a realistic online lab with all the problems you 
would encounter in a real speed-or position-control lab 
Accompanying the text you'll find not only conventional MATLAB® toolboxes, but also a 
graphical MATLAB-based software: ACSYS-eas y-to-use software that frees you to 
concentrate on learning how to solve control problems, rather than programming . 
Designed to excel as both a text for students and a self-teaching reference for the professional 
engineer, Automatic Control Systems will be the one resource you keep at your side for years to 
come as you meet the challenges and rewards of real-world control systems design. 
Dr. Farid Golnaraghi is a professor and the Director of Mechatronic Systems Engineering at 
the Simon Fraser University in Vancouver since 2006. He also holds a Burnaby Mountain 
endowed Chair at SFU, and his primary research focus is on Intelligent Vehicle Systems. Prior 
to joining SFU, he was a professor of Mechanical and Mechatronics Engineering at the 
University of Waterloo . His pioneering research has resulted in two textbooks, more than a 
hundred and fifty journal and Conference papers, four patents and two start-up companies. 
Dr. Benjamin C. Kuo is professor emeritus, Department of Electrical and Computer 
Engineering, University of Illinois at Urbana-Champaign . He is a Fellow of the IEEE and 
has received many awards on his theoretica l and applied research on control systems. He has 
written numerous papers and has authored more than 10 books on control systems. 
He has consulted extensively in industry. 
ISBN 978-0-470-04896-2 
G?)WILEY 
www.wiley.com/ college/ golnaraghi 9 780470 048962 90000 
Laplace Transform Table 
Laplace Transfonn F(s) Time Function}{!) 
1 Unit-impulse function 8(t) 
1 -Unit-step function u5(t) 
s 
1 Unit ... ramp function t 
s2 
n! t"(n = positive integer) 
8n+l 
1 e-«t --s+a 
1 te-a' 
(s + a.)2 
n! t'1 e-at ( n = positive integer) 
(s + ar+l 
1 _1 _(e-at -e-Pt)(a I= IJ) 
(s + o:)(s + /3) fJ-Ol 
s -1-(pe-Pt -ae-a') (a# fJ) (s + a}(s + ,B) fJ-a 
1 .!.(1 _ e-a,) 
s(s + a) a 
1 _!_(1 -e-«t -ate-a') 
s(s+a)2 a2 
1 _!_(at-1 + e-"1} s2(s+ a) a.2 
' 1 1 [ 2 ( 2) -at] 
s2(s + a)2 a2 t-a+ t+a e 
s (1 -at)e-a, 
(s + a}2 
Wn 
s2 + w; sin wnt 
s 
s2 + a>~ COSW12t 
Laplace Transform Table (cont.) 
Laplace Transform F(s) Time Functionflt) 
(J)2 n I -COSWnl 
s(s2 +w~) 
w~(s +a) Wn J a2 + w~ sin( w11t + 9) 
s2 +w; wheree = tan-1 (wrz/a) 
Wn {J)n -o:I l . ( 8) 
2 2 e + J sm Wnf -
(s + a)(s2 + ~) a +w,, a2+w~ 
wheree = tan-1 (wn/a) 
w2 
Wn e-Cwntsinw ~ t n (t< I) s2 + 2twns+~ ~ n 
2 1 -I e-t;Wnl sirt(wn~ t + e) w,, 
s(s2 + 2~wns + w~) JI="? 
where()= cos-1 t ({< 1) 
sw; 2 
-W,i e-twnt sin( Wn JI="? t -()) 
s2 + 2twns + w;, ~ 
where&= cos-1~ (s< 1) 
a2 ?a{w + w2 ( w;(s +a) W11 -~ _ ,) 11e-t;w1
'1sin W11 Jt -t;2 I+()) 
s2 + 2~wns+~ w JI="? where.9 = tan-1 11 (( < 1) a-Cwn 
w; zs J e-l;w,rtsin(wn~ r+e) t--+ s2{s2 + 2?;'w11s + ~) w,, Wn~ 
where.9 = cos-1(2t2 -1) (t < 1) 
9THED1T10N 
Automatic Control 
Systems 
FARID GOLNARAGHI 
Simon Frase,-University 
BENJAMIN C. KUO 
University of Illinois at Urbarw-Champaign 
@ 
WILEY 
JOHN WILEY & SONS, INC. 
VP & Executive Puhlisher Don Fowley 
Associate Publisher Dmliel S"yre 
Senior Production Editor Nicole Repflsky 
Marketing Manager Christo1,lter R11el 
Senior Designer Kevi11 M11rplry 
Production Management Services Elm Street P11blislri11g Service.s 
Editorial Assist-.mt Caroly11 \.Vei.m1ar1 
Media Editor Lm,ren Saplm 
Cover Photo Science S011rce!Photo Researchers 
111is book was set in Times Homan by Thomson Digit-al and printed and bound hy Quebecor/ 
Versailles. 111e cover was printed by QuebecorNersaill es. 
111is book is printed on acid free paper.€) 
Copyright fJ 2010. 2003. 2000. 1901. 1987, 1982. 19i5. 196i. 1002 John Wiley & Son.~. Inc. All rights 
rescn•oo. No purt or this publication may be reproduced. storoo in II rct,fovnl ~lcm or transmitted in any 
form or hy any means. electronic, nK.oelmnical, photocopying. reconling, scanning or otherwise. except as 
pcnnltted under Sections 107 or 108 or the 19i6 Unit«.><l Stall-s Copyright Act. without either the prior 
written pcnnission or the Publisher, or authorl1.ntion through payment of the appmpriale per -copy fee to the 
Copyright Clearance Center, Inc., 222 Rosewood Drive, Danvers, MA 0192.'.3. website www.copyright.com. 
Rec1uests to the Publisher for permission should be addres~'tl to the Pennlssions Department, Jolm Wiley & 
Sons. Joe.. 111 River Street. Hoboken. NJ 07030-57i4. (201 )i48-60ll , fax (201 )748-6008. website 
www ..... 1ley.t.'011\/golpermissions. 
To order books or for Cll.~tomer service. please call J-800-CALL WILEY (225-5945 ). 
MAT1...AB1~ aml Si111ull11k it(! are tnulemark., ,,f Tl1e Motl, Works, luc. and flro ww,I witl, 11en111.tt1011 . Tl,c 
Math \Vorl.'$ does 1101 1oorm11t tl,c acc,1raa1 of the text or exercise$ 111 tl1is book. Tl1ls book's wie or dL'ICf1s.Y1011 of 
MA Tl .A81~ .'l(,ftu:"'-c or rcil1ted pf'0(/11cts d,'IC.'I ,wt amstft11tc endorsement t1r ·'IHmsorsl,11, by Tlw Mat/, Works 
of" pnrllC11lar 7,edag.ogia1/ a11proocl1 ,,r parllc11/ar 11se of tl,e MATI.AB k .~iftu:ore. 
ISBN-13 9i8-04i0-04896-2 
Printed in the Unitc:cl Stuks or America 
10 9 8 i 6 5 4 3 2 J 
To my wife, Mitra, and to Sophia and Carmen, the joys of my life. 
-M. Farid Golnaraghi 
iv Preface (Readme) 
This is the ninth edition of the text but the first with Farid Golnaraghi as the lead author. 
For this edition, we increased the number of examples~ added MATLAB'tr·I toolboxes, and 
enhanced the MATLAB GUI software, ACSYS. We added more computer~aided tools for 
students and teachers. The prepublication manuscript was reviewed by many professors, 
and most of the relevant suggestions have been adopted. In this edition, Chapters I through 
4 are organized to contain all background materialt while Chapters 5 through 10 contain 
material directly related to the subject of control. 
In this edition, the following materials have been moved into appendices on this book's 
Web site at www.wiley.com/college/golnaraghi. 
Appendix A; Elementary Matrix Theory and Algebra 
Appendix B: Difference Equations 
Appendix C: Laplace Transform Table 
Appendix D: z-Transform Table 
Appendix E: Properties and Construction of the Root Loci 
Appendix F: General Nyquist Criterion 
Appendix G: ACSYS 2008: Description of the Software 
Appendix H: Discrete-Data Control Systems 
In addition, the Web site contains the MATLAB files for ACSYS. which are software 
tools for solving control-system problems, and PowerPoint files for the illustrations in the 
text. 
The following paragraphs are aimed at three groups: professors who have adopted the 
book or who we hope will select it as their text; practicing engineers looking for answers to 
solve their day-to-day design problems; and. finally, students who are going to live with the 
book because it has been assigned for the control.-systems course they are tal<lng. 
To the Professor: The material assembled in this book is an outgrowth of senior-level 
control-system courses taught by the authors at their universities throughout their teaching 
careers. The first eight editions have been adopted by hundreds of universities in the United 
States and around the world and have been translated into at least six languages. Practically 
all the design topics presented in the eighth edition have been retained. 
This text contains not only conventional MATLAB toolboxes, where students can 
learn MATLAB and utilize their programming skills, but also a graphical MATLAB-based 
software, ACSYS. The ACSYS software added to this edition is very different from the 
software accompanying any other control book. Here, through extensive use of MATLAB 
GUI programming~ we have created software that is easy to use. As a result, students will 
need to focus only on learning control problems. not programming! We also have added 
two new applications, SIMLab and Virtual Lab, through which students work on realistic 
problems and conduct speed and position control labs in a software environment. In 
SIMLab. students have access to the system parameters and can alter them (as in any 
simulation). In Virtual Lab, we have introduced a black-box approach in which the students 
1 MATLAB Ft is a registered trademark of The Math Works. Inc. 
Preface 4'f v 
have no access to the plant parameters and have to use some sort of system identification 
technique to find them. Through Virtual Lab we have essentially provided students with a 
realistic online lab with all the problems they would encounter in a real speed-or position­
control lab-for example, amplifier saturation, noise, and nonlinearity. We welcome your 
ideas for the future editions of this book. 
Finally, a sample section-by-section for a one-semester course is given in the 
Instructor's Manual, which is available from the publisher to qualified instructors. The 
Manual also contains detailed solutions to all the problems in the book. 
To Practicing Engineers: This book was written with the readers in mind and is very 
suitable for self-study. Our objective was to treat subjects clearly and thoroughly. The book 
does not use the theorem-proof-Q.E.D. style and is without heavy mathematics. The 
authors have consulted extensively for wide sectors of the industry for many years and have 
participated in solving numerous control-systems problems, from aerospace systems to 
industrial controls, automotive controls, and control of computer peripherals. Although it is 
difficult to adopt all the details and realism of practical problems in a textbook at this level, 
some examples and problems reflect simplified versions of real-life systems. 
To Students: You have had it now that you have signed up for this course and your 
professor has assigned this book! You had no say about the choice. though you can form 
and express your opinion on the book after reading it. Worse yet, one of the reasons that 
your professor made the selection is because he or she intends to make you work hard. But 
please don't misunderstand us: what we really mean is that, though this is an easy book to 
study (in our opinion), it is a no-nonsense book. It doesn't have cartoons or nice-looking 
photographs to amuse you. From here on, it is all business and hard work. You should have 
had the prerequisites on subjects found in a typical linear-systems course, such as how to 
solve linear ordinary differential equations, Laplace transform and applications, and time­
response and frequency-domain analysis of linear systems. In this book you will not find 
too much new mathematics to which you have not been exposed before. What is interesting 
and challenging is that you are going to learn how to apply some of the mathematics that 
you have acquired during the past two or three years of study in college. In case you need to 
review some of the mathematical foundations, you can find them in the appendices on this 
book's Web site. The Web site also contairts lots of other goodies, including the ACSYS 
software, which is GUI software that uses MATLAB-based programs for solving linear 
control systems problems. You will also find the Simulinl/R·2-based SIMLab and Virtual 
Lab, which will help you to gain understanding of real-world control systems. 
This book has numerous illustrative examples. Some of these are deliberately simple 
for the purpose of illustrating new ideas and subject matter. Some examples are more 
elaborate, in order to bring the practical world closer to you. Furthermore. the objective of 
this book is to present a complex subject in a clear and thorough way. One of the important 
learning strategies for you as a student is not to rely strictly on the textbook assigned. When 
studying a certain subject, go to the library and check out a few similar texts to see how 
other authors treat the same subject. You may gain new perspectives on the subject and 
discover that one author may treat the material with more care and thoroughness than the 
others. Do not be distracted by written-down coverage with oversimplified examples. The 
minute you step into the real world, you will face the design of control systems with 
nonlinearities and/or time-varying elements as well as orders that can boggle your mind. It 
2 Simulink'):I is a registeted trademark of The Math Works. Inc. 
^Dr. Earl Foster, Dr. Vahe Caliskan,
^vi ·. Preface 
may be discouraging to tell you now that strictly linear and first-order systems do not exist 
in the real world. 
Some advanced engineering students in college do not believe that the material they 
learn in the classroom is ever going to be applied directly in industry. Some of our students 
come back from field and interview trips totally surprised to find that the material they 
learned in courses on control systems is actually being used in industry today. They are 
surprised to find that this book is also a popular reference for practicing engineers. 
Unfortunately, these fact-finding, eye-opening, and self-motivating trips usually occur near 
the end of their college days, which is often too late for students to get motivated. 
There are many ]earning aids available to you: the MATLAB-based ACSYS software 
will assist you in solving all kinds of control-systems problems. The SIMLab and Virtual 
Lab software can be used for simulation of virtual experimental systems. These are all 
found on the Web site. In addition, the Review Questions and Summaries at the end of each 
chapter should be useful to you. Also on the Web site, you will find the errata and other 
suppleinental material. 
We hope that you will enjoy this book. It will represent another major textbook 
acquisition (investment) in your college career. Our advice to you is not to sell it back to the 
bookstore at the end of the semester. If you do so but find out later in your professional 
career that you need to refer to a control systems book, you will have to buy it again at a 
higher price. 
Special Acknowledgments: The authors wish to thank the reviewers for their invaluable 
comments and suggestions. The prepublication reviews have had a great impact on the 
revision project. 
The authors thank Simon Fraser students and research associates Michael Ages, 
Johannes Minor, Linda Franak7 Arash Jamalian, Jennifer Leone, Neda Parnian, Sean 
MacPherson, Amin Kamalzadeh, and Nathan (Wuyang) Zheng for their help. Farid 
Golnaraghi also wishes to thank Professor Benjamin Kuo for sharing the pleasure of 
writing this wonderful book, and for his teachings. patience, and support throughout this 
experience. 
M. F. Golnaraghi, 
Vancouver. British Columbia, 
Canada 
B. C. Kuo, 
Cluunpaign, Illinois, U.S.A. 
2009 
Preface iv 
• CHAPTER 1 
Introduction 1 Contents 
1-1 Introduction 
1-1-1 Basic Components of a Control 
System 2 
1-1-2 Examples of Control-System 
Applications 2 
1-1-3 Open-Loop Control Systems 
(Nonfeedhack Systems) 5 
1-1-4 Closed-Loop Control Systems 
(Feedback Control Systems) 7 
1-2 What Is Feedback, and What Are Its Effects? 8 
1-2-1 Effect of Feedback on Overall Gain 8 
1-2-2 Effect of Feedback on Stability 9 
1-2-3 Effect of Feedback on External 
Disturbance or Noise 10 
1-3 Types of Feedback Control Systems 11 
1-3-1 Linear versus Nonlinear Control 
Systems 11 
1-3-2 Time-Invariant versus Time-Varying 
Systems 12 
1-4 Summary 14 
Iii--CHAPTER 2 
Mathematical Foundation 16 
2-1 Complex-Variable Concept 16 
2-1-1 Complex Numbers 16 
2-1-2 Complex Variables 18 
2-1-3 Functions of a Complex Variable 19 
2-1-4 Analytic Function 20 
2-1 ~5 Singularities and Poles of a 
Function 20 
2-1-6 Zeros of a Function 20 
2-1-7 Polar Representation 22 
2-2 Frequency-Domain Plots 26 
2-2-1 Computer-Aided Construction of the 
Frequency-Domain Plots 26 
2-2-2 Polar Plots 27 
2-2-3 Bode Plot (Corner Plot or Asymptotic 
Plot) 32 
2-2-4 Real Constant K 34 
2-2-5 Poles and Zeros at the Origin, 
UwtP 34 
2-2-6 Simple Zero, 1 + jwT 37 
2-2-7 Simple Pole, 1/(1 + jwT) ,'39 2-4 
2-5 
2-6 
2-7 
2-R 
2-9 
2-10 
2-11 
2-12 
2-1:3 2-2-8 
2-2-9 Quadratic Poles and Zeros 39 
Pure Time Delay, e-iwTd 42 
Magnitude-Phase Plot 44 2-2-10 
2-2-11 
2-2-12 Gain-and Phase-Crossover Points 46 
Minimum-Phase and Nomninimum­
Phase Functions 47 
Introduction to Differential Equations 49 
2-3-1 Linear Ordinary Differential 
Equations 49 
2-.'3-2 
2-3-3 Nonlinear Differential Equations 49 
First-Order Differential 
Ec1uations: State Equations 50 
2-3-4 Definition of State Variables 50 
2-3-.5 The Output Equation ,51 
Laplace Transfonn 52 
2-4-1 Definition of the Laplace 
Transform 52 
Inverse Laplace Transformation ,54 
Important Theorems of the Laplace 
Transform .54 
Inverse Laplace Transform by 
Partial-Fraction Expansion 57 
2-5-1 Partial-Fraction Expansion ,57 
Application of the Laplace Transform 
to the Solution of Linear Ordinary 
Differential Equations 62 
2-6-1 First-Order Prototype System 63 
2-6-2 Second-Order Prototype 
System 64 
Impulse Response and Transfer Functions 
of Linear Systems 67 
2-7-1 Impul1;e Response 67 
2-7-2 Transfer Function (Single~Input. 
2-7-3 
2-7-4 
2-7-5 Single-Output Systems) 70 
Proper Transfer Functions 71 
Characteristic Equation 71 
Transfer Function (Multivariable 
Systems) 71 
Stability of Linear Control Systems 72 
Bounded-Input, Bounded-Output 
(BIBO) S tahility~Continuous-Data 
Svstems 73 
Relationship between Characteristic Eq11ation 
Roots and Stability 74 
Zero-Input and ~ymptotic Stability of 
Continuous-Data Systems 74 
Methods of Determining Stability 77 
Routh-Hurwitz Criterion 78 
vii 
viii Contents 
Routh's Tabulation 79 
2-1:3-2 Special Cases when Routh's 
Tabulation Terminates 
Prematurely 80 
2-14 MATLAB Tools and Case Studies 84 
2-14-1 Desciiption and Use of Transfer 
Function Tool 84 
2-14-2 MATLAB Tools for Stability 85 
2-1,5 Summaiy 90 
-CHAPTER 3 
Block Diagrams and Signal-Flow Graphs 104 
3-1 Block Diagrams 104 
3-1-1 Typical Elements of Block Diagrams 
in Control Systems 106 
3-1-2 Relation between Mathemntica.I 
Equations and Block Diagrams 109 
3-1-,'3 Block Diagram Reduction 113 
3-1-4 Block Diagram of Multi-Input 
Systems-Special Case: Systems with 
a Disturbance 115 
3-1-5 Block Diagmms and Transfer 
Functions of Multivariable 
Systems 117 
3-2 Signal-Flow Graphs (SFGs) 119 
:3-2-1 Basic Elements of an SFG 119 
3-2-2 Summa1y of the Basic Properties of 
SFG 120 
3-2-3 Definitions of SFG Terms 120 
3-2-4 SFG Algebra 123 
3-2-,5 SFG of a Feedback Control 
System 124 
3-2-6 Relation between Block Diagrams 
and SFGs 124 
3-2-7 Gain Formula for SFG 124 
3-2-8 Application of the Gain Fornmla 
between Output Nodes and 
Noninpul Nodes 127 
,'3-2-9 Application of the Gain Formula to 
Block Diagrams 128 
3-2-10 Simplified Gain Formula 129 
3-3 MATLAB Tools and Case Studies 129 
3-4 Summary 133 
-CHAPTER 4 
Theoretical Foundation and Background 
Material: Modeling of Dynamic Systems 147 
4-1 Introduction to Modeling of Mechanical 
Systems 148 
4-1-1 Translational Motion 148 
4-1-2 Rotational Motion 1.57 
4-1-3 Conversion between Tmnslational and 
Rotational Motions 161 
4-1-4 Gear Trains 162 4-2 
4-3 
4-4 
4-,5 
4-6 
4-7 4-1-5 Backlash and Dead Zone (Nonlinear 
Characteristics) 164 
Introduction to Modeling of Simple Electrical 
Systems 16.5 
4-2-1 Modeling of Passive Electrical 
Elements 165 
4-2-2 Modeling of Electrical Networks 165 
Modeling of Active Electrical Eleinents: 
Operational Amplifiers 172 
4-3-1 The Ideal Op-Amp 173 
4-3-2 Sums and Differences 173 
4-:3-3 First-Order Op-Amp 
Configurations 17 4 
Introduction to Modeling of Thermal Systems 177 
4-4-1 Elementary Heat Transfer 
Properties 177 
Introduction to Modeling of Fluid Systems 180 
4-5-1 Elementary Fluid and Gas System 
Properties 180 
Sensors and Encoders in Control Systems 189 
4-6-1 Potentiometer 189 · 
4-6-2 Tachometers 194 
4-6-3 Incremental Encoder 195 
DC Motots in Conh·ol Systems 198 
4-7 -1 Basic Operational Principles of DC 
Motors 199 
4-i-2 Basic Classifications of PM DC 
Motors 199 
4-7-3 Mathematical Modeling of PM DC 
Motors 201 
4-8 Systems ,,ith Tnmsportation Lags 
(Time Delays) 205 
4-8-1 Approximation of the Time-Delay 
Function hy Rational 
Functions 206 
4-9 Linearization of Nonlinear Systems 206 
4-9-1 Linearization Using Taylor Series: 
Classical Representation 20i 
4-9-2 Lineari7.ation Using the State Space 
Approach 207 
4-10 Analogies 213 
4-11 Case Shuli<'~S 216 
4-12 MATLAB Tools 222 
4-13 Summary 22.'3 
> CHAPTER 5 
Time-Domain Analysis of Control Systems 253 
5-1 Time Response of Continuous-Data Systems: 
Introduction 253 
5-2 Typical Test Signals for the Time Response of 
Control Systems 254 
5-3 The Unit-Step Response and Time-Domain 
Specifications 256 
5-4 Steady-State Error 258 
5-6 
5-i 
5-8 
5-10 
5-12 
5-1,'3 ,5-4-1 Steady-State Error of Linenr 
Continuous-Data Contml Systems 2.58 
Steady-State Error Caused l1y 
Nonlinear System Elements 272 
Time Response of a Pr~totype First-Order 
System 274 
Transient Response of a Protol)pe 
Second-Order System 275 
5-6-1 Damping Hatio nnd Damping 
Factor 277 
5-6-2 Natural Undamped Frequency 278 
5-6-3 Maximum Overshoot 280 
5-6-4 Delay Time aml Rise Time 283 
5-6-5 Settling Time~ 285 
Speed and Positio~ Control of a DC Motor 289 
5-i-l Speed Response and the Effects of 
Inductance and Disturbance-Open 
Loop Response 289 
Speed Control of DC Motors: 
Closed-Loop Response 291 
5-7-3 Position Control 292 
Time-Domain Analysis of a Position-Control 
System 293 • 
5-8-1 Unit-Step Transient Response 294 
5-8-2 The Steady-State Response 298 
5-8-3 Time Response to a Unit-Ramp 
Input 298 
Time Response of a Third-Order 
System 300 
Basic Control Systems and Effocts of 
Adding Poles mul Zeros to Transfer 
Functions 304 
5-H-l Addition of a Pole to the 
5-9-2 
5-9-.'3 Forward-Path Transfer Fundion: 
Unity•Feedback Systems :305 
Addition of a Pole to tlw 
Closecl-Loop Trnnsft•r Function :30i 
Addition of a Zero to tlw 
Closed-Loop Transfer Function am, 
Addition of a Zero to the 
Forward-Path Tmnsfer Function: 
Unity-Feedback Systems 309 
Dominant Poles and Zeros of Transfer 
Functions 311 
5-10-1 
5-10-2 
5-10-3 Sumnm1y of El1'ect8 of Polt->s ancl 
Zeros 313 
The Relative Damping Hatio ;313 
The Proper Way of Negfoeting the 
Insignificant Poles with Consideration 
of the Steady-State Response ,313 
Basic Control Systems Utilizing Addition of Polc!S 
and Zeros 314 
MATLAB Tools 3HJ 
SummaI)' 320 Contents <lill ix 
Ii'-CHAPTER. 6 
The Control Lab 337 
6-1 Introduction 3,'37 
6-2 Description of the Virtual Experimental 
System .'338 
6-2-1 Motor 339 
6-2-2 Position Sensor or Speed Sensor 3.39 
6-2-3 Power Amplifier 340 
6-2-4 Interface 340 
6-3 Description of SIMLah and Virtual Lab 
Software 340 
6-4 Simulation and Virtunl fa,.1)eriments 345 
6-4-1 Open-Loop Speed 345 
6-4-2 Open-Loop Sine Input :347 
6,4..,'3 Speed Control 3.50 
6-4-4 Position Control 352 
6-5 D<~sign Project 1-H.ohotic Arm 354 
6-6 Design Project 2~Quarter-Cur Model 3.57 
6-6-1 Introduction to the Quarter-Car 
Model 357 
6-6-2 C}nsecl-Loop Accelerntion 
Control :359 
6-6-3 Description of Quarter Car 
Modeling Tool 360 
6-6-4 Passive Suspension 364 
6-6-5 Closed-Loop Relative Position 
Control 365 
6-6-6 Closecl .. Loop Acceleration 
Control 366 
6-7 Summmy 367 
,. GHAPTER 7 
Root Locus Analysis 372 
7-1 Introduction 372 
7 -2 Basic Properties of the Root 
Loci (RL) 373 
7-3 Properties of the Root Loci 377 
7-3-1 K = 0 and K = ±oo Points 377 
7-3-2 Number of Branches on the Root 
Loci -378 
7-:3-3 
7-3-4 
7-3-5 
7-3-(j 
7-3-7 
7-:3-9 
7-:3-10 Svmmetrv of the RL 378 
Angles of Asymptotes of the RL: 
Behm.for of the RL at Isl= oo 378 
Intt~r::;cct of the Asymptotes 
(Centroid) 379 
Root Loci on the Heal A'<is :380 
Angles of Departure and Angles of 
Arrival of the RL 380 
Intersection of the RL with the 
Imaginary Ax.is 380 
Breakaway Points (Snddle Points) 
on the RL 380 
TI1t> Root Sensitivity :382 
x ~ Contents 
7-4 Design Aspects of the Root Loci 38.5 
7-4-1 Effects of Adding Poles and Zeros 
to G(s) H(s) 385 
7-5 Root Contours (RC): Multiple-Parameter 
Variation 393 
7-6 MATLAB Tools and Case Studies 400 
7-7 Summary 400 
~ CHAPTER 8 
Frequency-Domain Analysis 409 
8-1 Introduction 409 
8-1-1 Frequency Response of 
Closed-Loop Systems 410 
8-1-2 Frequency-Domain Specifications 412 
8-2 Mn Wr, and Bandwidth of the Prototype 
Second-Order System 413 
8-2-1 Resonant Peak and Resonant 
Frequency 413 
8M2-2 Bandwidth 416 
8-.'3 Effects of Adding a Zero to the Forward-Path 
Transfer Function 418 
8-4 Effects of Adding a Pole to the Forward-Path 
Transfer Function 424 
8-5 Nyquist Stability C1iterion: Fundamentals 426 
8-5-1 Stability Problem 427 
8-5-2 Definition of Encircled and 
Enclosed 428 
8-5-3 Number of Encirclements and 
Enclosures 429 
8-5-4 Principles of the Argument 429 
8-5-,5 Nyquist Path 433 
8-5-6 Nyquist Criterion and the L(s) or 
the G(s)H(s) Plot 434 
8-6 Nyquist Criterion for Systems with 
Minimum-Phase Transfer Functions 435 
8-6w 1 Application of the Nyquist Criterion 
to Minimum-Phase Tranfer 
Functions That Are Not Strictly 
Proper 436 
8-7 Relation between the Root Loci and the 
Nyquist Plot 437 
8-8 Illustrative Examples: Nyquist Criterion 
for Minimum-Phase Transfer 
Functions 440 
8-9 Effects of Adding Poles ancl Zeros 
to L(s) on the Shape of the Nyquist 
Plot 444 
8-10 Relative Stabillty: Gain Margin and Phase 
Margin 449 
8-10-1 Gain Margin (GM) 451 
8-10-2 Phase Margin (PM) 453 
8-11 Stability Analysis with the Boele Plot 455 
8-11-1 Boele Plots of Systems with Pure 
Time Delays 458 8-12 Relative Stability Related to the Slope of the 
Magnitude Cmve of the Bode Plot 459 
8-12-1 Conditionally Stable System 459 
8-13 Stability Analysis with the Magnitude-Phase 
Plot 462 
8-14 Constant-1\.1 Loci in the Magnitude-Phase Plane: 
The Nichols Chart 463 · 
8-15 Nichols Chart Applied to Nonnnity-Feedback 
Systems 469 
8-16 Sensitivity Studies in the Frequency Domain 470 
8-17 MATLAB Tooh; and Case Studies 472 
8-18 Summary 472 
t,, CHAPTIER9 
Design of Control Systems 487 
9-1 Introduction 487 
9-1-1 Design Specifications 487 
9-1-2 Controller Configumtions 489 
9-1-3 Fundamental Principles of Design 491 
9-2 Design with the PD Controllel' 492 
9-2-1 Time-Domain Interpretation of PD 
Control 494 
9-2-2 Frequenc..y-Domain Interpretation of 
PD Control 496 
9-2-3 Summary of Effects of PD Control 497 
9-3 Design with the PI Controller .511 
9-.'3-l Time-Domain Interpretation and 
Design of Pl Control 513 
9-3-2 Frequency-Domain Interpretation and 
Design of PI Control 514 
9-4 Design with the PID Controller 528 
9-5 Design with Phase-Lead Controller 532 
9-5-1 Time-Domain Inte:rpretation and 
Design of Phase-Lead Control ,534 
9-5-2 Frequency-Domain Interpretation and 
Design of Phase-Lead Control 535 
9-5-3 Effects of Phase-Lead 
Compensation ,'S54 
9-,5-4 Limitations of Single-Stage Phase-Lead 
Control 555 
9-5-5 Multistage Phase-Lead Controller ,555 
9-,5-6 Sensitivity Considerations 559 
9-6 Design with Phase ... Lag Controller 561 
9-6-1 Time-Domain Interpretation and 
Design of Phase-Lag Control ,561 
9-6-2 Frequenc.y-Domain Interpretation 
and Design of Phase-Lag Control 563 
9-6-3 Effects ancl Limitations of Phase-Lag 
Control 574 
9-7 Design \vith Lead-Lag Controller 574 
9-8 Pole-Zero-Cancellation Design: Notch Filter 576 
9-8-1 Second-Order Active Filter ,579 
9-8-2 Frequency ... Domain Interpretation and 
Design ,580 
9-9 Forward and Feedforward Controllers 588 
9-10 Design of Robust Control Systems 590 
9-11 Minor-Loop Feedback Control 601 
9-11-1 Rate-Feedback or 
Tachometer-Feedback Control 601 
9-11-2 Minor-Loop Feedback Control with 
Active Filter 603 
9-12 A Hydraulic Control System 605 
9-12-1 Modeling Lineai· Actuator 60,5 
9-12-2 Four-Way Electro-Hydraulic 
Valve 606 
9-12-3 Modeling the Hydraulic System 612 
9-12-4 Applications 613 
9-13 Controller Design 617 
9-13-1 P Control 617 
9-13-2 PD Control 621 
9-13-3 PI Control 62.fi 
9-13-4 PIO Control 628 
9-14 MATLAB Tools and Case Studies 631 
9-15 Plotting Tutorial 647 
9-16 Summary 649 
,-. CHAPTER 10 
State Variable Analysis 673 
10-1 Introduction 673 
10-2 Block Diagrams, Transfer Functions, and State 
Diagrams 673 
10-2-1 Transfer Functions (Multivariable 
10-2-2 
10-2-5 Systems) 673 
Block Diagrams and Transfer Functions 
of M ultivariable Systems 67 4 
State Diagram 676 
From Differential Equations to State 
Diagrams 678 
From State Diagrams to Transfer 
Function 679 
10-2-6 From State Diagrams to State and 
Output Equations 680 
10-3 Vector-Matrix Representation of State 
Equations 682 
10-4 State-Transition Matrix 684 
10-4-1 Significance of the State-Transition 
Matrix 685 
10-4-2 Properties of the State-Transition 
Matrix 685 
10-5 State-Transition Equation 687 
10-5-1 State-Transition Equation Determined 
from the State Diagram 689 
10-6 Relationship between State Equations and 
High-Order Differential Equations 691 
10-7 Relationship between State Equations and 
Transfer Fundions 693 
10-8 Characteristic Equations, Eigenvalues, 
ru1d Eigenvectors 695 10-9 
10-11 
10-12 
10-13 
10-16 
10-17 
10-18 
10-19 
10-20 Contents -1111 xi 
10-8-1 
10-8-2 Characteristic Equ~1tion from a 
Differential Equation 695 
Characteristic Equation from a Transfer 
Function 696 
10-8-3 Characteristic Equation from State 
Equations 696 
10-8-4 Eigenvalues 697 
10-8-5 Eigenvectors 697 
10-8-6 Generalized Eigenvectors 698 
Similarity Transformation 699 
10~9-l Invariance Properties of the Similarity 
Transformations 700 
10-9-2 Controllability Canonical Form {CCF) 
701 
10-9-3 ObservabilityCtmonical Fonn ( OCF) 703 
10-9-4 Diagonal Canonical Form (DCF) 704 
10-9-5 Jordan Canonical Form (JCF) 706 
Decompositions of Tnmsfer Functions 707 
10-10-1 Direct Decomposition 707 
10-10-2 Cascade Decomposition 712 
10-10-3 Parallel Decomposition 713 
Conh·ollability of Control Systems 714 
10-11-1 General Concept of Controllability 
716 
10-11-2 Definition of State Coutrollability i16 
10-11-3 Altemate Tests on Controllability 717 
Observability of Linear Systems 719 
10-12-1 Definition of Obseivability 719 
10-12-2 Alternate Tests on Obsetvability 720 
Relationship among Controllability, · 
Observability, and Transfer Functions 721 
Invariant Theorems on Controllability and 
0 bservability 72.'3 
Case Study: Magnetic-Ball Suspension 
System 725 
State-Feedback Control 728 
Pole-Placement Design Through State 
Feedback 730 
State Feedback with Integral Control 735 
MATLAB Tools and Case Studies 741 
10-19~1 Description and Use of the State-Space 
Analysis Tool 7 41 
10-19-2 Description and Use of tfaym for 
State-Space Applications 748 
Summary 751 
.... INDEX 77'3 
Appendices can be found on this hook's companion Web site: 
www.wiley.com/coilegeJgolnamghi. 
I> APPENDIX A 
Elementary Matrix Theory and Algebra A-1 
A-1 Elementary Matrix Theory A-I 
A-1-1 Definition of a Matrix A-2 
xii • Contents 
A-2 Matrix Algebra A-.5 
A-2-1 Equality of Matrices A-.5 
A-2-2 Addition and Subtraction of 
Matrices A-6 
A-2-3 Associative Law of Matrix (Addition and 
Subtraction) A-6 
A-2-4 Commutative Law of Matrix (Addition 
and Subtraction) A-6 
A-2-5 Matrix Multiplicnticm A-6 
A-2-6 Rules of Matrix Multiplication A-7 
A-2--7 Multiplication by a Scalar k A-8 
A-2-8 Inverse of a Matrix (Mahi.x Division} A-8 
A-2-9 Rank of a Matrix A-9 
A-3 Computer-Aided Solutions of Matrices A-9 
,.. APPENDIX B 
Difference Equations B-1 
B-1 Difference Equations B-1 
,-APPENDIX C 
Laplace Transform Table C-1 
~ APPENDIX D 
z-Transform Table D-1 
... APPENDIX E 
Properties and Construction of 1he Root Loci E-1 
E-1 K = 0 and K = ±oo Points E-1 
E-2 Number of Brunches on the Root Loci E-2 
E-3 Symmetry of the Root Loci E-2 
E-4 Angles of Asymptotes of the Root Loci and 
Behttvior of the Root Loci at Isl= oo E-4 
E-5 Intersect of the Asymptotes (Centroid) E-5 
E-6 Root Loei on the Real Axis E-8 
E-7 Angles of Departure and Angles of Arrival of the 
Root Loci E-9 
E-8 Intersection of the Root Loci with the 
Imaginary Axis E-11 
E-9 Breakaway Points E-11 
E-9-1 ( Saddle Points) on the Root Loci E-11 
E-9.-2 The Angle of Arrival and Departure of 
Root Loci at the Breakaway Point E-12 
E-10 Calculation of Kon the Root Loci E-16 
~ APPENDIX F 
General Nyquist Criterion F-1 
F-1 Formulation of Nyquist Criterion F-1 
F-1-1 System with Minimum-Phase Loop 
Transfer Functions F -4 
F-1-2 Systems vvith Improper Loop Transfer 
Functions F -4 
F-2 Illustrative Exmnples-General l\yquist C1iteiion 
Minimum ruul Nomninimum Transfer Functions F 4 
F-:3 Stability Analysis of Multiloop Systems F-13 > APPENDIX G 
ACSYS 2008: Description of the Software G-1 
G-1 Installation of ACSYS G-1 
G-2 Description of the Software G-1 
C-2-1 tfaym G-2 
C-2-2 Statetool G-3 
G-2 .. 3 Controls G-3 
G-2 .. 4 SIMLab and Virtual Lab G-4 
G-,'3 Final Comments G-4 
~ APPENDIX H 
Discrete-Data Control Systems H-1 
H-1 Introduction H-1 
H-2 The z-Tmnsfonn H-1 
H-2-1 Definition of the z.-Transform H-1 
H-2-2 Relationship between the Laplace 
Transform and the z-Transform H-2 
H-2-3 Some Important Theorems of the 
z-Transform H-3 
H-2-4 Inverse ::-Transform H-,5 
H-2-5 Computer Solution of the Partial­
Fraction E,q>ansion of Y(z)/z I-1-7 
H-2-6 Application of the z-Transform to the 
Solution of Linear Difference 
Equations H-7 
H-3 Transfer Functions of Discrete-Data 
Syst<~ms H-8 
H-3-1 Trm1sfer Functions of Discrete~Data 
Systems with Cascade Elements H-12 
H-3-2 Transfer Function of the Zero-Orcler­
I-Iold H-13 
H-3-3 Transfer Functions of Closed-Loop 
Discrete-Data Systems H-14 
H-4 State Equations of Linenr Discrete-Data 
Systems H-16 
H-4-1 Discrete State Equations H-16 
H-4-2 Solutions of the Discrete State 
Equations: Discrete State­
Transition Equations H-18 
H-4-3 z-Transform Solution of Discrete State 
Equations H-19 
ff.4 .. 4 Transfer-Function Matrix and 
the Characteiistic Equation H-20 
H-4-5 State Diagrams of Discrete-Data 
Systems H-22 
H-4-6 State Dia!:,trams for Sampled-Data 
Systems H-23 
H-5 Stability of Discrete-Data Systems H-26 
H-5 .. I BIBO Stability H-26 
H-5-2 Zero-Input Stahility H-26 
11-5-3 Stability Tests of Discrete-Daln 
Systems H-27 
H-6 Tinw-Domain Properties of Discrete-Data 
Systems H-:31 
H-6-1 Time Response of Discrete-Data 
Control Svstems H-31 
H-6-2 Mapping iJetween s-Plane and ::-Plane 
Trajectories H-34 
I-Ui-3 Relation between Characteristic­
Equation Roots and Transient 
Hesponse H-38 
H-7 Steady-State Error Analysis of Discrete-Data 
Control Systems H-41 
H-8 Root Loci of Discrete-Data Systems H-4.5 
H-9 Frequency-Domain Analysis of Discrete-Data 
Control Systems H-49 
H-9-1 Bode Plot with tlw 
w-Transformation H-50 
H-10 Design of Discrete-Data Control Sy~iems H-51 
H-10-1 Introduction H-51 Contents ~ xiii 
H-10-2 Digital lrnplt~mentaticm of Analog 
Contmllers H-52 
H-10-3 Digital Implementation of the PID 
Controller H-54 
H-10-4 Digital Implementation of Lead and 
Lug Controllers H-57 
H-11 Digital Controllers II-58 
11-11-1 Physical Realizability of Digital 
Conttollers H-.58 
I-1-12 De-sign of Discrete-Data Control Systems in 
the Frequency Domain and the z-Piane H-61 
H-12-1 Phase~Lead and Phase-Lag Controllers 
in thew-Domain H~61 
H-13 Design of Discrete-Data Control Systems 
with Deadbeat Response H-68 
H-14 Pole-Placc~ment Design with State 
Feedback H-70 

,CHAPTER ·1 
Introduction 
.... 1-1 INTRODUCTION 
• Control systems are in 
abundance in modern 
civilization. The main objectives of this chapter are: 
l. To define a control system. 
2. To explain why control systems are important. 
3. To introduce the basic component s of a control system. 
4. To give some examples of control-system applications . 
5. To explain why feedback is incorporated into most control systems. 
6. To introduce types of control systems. 
One of the most commonly asked question s by a novice on a control system is: What is 
a control system? To answer the question, we can say that in our dai11 lives there are 
numerous "objectives" that need to be accomplished. For instance, in the domestic 
domain, we need to regulate the temperature and humidity of homes and buildings for 
comfortable living. For transportation, we need to control the automobile and airplane to go 
from one point to another accurately and safely. Industrially . manufacturing processes 
contain numerous objectives for products that will satisfy the precision and cost­
effectiveness requirements. A human being is capable of performing a wide range of 
tasks, including decision making. Some of these tasks, such as picking up objects and 
walking from one point to another, are commonly carried out in a routine fashion. Under 
certain conditions , some of these tasks are to be performed in the best possible way. For 
instance, an athlete running a 100-yard dash has the objective of running that distance in the 
shortest possible time. A marathon runner, on the other hand, not only must run the distance 
as quickly as possible, but, in doing so, he or she must control the consumption of energy 
and devise the best strategy for the race. The means of achieving these "objectives" usually 
involve the use of control systems that implement certain control strategies. 
In recent years, control systems have assumed an increasingly important role in the 
development and advancement of modern civilization and technology. Practically every 
aspect of our day-to-day activities is affected by some lype of wntrol system. Control 
systems are found in abundance in all sectors of industry, such as quality control of 
manufactured products, automatic assembly lines, machine-tool control, space technology 
and weapon systems, computer control, transportation systems, power systems, robotics, 
Micro-Electro-Mechanical Systems (MEMS), nanotechnology , and many others. Even the 
control of inventory and social and economic systems may be approached from the theory 
of automatic control. 
1 
2 Chapter 1. Introduction 
_O_b_1e_c_ti\J_·c_s _... CONTROL .--_R_e_st_1It_s_,. 
SYSTEM figure 1-1 Basic components of a control 
system. 
1-1-1 Basic Components of a Control System 
The basic ingredients of a control system can be described by: 
1. Objectives of control. 
2. Control-system components. 
3. Results or outputs. 
The basic relationship among these three components is illustrated in Fig. 1-l. In more 
technical terms, the objectives can be identified with inputs, or actuating signals, u, and 
the results are also called outputs, or controlled variables, y. In general, the objective 
of the control system is to control the outputs in some prescribed manner by the inputs 
through the elements of the control system. 
1-1-2 Examples of Control-System Applications 
Intelligent Systems 
Applications of control systems have significantly increased through the development 
of new materials, which provide unique opportunities for highly efficient actuation and 
sensing, thereby reducing energy losses and environmental impacts. State-of-the-art 
actuators and sensors may be implemented in virtually any system, including biological 
propulsion; locomotion; robotics; material handling; biomedical, surgical, and endoscopic; 
aeronautics; marine; and the defense and space industries. Potential applications of control 
of these systems may benefit the following areas: 
• Machine tools. Improve precision and increase productivity by controlling chatter. 
• Flexible robotics. Enable faster motion with greater accuracy. 
• Photolithography. Enable the manufacture of smaller microelectronic circuits by 
controlling vibration in the photolithography circuit-printing process. 
• Biomechanical and biomedical. Artificial muscles, drug delivery systems, and 
other assistive technologies. 
• Process control. For example, on/off shape control of solar reflectors or aero­
dynamic surfaces. 
Control in Virtual Prototyping and Hardware in the Loop 
The concept of virtual prototyping has become a widely used phenomenon in the 
automotive, aerospace, defense, and space industries. In all these areas, pressure to cut 
costs has forced manufacturers to design and test an entire system in a computer 
environment before a physical prototype is made. Design tools such as MATLAB and 
Simulink enable companies to design and test controllers for different components (e.g., 
suspension, ABS, steering, engines~ flight control mechanisms, landing gear, and special­
ized devices) within the system and examine the behavior of the control system on the 
virtual prototype in real time. This allows the designers to change or adjust controller 
parameters online before the actual hardware is developed. Hardware in the loop 
terminology is a new approach of testing individual components by attaching them to 
the virtual and controller prototypes. Here the physical controller hardware is interfaced 
with the computer and replaces its mathematical model within the computer! 
1-1 Introduction ~ 3 
Smart Transportation Systems 
The automobile and its evolution in the last two centuries is arguably the most transform­
ative invention of man. Over years innovations have made cars faster, stronger, and 
aesthetically appealing. We have grown to desire cars that are ""intelligent'' and provide 
maximum levels of comfort, safety, and fuel efficiency. Examples of intelligent systems in 
cars include climate control, cruise control, anti-lock brake systems (ABSs ), active 
suspensions that reduce vehicle vibration over rough terrain or improve stability. air 
springs that self-level the vehicle in high-G turns (in addition to providing a better ride), 
integrated vehicle dynamics that provide yaw control when the vehicle is either over-or 
understeering (by selectively activating the brakes to regain vehicle control), traction 
control systems to prevent spinning of wheels during acceleration, and active sway bars to 
provide "controlled" rolling of the vehicle. The following are a few examples. 
Drive-by-wire and Driver Assist Systems The new generations of intelligent vehicles 
will be able to understand the driving environment, know their whereabouts, monitor their 
health, understand the road signs, and monitor driver perlormance, even overriding drivers 
to avoid catastrophic accidents. These tasks require significant overhaul of current designs. 
Drive-by-wire technology replaces the traditional mechanical and hydraulic systems with 
electronics and control systems; using electromechanical actuators and human-machine 
interfaces such as pedal and steering feel emulators-otherwise known as haptic systems. 
Hence, the traditional components-such as the steering column, intermediate shafts, 
pumps, hoses, fluids. belts, coolers, brake boosters, and master cylinders-are eliminated 
from the vehicle. Haptic interfaces that can offer adequate transparency to the driver while 
maintaining safety and stability of the system. Removing the bulky mechanical steering 
wheel column and the rest of the steering system has clear advantages in tenns of mass 
reduction and safety in modern vehicles, along with improved ergonomics as a result of 
creating more driver space. Replacing the steering wheel with a haptic device that the 
driver controls through the sense of touch would be usefu1 in this regard. The haptic device 
would produce the same sense to the driver as the mechanical steering wheel but with 
improvements in cost. safety, and fuel consumption as a result of eliminating the bulky 
mechanical system. 
Driver assist systems help drivers to avoid or mitigate an accident by sensing the nature 
and significance of the danger. Depending on the significance and timing of the threat, 
these on-board safety systems will initially alert the driver as early as possible to an 
impending danger. Then, they will actively assist or, ultimately, intervene in order to avert 
the accident or mitigate its consequences. Provisions for automatic over~ride features when 
the driver loses control due to fatigue or lack of attention will be an important part of the 
system. In such systems, the so-called advanced vehicle control system monitors the 
longitudinal and lateral control, and by interacting with a central management unit, it will 
be ready to take control of the vehicle whenever the need arises. The system can be readily 
integrated with sensor networks that monitor every aspect of the conditions on the road and 
are prepared to take appropriate action in a safe manner. 
Integration and Utiliu,tion of Advanced Hybrid Powertrains Hybrid technologies offer 
improved fuel consumption while enhancing driving experience. Utilizing new energy 
storage and conversion technologies and integrating them with powertrains would be prime 
objectives of this research activity. Such technologies must be compatible with current 
platfonns and must enhance, rather than compromise, vehicle function. Sample applica­
tions would include developing plug-in hybrid technology. which would enhance the 
vehicle cruising distance based on using battery power alone, and utilizing sustainable 
4 ..-. Chapter 1. Introduction 
energy resources, such as solar and wind power, to charge the batteries. The smart plug-in 
vehicle can be a part of an integrated smart home and grid energy system of the futuret 
which would utilize smart energy metering devices for optimal use of grid energy by 
avoiding peak energy consumption hours. 
High Performance Real-time Control, Health Monitoring, and Diagnosis Modern 
vehicles utilize an increasing number of sensors, actuators. and networked embedded 
computers. The need for high performance computing would increase with the introduction 
of such revolutionary features as drive-by-wire systems into modern vehicles. The 
tremendous computational burden of processing sensory data into appropriate control 
and monitoring signals and diagnostic information creates challenges in the design of 
embedded computing technology. Towards this end, a related challenge is to incorporate 
sophisticated computational techniques that control, monitor. and diagnose complex 
automotive systems while meeting requirements such as low power consumption and 
cost effectiveness. 
The following represent more traditional applications of control that have become part 
of our daily lives. 
Steering Control of an Automobile 
As a simple example of the control system, as shown in Fig. 1-1, consider the steering 
control of an automobile. The direction of the two front wheels can be regarded as the 
controlled variable, or the output, y; the direction of the steering wheel is the actuating 
signal~ or the input, u. The control system. or process in this case, is composed of the 
steering mechanism and the dynamics of the entire automobile. However. if the objective is 
to control the speed of the automobile, then the amount of pressure exerted on the 
accelerator is the actuating signal, and the vehicle speed is the controlled variable. As a 
whole, we can regard the simplified automobile control system as one with two inputs 
(steering and accelerator) and two outputs (heading and speed). In this case, the two 
controls and two outputs are independent of each other, but there are systems for which the 
controls are coupled. Systems with more than one input and one output are called 
multivariable systems. 
ldle~Speed Control of an Automobile 
As another example of a control system, we consider the idle-speed control of an 
automobile engine. The objective of such a control system is to maintain the engine 
idle speed at a relatively low value (for fuel economy) regardless of the applied engine 
loads (e.g., transmission, power steering, air conditioning). Without the idle-speed control, 
any sudden engine .. Joad application would cause a drop in engine speed that might cause 
the engine to stall. Thus the main objectives of the idle~speed control system are ( 1) to 
eliminate or minimize the speed droop when engine loading is applied and (2) to maintain 
the engine idle speed at a desired value. Fig. 1-2 shows the block diagram of the idle-speed 
control system from the standpoint of inputs-system-outputs. In this case. the throttle 
angle a and the load torque h (due to the application of air conditioning, power steering. 
transmission. or power brakes. etc.) are the inputs, and the engine speed w is the output. The 
engine is the controlled process of the system. 
Sun-Tracking Control of Solar Collectors 
To achieve the goal of developing ec.:onomically feasible non-fossil-fuel electrical power, 
the U .S~ government has sponsored many organizations in research and development of 
solar power conversion methods, including the solar~cell conversion techniques. In most of 
IDLE­
SPEED 
CONTROL 
~TOR 
Load torque TL 
Throttle angle a ENGINE Engine speed w 1-1 Introduction 5 
Figure 1-2 Idle-speed 
control system. 
Figure 1-3 Solar collector field. 
these systems, the need for high efficiencies uicwLes Lhe use of devices for sun tracking. 
Fig. 1-3 shows a solar collector field. Fig. 1-4 shows a conceptual method of efficient water 
extraction using solar power. During the hours of daylight, the solar collector would 
produce electricity to pump water from the underground water table to a reservoir (perhaps 
on a nearby mountain or hill), and in the early morning hours, the water would be released 
into the irrigation system. 
One of the most important features of the solar collector is that the collector dish must 
track the sun accurately. Therefore, the movement of the collector dish must be controlled 
by sophisticated control systems. The block diagram of Fig. 1-5 describes the general 
philosophy of the sun-tracking system together wi.th some of the most important compo­
nents. The controller ensures that the tracking collector is pointed toward the sun in the 
morning and sends a "start track" command. The controller constantly calculates the sun's 
rate for the two axes (azimuth and elevation) of control during the day. The controller uses 
the sun rate and sun sensor infonnation as inputs to generate proper motor commands to 
s\ew the collector. 
1-1-3 Open-Loop Control Systems (Nonfeedback Systems) 
• Open-loop systems ,U"e 
economical but usually 
inaccurate. The idle-speed control system illustrated in Fig. 1-2, shown previously , is rather un­
sophisticated and is called an open-loop control system. It is not difficult to see that the 
system us shown would not satisfactorily fulfill critical performance requirements . For 
instance, if the throttle angle a is set at a certain initial value that correspond s to a certain 
6 Iii> Chapter 1. Introduction 
IRRIGATIO N 
..-?' 
WATER TABLE 
Figure 1-4 Conceptual method of efficient water extraction using solar power. 
· Sun's Rate 
()i -----------------~ Command 
SUN 
SENSOR e CONTROLLER Trim 
Rate /Motor Rate 
MOTOR 
DRIVER 
r Position 
Error 
Torque 
Disturbance T,1 
Figure 1-5 Important components of the sun-tracking control system. SPEED 
REDUCER 
engine speed, then when a load torque TL is applied, there is no way to prevent a drop in the 
engine speed. The only way to make the system work is to have a means of adjusting a in 
response to a change in the load torque in order to maintain r,, at the desired level. The 
conventional electric washing machine is another example of an open-loop control system 
because, typically, the amount of machine wash time is entirely determined by the 
judgment and estimation of the human operator. 
The elements of an open-loop control system can usually be divided into two parts: the 
controller and the controlled process, as shown by the block diagram of Fig. 1-6. An input 
signal, or command, r, is applied to the controller, whose output acts as the actuating signal 
u; the actuating signal then controls the controlled process so that the controlled variable y 
will perform according to some prescribed standards. In simple cases, the controller can be 
Reference 
input r Actuating ~----~ Controlled 
signal u CONTROLLED variable y 
CONTROLLER t----- -lM PROCESS 
Figure 1-6 Elements of an open-loop control system. 
1-1 Introduction ~ 7 
an amplifier, a mechanical linkage, a filter, or other control elements, depending on the 
nature of the system. In more sophisticated cases, the controller can be a computer such as a 
microprocessor . Because of the simplicity and economy of open-loop control systems, we 
find this type of system in many noncritical applications. 
1-1-4 Closed-Loop Control Systems (Feedback Control Systems) 
• Closed-loop systems have 
many advantages over open­
loop systems. What is missing in the open-loop control system for more accurate and more adaptive 
control is a link or feedback from the output to the input of the system. To obtain more 
accurate control, the controlled signal y should be fed back and compared with the 
reference input, and an actuating signal proportional to the difference of the input and the 
output must be sent through the system to correct the error. A system with one or more 
feedback paths such as that just described is called a closed-loop system. 
A closed-loop idle-speed control system is shown in Fig. 1-7. The reference input Wr 
sets the desired idling speed. The engine speed at idle should agree with the reference value 
cu,., and any difference such as the load torgue TL is sensed by the speed transducer and the 
error detector. The controller will operate on the difference and provide a signal to adjust 
the throttle angle a to correct the en-or. Fig. 1-8 compares the typical perfo1manc es of open­
loop and closed-loop idle-speed control systems. In Fig. l-8(a), the idle speed of the open­
loop system will drop and settle at a lower value after a load torque is applied. In Fig. 1-8 
(b), the idle speed of the closed-loop system is shown to recover quickly to the preset value 
after the application of TL. 
The objective of the idle-speed control system illustrated, also known as a regulator 
system, is to maintain the system output at a prescribed level. 
{JJ,. Error 
detector 
CONTROLLER J 
SPEED 
TRANSDUCER ENGINE 
Figure 1-7 Block diagram of a closed-loop idle-speed control system. (J) 
Desired 1 Application of T1., 
Desired 1 Application of T1, 
idle speed idle speed 
{JJ,. Time 
Time w,. 
(a) (b) 
Figure 1-8 (a) Typical response of the open-loop idle-speed control system. (b) Typical response of 
the closed-loop idle-speed conLrol system. 
8 Chapter 1. Introduction 
1-2 WHAT IS FEEDBACK, AND WHAT ARE ITS EFFECTS? 
• Feedback exists 
whenever there is a dosed 
sequence of causc-ancl­
effcct relationships. The motivation for using feedback , as ilI ustrated by the examples in Section 1-1. is 
somewhat oversimplified . In these examples, feedback is used to reduce the error between 
the reference input and the system output. However , the significance of the effects of 
feedback in control systems is more complex than is demonstrated by these simple 
examples. The reduction of system error is merely one of the many important effects 
that feedback may have upon a system. We show in the following sections that feedback 
also ti.as effects on such system performan ce characteristics as stability, bandwid th, 
overall gain, impedance , and sensitivity. 
To understand the effects of feedback on a control system, it is essential to examine 
this phenomenon in a broad sense. When feedback is deliberately introduced for the 
purpose of control, its existence is easily identified. However, there are numerous situations 
where a physical system that we recognize as an inherently nonfeedback system turns out 
to have feedback when it is observed in a certain manner. In general, we can state that 
whenever a closed sequence of cause-and-eff ect relationshi ps exists among the variables 
of a system, feedback is said to exist. Tms viewpoint will inevitably admit feedback in a 
large number of systems that ordinarily would be identified as nonfeedback systems. 
However , control-system theory allows numerous systems, with or without physical 
feedback , to be studied in a systematic way once the existence of feedback in the sense 
mentioned previously is established. 
We shall now investigate the effects of feedback on the various aspects of system 
performance. Without the necessary mathematical foundation of linear-system theory, at 
this point we can rely only on simple static-system notation for our discussion . Let us 
consider the simple feedback system configuration shown in Fig. 1-9, where r is the input 
signal; y, the output signal; e, the error; and b, the feedback signal. The parameters G and H 
may be considered as constant gains. By simple algebraic manipulations, it is simple to 
show that the input-output relation of the system is 
M=!_=_G __ 
r l +GH (1-1) 
Using this basic relationship of the feedback sys rem structure, we can uncover some of the 
significant effects of feedback . 
1-2-1 Effect of feedback on Overall Gain 
• Feedback may increase 
the gain of a system in one 
frequency nuige hut 
uccrease it in another. As seen from Eq. (1-1 ), feedback affects the gain G of a nonfeedback system by a factor of 
1 + GH. The system of Fig. 1-9 is said to have negative feedback, because a minus sign is 
assigned to the feedback signal. The quantity GH may itself include a minus sign, so the 
general effect offeedback is that it may increase or decrease the gain G. In a practical 
control system, G and Hare functions of frequency, so the magnitude of 1 + GH may be 
+ + + r e G y 
b 
+ -
H 
Figure 1-9 Feedback system. 
T-2 What Is Feedback, and What Are Its Effects? · 9 
greater than I in one frequency range but less than 1 in another. ThereforeJeedback could 
increase the gain of systen1 in one frequency range but decrease it in another. 
1-2-2 Effect of Feedback on Stability 
• A system is unstable if its Stability is a notion that describes whether the system will be able to follow the input 
output is out of control. command, that is, be useful in general. In a nonrigorous manner, a system is said to be 
unstable if its output is out of control. To investigate the effect of feedback on stability, we 
can again refer to the expression in Eq. (1-1). If GH = -l, the output of the system is 
infinite for any finite input, and the system is said to be unstable. Therefore, we may state 
that feedback can cause a system that is originally stable to become unstable. Certainly, 
feedback is a double-edged sword; when it is improperly used, it can be harmful. It should 
be pointed out, however, that we are only dealing with the static case here, and, in general, 
GH = -1 is not the only condition for instability. The subject of system stability will be 
treated formally in Chapters 2, 5, 7, and 8. 
• Feedback can improve 
stability or be harmful to 
stability. It can be demonstrated that one of the advantages of incorporating feedback is that it 
can stabilize an unstable system. Let us assume that the feedback system in Fig. 1-9 is 
unstable because GH = -1. If we introduce another feedback loop through a negative 
feedback gain of F, as shown in Fig. 1-l 0, the input-output relation of the overall system is 
y G 
r 1 + GH +GF ( 1-2) 
It is apparent that although the properties of G and H are such that the inner-loop 
feedback system is unstable, because GH = -1, the overall system can be stable by 
properly selecting the outer-loop feedback gain F. In practice, GH is a function of 
frequency , and the stability condition of the closed-loop system depends on the magnitude 
and phase of GH. The bottom line is that feedback can improve stability or be harmful to 
stability if ii is not pruperly applied. 
Sensitivity considerations often are important in the design of control systems. 
Because all physical elements have properties that change with environment and age, 
we cannot always consider the parameter s of a control system to be completely stationary 
over the entire operating life of the system. For instance, the winding resistance of an 
electric motor changes as the temperature of the motor rises during operation. Control 
systems with electric components may not operate normally when first turned on because 
+ -- - - + + -- -+ 
r e G y 
0---- b .........=--
+I --
I - -+ -
--- -
H 
---
----
F --
Figure 1-10 Feedback system with two feedback loops. 
10 ~ Chapter 1. Introduction 
• Note: Feedback can 
increase or decrease the 
sensitivity of a system. of the still-changing system parameters during warmup. This phenomenon is sometimes 
called "morning sickness." Most duplicating machines have a warmup period during 
which time operation is blocked out when first turned on. 
In general, a good control system should be very insensitive to parameter variations but 
sensitive to the input commands. We shall investigate what effect feedback has on 
sensitivity to parameter variations. Refe1Ting to the system in Fig. 1-9, we consider G 
to be a gain parameter that may vary. The sensitivity of the gain of the overall system M to 
the variation in G is defined as 
M fJM / M percentage change in M 
50 = oG/G = percentage change in G (l-3) 
where oM denotes the incremental change in M due to the incremental change in G, or 8G. 
By using Eq. (1-1 ), the sensitivity function is written 
8M G l 
s~ = oG M = 1 + G H ( 1-4) 
This relation shows that if GH is a positive constant, the magnitude of the sensitivity 
function can be made arbitrarily small by increasing GH, provided that the system remains 
stable. It is apparent that, in an open-loop system, the gain of the system will respond in a 
one-to-one fashion to the variation in G (i.e., S~ = 1). Again, in practice, GH is a function 
of frequency; the magnitude of 1 + CH may be less than unity over some frequency ranges, 
so feedback could be harmful to the sensitivity to parameter variations in certain cases. In 
general, the sensitivity of the system gain of a feedback system to parameter variations 
depends on where the parameter is located. The reader can derive the sensitivity of the 
system in Fig. 1-9 due to the variation of H. 
1-2-3 Effect of Feedback on External Disturbance or Noise 
• Feedback can reduce the 
effect of noise. All physical systems are subject to some types of extraneous signals or noise during 
operation. Examples of these signals are thermal-noise voltage in electronic circuits and 
brush or commutator noise in electric motors. External disturbances, such as wind gusts 
acting on an antenna, are also quite common in control systems. Therefore, control systems 
should be designed so that they are insensitive to noise and disturbances and sensitive to 
input commands . 
The effect of feedback on noise and disturbance depends greatly on where these 
extraneous signals occur in the system. No general conclusions can be reached, but in 
many situations, feedback can reduce the effect of noise and disturbance on system 
pe1formance. Let us refer to the system shown in Fig. 1-11, in which r denotes the command 
+ 
+ JI 
I --- -- + --+ + -- -+ 
r e a, e, e2 G2 y 
0--- b ---- --- - - - - --+ 
- ---
H 
,,. --
Figure 1-11 Feedback system with a noise signal. 
• Feedback also can affect 
bandwidth. impedance, 
transient responses, and 
frequency responses. 1-3 Types of Feedback Control Systems ~ 11 
signal and n is the noise signal. In the absence of feedback. that is. H = O. the output y due ton 
acting alone is 
(1-5) 
With the presence of feedback, the system output due ton acting alone is 
G2 y= n I +G1G2H (1-6) 
Comparing Eq. (1-6) with Eq. (1-5) shows that the noise component in the output of 
Eq. ( 1-6) is reduced by the factor 1 + G1 G2H if the latter is greater than unity and the 
system is kept stable. 
In Chapter 9, the feedforward and forward controller configurations are used along 
with feedback to reduce the effects of disturbance and noise inputs. In general, feedback 
also has effects on such performance characteristics as bandwidth, impedance, transient 
response, and frequency response. These effects will be explained as we continue . 
._ 1-3 TYPES OF FEEDBACK CONTROL SYSTEMS 
Feedback control systems may be classified in a number of ways, depending upon the 
purpose of the classification. For instance, according to the method of analysis and design, 
control systems are classified as linear or nonlinear. and time-varying or time-invariant 
According to the types of signal found in the system. reference is often made to 
continuous-data or discrete-data systems, and modulated or unmodulated systems. 
Control systems are often classified according to the main purpose of the system. For 
instance, a position-control system and a velocity-control system control the output 
variables just as the names imply. In Chapter 9, the type of control system is defined 
according to the form of the open-loop transfer function. In general, there are many other 
ways of identifying control systems according to some special features of the system. It is 
important to know some of the more common ways of classifying control systems before 
embarking on the analysis and design of these systems. 
1-3-1 Linear versus Nonlinear Control Systems 
• Most real-life control 
systems have nonlinear 
characteristics to some 
extent. This classification is made according to the methods of analysis and design. Strictly 
speaking, linear systems do not exist in practice, because all physical systems are nonlinear 
to some extent. Linear feedback control systems are idealized models fabricated by the 
analyst purely for the simplicity of analysis and design. When the magnitudes of signals in 
a control system are limited to ranges in which system components exhibit linear 
characteristics (i.e., the principle of superposition applies), the system is essentially linear. 
But when the magnitudes of signals are extended beyond the range of the linear operation, 
depending on the severity of the nonlinearity, the system should no longer be considered 
linear. For instance, amplifiers used in control systems often exhibit a saturation effect 
when their input signals become large; the magnetic field of a motor usua1Iy has saturation 
properties. Other common nonlinear effects found in control systems are the backlash or 
dead play between coupled gear members. nonlinear spring characteristics, nonlinear 
friction force or torque between moving members, and so on. Quite often, nonlinear 
characteristics are intentionally introduced in a control system to improve its performance 
12 • Chapter 1. Introduction 
• There arc no general 
methods for solving a wide 
class of nonlinear systems. or provide more effective control. For instance, to achieve minimum-time control, an on­
off (bang-bang or relay) type controller is used in many missile or spacecraft control 
systems. Typically in these systems, jets are mounted on the sides of the vehicle to provide 
reaction torque for attitude control. These jets are often controlled in a full-on or full-off 
fashion, so a fixed amount of air is applied from a given jet for a certain time period to 
control the attitude of the space vehicle. 
For linear systems, a wealth of analytical and graphical techniques is available for 
design and analysis purposes. A majority of the material in this text is devoted to the 
analysis and design of linear systems. Nonlinear systems, on the other hand, are usually 
difficult to treat mathematically, and there are no general methods available for solving a 
wide class of nonlinear systems. It is practical to first design the controller based on the 
linear-system. model by neglecting the nonlinearities of the system. The designed controller 
is then applied to the nonlinear system model for evaluation or redesign by computer 
simulation. The Virtual Lab introduced in Chapter 6 is mainly used to model the 
characteristics of practical systems with realistic physical components. 
1-3-2 Time-Invariant versus Time-Varying Systems 
When the parameters of a control system are stationary with respect to time during the 
operation of the system, the system is called a time-invariant system. In practice, most 
physical systems contain elements that drift or vary with time. For example, the winding 
resistance of an electric motor will vary when the motor is first being excited and its 
temperature is rising. Another example of a time~varying system is a guided-missile 
control system in which the mass of the missile decreases as the fuel on board is being 
consumed during flight. Although a time-varying system without nonlinearity is still a 
linear system., the analysis and design of this class of systems are usually much more 
complex than that of the linear time-invariant systems. 
Continuous-Data Control Systems 
A continuous-data system is one in which the signals at various parts of the system are all 
functions of the continuous time variable t. The signals in continuous-data systems may be 
further classified as ac or de. Unlike the general definitions of ac and de signals used in 
electrical engineering, ac and de control systems carry special significance in control 
systems terminology. When one refers to an ac control system, it usually means that the 
signals in the system are modulated by some form of modulation scheme. A de control 
system, on the other hand, simply implies that the signals are unmodulated, but they are 
still ac signals according to the conventional definition. The schematic diagram of a closed­
loop de control system is shown in Fig. 1-12. Typical waveforms of the signals in response 
to a step-function input are shown in the figure. Typical components of a de control system 
are potentiometers, de amplifiers, de motors, de tachometers, and so on. 
Figure 1-13 shows the schematic diagram of a typical ac control system that performs 
essentially the same task as the de system in Fig. 1-12. In this case, the signals in the system 
are modulated; that is, the information is transmitted by an ac carrier signal. Notice that the 
output controlled variable still behaves similarly to that of the de system. In this case, the 
modulated signals are demodulated by the low-pass characteristics of the ac motor. Ac 
control systems are used extensively in aircraft and missile control systems in which noise 
and disturbance often create problems. By using modulated ac control systems with carrier 
frequencies of 400 Ilz or higher, the system will be less susceptible to low-frequency noise. 
Typical components of an ac control system are synchros, ac amplifiers, ac motors, 
gyroscopes, accelerometers, and so on. 
0 Synchro 
transmitter 1-3 Types of Feedback Control Systems 13 
Reference 
input 
0 + + 
e DC 
AMPLIAER 
+ 
-=-E 
Error 
detector + 
+ 
e,. 
0 e,. GEAR 
BOX 
Controlled 
variable 
Figure 1-12 Schematic diagram of a typical de closed-loop system. 
Synchro 
control 
transfonner 
AC 
AMPLIFIER L:r 
GEAR 
BOX 
Figure 1-13 Schematic diagram of a Lypical ac closed-loop control system. e,. 
LOAD 
e,. 
LOAD 
In practice, not all control systems are strictly of the ac or de type. A system may 
incorporate a mixture of ac and de components, using modulator s and demodulators to 
match the signals at various points in the system. 
Discrete-Data Control Systems 
Discrete-data control systems differ from the continuous-data systems in that the signals at 
one or more points of the system are in the form of either a pulse train or a digital code. 
Usually, discrete-data control systems are subdivided into sampled-data and digital 
control systems. Sampled-data control systems refer to a more general class of 
14 .. Chapter 1. Introduction 
• Digital control systems 
an.: usually less susceptible 
to noise. 
1-4 SUMMARY e*(i) y(1) DATA 
HOLD 
(FILTER) h(r) CONTROLLED 
PROCESS ,-----.--
Figure 1-14 Block diagram of a sampled-data control system. 
Digital 
coded 
input DIGITAL 
COMPUTER DIGITAL- TO· 
ANALOG 
CONVERTER 
ANALOG-TO­
DIGITAL 
CONVERTER SENSORS 
Figure 1-15 Digital autopilot system for a guided missile. AIRFRAME Attitude 
of 
missile 
discrete-data systems in which the signals are in the form of pulse data. A digital control 
system refers to the use of a digital computer or controller in the system so that the signals 
are digitally coded, such as in binary code. 
In general, a sampled-dat a system receives data or information only intermittently at 
specific instants of time. For example, the error signal in a control system can be supplied 
only in the form of pulses, in which case the control system receives no information about 
the error signal during the periods between two consecutive pulses. Strictly, a sampled-da ta 
system can also be classified as an ac system, because the signal of the system is pulse 
modulated. 
Figure 1-14 illustrates how a typical sampled-data system operates. A continuous-data 
input signal r(t) is applied to the system. The error signal e(t) is sampled by a sampling 
device, the sampler, and the output of the sampler is a sequence of pulses. The sampling 
rate of the sampler may or may not be uniform. There are many advantages to incorporating 
sampling into a control system. One important advantage is that expensive equipment used 
in the system may be time-shared among several control channels. Another advantage is 
that pulse data are usually less susceptib le to noise. 
Because digital computers provide many advantages in size and flexibility , computer 
control has become increasingly popular in recent years. Many airborne systems contain 
digital controllers that can pack thousands of discrete elements into a space no larger than 
the size of this book. Figure 1-15 shows the basic elements of a digital autopilot for guided­
missile control. 
In this chapter, we introduced some of the basic concepts of what a control system is and what it is 
supposed to accomplish . The basic components of a control system were described . By demonstrat­
ing the effects offeedback in a rudimentary way, the question of why most control systems are closed­
loop systems was also clarified. Most important , it was pointed out that feedback is a double-edged 
sword-it can benefit as well as h,mn the system to be controlled . This is part of the challenging task 
of designing a control system, which involves consideration of such performance criteria as stability, 
Review Questions ~ 15 
sensitivity, bandwidth. and accuracy. Finally, various types of control systems were categorized 
according to the system signals, linearity. and control objectives. Several typical control-system 
examples were given to illustrate the analysis and design of control systems. Most systems 
encountered in real life are nonlinear and time-varying to some extent. Tlu:: cu11ctmlratiun on the 
studie..o;; of linear systems is due primarily to the availability of unified and simple-to-understand 
analytical methods in the analysis and design of linear systems. 
~ REVIEW QUESTIONS 
1. List the advantages and disadvantages of an open-loop system. 
2. List the advantages and disadvantages of a closed-loop system. 
3. Give the definitions of ac and de control systems. 
4. Give the advantages of a digital control system over a continuous-data control system. 
5. A closed-loop control system is usually more accurate than an open-loop system. (T) (F) 
6. Feedback is sometimes used to improve the sensitivity of a conttol system. (T) (F) 
7. If an open-loop system is unstable. then applying feedback will always improve 
its stability. (T) (F) 
8. Feedback can increase the gain of a system in one frequency range but decrease 
it in another. (T) (F) 
9. Nonlinear elements are sometimes intentionally introduced to a control system 
to improve its performance. (T) (F) 
10. Discrete-data conlrol systems are more susceptible to noise due to the nature of 
their signals. (T) (F) 
Answers to these review questions can be found on this book's companion Web site: 
www.wiley.com/college/golnaraghi. 
CHAPTER 2 
Mathematical Foundation 
The studies of control systems rely to a great extent on applied mathematics. One of the 
major purposes of control-system studies is to develop a set of analytical tools so that the 
designer can arrive with reasonably predictable and reliable designs without depending 
solely on the drudgery of experimentation or extensive computer simulation. 
In this chapter, it is assumed that the reader has some level of familiarity with these 
concepts 1hrough earlier courses. Elementary matrix algebra is covered in Appendix A. 
Because of space limitations, as well as the fact that most subjects are considered as review 
material for the reader, the treatment of these mathematical subjects is not exhaustive. The 
reader who wishes to conduct an in-depth study of any of these subjects should refer to 
books thac are devoted to them. 
The main objectives of this chapter are: 
1. To introduce the fundnmentals of complex va1iables. 
2. To introduce frequency domain analysis m1d frequency plots. 
3. To introduce differential equations and state space systems. 
4. To introduce the fundamentals of Laplace transforms. 
5. To demonstrate the applications of Laplace transforms to solve linear ordinary 
differentia l equations. 
6. To introduce the concept of transfer functions and how to apply them to the 
modeling of linear time-invariant systems. 
7. To discuss stability of linear time-invariant systems and the Routh-Hurwitz 
criterion. 
8. To demonstrate the MATLAB tools using case studies. 
2-1 COMPLEX-VARIABLE CONCEPT 
To underscand complex variables, it is wise to start with the concept of complex numbers 
and their mathematical properties. 
2-1-1 Complex Numbers 
16 A complex number is represented in rectangular form as 
Z = X + jy (2-1) 
where, j = ·J=T and (x, y) are real and imaginary coefficients of= respectively. We can 
treat (x, y) as a point in the Cartesian coordinate frame shown in Fig. 2-1. A point in a 
2-1 ComplexwVariable Concept ~ 17 
Imaginary 
R 
I 
I 
I 
\,. I s-plane 
z=x+jy 
R '·-' ----~ z*=x-jy 
Figure 2-1 Complex number z 
representation. in rectangular and polar 
forms. 
rectangular coordinate frame may also be defined by a vector Rand an angle e. It is then 
easy to see that 
where. 
R = magnitude of z x = Reos() 
y = RsinO (2-2) 
()=phase of z and is measured from the x axis. Right-hand rule convention: 
positive phase is in counter clockwise direction. 
Hence, 
R=Jx2+y2 
9=tan-1~ 
X 
Introducing Eq. (2-2) into Eq. (2-1), we get 
z = Rcos9 + jRsine 
Upon comparison of Taylor series of the terms involved. it is easy to confirm (2-3) 
(2-4) 
ejB = COS O + j sin() (2-5) 
Eq. (2-5) is also known as the Euler formula. As a result, Eq. (2-1) may also be represented 
in polar form as 
z = Rej9 = R LB (2-6) 
We define the conjugate of the complex number z in Eq. (2-1) as 
Or, alternatively, z* =x-jy (2-7) 
z* = R cos() -j R sin() = R e-i9 (2-8) 
Note: 
zz* = R2 = i1-+ y2 (2-9) 
Table 2-1 shows basic mathematical properties of complex numbers. 
18 t,· Chapter 2. Mathematical Foundation 
TABLE 2-1 Basic Properties of Complex Numbers 
Addition 
Subtraction 
Multiplimtion 
Division 
EXAMPLE 2-1-1 Find/ and/4. {ZI =X1 + jy1 
z2 = x2 + Jyz 
--+ z = (xi+ x2) + j(y1 + )'2) 
{ Zl = .t1 + 1:v1 
z2 = .t2 + JY2 
--+ Z:::: (.t1 -x2) + j(y, -Y2) 
{Zl = x, + iYt 
z2 = x2 + iY2 
--+ z = (x1x2 -Y1.V2) + j(x1Y2 + x2.v1) f = -1 
{Zl = XJ + ~YI 
z2 = .t2 + JY2 
{ zi = X1 -}YI 
* . Comple.t Conjugate 
z2 = x2 -JY2 
z, -z=-
z2 
. -,---.l Jr • • rr ,·:r J = v -1 = cos 2 + J sm2 = e ~ 
j3 = vCt J=iv-T = -vCT = -j 
.3 1·~ -1·1! r=ez=e 2 
/=J3J=-i=l 
L,-EXAMPLE 2-1"2 Find z" using Eq. (2-6). 
2-1-2 Complex Variables -z = R, ejf:/1 -R2ef f12 
{ z1 = RiePh 
z2 = R2efH2 
-z = (R1Rz)ei(B1+B2) 
--+z= (R1R2)L(81 +82) 
--+z= (::)ei((h-02) 
--+ z = (::) I (01 -82) 
(2-10) 
A complex variable s has two components: a real component a and an imaginary 
component w. Graphically, the real component of s is represented by a cr axis in the 
horizontal direction, and the imaginary component is measured along the vertical jw 
axis, in the complex s-planc. Fig. 2-2 illustrates the complex s-plane, in which any 
arbitrary point s = s1 is defined by the coordinates a = a1, and w = w1, or simply 
s1 = a1 + jw1. 
2-1 Complex~Variable Concept . 19 
j{)) 
Figure 2-2 Complex s-plane. 
2-1-3 Functions of a Complex Variable 
The function G(s) is said to be a function of the complex. variable s if. for every value of s. 
there is one or more corresponding values of G(s). Because sis defined to have real and 
imaginary parts, the function G(s) is also represented by its real and imaginary parts; that is. 
G(s) = Re[G(s)] + j lrn[G(s)) (2-11) 
where Re[G(s)] denotes the real part of G(s), and Im[G(s)] represents the imaginary part of 
G(s). The function G(s) is also represented by the complex G(s)-plane, with Re[G(s)] as the 
real axis and Im[G(s}] as the imaginary axis. If for every value of s there is only one 
corresponding value of G(s) in the G(s)-plane, G(s) is said to be a sing(e .. valued function. 
and the mapping from points in the s-plane onto points in the G(s)-plane is described as 
singte .. nlued (Fig. 2-3 ). If the mapping from the G(s)-plane to the s-plane is a]so single­
valued, the mapping is called one-to .. one. However~ there are many functions for which the 
mapping from the function plane to the complex-variable plane is not single-valued. For 
instance, given the function 
j(J) 
s-plane W1 -----~------
0 I 
G(s) = s(s + I) 
j lmG 
G(s)-plane 
ReG 
' ... I 
- --:_ ..._ _ _.. G(s1) 
Figure 2-3 Single-valued mapping from the s-plane to the G(s)-plane. (2-12) 
20 t,-Chapter 2. Mathematical Foundation 
it is apparent that, for each value of s, there is only one unique corresponding value for G(s). 
However, the inverse mapping is not true; for instance, the point G(s) = oo is mapped onto 
two points, s = 0 and s = -1. in the s-plane. 
2-1-4 Analytic Function 
A function G(s) of the complex variables is called an analyticfunctionin a region of the s­
plane if the function and all its detivatives exist in the region. For instance, the function 
given in Eq. (2-12) is analytic at every point in the s-plane except at the points s = 0 and 
s = -1. At these two points, the value of the function is infinite. As another example, the 
function G(s) = s + 2 is analytic at every point in the finites-plane. 
2-1-5 Singularities and Poles of a Function 
The singularities of a function are the points in the s-plane at which the function or its 
derivatives do not exist. A pole is the most common type of singularity and plays a very 
important role in the studies of classical control theory. 
The definition of a pole can be stated as: If a function G(s) is analytic and single .. 
valued in the neighborhood of point Pi, it is said to have a pole of order r at s = Pi if the 
limit Jim [(s -Pi(G(s)] has ajinite, nonzero value. In other words, the denominator of 
S-+ Pi 
G(s) must include the factor (s -p;y, so when s = p;. the function becomes infinite. 
If r = I, the pole at s = Pi is called a simple pole. As an example, the function 
G(s) = lO(s + 2) 
s(s + l)(s + 3)2 (2-13) 
has a pole of order 2 at s = -3 and simple poles at s == 0 ands = -1. It can also be said that 
the function G(s) is analytic in the s-plane except at these poles. See Fig. 2-4 for the 
graphical representation of the finite poles of the system. 
2-1-6 Zeros of a Function 
The definition of a zero of a function can be stated as: If the function G(s) is analytic at 
s = Zi, it is said to have a zero of order rats= Zi if the limit lim [(s -Zi)-rG(s)J has a s _. Z; 
finite. nonzero value. Or, simply, G(s) lzas a zero of order rats = Zi if 1 /G(s) has an rth-
order pole at s = Zi. For example, the function in Eq. (2-13) has a simple zero at s = -2. 
If the function under consideration is a rational function of s. that is, a quotient of two 
polynomials of s. the total number of poles equals the total number of zeros, counting the 
multiple-order poles and zeros and taking into account the poles and zeros at infinity. 
The function in Eq. (2-13) has four finite poles at s = 0, -l, -3, and -3; there is one 
finite zero at s = -2, but there are three zeros at infinity, because 
lim G(s) = Inn 1? = O s ---. -::,o s ..... oo s· (2-14) 
Therefore. the function has a total of four poles and four zeros in the entire s-plane, 
including infinity. See Fig. 2-4 for the graphical representation of the finite zeros of the 
system. 
jro 
-3 -2 -1 0 1 2 
Toolbox 2.1 .. 1 
For Eq. (2-13), use "zpk'' to create 
zero-pole-gain models by the following 
sequence of MATLAB functions 
>> G = zpk( [-2], [O -1 -3 -3], 10) 
Zero/pole/gain: 
10(s+2) 
s(s+l)(s+3)"2 
Convert the transfer function to 
polynomial fonn 
»Gp= tf(G) 
Transfer function: 
10 s + 20 
s"4 + 7 s"S + 15 s112 + 9 s 
Use "polen and "zero" to obtain the poles 
and zeros of the transfer function 
» pole(Gp) 
ans= 
0 
-1 
-3 
-3 
>> zero(Gp) 
ans= 
-2 s-plane 2-1 Complex-Variable Concept • 21 
Figure 2-4 GraphicaJ representation of G(s) = 
IO(.s+l) in the s-plane: x poles and O zeros. 
s(s+ 1 )(s+3)2 
Alternatively use: 
>> clear all 
>> s = tf(' s'); 
>>Gp= lO*(S + 2)/(s*(s + l)*(S + 3)"2) 
Transfer function: 
10 s + 20 
Convert the transfer function Gp to 
zero .. pole-gain form 
>> Gzpk ~ zpk(Gp) 
Zero/pole/gain: 
10 Cs+ 2) 
s(s+3)"2(s+1) 
22 Chapte r 2. Mathematica l Foundatio n 
2-1-7 Pola r Representatio n 
To find the pola r representatio n of G(s)  in Eq. (2-12 ) at s — 2j, we loo k at individua l 
components . Tha t is 
G(s) = 1 
s
 = 2j = Re
j0
 = 2e
j%
-
s +
 1
 - 2j +
 1
 = R e
j$ 
R = ^2
2
-f
 1
 = \/5 
1 0 = tan"
1
 - = 0.4 6 rad{-  26.57
c 
1 1 
G{2j)
=2J(2jTT)
 =  l
2
e
 v5
' 
1
 _,V - ,.,
 ,, \-
2\/5 
See Fig . 2-5 for a graphica l representatio n of s\ = 2./ + 1 in the .v-plane . (2-15 ) 
(2-16 ) 
(2-17 ) 
EXAMPL E 2-1- 3 Fin d the pola r representatio n of G{s)  give n belo w for
 „v
 = jco,  wher e
 co
 is a constan t varyin g from 
zero to infinity . 
16 1 6 
GW
 .v
2
 + 10.v+1 6 (,v + 2)(.v + 8) 
To evaluat e Eq. (2-18 ) at s = jco,  we look at individua l components . Thus , 
jco+  2= \/2
2
 +
 co
2
 «?#' 
co
 = R\
 sin
 c\>\ 
2 =
 R\co$<p\ 
JO) 
R =
 \/\+2
2 
R
{
 = \/2
2
 +
 co
2 
0,= tan — 
.s-plan e 
5,
 =
 1
 +J2 
)=tan-'(2-18 ) 
(2-19 ) 
(2-20 ) 
(2-21 ) 
(2-22 ) 
(2-23 ) 
Figur e 2-5 Graphica l representatio n of 
S\ = 2j + I in the .v-plane . 
2
11.11 63.43
1  -

2-1 Complex-Variable Concept • 23 
j(J) 
-1 ((1 tJ,1 =tan ~ 2 s-plane 
O' 
Figure 2-6 Graphical representation of 
components of l . .,w .. SJ WJ+~ WJ-Y-
jw + 2 = R1 (jsin <f,1 + cos <f,i) 
jw + 2 = R1eitP, 
jltJ + 8 = vs2 + w2eftth 
-t w/R2 
t/>2 = tan S/R2 
16 = 16e11 
. f 16 See Fig. 2-6 for a graphical representation of components o ( wj + 2)( wj + S) 
Hence. 
1 
jw + 2 = )22 + iJl-e»r 
--= ---,--==~-
jw + 8 Jg2 + w2 eJth 
As a result. G(s = jOJ) becomes: 
G(jc,;) = ., !6 ., e-J(tf,,+t/Ji) = JG(jw)[ejtP 
../2~ + W'" ../82 + W"" 
where 
R-G(aJ) -}G(1'w)l ----::::==l6=== - - - v(w2+4)(w 2+64) 
Similarly, we can define 
-I Im G(jw) . 
<f, = tan . = LG(s = 1w) = -<P1 -¢>, ReG(Jw) ~ (2-24) 
(2-25) 
(2-26) 
(2-27) 
(2-28) 
(2-29) 
(2-30) 
(2-32) 
Table 2-2 describes different R and <P values as lu changes. As shown, the magnitude decreases as 
the frequency increases. The phase goes from 0° to -180°. 
24 • Chapter 2. Mathematical Foundation 
TABLE 2-2 Numerical Values of Sample Magnitude and Phase of the 
System in Example 2-1-3 
wrad/s R ¢ 
0.1 0.999 -3.58 
1 0.888 -33.69 
IO 0.123 --130.03 
100 0.0016 -174.28 
Alternative Approach: If we multiply both numerator and denominator of Eq. (2-18) by the 
I . f h d . . ( - jw + 2)( -jw + 8) 1 comp ex conJugate o t e enommator. 1.e. ( . 2)( . S) = . we get -Jw+ -JW + 
G( 'w) = 16(-jw + 2)(-jw + 8) 
J (w2 + z2)(w2 + 82) 
= (w2 +4)\~ + 64) [(16 -t.v2) -jIOw] 
= Real + Imaginary 
= I6V(I6 -w2)2+(10w)2 ei4' 
(a>2 + 4)(w2 + 64) 
16 ',I, = el'I' 
J(wl + 4)(w2 + 64) 
= Rei¢ 
_ _1 -Ww/R Im(G(jw)) 
where</> -tan (16 -w2)/R Re(G(jw)) (2-33) 
See Fig. 2-7 for a graphical representation of . . 2;~ . 8) for a fixed value of w. 
(WJ + WJ + 
So as you have noticed, the frequency response can be determined graphically. Consider the 
following second order system: 
K 
G(s) = -(s_+_p_i_)(_s +-p-2) 
jID 
,,,.-~, ¢ , ' 
I \ 
_ • _ _1 -lOm/R 
q)-LG(JW- tan 06 _ a,?)/R 
16 R=--;::===== V(©2 I· 4)(co2+ 64) er 
Figure 2-7 Graphical representation of ( . 2~f . for a fixed value of w. WJ+ WJ+8} (2-34) 
Toolbox 2-1-2 
Here are MATLAB commands to treat complex variables: 
Z == complex (a, b) 
creates a complex output, Z, from the two real inputs Z =a+ bi 
ZC = conj CZ) 
returns the complex. conjugate of the elements of Z 
X == real CZ) 
returns the real part of the elements of the complex array Z 
Y= imag CZ) 
returns the imaginary part of the elements of array Z 
R == abs (Z) 
returns the complex modulus (magnitude), which is the same as 
R = sqrt(real(Z). "2 + imag(Z). 1\2) 
theta= angle(Z) 
returns the phase angles, in radians, for each element of complex array Z 
The angles lie between the "real axis0 in the s-plane and the magnitude R 
Z = R. *exp(i*theta) 
converts back to the original complex Z 
>> Z = complex(3, 2) 
Z= 
3. 0000 + 2. OOOOi 
» ZC = conj CZ) 
ZC== 
3. 0000 -2. OOOOi 
>> R = abs(Z) 
R= 
3.6056 
>>theta= angle(Z) 
theta= 
0.5880 
>> ZRT = R. *exp(i*theta) 
ZRT= 
3. 0000 + 2. OOOOi 2-1 Complex-Variable Concept <11111 25 
26 Chapter 2. Mathematical Foundation 
where (-p1) and (-pz) are poles of the function G(s). By definition. ifs = jw. G(jctJ) is the frequency 
response function of G(s). because w has a unit of frequency (rad/s): 
K G(s) = . (2-35) (Jw + pi)( }w + JJ2) 
The magnitude of G( jw) is 
R = JG(j£u)I = . . K . I JW + p 111 JW + P2 I 
and the phase angle of G( jw) is 
¢, = I G( j(d) = I K -I ja> + Pt · -I jw + P2. 
= -¢1 -¢2 
For the general· case, where 
m 
~)s+zk) 
G(s) = K _k::-1---
I)s + JJi) 
i=I 
The magnitude and phase of G(s) are as follows 
2-2 FREQUENCY-DOMAIN PLOTS R= IG(jw)I =K Uw+z1]···l}w+z111[ 
IJw + Pd··· IJw + Pnl 
¢=I G(jw) = (l/11 + · · · + 1/lnJ -(cf,1 + · · · + cf,n) (2-36) 
(2-37) 
(2-38) 
(2-39) 
Let G(s) be the forward-path transfer function1 of a linear control system with unity 
feedback. The frequency-domain analysis of the closed-loop system can be conducted 
from the frequency-domain plots of G(s) with s replaced by j(J). 
The function G( jw) is generally a complex function of the frequency w and can be 
written as 
G(jw) = IG(jw)ILG(j(J)) (2-40) 
where IG(jw)I denotes the magnitude of G(jw), and /G(jw) is the phase of G{jw). 
The following frequency-domain plots of G( jw) versus w are often used in the 
analysis and design of linear control systems in the frequency domain. 
1. Polar plot. A plot of the magnitude versus phase in the polar coordinates as ads 
varied from zero to infinity 
2. Bode plot. A plot of the magnitude in decibels versus w (or log10w) in semilog 
(or rectangular) coordinates 
3. Magnitude-phase plot. A plot of the magnitude (in decibels) versus the phase on 
rectangular coordinates. with cv as a variable parameter on the curve 
2 .. 2 .. 1 Computer-Aided Construction of the Frequency-Domain Plots 
The data for the plotting of the fre{)uency-domain plots are usually quite time consuming to 
generate if the computation is carried out manually. especially if the function is of high 
order. In this textbook, we use MATLAB and the ACSYS software for this purpose. 
1 For the formal definition of a .. transfer function," refer to Section 2-7-2. 
2-2-2 Polar Plots 2-2 Frequency-Domain Plots ~ 27 
jaJ jlmG 
s-plane -j(O:, G(iCt.1)-plane 
-j~ 
jro1 
0 (j ReG 
Figure 2-8 Polar plot shown as a mapping of the positive half of the jw-axis in the s-plane onto 
the G(jw )-plane. 
From an analytical standpoint, the analyst and designer should be familiar with the 
properties of the frequency .. domain plots so that proper interpretations can be made on 
these computer-generated plots. 
The polar plot of a function of the complex variable s, G(s), is a plot of the magnitude of 
G( jw) versus the phase of G( jw) on polar coordinates as w is varied from zero to infinity. 
From a mathematical viewpoint, the process can be regarded as the mapping of the positive 
half of the imaginary axis of the s-plane onto the G( jw)-plane. A simple example of this 
mapping is shown in Fig. 2-8. For any frequency w = wi. the magnitude and phase of 
G(jwi) are represented by a vector in the G(jw)-plane. In measuring the phase., 
counterclockwise is referred to as positive, and clockwise is negative. 
EXAMPLE 2-2-1 To illustrate the construction of the polar plot of a function G(s), consider the function 
1 G(s) =-- (2-41) 1 + T.Y 
where T is a positive constant. Setting s = jw, we have 
G(jw) = 1 1 _ T + JW 
In terms of magnitude and phase, Eq. (2-42) is rewritten as 
G(jw) = 1 L -tan-1 wT JI + w2T2 (2-43) 
When w is zero, the magnitude of G( jw) is unity, and the phase of G( jw) is at 0°. Thus. at w = 0, 
G( jw) is represented by a vector of unit length directed in the 0° direction. As w increases, the 
magnitude of G( jw) decreases, and the phase becomes more negative. As w increases, the length of 
the vector in the polar coordinates decreases and the vector rotates in the clockwise (negative) 
direction. When w approaches infinity, the magnitude of G( jw) becomes zero, and the phase reaches 
-90°. This is presented by a vector with an infinitesimally small length directed along the -90°-axis 
in the G( jw )wplane. By substituting other finite values of w into Eq. (2-43). the exact plot of G( jro) 
turns out to be a semicircle, as shown in Fig. 2-9. 
28 ~ Chapter 2. Mathematical Foundation 
jlmG 
(0-+ cc m=O 
0 
Figure 2M9 Polar plot of G(jw) = (t+}wT)' 
.-EXAMPLE 2-2-2 As a second illustrative example, consider the function 
G( ·w) = 1 + jwTz 
J 1 + jwT1 (2-44) 
where T1 and T2 arc positive real constants. Eq. (2-44) is re-written as 
G( jw) = 1 + aiT.2 --2--=~ L{tan-1 wT2 -tan-1 roT1) 
1 + w T1 
The polar plot of G( jw }, in this case, depends on the relative magnitudes of T1 and T2. If T2 is greater 
than Ti, the magnitude of G(jw) is always greater than unity as liJ is varied from zero to infinity, and 
the phase of G( jliJ) is always positive. If T2 is less than T1 ~ the magnitude of G( jw) is always less than 
unity, and the phase is always negative. The polar plots of G( jw) of Eq. (2~45) that correspond to 
these two conditions are shown in Fig. 2-10. 
The general shape of the polar plot of a function G( jw) can be determined from the following 
information. 
1. The behavior of the magnitude and phase of G( jw) at w = 0 and w = oo. 
2. The intersections of the polar plot with the real and imaginary axes, and the values of w at 
these intersections 
jlmG GUro)•plane 
ReG 
. (1 + jwTz) 
Figure 2-10 Polar plots of G( JW) = (l + jwTi )' 
2-2 Frequency-Domain Plots ·1: 29 
Toolbox 2-2-1 
The Nyquist diagram for Eq. (2~44) for two cases is obtained by the following sequence of MATLAB 
functions: 
Tl= 10; 
T2 = 5; 
numl = [T2 lJ ; 
den1 = [Tl 1]; 
Gl = tf(numl,denl); 
nyquist(Gl); 
hold on; 
num2 = [Tl 1]; 
den2 = [T2 1] ; 
G2 = tf (num2 , den2) ; 
nyquist (G2); 
title ( 1 Nyquist diagram of Gl and G2' ) 
Note: The .. nyquist' 'Jimction provides a complete polar diagram. where w is varying from -oo to+ ex:. 
Nyquist diagram of 01 and G2 
0.4 
0.3 
0.2 
"' 0.1 
~ 
~ 0 
.!ii 
i1 
.§ -0.1 
-0.2 
-0.3 
-0.4 
-0.5 .._ ___ ___._ ____ ---'-____ ............ ____ ...._ __ ~_-:;;;., ___ _,_j 
-1 -0.5 0 0.5 1.5 2 
Comparing the results in Toolbox 2-2-1 and Fig. 2-10, it is clear that the polar plot reflects only a 
portion of the Nyquist diagram. In many control-system applications. such as the Nyquist stability 
criterion (see Chapter 8). an exact plot of the frequency response is not essential. Often. a rough 
sketch of the polar plot of the transfer function is adequate for stability analysis in the frequency 
domain. 
30 • Chapter 2. Mathematical Foundation 
/.. EXAMPLE 2-2-3 In frequency-domain analyses of control systems. often we have to determine the basic properties of a 
polar plot. Consider the following transfer function: 
JO 
G(s) = s(s + 1) (2-46) 
By substituting s = jw in Eq. (2-46). the magnitude and phac;e of G( jw) at w = 0 and w = oo are 
computed as follows: 
Jim IG( jw)I = lim 10 = oo 
w--+O w--->O W 
lim LG(jw) = lim LIO/ jw = -90° , ...... o w-o 
lim JG( jw)I = lim 1~ = O w -+ oo w .... oo w~ 
lim LG(jw) = lim L10/(jw)2= -180° w-• OC W-+OC (2-47) 
(2-48) 
(2-49) 
(2-50) 
Thus, the properties of the polar plot of G( jw) at w = 0 and w = oo are ascertained.Next, we determine 
the intersections, ifany, of the polar plot with the two axes of the G( jcv }-plane. Ifthe polar plot of G( jcv) 
intersects the real axis, at the point of intersection. the imaginary part of G( jw) is zero; that is, 
Im[G( j<v}] = 0 (2-51) 
To express G( jw) as the sum of its real and imaginary parts, we must rationalize G( jw) by multi­
plying its numerator and denominator by the complex conjugate of its denominator. Therefore. 
G(jtu) is written 
G . _ 10(-jw)(-jw + I) _ -IOw2 _ • lOro 
( JlV) -jw(jw + 1 )( -jw )( -j(() + l) -w4 + w2 1 w4 + w2 (2-52) 
= Re[G(jcv)] + jlmIG( jw)J 
When we set Irn[G( jcv )] to zero, we get w = oo, meaning that the G( jw) plot intersects only with the 
real axis of the G( jw )-plane at the origin. 
Similarly, the intersection of G(jcv) with the imaginary axis is found by setting Re[G(jcv)] of 
Eq. (2~52) to zero. The only real solution for w is also w = oo. which corresponds to the origin of the 
G( jw )-plane. The conclusion is that the polar plot of G( j(u) does not intersect any one of the axes at 
any finite nonzero frequency. Under certain conditions, we are interested in the properties of the 
G(jw) at infinity. which corresponds to cv = 0 in this case. From Eq. (2-52), we see that Im(G( jw)J = 
oo and Re [G( jw)] = -10 at w = 0. Based on this information as well as knowledge of the angles of 
G( j<u) at ltJ ::::: 0 and w = oo, the polar plot of G( jro) is easily sketched without actual plotting, as 
shown in Fig. 2-11. 
GUro)-plane jlmG 
-10 0 ReG 
Figure 2-11 Polar plot of G(s) = .~(l~ir 
-~ 
2-2 Frequency-Domain Plots • 31 
,-. EXAMPLE 2-2-4 Given the transfer function 
G(s) = 10 
s(s + 1 )(s + 2) (2-53) 
we want to make a rough sketch of the polar plot of G( jw ). The following calculations are made for 
the properties of the magnitude and phase of G(jw) at <v == 0 and cu= oo: 
lirn IG(jw}I = Iirn ~;;;::: oo (2-54) 
w-+O w-+OW 
Iim !G(jw) = lint 15 / jw = -90° w-o w-o (2-55) 
Hm IG(jw)\ = lim 1~ = 0 w-+x w-+oow· (2-56) 
To find the intersections of the G( jw) plot on the real and imaginary axes of the G( jcv )-plane, we 
rationalize G(j(J)) to give 
G . ) = 10(-jw)(-jw+ 1)(-jw+2) 
( JW j(J)(jw + I)( jw + 2) ( -jw )( -jw + I) ( -jw + 2) (2-57) 
After simplification, the last equation is written 
30 j10(2 -wZ) G(jw) = Re[G(jw)J + jlm[G(jw)] = -2 -------'-------=--
9w2 + (2 -w2) 9ai + w(2 -w2)2 (2-58) 
Setting Re{G(jw)] to zero. we have w = oc, and G(joo) == 0, which means that the G(jw) plot 
intersects the imaginary axis only at the origin. Setting lm[G(jw)J to zero, we have w = ±:vri rad/sec. 
This gives the point of intersection on the real axis at 
a( ±iv'z) = -5/3 (2-59) 
The result. w = -./2 rad/sec. has no physical meaning. because the frequency is negative; it simply 
represents a mapping point on the negative jw-axis of the s .. plane. In general. if G(s) is a rational 
function of s (a quotient of two polynomials of s), the polar plot of G( jw) for negative values of w is the 
mirror image of that for positive a>, with the mirror placed on the real axis of the G( jw )-plane. From 
Eq. (2-58). we also see that Re[G( jO)J =. oc and hn(G( jO)] = oo. With this information. it is now 
possible to make a sketch of the polar plot for the transfer function in Eq. (2-53). as shown in Fig. 2-12. 
Although the method of obtaining the rough sketch of the polar plot of a transfer function as 
described is quite straightforward. in general. for complicated transfer functions that may have 
multiple crossings on the real and imaginary axes of the transfer-function plane. the algebraic 
manipulation may again be quite involved. Furthermore, the polar plot is basically a tool for analysis; 
it is somewhat awkward for design purposes. We shall show in the next section that approximate 
information on the polar plot can always be obtained from the Bode plot, which can be sketched 
jlmG 
G~plane 
ReG 
Figure 2-12 Polar plot of G(s) = 10 ) • s{s+l)(s+2 
32 Chapter 2. Mathematical Foundation 
without any calculations. Thus. for more complicated transfer functions, sketches of the polar plots 
can be obtained with the help of the Bode plots. unless MATLAB is used. 
2 .. 2 .. 3 Bode Plot (Corner Plot or Asymptotic Plot) 
The Bode plot of the function G( jrv) 1s composed of two plots, one with the amp1itude of 
G(jm) in decibels (dB) versus log10m or wand the other with the phase of G(jw) in 
degrees as a function ·of log10w or w. A Bode plot is also known as a corner plot or an 
asymptotic plot of G( jw). These names stem from the fact that the Bode plot can be 
constructed by using straight-line approximations that are asymptotic to the actual plot. 
In simple tenns, the Bode plot has the following features: 
1. Because the magnitude of G( jm) in the Bode plot is expressed in dB, product and 
division factors in G( jw) became additions and subtractions, respectively. The 
phase relations are also added and subtracted from each other algebraically. 
2. The magnitude plot of the Bode plot of G( jw) can be approximated by straight-line 
segments, which allow the simple sketching of the plot without detailed computation. 
Because the straight-line approximation of the Bode plot is relatively easy to construct, the 
data necessary for the other frequency-domain plots, such as the polar plot and the 
magnitude-versus-phase plot, can be easily generated from the Bode plot. 
Consider the function 
G(s) = ~(s + z1 )(s + z2) · · · (s + Zm) e-Tds 
sl(s + Pl )(s + P2) · · · (s + p,,) 
where Kand Tc1 are real constants, and the z's and the p's may be real or complex (in 
conjugate pairs) numbers. In Chapter 7, Eq. (2-60) is the preferred form for root-locus 
construction, because the poles and zeros of G(s) are easily identified. For constructing the 
Bode plot manually, G(s) is preferably written in the following form: 
G(s) = K~ (1 + Tis)(I + T2s) · · · (1 + Tms) e-Tds 
sJ(l + Tas)(I +Tbs)··· (1 + ~is) (2-61) 
where K1 is a real constant, the Ts may be real or complex (in conjugate pairs) numbers, 
and Ta is the real time delay. If the Bode plot is to be constructed with a computer program, 
then either form of Eq. (2-60) or Eq. (2-61) can be used. 
Because practically all the terms in Eq. (2-61) are of the same form, then without loss 
of generality, we can use the following transfer function to illustrate the construction of the 
Bode diagram. 
G(s) = K(I +Tis)(]+ T2s) e-ht 
s( 1 + Tas) ( 1 + 2ts / w,, + s2 / m~) (2-62) 
where K, Tc1, Ti, T2, Tcz, t, and Wn are real constants. It is assumed that the second-order 
polynomial in the denominator has complex~conjugate zeros. 
The magnitude of G( jw) in dB is obtained by multiplying the logarithm (base 10) of 
IG(Jw)I by 20; we have 
JG(jw)ldB = 20 logrn!G(jw)I 
= 201og10IKI + 20log10ll + jwTil + 20 log10ll + jmT2I 
-20log101 jwl -20logwll + jwTal -20log10J1 + j2t;w-al /m~I (2-63) 
Toolbox 2-2-2 2-2 Frequency-Domain Plots ~ 33 
The phase of G( jcv) is 
LG(jw) = LK + L(I + jcvT1) + L(l + jwT2) -Ljw -L(l + jwTa) 
-L(l + 2(w/w 11 -w2 /w~) -wTd rad (2-64) 
In general, the function G( jw) may be of higher order than that of Eq. (2-62) and 
have many more factored terms. However, Eqs. (2-63) and (2-64) indicate that 
additional terms in G( jw) would simply produce more similar terms in the magnitude 
and phase expressions, so the basic method of construction of the Bode plot would be 
The Bode plot for Example 2-1-3, using the MATLAB "bode" function, is obtained by the following 
sequence of MATLAB functions. 
Approach 1 
num= [16]; 
den=[11016]; 
G = tf(num, den); 
bode(G); Approach 2 
s = tf(' s'); 
G=16/(s"2 + lO*s + 16); 
bode(G); 
The ''bode'' function computes the magnitude and phase of the frequency response of linear time 
invarialll models. The magnitude is plotted in decibels (dB) and the phase in degrees. Compare the 
results to the values in Table 2-2. 
Bode Diagram 
0 
-20 
...... m "tJ -40 '-' 
11) 
"13 
~ 
=e -60 O'l 
OS 
:'E 
-00 
-100 
0 
-45 
oi (I) 
't5 .._, -90 G) 
(h 
05 .t:: a. -135 
.. 1so 
10-1 100 101 102 103 
34 ._ Chapter 2. Mathematical Foundation 
2-2-4 Real Constant K the same. We have also indicated that, in general, G(j{t)) can contain just five simple 
types of factors: 
1. Constant factor: K 
2. Poles or zeros at the origin of order p: (jw)±p 
3. Poles or zeros at s = -1 / T of order q: ( 1 + jwTt q 
4. Complex poles and zeros of order r: (1 + j2~w/{t)n -{t)2 /{t)~t' 
5. Pure time delay e-jwTd, where Tt1, p, q, and r are positive integers 
Eqs. (2-63) and (2-64) verify one of the unique characteristics of the Bode plot in that 
each of the five types of factors listed can be considered as a separate plot; the individual 
plots are then added or subtracted accordingly to yield the total magnitude in dB and 
the phase plot of G(jw). The curves can be plotted on semilog graph paper or linear 
rectangular-coordinate graph paper, depending on whether {t) or log 10w is used as the 
abscissa. 
We shall now investigate sketching the Bode plot of different types of factors. 
Because 
Kdn = 20 log10 K = constant (2-65) 
and 
{0° K>O 
LK = 180° K <0 (2-66) 
the Bode plot of the real constant K is shown in Fig. 2-13 in semilog coordinates. 
2-2-5 Poles and Zeros at the Origin, (jw)± P 
The magnitude of (jw)±p in dB is given by 
(2-67) 
for w 2:: 0. The last expression for a given p represents a straight line in either semilog or 
rectangular coordinates. The slopes of these lines are determined by taking the derivative of 
Eq. (2-67) with respect to log10w; that is, 
d di (±20plog1ow) = ±20p dB/decade og10w (2-68) 
These lines pass through the 0-dB axis at w = 1. Thus, a unit change in log 10w corresponds 
to a change of ±20 p dB in magnitude. Furthermore, a unit change in log 10w in the 
rectangular coordinates is equivalent to one decade of variation in w, that is, from 1 to 10, 
10 to 100, and so on, in the semilog coordinates. Thus, the slopes of the straight lines 
described by Eq. (2-68) are said to be ±20 p dB/decade of frequency. 
2.~2 Frequency~Oomain Plots -4 35 
i 
'§' 
~ C) 
'bJ) 
3 
~ 
~ 
{.:, 
'-I 40 
30 
20 
10 
0 
-10 
-20 
-30 
-40 
0.1 
90 
60 
30 
0 
-30 
-60 
-90 
-120 
-150 
-180 
0.1 11111 I l 
20 log10 K dB (K = 10) .,, 
m(rad/sec) 
JJ("t...K(K>O) 
/LK(K<O) 
I I I 
m {rad/sec) 
Figure 2-13 Bode plot of constant K. 10 100 
10 100 
Instead of decades, sometimes octaves are used to represent the separation of two 
frequencies. The frequencies w1 and wz are separated by one octave if w2/ WI = 2. The 
number of decades between any two frequencies w1 and w2 is given by 
(2-69) 
Similarly, the number of octaves between w2 and w1 is 
log10(co2/w1) 1 (co2) number of octaves = 1 = -0--log 10 -
Ogto 2 .301 WI (2-70) 
Thus, the relation between octaves and decades is 
numberofoctaves = 1/0.301 decades= 3.32 decades (2-71) 
36 IJll. Chapter 2. Mathematical Foundation 
Substituting Eq. (2-71 ) into Eq. (2-67), we have 
±20pdB/decade = ±20p x 0.301 ~ 6p dB/octave (2-72) 
For the function G( s) = 1 / s. which has a simple pole at s = 0, the magnitude of G( jw) is a 
straight line with a slope of -20dB/decade, and it passes through the 0-dB axis at 
w = 1 rad/sec. 
The phase of ( jw)±p is written 
(2-73) 
The magnitude and phase curves of the function ( jw)±p are shown in Fig. 2wl4 for several 
values of P. 
~ 
'§' ::, 
Q 
i 
'.3 
'§" ::, 
0 
-...I 60 
40 I~ 
~ 
20 ----0 -
-20 ----
-40 / 
-60 
0.1 
180 
90 
0 
-90 
-180 
-270 0.1 ~ 
I'---"'~ ' .......... r-.... r--i-r-,..i:::: r--i-r-I:::~ 
i-i-,i.--i;;, 
i--1--vv v 
/ 
/ 
Figure 2-14 Bode plots of (jw)P. 11 I lto{ V ~err i--c:~::;...- ·ro) ~ -¢~ d~~-----J(r,,.f:l ,i-1.0 V 1---i.---~ 1---i--
~~ 
I::'-......... r-r--r-~ d8Jdecad • 
',l; " ', I 111 ~ v OI "-~ "to --~ fr--.cfb/c,; --- ~c '- j'...; e"<1u. --~~ r~ I r/::::::· rl'QJ)..? ~-11'-I I I I l"i,. 
10 100 
(t) (rad/sec) 
'~ I 
L(jmr LUm), 
~ 
L( 1/j(I)) 
' L(l/jaJ>2 
' L(lljai' 
' IO 100 
ro (rad/sec) 
2-2 Frequency-Domain Plots : 37 
2 ... 2-6 Simple Zero, 1 + jw T 
Consider the function 
G(jw) = 1 + jwT 
where Tis a positive real constant. The magnitude of G( jw) in dB is 
JG(jw)ldB = 20 log10IG(jw)I = 201og10\h + w2T2 (2-74) 
(2-75) 
To obtain asymptotic approximations of IG(jw)[dB• we consider both very large and very 
sma11 values of w. At very low frequencies, wT « I, Eq. (2-75) is approximated by 
\G(jw)ldB e:! 201og101 = 0 dB (2-76) 
because w2T2 is neglected when compared with 1. 
At very high frequenciesT wT >>I, we can approximate 1 + aiT2 by a>2T2; then Eq. 
(2-75) becomes 
(2-77) 
Eq. {2-76) represents a straight line with a slope of 20 dB/decade of frequency. 
The intersect of these two lines is found by equating Eq. (2-76) to Eq. (2-77). which 
gives 
w=l/T (2-78) 
This frequency is also the intersect of the high-frequency approximate plot and the low­
frequency approximate plot, which is the 0-dB axis. The frequency given in Eq. (2-78) is 
also known as the corner frequency of the Bode plot of Eq. (2-74 ), because the asymptotic 
plot forms the shape of a corner at this frequency, as shown in Fig. 2-15. The actual 
jG(jw) lctB plot ofEq. (2-74) is a smooth curve and deviates only slightly from the straight­
line approximation. The actual values and the straight-line approximation of I I + jwTldB 
as functions of wT are tabulated in Table 2-3. The errurbetween the actual magnitude curve 
and the straight-line asymptotes is symmetrical with respect to the comer frequency 
w = 1/T. It is useful to remember that the error is 3 dB at the corner frequency, and it is 
1 dB at l octave above (lo= 2/T) and 1 octave below (w = 1/2T) the comer frequency. 
At 1 decade above and below the corner frequency, the error is dropped to approximately 
0.3 dB. Based on these facts, the procedure of drawing I l + jwTldB is as follows: 
I. Locate the comer frequency w = I /T on the frequency axis. 
2. Draw the 20-dB/decade ( or 6-dB/octave) line and the horizontal line at O dB, with 
the two lines intersecting at w = I /T. 
3. If necessary, the actual magnitude curve is obtained by adding the errors to the 
asymptotic p]ot at the strategic frequencies. Usually, a smooth curve can be 
sketched simply by locating the 3-dB point at the corner frequency and the 1-dB 
points at 1 octave above and below the corner frequency. 
The phase of G{ jw) == I + jwT is 
(2-79) 
Similar to the magnitude curve, a straight-line approximation can be made for the phase 
curve. Because the phase of G( jw) varies from 0° to 90°, we can draw a line from 0° at I 
decade below the corner frequency to 90° at l decade above the corner frequency. As shown 
in Fig. 2-15. the maximum deviation between the straight-line approximation and the actual 
curve is less than 6°. Table 2-3 gives the values of L( 1 + jwT) versus wT. 
38 ...., Chapter 2. Mathematical Foundation 
40 
20 / ~ 
ai' ........... \ .,..... ..... ,,,,,,. ~ G(s) = l + Ts 
::!. -'§' 
::> g 
i 
~ 
~ ::> 
C, 
'-J 0 
-20 
-40 
0.01 
90 
60 
30 
0 
-30 
-60 
-90 
0.01 ~ ...... -:,...,-~ ,, r-,.. 
"'" ~ / 
r--,.... 
--1-·F--·-·-··--· ·--··---- ··--·-·--·-
0.1 
(JJT 
~ 
.., ... V 
~~ 
,.....,-;;, .... 
~ ~ ~ ........ G(s)= 1 + Ts -~ 
f::::::: :::::~ .... 
G(s)=-1-1 ,, --...;; 
~~ 
l +Ts !II~ 
I I I 
~ 
0.1 
mT 
Figure 2-15 Bode plots of G(s) = 1 + Ts and G(s) = (l~Ts)' 
TABLE 2-3 Values of !(1 + jwt) versus w T .• Asy~pto~e~ I I 
111 I 
l"'o,. G(s)=-1-...... , I +Ts i'., I 
~ j'-... 
lO 
~ :::::: :::::~-
~ :;::: ;::::=.. ~--
lO ..... 
~ .,...i...-
.,..... 
............ 
i'i-,.. 
i-.,.. 
100 
100 
Straight-Line Approximation Error L(l + jwT) 
wT log10wT Jl + jwT] 11 + jwTldB 11 + jwTlcts (dB) (deg) 
0.01 -2 1.0 0.000043 0 0.00043 0.5 
0.10 -1 1.04 0.043 0 0.043 5.7 
0.50 -0.3 1.12 0 26.6 
0.76 -0.12 1.26 2 0 2 37.4 
1.00 0 1.41 3 0 3 45.0 
1.31 0.117 1.65 4.3 2.3 2 52.7 
2.00 0.3 2.23 7.0 6.0 1 63.4 
10.00 1.0 10.4 20.043 20.0 0.043 84.3 
100.00 2.0 100.005 40.00043 40.0 0.00043 89.4 
2~2 Frequency-Domain Plots ~ 39 
2-2-7 Simple Pole, 1/( 1 + jw T) 
For the function 
G(jw)=l 1_ T + j(J) (2-80) 
the magnitude, \G( jw) ! in dB, is given by the negative of the right side of Eq. (2-75), and 
the phase LG( jm) is the negative of the angle in Eq. (2-79). Therefore, it is simple to extend 
all the analysis for the case of the simple zero to the Bode plot of Eq. (2-80). The 
asymptotic approximations of I G( jw) ldB at low and high frequencies are 
wT « I jG(jw)ldB ~ OdB (2-81) 
(2-82) 
Thus~ the corner frequency of the Bode plot of Eq. (2-80) is stiil at w = I /T~ except 
that at high frequencies the slope of the straight-line approximation is -20dB/decade. 
The phase of G( jw) is O degrees at w = 0~ and -90° when w = oo. The magnitude in dB 
and phase of the Bode plot of Eq. (2-80) are shown in Fig. 2-15. The data in Table 2-3 are 
still useful for the simple-pole case if appropriate sign changes are made to the numbers. 
For instance, the numbers in 11 + ja>Tldn, the straight-line approximation of 
11 + jwTldB, the error (dB), and the L(l + jwT) columns should all be negative. At 
the corner frequency, the error between the straight-line approximation and the actual 
magnitude curve is -3 dB. 
2-2-8 Quadratic Poles and Zeros 
Now consider the second-order transfer function 
w2 1 G(s)- n --------,-..........,,.~ -s2 + 2{wns + ru; -1 + (2{/wn)s + (1/w~)s2 (2-83) 
We are interested only in the case when ~ ~ 1, because otherwise G(s) would have two 
unequal real poles, and the Bode plot can be obtained by considering G(s) as the product of 
two transfer functions with simple poles. 
By letting s = jm, Eq. (2-83) becomes 
(2-84) 
The magnitude of G( jw) in dB is 
At very low frequencies, wf wn « 1, Eq. (2-85) can be approximated as 
40 • Chapter 2. Mathematical Foundation 
Thus, the low-frequency asymptote of the magnitude plot ofEq. (2-83) is a straight line that 
1 ies on the 0-dB axis. At very high frequencies, w / w11 » 1, the magnitude in dB of G( jw) in 
Eq. (2-83) becomes 
)G(jw)JdB ~ -20 log10V (w/wn)4 = -40 log10(w/w,,) dB (2-87) 
This equation represents a straight line with a slope of -40 dB/ decade in the Bode-plot 
coordinates. The intersection of the two asymptotes is found by equating Eq. (2-86) to 
Eq. (2-87), yielding the corner frequency at w = Wn, The actual magnitude curve of G( jw) 
in this case may differ strikingly from the asymptotic curve. The rea.c;on for this is that the 
amplitude and phase curves of the second-order G( jw) depend not only on the corner 
frequency Wn but also on the damping ratio t~ which does not enter the asymptotic curve. 
The actual and the asymptotic curves of IG(jw)lcts are shown in Fig. 2-16 for several 
values of(. The errors between the two sets of curves are shown in Fig. 2-17 for the same 
set of values of{. The standard procedure of constructing the second-order I G( jw) ldB is to 
first locate the corner frequency Wn and -40-dB/decade line to the right of w,,. The actual 
curve is obtained by making corrections to the asymptotes by using either the data from the 
error curves of Fig. 2-17 or the curves in Fig. 2 .. 16 for the corresponding {. 
$ 
3 
'§' 
:=:, 
t.:, 40 
30 
20 
lO 
() 
-10 
-20 
-30 
-40 
0.01 
() 
--45 I 
'§° -90 
:=:, 
C.:> 
'-' -135 
-180 
0.01 0.1 
0.1 }=?.05 
IJI'"' I 
v O.l 0.5 .... / 
.... 0.2 ' / '~ .... :,.. -.,.....0.3 
---~' ... .,......0.4 
:" I 
'I ~~~ ll I 
( = 0.707/ I ,1 
LO \ 
I'\ 
1.0 
u = OJ/run 
I I I 
~ ['..;: r-,; l°'~J'I"' ----t = 0.05 r,...._ ~ ~ -0.1 t= LO 
~ ... 
)j ~ 
0.6 V / .. --0.2 
/ 
0.4 / ~ 0.3' '-
I ~ ~ ......... I"-,.. ~ r-.... 
1.0 
u = mlm,, 
Figure 2-16 Bode plot of G(s) = 1 2t"( 1 ) ( 1 )2· + sw11+sw1, r'\ 
1, 
\~ 
10 100 
::-""' '"'"' -
10 100 
Toolbox 2-2-3 2-2 Frequency-Domain Plots ~ 41 
~ "C 
'§' 
~ Q 25 
20 
15 
IO 
5 
0 
-5 
-IO 
-15 
0.01 0.1 ~.-, t=o'.o: 
' ' ' y, .... t =0.1 
l I I 
J 
J ~0.2 , 0.3 
~: i~~ 
-...... -... ~~~~ .......... I" ... I"~ , 0.5 i,.~ 
11. 0.6 
\ 0.707 
1.0 
1.0 IO 
u = (J)/(J)o 
Figure 2-17 Errors in magnitude curves of Bode plots of G(s) = 1 ,, ( 1 \ ( I ~· + ~(' s w,, + s w,,) 
The phase of G( jw) is given by 
and is plotted as shown in Fig. 2-16 for various values of {. 100 
(2-88) 
The analysis of the Bode plot of the second-order transfer function of Eq. (2-83) can be 
applied to the second-order transfer function with two complex zeros. For 
(2-89) 
the magnitude and phase curves are obtained by inverting those in Fig. 2-16. The errors 
between the actual and the asymptotic curves in Fig. 2-17 are also inverted. 
The Bode plot for Fig. 2-17 when { = 0.05 and w = 1, using the MATLAB "bode" function, is obtained by 
the following sequence of MATLAB functions. 
Approach 1 Approach 2 
num= [l]; 
den= [ 1 .11] ; 
G = tf'(num,den); 
bode(G); s = tf( 's'); 
G = 1/ C s"2 + . rs + 1) ; 
bode(G); 
42 · Chapter 2. Mathematical Foundation 
Bode Diagram 
20 
-40L-~~~-'---_._~_.___..__,__.._.__.__&...-~~~ ....... ~_._~_.___.____.__.._._....c,u 
O,---=====--=--~:::::!===i:::::::,....,.-~~--.-~--.---,--,r--,----r-.....-ri 
-45 
i 
~ 
..u -90 
61 ! 
0.. .. 135 
-1806.._~~--'-----'-~-'--L-....l..-...1.-1~.J...___::::::::::c=:=:::::i:==::::c:::::c::::c::c:::it=t::::I 
10-1 10D 
Frequency (rad/sec) 
2-2-9 Pure Time Delay, e-iCJlTd 
The magnitude of the pure time delay term is equal to unity for all values of w. The phase of 
the pure time delay term is 
Le-jwT" = -WTd 
which decreases linearly as a function of w. Thus. for the transfer function 
G(jw) = G 1 (jw )e-jlt)Td (2-90) 
(2-91) 
the magnitude plot jG( jw) lcts is identical to that of IG1 ( j(J)) Ida. The phase plot LG( jw) is 
obtained by subtracting wTd radians from the phase curve of G1 ( jw) at various w. 
EXAMPLE 2-2-5 As an illustrative example on the manual construction of the Bode plot, consider the function 
G(s) -IO(s + 10) (2-92) 
-s(s + 2)(s + 5) 
The first step is to express G(s) in the form of Eq. (2-61) and set s = jw (keeping in mind that, for 
computer plotting, this step is unnecessary); we have 
G( . ) 10(1 + jO.lw) 
jltJ = jw(l + j0.5w)(l + j0.2w) (2-93) 
Eq. (2-92) shows that G( j(v) has corner frequencies at w = 2. 5, and 10 rad/sec. The pole at s = 0 
gives a magnitude curve that is a straight line with a slope of -20dB/decade. passing through the 
w = I rad/ sec point on the O~dB axis. The complete Bode plot of the magnitude and phase of G{ jw) 
is obtained by adding the component curves together. point by point, as shown in Fig. 2-18. The actual 
curves can be obtained by a computer program and are shown in Fig. 2-18. 
2-2 Frequency-Domain Plots ~ 43 
Toolbox 2-2-4 ~ 
~ :;:;,.. 
S2 
c1 
CJ 'S 
§' 
::> 0 " 40 ~ 
20 
0 
-20 
-40 
-60 
-80 
-100 
0.10 
-90 t---
-120 
-150 
-18() ---
-21() 
-240 
-270 
0.10 r--.. 
r--... I I I I ii-.. ~-20dB/sec I====~ ~ ... 
~~ I l I 11 
~ :..--... -40 dH/sec 
.._ 
Gain crossover / ~ ..... ::::~ ~: i..--60dB/sec 
3.S8 tad/sec ~ 
' " ~ 
2 5 10 
m (rad/sec) 
~I"-. 
"'r,, 
r,."" 1'. ' f'\. 
" 
~. l: " -~ .. --Phase crossover / 
5. 78 rad/sec 
2 5 10 
m (rad/sec) 
f ( ) IO(s+ 10} Figure 2N18 Bode plot o G s = sts+2H:s+S)' .. l, -40 dB/sec 
..... "" '-Iii. 
i-.!iii..._ 
" '~ ..._r--. 
lllriiillil 
100 
--
100 
The Bode plot for Eq. (2-93 ). using the MATLAB ··bode" function, is obtained by the following sequence of 
MATLAB functions. 
num::; (110]; 
den = [ . 1 . 7 1 0) ; 
G = tf(num, den); 
bode(G); 
The result is a graph sirnilar to Fig. 2-18. "'"" ... 
l ()(K) 
1000 
44 IJII.. Chapter 2. Mathematical Foundation 
2-2-10 Magnitude-Phase Plot 
The magnitude-phase plot of G( j(J)) is a plot of the magnitude of G( jw) in dB versus its 
phase in degrees, with w as a parameter on the curve. One of the most important 
applications of this type of plot is that, when G( j(J)) is the forward-path transfer function 
of a unity-feedback control system, the plot can be superposed on the Nichols chart 
(see Chapter 8) to give information on the relative stability and frequency response of the 
system. When constant coefficient K of the transfer function varies, the plot is simply 
raised or lowered vertically according to the value of K in dB. However, in the 
construction of the plot, the property of adding the curves of the individual component~ 
of the transfer function in the Bode plot does not carry over to this case. Thus, it is 
best to make the magnitude-phase plot by computer or transfer the data from the 
Bode plot. 
~ EXAMPLE 2-2-6 As an illustrative example, the polar plot and the magnitude-phase plot of Eq. (2-92) are shown in 
Fig. 2-19 and Fig. 2-20, respectively. The Bode plot of the function is already shown in Fig. 2-18. 
The relationships among these three plots are easily identified by comparing the curves in Figs. 2-18, 
2-19, and 2-20. 
jimG 
ReG 
f () JOs+lO Figure 2-19 Polar plot o Gs = 5 s+l) 5+5) · 
2-2 Frequency-Domain Plots ,... 45 
40 
30 
20 
10 
0 
.-., -IO l:Q :s 
Q) 
~ -20 a -··-l/ 
/ / 
/ yai = 1 rad/sec 
./ V 
Phase crossover ;~-- ~ Gain crossover 
co= 5.78 rad/sec~ m;:::: 3.88 rad/sec ... I . I j 
l l ( 
m = 10 rad/sec ·a 
!!IO = 
~ ... 30 
-40 OJ= 30 rad/sec -
-50 
-60 w;:::: 100 rad/sec 
-70 a 
* -80 8 
-270.0 -247.5 -225.0 -202.5 -180.0 -157.5 --135.0 -112.S -90.0 
Phase (deg) 
F. 2 20 M . d h I f G( ) lO(s+ IO) 1gure -agmtu e-p ase p ot o s = s(s+Z)(s+S) • 
Toolbox 2 .. 2.5 
The magnitude and phase plot for Example 2-2-6 may be obtained using the MATLAB '"nichols" function, 
by the following sequence of MATLAB functions. 
» G = zpk([ ... 10], [O -2 -5], 10) 
Zero/pole/gain: 
10 Cs+ 10) 
s(s+2)(s+S) 
>> nichols (G) 
See Fig. 2-20. 
46 >-Chapter 2. Mathematical Foundation 
Toolbox 2-2-6 
The phase and gain margins for Eq. (2-92) are obtained by the following sequence of MATLAB 
functions. 
Approach 1 
num = [10 100]; 
den=[17100]; 
Gl = tf(num, den); 
margin(Gl); Approach 2 
s = tf( 's'); 
Gl=(lO"'s + 100)/(sA3 + rsA2 + lO"'s); 
margin(Gl); 
"Margin" produces a Bode plot and displays the margins on this plot. 
40 
m 20 :g 
~ 0 
§. I -20 
-40 Bode Diagram 
Om= 7.36 dB (at 5.77 rad/sec) 1 Pm= 10.7 deg (at 3.88 rad/sec) 
-60,__ __ _.... _________ .................... '-'------'"'-__.. __ .._._._ ................. ____ _._ __ ...___._ ............... ........ 
-so------------- ........ -.--.~,-,-------r- ......... --. ............................... ---------....--- ...... ...-....... 
'@ -135 
! 
I f -180 
2-2-11 Gain-and Phase-Crossover Points 
Gain-and phase-crossover points on the frequency-domain plots are important for analysis 
and design of control systems. These are defined as follows. 
• Gain-crossover point. The gain-crossover point on the frequency-domain plot of 
G(jw) is the point at which I G( jw) I = 1 or I G( jw) Ide = 0 dB. The frequency at the 
gain-crossover point is called the gain-crossover frequency 6'g. 
• Phase-crossover point. The phase-crossover point on the frequency-domain plot 
of G( jw) is the point at which LG( jw} = 180°. The frequency at the phase­
crossover point is called the phase-crossover frequency Wp, 
2-2 Frequency-Domain Plots 4, 47 
The gain and phase crossovers are interpreted with respect to three types of plots: 
• Polar plot. The gain-crossover point ( or points) is where I G(jw) I = 1. The phase­
crossover point (or points) is where LG(jw) = 180° (see Fig. 2-19). 
• Bode plot. The gain-crossover point (or points) is where the magnitude curve 
JG( jw) luB crosses the 0-dB axis. The phase-crossover point (or points) is where the 
phase curve crosses the 180° axis (see Fig. 2-18). 
• Magnitude-phase plot. The gain~crossover point ( or points) is where the G( jw) 
curve crosses the Q .. dB axis. The phase-crossover point (or points) is where the 
G( jw) curve crosses the 180° axis (see Fig. 2-20). 
2-2-12 Minimum-Phase and Nonminimum-Phase Functions 
A majority of the process transfer functions encountered in linear control systems do not 
have poles or zeros in the right-half s-plane. This class of transfer functions is called the 
minimum-phase transt'er function. When a transfer function has either a pole or a zero in 
the right-half s-plane, it is called a nonminimum-phase transfer function. 
Minimum-phase transfer functions have an important property in that their magnitude 
and phase characteristics are uniquely related. In other words, given a minimum-phase 
function G(s). knowing its magnitude characteristics [G(jw)I completely defines the phase 
characteristics, LG(jw). Conversely, given LG(jw), IG(jw)I is completely defined. 
Nonminimum~phase transfer functions do not have the unique magnitude-phase 
relationships. For instance, given the function 
1 
G(jw) = l . T -JW (2-94) 
the magnitude of G( jw) is the same whether Tis positive (nonminimum phase) or negative 
(minimum phase). However, the phase of G( jw) is different for positive and negativ~ T. 
Additional properties of the minimum-phase transfer functions are as follows: 
• For a minimum-phase transfer function G(s) with m zeros and n poles, excluding 
the poles at s = o. if any, when s = jw and as w varies from oo to 0, the total phase 
variation of G(jw) is (n -m)rr/2. 
• The value of a minimum-phase transfer function cannot become zero or infinity at 
any finite nonzero frequency. 
• A nonminimum-phase transfer function will always have a more positive phase 
shift as w is varied from oo to 0. 
EXAMPLE 2-2-7 As an il1ustrative example of the properties of the nonminimum-phase transfer function, consider that 
the zero of the transfer function of Eq. (2M92) is in the right-half s~plane; that is. 
G 
8 _ lO(s -10) 
( ) -s(s + 2)(s + 5) (2-95) 
The magnitude plot of the Bode diagram of G( jw) is identical to that of the minimum-phase transfer 
function in Eq. (2~92), as shown in Fig. 2-18. The phase curve of the Bode plot of G(jw) ofEq. (2-95) 
is shown in Fig. 2-2l(a). and the polar plot is shown in Fig. 2-21(b). Notice that the nonminimum­
phase function has a net phase shift of 2701) (from -1801) to + 90°) as w varies from oo to O. whereas 
the minimum-phase transfer function of Eq. (2-92) has a net phase change of only 90° (from 
-180° to -90°) over the same frequency range. 
48 ._ Chapter 2. Mathematical Foundation 
90 
45 
l 0 
'§' -45 :.::, 
c:, 
'1 -90 
-135 
-180 
0.1 --.... :,,, 
~~~ 
" ' \ 
'\. 
'\ 
" 10 
m (rad/sec) 
(a) 
jlmG 
(b) " i',.r,,.., ... _ 
100 1000 
G-plane 
ReG 
Figure 2-21 (a) Phase curve of the Bode plot. (b) Polar plot. G(s) = s(~~~~~Ts). 
Care should be taken when using the Bode diagram for the analysis and design of systems 
with nonminimum-phase transfer functions. For stability studies, the polar plot, when used 
along with the Nyquist criterion discussed in Chapter 8, is more convenient for nonminimum­
phase systems. Bode diagrams of nonminimum-phase forward-path transfer functions should not 
be used for stability analysis of closed-loop control systems. The same is true for the magnitude­
phase plot. 
Here are some important notes: 
• A Bode plot is also known as a corner plot or an asymptotic plot. 
• The magnitude of the pure time delay term is unity for all w. 
• The magnitude and phase characteristics of a minimum-phase function are uniquely related. 
• Do not use the Bode plot and the gain~phase plot of a nonminimum-phase transfer function for 
stability studies. 
The topic of frequency response bas a special importance in the study of control systems and is 
revisited later in Chapter 8. ~ 
2-3 Introduction to Differential Equations 41 49 
~ 2-3 INTRODUCTION TO DIFFERENTIAL EQUATIONS 
A wide range of systems in engineering are modeled mathematically by differential 
equations. These equations generally involve derivatives and integrals of the dependent 
variables with respect to the independent variable-usually time. For instance, a series 
electric RLC (resistance-inductance-capacitance) network can be represented by the 
differential equation: 
di(t) 1 J Ri(t) + Ldt + C i(t)dt = e(t) (2-96) 
where R is the resistance; L, the inductance; C, the capacitance; i(t), the current in the 
network; and e(t), the applied voltage. In this case, e(t) is the forcing function; t, the 
independent variable; and i(t), the dependent variable or unknown that is to be determined 
by solving the differential equation. 
Eq. (2-96) is referred to as a second-order differential equation, and we refer to the 
system as a second-order system. Strictly speaking, Eq. (2-96) should be referred to as an 
integroditlerential equation, because an integral is involved. 
2-3-1 Linear Ordinary Differential Equations 
In general, the differential equation of an nth-order system is written 
dny(t) dn-ly(t) dy(t) -d-+ an-l d 1 + .. · + a1 -d-+ aoy(t) = f(t) p ~- t (2-97) 
which is also known as a linear ordinary differential equation if the coefficients 
ao, ai ~ ...• an-I are not functions of y(t). 
A first-order linear ordinary differential equation is therefore in the general form: 
dy(t) dt + aoy(t) = f(t) (2-98) 
and the second-order general form of a linear ordinary differential equation is 
d2y(t) + a dy(t) + a y(t) = f(t) 
dt2 l dt O (2-99) 
In this text, because we treat only systems that contain lumped parameters, the differential 
equations encountered are all of the ordinary type. For systems with distributed parameters, 
such as in heat-transfer systems, partial differential equations are used. 
2-3-2 Nonlinear Differential Equations 
Many physical systems are nonlinear and must be described by nonlinear differential 
equations. For instance, the following differential equation that describes the motion of a 
pendulum of mass m and length /, later discussed in this chapter, is 
d28(t) . mltfi2+ mgsmB(t) = 0 (2-100) 
Because 9(t) appears as a sine function, Eq. (2-100) is nonlinear, and the system is called a 
nonlinear system. 
50 . Chapter 2. Mathematical Foundation 
2-3-3 First-Order Differential Equations: State Equations2 
In general, an nth-order differential equation can be decomposed into n first-order 
differential equations. Because, in princi pie, first.-order differential equations are simpler 
to solve than higher-order ones, first-order differential equations are used in the analytical 
studies of control systems. For the differential equation in Eq. (2-96), if we let 
XI (t) = J i(t)dt (2-101) 
and 
d:q (t) . x2(t) =tit= i(t) (2-102) 
then Eq. (2-96) is decomposed into the following two first-order differential equations: 
dx~?) = x2(t) 
d~2(t) 1 R . 1 --= --x, (t) --x2(t) + -e(t) dt LC L L 
In a similar manner, for Eq. (2-97), let us define 
XJ (t) = y(t) 
x2(t) = d~~) 
· c1n-ly(t) 
Xn(t) = din-I (2-103) 
(2-104) 
(2-105) 
then the nth-order differential equation is decomposed into n first-order differential 
equations: 
dx1 (t) = xz(t) 
dt 
dx2(t) = X3(t) 
dt . 
dxn(t) ( ( ) ( ) ( ) ~ = -aoxi(t) -a1x2 t) -· · · -a,1-2x11_, t -an-1Xn t +ft (2-106) 
Notice that the last equation is obtained by equating the highest-ordered derivative term in 
Eq. (2-97) to the rest of the terms. In control systems theory, the set of first-order 
differential equations in Eq. (2-106) is called the state equations, and x1,x2, ... ,x11 
are caIIed the state variables. 
2-3-4 Definition of State Variables 
The state of a system refers to the past, present, and future conditions of the system. 
From a mathematical perspective, it is convenient to define a set of state variables and 
state equations to model dynamic systems. As it turns out, the variables x, (t). 
x2(t), ... ~xn(t) defined in Eq. (2-105) are the state variables of the nth-order system 
2 Please refe!' to Chapter l O for more in~depth study of Stile Space Systems. 
2-3 Introduction to Differential Equations 51 
described by Eq. (2 .. 97), and then first~order differential equations are the state equations. 
In general, there are some basic rules regarding the definition of a state variable and what 
constitutes a state equation. The state variables must satisfy the following conditions: 
• At any initial time t = to, the state variables x1 (to), x2(to), ... , x,1(to) define the 
initial states of the system. 
• Once the inputs of the system fort 2 to and the initial states just defined are specified, 
the state variables should completely define the future behavior of the system. 
The state variables of a system are defined as a minimal set of variables, 
x1 (t),x2(t) •... ,xn(t), such that knowledge of these variables at any time to and informa­
tion on the applied input at time lo are sufficient to determine the state of the system at any 
time t > to. Hence, the space state form for n state variables is 
x(t) = Ax(t) + Bu 
where x(t) is the state vector having n rows, 
[ XI (t) l x2(t} 
x(t) = . 
X,i(t) 
and u(t) is the input vector with prows, 
u(t) = [ ::_):l] 
u,:(t) 
The coefficient matrices A and B are defined as: 
[au a12 a1n 
a21 a22 a2n A= . 
ll,zJ an2 a,m 
[b11 b12 
btp l h21 b22 b2p B= 
b;,. b,i2 b,~,, 
2-3-5 The Output Equation (2 .. J07) 
(2-108) 
(2-109) 
(n x n) (2-110) 
(n X p) (2-ll l) 
One should not confuse the state variables with the outputs of a system. An output of a 
system is a variable that can be measured, but a state variable does not always satisfy this 
requirement. For instance, in an electric motor, such state variables as the winding current, 
rotor velocity, and displacement can be measured physically, and these variables all qualify 
as output variables. On the other hand, magnetic flux can also be regarded as a state variable 
in an electric motor, because it represents the past, present, and future states of the motor, 
but it cannot be measured directly during operation and therefore does not ordinarily 
qualify as an output variable. In general, an output variable can be expressed as an algebraic 
52 ._ Chapter 2. Mathematical Foundation 
combination of the state variables. For the system described by Eq. (2-97), if y(t) is 
designated as the output, then the output equation is simply y(t) = x1 (t). In general, 
[YI (t) l Y2(t) 
y(t) = : = Cx(t) + Du 
Yq(t) (2-112) 
[Cll c12 
CJn l C21 c22 : C= . 
Cql Cq2 (2-113) 
[d11 d12 
dip l d21 d22 d2p 
D= . 
dq1 dqz dqp (2-114) 
We will utilize these concepts in the modeling of various dynamical systems . 
..,.. 2-4 LAPLACE TRANSFORM 
The Laplace transform is one of the mathematical tools used to solve linear ordinary 
differential equations. In contrast with the classical method of solving linear differential 
equations, the Laplace transform method has the following two features: 
1. The homogeneous equation and the particular integral of the solution of the 
differential equation are obtained in one operation. 
2. The Laplace transform converts the differential equation into an algebraic 
equation in s-domain. It is then possible to manipulate the algebraic equation 
by simple algebraic rules to obtain the solution in the s-domain. The final solution 
is obtained by taking the inverse Laplace transform. 
2-4-1 Definition of the Laplace Transform 
Given the real function j{t) that satisfies the condition 
f" lf(t)e-utldt< oo 
for some finite, real cr, the Laplace transform of flt) is defined as 
or F(s) = (x f(t)e-51dt lo-
F(s) = Laplace transform of f(t) = .C[ f(t)] (2-115) 
(2-116) 
(2-117) 
The variables is referred to as the Laplace operator, which is a complex variable; that is~ 
s = u + jw, where u is the real component and w is the imaginary component. The defining 
equation in Eq. (2-117) is also known as the one-sided Laplace transform, as the 
integration is evaluated from t = 0 to oo. This simply means that all information contained 
2-4 Laplace Transform ~ 53 
inj{t) prior tot= 0 is ignored or considered to be zero. This assumption does not impose 
any limitation on the applications of the Laplace transform to linear systems. since in the 
usual time-domain studies, time reference is often chosen at t = O. Furthermore, for a 
physical system when an input is applied at t = 0, the response of the system does not start 
sooner than t = 0; that is, response does not precede excitation. Such a system is also 
known as being causal or simply physicalJy realizable. 
Strictly, the one .. sided Laplace transform should be defined from t = o-tot= oo. The 
symbol t = o-implies the limit oft --i, 0 is taken from the left side oft = 0. This limiting process 
will take care of situations under which the functionj{t) has a jump discontinuity or an impulse 
at t = 0. For the subjects treated in this text, the defining equation of the Laplace transform in 
Eq. (2-117) is almost neverused in problem solving, since the transform expressions encountered 
are either given or can be found from the Laplace transform table, such as the one given in 
Appendix C. Thus, the fine point of using o-or o+ neverneeds to be addressed. For simplicity, we 
shall simply use t = 0 or t = to( "2: 0) as the initial time in all subsequent discussions. 
The following examples illustrate how Eq. (2-117) is used for the evaluation of the 
Laplace transform of f(t). 
• EXAMPLE 2-4-1 Let.I{() be a unit-step function that is defined as 
J(t) = tts(t) = I t~O 
= 0 t<O (2-118) 
The Laplace transform of f(t) is obtained as 
l,X, l l'.X. l F(s) = £[us(t)) = us(t)e-s1dt = --e-st = -
() S o S (2-119) 
Eq. (2-119) is valid if 
which means that the real part of s. cr. must be greater than zero. In practice. we simply refer to the 
Laplace transform of the unit-step function as 1/s, and rarely do we have to be concerned with the 
region in the s-plane in which the transform integral converges absolutely. ""1 
EXAMPLE 2-4-2 Consider the exponential function 
t~O 
where a is a real constant. The Laplace transform of ft.t) is written 
F(s) = f e-«te-s'dt = = --x e-(s+a}tl-x. I 
Jo s +a O s +a 
Toolbox 2-4-1 
Use the MATLAB symbolic toolbox to find the Laplace transforms. 
>> ::;yms t 
>> f = tA4 
f= 
tA4 
>> laplace(f) 
ans= (2-122) 
54 ... Chapter 2. Mathematical Foundation 
2-4-2 Inverse Laplace Transformation 
Given the Laplace transform F(s), the operation of obtaining j(t) is tenned the inverse 
Laplace transformation and is denoted by 
f(t) = Inverse Laplace transfonn of F(s) = .c-1 [F(s)] 
The inverse Laplace transform integral is given as 
1 lc+joo /(t) = ~. F(s)estds 
2rrJ c-joo (2-123) 
(2-124) 
where c is a real constant that is greater than the real parts of all the singularities of F(s). 
Eq. (2-124) represents a line integral that is to be evaluated in the s-plane. For simple 
functions, the inverse Laplace transform operation can be carried out simply by referring to 
the Laplace transform table, such as the one given in Appendix C and on the inside back 
cover. For complex functions, the inverse Laplace transform can be carried out by first 
performing a partial-fraction expansion (Section 2~5) on F(s) and then using the Transform 
Table from Appendix D. You may also use the ACSYS ''Transfer Function Symbolic" 
Toot Tfsym, for partial-fraction expansion and inverse Laplace transformation. 
2-4-3 Important Theorems of the Laplace Transform 
The applications of the Laplace transfonn in many instances are simplified by utilization of 
the properties of the transform. These properties are presented by the following theorems, 
for which no proofs are given here. 
B Theorem 1. Multiplication by a Constant 
Let k be a constant and F(s} be the Laplace transfonn of J(t). Then 
£[kf(t)] = kF(s) (2-125) 
• Theorem 2. Sum and Difference 
Let F1(s) and F2(s) be the Laplace transform of /1(t) andfz(t), respectively. Then 
.C[f1 (t) ± fi(t)] = F1 (s) ± F2(s) (2-126) 
• Theorem 3. Differentiation 
Let F(s) be the Laplace transform of.f(.t), and.f(O) is the limit ofj(t) as t approaches 0. The 
Laplace transform of the time derivative of f{t) is 
.c[dfd(t)] = sF(s) -lim f(t) = sF(s) -f(O) t t--+O (2-127) 
In general, for higher-order derivatives of .f(t), 
.c[d" f(t)] = s"F(s) -lim [sn-1 f(t) + s'-2 df(t) + ... + dn-1 f(t)] 
dtn t-0 dt dt'1-1 (2-128) 
= snF(s) -s1' ·l /(0) -s'i-2 /(l)(O) -... -f(,i-t)(o) 
where l'\O) denotes the ith-order derivative of flt) with respect to t, eYaluated at t = 0. 
2-4 Laplace Transform ~ 55 
Ill Theorem 4. Integration 
The Laplace transform of the first integral off(.t) with respect tot is the Laplace transform 
of ft.t) divided bys; that is, 
C [la' /(r)dr] = F;s) (2-129) 
For nth-order integration, 
[ ft" {t"-1 {ti l F(s) £ Jo Jo · · · Jo f(t)d1:dt1dt2 · · · dtn-l = --;n-(2-130) 
II Theorem 5. Shift in Time 
The Laplace transform of ft.t) delayed by time Tis equal to the Laplace transform f(t) 
multiplied by e-1\ that is, 
.C[ f(t-T)u8(t -T)] = e-TsF(s) (2-131) 
where u5(t -T) denotes the unit-step function that is shifted in time to the right by T. 
ti Theorem 6. lnitial .. Value Theorem 
If the Laplace transform of .ft t) is F(s ), then 
lim f(t) = lim sF(s) r-o s-oo (2-132) 
if the limit exists. 
Ill Theorem 7. Final-Value Theorem 
If the Laplace transform of f(t) is F(s), and if sF(s) is analytic (see Section 2-1-4 on the 
definition of an analytic function) on the imaginary axis and in the right half of the s-plane, 
then 
lim f(t) = lim sF(s) 
1-00 s-o (2-133) 
The final-value theorem is very useful for the analysis and design of control systems, 
because it gives the final value of a time function by knowing the behavior of its Laplace 
transform at s = 0. The final-value theorem is not valid if sF(s) contains any pole whose 
real part is zero or positive, which is equivalent to the analytic requirement of sF(s) in the 
right-half s-plane, as stated in the theorem. The following examples illustrate the care that 
must be taken in applying the theorem. 
~ EXAMPLE z-4 .. 3 Consider the function 
5 F(s) = -s(.....,,s2_+_s_+_2_) 
Because sF(s) is analytic on the imaginary axis and in the right-half s-plane, the final-value theorem 
may be applied. Using Eq. (2-133), we have 
lim f(t) = lirn sF(s) = lim 2 5 
2 = ~2 (2-135) t-oc s-o s-os +s+ 
4111 
56 · -Chapter 2. Mathematical Foundation 
. EXAMPLE 2-4-4 Consider the function 
(V 
F(s) =-.,--2 s~ +w (2-136) 
which is the Laplace transfonn of f(t) = sin <tJt. Because the function sF(s) has two poles on the 
imaginary axis of the s-plane, the final-value theorem cannot be applied in this case. In other words, 
although the final-value theorem would yield a value of zero as the final value of flt). the result is 
erroneous. 
. Theorem 8. Complex Shifting 
The Laplace transform of /(t} multiplied by e =fix,~ where a is a constant, is equal to the 
Laplace transform F(s), withs replaced by s ± a; that is, 
£[ e=F«t f(t)] = F(s ± a) (2-137) 
TABLE 2-4 Theorems of Laplace Translorms 
Multiplication by a constant 
Sum and difference 
Differentiation 
Integration 
Shift in time 
Initial-value theorem 
Final-value theorem 
Complex shifting 
Real convolution 
Complex convolution £[kf(t)J = kF(s) 
£, [d~~)] = sF(s) -f(O) 
£ [d''f(t)] = s" F(s) -s11-1 f(O) -s'1-2 /(0) dt11 
where 
j(k) (0) = dkf~t) I 
dt t""O 
[1'" 11
11-1 1t1 ] F(s) £ · · · f(t)drdt1dt2 · · ·dt11-1 = -o o o s" 
,C[ f(t -T)u.,(t -T)J = e-T.<.F(s) 
lim f (t) = lim sF(s) t-0 s-x. 
lirn J(t) = Iirn sF(s) if sF(s) does not have poles on or to the right of the imaginary axis in 
f-+X S->0 
the s-plane. 
£[ e::rar f(t)] = F(s ± a) 
F1 (s)F2(s) = .c[fot ft(,:')f2(t ~ r)dr] 
= £ [l !2(1:) Ii (t ~ r)d1:] = £[Ji (t) * f2(t)] 
.C1f1 (r) h(t)) = F1 (s) * F2(s) 
2-5 Inverse Laplace Transform by Partial-Fraction Expansion • 57 
• Theorem 9. Real Convolution (Complex Multiplication) 
Let F1 (s) and F2(s) be the Laplace transforms of f1(t) and f2(t). 
ft (t) = 0, fz(t) = 0, fort< 0, then 
Fi (s)F2(s) = .C[/1 (t) * h(t)] 
= c[fo' /1(,)h(t- ,)d,] 
= c[fo' Ji(,)!1 (t-,}d,] 
where the symbol * denotes convolution in the time domain. respectively, and 
(2-138) 
Eq. (2-138) shows that multiplication of two transformed functions in the complex 
s-domain is equivalent to the convolution of two corresponding real functions oft in the 
!-domain. An important fact to remember is that the inverse Laplace transform of the 
product of two functions in the s-domain is not equal to the product of the two 
corresponding real functions in the t-domain; that is, in general, 
(2-139) 
There is also a dual relation to the real convolution theorem, called the complex 
convolution. or real multiplication. Essentially, the theorem states that multiplication 
in the real t-domain is equivalent to convolution in the complex s-domain; that is, 
.C[/1 (t) fz(t)] = Fi (s)*F2(s) (2-140) 
where * denotes complex convolution in this case. Details of the complex convolution 
formula are not given here. Table 2-4 summarizes the theorems of the Laplace transforms 
represented. 
• 2-5 INVERSE LAPLACE TRANSFORM BY PARTIAL-FRACTION EXPANSION 
In a majority of the problems in control systems, the evaluation of the inverse Laplace 
transform does not rely on the use of the inversion integral of Eq. (2-124). Rathert the 
inverse Laplace transform operation involving rational functions can be carried out using a 
Laplace transform table and partial-fraction expansiont both of which can also be done by 
computer programs. 
2-5-1 Partial-Fraction Expansion 
When the Laplace transform solution of a differential equation is a rational function ins. it 
can be written as 
Q(s) 
G(s) = P(s) 
where P(s) and Q(s) are polynomials of s. It is assumed that the order of P(s) ins is greater 
than that of Q(s). The polynomial P(s) may be written 
(2-142) 
where ao, a1, ... , an-I are real coefficients. The methods of partial~fraction expansion will 
now be given for the cases of simple poles, multiple-order poles, and complex-conjugate 
poles of G(s). 
58 ,.. Chapter 2. Mathematical Foundation 
G(s) Has Simple Poles If all the poles of G(s) are simple and real, Eq. (2-117) can be 
written as 
G(s) = Q(s) = Q(s) 
P(s) (s + St )(s + s2) · · · (s + sn) 
where st i-s2 f:. · · · #sn, Applying the partial-fraction expansion, Eq. (2~143) is written 
Ksl Ks2 K:!m G(s) =--+--+ ··· +--s + St S + S2 S + S,z (2-144) 
The coefficient K5; (i = 1, 2, ... , n) is determined by multiplying both sides of Eq. (2-143) 
by the factor (s + s;) and then settings equal to -s;. To find the coefficient K9i, for instance, 
we multiply both sides of Eq. (2-143) by (s + si) and lets= -si. Thus, 
Kst = [<s + s1) Q(s)] I = Q(-si) 
P(s) s=-sL (s2 -s1)(s3 -s1) · · · (sn --si) 
IJ,, EXAMPLE 2~5-1 Consider the function 
G(s) _ 5s + 3 
-(s + 1 )(s + 2)(s + 3} 5s+3 
which is written in the partial-fraction expanded form: 
G( ) K-1 K-2 K_3 
s =s+l+s+2+s+3 
The coefficients K-1, K-2• and K-3 are determined as follows: 
I 5(-1)+3 
K-1 = [(s + I)G(s)] s=-l = (2 -1)(3 -1) = -1 
I 5(-2) + 3 
K-2 = [(s + 2)G(s)] s=-Z = (l _ 2)(3 _ Z) = 7 
I 5(-3) + 3 
K-3 = [(s + 3)G(s)] s=-3 = (1 -3)(2 -3) -6 
Thus. Eq. (2-146) becomes 
Toolbox 2-5-1 -1 7 6 G(s)=-+--­s+1 s+2 s+3 
For Example 2-5-1, Eq. (2-146) is a ratio of two polynomials. 
>> b = [ 5 3] % numerator po1-ynomi.al coefficients 
>>a= [16 116] % denominator polynomial coefficients 
You can calculate the partial fraction expansion as 
>> [r, p, k] = residue(b, a) 
r= 
-6.0000 
7.0000 
-1.0000 (2-145) 
(2-146) 
(2-147) 
(2-148) 
(2-149) 
(2-150) 
(2-151) 
2-5 Inverse Laplace Transform by Partial-Fraction Expansion ~ 59 
p= 
-3.0000 
-2.0000 
-1.0000 
k= 
[] 
Now, convert the partial fraction expansion back to polynomial coefficients. 
>> [b,a] =residue(r,p,k) 
b= 
0.0000 5.0000 3.0000 
a= 
1. 0000 6.0000 11.0000 6.0000 
Note that the result is normalized for the leading coefficient in the denominator. 
G(s) Has Multiple-Order Poles If r of the n poles of G(s) are identical, or we say that the 
pole at s = -Si is of multiplicity r, G(s) is written 
G(s) = Q(s) = Q(s) r 
P(s) (s + si)(s + s2) · · · (s + Sn-r)(s + s;) (2~152) 
(i # 1, 2, ... , n -r). then G(s) can be expanded as 
G(s) = Kst + Ks2 + ... + Ks(n-r) 
s+s1 s+sz s+s,i-r 
I +--n -r tenns of simple poles --+ I 
A1 A2 Ar +--+ +···+---s+s; (s+s;)2 (s+s;Y (2-153) 
f +-r terms of repeated poles --+ I 
Then (n -r) coefficients, Kst, Ks2, •.. , Ks(n-r)• which correspond to simple poles, may be 
evaluated by the method described by Eq. (2-145). The determination of the coefficients 
that correspond to the multiple-order poles is described as follows. 
A,= [(s+ s;)' G(s)J 1.r=-,, (2-154) 
d [ ,· ] I Ar-I = ds (s + Si) G(s) s=-s; (2-155) 
1 d2 [< ,. ] I Ar-2 = 2! ds2 s + Si) G(s) s=-s, (2-156) 
1 d,._. I 
At= (r-l)!dsr-l [(s+s1)'G(s)] s=-s; (2-157) 
60 ..._ Chapter 2. Mathematical Foundation 
.. EXAMPLE 2-5-2 Consider the function 
Toolbox 2-5-2 I G~)= = ? s(s + 1 )3(s + 2) s5 + 5.\'4 + 9s3 + 1s .. + 2s 
By using the format of Eq. (2-153), G(s) is written 
G( ) Ko K~2 A I A2 A:1 s =-+--+--+---?+--­s s + 2 s + l (s + l )"' (s + 1)3 
The coefficients corresponding to the simple poles are 
Ko = [sG(s)] 1.t=O = ~ 
K-2 = [(s + 2)G(s)] L_
2 = ~ 
and those of the third-order pole are 
A2 = !!_ [<s + 1 )3G(s) J I = !!_ [-1-] I = 0 ds x=-l ds s(s + 2) s--I 
1 d2 I I d2 [ I ] I At= 21d 2 [<s + 1)3G(s)] = 2d 2 ~( 2) = -1 
' S s=-1 S S S + s=-1 
The completed partial-fraction expansion is 
I 1 I 
G(s) =2s+2(s+2)--l--- 3 s + (s +I)' 
For Example 2~5-2, Eq. (2-158) is a ratio of two polynomials. 
>> clear all 
>>a= (1 5 9 7 21 % coefficients of polynomial s"4 + 5'f:s"3 + 9*s"2 + 7*s + 2 
a= 
1 5 9 7 2 
>> b = [1] %-polynomial coefficients 
b= 
1 
>> [r, p, k] = residue (b, a)% b is the numerator and a is the denominator 
r= 
-1.0000 
1.0000 
-1.0000 
1.0000 (2-158) 
(2-159) 
(2-160) 
(2-161) 
(2-162) 
(2-163) 
(2-164) 
(2-165) 
2-5 Inverse Laplace Transform by Partial-Fraction Expansion ~ 61 
p= 
-2.0000 
-1. 0000 
-1.0000 
-1.0000 
k= 
[] 
>> [b, a] = residue Cr, p, k)% Obtain the polynomial form 
b= 
a= -0.0000 
1. 0000 -0.0000 -0.0000 1.0000 
5.0000 9.0000 7.0000 2.0000 
G(s) Has Simple Complex-Conjugate Poles The partial-fraction expansion of Eq. (2-
144) is valid also for simple complex-conjugate poles. Because complex-conjugate poles 
are more difficult to handle and are of special interest in control system studies, they 
deserve special treatment here. 
Suppose that G(s) of Eq. (2-117) contains a pair of complex poles: 
s = -er + jw and s = -u -jw 
The corresponding coefficients of these poles are found by using Eq. (2-145), 
K-a+1·w = (s + <J -j(JJ)G(s)J +. s=-<1 )Ct> (2-166) 
K-a-1·w = (s + <J + J'w}G(s}J . s=-<1-JW (2-167) 
~ EXAMPLE 2-5-3 Consider the second-order prototype function 
') 
QJ'" 
G(s) = '1 
s2 + 2{wns + w; (2-168) 
Let us assume that the value of tis less than one. so that the poles of G(s) are complex. Then, G(s) is 
expanded as follows: 
G( ) = K-(T+ jw K-o-jw s . + . s + a -JW s + a + JW (2-169) 
where 
(2-170) 
and 
(2-171) 
62 ._ Chapter 2. Mathematical Foundation 
The coefficients in Eq. (2-169) are determined as 
I (JJ2 
K-rr+jw = (s + a -jw)G(s} = -2 .n 
s=-a+ jw JlV 
K-a-jw = (s +a+ jw)G(s)I = -u>~ 
s=-a-jw 2JW 
The complete pai1ial-fraction expansion of Eq. (2-168) is 
G( ) = w; [ 1 _ 1 ] 
s 2jw s + a -jll, s + fT + jcei 
Taking the inverse Laplace transform on both sides of the last equation gives 
Or, 
),-2-6 APPLICATION OF THE LAPLACE TRANSFORM TO THE SOLUTION OF LINEAR 
ORDINARY DIFFERENTIAL EQUATIONS (2-172) 
(2-173) 
(2-174) 
(2-175) 
As we see later, the mathematical models of most components of control systems are 
represented by first-or second-order differentia1 equations. In this textbook, we primarily 
study linear ordinary differential equations with constant coefficients such as the first­
order 1inear system: 
dy(t) + aoy(t) = f(t) 
dt 
or the second-order linear system: 
d2y(t) dv(t) --+ a1 -· -+ aoy(t) = f(t) dt2 dt (2-177) 
(2-178) 
Linear ordinary differential equations can be solved by the Laplace transform method 
with the aid of the theorems on Laplace transfonn given in Section 2-4, the partial­
fraction expansion, and the table of Laplace transforms. The procedure is outlined 
as follows: 
1. Transform the differential equation to the s-domain by Laplace transform using 
the Laplace transform table. 
2. Manipulate the transformed algebraic equation and solve for the output variable. 
3. Perfonn partial-fraction expansion to the transformed algebraic equation. 
4. Obtain the inverse Laplace transform from the Laplace transfonn table. 
Let us examine two specific cases, first-and second-order prototype systems. 
2-6 Application of the Laplace Transform < 63 
2-6-1 First-Order Prototype System 
Consider Eq. (2-177), which may also be represented by the first-order prototype 
form: 
dy(t) 1 -+-v(t) ::::: f(t) dt r· · (2-179) 
where, t' is known as the time constant of the system, which is a measure of how fast the 
system responds to initial conditions of external excitations. 
~" EXAMPLE 2-6-1 Find the solution of the first-order differential Eq. (2-179). 
SOLUTION For a unit step input 
f(t) = lls(t) = { ~: 
Eq. (2-179) is written as t < 0, 
t;?: 0 
Us(t) = T_v(t) + y(t~ 
1 If y(O) = y (0) = O • .C (us(t)) = -and L(y(t}) = Y(s). we have 
.\' 
or 1 -= srY(s) + Y(s) s 
1 I Y(s) =--­s TS+ I 
Notice that the system has a pole at s = -1/r. 
Using partial fractions. Eq. (2-183) becomes 
Y(s) =Ko+ K_I/r 
s 'CS + 1 (2-180) 
(2-181) 
(2-182) 
(2-183) 
(2-184) 
where, Ko= 1 andK_11r = -1. Applying the inverse Laplace transform to Eq. (2-184), we get the 
time response of Eq. (2-179 ). 
v0(t) = 1 -e-tlr (2-185) 
where t is the time for y(I) to reach 63% of its final value of lim y(t) = I. t-•x 
Typical unit-step responses of y(t)are shown in Fig. 2-22 for a general value oft. As the value of 
time constant r decreases. the system response approaches faster to the final value. 
y(t) 
0.63 
0 -----------------------------
Figure 2-22 Unit-step response of a 
first-order RC circuit system. 
64 Chapter 2. Mathematical Foundation 
Toolbox 2-6-1 
The inverse Laplace transfonn for Eq. (2-183) is obtained using the MATLAB Symbolic Toolbox by the 
following sequence of MATLAB functions. 
:>> syms s tau; 
:>> ilaplace(1/(tau~"s"'2 + s)); 
The result is Eq. (2-185). 
Note, the sym command lets you construct symbolic variables and expressions, and the command: 
:>> syms s tau; 
is equivalent to: 
:>> s = sym( ' s' ) ; 
:>>tau= sym( 'tau'); 
Time response of Eq. (2-183 ), shown in Fig. 2-22, for a given value r = 0.1 is obtained using 
:.>> clear all; 
>> t = 0:0.01:1; 
:.>>tau= 0.1; 
» plot (1-exp(-t/tau)); 
You may wish to confirm that at t = 0.1, y(t) = 0.63. 
2-6~2 Second-Order Prototype System 
Similarly, for the second-order prototype of the form: 
d2y(t) dy(t) 2 di2 + 2~Wn dt + w11y(t) = f(t) (2-186) 
where t is known as the damping ratio, and w11 is the natural frequency of the system. The 
prototype forms of differential equations provide a common format of representing various 
components of a control system. The significance of this representation will become more 
evident when we study the time response of control systems in Chapter 5. 
EXAMPLE 2-6-2 Con.sider the differential equation 
d2)·(t) dv(t) ~ + 3 d/ + 2y(t) = Sus(t) (2-187) 
where uit) is the unit-step function, The initial conditions are y(O) = -1 and yll}(O) = 
t:(v(t)/dtl,=o = 2. To solve the differential equation. we first take the Laplace transform on both 
sides of Eq. (2-153): 
s2Y(s) -sy(O) -yfO(o) + 3sY(s) -3y(O) + 2Y(s) == 5/s (2-188) 
Substituting the values of the initial conditions into the last equation and solving for Y(s). we get 
-s2 -s + 5 ~s2 -s + 5 
Y(s) = s(s2 + 3s + 2) = s(s + l)(s + 2) 
2-6 Application of the Laplace Transform .._ 65 
Eq. (2-189) is expanded by partial-fraction expansion to give 
5 5 3 
Y(s) = 2s -s + 1 + 2(s + 2) (2-190) 
Taking the inverse Laplace transform of Eq. (2-190). we get the complete solution as 
The first term in Eq. (2-191) is the steady-state solution or the particular integral; the last two terms 
represent the transient or homogeneous solution. Unlike the classical method, which requires 
separate steps to give the transient and the steady-state responses or solutions, the Laplace transform 
method gives the entire solution in one operation. 
If only the magnitude of the steady-state solution of y(t) is of interest. the final-value theorem of 
Eq. (2-133) may be applied. Thus, 
r ( ) r Y( ) r -s2 -s + 5 5 
t~~ Y t = s~ s s = s ~o s2 + 3s + 2 = 2 (2-192) 
where, in order to ensure the validity of the final-value theorem, we have first checked and found that 
the poles of function .rY(s) are all in the left-half s-plane. 
I). EXAMPLE 2-6-3 Consider the linear differential equation 
d~~t) + 34.5 d~~) + IOOOy(t) = lOOOus(t) (2-193) 
The initial values of y(t) and dy(t)/dt are zero. Taking the Laplace transform on both sides of 
Eq. (2-193), and solving for Y(s). we have 
Y(s) _ 1000 _ w~ 
-s{s2 + 34.5s + 1000) -s(s2 + 2t;w,is + ~) (2-194) 
where, using the second-order prototype representation, t = 0.5455 and w11 = 31.62. The inverse 
Laplace transform of Eq. (2-194) can be executed in a number of ways. The Laplace transform table 
in Appendix C provides the time-response expression in Eq. (2-194) directly. The result is 
t :::::o (2-195) 
where 
1 ( rrrad) e = COS-( = 0,9938 fad ;:::; 56,94° lBOD (2-196) 
Thus, 
y(t} = 1 -1.l 93e-17·25' sin (26.5t + 0.9938) t ?= 0 (2-197) 
Eq. (2-197) can be derived by petforming the partial-fraction expansion of Eq. ( 2-194 ), knowing that 
the poles are at s = 0, -a+ jw, and -a -jw. where 
G = (W11 = 17.25 (2-198) 
(J) == Wn ~ ::= 26.5 (2-199) 
66 • Chapter 2. Mathematical Foundation 
The partial-fraction expansion of Eq. (2-194) is written 
Y( ) Ko K-a+jw K-<T-jw s =-+ . + . 
S S + (1 -)W $ + (J' + JW 
where 
Ko= sY(s) ls=O = 1 
I -jefJ 
K-u+jw = (s + u-jw)Y(s) = .n 
s=-u+jw 2J I -t;2 
I -e-i"1 
K-rr-jw = (s+a+ jw)Y(s) = ·~ 
s=-a-jw 2J 1 - { 
The angle q, is given by 
and is illustrated in Fig. 2-23. 
The inverse Laplace transform of Eq. (2-200) is now written 
y(t) = t + . I , e-i:wnt [ei(<tJt-</,) _ e-i(ciJt-r/J}] 2J~ 
= 1 + I e-1:;co,.t sin[w,i~t-efJ] ~ 
Substituting Eq. (2-204) into Eq. (2-205) for¢. we have 
y(t} = 1 -R e-~w,.t sin [w11Vl -t;2t + cos-1s] t ~o 
or 
y(t) = 1 -1.193e-17·25' sin(26.5t+0.9938) t~O 
j(O 
s-plane 
-8=-tto,1 0 (J' (2-200) 
(2-201) 
(2-203) 
(2-205) 
(2-206) 
(2-207) 
Figure 2-23 Root location in the s-plane. ~1 
2-7 Impulse Response and Transfer Functions of Linear Systems 67 
Toolbox 2-6-2 
Time response of Eq. (2-194) for a unit"step input may also be obtained using 
nurn = [1000]; 
den= [1 34. 5 1000]; 
G= tf (numrden); 
step(G); 
title ('Step Response') 
xlabel ('Time (sec') 
ylabel ( 'Arnpli tude 1 
) Alternatively: 
s = tf (' s'); 
G=1000/(sA2 + 34. S*s+lOOO); 
step (G); 
title ('Step Response') 
xlabel ( 1 Time ( sec ' ) 
ylabel ('Amplitude') 
''step·' produces the lime response of a function for a unit-step input. 
step Response 1.4--~~--~~~--~~---~~~--~~--,~~~---~----, 
1.2 
i1l 0.8 
-g 
:t:: is. 
£ 0.6 
0.4 
0.2 
0.05 0.1 0.15 0.2 0.25 0.3 0.35 
Time (sec) 
2-7 IMPULSE RESPONSE AND TRANSFER FUNCTIONS OF LINEAR SYSTEMS 
The classical way of modeling linear time-invariant systems is to use transfer functions to 
represent input-output relations between variables. One way to define the transfer function 
is to use the impulse response~ which is defined as follows. 
2-7-1 Impulse Response 
Consider that a linear time~invariant system has the input u(t) and output y(t). As shown 
in Fig. 2-24, a rectangular pulse function u(t) of a very large magnitude i~/2e becomes 
68 ~ Chapter 2. Mathematical Foundation 
ti (t) 
ie t 
l i i 
! i r-r i t+ r 
Figure 2-24 Graphical representation an 
impulse function. 
an impulse function for very small durations as e---+ 0. The equation representing 
Fig. 2-24 is 
u(t) = { it 2e 0 t5=T-B 
T-f.<t<r+& 
0 t~T+B (2-208) 
For u = I, u(t) = o(t) is also known as unit impulse or Dirac delta function. Fort= 0 in 
Eq. (2-208), using Eq. (2-116) and noting the actual limits of the integral are defined from 
t = o-to t = oo, it is easy to verify that the Laplace transform of ~(t) is unity, 
i.e. £[8(t)] = I as e ~ 0. 
The important point here is that the response of any syste,n can be characterized by its 
impulse response g(t), which is defined as the output when the input is a unit-impulse 
function o(t). Once the impulse response of a linear system is known, the output of the 
system y(t), with any input, u(t), can be found by using the transfer function. We define 
G(s) = L:(y(t)) = Y(s) 
,C(u(t)) F(s) (2-209) 
as the transfer function of the system. 
~ EXAMPLE 2-7-1 For the second-order prototype system Eq. (2-186 ). shown in Example 2-5-3 as: 
d2y(t) dy(t) 2 2 ~ + 2{wn cit+ w11y(t) = w,,u(t) (2-210) 
Hence, 
O(s) = .C(y(t)) = w; 
.C(u(t)) s2 + 2{wns + w;, (2-211) 
is the transfer function of the system in Eq. (2-210). Similar to Example 2-5-3, given zero initial 
conditions. the impulse response g(t) is 
g(t) = w,, e-tw,.t sinwnVl -~2t t 2:: 0 
vft-{2 (2-212) 
2-7 Impulse Response and Transfer Functions of Linear Systems ~ 69 
Toolbox 2-7-1 For a unit-step input u{t) = Us{t). using the convolution properties of Laplace transforms. 
£[y(t)) = £[us *K(t)) 
[ (' ] G(s) = £, Jo usg(t --r)dt = -5-
From the inverse Laplace transform of Eq. (2-213). the output y(t) is therefore 
r llsg(t --r)dr lo 
or 
where, () = cos-1 t;. e-(W,;f ( ) y(t)=l-~sin w11~t+8 I -1;2 t~O 
The unit impulse response of Eq. (2-194) may be obtained using 
num =: [1000]; 
den= [ 1 34 . S 1000 J ; 
G = tf (num,den); 
impulse(G); Alternatively: 
s::: tf (' s'); 
G=lOOO/(sA2+34.S*s+1000); 
impulse CG); 
Impulse Response 
-sL-~~-'--~~--~~-'-~~--"~~~'"'---~----~--~~_...~ _ __, 
0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 (2-213) 
70 Chapter 2. Mathematical Foundation 
2-1 .. 2 Transfer Function (Single-Input, Single-Output Systems) 
The transfer/unction of a linear time-invariant system is defined as the Laplace transform 
of the impulse response, with all the initial conditions set to zero. 
Let G(s) denote the transfer function of a single-input. single-output (SISO) system, with 
input u(t), output y{t). and impulse response ,q(t). The transfer function G(s) is defined as 
G(s) = .C{g(t)] (2-215) 
The transfer function G(s) is related to the Laplace transform of the input and the output 
through the following relation: 
Y(s) 
G(s) = U(s) (2-216) 
with all the initial conditions set to zero, and Y(s) and U(s) are the Laplace transforms of 
y(t) and u(t)t respectively~ 
Although the transfer function of a linear system is defined in terms of the impulse 
response, in practice, the input-output relation of a linear time-invariant system with 
continuous-data input is often described by a differential equation. so it is more convenient 
to derive the transfer function directly from the differential equation. Let us consider that 
the input-output relation of a linear time-invariant system is described by the following 
nth~order differential equation with constant real coefficients: 
d"y(t) d1t-l y(t) dy(t) 
dt" + a,i-l dtn-l + ... + a1 dt+aoy(t) 
amu(t) am-l u(t) du(t) 
=bm-i-.-+bm-1 d 1 +···+h1-d +hou(t) ~~ · r- · t (2-217) 
The coefficients ao, a1, ... , a11_ 1 and bo, bi, ... , bm are real constants. Once the input u(t) 
fort 2 to and the initial conditions of y(t) and the derivatives of y(t) are specified at the initial 
time t = to, the output response y(t) fort 2 to is determined by solving Eq. (2-217). However, 
from the standpoint of linear-system analysis and design. the method of using differential 
equations exclusively is quite cumbersome. Thus. differential equations of the form of Eq. 
(2-217) are seldom used in their original form for the analysis and design of control systems. It 
should be pointed out that, although efficient subroutines are available on digital computers 
for the solution of high-order differential equations. the basic philosophy of linear control 
theory is that of developing analysis and design tools that will avoid the exact solution of the 
.zystem differential equations. except when computer-simulation solutions are desired for final 
presentation or verification. In classical control theory. even computer simulations often start 
with transfer functions. rather than with differential equations. 
To obtain the transfer function of the linear system that is represented by Eq. (2-217), 
we simply take the Laplace transform on both sides of the equation and assume zero initial 
conditions. The result is 
(s'1+a11-1S11-J + ··· +ais+ao)Y(,\') = (b111,f1+bm-1Sm-l + ... +bis+bo)U(.\') 
(2-218) 
The transfer function between u(t) and y(t) is given by 
G(s) = Y(s) = bmsm + bm-tSm-l + · · · +bis+ ho 
U(s) sn + a11-1s11-1 + · · · + a1s + ao (2-219) 
H Impulse Response and Transfer Functions of Linear Systems -c 71 
The properties of the transfer function are summarized as follows: 
• The transfer function is defined only for a linear time-invariant system. It is not 
defined for nonlinear systems. 
• The transfer function between an input variable and an output variable of a system 
is defined as the Laplace transform of the impulse response. Alternately, the 
transfer function between a pair of input and output variables is the ratio of the 
Laplace transform of the output to the Laplace transform of the input. 
• All initial conditions of the system are set to zero. 
• The transfer function is independent of the input of the system. 
• The transfer function of a continuous-data system is expressed only as a function of 
the complex variable s. It is not a function of the real variable, time, or any other 
variable that is used as the independent variable. For discrete~data systems modeled 
by difference equations, the transfer function is a function of z when the z~ 
transfonn is used (refer to Appendix D). 
2-7-3 Proper Transfer Functions 
The transfer function in Eq. (2-219) is said to be strictly proper if the order of the 
denominator polynomial is greater than that of the numerator polynomial (i.e., n > m). If 
n = m, the transfer function is called proper. The transfer function is improper if m > n. 
2-7-4 Characteristic Equation 
The characteristic equation of a linear system is defined as the equation obtained by setting 
the denominator polynomial of the transfer function to zero. Thus, from Eq. 
(2-219), the characteristic equation of the system described by Eq. (2-217) is 
sn + a11-1sn 1 + · · · + a1s + ao = 0 (2-220) 
Later we shall show that the stability of linear, single-input, single-output systems is 
completely governed by the roots of the characteristic equation. 
2-7-5 Transfer Function (Multivariable Systems) 
The definition of a transfer function is easily extended to a system with multiple inputs and 
outputs. A system of this type is often referred to as a multivariable system. In a multi variable 
system, a differential equation of the fonn of Eq. (2-217) may be used to describe the relationship 
between a pair of input and output variables, when all other inputs are set to zero. Because the 
principle of superposition is valid for linear systems, the total effect on any output due to all the 
inputs acting simultaneously is obtained by adding up the outputs due to each input acting alone. 
In general, if a linear system hasp inputs and q outputs. the transfer function between 
the jth input and the ith output is defined as 
(2-221) 
with Rk(s) = 0, k = 1,2, ... ,p, k-:j=j. Note that Eq.(2-221)is defined with only thejth 
input in effect, whereas the other inputs are set to zero. When all the p inputs are in action, 
the ith output transform is written 
(2-222) 
72 _.. Chapter 2. Mathematical Foundation 
It is convenient to express Eq. (2-222) in matrix-vector form; 
Y(s) = G(s)R(s) 
where 
Y2(s) 
[ Yr (s) l 
Y(s) = . 
is the q x 1 transformed output vector; Yq(s) 
R1 (s) 
R2(s) 
R(s) = 
Rp(s) 
is the p x 1 transformed input vector; and 
[G11 (s) 
G(s) = G2~ (s) 
Gq1 (s) 
is the q x p transfer-function matrix. 
}it, 2-8 STABILITY OF LINEAR CONTROL SYSTEMS Gl2(s) 
G22(s) 
Gq2(s) G1p(s) l 
G2~(s) 
Gqp(s) (2-223) 
(2-225) 
(2-226) 
From the studies of linear differential equations with constant coefficients of SISO systems, we 
learned that the homogeneous solution that corresponds to the transient response of the system is 
governed by the roots of the characteristic equation. Basically, the design oflinearcontrol systems 
may be regarded as a problem of arranging the location of the poles and zeros of the system 
transfer function such that the system will perfonn according to the prescribed specifications. 
Among the many forms of performance specifications used in design, the most 
important requirement is that the system must be stable. An unstable system is generally 
considered to be useless. 
When all types of systems are considered-linear, nonlinear, time-invariant, and time­
varying-the definition of stability can be given in many different forms. We shall deal 
only with the stability of linear SISO time-invariant systems in the following discussions. 
For analysis and design purposes, we can classify stability as absolute stability and 
relative stability. Absolute stability refers to whether the system is stable or unstable; it is 
a yes or no answer. Once the system is found to be stable. it is of interest to determine how 
stable it is. and this degree of stability is a measure of relative stability. 
In preparation for the definition of stability, we define the two following types of 
responses for linear time-invariant systems: 
• Zero .. state response. The zero-state response is due to the input only; all the initial 
conditions of the system are zero. 
2-9 Bounded-Input, Bounded-Output (BIBO) Stability-Continuous-Data Systems ~ 73 
• Zero-input response. The zero-input response is due to the initial conditions only; 
all the inputs are zero. 
From the principle of superposition, when a system is subject to both inputs and initial 
conditions, the total response is written 
Total response = zero-state response + zero-input response 
The definitions just given apply to continuous-data as well as discrete-data systems. 
lllJli. 2-9 BOUNDED-INPUT, BOUNDED-OUTPUT (BIBO) 
STABILITY-CONTINUOUS-DATA SYSTEMS 
Let u(t), y(t), and g(t) be the input, output, and the impulse response of a linear time-invariant 
system, respectively. With zero initial conditions\ the system iY said to be BIBO (bounded-input, 
bounded-output) stable, nr simply stable, if its output y(t) is bounded to a bounded input u(t). 
The convolution integral relating u(t), y(t), and g(t) is 
y(t) = roc-u(t-T)g(r)dr lo 
Taking the absolute value of both sides of the equation, we get 
ly(t)I = \{" u(t -,)g[<)d•\ 
or 
If u(t) is boundedT 
lu(t)J ~ M 
where Mis a finite positive number. Then, 
Thus, if y(t) is to be bounded, or 
Jy(t) J :S'. N < 00 
where N is a finite positive number, the following condition must hold: 
Or, for any finite positive Q, (2-227) 
(2-228) 
(2-229) 
(2-230) 
(2 .. 231) 
(2-232) 
(2-233) 
(2-234) 
74 .,. Chapter 2. Mathematical Foundation 
The condition given in Eq. (2-234) implies that the area under the !g(r)l-versus-r-curve 
must be finite . 
..,_ 2-10 RELATIONSHIP BETWEEN CHARACTERISTIC EQUATION ROOTS AND STABILITY 
To show the relation between the roots of the characteristic equation and the condition in 
Eq. (2-234), we write the transfer function G(s), according to the Laplace transform 
definition, as 
G(s) == .C[g(<)] == f" g(t)e-"dt (2-235) 
Taking the absolute value on both sides of the last equation, we have 
(2-236) 
Because le-st] = Je-ml, where a is the real part of s, whens assumes a value of a pole of 
G(s). G(s) = cc, Eq. (2-236) becomes 
00 ~ rx: lg(t)Jle-(11ldt lo (2-237) 
If one or more roots of the characteristic equation are in the right-half s-plane or on the jw­
axis~ a 2::: 0, then 
(2-238) 
Eq. (2-237) becomes 
oo ~ fx Mlg(t)Jdt = fx lg(t)ldt 
~) ~ (2-239) 
which violates the BIBO stability requirement. Thus, for BIBO stability, the roots of the 
characteristic equation. or the poles ofG(s), cannot be located in the riglu~half s-plane or 
on the jw-axis; in other wor{l~. they must all lie in the left-half s-plane. A system is said to 
be unstable if if is nut BlBO stable. Wht:n a system has routs un the jw-axis, say, al s = jwo 
ands= -}mo, if the input is a sinusoid, sin w0t, then the output will be of the form oft sin 
w0t, which is unbounded, and the system is unstable. 
_. 2-11 ZERO-INPUT AND ASYMPTOTIC STABILITY OF CONTINUOUS-DATA SYSTEMS 
In this section, we shall define zero-input stability and asymptotic stability and establish 
their relations with BIBO stability. 
Zero .. inpnt stability refers to the stability condition when the input is zero, and the 
system is driven only by its initial conditions. We shall show that the zero-input stability 
also depends on the roots of the characteristic equation. 
Let the input of an nth-order system be zero and the output due to the initial conditions 
be y(t). Then, y(t) can be expressed as 
n-1 
y(t} = I:gk(t)y(k)<10) (2-240) 
k=O 
2-11 Zero-Input and Asymptotic Stability of Continuous-Data Systems ~ 75 
where 
(k) ( ) dky(t) I y to =--k-
dt l=tn (2-241) 
and gk(t) denotes the zero-input response due to y<kJ(t0). The zero-input stability is defined 
as follows: If the ::ero-input re.i;;ponse y(t), subject to the finite initial conditions, ylk>(t0), 
reaches zero as t approaches infinity, the system is said to be zero-input stable, or stable; 
otherwise. the system is unstable. 
Mathematically, the foregoing definition can be stated: A linear time-inmriant system 
is zero-input stable if.for any set of finite y<k>(t0). there exists a positive number M~ which 
depends on y<k>(to), such that 
1. 
\y(t}\ S M < oo for all t ~ to (2-242) 
and 
2. 
lim IY(t)J = 0 l-•X (2-243) 
Because the condition in the last equation requires that the magnitude of y(t) reaches 
zero as time approaches infinity~ the zero-input stability is also known at the asymptotic 
stability. 
Taking the absolute value on both sides of Eq. (2-240), we get 
(2-244) 
Because all the initial conditions are assumed to be finite, the condition in Eq. (2-242) 
requires that the following condition be true: 
ti-1 
2)gk(t)I < oo for all t~ 0 (2-245) 
k=O 
Let the n characteristic equation roots be expressed as Si = a;+ jw;, i = 1, 21 ••• , 11. 
Then, if 1n of then roots are simple, and the rest are of multiple order, y(t) will be of the 
form: 
l1l IJ-,n-J 
y(t) = LKies,t + E L/esit (2-246) 
i=l i:::::O 
where K1 and Li are constant coefficients. Because the exponential terms es,t in the last 
equation control the response y(t) as t-+ oo, to satisfy the two conditions in Eqs. (2-242) 
and (2-243 ), the real parts of si must be negative. In other words, the roots of the 
characteristic equation must all be in the left-half ,\·-plane. 
From the preceding discussions, we see that.for linear time-invariant systerns. BIBO, 
zero-input, and asymptotic stability all have the same requirement that the roots of the 
characteristic equation must all he located in the left-half s-p/a,1e. Thus. if a ,\:vstem is 
BIBO stable, it must also he ::erowinput or asymptoticttl£v sltlhle. For this reason, we shall 
simply refer to the stability condition of a linear system as stable or unstable. The latter 
76 i.,. Chapter 2. Mathematical Foundation 
TABLE 2-5 Stability Conditions of Linear Continuous-Data Time-Invariant SISO Systems 
Stability Condition 
Asymptotically stable or simply stable 
Marginally stable or marginally 
unstable 
Unstable Root Values 
a, < 0 for all i, i = l 1 2, ... , n. (All the roots are in the 
left-half s-plane.) 
a; = 0 for any i for simple roots. and no a; > 0 
For i = I, 2, ... , n (at least one simple root. no 
multiple-order roots on the jw-axis, and n roots in the 
right-half s-plane; note exceptions) 
a;> 0 for any i, or a;= 0 for aay multiple-order root; 
i = 1, 2i ... , n (at least one simple root in the right­
half s-plane or at least one multiple-order root on the 
jw-axis) 
condition refers to the condition that at least one of the characteristic equation roots is not 
in the left-half s-plane. For practical reasons. we often refer to the situation in which the 
characteristic equation has simple roots on the jw-axis and none in the right-half plane as 
marginally stable or marginally unstable. An exception to this is if the system were 
intended to be an integrator (or, in the case of control systems, a velocity control system); 
then the system would have root(s) at s = 0 and would be considered stable. Similarly, if 
the system were designed to be an oscillator, the characteristic equation would have simple 
roots on the jw-axis, and the system would be regarded as stable. 
Because the roots of the characteristic equation are the same as the eigenvalues of A of 
the state equations, the stability condition places the same restrictions on the eigenvalues. 
Let the characteristic equation roots or eigenvalues of A of a linear continuous-data 
time-invariant SISO system be s; =a;+ jw;, i = l, 2, ... , n. If any of the roots is 
complex, it is in complex-conjugate pairs. The possible stability conditions of the system 
are summarized in Table 2-5 with respect to the roots of the characteristic equation. 
The following example illustrates the stability conditions of systems with reference to 
the poles of the system transfer functions that are also the roots of the characteristic 
equation . 
.,._ EXAMPLE 2-11-1 The following closed-loop transfer functions and their associated stability conditions are given. 
M(s) - 20 
-(s+ l)(s+2)(s+3) BIBO or asymptotically stable (or. simply, stable) 
M(s) _ 20(s + 1) 
-(s -l)(s2 + 2s + 2) Unstable due to the pole at s = 1 
M(s) _ 20(s -1) 
-(s + 2)(s2 + 4) Marginally stable or marginally unstable due to s = ±j2 
M(s) = to 
(s2 + 4)2(s + 10} Unstable due to the multiple-order pole at s = ±j2 
M(s) - 10 -s4 + 30s3 + s2 + 10s Stable if the pole at s = 0 is placed intentionally 
2-12 Methods of Determining Stability 77 
2-12 METHODS OF DETERMINING STABILITY 
The discussions in the preceding sections lead to the conclusion that the stability of linear 
time-invariant SISO sysLems can be determlned by checking on the location of the roots of 
the characteristic equation of the system. For all practical purposes , there is no need to 
compute the complete system response to determine stability. The regions of stability and 
instability in the s-plane are illustrated in Fig. 2-25. When the system parameters are all 
known, the roots of the characteristic equation can be found using MATLAB as demon­
strated in various MATLAB Toolbox windows discussed earlier in this chapter. The 
Transfer Function Symbolic Tool (tfsym) developed for this chapter may also be utilized to 
find the transfer function poles and zeros. See the end of this chapter for some examples. 
These programs are discussed in detail in Appendix G. For design purposes, there will be 
unknown or variable parameter s imbedded in the characteristic equation, so a Routh­
Hurwitz stability routine has also been developed for this textbook (tfrouth), which is 
discussed at the end of this chapter. 
The methods outlined in the following list are well known for determining the stability 
of linear continuous -data systems without involving root solving. 
1. Routh-Hurwitz criterion . This criterion is an algebraic method that provides 
information on the absolute stability of a linear time-invariant system that has a 
characteristic equation with constant coefficients . The criterion tests whether any 
of the roots of the characteristic equation lie in the right-half s-plane. The number 
of roors that lie on the jcv-axis and in the right-half s-plane is also indicated . 
2. Nyquist criterion. This criterion is a semi-graphical method that gives informa­
tion on the difference between the number of poles and zeros of the closed-loop 
transfer function that are in the right-half s-plane by observing the behavior of the 
Nyquist plot of the loop transfer function. This topic is discussed in detail in 
Chapter 8, and the concepts of loop transfer function and close-loop systems are 
discussed in Chapter 3. 
3. Bode diagram. This diagram is a plot of the magnitude of the loop transfer 
function G(.iw)H(jw) in dB and the phase of G(jw)H(.icv) in degrees, all versus 
frequency W· The concepts of loop transfer function and closed-loop systems are 
Stable 
region 
Stable 
region jm 
0 s-plane 
Unstable 
region 
Unstable 
region 
Figure 2-25 Stable and unstable regions in the s-plane. 
78 ~ Chapter 2. Mathematical Foundation 
discussed in Chapter 3. The stability of the closed-loop system can be determined 
by observing the behavior of these plots. This topic is discussed in detail in 
Chapter 8. 
Thus, as will be evident throughout the text, most of the analysis and design 
techniques on control systems represent alternate methods of solving the same problem. 
The designer simply has to choose the best analytical tool, depending on the particular 
situation. 
Details of the Routh-Hurwitz stability criterion are presented in the following section. 
~ 2-13 ROUTH-HURWITZ CRITERION 
The Routh-Hurwitz criterion represents a method of determining the location of zeros of a 
polynomial with constant real coefficients with respect to the left half and right half of the 
s-plane, without actually solving for the zeros. Because root..jinding computer programs 
can solve for the zeros of a po~vnomial with ease, the value of the Routh-Hurwitz criterion 
is at best limited to equations with at least one unknown parameter. 
Consider that the characteristic equation of a linear time~variant SISO system is of the 
fonn 
F(s) = ans''+ an-lS'n-l + · · · + a1s + ao = 0 (2-247) 
where all the coefficients are real. To ensure the last equation does not have roots with 
positive real parts, it is necessary (but not sufficient) that the following conditions hold: 
1. All the coefficients of the equation have the same sign. 
2. None of the coefficients vanish. 
These conditions are based on the laws of algebra~ which relate the coefficients of 
Eq. (2-247) as follows: 
On-I ~ --= -L.t all roots a,i 
lln-2 " d f . --= ~ pro ucts o the roots taken two at a time 
an 
~~ ~ . --= -~ products of the roots taken three at a time 
ll,i 
ao n - = ( -1) product~ of all the roots 
lln (2-248) 
(2-249) 
(2-250) 
(2-251) 
Thus, all these ratios must be positive and nonzero unless at least one of the roots has a 
positive real part. 
The two necessary conditions for Eq. (2-247) to have no roots in the right-half s-plane 
can easily be checked by inspection of the equation. However, these conditions are not 
sufficient, for it is quite possible that an equation with all its coefficients nonzero and of the 
same sign still may not have all the roots in the left half of the s-plane. 
2-13 Routh~Hurwitz Criterion -<.1 79 
2~13-1 Routh's Tabulation 
The Hurwitz criterion gives the necessary and sufficient condition for all roots of Eq. 
(2-247) to lie in the left half of the s-plane. The criterion requires that the equation's n 
Hurwitz determinants must all be positive. 
However, the evaluation of the n Hurwitz detenninants is tedious to carry out. But 
Routh simplified the process by introducing a tabulation method in place of the Hurwitz 
determinants. 
The first step in the simplification of the Hurwitz criterion, now called the Routh­
Hurwitz criterion, is to arrange the coefficients of the equation in Eq. (2-247) into two rows. 
The first row consists of the first, third, fifth, ... , coefficients, and the second row consists 
of the second, fourth, sixth, ... , coefficients, all counting from the highest-order term, as 
shown in the following tabulation: 
an a11-2 an-4 lln-6 
The next step is to form the following array of numbers by the indicated operations, 
illustrated here for a sixth-order equation: 
%S6 + a5s5 + · · · + a 1 s + ao = 0 (2-252) 
s6 06 a4 a2 ao 
ss a5 a3 a1 0 
S'4 a5a4 -a6a3 =A a5a2 -a6a1 =B asao -a6 x 0 0 =ao a5 a5 as 
SJ Aa~i -a5B =C Acq -a5ao =D AX 0-a5 X 0 =0 0 A A A 
s2 BC-AD =E Cao -Ax 0 CxO-AxO =0 0 C C = ao C 
s\ ED-Cao =F 0 0 0 E 
so Fao -Ex 0 0 0 0 F =ao 
This array is called the Routh's tabulation or Routh's array. The column of s's on the left 
side is used for identification purposes. The reference column keeps track of the calcula­
tions, and the last row of the Routh's tabulation should always be the . ..Prow. 
Once the Routh 's tabulation has been completed, the last step in the application of the 
criterion is to investigate the signs of the coefficients in the first column of the tabulation, 
which contains information on the roots of the equation. The following conclusions are 
made: 
The roots of the equation are all in the left half of the s-plane if all the elements of the first 
column of the Routh's tabulation are of the same sign. The number of changes of signs in 
the elements of the first column equals the number of roots with positive real parts, or those 
in the right-half s-plane. 
80 Chapter 2. Mathematical Foundation 
The following examples illustrate the applications of the Routh-Hurwitz criterion 
when the tabulation terminates without complications. 
EXAMPLE 2.13.1 Consider the equation 
Toolbox 2-13-1 u:i + s3 + 3s2 + 5s + IO = 0 (2-253) 
Because the equation has no mis.sing terms and the coefficients are all of the same sign. it satisfies the 
necessary condition for not having roots in the right-half or on the imaginary axis of the s-plane. 
However, the sufficient condition must still be checked. Routh's tabulation is made as follows: 
,i4 2 3 10 
s" 5 0 
Sign change 
., (1)(3) -(2)(5) = -7 IO 0 ., .. 
I 
Sign change 
sl (-7)(5) -(1)(10) = 6.43 0 0 -7 
.•P 10 0 0 
Because there are two sign changes in the first column of the tabulation, the equation has two roots in 
the light half of the s-plane. Solving for the roots of Eq. (2-253), we have the four roots at s = 
-1.005 ± j0.933 ands= 0.755 ± jl.444. Clearly, the last two roots are in the right-half s~plane, 
which cause the system to be unstable. 
The roots of the polynomial in Eq. (2-253) are obtained using the following sequence of MATLAB functions. 
>> clear all 
>> p = [ 2 1 3 5 10] % Define polynomial 2 * sA4+.sA3+3 * sJ\2+5 ir s+lO 
p= 
2 1 3 5 10 
>> roots(p) 
ans= 
0. 7555 + 1. 4444i 
0. 7555 -1. 4444i 
-1. 0055 + 0. 9331i 
-1. 0055 -0. 9.331i 
2-13-2 Special Cases when Routh's Tabulation Terminates Prematurely 
The equations considered in the two preceding examples are designed so that Routh's 
tabulation can be carried out without any complications. Depending on the coefficients of 
the equation, the following difficulties may occur. which prevent Routh's tabulation from 
completing properly: 
2~ 13 Routh-Hurwitz Criterion • 81 
1. The first element in any one row of Routh 's tabulation is zero, but the others are 
not. 
2. The elements in one row of Routh's tabulation are all zero. 
In the first case, if a zero appears in the first element of a row, the elements in the next 
row will all become infinitet and Routh's tabulation cannot continue. To remedy the 
situation. we replace the zero element in the first column by an arbitrary small positil'e 
number e, and then proceed with Routh 's tcrbultition. This is illustrated by the following 
example. 
~ EXAMPLE 2-13-2 Consider the characteristic equation of a linear system 
s4+s3+2s2+2s+3=0 (2-254) 
Because all the coefficients are nonzel'O and of the same sign. we need to apply the Routh-Hurwitz 
criterion. Routh's tabulation is carried out as follows: 
s4 I 2 3 
s3 l 2 0 
s2 0 3 
Because the first element of the s2 row is zero. the elements in the s1 row would all be infinite. To 
overcome this difficulty, we replace the zero in the s2 row with a small positive number r., and then 
proceed with the tabulation. Starting with the s2 row. the results are as folJows: 
s2 £ 3 
Sign change s• 2c-3 3 0 --~ r. £ 
Sign change so 3 0 
Because there are two sign changes in the first column of Routh's tabulation, the equation in Eq. 
(2-254) has two roots in the right-half s-plane. Solving for the roots of Eq. (2-254), we gets= 
-0.091 ± j0.902 ands= 0.406 ± jl.293; the last two roots are clearly in the right-half s-plane. 
lt should be noted that the c-method described may not give correct results if the equation has 
pure imaginary roots. 
In the second special case, when all the elements in one row of Routh's tabulation are zeros 
before the tabulation is properly tcnninated, it indicates that one or more of the following conditions 
may exist: 
1. The equation has at least one pair of real roots with equal magnitude but opposite signs. 
2. The equation has one or more pairs of imaginary roots. 
3. The equation has pairs of complex-conjugate roots forming symmetry about the origin of 
the s-plane; for example. s = -1 ± jl, .v = 1 ± j l. 
The situation with the entire row of zeros can be remedied by using the auxiliary equation 
A(s) = O. which is formed from the coefficients of tbe row just above the row of zeros in Routh's 
tabulation. The au:xitiary equation is always an even polynomial; that is, only even powers of s appear. 
The roc>ts <>f the auxilim·y equation also satisf..,• the original equation. Thus, by solving the auxiliary 
equation. we also get some of the roots of the original equation. To continue with Routh 's tabulation 
when a row of zero appears, we conduct the following steps: 
1. Form the auxiliary equation A (s) = 0 by using the coefficients from the row just preceding 
the row of zeros. 
2. Take the derivative of the auxiliary equation with respect to s; this gives dA(s)/ds = 0. 
82 ..,, Chapter 2. Mathematical Foundation 
3. Replace the row of zeros with the coefficients of dA(s)/ds = 0. 
4. Continue with Routh's tabulation in the usual manner with the newly formed row of 
coefficients replacing the row of zeros. 
5. Interpret the change of signs, if any, of the coefficients in the first column of the Routh's 
tabulation in the usual manner . 
..,. EXAMPLE 2.13.3 Consider the following equation, which may be the characteristic equation of a linear control system: 
s5 + 4s4 + ss3 + ss2 + 7 s + 4 = 0 (2-255) 
Routh's tabulation is 
S5 1 8 7 
S4 4 8 4 
s3 6 6 0 
s2 4 4 
s' 0 0 
Because a row of zeros appears prematurely, we form the auxiliary equation using the coefficients of 
the s2 row: 
A(s) = 4s2 + 4 = 0 
The derivative of A(s) with respect to sis 
dA(s) = Ss = 0 
ds (2-257) 
from which the coefficients 8 and O replace the zeros in the s1 row of the original tabulation. The 
remaining portion of the Routh's tabulation is 
s1 8 0 coefficients of dA(s)/ ds 
s0 4 
Because there are no sign changes in the first column of the entire Routh's tabulation. the equation in 
Eq. (2-257) does not have any root in the right-half s-plane. Solving the auxiliary equation in Eq. 
(2-256), we get the two roots at s = j ands= -j, which are also two of the roots of Eq. (2-255). 
Thus. the equation has two roots on the /ru-axis, and the system is marginally stable. These imaginary 
roots caused the initial Routh's tabulation to have the entire row of zeros in the s1 row. 
Because all zeros occurring in a row that corresponds to an odd power of s creates an auxiliary 
equation that has only even powers of s, the roots of the auxiliary equation may all lie on thejw-axis. 
For design purposes, we can use the all-zero-row condition to solve for the marginal value of a system 
parameter for system stability. The following example illustrates the realistic value of the Routh­
Hurwitz criterion in a simple design problem. ~ 
It-EXAMPLE 2-13-4 Consider that a third-order control system has the characteristic equation 
s3 + 3408.3s2 + 1,204, OOOs + 1.5 x 107 K = 0 (2-258) 
The Routh-Hurwitz criterion is best suited to determine the critical value of K for stability, that is, the 
value of K for which at least one root will lie on the jw-axis and none in the right-half s-pl ane. Routh 's 
tabulation of Eq. (2-258) is made as follows: 
3408.3 1,204,000 
1.5 X 107 K 
410.36 X 107 -1.5 X 107 K s1 0 3408.3 
s° 1.5 x 107 K 
2-13 Routh-Hurwitz Criterion _. 83 
Toolbox 2.13 .. 2 
Refer to Section 2-14-2 for the MATLAB symbolic tool to solve this problem. 
For the system to be stable. all the roots of Eq. (2 .. 258} must be in the left .. half s-plane~ and. 
thus, all the coefficients in the first column of Routh's tabulation must have the same sign. 
This leads to the fo1lowing conditions: 
and 410.36 x 107 -1.5 x 107 K > O 
3408.3 (2-259) 
(2-260) 
From the inequality of Eq. (2-259). we have K < 273.57. and the condition in Eq. (2-260) 
gives K > 0. Therefore. the condition of K for the system to be stable is 
0<K<273.57 (2-261) 
If we let K = 273.57, the characteristic equation in Eq. (2-258) will have two roots on the 
jw-axis. To find these roots, we substitute K:::: 273.57 in the auxiliary equation, which is 
obtained from Routh's tabulation by using the coefficients of the s2 row. Thus, 
A(s) = 3408.3s2 + 4.1036 x 109 = 0 (2-262) 
which has roots at s = j1097 ands= -j1097, and the corresponding value of Kat these 
roots is 273 .57. Also, if the system is operated with K = 273 .57, the zero~input response of 
the system will be an undamped sinusoid with a frequency of 1097 .27 rad/sec . 
..._ EXAMPLE 2.13.5 As another example of using the Routh-Hurwitz criterion for simple design problems. consider that 
the characteristic equation of a closed-loop control system is 
s3 + 3Ks2 + (K + 2)s + 4 = 0 (2-263) 
It is desired to find the range of K so that the system is stable. Routh's tabulation of Eq. (2-263) is 
s., K+2 
S2 3K 4 
sl 3K(K +2)-4 0 3K 
so 4 
From the s2 row. Lhe condition of stability is K > 0, and from the s1 row, the condition of stability is 
3K2 + 6K -4 > 0 (2-264) 
or 
K < -2.528 or K > 0.528 (2-265) 
Toolbox 2-13-3 
Refer to Section 2-14-2 for the MATLAB symbolic tool to solve this problem. 
84 ~ Chapter 2. Mathematical Foundation 
When the conditions of K > 0 and K > 0.528 are compared, it is apparent that the latter 
requirement is more stringent. Thus, for the closed-loop system to be stable, K must satisfy 
K > 0.528 (2-266) 
The requirement of K < -2.528 is disregarded because K cannot be negative. 
It should be reiterated that the Routh-Hurwitz criterion is valid only if the characteristic equation 
is algebraic with real coefficients. If any one of the coefficients is complex, or if the equation is not 
algebraic, for example, containing exponential functions or sinusoidal functions of s, the Routh­
Hurwitz criterion simply cannot be applied. 
Another limitation of the Routh-Hurwi tz criterion is that it is valid only for the determination of 
roots of the characteristic equation with respect to the left half or the right half of the s-plane. The 
stability boundary is thejw-ax is of the s-plane. The criterion cannot be applied to any other stability 
boundarie s in a complex plane, such as the unit circle in the .:-plane, which is the stability boundary of 
discrete-data systems (Appendix H). 
2-14 MATLAB TOOLS AND CASE STUDIES 
2-14-1 Description and Use of Transfer Function Tool 
If you have access to the MATLAB Symbolic Toolbox, you may use the A CSYS Transfer 
Function Symbolic Tool by pressing the appropriate button in the ACSYS window or by 
typing in tfsym in the MATLAB command window. The Symbolic Tool window is shown 
in Fig. 2-26. Click the "Help for 1st Time User" button to see the instructions on how to use 
the toolbox. The instructions appear in a Help Dialog window, as shown in Fig. 2-27. As 
instructed , press the "Transfer Function and Inverse Laplace" button to run the program. 
You must run this program within the MATLAB command window. Enter the transfer 
function, as shown in Fig. 2-28, to get the time response . 
) Transter Function Symbolic;for Kuo-Go .. : • 
Help for 1st Time User 
Transter Function and lnve1se Laplace 
State-Space 
State-Space with lnit. Cond_ 
Close and EKit 
Figure 2-26 The Transfer Function Symbolic window. 
) Help Dialog _· .. ;;;.,; 
You must have access to MATLAB Symbolic Toolbox. To run Programs. go to 
MAT LAB Commanccl window after clicking each pushbutton. 
Figure 2-27 The Symbolic Help Dialog window. 
2-14 MATLAB Tools and Case Studies ... 85 
Transfer Function Symbolic. © Kuo & Golnaraghi 8th Edition. John Wiley & 
Sons. e.g .• Use the following inpllt format: (s+2)*(s/\3+2*s+ 1 )/(s*(s"2+2*s+ I)) 
Enter G=5*(s+o.6)/((s+ I )*(s+2)*(s+3 )) 
5s+3 
(s+l) (s+2) (s+3) 
G in polynomial form: 
Transfer function: 
5s+3 
s"3+6s112+ I 1 s+6 
G factored: 
Zero/pole/gain: 
5(s+0.6) 
(s+3) (s+2) (s+l) 
Inverse Laplace transform: 
Gtime::: 
-exp(-t)+7*exp(-2*t)-6*exp (-3"'t) 
Figure 2-28 The inverse Laplace transform of Eq. (2-267) for an impulse input, in the 
MATLAB command window. 
I:>-EXAMPLE 2-14-1 Find the inverse Laplace transform of the transfer function 
G(s) _ 5s + 3 _ 5 s + 3 
-(s + l)(s + 2)(s + 3) -s3 + 6s2 + lls + 6 
You can do this either by using the ilaplace command in the MATLAB command window. as we 
demonstrated in Toolbox 2-5-1 for Example 2-5-1, or by utilizing the tfsym function, as shown in Fig. 2-28. 
To find the time representation of Eq. (2·267) for a different input function such as a step or a 
sinusoid. the user may combine the input transfer function (e.g. lfs for a unit-step input) with the 
transfer function in the TFtool input window. So to obtain Eq. (2-267) time representation for a unit­
step input, use the following transfer function: 
Gs _ 5s+3 
( ) -s(s+ l)(s + 2)(s + 3) (2-268) 
and repeat the previous steps. 
Similarly, for the transfer function 
Y(s) - lOOO -w; (2-269) 
-s(s2 + 34.5s + 1000) -(s2 + 2tw,,s + a>~) 
using the tfsym tool. the time representation of this system is obtained as 
l +(-1/2 + 13/40"i)* exp((-69/4 -53/2*i))"t + (-1/2 -l3/40*i)* exp((-69/4+ 
53/2"'i)*t) 4 
2-14~2 MATLAB Tools for Stability 
The easiest way to assess stability of known transfer functions is to find the location of the 
poles. For that purpose. the MATLAB code that appears in Toolbox 2-13-1 is the easiest 
86 ~ Chapter 2. Mathematical Foundation 
way for finding the roots of the characteristic equation polynomial-Le., the poles of the 
system. However, many of the other tools within ACSYS software may also be used to find 
the poles of the closed-loop system transfer function, including the "Transfer Function 
Symbolicn (tfsym) and the ·~Transfer Function Calculator'' (tfcal). You may also conduct 
a more thorough stability study of your system using the root locus and phase and gain 
margin concepts utilizing the "Controller Design Tool," respectively. These topics will be 
thoroughly discussed in Chapter 9. 
In this section, we introduce the tfrouth tool, which may be used to find the Routh 
array, and more importantly it may be utilized for controller design applications where it is 
important to assess the stability of a system for a controller gain, say k. 
The steps involved in setting up and then solving a given stability problem using 
tfrouth are as follows. 
1. Type "tfrouth" in the MATLAB command module within the "tfsymbolic" 
directory. 
2. Enter the characteristic polynomial in symbolic (e.g .• sA3+s"2+s+l) or in vectorial 
(e.g. [I I 1 1]) forms. 
3. Press the "Routh-Hurwitz'' button and check the results in the MATLAB 
command window. 
4. In case you wish to assess the stability of the system for a design parameter, enter 
it in the box designated as "Enter Symbolic Parameters." For example, for s"3 
+kl*s"2+k2*s+ 1, you need to enter "kl k2" in the "Enter Symbolic Parame­
ters n box, followed by entering the polynomial s"3 + kl *s"2 + k2*s + 1 in the 
"Characteristic Equation" box. 
S. Press the "Routh-Hurwitzu button to form the Routh table and conduct the Routh­
Hurwitz stability test. 
To better illustrate how to use tfrouth, let us solve some of the earlier examples in this 
chapter. 
a,.. EXAMPLE 2-14-2 Recall Example 2-13-1; let's use tfrouth for the following polynomial: 
2s4 + s3 + 3s2 + Ss + IO = 0 (2-270) 
In the MATLAB command module. type in "tfrouth .. and enter the characteristic Eq. (2-270) in 
polynomial form. fullowetl by clicking the ··Routh-Hurwitz"' button to get the Routh-Hurwitz matrix. 
as shown in Fig. 2-29. 
The results match Example 2-14-2. The system is therefore unstable because of two positive poles. 
The Routh 's array first column also shows two sign changes to confirm this result. To see the complete 
Routh table, the user must refer to the MATLAB command window, as shown in Fig. 2-30. -~ 
• EXAMPLE 2-14-3 Consider Example 2-13-2 for characteristic equation of a linear system: 
s4 + .r3 + 2s2 + 2s + 3 = 0 (2-271) 
After entering the transfer function characteristic equation using tfrouth a11d pressing the "Routh­
Hurwitz .. button~ we get the results shown in Fig. 2-31. 
As a result. because of the final two sign changes, we expect to see two unstable poles. ~ 
t>-EXAMPLE 2-14-4 Revisiting Example 2-13-3, use tfrouth to study the following characteristic equation: 
s5 + 4s4 + 8s3 + Ss2 +IS+ 4 = 0 
to get the results shown in Fig. 2-32. (2-272) 
2-14 MATLAB Tools and Case Studies 87 
~:. Routh Hurwitz 
I -Enter Characteristic Equation:------------- -, 
Enter the charac;teristic equation using a vector of polynomial 
coefficients, or in symbolic form with complex variable's '. 
Enter All symbolic parameters in the box labeled 'Enter 
Symbolic Parameters.' 
ex: For (sA2 + 3•kp*s + kiA2): 
enter '[1, 3'kp, ki"2]' in the Characteristic Equation box 
and 'kP ki' in the symbolic variables text box. 
OR: Type in (sA2 + 3*kp•s + ki"2) in the Characteristic 
Equation box and 'kp ki' in the symbolic variables text box. 
ex: The following are all equivalent: 
'(s"2 + 7*s + 12), (1 712J, and (s+4)'(s+3)' . 
Enter Symbolic Parameters I 
(For example:) 
Characteristi .c Equation I . . 2•s"4+sA3+3'sA2+5's+10 
f ............................................... Routh-HU~Wttz •······· .· ................................... 11 
Close 
Figure 2-29 Entering characteristic polynomial for Example 2-14-2 using the tfrouth module. 
Routh-Hurw itz Matrix: 
[ 2 3 10 
[ 
[ I 5 0 
[ 
[ -7 10 0 
[ 
[45/7 0 0 
[ 
I 10 0 0 
There are two sign changes in the first column. 
Figure 2-30 Stability results for Example 2-14-2, after using the Routh-Hurwitz test. 
88 ~ Chapter 2. Mathematical Foundation 
First element of row3 is zero. Epsilon is used, 
Routh-Hurwitz Matrix: 
[ 2 3 
[ 
[ 2 0 
I 
I eps 3 0 
[ 
I-3 + 2 eps 
I---------- 0 0 
[ eps 
I 
[ 3 0 0 
There are two sign changes in the first column. 
Figure 2-31 Stability results for Example 2-14-3, after using the Routh~Hurwitz test. 
Row of zeros found at row5. Auxiliary polynomial is used. 
Routh-Hurwitz Matrix: 
[ 1 8 7 
[ 
[4 8 4 
[ 
[6 6 0 
[ 
[4 4 0 
[ 
[8 0 0 
[ 
[4 0 0 
There nre two sign changes in the first column. 
Figure 2-32 Stability results for Example 2-14-4, after using the Routh-Hurwitz test. 
In this case. the program has automatically replaced the whole row of zeros in the fifth row with 
the coefficients of the polynomial formed from the derivative of an auxiliary polynomial formed from 
the fourth row. As a result, the system is unstable. Further, because of the final zero sign changes. we 
expect to see no additional unstable poles. The unstable poles of the system may be obtained directly 
by obtaining the roots of the auxiliary polynomial: 
A(s) = 4s2 + 4::::: 0 
~ EXAMPLE 2·14-5 Considering the characteristic equation of a closed-loop control system 
s3 + 3Ks2 + (K + 2)s + 4 = 0 (2~274) 
It is desired to find the range of K so that the system is stable. See Figs. 2~33. 2-34, and 2-35 for more 
details. 
In the end, the user is encouraged to make use of the software to solve examp]es and prob]ems 
appearing in this chapter. 
2-14 MATLAB Tools and Case Studies • 89 
- l t;;;t;'.Lfi:il ,. ~·· ,: 
Routh Hurwitz -
-Enter Characteristic Equation: 
Enter the characteris1ic equation using a vecltir of polynomial 
coefficients, or in symbolic form with complex variable 's'. 
Enter ALL symbolic parameter s in the box labeled 'Enter 
Symbolic Parameters .' 
ex: For (s"2 + 3'·kp•·s + ki"·2): 
enter '(1, 3'kp, ki"2]' in the Characteristic Equation box 
and 'kp ki' in the symbolic variables text box. 
OR: Type in (s~ + 3'kp•s + ki"2) in the Characteristic IC 
Equation box and 'kp ki' in the symbolic variables text box. 
ex: The following are all equivalent : 
'(s"2 + 7•s + 12), [1 712). and (s+4)"(s+3)' . 
I 
Enter Symbolic Paramete rs I k (For example:) 
Characteristic Equation 
l s"3+3*k•s"2+(k+ 2)*s+4 
!.... ........................................... ., ... Routh-Hurwitz ................................................ If 
If 
Close I 
- -... 
figure 2-33 Entering characteristic polynomial for Example 2-14-5 using the tfrouth module. 
Routh-Hurwitz Matrix: 
[ k+2 l 
[ l 
l 3k 4 l 
[ l 
I 2 l 
l -4+ 3 k + 6 k l 
l l/3 -·--·----·- ·--01 
[ k l 
[ l 
[ 4 0 l 
figure 2-34 The Routh's an-ay for Example 2-14-5. 
90 • Chapter 2. Mathematical Foundation 
..._ 2-15 SUMMARY >>k=.4; 
>>RH 
RH= 
[ l, k+2 
I 3*k. 4 
I 113*(-4+3*k"2+6*k)/k, o 
I 4, o 
>> eval(RH) 
ans= 
1.0000 2.4000 
1.2000 4.0000 
-0.9333 0 
4.0000 0 
There are two sign changes in the first column. 
>> k.=l~ 
» eval(RH) 
ans= 
1.0000 3.0000 
3.0000 4.0000 
1.6667 0 
4.0000 0 
There are no sign changes in the first column. 
Figure 2-35 The Routh,s array for Example 2-14-5 . 
In this chapter, we presented some fundamental mathematics required for the study of linear control 
systems. Specifically. we started with complex numbers and their basic properties leading to 
frequency domain mathematics and plots. The Laplace transform is used for the solution of linear 
ordinary differential equations. This transform method is characterized by first transforming the real­
domain equations into algebraic equations in the transform domain. The solutions are first obtained in 
the transform domain by using the familiar methods of solving algebraic equations. The final solution 
in the real domain is obtained by taking the inverse transform. For engineering problems. the 
transform tables and the partial-fraction expansion method are recommended for the inverse 
transformation. 
In this chapter, the definitions of BIBO, zero-input, and asymptotic stability of linear time­
invariant continuous-data and discrete-data systems are given. It is shown that the condition of these 
types of stability is related directly to the roots of the characteristic equation. For a continuous-data 
system to be stable, the roots of the characteristic equation must all be located in the left half of the 
s-plane. 
The necessary condition for a polynomial F(s) to have no zeros on the jw-axis and in the right half 
of the s-plane is that all its coefficients must be of the same sign and none can vartish. The necessary 
and sufficient conditions of F(s) to have zeros only in the left half of the s-plane are checked with the 
Routh-Hurwitz criterion. The value of the Routh-Hurwitz criterion is diminished if the characteristic 
equation can be solved using MATLAB. 
Review Questions <If 91 
t~ REVIEW QUESTIONS 
1. Give the definitions of the poles and zeros of a function of the complex variable s. 
2. What are the advantages of the Laplace transform method of solving linear ordinary 
differential equations over the classical method·? 
3. What are state equations'? 
4. What is a causal system'? 
5. Give the defining equation of the one-sided Laplace trnnsform. 
6. Give the defining equation of the inverse Laplace transform. 
7. Give the expression of the final-value theorem of the Laplace transform. What is the 
condition under which the theorem is valid? 
8. Give the Laplace transfonn of the unit-step function, us(t). 
9. What is the Laplace transform of the unit-ramp function. tus(t)? 
10. Give the Laplace transform of Jtt) shifted to the right (delayed) by I:, in tenns of the 
Laplace transform of f(t), F(s). 
11. If £.[fi(t)] = Fi(s) and .C[h(t)J = F2(s), then find .C[/1(t)]f2(t)] in terms of Fi(s) and 
F2(s). 
12. Do you know how to handle the exponential term in performing the partial-fraction 
expansion of 
F(s) = IO e-2s 
(s + l)(s + 2) 
13. Do you know how to handle the partial-fraction expansion of a function whose denominator 
order is not greater than that of the numerator. for example. 
10 ( s2 + 5s + 1 } F{s) --'----'--(s + 1 )(s + 2) 
14. In trying to fin<l the inverse Laplace transform of the following function. do you have to 
perform the partial-fraction expansion'? 
1 F(s)=--3 (s + 5)· 
15. Can the Routh-Hurwitz criterion be directly applied to the stability analysis of the 
following systems'! 
(a) Continuous-data system with the characteristic equation 
s4 + 5s3 + 2s2 + 3s + 2e-2s = 0 
(b) Continuous-data system with the characteristic equation 
s4 -5s3 + 3s2 + Ks+ K2 = 0 
16. The first two rows of Routh ·s tabulation of a third-order system are 
s3 2 2 
s2 4 4 
Select the correct answer from the following choices: 
(a) The equation has one root in the right-half s-plane. 
(b) The equation has two roots on the juJ-axis at s = j and -j. The third root is in the left-half 
s-plane. 
92 ._ Chapter 2. Mathematical Foundation 
~ REFERENCES {c) The equation has two roots on the jw-axis at s = 2j ands= -2j. The third root is in the 
left-half s-plane. 
{d) The equation has two roots on the jw-axis at s = 2j ands= -2j. The third root is in the 
right-half s-plane. 
17. If the numbers in the first column of Routh's tabulation tum out to be all 
negative, then the equation for which the tabulation is made has at least one root not in 
the left half of the s-plane. {T) (F) 
18. The roots of the auxiliary equation,A(s) = 0, ofRouth's tabulation ofa characteristic equation 
must also be the roots of the latter. (T) (F) 
19. The following characteristic equation of a continuous-data system represents an unstable 
system because it contains a negative coefficient. 
s3 -s2 + 5s + 10 = 0 (T) (F) 
20. The following characteristic equation of a continuous-data system represents an unstable 
system because there is a zero coefficient. 
s3 +5s2 +4 = 0 (T) (F) 
21. When a row of Routh's tabulation contains all zeros before the tabulation ends, this means 
that the equation has roots on the imaginary axis of the s-plane. (T) (F) 
Answers to these review questions can be found on this book's companion Web site: 
www.wiley.com/college/golnaraghi. 
Complex Variables, Laplace Transforms 
L F. B. Hildebrand, Methods of Applied Mathematics, 2nd Ed.~ Prentice Hall. Englewood Cliffs. NJ, 1965. 
2. B. C. Kuo, Linear Networks and Systems, McGraw-Hill Book Company, New York, 1967. 
3. C.R. Wylie, Jr .• Advanced Engineering MathemtzticJ, 2nd Ed •• McGraw-Hill Book Company, New York, 
1960. 
4. K. Ogata, Modern Control Engineering, 4th ed., Prentice-Hall, NJ, 2002. 
5. J. J. Distefano, A. R. Stubberud, and I. J. Williams, Feedback and Control Systems, 2nd ed., McGraw-Hill. 
1990. 
6. ..ChE-400: Applied Chemical Engineering Calculations," http:l/www.ent.ohiou.edu/che/che400/Handouts% 
20and%20Class%20notes.htm. 
Partial-Fraction Expansion 
Additional References 7. C. Pottle, "On the Partial Fraction Expansion of a Rational Function with Multiple Poles by Digital 
Computer," IEEE Trans. Circuit Theory, Vol. CT-11, pp. 161-162, Mar. 1964. 
8. B. 0. Watkins. "A Partial Fraction Algorithm," IEEE Trans. Automatic Control. Vol. AC-16, pp. 489-491. 
Oct. 1971. 
9. W. J. Palm, Ill. Modeling. Ana(,;sis, and Control of D.vnamit· Systems, 2nd Ed., John Wiley & Sons, New York, 
1999. 
10. K. Ogata. Modern Control Engineering. 4th Ed., Prentice Hall. NJ. 2002. 
11. I. Cochin and W. Cadwallender, Analysis and Design of Dynamic Systems. 3rd Ed .• Addison• Wesley. 1997. 
12. A. Esposito, Fluid Power with Applications, 5th Ed. Prentice Hall, NJ, 2000. 
13. H. V. Vu and R. S. Esfandiari, Dynamic Systems. Irwin/McGraw-Hill, 1997. 
14. J. L. Shearer. B. T. Kulakowski, and J. F. Gardner. Dynamic Modeling and Control of Engineering Systems, 
2nd Ed .• Prentice Hall. NJ. 1997. 
15. R. L. Woods and K. L. Lawrence. Modeling and Simulatfon of Dynamic Systems, Prentice Ha11. NJ, 1997. 
Stability 
~~-PROBLEMS Problems • 93 
16. B. C. Kuo, Automatic Control Systems. 7th Ed., Prentice Hall, NJ, 1995. 
17. B. C. Kuo and F. Golnaraghi, Automatic Control Systems, 8th Ed., John Wiley and Sons, NY, 2003. 
18. F. R. Gantmacher. Matrix Theory. Vol. II, Chelsea Publishing Company, New York. 1964. 
19. K. J. Khatwani, .. On Routh-Hurwitz Criterion," IEEE Tram. Automatic Control, Vol. AC-26, p. 583. 
April I 981. 
20. S. K. Pillai ... The t Method of the Routh-Hurwitz Criterion," IEEE Trans. Automatic Control, 
Vol. AC-26. 584, Apri11981. 
PROBLEMS FOR SECTION 2-1 
2-1. Find the poles and zeros of the following functions (including the ones at infinity, if any). Mark 
the finite poles with x and the finite zeros with o in the s-plane. 
lO{s +2) 
(a) G(s) = s2(s + l)(s + 10) (c) G(s) = lO(s + 2) 
s(s2 + 2s + 2) 
lOs(s + 1) 
(b) G(s) = (s + 2)(s2 + 3s + 2) e-2s 
(d) G(s) = lOs(s + l)(s + 2) 
2-2. Poles and zeros of a function are given; find the function: 
(a) Simple poles: 0, -2; poles of order 2: -3; zeros: -1, oo 
(b) Simple poles: -1, -4; zeros: 0 
(c) Simple poles: -3, oo; poles of order 2: 0,-1; zeros: ±j, oc 
2-3. Use MATLAB to find the poles and zeros of the functions in Problem 2~ I. 
PROBLEMS FOR SECTION 2-2 
2-4. Find the polar representation of G(s) given in Problem 2-1 for s = jw, where w is a constant 
varying from zero to infinity. 
2-5. Find the polar plot of the following functions: 
10 
(a) G(jw} = (jro _ 2) 
G(jw) = 2 0 < s < 1 
(b) I + 2?: ( j :) + ( j :) 
G(jw) = 2 i; > 1 
(c) 1 +2t(j ;:) + (j :) 
(d) G(jw) = . ( .; l) JW J W + 
-jwL 
(e) G(jw) = (j~w + I) 
94 I> Chapter 2. Mathematical Foundation 
2-6. Use MATLAB to find the polar plot of the functions in Problem 2-5. 
2-7. Draw the Bode plot of the following functions: 
. 2000( jm + 0.5) 
(a) G( JW) = jw(jw + 10) (jw + 50) 
(b) G{jw) = jw(jw -~~'5w2 + 10) 
. (jw -100w2 + 100) 
(c) G( Jcu) = -w2(jw -2Sw2 + 100) 
G(jw) = 2 0 :$ ?;" :5 I 
(d) I + 2?;'(j.!:!...) + (j!!!_) 
W,1 Wn 
. 0.03(ejwt + 1)2 
(e) G( JW) = (eiwt - ] )(3ejwt + 1 )(eiwt + 0.5) 
2-8. Use MATLAB to draw the Bode plot of the functions in Problem 2-7. 
PROBLEMS FOR SECTION 2-3 
2-9. Express the following set of first-order differential equations in the vector-matrix form of 
dx(t) --;;;-= Ax(t) + Bu(t). 
dxi (t) = -x1 (t) + 2x2(t) 
dt 
dx2(t) (a) ~ = -2"t2(t) + 3x3(t) + u1 (t) 
dx3(t) di~ -xi (t) -3x2(t) -x3(t) + u2(t) 
dx1 (t) ~ = -xi (t) + 2x2(t) + 2u1 (t) 
dt2(t) (b) ~ = 2x1 (t) -x3(t) + u2(t) 
dx3(t) di= 3x1 (t) -4x2(t) -x3(t) 
PROBLEMS FOR SECTION 2-4 
2-10. Prove theorem 3 in Section 2-4-3. 
2-11. Prove the integration theorem 4 in Section 2-4-3. 
2-12. Prove the shift-in-time theorem, which is 
2-13. Prove the convolution theorem in both time and s domain, which is 
£[g1 (t) * gz(t)] = G1 (s)G2(s) 
£{gt (t)g2(t)) = G1 (s) * G2(s) 
2-14. Prove theorems 6 and 7. 
2·15. Use MATLAB to obtain .C{ sin22t }. Then, calculate .C{ cos22t} when you know£{ sin22t }. 
Verify your answer by calculating £ { cos22t} in MATLAB. 
Problems • 95 
2·16. Find the Laplace transfonns of the following functions. Use the theorems on Laplace 
transfonns, if applicable. 
(a) g(t) = 5te-51us(t) 
(b) g(t) = (tsin2t + e-2r)u11(t) 
(c) g(t) = 2e-21sin2t u9(t) 
(d) g(t) = sin2tcos2t u9(t) 
·:'Xl 
(e) g(t) = Le-5k7 S(t -kT) where o(t) = unit-impulsefunction 
k=O 
2-17. Use MATLAB to solve Problem 2-16. 
2-18. Find the Laplace transforms of the functions shown in Fig. 2P-18. First. write a complete 
ex.pre..o;;sion for g(z), and then take the Laplace transform. Let gT(t) be the description of the function 
over the basic period and then delay gT(t) appropriately to getg(t). Take the Laplace transfonnof g(t) 
to get the following: 
I II II II r-. g(t)~ 
-~ ~[_j] 3 L___.iJ 5 ~ 7L___!J t 
(a) 
g(t) ~~. 
(b) 
Figure 2P-18 
2 .. 19. Find the Laplace transfo1m of the following function. 
lt+l 0:St<l 
0 l<t<2 
g(t) = 2 -t 2 ~ t < 3 
0 !~3 
2-20. Find the Laplace transfmm of the periodic function in Fig. 2P-20. 
f(t) ,. 
0 ... 
T/2 T r 
-1 -
Figure ZP-20 
2-21. Find the Laplace transform of the function in Fig. 2P-2 l. 
96 ..,_ Chapter 2. Mathematical Foundation 
f(t) 
'" I 
L2 
0 L 
I 
-L2 12L -----:: t 
Fiaure 2P-21 
2-22. Solve the following differential equations by means of the Laplace transfonn. 
(a) d2Jr}1
} +5 d~~) +4 f(t} = e-21us(t} Assume zero initial conditions. 
d3v(t) d2y·(t} dv(t} -· -+2--+-'.T-+2y(t) = -e-1u (t) dt2 dt2 dt s 
(c) 
d2
y(O) = -1 dy(O) = 1 y(O) = 0 dt2 dt 
2-23. Use MATLAB to find the Laplace transform of the functions in Problem 2-22. 
2-24. Use MATLAB to solve the following differential equation: 
d2y I A . . .. I d'. ) dt2 -y = e ( ssummg zero 1mt1a con 1t10ns 
2-25. A series of a three-reactor tank is arranged as shown in Fig. 2P-25 for chemical reaction. 
Reactor I ---­
Figure 2P-25 Reactor3 
The state equation for each reactor is defined as follows: 
dCA2 1 R2: dt = y2[1100CA1 -I IOOCA2 -k2V2CA2] 
dCA3 1 
R3 : di = V[IOOOCA2 -1000CA3 -k3 V3CA3] 
3 Problems 4 97 
when Vi and ki represent the volume and the temperature constant of each tank as shown in the 
following table: 
Reactor Vi ki 
1000 0.1 
2 1500 0.2 
3 100 0.4 
Use MATLAB to solve the differential equations assuming CAt = CAz = CA3 = 0 at t = 0. 
PROBLEMS FOR SECTION 2-5 
2-26. Find the inverse Laplace transforms of the following functions. First. perform partial-fraction 
expansion on G(s); then. use the Laplace transform table. 
1 
(a) G(s) = s(s + 2}(s + 3) 
(b) G(s) - 10 
-(s+ 1)2(s+3) 
IOO(s+ 2) -s 
(c) G(s) = s(s2 + 4)(s + 1) e 
(d) G(s) = 2{s + 1) 
s(s2 + s + 2) 
1 (e) G(s) =--
(s + 1)3 
2(s2+s+l) 
(f) G(s) = s(s + 1.5)(s2 + Ss + 5) 
( ) G(s) = 2 + 2se-s + 4e-2s 
g s2 + 3s + 2 
2s + I 
(h) G(s) = s3 +6s2 + lls + 6 
(i) G(s) = 3s3 + 10s2 + 8s + 5 
s4 + 5s3 + 7s2 + 5s + 6 
2-27. Use MATLAB to find the inverse Laplace transforms of the functions in Problem 2w26. First, 
perform partial-fraction expansion on G(s); then, use the inverse Laplace transform. 
98 l\l-Chapter 2. Mathematical Foundation 
2-28. Given the state equation of the system, convert it to the set of first-order differential equation. 
[ o -1 2] [o -1] (a) A = I O I B = I 0 
-1 -2 1 0 0 
[3 I -2] [-1] 
(b) A = ~l ~ ~ B = g 
2-29. The following differential equations represent linear time-invariant systems. where r(t) 
denotes the input and y(t) the output. Find the transfer function Y(s)/R(s) for each of the systems. 
(Assume zero initial conditions.) 
d3v(t) d2y•(t) dy(t) dr(t) (a)-· -· +2--+5-+6v(t) = 3-+r(t) dt3 dt2 dt . dt 
(b) d4y(t) 10d2y(t) dy(t) s ·{) = s ( ) 
dt4 + dt2 + dt + Y t r t 
d3y•(t) d2y(t) dy•(t) 1' dr(t) (c) --+10--+2-+v(t)+2 v(r)dr=-+2r(t) dt3 dt2 dt . o . dt 
d2y(t) dv(t) 
(d) 2~+~+5y(t) = r(t) + 2r(t-I) 
t 
d2y( t + 1) dy( t + 1) dr( t) j (e) dt2 +4 dt +5y(t + I) = & +2r(t) + 2 r( r)dr 
-".)() 
3 'l I d· y•(t) d .. "\)(t) dv(t) j dr(t -2) (0 --+2--'-+-· -+2v(t) + 2 y(r)dt = +2r(t-2) dt2 dt2 dt . . dt 
-·X 
2-30. Use MATLAB to find Y(s)/R(s) for the differential equations in Problem 2-29. 
2~31. Use MATLAB to find the partial-fraction expansion to the following functions. 
IO(s + 1) 
(a) G(s) = s2(s + 4)(s + 6) 
(b) G(s) - (s + I) 
-s(s + 2)(s2 + 2s + 2) 
5(s + 2) 
(c) G(s) = 2( 1 )( 5) s s+ s+ 
se-2s 
(d) G(s) = (s + l )(s2 + s + 1) 
IOO(s2 + s + 3) 
(e) G(s) = ( ., 5 3) s s--+ s+. 
1 
(f) G(s) ~ s(s2 + I )(s + 0.5)2 
2s3 + s2 + 8s + 6 
(g) G(s) = (s2 + 4)(s2 + 2s + 2) 
(h) G(s) = 2s4 + 9s3 + 15s2 + ! + 2 
s2(s + 2)(s + i)-
2-32. Use MATLAB to find the inverse Laplace transforms of the functions in Problem 2-31. 
Problems 4 99 
PROBLEMS FOR SECTIONS 2-7 THROUGH 2-13 
2-33. Without using the Routh-Hurwitz criterion, determine if the following systems are asymp­
totically stable. marginally stable, or unstable. In each case, the closed-loop system transfer function 
is given. 
(a) M(s) = 10rs + 2) 
s3 + 3s2 + 5s 
s-1 
(b) M(s) = (s + 5)(s2 + 2) 
K 
(c) M(s) = s3 +5s+5 
(d) M(s) _ lOO(s -1) 
-(s + S)(s2 + 2s + 2) 
100 
(e) M(s) = 3 2 2 3 10 s·-s+s+ 
M s _ lO(s + 12.5) 
(f) ( ) -.~ + 3s3 + 50s2 + s + 1Q6 
2-34. Use the ROOTS command in MATLAB to solve Problem 2-33. 
2-35. Using the Routh-Hurwitz criterion, determine the stability of the closed-loop system that has 
the following characteristic equations. Determine the number of roots of each equation that are in the 
right-half s-plane and on the jw-axis. 
(a) s3 + 25s2 + lOs + 450 = 0 
(b) s3 + 25s2 + 10s + 50 = 0 
(c) s3 + 25s2 + 250s + IO= 0 
(d) 2s4 + 10s3 + 5.5s2 + 5.Ss + 10 = 0 
(e) s6 + 2r5 + 8s4 + 15s3 + 20s2 + 16s + 16 = 0 
(f) s4 + 2s3 + l0s2 + 20s + 5 = 0 
(g) s8 + 2s1 + 8s6 + 12s5 + 20s4 + 16s3 + 16s2 = 0 
2-36. Use MATLAB to solve Problem 2-35. 
2-37. Use MATLAB Toolbox 2-13-1 to find the roots of the following characteristic equations of 
linear continuous-data systems and determine the stability condition of the systems. 
(a) s3 + 10s2 + 10s + 130 = 0 
(b) s4 + l 2s3 + s2 + 2s + 10 = 0 
(c) s4 + 12s3 + 10s2 + 10s+ 10 = 0 
(d) s4 + 12s3 + s2 + 10s + 1 = 0 
(e) s6 + 6s5 + 125s4 + 100s3 + 100s2 + 20s + IO= 0 
(f) ss + l 2Ss4 I 100s3 -l 100s2 + 20s + IO = 0 
2-38. For each of the characteristic equations of feedback control systems given, use MATLAB 
to determine the range of K so that the system is asymptotically stable. Determine the value of K so 
that the system is marginally stable and determine the frequency of sustained oscillation, if 
applicable. 
(a) s4 + 25s3 + l5s2 + 20s + K = 0 
(b) s4 + Ks3 + 2s2 + (K + l)s + 10:::: 0 
(c) s3 + (K + 2)s2 + 2Ks + 10 = 0 
100 ~ Chapter 2. Mathematical Foundation 
(d) s3 + 20s2 + 5s + 10K = 0 
(e) s4 + Ks-1 + 5s2 + 10s + 10K = 0 
(0 s4 + I 2.5s3 + i + 5s + K = 0 
2-39. The loop transfer function of a single-loop feedback control system is given as 
K(s + 5) 
G(s)H(s) = s(s + 2){1 + Ts) 
The parameters K and T may be represented in a plane with K as the horizontal axis and T as the 
vertical axis. Determine the regions in the T-versus-K parameter plane where the closed-loop system 
is asymptotically stable and where it is unstable. Indicate the boundary on which the system is 
marginally stable. 
2-40. Given the forward-path transfer function of unity-feedback control systems, apply the Routh­
Hurwitz criterion to determine the stability of the closed-loop system as a function of K, Determine 
the value or K that will cause sustained constant-amplitude oscillations in the system. Determine the 
frequency of oscillation. 
(a) G(s) = K(s + 4)(s + 20) 
.v3(s + lOO)(s + 500) 
(b) G(s) = K(s ~ IO)(s + 20) 
,ds + 2) 
K 
(c) G(s) = s(s + lO){s + 20) 
(d) G(s) = K(s + l) 
s3 + 2s2 + 3s + I 
2-41. Use MATLAB to solve Problem 2-40. 
2-42. A controlled process is modeled by the following state equations. 
dt1 (t) dx2(t) --= xi (t) -2x2(t) -d-== lOxr (t) + u(t) dt t 
The control u(t) is obtained from state feedback such that 
u(t) = -k1x1 (t) -k2x2(t) 
where k1 and k2 are real constants. Determine the region in the k1-versus-k 2parameterplane in 
which the closed-loop system is asymptotically stable. 
2-43. A linear time-invariant system is described by the following state equations. 
dx(t) ~ = Ax(t) + Bu(t} 
where 
A = [~ ~ ~ ] B = [~] 
0 -4 -3 1 
The closed-loop system is implemented by state feedback. so that u(t} = -Kx(t}, where K = 
[k1 k2k3) and ki, k2~ and k3 are real constants. Detennine the constraints on the elements of K 
so that the closed-loop system is asymptotically stable. 
2-44. Given the system in stale equation form. 
dx(t) dt = Ax(t) + Bu(t) 
Problems 
[i 0 J,] ·-m (a) A= -3 
0 
[i 0 
~] ·-[:] (b) A= -2 
0 
Can the system be stabilized by state feedback u(t) = -Kx(t), where K = [k1 k2k3)? 
2-45. Consider the open-loop system in Fig. 2P-45(a). 
F(s) __.8__.. Y(s) 
figure 2P-45a 
d2y g cf, where -1 --1 y = z and f(t) = , d~ +z. dt~ t 101 
Our goal is to stabilize this system so the closed-loop feedback control will be defined as shown in 
the block diagram in Fig. 2P-45(b). 
Figure 2P-45b 
de Assuming f(t) = kpe + ka--dt 
(a) Find the open-loop transfer function. 
(b) Find the closed-loop transfer function. Y(s) 
(c) Find the range of k" and kt1 in which the system is stable. 
2-46. The block diagram of a motor-control system with tachometer feedback is shown in Fig. 
2P-46. Find lhe range of the tachometer constant K, so lhal the system is asymptotically stable. 
+ JO r(t) 100 y(t) 
s(s + 5.6)(s + JO) 
Figure 2P-46 
102 ~ Chapter 2. Mathematical Foundation 
2-47. The block diagram of a control system is shown in Fig. 2P-47. Find the region in the K-versus­
a plane for lhe system to be asymptotically stable. (Use K as the venical and a as the horizontal axis.) 
r(t) e(I) 
figure 2P-'l7 K(s+ 2) 
s2-1 y(f) 
2-48. The conventional Routh-Hurwitz criterion gives information only on the location of the zeros 
of a polynomial F(s) with respect to the left half and right half of the s-plane. Devise a linear 
transformations:::= /( p, a), where pis a complex variable, so that the Routh-Hurwitz criterion can 
be applied to determine whether F(s) has zeros to the right of the lines = -a, where a is a positive 
real number. Apply the transformation to the following ch.'lracteristic equations to determine how 
many roots are to the right of the line s = -1 in the s-plane. 
(a) F(s) = s2 + 5s + 3 = 0 
(b) s3 + 3s2 + 3s + l = 0 
(c) F(s) = s3 + 4s2 + 3s + 10 = 0 
(d) s3 +4s2 +4s+4 = 0 
2-49. The payload of a space-shuttle-pointing control system is modeled as a pure mass M. The 
payload is suspended by magnetic bearings so that no friction is encountered in the control. The 
attitude of the payload in they direction is controlled by magnetic actuators located at the base. 
The total force produced by the magnetic actuators is f(t). The controls of the other degrees of 
motion are independent and are not considered here. Because there are experiments located on the 
payload, electric power must be brought to the payload through cables. The linear spring with 
spring constant K., is used to model the cable attachment. The dynamic system model for the 
f "t) 
2 
Figure 2P-49 J 1 
If I) 
2 
Problems -<I 103 
control of the y-axis motion is shown in Figure 2P~49. The force equation of motion in they­
direction is 
f(t) = Ksy(t) + Md~~t} 
where Ks= 0.5 N-m/m and M = 500kg. The magnetic actuators are controlled through state 
feedback, so that 
f(t) = -Kpy(t) -Kn dy(t} 
dt 
(a) Draw a functional block diagram for the system. 
(b) Find the characteristic equation of the closed-loop system. 
(c) Find the region in the K0-versus-Kp plane in which the system is asymptotically stable. 
2-50. An inventory-control system is modeled by the following differential equations: 
dxi (t) = -x2(t} + u(t) 
dt 
dx2(t) = -Ku(t) 
dt 
where x 1 (t) is the level ofinventory; x2(t). the rate of sales of product; u( t), the production rate; and K, 
a real constant. Let the output of the system by y( t) = x1 ( t) and r( t) be the reference set point for the 
desired inventory level. Let u(t) = r(t} -y(t}. Determine the constraint on K so that the closed-loop 
system is asymptotically stable. 
2-51. Use MATLAB to solve Problem 2-50. 
2-52. Use MATLAB to 
(a) Generate symbolically the time function of j{t) 
f(t) =5+2e-2'sin(2r+i)-4e-2'cos(2t-~ +3e-41 
. (s + l} 
(b) Generate symbolically G(s) = s(s + 2)(sZ +Zs+ 2) 
(c) Find the Laplace transfonn of f{t) and name it F(s). 
(d) Find the inverse Laplace transform of G(s) and name it g(t). 
(e) If G(s) is the forward-path transfer function of unity-feedback control systems. find the transfer 
function of the closed-loop system and apply the Routh-Hurwitz criterion to determine its stability. 
(f) If F(s) is the forward-path transfer function of unity-feedback control systems, find the transfer 
function of the closed-loop system and apply the Routh-Hurwitz criterion to determine its stability. 
CHAPTER .3 
Block Diagrams and 
Signal-Flow Graphs 
In this chapter, we discuss graphical techniques for modeling control systems and their 
underlying mathematics. We also utilize the block diagram reduction techniques and the 
Mason's gain formula to find the transfer function of the overall control system. Later on in 
Chapters 4 and 5, we use the material presented in this chapter and Chapter 2 to fully model 
and study the performance of various control systems. The main objectives of this chapter are: 
1. To study block diagrams, their components, and their underlying mathematics. 
2. To obtain transfer function of systems through block diagram manipulation and 
reduction. 
3. To introduce the signal-flow graphs. 
4. To establish a parallel between block diagrams and signal-flow graphs. 
5. To use Mason's gain formula for finding transfer function of systems. 
6. To introduce state diagrams . 
7. To demonstrate the MATLAB tools using case studies. 
~ 3-1 BLOCK DIAGRAMS 
104 The block diagram modeling may provide control engineers with a better understanding 
of the composition and interconnection of the components of a system. Or it can be used, 
together with transfer functions, to describe the cause-and-effect relationships throughout 
the system. For example, consider a simplified block diagram representation of the heating 
system in your lecture room, shown in Fig. 3-1, where by setting a desired temperature, also 
defined as the input, one can set off the furnace to provide heat to the room. The process is 
relatively straightforward. The actual room temperature is also known as the output and is 
measured by a sensor within the thermostat. A simple electronic circuit within the 
thermostat compares the actual room temperature to the desired room temperature 
Heat Loss 
Desired Room 
Temperature .------, 
Thermostat Error Gas Valve '----,.------' Voltage .__ __ __, Furnace 
Feedbnck 
Figure 3-1 A simplified block diagram representation of a heating system. Actual Room 
Tempera ture 
V;(/) Input 
voltage 
V;(s) AMPLIFIER Disturbance 
torque 
DC MOTOR 
(a) 
(b) 3-1 Block Diagrams <Ill 105 
~----~ Output 
LOAD speed 
l 
B+Js (J) (1) 
Q(s) 
Figure 3-2 (a) Block diagram of a de-motor control system. (b) Block diagram with transfer 
functions and amplifier characteristics. 
(comparator). [f the room temperature is below the desired temperature, an error voltage 
will be generated. The error voltage acts as a switch to open the gas valve and turn on the 
furnace (or the actuator) . Opening the windows and the door in the classroom would cause 
heat loss and, naturally, would disturb the heating process (disturbance). The room 
temperature is constantly monitored by the output sensor. The process of sensing the output 
and comparing it with the input to establish an error signal is known as feedback. Note that 
the error voltage here causes the furnace to turn on, and the furnace would finally shut off 
when the error reaches zero. 
As another example, consider the block diagram of Fig. 3-2 (a), which models an open­
loop, de-motor, speed-conttol system. The block diagram in this case simply shows how the 
system components are interconnected, and no mathematical details are given. If the 
mathematical and functional relationships of all the system elements are known, the block 
diagram can be used as a tool for the analytic or computer solution of the system. In general, 
block diagrams can be used to model linear as well as nonlinear systems. For example, the 
input-output relations of the de-motor control system may be represented by the block 
diagram shown in Fig. 3-2 (b). In this figure, the input voltage to the motor is the output of the 
power amplifier, which, realistically, has a nonlinear characteristic. If the motor is linear, or, 
more appropriately, if it is operated in the linear region of its characteristics , its dynamics can 
be represented by transfer functions . The nonlinear amplifier gain can only be described in 
time domain and between the time variables v.{t) and v,,(t). Laplace transform variables do 
not apply to nonlinear systems; hence, in this case, V;(s) and Va(s) do not exist. However, if the 
magnitude of v;(t) is limited to the linear range of the amplifier, then the amplifier can be 
regarded as linear, and the amplifier may be described by the transfer function 
(3-1) 
where K is a constant, which is the slope of the linear region of the amplifier characteristics. 
Alternatively, we can use signal-flow graphs or state diagrams to provide a graphical 
representation of a control system. These topics are discussed later in this chapter. 
106 11,,-Chapter 3. Block Diagrams and Signal-Flow Graphs 
3-1-1 Typical Elements of Block Diagrams in Control Systems 
We shall now define the block-diagram elements used frequently in control systems and the 
related algebra. The common elements in block diagrams of most control systems include: 
• Comparators 
• Blocks representing individual component transfer functions , including : 
• Reference sensor (or input sensor) 
• Output sensor 
• Actuator 
• Controller 
• Plant (the component whose variables are to be controlled) 
• Input or reference signals 
• Output signals 
• Disturbance signal 
• Feedback loops 
Fig. 3-3 shows one configuration where these elements are interconnected. You may 
wish to compare Fig. 3-1 or Fig. 3-2 to Fig. 3-3 to find the control terminology for each 
system. As a rule, each block represents an element in the control system, and each element 
can be modeled by one or more equations. These equations are normally in the time domain 
or preferably (because of ease in manipulation) in the Laplace domain. Once the block 
diagram of a system is fu11y constructed, one can study individual components or the 
overall system behavior. 
One of the important components of a control system is the sensing and the electronic 
device that acts as a junction point for signal comparisons-otherwise known as a 
comparator . In general, these devices possess sensors and perform simple mathematical 
operations such as addition and subtraction (such as the thermostat in Fig. 3-1). Three 
examples of comparators are illustrated in Fig. 3-4. Note that the addition and subtraction 
operations in Fig. 3-4 (a) and (b) are linear, so the input and output variables of these block­
diagram elements can be time-domain variables or Laplace-transfonn variables. Thus, in 
Fig. 3-4 (a), the block diagram implies 
e(t) = r(t) -y(t) (3-2) 
or 
E(s) = R(s) -Y(s) (3-3) 
As mentioned earlier, blocks represent the equations of the system in time domain or the 
transfer function of the system in the Laplace domain, as demonstrated in Fig. 3-5. 
Reference 
Sensor Controller Actuator 
Output 
Sensor Disturbance 
Figure 3-3 Block diagram represent ation of a general control system. 
r(t) 
R(s) 
y(t) Y(s) 
(a) e(t) = r(t) -y(I) 
E(s) = R(s) -Y(s) 
e(t) = 1/1) + r2(t) -y(t) 
+ E(s) = R1(s) + R2(s)-Y(s) 
><~)r Y(>) 
(c) 3-1 Block Diagrams ~ 107 
r(t) 
R(s) + 
y(t) Y(s) 
(b) 
A comparator 
performs addition 
and subtraction e(r) = r(t) + y(t) 
E(s) = R(s) + Y(s) 
Figure 3-4 Block-diagram elements of typical sensing devices of control systems. (a) Subtraction. 
(b) Addition. (c) Addition and subtraction. 
u (t) 
·I g (x, u) x(t) • Time Figure 3-5 Time and Laplace domain block 
domain diagrams . 
U(s) .. I G(s) X (s) ._ Laplace 
domain 
In Laplace domain, the following input-output relationship can be written for the system in 
Fig. 3-5: 
X (s) = G (s) U (s) (3-4) 
If signal X(s) is the output and signal U(s) denotes the input, the transfer function of the 
block in Fig. 3-5 is 
X(s) 
G(s)=U(s) (3-5) 
Typical block elements that appear in the block diagram representation of most control 
systems include plant, controller, actuator, and sensor . 
._ EXAMPLE 3-1-1 Consider the block diagram of two transfer functions G 1 (s) and G2(s) that are connected in series. 
Find the transfer function G(s) of the overall system. 
SOLUTION The system transfer function can be obtained by combining individual block equations. 
Hence, for signals A(s) and X(s), we have 
108 Chapter 3. Block Diagrams and Signal-Flow Graphs 
.... G1 (s) G2 (s) U (s) '"I 
.__ __ _, A (s) ,.I 
.__ __ ___, X(s) ,. figure 3-6 Block diagrams G1(s) and 
Gz(s) connected in series . 
Hence, X(s) = A(s)G2(s) 
A(s) = U(s)Gi(s) 
X(s) = G1 (s)G2(s)U(s) 
C(s) = X(s) 
U(s} 
G(s) = G1 (s)G2(s) (3-6) 
Hence, using Eq. (3-6), the system in Fig. 3-6 can be represented by the system in Fig. 3-5. 4fll 
... EXAMPLE 3-1-2 Consider a more complicated system of two transfer functions G 1 (s) and Gz(s) that are connected in 
parallel, as shown in Fig. 3-7. Find the transfer function G(s) of the overaJI system. 
SOLUTION The system transfer function can be obtained by combining individual block equations. 
Note for the two blocks G1 (s) and Gi(s), A 1 (s) acts as the input, and Ai(s) and A3(s) are the outputs, 
respectively. Further, note that signal U(s) goes through a branch pointP to become A1 (s). Hence, for 
the overall system, we combine the equations as follows. 
Hence, A1 (s) -U(s) 
A2(s) = A1 (s)G1 (s) 
A.,(s) =A1(s)G2(s) 
X(s) =A2(s) +A,(s) 
X(s) = U(s)(G1 (s) + G2(s)) 
G(s) = X(s) 
U(s) 
G(s) = G1 (s) + G2(s) (3-7) 
For a system to be classified as a feedback control system, it is necessary that the controlled 
variable be fed back and compared with the reference input. After the comparison , an error signal is 
generated, which is used to actuate the control system. As a result, the actuator is activated in the 
presence of the error to minimize or eliminate that very error. A necessary component of every 
feedback control system is an output sensor, which is used to convert the output signal to a quantity 
that has the same units as the reference input. A feedback control system is also known a closed-loop 
system. A system may have multiple feedback loops. Fig. 3-8 shows the block diagram of a linear 
A1 (s) G1 (s) A2 (s) 
U (s) p X (f) 
G2 (s) Figure 3-7 Block diagrams G1(s) and A1 (s) A3 (s) G2(s) connected in parallel. 
3-1 Block Diagrams 109 
R(s) U(s) Y(s) 
G(s) 
r(t) + u(I) y(c) 
b(1) 
H{s) 
B(s) figure 3-8 Basic block diagram of a 
feedback control system. 
feedback control system with a single feedback loop. The following tenninology is defined with 
reference to the diagram: 
r(t), R(s) = reference input(command ) 
y(t), Y(s) = output (controlled variable) 
b(t), B(s) = feedback signal 
u(t), U(s) = actuating signal = errnr signal e(t), E(s), when H(s) = 1 
H (s) = feedback transfer function 
G(s)H(s) = L(s) = Jooptransferfunction 
G(s) = forward-path transfer function 
M(s) = Y(s)/ R(s) = closed-loop transfer function or system transfer function 
The closed-loop transfer function M(s) can be expressed as a function of G(s) and H(s). From Fig. 3-8, 
we write 
Y(s) = G(s)U(s) 
and 
B(s) = H(s)Y(s) 
The actuating signal is written 
U(s) = R(s) -B(s) 
Substituting Eq. (3-10) into Eq. (3-8) yields 
Y(s) = G(s)R(s) -G(s)H(s) (3-8) 
(3-9} 
(3-10) 
(3-1 l) 
Substituting Eq. (3-9) into Eq. (3-7) and then solving for Y(s)/R(s) gives the closed-loop transfer 
function 
M s) = Y(s) = G(s) 
( R(s) l + G(s)H(s) (3-12) 
The feedback system in Fig. 3-8 is said to have a negative feedback loop because the comparator 
subtracts. When the comparator adds the feedback, it is called positive feedback, and the transfer 
function Eq. (3-12) becomes 
M(s) = Y(s) = G(s) 
R(s) 1 -G(s)H(s) (3-13) 
If G and Hare constants, they are also called gains. If H = 1 in Fig. 3-8, the system is said to have a 
unity feedback loop, and if H = 0, the system is said to be open loop. 
3-1-2 Relation between Mathematical Equations and Block Diagrams 
Consider the following second-order prototype system: 
i(t) + 2 t w,J; (t) + w~ x (t) = (.u~ u (t) (3-14) 
110 .,,_ Chapter 3. Block Diagrams and Signal-Flow Graphs 
2(w,,2X(s) 
w,/X(s) Figure 3-9 Graphical representation of Eq. (3-17) 
using a comparator. 
which has Laplace representation (assuming zero initial conditions x(O) =i(O) = 0): 
X(s) s2 + 2 (w,1 X(s)s + w~X (s) = w~ U(s) (3-15) 
Eq. (3-15) consists of constant damping ratios, constant natural frequency w11, input U(s), 
and output X(s). If we rearrange Eq. (3-15) to 
w~U(s)-2sw11X(s)s-w~X(s) =X(s)s2 (3-16) 
it can graphically be shown as in Fig. 3-9. 
The signals 2sw11sX(s) and w~X(s) may be conceived as the signal X(s) going into 
blocks with transfer functions 2sw11s and w~, respectively, and the signal X(s) may be 
obtained by integrating s2X(s) twice or by post-multiplying by 1;-, as shown in Fig. 3-10. 
Because the signals X(s) in the right-hand side of Fig. 3-10 ~~-e the same, they can be 
connected, leading to the block diagram representation of the system Eq. (3-17), as shown 
in Fig. 3-11. If you wish, you can further dissect the block diagram in Fig. 3-11 by factoring 
out the term las in Fig. 3-12(a) to obtain Fig. 3-12(b). s If the system studied here corresponds to the spring-mass-damper seen in Fig. 4-5 (see 
Chapter 4), then we can designate internal variables A(s) and V(s), which represent 
acceleration and velocity of the system, respectively, as illustrated in Fig. 3-12. The best 
way to see this is by recalling that f is the integration operation in Laplace domain. Hence, 
if A(s) is integrated once, we get V(s), and after integrating V(s), we get the X(s) signal. 
It is evident that there is no unique way of representing a system model with block 
diagrams. We may use different block diagram forms for different purposes, as long as the 
w/U(s) + 
X(s) 
X(s) figure 3-10 Addition of blocks {, 2i;w11s, 
and w; to the graphical represen1ation of 
Eq. (3-17). 
Figure 3-11 Dlock diagram 
representation of Eq. (3-17) in Laplace 
domain. 
3-1 Block Diagrams · 111 
X(s) 
(a) 
X(s) 
(b) 
Figure 3-12 (a) Factorization of i term in the internal feedback loop of Fig. 3-11. (b) Final block 
diagram represenration of Eq. (3-17) in Laplace domain . 
V(s) 
Figure 3-13 Block diagram of 
Eq. (3-17) in Laplace domain with V(s) 
represented as the output. 
overall transfer function of the system is not altered. For example, to obtain the transfer 
function V(s)/U(s), we may yet rearrange Fig. 3-12 to get V(s) as the system output, as 
shown in Fig. 3-13. This enables us to determine the behavior of velocity signal with 
input U(s). 
EXAMPLE 3-1-3 Find the transfer function of the system in Fig. 3-12 and compare that to the transfer function of 
system in Eq. (3-15). 
SOLUTIONS Thew~ block at the input and feedback signals in Fig. 3-12(b) may be moved to the 
right-hand side of the comparator. This is the same as faciorization of w; as shown: 
w;, U (s) -1u~X (s) = w;, (U(s) -X (s)) (3-17) 
Fig. 3-14(a) shows the factorization operation of Eq. (3-17), which results in a simpler block diagram 
representation of the system shown in Fig. 3-14 (b). Note that Fig. 3-12(b) and Fig. 3-14(b) are 
equivalent systems. 
112 i.,,. Chapter 3. Block Diagrams and Signal-Flow Graphs 
'----- X(s) 
(a) 
(b) A(s) 
X(s) 
Figure 3-14 (a) Factorization of <.v~. (b) Alternative block diagram representation of Eq. (3-17) 
in Laplace domain. 
.L X(s) 
s 
Figure 3-15 A block diagram 
w~ 
representation of s2+2 s "'" s+w~. 
Considering Fig. 3-l 2(b ), it is easy to identify the internal feedback loop, which in turn can be 
simplified using Eq. (3-12), or 
V(s) f s 
A(s) = 1 + 2l;w11 s+21,"wn (3-18) 
s 
After pre-and post-multiplication by w2 and f, respectively, the block diagram of the system is 
simplified to what is shown in Fig. 3-15, which ultimately results in 
X(s) 
U(s) w2 I+ " s (s + 21,"w,.) s (s + 2 l;wn) (3-19) s2+1i;w,.s+w~ 
Eq. (3-19) is also the transfer function of system Eq. (3-15). 
EXAMPLE 3-1-4 Find the velocity transfer function using Fig. 3-13 and compare that to the derivative of Eq. (3-19). 
SOLUTIONS Simplifying the two feedback loops in Fig. 3-13, starting wilh the internal loop first, 
we have I s 2 2rw w" I+-~-" V(s) s ==---~--U(s) I 2 l + s Wn 
I 21,"wn s +--s 
V(s) scv;, 
U(s) = s2 +21,"w11s+w',! (3-20) 
3-1 Block Diagrams -cC 113 
Eq. (3-20) is the same as the derivative of Eq. (3-19), which is nothing but multiplying Eq. (3-I 9) by 
an s term. Try to find the A(s)/ U(s) transfer function. Obviously you must get: s2X(s)/ U(s). -Ci 
3-1-3 Block Diagram Reduction 
As you might have noticed from the examples in the previous section, the transfer function 
of a control system may be obtained by manipulation of its block diagram and by its 
ultimate reduction into one block. For complicated block diagrams, it is often necessary to 
move a comparator or a branch point to make the block diagram reduction process 
simpler. The two key operations in this case are: 
1. Moving a branch point from P to Q, as shown in Fig. 3-16(a) and Fig. 3-16(b). 
This operation must be done such that the signals Y(s) and B(s) are unaltered. In 
Fig. 3-16(a), we have the following relations: 
Y(s) = A(s)G2(s) 
B(s) = Y(s)H1 (s) (3-21) 
In Fig. 3-16(b), we have the following relations: 
But 
(a) 
(b) Y(s) = A(s)G2(s) 
B(s) = A(s)H1 (s)G2(s) (3-22) 
G ( ) = Y(s) 
2 s A(s) (3-23) 
-=*B(s) = Y(s)H1(s) 
2. Moving a comparator, as shown in Fig. 3-1 ?(a) and Fig. 3-1 ?(b), should also be 
done such that the output Y(s) is unaltered . In Fig. 3-1 ?(a), we have the fol1owing 
relations: 
Y(s) = A (s)G2 (s) + B(s)H1 (s) (3-24) 
p 
1--r--Y(s) 
B(s) 
Y(s) 
B(s) Figure 3-16 (a) Branch point relocation 
from point P to (b) point Q. 
114 .,.._ Chapter 3. Block Diagrams and Signal-Flow Graphs 
(a) 
(b) 
A(s) Y(s) 
Y(s) 
Figure 3-17 (a) Comparator relocation 
from the right-hand side of block G2(s) to 
(b) the left-hand side of block G2(s). 
In Fig. 3-17(b), we have the following relations: 
So Hi (s) 
Yi (s) = A(s) + B(s) G
2(s) 
Y(s) = Y1 (s)G2(s) 
Hi (s) Y(s) =A(s)G2(s) + B(s) G2(s) G2(s) 
=? Y(s) = A(s)G2(s) + B(s)H, (s) 
~ EXAMPLE 3-1-5 Find the input-output transfer function of the system shown in Fig. 3-17(a). (3-25) 
(3-26) 
SOLUTION To perform the block diagram reduction, one approach is to move the branch point at Y1 
to the left of block G2, as shown in Fig. 3-18(b). After that, the reduction becomes trivial, first by 
combining the blocks G2, G3, and G4 as shown in Fig. 3-18(c), and then by eliminating the two 
y 
(a) 
Figure 3-18 (a) Original block diagram. (b) Moving the branch point at Y1 to the left of block G2. (c) 
Combining the blocks G1, G2, and G3. (d) Eliminating the inner feedback loop. 
3-1 Block Diagrams ~ 115 
y 
(b) 
y 
(c) 
y 
(d) 
Figure 3-18 (Continued) 
feedback loops. As a result, the transfer function of the final sy~tem after the reduction in Fig. 3-l 8(d) 
becomes 
Y(s) G1(hG3+G 1G4 
E(s) = 1 +G2G3H1 +GrG2G3 + G1G4 (3-27) 
3-1-4 Block Diagrnrn of Multi-Input Systems-Special Case: Systems with a Disturbance 
An important case in the study of control systems is when a disturbance signal is present. 
Disturbance (such as heat loss in the example in Fig. 3-1) usually adversely affects the 
perfom1ance of the control system by placing a burden on the controller/actuator compo­
nents. A simple block diagram with two inputs is shown in Fig. 3-19. ln this case, one of the 
inputs, D(s), is known as disturbance, while R(s) is the reference input. Before designing a 
proper controller for the system, it is always important to learn the effects of D(s) on the 
system. 
We use the method of superposition in modeling a multi-input system. 
Super Position: For linear systems, the overall response of the system under 
multi-inputs is the summation of the responses due to the individual inputs, i.e., in this case, 
(3-28) 
116 Chapter 3. Block Diagrams and Signal-Flow Graphs 
D(s) 
Controller Plant 
R(s) Y(s) 
011tp11t Sensor 
Figure 3-19 Block diagram of a system undergoing disturbance 
Y(s) 
Figure 3-20 Block diagram of the 
system in Fig. 3-19 when D(s) = 0. 
When D(s) = 0, the block diagram is simplified (Fig. 3-20) to give the transfer function 
Y(s) 
R(s) (3-29) 
When R(s) = 0, the block diagram is rearranged to give (Fig. 3-21): 
(a) 
(b) Y(s) 
D(s) 
D(s) 
Y(s) 
f(s) (3-30) 
Figure 3-21 Block diagram of the 
system in Fig. 3-19 when R(s) = 0. 
3-1 Block Diagrams 117 
As a result, from Eq. (3-28) to Eq. (3-32), we ultimately get 
Y,oral = Y((s))! R(s) + ~((s))! D(s) Rs D=O s R=O (3-3 l) 
G1G2 -G2 
Y(s) = 1 + Gt G2Ht R(s) + 1 + Gt G2H1 D(s) 
Observations: Jilo=o and blll=O have the same denominators if the disturbance signal 
goes to the forward path. The negative sign in the numerator of blR=O shows that the 
disturbance signal interferes with the controller signal, and, as a result, it adversely affects 
the performance of the system. Naturally , to compensate, there will be a higher burden on 
the controller. 
3-1-5 Block Diagrams and Transfer Functions of Multivariable Systems 
In this section, we shall illustrate the block diagram and matrix representations (see 
Appendix A) of multivariable systems. Two block-diagram representations of a multi­
variable system with p inputs and q outputs are shown in Fig. 3-22(a) and (b). In Fig. 3-22 
(a), the individual input and output signals are designated, whereas in the block diagram of 
Fig. 3-22(b), the multiplicity of the inputs and outputs is denoted by vectors. The case of 
Fig. 3-22(b) is preferable in practice because of its simplicity . 
Fig. 3-23 shows the block diagram of a multivariable feedback control system. The 
transfer function relationships of the system are expressed in vector-matrix form (see 
Appendix A): 
~ 
r2(1) 
MUL TIV ARI ABLE 
SYSTEM . 
. 
(a) 
r(t) ---·I MULTIVARIABLE . SYSTEM 
(b) Y(s) = G(s)U(s) (3-32) 
U(s) = R(s) -B(sj (3-33) 
B(s) = H(s)Y(s) (3-34) 
~ 
~ 
. Y,/f) 
.....---· y(t) 
Figure 3-22 Block diagram representations of 
a multivariable system. 
118 • · Chapter 3. Block Diagrams and Signal-Flow Graphs 
Y(s) 
B(s) 
H(s) Figure 3-23 Block diagram of a multivariable 
feedback control system. 
where Y(s) is the q x 1 output vector; U(s), R(s), and B(s) are all p x I vectors; and G(s) 
and H(s) are q x p and p x q transfer-function matrices, respectively . Substituting Eq. 
(3-11) into Eq. (3-10) and then from Eq. (3-10) to Eq. (3-9), we get 
Y(s) = G(s)R(s) -G(s)H(s)Y(s) (3-35) 
Solving for Y(s) from Eq. (3-12) gives 
Y(s) =[I+ G(s)H(s)r1G(s)R(s) (3-36) 
provided that I+ G(s)H(s) is nonsingular. The closed-loop transfer matrix is defined as 
M(s) =[I+ G(s)H(s)r1G(s) (3-37) 
Then Eq. (3-14) is written 
Y(s) = M(s)R(s) (3-38) 
i.,,; EXAMPLE 3-1-6 Consider that the forward-path transfer function matrix and the feedback-path transfer function 
matrix of the system shown in Fig. 3-23 are 
G(s) = [+ -} ] H(s) = [~ ~] 
s+2 (3-39) 
respectively. The closed-loop transfer function matrix of the system is given by Eq. (3-15), and 
is evaluated as follows: 
[ I l+--
1 + G(s)H(s) = ; + I -~ ]=[:::~ -~1 
1 J s + 3 +-- 2 --s+2 s+2 
The closed-loop transfer function matrix is 
s 
[s+3 
M(s) =(I+ G(s)H(s)r1G(s) = i s + 2 
-2 I l 
s~2 
where 
t,. = s + 2 s + 3 + ~ = s2 + 5s + 2 
s+ I s+2 s s(s+ 1) (3-40) 
(3-41) 
(3-42) 
H Signal-Flow Graphs (SFGs) _. 119 
Thus. 
[ 3s2 + 9.r + 4 1 ] 
M(s) = s(s + I) s(s + J)(s + 2) -s 
s2 + Ss + 2 2 3s + 2 
s(s + I) (3-43) 
}-. 3-2 SIGNAL-FLOW GRAPHS (SFGs) 
A signal-flow graph (SFG) may be regarded as a simplified version of a block diagram. The 
SFG was introduced by S. J. Mason [2] for the cause-and-effect representation of linear 
systems that are modeled by algebraic equations. Besides the differences in the physical 
appearance of the SFG and the block diagram, the signal-flow graph is constrained by more 
rigid mathematical mles, whereas the block-diagram notation is more liberal. An SFG may 
be defined as a graphical rrteans of portraying the input-output relationships among the 
variables of a set of linear algebraic equations. 
Consider a linear system that is described by a set of N algebraic equations: 
N 
Yj = 2:::akjYk j = 1, 2, ... , N (3-44) 
k=l 
It should be pointed out that these N equations are written in the form of cause-and~effect 
relations: 
or simply N 
jtheffect = I:(gain fromkto j) x {kthcause) 
k=1 
Output= I:(gain) x (input) (3-45) 
(3-46) 
This is the single most important axiom in forming the set of algebraic equations for SFGs. 
When the system is represented by a set of integrodifferential equations, we must first 
transform these into Laplace-transform equations and then rearrange the latter in the form 
of Eq. (3-31), or 
N 
Yj(s) = EG,q(s)Y,.(s) j = I, 2, ... ,N (3-47) 
k=l 
3 .. z.1 Basic Elements of an SFG 
When constructing an SFG, junction points, or nodes, are used to represent variables. The 
nodes are connected by line segments called branches, according to the cause-and-effect 
equations. The branches have associated branch gains and directions. A signal can transmit 
through a branch only in the direction of the arrow. In general, given a set of equations 
such as Eq. (3-31) or Eq. (3-47)t the construction of the SFG is basically a matter of 
120 > Chapter 3. Block Diagrams and Signal-Flow Graphs 
tl12 Qf-------~•----------,Q 
y1 y2 Figure 3-24 Signal flow graph of y2 :=; a12)'1, 
following through the cause-and-effect relations of each variable in terms of itself and the 
others. For instance, consider that a linear system is represented by the simple algebraic 
equation 
(3-48) 
where y1 is the input, y2 is the output, and a 12 is the gain, or transmittance, between the two 
variables. The SFG representation of Eq. (3-48) is shown in Fig. 3-24. Notice that the branch 
directing from node y1 (input) to node y2 ( output) expresses the dependence of y2 on y1 but not 
the reverse. The branch between the input node and the output node should be interpreted as a 
unilateral amplifier with gain a12, so when a signal of one unit is applied at the input yi, a signal 
of strength a12)11 is delivered at node y2• Although algebraically Eq. (3-48) can be written as 
1 YI = -y2 (3-49) 
a12 
the SFG of Fig. 3-24 does not imply this relationship. IfEq. (3-49) is valid as a cause-and­
effect equation, a new SFG should be drawn with y2 as the input and y1 as the output. 
... EXAMPLE 3-2-1 As an example on the construction of an SFG, consider the following set of algebraic equations: 
Y2 = a12Y1 + a3zy3 
Y3 = a23Y2 + Cl.13Y4 
Y4 = a24y2 + a34y3 + a44y4 
Ys = a2sY2 + a45y4 
The SFG for these equations is constructed, step by step, in Fig. 3-25. 
3-2-2 Summary of the Basic Properties of SFG (3-50) 
The important properties of the SFG that have been covered thus far are summarized as 
follows. 
1. SFG applies only to linear systems. 
2. The equations for which an SFO is drawn must be algebraic equations in the form 
of cause-and-effect. 
3. Nodes are used to represent variables. Normally, the nodes are arranged from left 
to right, from the input to the output, following a succession of cause-and-effect 
relations through the system. 
4. Signals travel along branches only in the direction described by the arrows of the 
branches. 
5. The branch directing from node Yk to YJ represents the dependence of Yj upon Yk 
but not the reverse. 
6. A signal Yk traveling along a branch between Yk and Yi is multiplied by the gain of 
the branch akj, so a signal akjYk is delivered at YJ· 
3-2-3 Definitions of SFG Terms 
In addition to the branches and nodes defined earlier for the SFG, the following terms are 
useful for the purpose of identification and execution of the SFG algebra. 
3-2 Signal-Flow Graphs (SFGs) "'~ 121 
Y2 Y3 
(a) Y2 = a12J11 + a32~'3 
Yi h h h 
(b) Y2 = a12V1 + 032)13 Y3 == a23Y2 + ll43)14 
YI 
Y1 
(d) Complete signal-flow graph 
Figure 3-25 Step-by-step construction of the signal-How graph in Eq. (3-50). 0 
Ys 
0 
Y5 
Input Node (Source): An input node lr; a node that has only outgoing branches 
(example: node YJ in Fig. 3-24). 
Output Node (Sink): An output node is a node that has only incoming branches: 
(example: node Y2 in Fig. 3-24). However, this condition is not always readily met by an 
output node. For instance, the SFG in Fig. 3-26{a) does not have a node that satisfies the 
condition of an output node. It may be necessary to regard Y2 and/or y3 as output nodes to 
find the effects at these nodes due to the input. To make Y2 an output node, we simply 
connect a branch with unity gain from the existing node yz to a new node also designated as 
y2, as shown in Fig. 3-26(b). The same procedure is applied to Y3. Notice that, in the 
modified SFG of Fig. 3-26(b), the equations Y2 = Y2 and y3 === y3 are added to the original 
equations. In general, we can make any noninput node of an SFG an output by the 
procedure just illustrated. However, we cannot convert a noninput node into an input node 
by reversing the branch direction of the procedure described for output nodes. For instance, 
node Y2 of the SFG in Fig. 3-26(a) is not an input node. If we attempt to convert it into an 
input node by adding an incoming branch with unity gain from another identical node Y2, 
the SFG of Fig. 3-27 would result. The equation that portrays the relationship at node y2 
now reads 
Y2 = Y2 + a12Y1 + a32y3 (3-51) 
which is different from the original equation given in Fig. 3-26(a}. 
122 • Chapter 3. Block Diagrams and Signal-Flow Graphs 
(a) Orjginal signal-flow graph 
l Y2 
ct12 a.,3 I 
~-----1 .. ...---<Y2 J>-'3--- .. ---~~ 
(b) Modified signa1~flow graph Figure 3-26 Modification of a 
signal-flow graph so that Y2 and 
Ya satisfy the condition as output 
nodes. 
Y2 )'3 Figure 3-27 Eironeous way to make node .v2 an input 
node. 
Path: A path is any collection of a continuous succession of b,-anc/1es traversed in the 
same direction. The definition of a path is entirely general, since it does not prevent any 
node from being traversed more than once. Therefore. as simple as the SFG of Fig. 3-26(a) 
is. it may have numerous paths just by traversing the branches a23 and a32 continuously. 
Forward Path: A forward path is a path that starts at an input node and entli; at an 
output node and along which no node is traversed more than once. For example, in the 
SFG of Fig. 3-25(d), YI is the input node, and the rest of the nodes are all possible output 
nodes. The forward path between y1 and Y2 is simply the connecting branch between the 
two nodes. There are two forward paths between YI and y3: One contains the branches from 
Yi to Y2 to Y3~ and the other one contains the branches from Yt to Y2 to y4 (through the 
branch with gain a24) and then back to y3 (through the branch with gain a43). The reader 
should try to determine the two forward paths between YI and y4. Similarly, th~re are three 
forward paths between YI and y5. 
Path Gain: The product of the branch gains encountered in traversing a path is called 
the path gain. For example, the path gain for the path Yt -Y2 -y3 -y4 in Fig. 3-25(d) is 
a12a23a34. 
Loop: A loop is a path that originates and terminates on the same node and along which 
no other node is encountered more than once. For example, there are four loops in the SFG 
of Fig. 3-25(d). These are shown in Fig. 3-28. 
Forward-Path Gain: The forward-path gain is the path gain of a forward path. 
Loop Gain: The loop gain is the path gain of a loop. For example, the loop gain of the 
loop Y2 -Y4 -Y3 -Y2 in Fig. 3-28 is a24a43a32. 
Nontouching Loops: Two parts of an SFG are nontouching if they do not share a 
common node. For example, the loops )'2 -y3 -Y2 and )'4 -Y4 of the SFG in Fig. 3-25(d) 
are nontouching loops. 
3-2-4 SFG Algebra H Signal-Flow Graphs {SFGs} • 123 
Figure 3-28 Four loops in the signal-flow graph of Fig. 3-25(d). 
Based on the properties of the SFG, we can outline the following manipulation rules and 
algebra: 
Ys 1. The value of the variable represented by a node is equa] to the sum of all the 
signals entering the node. For the SFG of Fig. 3-29, the value of y1 is equal to the 
sum of the signals transmitted through all the incoming branches; that is, 
YI = a21Y2 + a31y3 + a41y4 + a51Ys (3-52) 
2. The value of the variable represented by a node is transmitted through all branches 
leaving the node. In the SFG of Fig. 3-29, we have 
Y6 = a16Yl 
Y1 = a11Y1 
Ys:::::: a1sY1 (3-53) 
3. Parallel branches in the same direction connecting two nodes can be replaced by a 
single branch with gain equal to the sum of the gains of the parallel branches. An 
example of this case is illustrated in Fig. 3-30. 
Y3 
Ys 
Figure 3-29 Node as a summing point and as a 
transmitting point. 
124 ~ Chapter 3. Block Diagrams and Signal-Flow Graphs 
'., a+b+c / ----+--~--<>------1111------<~--- .. 1111---
Yt Y2 
Figure 3-30 Signal-flow graph with parallel paths replaced by one with a single branch. 
a12 a23 a34 o,-------4•-----a~--~11-------10~---11----o 
Y1 Y2 Y3 Y4 
a12«23a34 o,----•--____,o 
Yt Y4 
Figure 3-31 Signal-flow graph with cascade unidirectional branches replaced by a single branch. 
G(s) I 
Rz~)--~•---E-(s~r(s_) __ ..,..._ _ ___,Y?s) 
-H(s) 
Figure 3-32 Signal-flow graph of the feedback control system shown in Fig. 3-8. 
4. A series connection of unidirectional branches, as shown in Fig. 3-31, can be 
replaced by a single branch with gain equal to the product of the branch gains. 
3-2-5 SFG of a Feedback Control System 
The SFG of the single-loop feedback control system in Fig. 3-8 is drawn as shown in Fig. 
3-32. Using the SFG algebra already outlined, the closed-loop transfer function in Eq. 
(3-12) can be obtained. 
3-2-6 Relation between Block Diagrams and SFGs 
The relation between block diagrams and SFGs are tabulated for three important cases, as 
shown in Table 3-1. 
3-2 .. 7 Gain Formula for SFG 
Given an SFG or block diagram, the task of solving for the input-output relations by 
algebraic manipulation could be quite tedious. Fortunately, there is a general gain formula 
available that allows the determination of the input-output relations of an SFG by 
inspection. 
3-2 Signal-Flow Graphs (SFGs) 125 
TABLE 3·1 Block diagrams and their SFG equivalent representations 
Simple Trans Fer Function 
Y(8) = G( ·) U(s) , s 
Parallel Feedhack 
Y(s) G(s) 
R(s} = 1 +G(s)H(s) Blot:k Diagram Signal Flow Diagram 
U(,} ·I G ,,, Y(s) G (s) 
Y(s) U(s) Y(s) 
R(s) Y(s) 
r(I) )'(I) 
b(t) 
R(s) G(,) 
R(s) o--+----<'\_',:Pl----+---1'.>-- +-~o Y(s) 
U(s) .._____....,... YM 
-1/(s) 
Given an SFG with N forward paths and K loops, the gain between the input node Yin 
and output node Yout is r3J 
M = Yout = ~MkD.k 
' L., D. 
.Yin k=l (3-54) 
where 
or Yin= input-node variable 
Yo111 = output-node variable 
M = gain between Yin and Yow 
N = total number of forward paths between Yin and y0111 
Mk = gain of the kth forward paths between Yin and y0,,1 
6. = 1 -L L;1 +LL j2 -L Lk3 + 
j k (3-55) 
L,m = gain product of the mth (m = i, j, k, , .. ) possible combination of r non­
touching loops ( 1 ~ r ~ K). 
~ = 1-(sum of the gains of all individual loops) + (sum of products of gains of all 
possible combinations of two nontouching loops) -(sum of products of gains of 
all possible combinations of three nontouching loops) + -· · 
D.k = the ~ for that part of the SFG that is nontouching with the kth forward path. 
126 ~ Chapter 3. Block Diagrams and Signal-Flow Graphs 
The gain formula in Eq. (3-54) may seem fonnidable to use at first glance. However, fl 
and 8.k are the only terms in the formula that could be compJicated if the SFG has a large 
number of loops and nontouching loops. 
Care must be taken when applying the gain formula to ensure that it is applied between 
an input node and an output node. 
; · EXAMPLE 3-2-2 Consider that the closed-loop transfer function Y(s)/R(s) of the SFG in Fig. 3-32 is to be determined 
by use of the gain formula. Eq. (3-54). The following results are obtained by inspection of the SFG: 
1. There is only one forward path between R(s) and Y(s), and the forward-path gain is 
M1 = G(s) 
2. There is only one loop; the loop gain is 
Li 1 = -G(s}H(s) (3-56) 
3. There are no nontouching loops since there is only one loop. Furthennore, the forward path 
is in touch with the only loop. Thus. 8.1 = I. and 
~ = 1 -L11 = 1 + G(s)H(s) (3-58) 
Using Eq. (3-54), the closed-loop transfer function is written 
Y(s) M18.1 G(s) 
R(s) = --X-= 1 + G(s)H(s) (3-59) 
which agrees with Eq. (3-12). 
· EXAMPLE 3-2-3 Consider the SFG shown in Fig. 3-25(d). Let us first determine the gain between YI and y5 using the 
gain formula. 
The three forward paths between )'J and y5 and the forward-path gains are 
Mt :::::: aI2a23a34a45 
M2 = a12a25 
M3 = a12a24a45 Forward path: YI -Y2 -Y3 -Y4 -Ys 
Forward path: Yt -Y2 -Ys 
Forward path: YI -Y2 -Y4 -Ys 
The four loops of the SFG are shown in Fig. 3-28. The loop gains are 
Li 1 = a23a32 L21 = a34a43 L31 = a24a43a32 L41 = a44 
There is only one pair of nontouching loops; that is. the two loops are 
Y2 -Y3 -Y2 and Y4 -Y4 
Thus, the product of the gains of the two nontouching loops is 
L12 == a23a32a44 (3-60) 
All the loops are in touch with forward pathsM1 andM3. Thus,8.I = A3 = 1. Two of the loops are not 
in touch with forward path M2. These loops are )'3 -y4 -y3 and y4 -y4. Thus, 
A2 = 1 -a34a43 -a44 
Substituting these quantities into Eq. (3-54). we have 
Y5 MIAI +M2A2 +M3A3 
YI= A 
(aI2a23a34a45) + (a12a25)(l -a34a43 -a44) + a12az4a45 
1 -(a2.1a32 + a34a43 + a24a32a43 + a44) + a23a32a44 (3~61) 
3-2 Signa( .. flow Graphs (SFGs) "114 127 
where 
A= 1 -(Lu + L21 + L31 + L4t) + L12 
= I -(a23a3z + a34a43 + a24a32a43 + a44) + az3a32a44 
The reader should verify that choosing y2 as the output, 
Y2 a12{I -a34a43 -a44) - = --'-------Yl A 
where A is given in Eq. (3-63). 
>·· EXAMPLE 3-2-4 Consider the SFG in Fig. 3-33. The following input-output relations are obtained by use of the gain 
formula: 
Y2 l + G3H2 + H4 + G3H2H4 -= Yi a (3-65) 
(3-66) 
(3-67) 
where 
A;::::: I+ G1H1 +G3H2 + G1G2G3H3 +H4+G1G3B1H2 
(3-68) 
+ G1H1H4 + G-3H2H4 + G1G2G3H3H4 + G1G3H1H2H4 
Figure 3-33 Signal-How graph for Example 3-2-4. 
3-2-8 Application of the Gain Formula between Output Nodes and Noninput Nodes 
It was pointed out earlier that the gain formula can only be applied between a pair of input 
and output nodes. Often, it is of interest to find the relation between an output-node variable 
and a noninput-node variable. For examp]e, in the SFG of Figure 3-33, it may be of interest 
to find the relation y1 /y2. which represents the dependence of y1 upon y2; the latter is not 
an input. 
128 ~ Chapter 3. Block Diagrams and Signal-Flow Graphs 
We can show that, by including an input node, the gain fonnula can still be applied to 
find the gain between a noninput node and an output node. Lety1n be an input andyout be an 
output node of a SFG. The gain, Yout/Y2, where y2 is not an input, may be written as 
Yout EMkAk lrromyin lOYuu1 
Yout Yin A -=-y-= 
Y2 _2 .EMkAklfromy;ntoy:i (3-69) 
Yin A 
Because A is independent of the inputs and the outputs, the last equation is written 
Youl L'MkAklrrom Vin lOYou1 n = L'MkAklrro~Y1n toy2 
Notice that A does not appear in the last equation. 
~ EXAMPLE 3-2~5 From the SFG in Fig. 3-33, the gain between y2 and y7 is written 
Y7 Y1/.V1 G1G2G3G4 + G1Gs(l + G3H2) 
Y2 = Y2/Y1 = 1 + G3H2 + H4 + G3HzH4 
3-2-9 Application of the Gain Formula to Block Diagrams (3-70) 
(3-71) 
Because of the similarity between the block diagram and the SFG, the gain formula in Eq. 
(3-54) can directly be applied to the block diagram to determine the transfer function of the 
system. However, in complex systems, to be able to identify all the loops and nontoucbing 
patts clearly, it may be helpful if an equivalent SFG is drawn for the block diagram first 
before applying the gain formula. 
~ EXAMPLE 3-2-6 To illustrate how an equivalent SFG of a block diagram is constructed and how the gain formula is 
applied to a block diagram, consider the block diagram shown in Fig. 3-34(a). The equivalent SFG of 
the system is shown in Fig. 3-34(b). Notice that since a node on the SFG is interpreted as the summing 
point of all incoming signals to the node, the negative feedbacks on the block diagram are represented 
by assigning negative gains to the feedback paths on the SFG. First we can identify the forward paths 
and loops in the system and their corresponding gains. That is: 
Forward Path Gains: 1. G1 G2G3; 2. Gi G4 
Loop Gains: 1. -G1G2H1; 2. -G2G3H2; 3. -G1G2G3; 4. -G4H2; 5. -G1G4 
The closed-loop transfer function of the system is obtained by applying Eq. (3-54) to either the block 
diagram or the SFG in Fig. 3-34. That is 
Y(s) G1G2G3 + G1G4 
R(s) = A (3-72) 
where 
(3-73) 
Similarly, 
(3-74) 
Y(s) G1G2G3 I G1G4 
E(s) = 1 + Gt G2H1 + G2G3H2 + G4Hz (3-75) 
The last expression is obtained using Eq. (3~ 70). 
3-3 MATLAB Tools and Case Studies ~ 129 
(a) 
G4 
G1 
R Y3 Y2 y 
-Hi 
-I 
(b) 
Figure 3-34 (a) Block diagram of a control system. (b) Equivalent signal-flow graph. 
3-2-10 Simplified Gain Formula 
From Example 3-2-6, we can see that all loops and.forward paths are touching in this case. 
As a general rule, if there are no nontouching loops and forward paths (e.g., Y2 -y3 -Y2 
and y4 -y4 in Example 3-2-3) in the block diagram or SFG of the system, then Eq. (3-54) 
takes a far simpler look, as shown next. 
You1 L Forward Path Gains M----Yin -I -Loop Gains 
Redo Examples 3-2~2 through 3-2-6 to continn the validity of Eq. (3-76) . 
... 3-3 MATLAB TOOLS AND CASE STUDIES (3-76) 
There is no specific software developed for this chapter. Although MATLAB Controls 
Toolbox offers functions for finding the transfer functions from a given block diagram, it 
was felt that students may master this subject without referring to a computer. For simple 
operations, however, MATLAB may be used, as shown in the following example . 
._ EXAMPLE 3-3-1 Consider the following transfer functions , which correspond to the block diagrams shown in Fig. 3-35. 
1 s+ 1 I G1(s)=-1, G2(s)=-2, G(s)=-(--J)' H(s)=lO (3-77) s+ s+ ss+ 
Use MATLAB to find the transfer function Y(s)/R(s) for each case. The results are as follows. -dlt 
130 ..,. Chapter 3. Block Diagrams and Signal-Flow Graphs 
R(s)-----
R(s) 
Toolbox 3-3-1 
Case (a) Use MATLAB to find 01 * G2 
Y(s) s + I 1 
R(s) = s2 + 3s + 2 = (s + 2) 
Approach 1 
>> clear all 
>> s = tf(' s'); 
>> Gl=l/(s+l) 
Transfer function: 
1 
s+l 
>> G2=(s+l)/(s+2) 
Transfer function: 
s+l 
s+2 
>> YR=Gl'G2 
Transfer function: 
s+l 
s"2 + 3 s + 2 
>> YR_simple=minreal (YR) 
Transfer function: 
1 
s+2 i-------Y( s) 
(a) 
(b) 
(c) 
Approach 2 
>> clear all 
>> Gl=tf( [l], [11]) 
Transfer function: 
1 
s+l Y(~·) 
» G2=tf( [11], [1 2]) 
Transfer function: 
s+l 
s+2 
>> YR=Gl.G2 
Transfer function: 
s+l Figure 3-35 Basic block diagrams 
used for Example 3-3-1. 
>> YR_simple=minreal (YR) 
Transfer :functi .cm: 
1 
s+2 
3M3 MATLAB Tools and Case Studies 11 131 
Use "minreal(YR)" for pole zero cancellation. if necessary 
Alternatively use .. 4YR=series(G l ,G2)1' instead of ~'YR=G 1 *02" 
Case (b) Use MATLAB to find Gr + G2 
Y(s) 2s + 3 2(s + 1.5) 
R(s) = s2+3s+2 = (s+ l)(s+2) 
Approach I 
>> clear all 
>> s = tf ( ' s' ) ; 
» G=l/(s+l) 
Transfer function: 
1 
s+l 
>> G2= (s+l)/(s+2) 
Transfer function: 
s+l 
s+2 
>> YR==G1+G2 
Tran sf er function: 
SA2 + 3 S + 3 
>> YR==paralJ..el(Gl, G2) 
Transfer function: 
s"2 + 3 s + 3 
s"'2 + 3 s + 2 Approach 2 
>> clear all 
» Gl=tf( [1], [11]) 
Transfer function: 
1 
s+l 
>> G2=1:f( [11], [1 2]) 
Transfer function: 
s+l 
s+2 
>> YR=Gl+G2 
Transfer function: 
SA2 + 3 s + 3 
s"2 + 3 s + 2 
>> YR=parallel (G1, G2) 
Transfer function: 
SA2 + 3 s + 3 
Use "minreal(YR)" for pole zero cancellation, if necessary 
Alternatively use "YR=parallel(Gl,G2)" instead of '"YR=Gl+G2" 
Use "zpk{YR)" to obtain the real 
zero/pole/Gain format: 
>> zpk(YR) 
Zero/pole/gain: 
(s"'2+3s+3) 
(s+2) (s+l) Use "zero{YR)" to obtain transfer 
function zeros: 
>> zero CYR) 
ans= 
-1. 5000 + 0. 8660i 
-1. 5000 -0. 8660i Use "pole{YR)" to obtain 
transfer function poles: 
>> pole(YR) 
ans= 
-2 
-1 
132 )I,, Chapter 3. Block Diagrams and Signal·Flow Graphs 
Toolbox 3 .. 3.2 
Case (b) Use MATLAB to find the closed-loop feedback function 1 +GGH 
Y(s) 1 
Case ( c) -( ) = 2 0 Rs s+s+l 
Approach 1 
>> clear YR 
>> s = tf ( ' s ' ) i 
» G=l/(s*(s+1)) 
Transfer function: 
1 
s"2 + s 
>> H=lO 
H= 
10 
>> YR=G/(l+G*H) 
Transfer function: 
s"2 + s 
s"4 + 2 s"3 + 11 s"2 + 10 s 
>> YR_simple=minreal(YR) 
Tran sf er function: 
1 
s"2 + s + 10 Approach 2 
>> clear all 
» G=tf( [1] 1 [11 OJ) 
Transfer function: 
1 
s"2 + s 
>> H=lO 
H= 
10 
>> YR=G/(l+G*H) 
Transfer function: 
s"2 + s 
s"4 + 2 s"3 + 11 s"2 + 10 s 
>> YR_simple=minreal (YR) 
Tran sf er function: 
1 
s"2 + s + 1.0 
Use "minreal(YR)" for pole zero cancellation, if necessary 
Alternatively use: 
>> YR=feedback(G, H) 
Transfer function: 
1 
s"2 + s + 10 Use .. pole(YR)" to obtain transfer funcw 
tion poles: 
>> pole(YR) 
ans= 
-0. 5000 + 3 .122Si 
-0. 5000 - 3 .1225i 
3-4 SUMMARY References 1'f 133 
This chapter was devoted to the mathematical modeling of physical systems. Transfer functions, 
block diagrams, and signal-flow graphs were defined. The transfer function of a linear sysl~m was 
defined in terms of impulse response as well as differential equations. Multivariable and single~ 
vatiable systems were examined. 
The block. diagram representation was shown to be a versatile method of portraying linear and 
nonlinear systems. A powerful method of representing the interrelationships between the signals of a 
linear system is the signal~flow graph, or SFG. When applied properly, an SFG allows the derivation of 
the transfer functions between input and output variables of a linear system using the gain formula. A 
state diagram is an SFG that is applied to dynamic systems that are represented by differential equations. 
At the end of the chapter, MATLAB was used to calculate transfer functions of simple block 
diagram systems. 
REVIEW QUESTIONS 
: · REFERENCES 1. Define the transfer function of a linear timewinvariant system in terms of ils impulse response. 
2. When defining the transfer function, what happens to the initial conditions of the system? 
3. Define the characteristic equation of a linear system in terms of the transfer function. 
4. What is referred to as a multivariable system? 
S. Can signal-How graphs (SFGs} be applied to nonlinear systems'? 
6. How can SFGs be applied to systems that are described by differential equations? 
7. Define the input node of an SFG. 
8. Define the output node of an SFG. 
9. State the form to which the equations must first be conditioned before drawing the SFG. 
10. What does the arrow on the branch of an SFG represent'? 
11. Explain how a noninput node of an SFG can be made into on output node. 
12. Can the gain formula be applied between any two nodes of an SFG'? 
13. Explain what the nontouching loops of an SFG are. 
14. Does the .1. of an SFG depend on which pair of input and output is selected? 
15. List the advantages and utilities of the state diagram. 
16. Given the state diagram of a linear dynamic system, how do you define the srate variables? 
17. Given the state diagram of a linear dynamic system, how do you find the transfer function 
between a pair of input and output variables? 
18. Given the state diagram of a linear dynamic system, how do you write the state equations of the 
system? 
19. The state variables of a dynamic system are not equal to the number of energy-storage elements 
under what condition? 
Answers to these review questions can be found on 1his book's companion Web site: 
www.wiley.com/college/golnaraghi. 
Block Diagrams and Signal-Flow Graphs 
1. T. D. Graybeal, .. Block Diagram Network Transfonnation," E/ec. Eng., Vol. 70, pp. 985-990,1951. 
2. S. J. Mason. "Feedback Theory-Sume Properties of Signal Flow Graphs." Proc. IRE. Vol. 41, No. 9 
pp. 1144-1156, Sept. 1953. 
X Y
XE
Y
X Y G
G G
H
H1
12 3
3H2134 • Chapter 3. Block Diagrams and Signal-Flow Graphs 
3. S. J. Mason, "Feedback Theory-Further Properties of Signal Flow Graphs," Proc. IRE, Vol. 44, No. 7 
pp. 920-926, July 1956. 
4. L. P. A. Robichaud, M. Boisvert, and J. Robert, Signal Flow Graphs and Applications, Prentice Hall, 
Englewood Cliffs, NJ, 1962. 
5. B. C. Kuo, Linear Networks and Systems, McGraw-Hill, New York, 1967. 
State-Variable Analysis of Electric Networks 
· PROBLEMS 6. B. C. Kuo, Linear Circuits and Systems, McGraw -Hill, New York, 1967. 
PROBLEMS FOR SECTION 3-1 
3-1. Consider the block diagram shown in Fig. 3P-1. 
Find: 
Kvs 
Figure 3P-1 
(a) The loop transfer function. 
(b) The forward path transfer function. 
(c) The error transfer function. 
(d) The feedback transfer function. 
(e) The closed loop transfer function. 
3-2. Reduce the block diagram shown in Fig. 3P-2 to unity feedback form and find the system 
characteristic equation. 
Figure 3P-2 
3-3. Reduce the block diagram shown in Fig. 3P-3 and find the Y /X. 
Figure JP-3 
H3
H2
H1G3 G2 G1 X YProblems ~ 135 
3-4. Reduce the block diagram shown in Fig. 3P-4 to unity feedback form and find the Y /X. 
Figure 3P-4 
3-5. The aircraft turboprop engine shown in Fig. 3P-5(a) is controlled by a closed-loop system with 
block diagram shown in Fig. 3P-5(b). The engine is modeled as a multivariable system with input 
vector E(s), which contains the fuel rate and propeller blade angle, and output vector Y(s), consisting 
of the engine speed and turbine-inlet temperature. The transfer function matrices are given as 
G(s) = [,CS t 2) _::.__] H(s) = [ ~ n 
s s + 1 
Find the closed-loop transfer function matrix [I+ G(s)H(s)]-1 G(s). 
COMBUSTION 
COMPRESSOR 
TURBINE 
PROPELLER 
Figure 3P-5(a) 
Y(s) 
Figure 3P-5(b) 
3-6. Use MATLAB to solve Problem 3-5. 
3-7. The block diagram of the position-control system of an electronic word processor is shown in 
Fig. 3P-7. 
(a) Find the loop transfer function ~0(s)/E\(s) (the outer feedback path is open). 
(b) Find the closed-loop transfer function ®0(s)/®,(s). 
136 > Chapter 3. Block Diagrams and Signal-Flow Graphs 
Current feedback 
Tachometer feedback 
Figure 3P-7 I 
J,s + B, Gear 
ratio 
3-8. The block diagram of a feedback control system is shown in Fig. 3P-8. Find the following 
transfer functions : 
) Y(s) I (a -
R(s) N=O 
(b) Y(s) I 
E(s) N=O 
(c) Y(s)I 
N(s) R=O 
(d) Find the output Y(s) when R(s) and N(s) are applied simultaneously. 
2 
R(s) 
+ 
Figure 3P-8 s+2 10 
s(s + I) 
O.Ss N(s) 
3-9. The block diagram of a feedback control system is shown in Fig. 3P-9. Y(s) 
(a) Apply the SFG gain formula directly to the block diagram to find the transfer functions 
Y(s)I Y(s) I 
R(s) N=O N(s) R=O 
Express Y(s) in terms of R(s) and N(s) when both inputs are applied simultaneously. 
(b) Find the desired relation among the transfer functions G1(s),G2(s),G3(s),G 4(s),H1(s), and 
H2(s) so that the output Y(s) is not affected by the disturbance signal N(s) at all. 
Problems 137 
Y(s) 
N(s) 
Figure 3P-9 
3-10. Fig. 3P-l O shows the block diagram of the antenna control system of the solar-collector field 
shown in Fig. 1-5. The signal N(s) denotes the wind gust disturbance acted on the antenna. The 
feedforward transfer function Gd(s) is used to eliminate the effect of N(s) on the output Y(s). Find tile 
transfer function Y(s)/N(s)IR=O· Determine the expression of Gd(s) so that the effect of N(s) is 
entirely eliminated . 
R(s) 
Figure 3P-10 s+5 
s+ 10 + N(s) 
+ 
Y(s} 
3-11. Fig. 3P-l l shows the block diagram of a de-motor control system. The signal N(s) denotes the 
frictional torque at the motor shaft. 
(a) Find the transfer function H(s) so that the output Y(s) is not affected by the disturbance torque N(s). 
(b) With H(s) as determined in part (a), find the value of K so that the steady-state value of e(t) is 
equal to 0.1 when the input is a unit-ramp fonction, r(t) = tu5(t), R(s) = 1/ s2, and N(s) = 0. Apply 
the final-value theorem. 
N(s) 
Y(s) 
+ 
G(s) K(s + 3) 
s(s + l)(s + 2) 
Figure 3P-11 
138 Chapter 3. Block Diagrams and Signal-Flow Graphs 
3-12. The block diagram of an electric train control i$ shown in Fig. 3P-l 2. The system parameter~ 
and variables are 
e,. (1) = voltage representing the desired train speed, V 
v(t) = speed of train, ft/sec 
M = Mass of train = 30, 000 lb/ sec2 
K = amplifier gain 
K1 = gain of speed indicator = 0.15 V /ft/sec 
Figure 3P-12 AMPLIFIER 
K CONTROLLER 
Gc(s) 
SPEED 
DETECTOR 
K, ll(!) 
Train 
speed 
To determine the transfer function of the controller, we apply a step funclion of 1 volt to the input of 
the controller, that is, ec(t) = us(t). The output of the controller is measured and described by the 
following equation: 
f(t) = 100(1 -0.3e-61 -o.1e-101)us(t) 
(a) Find the transfer f1.mction Gc(s) of the controller . 
(b) Derive the forward-path transfer function V(s)/ E(s) of the system. The feedback path is opened in 
this case. 
{c) Derive the closed-loop transfer function V(s)/ E,(s) of the system. 
(d) Assuming thatKis set at a value so that the train will not run away (unstable), find the steady-state 
speed of the train in feet per second when the input is e,(t) = us(t)Y. 
3-13. Use MATLAB to solve Problem 3-12. 
3-14. Repeat Problem 3-12 when the output of the controller is measured and described by the 
following expression: 
J(t) = 100 ( 1 -0.3e-6<1-0.5)) Us(t -0.5) 
when a step input of 1 V is applied to the controller. 
3-15. Use MATLAB to solve Problem 3-14. 
3-16. A linear time-invariant multivariable system with inputs r1 (t) and r2(t) and outputs y, (t) and 
y2(t) is described by the following set of differential equations. 
d2
y1
2(t) + 2 dyi (t) +3y2(t) = ri (t) + r2(t) 
cit dt 
cl2y2(t) dy, (1) () () () dr1(t) ~+3~+Y1 t -y2 t =r2 t +~ 
Find the following transfer functions: 
Y1(s)I Y2(s)I Y1(s)I Y2(s)I 
Ri(s) R,=0 Ri(s) R~=O R2(s) R,=O R2(s) R,=0 
PROBLEMS FOR SECTION 3-2 
3-17. Find the state-flow diagram for the system shown in Fig. 3P-4. 
Problems 139 
3-18. Draw a signal-flow diagram for the system with lhe following state-space representation : 
X= r-s ~6 ~1]x+ ro~s oos]u 
-0.5 1.5 0.5 0.5 0.5 
[0.5 0.5 0 ] 
z == 0.5 0 0.5 X 
3-19. Find the state-space representation of a system with the following transfer function: 
G(s) = Bis+ Bos 
s2 +A1s +Aos 
3-20. Draw signal-flow graphs for the fol lowing sets of algebraic equations. These equations should 
first be arranged in the form of cause-and -effect relations before SFGs can be drawn. Show that there 
are many possible SFGs for each set of equations. 
(a) xi = -x2 -3x3 + 3 
(b) 2xt + 3x2 + X3 = -] 
3.r2 +x~ = 0 
3-21. The block diagram of a control system is shown in Fig. 3P-21. 
(a) Draw an equivalent SFG for the system. 
(b) Find the following transfer functions by applying the gain formula of the SFG directly to the 
block diagram. 
Y(s)I Y(s)I E(s)I E(s)I 
R(s) N=O N(s) RceO R(s) N=O N(s) R"'O 
(c) Compare the answers by applying the gain formula to the equivalent SFG. 
N(s) 
R(s) Y(s) 
+ 
Figure 3P-21 
3-22. Apply the gain formula to the SFGs shown in Fig. 3P-22 to find the following transfer 
. Ys Y4 Y2 Ys functions: -- -
Y1 Yi Yi Y2 
140 • Chapter 3. Block Diagrams and Signal-Flow Graphs 
(a) 
Ys 
(b) 
(d) 
(e) 
Figure 3P-22 
Problems 141 
3-23. Find the transfer functions Y7 /Y, and Yif Y1 of the SFGs shown in Fig. 3P-23. 
Go 
(a) 
-H.1 
(b) 
Figure 3P-23 
3-24. Signal-flow graphs may be used to solve a variety of electric network problems . Shown in Fig. 
3P-24 is the equivalent circuit of an electronic circuit. The voltage source ed(t) represent s a 
disturbance voltage. The objective is to find the value of the constant k so that the output voltage 
+ 
e.,U) 
Figure 3P-24 R, e1 
R1 R2 i2 
+ e1 e3 i, 
+ 
'"'--ke1(t) 
R3 
+ 
R~ R, e11(t) 
142 It> Chapter 3. Block Diagrams and Signal-Flow Graphs 
e0(t) is not affected by ed(t). To solve the problem, it is best to first write a set of cause-and-effect 
equations for the network. This involves a combination of node and loop equations. Then constmct an 
SFG using these equations. Find the gain e0 / ed with all other inputs set to zero. For ed not to affect ea, 
set e0/ed to zero. 
3-25. Show that the two systems shown in Figs 3P-25(a) and (b) are equivalent. 
(a) 
1 G ~.-----11.-----i~~3--~•.----~ 
-H 
(b) 
Figure 3P-25 
3-26. Show that the two systems shown in Figs. 3P~26(a) and (b) are not equivalent. 
G1 1 0 I 0 l 
0 • ~ • • ll 0 
Y, Y1, 
-Hi -ff2 -H~ 
(a) 
~--~--~~---- .. ·--~, 
-H, 
(b) 
Figure 3P-26 
3-27. Find the following transfer functions for the SFG shown in Fig. 3P-27. 
(a) 
Figure 3P-27(a) 
Problems -4 143 
(b) 
Figure 3P-27(b) 
3-28. Find the following transfer functions for the SFG shown in Fig. 3P~28. Comment on why the 
results for parts (c) and (d) are not the same. 
Y11 (a) -
Y1 Ys=O 
(b) Y11 
Ys Yi=O 
(c) Y71 
Y4 fs=O 
(d) Y11 
Y4 Y1=0 
Figure JP-28 
3-29. The coupling between the signals of the turboprop engine shown in Fig. 3P-4{a) is shown in 
Fig. 3P-29. The signals are defined as 
R1 (s) = fuel rate 
Rz ( s) = propeller blade angle 
Y1 (s) = engine speed 
Y2 (s) = turbine inlet temperature 
(a) Draw an equivalent SFG for the system. 
(b) Find the i:l of the system using the SFG gain formula. 
{c) Find the following transfer functions: 
Yi(s)I Yi(s)I Y2(s)I Y2(s)I 
R1 (s) Ri=O Rz(s) Rt=O R1 (s) R2=-0 Rz(s) Rt=O 
(d) Express the transfer functions in matrix fonn, Y(s) = G(s)R(s). 
144 II>-Chapter 3. Block Diagrams and Signal-Flow Graphs 
Figure 3P-29 
3-30. Figure 3P-30 shows the block diagram of a control system with conditional feedback. The 
transfer function G p(s) denotes the controlled process, and Gc(s) and H(s) are the controller transfer 
functions . 
(a) Derive the transfer functions Y(s)/R(s)IN=O and Y(s)/N(s)IR =O· Find Y(s)/R(s)IN = 0 when 
Gc(s) = G1,(s). 
(b) Let 
100 
Gp(s) = Gc(s) = (s+ l)(s+S) 
Find the output response y(t) when N(s) ,-0 and r(t) = us(t). 
(c) With Gp(s) and Gc(s) as given in part (b), select H(s) among the following choices such that 
when n(t) = us(t) and r(t) = 0, the steady-state value of y(t) is equal to zero. (There may be more 
than one answer.) 
10 10 
H(s) = -s(s-+-1) H(s) = -(s_+_l-)(s_+_2_) 
H(,·)=lO(s+l) () K( )SI " H s = s'' n = positive integer e ect n. s+2 
Keep in mind that the poles of the closed-loop transfer function must all be in the left-half 
s-plane for the final-value theorem to be valid. 
N(s) 
R(s) Y(s) 
Gc(s) 
Figure 3P-30 
3-31. Use MATLAB to solve Problem 3-30. 
R(s) 3-32. Consider the following differential equations of a system: 
dx, (t) ----;fr= -2x1 (t) + 3x2(1) 
dxz(t) ----;fr= -5x1 (r) -5x2(t) + 2r(t) 
(a) Find the characteristic equation of the system. 
(b) Find the transfer functions X1 (s)/R(s) and X2(s)/R(s). 
3-33. The differentia l equation of a linear system is 
d3y•(t) d2v(t) dy•(t) --+5- ' -· +6-+ 10 (t) =r(t) dt3 dt2 dt y 
where y(t) is the output, and r(t) is the input. Problems 145 
(a) Write the state equation of the system. Define the state variables from right to left in ascending 
order. 
(b) Find the characteristic equation and its roots. Use MATLAB to find the roots. 
(c) Find the transfer function Y(s)/ R(s). 
(d) Perfonn a partial-fraction expansion of Y(s)/ R(s). 
(e) Find the output y(t) fort 2: 0 when r(t) = us(t). 
(f) Find the final value of y(t) by using the final-value theorem. 
3-34. Consider the differential equation given in Problem 3-33. Use MATLAB to 
(a) Find the partial-fraction expansion of Y(s)/ R(s). 
(b) Find the Laplace transform of the system. 
(c) Find the output y(t) fort;::: 0 when r(t) = u.,(t). 
(d) Plot the step response of the system. 
(e) Verify the final value that you obtained in Problem 3-33 part (f). 
3-35. Repeat Problem 3-33 for the following differential equation: 
d4y(i) 4 d3y(t) 3 d2y(t) 5dy(t) () () ~+ dt3 + ---;fz+ dt+y r =rt 
3-36. Repeat Problem 3-34 for the differential equation given in Problem 3-35. 
3-37. The block diagram of a feedback control system is shown in Fig. 3P-37. 
Figure 3p.37 s + l 
s+2 LO 
s(s + 20) N(s) 
+ 
Y(s) 
closed loop transfer function in Problem 3-41.146 ~ Chapter 3. Block Diagrams and Signal-Flow Graphs 
(a) Derive the following transfer functions: 
Y(s) I Y(s) I E(s)I 
R(s) N=O N(s) R=O R(s) N=O 
(b) The controller with the transfer function G4 (s) is for the reduction of the effect of the noise N(s). 
Find G4(s) so that the output Y(s) is totally independent of N(s). 
(c) Find the characteristic equation and its roots when G4(s) is as determined in part (b). 
(d) Find the steady-state value of e(t) when the input is a unit-step function. Set N(s) = 0. 
(e) Find y(t) fort 2: 0 when the input is a unit-step function. Use G4(s) as determined in part (b). 
3-38. Use MATLAB to solve Problem 3-37. 
ADDITIONAL PROBLEMS 
3-39. Assuming 
P1 = 2s6 + 9s5 + 15s4 + 25s3 + 25s2 + 14s + 6 
P2 = s6 + 8s5 + 23s4 + 36s3 + 38s2 + 28s + 16 
(a) Use MATLAB to find roots of P1 and P2. 
(b) Use MATLAB to calculate P3 = Pi -Pi, P 4 = Pz + P1. and Ps = (Pi -P2),,r.P1. 
3-40. Use MATLAB to calculate the polynomial 
(a) P6 = (s + 1 )(s2 + 2){s + 3)(2s2 + s + 1) 
(b) P1 = (.s-2 + 1 }(s ·I 2)(s I 4){s2 l 2s + 1) 
3-41. Use MATLAB to perform partial-fraction expansion to the following functions: 
(a) 01 (s) = (s + 1 )(s2 + 2)(s + 4)(s + IO) 
s(s + 2)(s2 + 2s + 5)(2s2 + s + 4) 
b G • s3+12s2+47s+60 
( ) 2(s) = 4s6 + 28ss + 83s4 + 13Ss3 + 126s2 + 62s + 12 
3-42. Use MATLAB to calculate unity feedback 
3-43. Use MATLAB to calculate 
(a) G3(s) = G1 (s) + G2(s) 
(b) G4(s) :::::: G1 (s) -Gz(s) 
(c) Gs(s) = G4(s) 
G3(s) 
G4(s) 
(d) G6(s) = G1 (s) * G2(s) 
CHAPTER 4 
Theoretical Foundation and 
Background Material: 
Modeling of Dynamic 
Systems 
One of the most important tasks in the analysis and design of control systems is 
mathematical modeling of the systems. The two most common methods of modeling 
linear systems are the transfer function method and the state-variable method. The transfer 
function is valid only for linear time-invariant systems, whereas the state equations can be 
applied to linear as well as nonlinear systems. 
Although the analysis and design of linear control systems have been well developed, 
their counterparts for nonlinear systems are usually quite complex.. Therefore, the control­
systems engineer often has the task of determining not only how to accurately describe a 
system mathematically but, more importantly, how to make proper assumptions and 
approximations, whenever necessary, so that the system may be realistically characterized 
by a linear mathematical model. 
A control system may be composed of various components including mechani­
cal, thermal, fluid, pneumatic , and electrical; sensors and actuators; and computers . 
In this chapter, we review basic properties of these systems, otherwise known as 
dynamic systems. Using the basic modeling principles such as Newton's second Jaw 
of motion or Kirchoff's law, the models of these dynamic systems are represented by 
differential equations. It is not difficult to understand that the analytical and 
computer simulation of any system is only as good as the model used to describe 
it. It should also be emphasized that the modern control engineer should place 
special emphasis on the mathematical modeling of systems so that analysis and 
design problems can be conveniently solved by computers. In this textbook, we 
consider systems that are modeled by ordinary differential equations . The main 
objectives of this chapter are: 
• To introduce modeling of mechanical systems. 
• To introduce modeling of electrical systems. 
• To introduce modeling thermal and fluid systems. 
• To discuss sensors and actuators. 
• To discuss 1inearization of nonlinear systems. 
• To mscuss analogies. 
147 
148 ~--· Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Furthermore, the main objectives of the following sections are: 
• To demonstrate mathematical modeling of control systems and components. 
• To demonstrate how computer solutions are used to obtain the response of these 
models. 
• To provide examples that improve learning. 
This chapter represents an introduction to the method of modeling. Because numerous 
types of control-system components are available, the coverage here is by no means 
exhaustive. This chapter further is intended to be self-sufficient and will not affect the 
general flow of the text. In Chapters 5 and 9, through various examples and case studies, the 
fundamentals discussed here are utilized to model more complex control systems and to 
establish their behavior. 
: .. -~ 4-1 INTRODUCTION TO MODELING OF MECHANICAL SYSTEMS 
Mechanical systems may be modeled as systems of lumped masses (rigid bodies) or as 
distributed mass (continuous) systems. The latter are modeled by partial differential 
equations, whereas the former are represented by ordinary differential equations. Of course, 
in reality all systems are continuous, but, in most cases, it is easier and therefore preferred to 
approximate them with lumped mass models and ordinary differential equations. 
Definition: Mass is considered a property of an element that stores the kinetic energy of 
translational motion. Mass is analogous to the inductance of electric networks, as shown in 
Section 4-10. If W denotes the weight of a body, then Mis given by 
w M=­g (4-1) 
where g is the acceleration of free fall of the body due to gravity (g = 32.174 ft/sec2 in 
British units, and g = 9.8066 m/sec2 in SI units). 
The equations of a linear mechanical system are written by first constructing a model 
of the system containing interconnected linear elements and then by applying Newton's 
law of motion to the free-body diagram (FBD). For translational motion, the equation of 
motion is Eq. (4-2), and for rotational motion, Eq. (4-33) is used. 
The motion of mechanical elements can be described in various dimensions as 
translational, rotational, or a combination of both. The equations governing the motion 
of mechanical systems are often directly or indirectly formulated from Newton's law of 
motion. 
4-1-1 Translational Motion 
The motion of translation is defined as a motion that takes place along a straight or curved 
path. The variables that are used to describe translational motion are acceleration, 
velocity, and displacement. 
Newton's law of motion states that the algebraic sum of extemal forces acting on a 
rigid body in a given direction is equal to the product of the mass of the body and its 
acceleration in the same direction. The law can be expressed as 
L forces=Ma 
external (4-2) 
4 .. 1 Introduction to Modeling of Mechanical Systems ~ 149 
~y(t) 
.--M----,11--------.~ ft..t) 
Figure 4-1 Force-mass system. 
where M denotes the mass, and a is the acceleration in the direction considered. Fig. 4-1 
illustrates the situation where a force is acting on a body with mass M. The force equation is 
written as 
f(t) = Ma(t) = Md2y2(t) = Mdv(t) 
dt dt (4-3) 
where a(t) is the acceleration~ v(t) denotes linear velocity, and y(t) is the displacement of 
mass M, respectively. 
For linear translational motion, in addition to the mass, the following system elements 
are also involved. 
• Linear spring. In practice, a lineal' spring may be a model of an actual spring or a 
compliance of a cable or a belt. In general, a spring is considered to be an element 
that stores potential energy. 
J(t) = Ky(t) (4-4) 
where K is the spring constant, or simply stiffness. Eq. (4-4) implies that the force 
acting on the spring is directly proportional to the displacement (deformation) of the 
spring. The model representing a linear spring element is shown in Fig. 4-2. If the 
spring is preloaded with a preload tension of T, then Eq. (4-4) should be modified to 
J(t) -T = Ky(t) (4-5) 
• Friction for translation motion. Whenever there is motion or tendency of motion 
between two physical elements, frictional forces exist. The frictional forces 
encountered in physical systems are usually of a nonlinear nature. The character­
istics of the frictional forces between two contacting surfaces often depend on such 
factors as the composition of the surfaces, the pressure between the surfaces, and 
their relative velocity among others, so an exact mathematical description of the 
frictiona] force is difficult. Three different types of friction are commonly used in 
practical systems: viscous friction, static friction, and Coulomb friction. These 
are discussed separately in the following paragraphs. 
• Viscous friction. Viscous friction represents a retarding force that is a linear 
relationship between the applied force and velocity. The schematic diagram 
element for viscous friction is often represented by a dashpot, such as that shown 
in Fig. 4-3. The mathematical expression of viscous friction is 
f(t) = B dy(t) 
dt 
K ~ y(t) 'TI"o'--------+~ f(.t) 
Figure 4-2 Force-spring system. (4-6) 
150 .-Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
I B f-+ y(t) 
11----1]--1-------· J(i) 
Figure 4-3 Dashpot for viscous friction. 
f f 
0 0 
-----FL' 
(a) (b) (C) 
Figure 4 .. 4 Graphical representation of linear and nonlinear frictional forces. (a) Viscous friction. 
(b) Static friction. (c) Coulomb friction. 
where B is the viscous frictional coefficient. Fig. 4-4(a) shows the functional 
relation between the viscous frictional force and velocity. 
• Static friction. Static friction represents a retarding force that tends to prevent 
motion from beginning. The static frictional force can be represented by the expression 
f(t) = ±(Fs)ly=O (4-7) 
which is defined as a frictional force that exists only when the body is stationary 
but has a tendency of moving. The sign of the friction depends on the direction of 
motion or the initial direction of velocity. The force-to-velocity relation of static 
friction is illustrated in Fig. 4-4(b ). Notice that, once motion begins, the static 
frictional force vanishes and other frictions take over. 
• Coulomb friction. Coulomb friction is a retarding force that has constant 
amplitude with respect to the change of velocity, but the sign of the frictional 
force changes with the reversal of the direction of velocity. The mathematical 
relation for the Coulomb friction is given by 
(~) 
f(t) =Few~~)) I (4-8) 
where Fe is the Coulomb friction coefficient. The functional description of the 
friction-to-velocity relation is shown in Fig. 4-4(c). 
It should be pointed out that the three types of frictions cited here are merely practical 
models that have been devised to portray frictional phenomena found in physical systems. 
They are by no means exhaustive or guaranteed to be accurate. In many unusual situations, 
we have to use other frictional models to represent the actual phenomenon accurately. One 
such example is rolling dry friction [3. 4 ], which is used to model friction in high-precision 
4-1 Introduction to Modeling of Mechanical Systems <4 151 
TABLE 4-1 Basic Translational Mechanical System Properties and Their Units 
Parameter Symbol Used SI Units Other Units Conversion Factors 
Mass M kilogram slug 1 kg= 1000g 
(kg) ft/sec2 = 2.2046 lb(mass) 
= 35.274oz(mass) 
= 0.06852 slug 
Distance y meter (m) ft 1 m = 3.2808 ft = 39.37 in 
in 1 in. = 25.4 mm 
1 ft = 0.3048 m 
Velocity V m/sec ft/sec 
in/sec 
Acceleration a m/sec2 ft/sec2 
in/sec2 
Force f Newton pound 1 N = 0.2248 lb(force) 
(N) (lb force) = 3.5969 oz(force) 
dyne 1 N = 1 kg-m/s2 
1 dyn = 1 g-cm/s2 
Spring Constunt K Nim lb/ft 
Viscous Friction Coefficient B N/m/sec lb/ft/sec 
ball bearings used in spacecraft systems. It turns out that rolling dry friction has nonlinear 
hysteresis properties that make it impossible for use in linear system modeling. 
Table 4-1 shows the basic translational mechanical system properties with their 
corresponding basic SI and other measurement units. 
~ EXAMPLE 4-1-1 Consider the mass-spring-friction system shown in Fig. 4-5(a). The linear motion concerned is in the 
horizontal direction. The free-body diagram of the system is shown in Fig. 4-S(b ). The force equation 
of the system is 
f(t) -B dy(t) -Ky(t) = Md2y(t) 
dt dt2 
The last equation may be rearranged by equating the highest-order derivative term to the rest of the 
terms: 
M 
(a) d2y(t) = _ !!_ dy(t) _ K y(t) + ..!_ f(t) 
dt2 M dt M M 
___ .,, y(t) 
---ft.t) Ky(t) : 
B dy(t) •------1 
dt 
Figure 4-5 (a) Mass-spring-friction system. (b) Free-body diagram. ---· y(t} 
M ---· f(.t) 
(b) 
152 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
F(s) 
~-- --l K Figure 4-6 The mass-spring -friction 
system of Eq. (4-t l) block diagram 
representation . 
(dy(t)) (d2y(r)) where j>(t) = dt and y(t) = d? represent velocity and acceleration, respectively . Or, 
alternatively, the former equation may be rewritten into an input-output form as 
y(t) + !y(t) + ~y(t) = ~ f(t) 
where y(t) is the output and ft) is considered the input. (4-11) 
For zero initial conditions , the transfer function between Y(s) and F(s) is obtained by taking the 
Laplace transform on both sides of Eq. (4-11) with zero initial conditions : 
Y(s) J 
F(s)=Ms2+Bs+K (4-12) 
The same result is obtained by applying the gain formula to the block diagram, which is shown 
in Fig. 4-6. 
Eq. (4-10) may also be represented 'in the space state form using a state vector x(t) having n 
rows, where n is the number of srnte variables, so that 
x =Ax+ Bu (4-13) 
where 
and x(t) = [xi(t)] 
x2(t) 
y(t) = X] (!) y(t) = X2 (t) 
u(t) = f(t) 
M 
So using Eqs. (4-13) through (4-16), Eq. (4-10) is rewritten in vectoral form as 
[ z~ J = ( -E -i) [ :~ J + 1t) 
The state Eq. (4-17) may also be written as a set of first-order differenti al equations : 
d.,~?) = x2(t) 
dx2(t} K B I ----;fr= -p;y1 (t) -Mx2(t) + M f(t) 
y(t) = ."CJ (t) (4-14) 
(4-15) 
(4-16) 
(4-17) 
(4-18) 
For zero initial conditions , the transfer function between Y(s) and F(s) is obtained by taking the 
Laplace transform on both sides of Eq. (4-18): 
sX1(s) = X2(s) 
B K l sX2(s) = -MX2(s) -;gX1(s) + MF(s) 
Y(s) = X1 (s) (4-19) 
Y(s) 1 
F(s) = Ms2 + Bs + K 
Toolbox 4-1·1 4-1 Introduction to Modeling of Mechanical Systems 153 
Figure 4-7 Block diagram 
representation of mass-spring­
friction system of Eq. (4-19). 
Figure 4-8 Block diagram 
representation of mass-spring­
friction system ofEq. (4-20) with 
initial conditions x1 (0) and X2(0). 
The same result is obtained by applying the gain formula to the block diagram representation of the 
system in Eg. (4-19), which is shown in Fig. 4-7. 
For nonzero initial conditions, Eq. (4-18) has a different Laplace transform representation that 
may be wrilten as: 
sX1 (s) -x1 (0) = X2(s) 
B K 1 , sX2(s)-x2(0) = --X2(s)--X1(s) +-F(s) M M M (4-20) 
Y(s) = X1 (s) 
Upon simplifying Eg. (4-20) or by applying the gain formula to the block diagram representation of 
the system, shown in Fig. 4-8, the output becomes 
1 Ms M 
Y(s) = Ms2 + Bs + K F(s) + Ms2 + Bs + K xi (O) + Ms2 + Bs + K x2(0) (4-2l) 
Time domain step response for Eq. (4-12) is calculated using MATLAB for K = 1, M = J, B = J: 
K=l; M=l; B=l; 
t=0:0.02:30; 
num= [1]; 
den= [MB K]; 
G = tf(num,den); 
yl = STEP (G, t); 
plot(t, yl); 
xlabel( 'Time (Second)') ;ylabel( 'Step Response') 
title ('Response of the system to step input') 
154 i,-Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
1.2 
m 
~ o.a a. m i! 
fir D.6 
05 
0.4 
0.2 Response ofthe system to step input 
5 10 15 20 25 30 
Time (Second) 
l,:·· EXAMPLE 4-1-2 As another example of writing the dynamic equations of a mechanical system with translational 
motion, consider the system shown in Fig. 4-9(a). Because the spring is defonned when it is subject to 
a force}tt), two displacements. y1 and y2• must be assigned to the end points of the spring. The free­
body diagrams of the system are shown in Fig. 4-9(b). The force equations are 
f(t) = Kfy1 (1) -Y2(t)J (4-22) 
-K[v2{t) -vi(t)) -Bdy2(t) = Md2y2(t) 
. · dt dt2 
These equations are rearranged in input-output form as 
Bdyz(l) 
dt M d2y2(t) + B dy2(t) + K vz(t) = K Yl (t) 
dt2 M dt M· M 
M '-----11>.fi.t) 
K 
(a) 
~yz{t} 
------ •411----"ll'l'i--...... ./tt) 
KI)•z(t)-Y1(t)J K 
(b) Figure 4-9 Mechanical 
system for Example 4-1-2. 
(a) Mass-spring-damper 
system. (b) Free-body 
diagram. 
fl.1) I 
K 
Yi K 
M 4-1 Introduction to Modeling of Mechanical Systems 155 
(a) 
(b) -I s 
-KIM -I 
\' 
Figure 4-10 Mass-spring-friction system of Eq. (4-25) using Eq. (4-22). (a) The signal-flow graph 
representation. (b) Block diagram representation. 
For zero initial conditions, the transfer function between Y1(s) and Y2(s) is obtained by taking the 
Laplace transform on both sides of Eq. (4-24): 
Y2(s) K 
Y1(s) = Ms2 +Bs+K (4-25) 
The same result is obtained by applying the gain formula to the block diagram representation of the 
system, which is shown in Fig. 4-10. Note that in Fig. 4-10, Eq. (4-22) was also used. 
For state representation , these equations may be rearranged as 
(4-26) 
For zero initial conditions, tbe transfer function of Eq. (4-26) is the same as Eq. (4-25). By using the 
last two equations, the state variables are defined as xi (t) = y2(t) and x2(1) = dyi(t)/dt. The state 
equations are therefore written as 
(4-27) 
The same result is obtained after taking the Laplace transform of Eq. ( 4-27) and applying the gain 
formula to the block diagram representation of the system, which is shown in Fig. 4-11. Note that in 
Fig. 4-11, F(s), Yt(S), X1(s), Y2(s), and Xi(s) are Laplace transforms of j{t), y1(t), x1(t), y2(t), and 
x2(t), respectively. 
156 ta,, Chapter 4. Theoretical Foundation and Background Material: Modeling ot Dynamic Systems 
Figure 4-11 Block diagram representation 
of mass-spring-friction system of Eq. ( 4-27). 
EXAMPLE 4-1-3 Consider the two degrees of freedom (2-DOF) spring-mass system, with two masses m1 and m2, two 
springs k1 and k2, and two forces f1 and h, as shown in Fig. 4-l2. Find the equations of motion. 
SOLUTION To avoid any confusion, we first draw the free-body diagram (FBD) of the system by 
assuming the masses are displaced in the positive direction, so that YI > Y2 > 0 (i.e., springs are both 
in tension). The FBD of the system is shown in Fig. 4-13. Applying Newton's second law to the 
masses MI and M2, we have 
/1 (t) -K1y1 + K2(Y1 -Y2) = M1.YJ 
.fz(t) -K2(Y1 -y2) = M2Y2 
Rearranging the equations into the standard input-output form, we have 
M1Y1 + (Ki + K2)Y1 -K2y2 = !1 (t) 
M2Y1 -K2Y1 + K2Y2 = fi(t) 
Alternatively, Eq. (4-29) may be represented in the standard second-order matrix. form, as 
[~1 :z][t~J + [K~::2 ~:2 ][;~] = [j~] (4-28) 
(4-29) 
(4-30) 
In state space form, assuming the following state vector x(t), the inputs u1(t) and u2(1), and the output 
y(t), we get 
[Xi (t) l [YI (t) l x2(t) Y2(t) · x(t) = x3 (t) = YI (t) , iq = ft (t), u2 = Ji(t) .. y(t) ""'x1 (t) 
X4(t) .b (t) ( 4-3 l) 
Figure 4-12 A 2-DOF spring-mass system. 
Figure 4-13 FBD of the 2-DOF spring-mass system. 
4~1 Introduction to Modeling of Mechanical Systems -· 157 
Then, using X3 = y1 and x.4 = y2, we get the state-space representation as [:: l [ ~ ~ ~ ~ l [:: l [ ~ l [ ~ l , :::: , + UJ + llz 
~3 -K1/M1 Ki/M1 0 0 x3 I/M1 0 
X4 Kz/M1 -K2/M1 0 0 X4 0 1/Mz (state equation) 
y = [ I O O 0] [~: l + 0 · u1 + 0 · u2 
X4 ( output equation) 
where the state equation is a set of four firstworder differential equations. 
4-1-2 Rotational Motion 
The rotational motion of a body can be defined as motion about a fixed axis. The extension 
of Newton's law of motion for rotational motion states that the algebraic sum of moments 
or torque about a fixed axis is equal to the product of the inertia and the angular 
acceleration about the axis. Or 
Ltorques = Ja (4-33) 
where J denotes the inertia and a is the angular acceleration. The other variables generally 
used to describe the motion of rotation are torque T, angular velocity w, and angular 
displacement e. The elements involved with the rotational motion are as follows: 
• Inertia. Inertia. J, is considere,l a property of an element that stores the kinetic 
energy of rotational motion. The inertia of a given dement depends on the 
geometric composition about the axis of rotation and its density. For instance, 
the inertia of a circular disk or shaft, of radius rand mass M. about its geometric 
axis is given by 
T(J) 1 J = -M,2 2 (4-34) 
When a torque is applied to a body with inertia J, as shown in Fig. 4-14, the torque 
equation is written 
T(t) = Ja(t) = 1dw(t) = 1 d29(t) 
dt dt2 (4-35) 
where e(t) is the angular displacement; w(t), the angular velocity; and a(t), the 
angular acceleration. 
q=filJB(t) 
Figure 4-14 Torque-inertia system. 
158 • Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
,._ EXAMPLE 4-1-4 B(t) Figure 4-15 Torque torsional spring system. 
• Torsional spring. As with the linear spring for trans1ational motion, a torsional 
spring constant K, in torque-per-unit angular displacement, can be devised to represent 
the compliance of a rod or a shaft when it is subject to an applied torque. Fig. 4-15 
illustrates a simple torque-spring system that can be represented by the equation 
T(t) = KB(t) (4-36) 
If the torsional spring is preloaded by a preload torque of TP, Eq. (4-36) is modified to 
T(t) -TP = KO(t) (4-37) 
• Friction for rotational motion. The three types of friction described for transla­
tional motion can be carried over to the motion of rotation. Therefore, Eqs. (4-6), 
(4-7), and (4-8) can be replaced, respectively, by their counterparts: 
• Viscous friction. 
• Static friction. 
• Coulomb friction. T(t) = B d8(t) 
dt 
T(t) = ±(Fs)le=O 
d(}(t) 
T(t) = Fe 1d!{1)1 (4-38) 
(4-39) 
(4-40) 
Table 4-2 shows the SI and other measurement units for inertia and the variables in 
rotational mechanical systems. 
The rotational system shown in Fig. 4-16(a) consists of a disk mounted on a shaft that is fixed at one 
end. The moment of inertia of the disk about the axis of rotation is J. The edge of the disk is riding on 
the surface, and the viscous friction coefficient between the two surf aces is B. The inertia or the shaft 
is negligible. but the torsional spring constant is K. 
Assume that a torque is applied to the disk. as shown; then the torque or moment equation about 
the axis of the shaft is written from the free-body diagram of Fig. 4-16(b): 
T() = 1d28(t) Bd8(t) KB() 
t /2 + d + t 't t (4-41) 
Notice that this system is analogous to the translational system in Fig. 4-5. The state equations may be 
written by defining the state variables as .tt (t) :::= O(t) and x2(t) = dx1 (t)/dt. 
4-1 Introduction to Modeling of Mechanical Systems ~ 159 
K 
(a) 
Figure 4-16 Rotational system for Example 4-1-4. ~\\\\\\\\\\\\\\\\\\\\\\\\\ 
C) 
(b) \ Bd(J J dt 
TABLE 4-2 Basic Rotational Mechanical System Properties and Their Units 
Symbol SI Other 
Parameter Used Units Units Conversion Factors 
Inertia J kg-m2 slug-ft2 lg-cm= 
lb-ft-sec2 1.417 x 10-5 oz-in.-sec2 
• 2 oz-m.-sec l lb-ft-sec2 
= 192 oz-in.-sec2 
= 32.2lb-ft 2 
1 oz-in.-sec2 = 386 oz-in2 
1 g-cm-sec2 = 980 g-cm2 
Angular Displacement T Radian Radian 180 I rad= - = 57.3deg 
JC 
Angular Velocity 0 radian/sec radian/sec 2tr lrpm=-60 
= 0.1047rad/sec 
l rpm = 6 deg/ sec 
Angular Acceleration A radian/sec2 radian/sec2 
Torque T (N-m) lb-ft 1 g-cm = 0.0139 oz-in. 
dyne-cm oz-in. 1 lb-ft = 192 oz-in. 
1 oz-in. = 0.00521 lb-ft 
Spring Constant K N-m/rad ft-lb/md 
Viscous Friction Coefficient B N-m/rad/sec ft-lb/rad/sec 
Energy Q J (joules) Btu lJ = IN-m 
Calorie I Btu= 1055J 
1 cal= 4.184J 
. EXAMPLE 4-1-5 Fig. 4-17(a) shows the diagram of a motor coupled to an inertial load through a shaft with a spring 
constant K. A non~rigid coupling between two mechanical components in a control system often 
causes torsional resonances that can be transmitted to all parts of the system. The system variables 
and parameters are defined as follows: 
Tm(t) = motor torque 
Bm = motor viscous-friction coefficient 
K = spring constant of the shaft 
Om(t) = motor displacement 
w,,,(t) = motor velocity 
160 · Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
(a) 
(b) Figure M7 (a) Motor-load 
system. (b) Free-body diagram. 
J111 = motor inertia 
(h(t) = load displacement 
wL( t) = load velocity 
h = load inertia 
The free-body diagrams of the system are shown in Fig. 4-17(b). The torque equations of the 
system are 
d28m(t) __ Bm dOm(t) !_ [n ( ) _ e ( )] 1 T, ( ) --2------ umt Lt+-111! dt lm dt Jm J,,, (4-42) 
d20L(t) K(8,n(t) -8i(t)] = h ~ (4-43) 
In this case, the system contains three energy-storage elements in lm, h, and K. Thus, there should be three 
state variables. Care should be taken in constructing the state diagram and assigning the state variables so 
that a minimum number of the latter are incorporated. Eqs. (4-42) and (4-43) nre rearranged as 
d28,n(t) _ 8111 dOm(t) K IO ( ) () ( )J I T, ( ) --2-------- ,n! -Lt+- mt dt lm dt J,n Jm (4-44) 
d28L(t) K ~ = h (em(t} -8L(t)J (4-45) 
The state variables in this case are defined as x1 (t) = 8m(t) -th.(t), x2(t) = dOL(t)/dt, and 
x3(t) = d(Jm(t){ dt. The state equations are 
dti(t) dt = x3(t) -x2(t) 
dx2(t) = K Xt (t) 
dt h 
dt3(t) K Bm 1 -· -= --xi(t) --x3(t) +-T,n(t) dt J111 Jm lm 
The SFG representation is shown in Fig. 4-18. 
Figure 4-18 Rotational system of Eq. (4-46) signal-flow graph representation. (4~46) 
4-1 Introduction to Modeling of Mechanical Systems 161 
4-1-3 Conversion between Translational and Rotational Motions 
In motion-contr ol systems, it is often necessary to convert rotational motion into translational 
motion. For instance, a load may be controlled to move along a straight line through a rotary 
motor-and- lead screw assembly, such as that shown in Fig. 4-19. Fig. 4-20 shows a similar 
situation in which a rack-and-pinion assembly is used as a mechanical linkage. Another familiar 
system in motion control is the control of a mass through a pulley by a rotary motor, as shown in 
Fig. 4-21. The systems shown in Figs. 4-19, 4-20, and 4-21 can all be represented by a simple 
system with an equivalent inertia connected directly to the drive motor. For instance, the mass in 
Fig. 4-21 can be regarded as a point mass that moves about the pulley, which has a radius r. By 
disregarding the inertia of the pulley, the equivalent inertia that the motor sees is 
w f = Mr2 =-r2 
g (4-47) 
If the radius of the pinion in Fig. 4-20 is r, the equivalent inertia that the motor sees is also 
given by Eq. (4-47). 
Now consider the system of Fig. 4-19. The lead of the screw, L, is defined as the linear 
distance that the mass travels per revolution of the screw. In principle , the two systems in 
Fig. 4-20 and Fig. 4-21 are equivalent. In Fig. 4-20, the distance traveled by the mass per 
revolution of the pinion is 2nr. By using Eq. (4-47) as the equivalent inertia for the system 
of Fig. 4-19, we have 
Motor 
Drive 
motor J = W (~)2 
g Zn: (4-48) 
T(t), O(t) ~ x(t) 
fl'1Y1~Prwl 
Lead screw 
~X(I) 
Belt 
T(I) Figure 4-19 Rotary-to-linear motion control 
system (lead screw). 
Figure 4-20 Rotary-to-Linear motion control 
system (rack and pinion). 
Pulley 
Figure 4-21 Rotary-to-linear motion 
control system (belt and pulley). 
162 Iii!,,, Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
4-1-4 Gear Trains MN, 
N,H Figure 4-22 Gear train. 
A gear train. lever, or timing belt over a pulley is a mechanical device that transmits 
energy from one part of the system to another in such a way that force, torque, speed, 
and displacement may be altered. These devices can also be regarded as matching 
devices used to attain maximum power transfer. Two gears are shown coupled together 
in Fig. 4~22. The inertia and friction of the gears are neglected in the ideal case 
considered. 
The relationships between the torques T1 and T2, angular displacement 81 and 02, and 
the teeth numbers N1 and N2 of the gear train are derived from the following facts: 
1. The number of teeth on the surface of the gears is proportional to the radii r 1 and r2 
of the gears; that is, 
(4-49) 
2. The distance traveled along the surface of each gear is the same. Thus, 
(4-50) 
3. The work done by one gear is equal to that of the other since there are assumed to 
be no losses. Thus, 
(4-51) 
If the angular velocities of the two gears w1 and w2 are brought into the picture, Eqs. ( 4-49) 
through (4-51) lead to 
(4-52) 
In practice. gears do have inertia and friction between the coupled gear teeth that often 
cannot be neglected. An equivalent representation of a gear train with viscous friction, 
Coulomb friction, and inertia considered as Jumped parameters is shown in Fig. 4-23, 
where T denotes the applied torque, T1 and T2 are the transmitted torque, Fc1 and Fc2 are the 
Coulomb friction coefficients, and B 1 and B2 are the viscous friction coefficients. The 
torque equation for gear 2 is 
(4-53) 
4-1 introduction to Modeling of Mechanical Systems . 163 
Figure 4-23 Gear train with friction and inertia. 
The torque equation on the side of gear 1 is 
d2fJ1 (t) d()t (t) WI 
T(t) = J1 ~+Bi ~+Fc1 !evil+ Ti(t) (4-54) 
Using Eq. (4-52), Eq. (4-53) is converted to 
T ()=Ni T, ( ) = (N1)2 
J d2
81 (t) (Nt)2 B d91 (t) Ni F. cvi 1 t N2 2 t N2 2 dt2 + N2 2 dt + N2 '2 \a>i\ (4-55) 
Eq. (4-55) indicates that it is possible to reflect inertia, friction, compliance, torque~ speed, 
and displacement from one side of a gear train to the other. The following quantities are 
obtained when reflecting from gear 2 to gear 1: 
Inertia: (Z:Y Ji 
Viscous-friction coefficient: (Z:) 2 
R2 
Ni Torque: Ni T2 
Angular displacement: Ni e2 Nz 
Angular velocity: z: w2 
Coulomb friction torque: z: Fc2 J:I (4-56) 
Similarly, gear parameters and variables can be reflected frorn gear 1 to gear 2 by simply 
interchanging the subscripts in the preceding expressions. If a torsional spring effect is 
present~ the spring constant is also multiplied by (Ni /N2)2 in reflecting from gear 2 to gear 
1. Now substituting Eq. (4-55) iutu E4. (4-54), we get 
(4-57) 
where 
(4-58) 
164, Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
(4-59) 
(4-60) 
EXAMPLE 4-1-6 Given a load that bas inertia of 0.05 oz-in.-sec2 and a Coulomb friction torque of 2 oz-in., find the 
inertia and frictional rorque reflected through a I :5 gear train (N1 / N2 = l /5, with N2 on the load 
side). The reflected inertia on the side of N1 is (l /5)2 x0.05 = 0.002 oz-in.-sec2. The reflected 
Coulomb friction is ( I /5) x 2 = 0.4 oz-in. 
4-1-5 Backlash and Dead Zone (Nonlinear Characteristics) 
Backlash and dead zone are commonly found in gear trains and similar mechanical 
linkages where the coupling is not perfect. In a majority of situations, backlash may give 
rise to undesirable inaccuracy, oscillations , and instability in control systems. In 
addition, it has a tendency to wear out the mechanical elements. Regardless of the 
actual mechanical elements , a physical model of backlash or dead zone between an input 
and an output member is shown in Fig. 4-24. The model can be used for a rotational 
system as well as for a translational system. The amount of backlash is b/2 on either side 
of the reference position. 
In general, the dynamics of the mechanical linkage with backlash depend on the 
relative inertia-to-friction ratio of the output member. If the inertia of the output member is 
very small compared with that of the input member, the motion is controlled predominantly 
by friction. This means that the output member will not coast whenever there is no contact 
between the two members. When the output is driven by the input, the two members will 
travel togetber until the input member reverses its direction ; then the output member will be 
at a standstill until the backlash is taken up on the other side, at which time it is assumed 
that the output member instantaneously takes on the velocity of the input member. The 
transfer characteristic between the input and output displacements of a system with 
backlash with negligible output inertia is shown in Fig. 4-25. 
[----. x(I) ~-------, 
Input [----..v<r) 
-. .Q. .- .Q. .-
L2::....:::=='-'2::...J 
Output 
Figure 4-24 Physical model of backlash 
between two mechanical elements. y(1) 
Figure 4-25 Input-output characteristic of 
backlash. 
R ~ 
i(t) 
(a) (b) 4-2 Introduction to Modeling of Simple Electrical Systems <: 165 
1 ~r(,) 
(c) Figure 4-26 Basic passive electrical 
elements. (a) A resistor. (b) An inductor. 
(c) A capacitor. 
. · 4-2 INTRODUCTION TO MODELING OF SIMPLE ELECTRICAL SYSTEMS 
First we address modeling of electrical networks with simple passive elements such as 
resistors, inductors, and capacitors. Later, in the next section, we address operational 
amplifiers, which are active electrical elements. 
4-2~1 Modeling of Passive Electrical Elements 
Consider Fig. 4-26, which shows the basic passive electrical elements; resiscors, inductors, 
and capacitors. 
Resistors: Ohm's law states that the voltage drop, eR(t), across a resistor R is proportional 
to the current i(t) going through the resistor. Or 
eR(t) = i(t)R (4-61) 
Inductors: The voltage drop, eL(t), across an inductor Lis proportional to the time rate 
of change of current i(t) going through the inductor. Thus, 
eL(t) = L di(t) 
dt (4-62) 
Capacitor: The voltage drop, ec(t), across a capacitor C is proportional to the integral 
current i{t) going through the capacitor with respect to time. Therefore. 
(4-63) 
4-2-2 Modeling of Electrical Networks 
The classical way of writing equations of electric networks is based on the loop method or 
the node method, both of which are formulated from the two laws of Kirchhoff, which state: 
Current Law or Loop Method: The algebraic summation of all currents entering a 
node is zero. 
Voltage Law or Node Method: The algebraic sum of all voltage drops around a 
complete closed loop is zero. 
··· EXAMPLE 4-2-1 Let us consider the RLC network shown in Fig. 4~27. Using the voltage law 
e(t) = eR + e1, + ec 
166 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
R L 
+ i(t) 
+ 
e(t) C T,,c,1 
0 
(a) 
i(O) e,.(O) 
s s 
I I 
L -I C -I .1· .I" 
e(t) e'" e,. 
I -r 
(b) 
(c) 
Figure 4-27 RLC network. (a) Electrical schematics . (b) Signal-flow graph representation . 
(c) Block diagram representation . 
where 
Or eR = Voltage across the resistor R 
eL = Voltage across the inductor L 
ec = Voltage across the capacitor C 
di(t) e(t) = +ec(t) + Ri(t) + Ldt 
Using current in C: 
cdec(t) = i(t) 
dt (4-65) 
(4-66) 
and ta.king a derivative ofEq. (4-54) with respect to time, we get the equation of lhe RLC network as 
cl2i(t) di(t) i(t) de(t) L--+R-+-=--dt2 dt C dt (4-67) 
Toolbox 4-2-1 4-2 Introduction to Modeling of Simple Electrical Systems ~ 167 
A practical approach is to assign the current in the inductor L. i(t). and the voltage across the 
capacitor C. ec(t). as the state variables. The reason for this choice is because the state variables are directly 
related to the energy-storage element of a system. The inductor stores kinetic energy, anrl the capacitor 
stores electric potential energy. By assigning i(t) and ec(t) as state variables, we have a complete 
description of the past history (via the ir•Jtial states) and the present and future states of the network. 
The state equations for the network in Fig. 4-27 are written by first equating the cu1Tent in C and 
the voltage across Lin terms of the state variables and the applied voltage e(t). In vector-matrix form, 
the equations of the system are expressed as 
(4-68) 
This format is also known as the state form if we set 
[xi (t) l = [ec(t) l 
x2(t) i(t) (4-69) 
Or 
[·~l] = [ O b l [XJ l + [~] e(t) x2 I R x2 ----- L L L (4-70) 
The transfer functions of the system are obtained by applying the gain formula to the SFG or block 
diagram of the system in Fig. 4-27 when all the initial states are set to zero. 
Ec(s) (I/LC)s-2 _ I 
E(s) =I+ (R/L)rl + (l/LC)s-2 -1 +RCs+ LC:;2 
l(s) (l/L)s-1 _ Cs 
E(s) :: 1 + (R/L)s-l + (l/LC)s-2 -1 + RCs + LCs2 (4-71} 
(4-72) 
~ 
Time domain step responses/or Eqs. (4-71) and (4-72) are shown using MATLAB for R = 1, L = 1, C = 1: 
R=l; L=1; C=l; 
t=0:0.02:30; 
numl = [1]; 
denl =-[L*C R*C 1]; 
num2 == [C OJ; 
den2 .:= [L*C R*C 1]; 
Gl = tf(numl, denl); 
G2 = tf(nurn2, den2) ; 
yl = step (Gl,t); 
y2 = step (G2,t); 
plot(t,yl, 'r·); 
hold on 
plot (t I y2 f ' g I ) ; 
xlabel( 'Time') 
ylabel( 'Gain') 
168 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
70 
60 
50 
.40 
C' "ii 30 \ C) 
·, 
\ \ 
\ 
\ 
0 \ \, _ _,/ / 
-10 
0 5 10 15 20 25 30 
Time 
EXAMPLE 4-2-2 As another example of writing the stale equations of an electric network, consider the network 
shown in Fig. 4-28(a). According to the foregoing discussion, the voltage across the capacitor , 
ec(L), and the currents of the inductors , i 1(t) and i2(t), are assigned as state variables, as shown in 
Fig. 4-28(a). The state equations of the network are obtained by writing the voltages across the 
/"2 
e(t) C 
(a) 
-1/C 
.l I I 
L1 -I c L:. s 
e(t) 
-R/L2 
-11L1 
(b) 
Figure 4-28 Network of Example 4-2-2. (a) Electrical schematic. (b) SFG representation. 
4-2 Introduction to Modeling of Simple Electrical Systems ,q 169 
inductors and the currents in the capacitor in terms of the three state variables. The state 
equations are 
di1 (1) . Li~= -R1i1(t) -e<.(tJ + e(t) 
di2 (t) . L2 ~ = -R212(t) + ec(t) 
C dee ( t) . ( ) . ( ) ~=11 t -i2 t 
In vector-matrix form, the state equations are written as 
where R1 O I 
Li Li 
0 
1 
C R2 1 
L2 
0 .t1 L1 
[ 1 l [:} ~ e(t) 
[:~J = r:~g~J 
X3 ec(t) (4-73) 
(4-74) 
(4-75) 
(4-76) 
(4-77) 
The signal-flow diagram of the network, without the initial states, is shown in Fig. 4-28(b). The 
transfer functions between /1(s) and E(s), /2(s) and E(s), and Ec(S) and E(s), respectively, are written 
from the state diagram 
where 
Toolbox 4-2-2 /1 (s) L2Cs2 + R2Cs + 1 
E(s) = 8 
[z(s) 1 
E(s) = ~ 
Ec(s) Lis+ R2 
E(s) = 6. 
Time donwin step response for the gain formula explained by step responses of Eqs. 4-78-4-80 are shown 
using MATLAB as illustrated below (for RI = 1. R2 = 1, Ll = 1, L2 = 1, C ~ 1 ): 
Rl=l; R2=1; L1=1; L2=1; C=l; 
t=0:0.02:30; 
num1 = [L2*C R2*C 11; 
num2 = [1]; 
num3 = [L2 R2]; 
den= [Ll*L2*C Rl*L2*C+R2*Ll*C Ll+L2+Rl*R2*C Rl+R2]; 
Gl = tf(nurnl, den) ; 
G2 = tf(num2,den); 
G3 = tf (nurn3, den) ; 
yl = step (Gl,t); 
y2 = step (G2, t) ; 
y3 = step (G3, t) ; (4-78) 
(4-79) 
(4-80) 
170 · Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
plot(t,yl, 'r'); 0.7 
hold on 
plot(t,y2, 'g'); 
hold on 0.6 
plot(t,y3, 'b'); 
xlabel ( 'Time' ) 
ylabel ( 'Gain' ) 0.5 
I 
0.4 I C: ·;;; 
<!) 
l 0.3 
0.2 I 0.1 
0 ,· 
10 15 D 5 20 25 30 
Time 
. EXAMPLE 4-2-3 Consider tl1c RC circuit shown in Fig. 4-29. Find the differential equation of the system. Using the 
voltage law 
where 
and the voltage across the capacitor r'"(t) is 
l J. ec(t) = C 1dt 
But from Fig. 4-29 
l J. e0(t) = C cdt = ec(t) 
+ R -
+ 
e111U) :) :CI ~--~~1-C 
Figure 4-29 Simple electrical RC circuit. (4-82) 
(4-83) 
(4-84) 
(4-85) 
4-2 Introduction to Modeling of Simple Electrical Systems 171 
If we differentiate Eq. (4-85) with respect to time, we get 
_ = de,,(t) 
C dt 
or 
This implies that Eq. (4-85) can be written ill an input-output form 
e,-,,(t) = RCe,,(t) + e0(t) 
1n Laplace domain, we get the system transfer function as 
Eo(s) 
E;is) RCs+l (4-86) 
(4-87) 
(4-88) 
(4-89) 
where the r = RC is also known as the time constant of the system. The significance of this term is 
discussed earlier in Chapter 2, and the initial conditions are assumed to be e;,,(t = 0) = 
ev(t = 0) = 0. 
EXAMPLE 4-2-4 Consider the RC circuit shown in Fig. 4-30. Find the differential equation of the system. 
C 
As before, we have 
or 
But v0(1) = iR. So + 
ec,Ct) 
Figure 4-30 Simple electrical RC circuit. 
e;11(1) = ec(t) + CR(t) 
e;n(t) = ~ J idt + iR 
.{ e0(1)dt e;,.(t) = RC + e0(t) (4-90) 
(4-91) 
(4-92) 
is the differential equation of the system. To solve Eq. (4-92), we differemiate once with respect to 
time: 
. e0 (t) . ( e;,,(t) = RC + eo t) (4-93) 
In Laplace domain, we get the system transfer function as 
Eo(s) RCs 
E;n(s) = RCs + 1 (4-94) 
where, again, r = RC is the time constant of the system. 
EXAMPLE 4-2-5 Consider the voltage divider of Fig. 4-31. Given an input voltage e0 (t), find the output voltage e 1(1) in 
the circuit composed of Lwo resistors R1 and R1. 
172 • Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
R1 ~:, .~ Figure 4-31 A voltage divider. 
The currents in the resistors are 
. eo(t) -e1 (t) z1=---­
R1 
• e1 (t) z2=--
R2 
The node equation at the e1(t) node is 
ii -i2 = 0 
Substituting Eqs. (4-95) and (4-96) into the previous node equation: 
eo(t) --ei (t) _ ei (t) = 0 
R1 R2 
Rearrangement of this equation yields the following equation for the voltage divider: 
In Laplace domain, we get R2 e1 (t) = -R R eo(t) 
1 + 2 
Rz E1 (s) = -R R Eo(s) 
1 + 2 (4-95) 
(4-96) 
(4-97) 
(4-98) 
(4-100) 
The SI and most other measurement units for variables in electrical systems are the same, as shown in 
Table 4-3. 
TABLE 4-3 Basic Electrical System Properties and Their Units 
Parameter Notation Units 
Charge Q coulomb = newton-meter/volt 
Current ampere (A) 
Voltage e volt (V) 
Energy H joule= volt x coulomb 
Power p joule/sec 
Resistance R ohm (0) = volt/amp 
Capacitance C farad (F) 
= coulomb/volt = amp sec/volt 
= second/ohm 
Inductance L henry (H) 
= volt sec/amp = ohm sec 
t> 4-3 MODELING OF ACTIVE ELECTRICAL ELEMENTS: OPERATIONAL AMPLIFIERS 
Operational amplifiers, or simply op~amps, offer a convenient way to buildt implement, or 
realize continuous-data or s-domain transfer functions. In control systems, op-amps are 
often used to implement the controllers or compensators that evolve from the control­
system design process, so in this section we illustrate common op-amp configurations. An 
4-3 Modeling of Active Electrical Elements: Operationa l Amplifiers 173 
+ 
+ -----<+ + 
Figure 4-32 Schematic diagram of an op-amp. 
in-depth presentation of op-amps is beyond the scope of this text. For those interested, 
many texts are available that are devoted to all aspects of op-amp circuit design and 
applications [8, 9]. 
Our primary goal here is to show how to implement first-order transfer functions with 
op-amps while keeping in mind that higher-order transfer functions are also important . In 
fact, simple high-order transfer functions can be implemented by connecting first-order op­
amp configurations together. Only a represent ative sample of the multitude of op-amp 
configurations will be discussed. Some of the practical issues associate<.! with op-amps are 
demonstrated in Chapters 5 and 9. 
4-3-1 The Ideal Op-Amp 
When good engineering practice is used, an op-amp circuit can be accurately analyzed by 
considering the op-amp to be ideal. The ideal op-amp circuit is shown in Fig. 4-32, and it 
has the following properties: 
1. The voltage between the + and -terminals is zero, that is, e+ = e-. This property 
is commonly called the virtual ground or virtual short. 
2. The currents into the+ and -input terminals are zero. Thus, the input impedance 
is infinite. 
3. The impedance seen looking into the output terminal is zero. Thus, the output is an 
ideal voltage source. 
4. The input-output relationship is e0 = A(e+ -e-), where the gain A approaches 
infinity. 
The input-output relationship for many op-amp configurations can be determined by 
using these principles. An op-amp cannot be used as shown in Fig. 4-32. Rather, 
linear operation requires the addition of feedback of the output signal to the -input 
terminal. 
4-3-2 Sums and Differences 
As illustrated in Chapter 3, one of the most fundamental elements in a block diagram or an 
SFG is the addition or subtraction of signals. When these signals are voltages, op-amps 
provide a simple way to add or subtract signals, as shown in Fig. 4-33, where all the 
resistors have che same value. Using superposition and the ideal properties given in the 
preceding section, the input-output relabonship in Fig. 4-33(a) is v0 = -( v0 -vb). Thus, 
the output is the negative sum of the input voltages. When a positive sum is desired, the 
circuit shown in Fig. 4-33(b) can be used. Here the output is given by e0 =ea+ eb· 
Modifying Fig. 4-33(b) slightly gives the differencing circuit shown in Fig. 4-33(c), which 
has an input-output relationship of e0 = e1, -e0. 
174 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
R R 
+ 
(a) 
R R 
+ 
e" 
(b) 
R R 
e,, 
+ 
e0 = eb -e0 
(c) 
Figure 4-33 Op-amps used to add and subtract signals. 
4-3-3 First-Order Op-Amp Configurations 
In addition to adding and subtracting signals, op-amps can be used to implement 
transfer functions of continuous-data systems. While many alternatives are available, 
we will explore only those that use the inverting op-amp configuration shown in Fig. 
4-34. ln the figure, Z1 (s) and Z2(s) are impedances commonly composed of resistors 
and capacitors. Inductors are not commonly used because they tend to be bulkier and 
more expensive. Using ideal op-amp properties , the input-output relationship, or 
+ 
E,{s) 4-3 Modeling of Active Electrical Elements: Operational Amplifiers 175 
+ 
E,,(s) 
Figure 4-34 Inverting op-amp configuration . 
transfer function, of the circuit shown in Fig. 4-34 can be written in a number of ways, 
such as 
(4-101) 
where Y1 (s) = I /21 (s) and Y2(s) = l /Z2(s) are the admittances associated with the circuit 
impedm1ces . The different transfer function forms given in Eq. (4-l O 1) apply conveniently 
to the different compositions of the circuit impedances. 
Using the invetting op-amp configuration shown in Fig. 4-34 and using resistors and 
capacitors as elements to compose Z1(s) and ,0.(s), it is possible to implement poles and 
zeros along the negative real axis as well as at the origin in the s-plane, as shown in Table 
4-4. Because the inverting op-amp configuration has been used, all the transfer functions 
have negative gains . The negative gain is usually not an issue because it is simple to add a 
gain of -1 to the input and output signal to make the net gain positive. 
TABLE 4-4 Inverting Op-Amp Transfer Functions 
Input Feedback Transfer 
Element Element Function Comments 
(a) /? I R2 R2 Inverting gain. e.g., if R1 = 
____1\/\/\,- ____1\/\/\,- n, R2, eo = -c1 
Z1 =R1 Z2 = R2 
(b) u, C:, ( -1 ) l Pole at the origin, i.e., an 
.J\/V\r-~~ R1C'2 ;- integrator 
21 = R1 
Y2 = sC2 
(c) c, 1?2 (-R2C1)s Zero at the origin, i.e., a 
~~ ____1\/\/\,- differentiator 
Z'" =R2 
Y1 =sC1 
(d) R, R~ -1 
____1\/\/\,-~ R1C2 Pole at ----Z with a de gain R2 -:2 
Z1=R1 1 of -R-,/ R.1 s+--R'.!C2 
Y2= J +sC2 
'2 
(Continued) 
176 ,, Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
TABLE 4-4 (Continued) 
Input Feedback 
Element Element 
(e) R1 R., C, 
-1\/V'v-~ t-= Z1=R1 Z-,=R.,+ _l_ 
~ ~ .\·C:z 
(f) R1 R2 
~ -1\/V'v-
Z2=R2 
Y1 = J +sC1 
I 
(g) R1 R2 
~ ~ 
Yi =f +sC1 
I Yz= J
2 +sC2 Transfer 
Function 
--&+---Ci ( 1 ) 
C2 R1C1 
1 
s+R C ·2 2 Comments 
Pole at the origin and a zero at 
-1/ R2C2, i.e., a Pl controller 
-1 
Zero at 8 = RiCt. i.e., a PD 
controller 
-1 
Poles at s = R C and a zero 
·2 2 
-1 
at s = R C , i.e., a lead or lag 
·l 1 
controller 
EXAMPLE 4-3-1 As an example of op-amp realization of transfer functions, consider the transfer function 
K1 G(s) = Kp +-+ Kvs (4~102) s 
where Kp, K0, and K1 are real constants. In Chapters 5 and 9, this transfer function will be called the 
PID controller, since the first term is a proportional gain. the second an integral term, and the third 
a derivative term. Using Table 4-4, the proportional gain can be implemented using line (a), the 
integral tenn can be implemented using line (b), and the derivative tenn can be implemented using 
line (c). By superposition, the output of G(s) is the sum of the responses due to each term in G(s). 
This sum can be implemented by adding an additional input resistance to the circuit shown in 
Fig. 4-33(a). By making the sum negative. the negative gains of the pmportional, integral, and 
derivative term implementations are canceled, giving the desired result shown in Fig. 4-35. The 
transfer functions of the components of the op~amp circuit in Fig. 4-35 are 
Proportional: 
Integral: 
Derivative: 
The output voltage is Ep(s) R2 
E(s) = -R1 
E0(s) = -(Ep(s) + E1(s) + Ev(s)) (4-103) 
(4-104) 
(4-105) 
(4-106) 
Thus, the transfer function of the PIO op-amp circuit is 
E0(s) R2 I 
G(s) = E(s) = R1 + R;Cis + RdCt1s (4-107) 
By equating Eqs. (4-102) and (4-107), the design is completed by choosing the values of the resistors 
and the capacitors of the op-amp circuit so that the desired values of Kp, K1, and KD are matched. The 
design of the controller should be guided by the availability of standard capacitors and resistors. 
It is important to note that Fig. 4-35 is just one of many possible implementations of Eq. ( 4-102). 
For example, it is possible to implement the PID controller with just three op-amps. Also, it is 
common to add components to limit the high-frequency gain of the differentiator and to limit the 
4-4 Introduction to Modeling of Thermal Systems 177 
R2 
R, 
Er<s) R 
C; 
R, R 
E(s) 
R Ejs) 
Figure 4-35 Implementation of a PID controller . 
integrator output magnitude , which is often referred to as antiwindup protection. One advantage of 
the implementation shown in Fig. 4-35 is that each of the three constants Kp, K1, and Ko can be 
adjusted or tuned individually by varying resistor values in its op-amp circuits. Op-amps are also used 
in control systems for ND and DIA converters, sampling devices, and realization of nonlinear 
elements for system compensation. 
4-4 INTRODUCTION TO MODELING OF THERMAL SYSTEMS 
In this section, we introduce thermal and fluid systems. Because of the complex mathematics 
associated with these nonlinear systems, we only focus on basic and simplified models. 
4-4-1 Elementary Heat Transfer Properties' 
The two key variables in a thermal process are temperature T and thermal storage or heat 
stored Q, which has the same units as energy. Heat transfer is related to the heat flow rate q, 
which has the units of power. That is 
q= Q (4-108) 
As in the electrical systems, the concept of capacitance in a heat transfer problem is related 
to storage (or discharge) of heat in a body. The capacitance C is related to the change of the 
body temperature T with respect to time and the rate of heat flow q: 
q=CT (4-109) 
1For more in-depth study of this subject, refer to references f 1-7). 
178 ,a, Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
q A,€, k i 
i 
i---+ ! 
x Ill Figure 4-36 One-directional heat conduction flow. 
where the thermal capacitance C can be stated as a product of p material density~ c material 
specific heat, and volume V: 
(4-110) 
In a thermal system, there are three different ways that heat is transferred: by conduction, 
convection, or radiation. 
Conduction: Thermal conduction describes how an object conducts heat. In general this 
type of heat transfer happens in solid materials due to a temperature difference between 
two surfaces. In this case, heat tends to travel from the hot to the cold region. The transfer of 
energy in this case takes place by molecule diffusion and in a direction perpendicular to the 
object surface. Considering one-directional steady state heat conduction along x, as shown 
in Fig. 4-36, the rate of heat transfer is given by 
where q is the rate of heat transfer (flow), k is the thermal conductivity related to the 
material used, A is the area normal to the direction of heat flow x, and AT = Ti -T2 is the 
difference between the temperatures at x = 0 and x =£~or T1 and T2• Note in this case, 
assuming a perfect insulation, the heat conduction in other directions is zero. Also note that 
I 1 D1-2=7=-
1ui R (4-112) 
where R is also known as thermal resistance. So the rate of heat transfer q may be 
represented in terms of Ras 
AT q=-R (4-113) 
Convection: This type of heat transfer occurs between a solid surface and a fluid exposed 
to it, as shown in Fig. 4-37. At the boundary where the fluid and the solid surface meet, the 
heat transfer process is by conduction. But once the fluid is exposed to the heat, it can be 
replaced by new fluid. In thermal convection, the heat flow is given by 
q = hAllT = Dof:..T (4-114) 
Figure 4-37 Fluid-boundary heat convection. 
q 
q----+ 4-4 Introduction to Modeling of Thermal Systems • 179 
Figure 4-38 A simple heat radiation system with directly 
opposite ideal radiators. 
where q is the rate of heat transfer or heat flow. Ii is the coefficient of convective heat 
transfer, A is the area of heat transfer, and l:,.T = Th -T f is the difference between the 
boundary and fluid temperatures. The term hA may be denoted by Do, where 
1 Do= hA =­R (4-115) 
Again, the rate of heat transfer q may be represented in terms of thermal resistance R. Thus 
ll.T q=­R (4-116) 
Radiation: The rate of heat transfer through radiation between two separate objects is 
determined by the Stephan-Boltzmann law, 
(4-117) 
where q is the rate of heat transfer, u is the Stephan-Boltzmann constant and is equal to 
5.667 x 10-8 W/m2 °K4, A is the area normal to the heat lluw, and T1 and T2 are the 
absolute temperatures of the two bodies. Note that Eq. (4-117) applies to directly opposed 
ideal radiators of equal surface area A that pe1fectly absorb all the heat without reflection 
(see Fig. 4-38). 
The SI and other measurement units for variables in thermal systems are shown in 
Table 4-5. 
TABLE 4-5 Basic Thermal System Properties and Their Un,ts 
Parameter Symbol Used SI Units Other Units Conversion Factors 
Temperature T °C (Celsius) °F (Fahrenheit) °C = (°F -32) x 5/9 
°K (Kelvin) °C =°K + 273 
Energy (Heat Stored) Q J (joule) Btu lJ = lN-m 
calorie 1 Btu= 10551 
1 cal = 4.184 J 
Heat Flow Rate l] J/sec Btu/sec 
w 
Resistance R °CIW °F/(Btulhr) 
CiKfW 
Capacitance C J/(kg oq Btu/°F 
J/(kg °K) Btul°R 
180 • Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
: -EXAMPLE 4-4-1 A rectangular object is composed of a material that is in contact with fluid on its top side while being 
perfectly insulated on three other sides, as shown in Fig. 4-39. Find the equations of the heat transfer 
process for the following: 
T 
f. 1 Figure 4-39 Heat transfer problem between ---- A. p. c. k a fluid and an insulated solid object. 
T1 = Solid object temperature; assume that the temperature distribution is uniform 
Tt = Top fluid temperature 
I.= Length of the object 
A = Cross sectional area of the object 
p = Material density 
c = Material specific heat 
k = Material thermal conductivity 
h = Coefficient of convective heat transfer 
SOLUTION The rate of heat storage in the solid from Eq. (4-109) is 
q = pcAR.( d;t) 
Also, the convection rate of heat transferred from the fluid is 
q = hA(Tr-Tf) (4-118) 
The energy balance equation for the system dictates qto be the same in Eqs. (4-118) and (4-119). Hence, 
upon introducing thermal capacitance C from Eq. ( 4-109) and the convective thermal resistance R from 
Eq. (4-113) and substituting the right-hand sides of Eq. (4-118) into Eq. (4-119). we get 
RCT1. =-Ti+ T1 (4-120) 
In Laplace domain. the transfer function of the system is written as 
T1(s} 1 
Tj(s) RCs+ 1 (4-121) 
where the RC = r is also known as the time constant of the system. The significance of this term is 
discussed earlier in Chapter 2, and the initial conditions are assumed to be T1.(t = 0) 
= i'1(t = o) = o. 
4-5 INTRODUCTION TO MODELING OF FLUID SYSTEMS 
4-5-1 Elementary Fluid and Gas System Properties2 
In this section, we derive the equations of fluid and pneumatic systems. Understanding the 
models of these systems will later help in appreciating the models of hydraulic and 
pneumatic actuators, to be discussed in more detail in Chapter 5. In fluid systems, there are 
five parameters of importance-pressure, flow mass (and flow rate), temperature, density, 
2For a more in-depth study of this subject, refer to references [1-7]. 
4-5 Introduction to Modeling of Fluid Systems 181 
rii = q,,, = pq 
Figure 4-40 Control volume and the net mass flow rate. 
and flow volume (and volume rate). Incompressible fluid systems, just like electrical 
systems, can be modeled by passive components including resistance , capacitance, and 
inductance. In case of incompressible fluids, the fluid volume remains constant. 
To understand these concepts better, we must look at the fluid continuity equation or 
the law of conservation of mass. For the conu·ol volume shown in Fig. 4-40 and the net 
mass flow rate, we have 
qi/I =pq 
,n = / pqdt 
q = q; -q() (4-122) 
where rn is the net mass flow, pis fluid density, q,,, = ,iz is the mass flow rate, and q is the net 
fluid flow rate (volume flow rate of the ingoing fluid q; minus volume flow rate of the 
outgoing fluid q0). The conservation of mass states: 
dm d d 
-= pq = -(Mcv) = -(pV) dt dt dt 
dm . -= pV + Vp dt (4-123) 
(4-124) 
where ,n is the net mass flow rate, M,.,. is the mass of the control volume (or for simplicity 
"the container " fluid), and V is the container volume. Note 
(4-125) 
which is also known as the conservation of volume for the fluid. For an incompre ssible 
fluid, p is constant. Hence, 
,n=pV (4-126) 
Capacitance-Incompressible Fluids: Similar to the electrical capacitanc e, fluid capac­
itance relates to how energy can be stored in a fluid system. The fluid capacitance C is the 
ratio of the fluid flow rate q to the rate of pressure P: 
(4-127) 
Or 
q= cP ( 4-128) 
182 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
EXAMPLE 4-5-1 The pressure in the tank shown in Fig. 4-41, which is filled to height h, is 
EXAMPLE 4-5-2 A pV phgA 
P=A=fl=p hg (4-129) 
Figure 4-41 Incompressible fluid flow into an open-top 
cylindrical container. 
As a result, noting that q = V. 
V A C=-=-pgh pg (4-130) 
For the general case, what is happening in Fig. 4-40, as the fluid flows into the control volume, the 
fluid mass will change; so does the pressure. Capacitance expresses the rate of change of the fluid 
mass with respect to pressure. That is 
C = dm/dt = dm 
dP/dt dP (4-131) 
In general, the fluid density p is nonlinear and may depend on temperature and pressure. This 
nonlinear dependency, Pni(P, T), known as the equation of state, may be linearized using the first­
order Taylor series relating p,,1 to P and T: 
(DP,,1) (P ) (EJp,,,) ( ) 
P111 = P + DP -Pref + EJT , _ _ T -T,-ef 
P,.,,.T"i I n:(.I n•/ (4-132) 
where p, Pnf, and T,-~J are constant reference values of density, pressure, and temperatw-e , 
respectively. In this case, 
(4-133) 
l (EJp,,J) 
a = -p f)T P,,r.Trrf (4-134) 
are the bulk modulus and the thermal expansion coefficient , respectively. In most cases of interest, 
however, the temperatures of the fluid entering and flowing out of the container are almost the same. 
Further, if the containerof volume Vis a rigid object, using Eq. (4-133), Eq. (4-124) may be rewritten 
as 
dm V. . -= pq = Vp=?q = -P = CP dt /3 (4-135) 
In practice, accumulators are fluid capacitors , which may be modeled as a spring-loaded piston 
system, as shown in Fig. 4-42. In this case, assuming a spring-loaded piston of area A traveling inside 
a rigid cylindrical container , the pressure rate is shown as 
where V = Ax. . I ( . ) P=-q-V C (4-136) 
For a pneumatic system, the law of conserva tion ofvolnme does not apply because the volume 
of a gas varies with pressure or other external effects. In this case, only lhe conservation of mass 
applies. As a result. it is customary to use the mass flow rate qm as opposed to volume flow rate q in 
the equations involving pneumatic systems. 
Capacitance-Pneumatic Systems: As in the previous case, capacitance relates to how energy 
can be stored in the system, and it defines the rate of change of gas stored in a control volume, as 
4-5 Introduction to Modeling of Fluid Systems -"i 183 
q 
Pam, Figure 4-42 A spring-loaded piston system. 
shown in Fig. 4-40 with respect to pressure. For a constant volume container, the general gas 
capacitance relation Eq. (4-131) becomes 
dm dp C=-=V- (4-137) dP dP 
where the container volume Vis a constant. 
For a perfect gas under normal temperatures and pressures, the perfect gas law states: 
PV = mR,:T (4-138) 
where Vis the volume of a gas with absolute pressure P and mass m. Tis the absolute temperature of 
the gas, and Rg is the gas constant, which depends on the type of gas used. Notice in this case four 
parameters P, V, T, and mare mathematically related. As a result, to solve one. the other three must be 
somehow related. Using a polytropk process. which is a general process for all fluids relating the 
pressure, volume. and mass, we have: 
(v)n (l)" p m = p p = con.r;t. (4-139) 
where n is called the polytropic exponent and can vary from Oto oo. As a result, the capacitance 
relation Eq. (4-137) may be restated as 
C=V~=V =V~ dp ( p" ) p 
dP Pnp(n-t) 11P 
Or. using Eq. (4-138) and knowing m = pV. 
V C=­nR8T (4-141) 
As a side note, if in a polytropic process the mass m is constant, and given a process from state 1 to 
state 2, the general gas law may also be defined by 
P1Vi P2V2 r.=r;-(4-142) 
For a constant temperature or an isothermal process, the gas temperatures at any two given 
instants are the same. Or 
T1 = T2 
Pi Vi= P2V2 
In this case, n = I in the capacitance relation Eq. (4-140). 
For a constant pressure or an isobaric process, 
Pi =P2 
Vi V2 
Ti= T2 
In this case, n = 0 in the capacitance relation Eq. (4-140). 
For a constant volume or an isovolumetric process. the relation becomes 
Vi= Vz 
Pt= T1 
P2 Tz 
In this case, n = ex: in the capacitance relation Eq. (4-140). (4-143) 
(4-144) 
(4-145) 
184 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
f 
----.F q~C/ ~ Figure 4-43 Fluid forced through a frictionless 
P1 P2 pipe of length f. 
For a reversible adiabatic or an isentropic process, the relation becomes 
Pi vf = P2Vi (4-146) 
In this case, n = k in the capacitance relation Eq. (4-140). where k is the ratio of specific heats: 
C k = ...J!.. (4-147) c,. 
where cP is the specific heat of the gas at constant pressure and c,. is the gas specific heat at constant 
volume. In pneumatic systems, k = 1.4 (for air). 
Inductance-Incompressible Fluids: Fluid inductance is also referred to as fluid inertance in 
relation to the inertia of a moving fluid inside a passage (line or a pipe). Inertance occurs mainly in 
long lines, but it can also occur where an external force (e.g., caused by a pump) causes a significant 
change in the flow rate. In the case shown in Fig. 4-43. assuming a frictionless pipe with a uniform 
fluid flow moving at the speed v, in order to accelerate the fluid, an external force Fis applied. From 
Newton's second law, 
F = A t.P = Mv = pAf.v (4-148) 
b.P = (P1 -P2) 
But 
V -Av-q (4-149) 
So 
(Pi -P2) = Lq (4-150) 
where 
L = p€ 
A (4-151) 
is known as the fluid inductance . The concept of inductance is rarely discussed in the case of 
compressible fluids and gases and, therefore, i~ not discussed here. 
Resistance-Incompressible Fluids: As in the electrical systems, fluid resistors dissipate 
energy. For the system shown in Fig. 4-44, the force resisting the fluid passing through a passage 
like a pipe is 
(4-152) 
where !J.p = P1 -P2 is the pressure drop and A is the cross-sectional area of the pipe. Depending on 
the type of flow (i.e., laminar or turbulent) the fluid resistance relationship can be linear or nonlinear 
and relates the pressure drop to the mass flow rate q111• For a laminar flow, we define 
llP = Rq111 = Rpq (4-153) 
6.P R=- (4-154) q,,, 
where q is the volume flow rate. Table 4-6 shows R for various passage cross sections, assuming a 
laminar flow. 
R Figure 4-44 Flow of an incompressible fluid through 
a pipe and a fluid resistor R. 
4-5 Introduction to Modeling of Fluid Systems -~ 185 
TABLE 4-6 Equations of Resistance Rfor Laminar Flows 
Fluid resistance 
Symbols used Pi ------0- P2 
qi/I• 
Fluid volume Bow rate: q 
Pressure drop: AP = P12 = P1 -P2 
Laminar resistance: R 
µ: Fluid viscosity 
w = width; h = height; I. = length; d = diameter 
General case 
Circular cross section 
Square cross section 
Rectangular cross section 
Rectangular cross section: Approximation 
Annular cross section 
Annular cross section~ Approximation R= 32µ£ 
Adl 
d1i = hydraulic diameter = ~A pen meter 
R = 128µ1. 
7Cd4 
R = 32µ1. 
w4 
8µf R=--_,,_-wh:~ 
(1 + h/w)2 
R= 12µ1. 
wh3 
w/h = small 
R= 8µl 
Hdodr ( 1 -!) 
d0 = outerdiameter; d;, = innerdiameter 
R=-12_µ_£ 
Hdodf 
d0/di = small 
When the flow becomes turbulent, the pressure drop relation Eq. (4-153) is rewritten as 
(4-155) 
where Rr is the turbulent resistance and n is a power varying depending on the boundary used-e.g., 
n = 7 /4 for a long pipe and, most useful, 11 = 2 for a flow through an orifice or a valve. 
~· EXAMPLE 4-5-3 For the liquid-level system shown in Fig. 4-45. water or any incompressible fluid (i.e., fluid density p 
A One-Tank Liquid-Level is constant) enters the tank from the top and exits through the valve in the bottom. The volume flow 
System rate at the valve inlet and the volume flow rate at the valve outlet are qi and q°' respectively. The fluid 
height in the tank is hand is variable. The valve resistance is R. Find the system equation for the input, 
q1, and output~ h. 
SOLUTION The conservation of mass suggests 
dm d(pV) 
dt =~=pqi-Pqa (4-156) 
where pqi and pq" are the mass flow rate in and out of the valve, respectively. Because the fluid 
density pis a constant. the conservation of volume also applies, which suggests the time rate of 
186 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
.--l q-------,i 
Figure 4-45 A single-tank liquid-level system. 
change of the fluid volume inside the tank is equal to the difference of incoming and outgoing flow 
rates. 
In this case. A is the tank cross-sectional area. and his the fluid inside the tank height and is a variable. 
Recall from Eq. (4-131) 
Hence 
Or from Eq. (4-158), C = clm/dt 
dP/dt 
dm = cdp 
dt dt 
dp Cdt= pqi-P% (4-158) 
(4-159) 
(4-160) 
Using relation Eq. (4-154). the fluid valve resistance R, assuming a laminar flow, is defined as 
8.p Pt -P2 pqa = R = R (4-161) 
where l:J.p is the pressure drop across the valve. Relating the pressure to fluid height lz, which is 
variable, we get 
Pl = Parm + pgh (4-162) 
P2 = Patm 
where p 1 is in the pressure at the valve inlet and p2 is the outlet pressure, and P"'m is the atmospheric 
pressure. After combining Eqs. (4-157) through (4-162), we get the system equation: 
Or dh pgh 
pA dt =pq; -R 
. R RCh+h=-qi g (4-163) 
(4-164) 
where C = A/g is the capacitance and p = R is the resistance. As a result, system time constant is 
-r = RC. .. .. 
• EXAMPLE 4-5-4 Consider a double tank system, as shown in Fig. 4-46, with h1 and h2 representing the two tank 
A Two-Tank Liquid-Level heights and R1 and R2 representing the two valve resistancest respectively. Find the differential 
System equations. 
SOLUTION Using the same approach as in Example 4-5-3, it is not difficult to see 
Pl -P2 (Patm + pghi) -(Patm + pgh2} pqi -pq1 = pqi - = pqi -
R1 Ri (4-165) 
EXAMPLE 4-5-5 4-5 Introduction to Modellng of Fluid Systems · 187 
ff; 
T T 
h1 A1,P h2 A2,P 1 Ri qi R2 CJ2 = q,, 
~ ----+ 
Figure 4-46 Two-tank liquid-level system. 
and 
Pl -P2 P2 -P3 pqi -pq2 = ----
R1 R2 
(Parm + pgh I) -( Pei/Ill + pgh2) ( Pmm + pgh2) -P11 
R1 R2 (4-166) 
Thus, the equations of system nre 
(4-167) 
(4-168) 
Resistance-Pneumatic Systems: The resistance for pneLtmatic systems is a bit more compli­
cated. For a gas following the perfect gas law Eq. (4-138). the flow through a valve or an orifice of 
cross-sectional area A, shown in Fig. 4-47, is related to the outlet pressure P. Note that the mass flow 
rate q111 on bot11 sides of the valve, by the virtue of continuity , is the same. Not considering the 
theoretical details, for a laminar flow if l}.,P = P; -P is small, we have 
11P RL = - (4-169) q,,, 
where P1 is the inlet pressure, P is outlet pressure, q is the volumetric flow rate, and RL is the 
equivalent resistance, which is obtained experimentally. For a turbulent !low, we get 
l}.,P 
Rr = -~- (4-170) q,,, 
where RT is the turbulent resistance . We use the next example to better illustrate these concepts . 
l/,11 R ((Ill 
P; X P Figure 4-47 Air flow through a pipe with an orifice. 
Consider air passing through a valve and entering a rigid container system, as shown in Fig. 4-48. In this 
case, the valve is modeled as an orifice, inlet pressure is P;, the mass flow rate is Cfm, and the pressure 
inside the container (or the valve outlet pressure) is P. ln this case, it is customary to think of the pressures 
in both sides of the valve as a constant pressure Ps (or steady state pressure) plus a variation. That is, 
~ P;,P,~P ,V,p P; = P., + Pi 
P=PJ+p 
Figure 4-48 Gas flow into a rigid container. (4-171) 
188 "' Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
For the rigid container in Fig. 4-48 with constant volume V, the law of conservation of mass dictates 
that in the container 
dm = d(pV) = vdp 
dt dt dt (4-172) 
where Pi is fluid density before reaching the valve. At the inlet (left side of the valve), we have 
dm dt = Ptq = q,n (4-173) 
Recall from Eq. (4-131) 
But 
Hence 
But from Eq. (4-169) we have C = dm/ dt = dm = dm 
dP/dt dP dp 
dm dm/dp 
dt = dp/dt 
dm= cdp 
dt dt 
p;-p qm=-­RL 
Thus from Eqs. (4-176) and (4-173), and using R = RL for simplicity, we get 
or dp p; -p C-=--dt R 
Cdp +!!..= Pi 
dt R R 
The differential equation can be rearranged as 
RCp+ p= p; 
In Laplace domain, the transfer function of the system is written as 
P(s) 1 
P;(s) = RCs+ I (4-175) 
(4-176) 
(4-177) 
(4-178) 
(4-179) 
(4-180} 
(4-181) 
where the RC = 1: is also known as the time constant of the system. The significance of this term 
is discussed earlier in Chapter 2, and the initial conditions are assumed to be p(t = 0) = 
p(t = 0) = 0. 
Using an isothermaJ process, where temperature is constant. and taking a derivative of Eq. 
(4-138) with respect to time, we have 
dpV=dmR T 
dt dt 8 
From Eq. (4-172) and Eq. (4-182), we get 
vdp =-I_dp 
dt RgT dt 
But from Eqs. (4-169), (4-172), and (4-173). we have 
Thus, 
After substituting dp Pi -P 
V dt =P;RL 
V dp Pi -p 
RT dt =p;-R­g 
V 
C= RsT 
the differential Eqs. (4-186) and (4-179) become the same. (4-182) 
(4-183) 
(4-184) 
(4-185) 
(4-186) 
4-6 Sensors and Encoders in Control Systems _. 189 
TABLE 4-7 Basic Fluid and Pneumatic System Properties and Their Units 
Parameter Symbol Used SI Units Other Units 
Temperature T ~C (Celsius) ~F (Fahrenheit) 
°K(Kelvin) 0R (Rankin) 
Energy ( Heat Stored) Q I (joule) Btu 
calorie 
Volume Flow Rate q m3/sec ft3/sec 
in3/sec 
Mass Flow Rate Qm kg/sec lb/sec 
Resistance (hydraulic} R N-sec/m5 lbrsec/in5 
Resistance (pneumatic) R sec/m2 lbr hr/(ft2 lbm) 
Capacitance (hydraulic) C ms/N in5/lb 
Capacitance (pneumatic) C m2 rt2 
Time Constant T=RC sec 
Using the polytropic process defined in Eq. ( 4-139), it is easy to see 
RCp +P == Pi 
where 
V C=-­nRgT Conversion Factors 
~C = {°F-32) x 5/9 
°C =° K+273 
lJ = lN-m 
1 Btu= I055J 
1 cal= 4.184J 
(4-187) 
(4-188) 
The SI and other measurement units for variables in electrical systems are tabulated in Table 4-7. _. 
.__ 4-6 SENSORS AND ENCODERS IN CONTROL SYSTEMS 
4-6-1 Potentiometer Sensors and encoders are important components used to monitor the performance and for 
feedback in control systems. In this section, the principle of operation and applications of 
some of the sensors and encoders that are commonly used in control systems are described. 
A potentiometer is an electromechanical transducer that converts mechanical energy into 
electrical energy. The input to the device is in the form of a mechanical displacement, either 
linear or rotational. When a voltage is applied across the fixed terminals of the potentiometer~ 
the output voltage, which is measured across the variable terminal and ground, is proportional 
to the input displacement, either linearly or according to some nonli11ear relation. 
Rotary potentiometers are available commercially in single-revolution or multirevolution 
form, with limited or unlimited rotational motion. The potentiometers are commonly made with 
wirewound or conductive plastic resistance material. Fig. 4-49 shows a cutaway view of a rotary 
potentiometer, and Fig. 4-50 shows a linearpotentiometerthat also contains a built-in operational 
amplifier. For precision control, the conductive plastic potentiometer is preferable, because it has 
infinite resolution~ long rotational life, good output smoothness, and low static noise. 
Fig. 4-51 shows the equivalent circuit representation of a potentiometer, linear or 
rotary. Because the voltage across the variable terminal and reference is proportional to the 
shaft displacement of the potentiometer, when a voltage is applied across the fixed 
terminals, the device can be used to indicate the absolute position of a system or the 
190 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Gold plated 
slipring '-----+:fl ' 
Rotor molded 
to shaft ---:-= 
Mechanica l 
stops 
coil termination 
(not shown) 
Dual slider contact 
position guides Precious metal 
coil contact 
terminals SI iclerblock with 
dual guides 
Resistance element: ~---Wlcewound or hybid coil 
Both lids glass 
filled nylon !Bronze chromated i brass bushing 
Figure 4-49 Ten-turn rotary potentiometer (courte~y of Helipot Division of Beckman 
Instruments , Inc.). 
Figure 4-50 Linear motion potentiometer with built-in operational amplifier (courtesy of 
Waters Manufacturing, Inc.). 
relative position of two mechanical outputs. Fig. 4-52(a) shows the arrangement when the 
housing of the potentiometer is fixed at reference; the outpLlt voltage e(t) will be 
proportional to the shaft position ec(t) in the case of a rotary motion. Then 
I'ixed 
terminals "><11,.i----O Variable 
terminal (4-189) 
Figure 4-51 Electric circuit representation of a potentiometer. 
+ 
BJt) 
E >+-\---0+ 
e(t) 
(a) 4-6 Sensors and Encoders in Control Systems 191 
+ 
E-=-
f-------e(I)---- ----, 
(b) 
Figure 4-52 Potentiometer used as a position indicator. (bi Two pocentiometers used to sense the 
positions of two shafts. 
where K., is the proportional constant. For an N-turn potentiometer , the total displacement 
of the variable arm is 2nN radians. The proportiona l constant !(_,. is given by 
E 
Ks = lrrN V /rad (4-190) 
where Eis the magnitude of the reference voltage applied to the fixed terminals. A more 
flexible arrangement is obtained by using two potentiometers connected in parallel, as 
shown in Fig. 4-52(b). This arrangement allows the comparison of two remotely located 
shaft positions. The output voltage is taken across the variable terminals of the two 
potentiometers and is given by 
(4-191) 
Fig. 4-53 illustrates the block diagram representation of the setups in Fig. 4-52. In 
de-motor control systems, potentiometers are often used for position feedback. Fig. 
4-54(a) shows the schematic diagram of a typical de-motor , position-control system. 
The potentiome ters are used in the feedback path to compare the actual load position 
with the desired reference position. If there is a discrepancy between the load position 
and the reference input, an error signal is generated by the potentiometers that will 
drive the motor in such a way that this error is minimized quickly. As shown in Fig. 4-54 
(a), the error signal is amplified by a de amplifier whose output drives the armature of a 
permanent-magnet de motor. Typical waveforms of the signals in the system when the 
input e,.(t) is a step function are shown in Fig. 4-54(b). Note that the electric signals are 
all unmodulated. In control-systems terminology. a de signal usually refers to an 
unmodulat ed signal. On the other hand, an ac signal refers to signals that are 
modulated by a nwdulation process. These definitions are different from those 
commonly used in electrical engineering, where de simply refers to unidirectional 
signals and ac indicates alternating signals. 
8JI)~ --+6·~ 
(a) ~ 
r :(I) 
(b) 
Figure 4-53 Block diagram representat ion of potentiomete r arrangements in Fig. 4-52. 
192 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
+ 
e + DC 
AMPLIFIER 
(},. 
0 
E 
0 Reference 
input de motor 
LOAD 
(a) 
l~~ = e(t) 0 '--==--7 -===-=-=---
e.,(t) Ef" = 0 ~ -===--
I~ = z = ~. 
0 
(b) 
Figure 4-54 (a) A de-motor, position-control system with potentiometers as error sensors. 
(b) Typical waveform s of signals in the control system of part (a). 
Fig. 4-55(a) illustrates a control system that serves essentially the same purpose as 
that of the system in Fig. 4-54(a), except that ac signals prevail. In this case, the 
voltage applied to the error detector is sinusoidal. The frequency of this signal is 
usually much higher than that of the signal that is being transmitted through the 
system. Control systems with ac signals are usually found in aerospace systems that 
are more susceptible to noise. 
Typical signals of an ac control system are shown in Fig. 4-55(b). The signal v(t) is 
referred to as the carrier whose frequency is We, or 
v(t) = Esinwct (4-192) 
4-6 Sensors and Encoders in Control Systems 193 
B,(I) + 
e 
0 
E AC 
AMP LIFTER 
Reference 
input 
(a) Two-phase ac 
motor 
LOAD 
v( I) 0 l'----\--l-\-/-\-,~/---\--~-\-/--H-.\-I-\-Hf--l-l._1--\--/-1---·/-\-/-\-,f-H'-\--
-£ 
B,(t) 
e(t) 
(b) 
Figure 4-55 (a) An ac control system with potentiometers as error detectors. (b) Typical waveforms 
of signals in the control system of part (a). 
Analytically, the output of the error signal is given by 
e(t) = Ks8e(t)v(t) (4-193) 
where 8e(t) is the difference between the input displacement and the load displacement , or 
Be(t) = 8,-(t) -BL(t) (4-194) 
For the 8e(t) shown in Fig. 4-55(b), e(l) becomes a suppressed-carrier-modulated signal. 
A reversal in phase of e(t) occurs whenever the signal crosses the zero-magnitude axis. This 
reversal in phase causes the ac motor to reverse in direction according to the desired sense 
of correction of the error signal 8e(t). The term suppressed-carrier modulation stems from 
the fact that when a signal 8e(t) is modulated by a carrier signal v(t) according to Eq. 
194 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
4-6-2 Tachometers (4-193), the resultant signal e(t) no longer contains the original carrier frequency w('· To 
illustrate this, let us assume that ee(t) is also a sinusoid given by 
(4-195) 
where, normally, Ws « We. Using familiar trigonometric relations and substituting Eqs. 
(4-192) and (4-195) into Eq. (4-193), we get 
e(t) = {KiE[cos(wc -w5)t -cos(cvc + Ws)t] ( 4-196) 
Therefore , e(t) no longer contains the carrier frequency we or the signal frequency Ws but 
has only the two sidebands We+ Ws and We -Ws-
When the modulated signal is transmitted through the system, the motor acts as a 
demodulator, so that the displacement of the load will be of the same form as the de signal 
before modulation . This is clearly seen from the waveforms of Fig. 4-55(b). It should be 
pointed out that a control system need not contain all de or all ac componen ts. It is quite 
common to couple a de component to an ac component through a modulator, or an ac 
device to a de device through a demodulator . For instance, the de amplifier of the system in 
Fig. 4-55(a) may be replaced by an ac amplifier that is preceded by a modulator and 
followed by a demodulator. 
Tachometers are electromechanical devices that convert mechanical energy into electrical 
energy. The device works essentially as a voltage generator , with the output voltage 
proportional to the magnitude of the angular velocity of the input shaft. In control systems, 
most of the tachometers used are of the de variety; that is, the output voltage is a de signal. 
DC tachometers are used in control systems in many ways; they can be used as velocity 
indicators to provide shaft-speed readout, velocity feedback, speed control, or stabilization . 
Fig. 4-56 is a block diagram of a typical velocity-control system in which the tachometer 
output is compared with the reference voltage, which represents the desired velocity to be 
achieved . The difference between the two signals, or the error, is amplified and used to 
drive the motor so that the velocity will eventually reach the desired value. In this type of 
application , the accuracy of the tachometer is highly critical, as the accuracy of the speed 
control depends on it. 
In a position-control system, velocity feedback is often used to improve the stability or 
the damping of the closed-loop system. Fig. 4-57 shows the block diagram of such an 
CONTROLLER POWER 
AMPLIF[ER 
l de motor 
Figure 4-56 Velocity-control system with tachometer feedback. LOAD 
4-6 Sensors and Encoders in Control Systems 195 
PREAMP PREAMP POWER 
AMPLIFIER 
1 Tachometer 
Figure 4-57 Po,-ition-control system with tachometer feedback. 
application. In this case, the tachometer feedback forms an inner loop to improve the 
damping characteristic s of the system, and the accuracy of the tachometer is not so critical. 
The third and most traditional use of a de tachometer is in providing the visual speed 
readout of a rotating shaft. Tachometers used in this capacity are generally connected 
directly to a voltmeter calibrated in revolutions per minute (rpm). 
Mathematical Modeling of Tachometers 
The dynamics of the tachometer can be represented by the equation 
(4-197) 
where etU) is the output voltage; B(t), the rotor displacement in radians; w(t), the rotor 
velocity in rad/sec; and K,, the tachometer constant in V/rad/sec. The value of K, is 
usually given as a catalog parameter in volts per 1000 rpm (V lkrpm). 
The transfer function of a tachometer is obtained by taking the Laplace transform on 
both sides of Eq. (4-197). The result is 
E1(s) 
0(s) = K,s (4-198) 
where Ei(s) and ®(s) are the Laplace transforms of ei(t) and B(t), respectively. 
4-6-3 Incremental Encoder 
Incremental encoders are frequently found in modem control systems for converting linear 
or rotary displacement into digitally coded or pulse signals. The encoders that output a 
digital signal are known as absolute encoders. In the simplest terms, absolute encoders 
provide as output a distinct digital code indicative of each particular least significant 
increment of resolution. Incremental encoders, on the other hand, provide a pulse for each 
increment of resolution but do not make distinctions between the increments . Tn practice, 
the choice of which type of encoder to use depends on economics and control objectives. 
For the most part, the need for absolute encoders has much to do with the concern for data 
loss during power failure or the applications involving periods of mechanical motion 
without the readout under power. However, the incremental encoder's simplicity in 
construction, low cost, ease of application, and versatility have made it by far one of 
the most popular encoders in control systems. Incremental encoders are available in rotary 
196 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Figure 4-58 Rotary incremental c-ncoder 
(courtesy of DISC Instruments, Inc.). , ~,/ 
Figure 4-59 Linear incremental encoder 
(comtesy of DISC Instruments, Inc.). 
and linear forms. Fig. 4-58 and Fig. 4-59 show typical rotary and linear incremental 
encoders. 
A typical rotary incremental encoder has four basic parts: a light source, a rotary disk, 
a stationary mask, and a sensor, as shown in Fig. 4-60. The disk has alternate opaque and 
transparent sectors. Any pair of these sectors represents an incremental period. The mask is 
used to pass or block a beam of light between the light source and the photosensor located 
behind the mask. For encoders with relatively low resolution, the mask is not necessary. For 
fine-resolution encoders (up to thousands of increments per evolution), a multiple-slit mask 
is often used to maximize reception of the shutter light. The waveforms of the sensor 
outputs are generally triangular or sinusoidal, depending on the resolution required. 
Square-wave signals compatible with digital logic are derived by using a linear amplifier 
followed by a comparator . Fig. 4-6l(a) shows a typical rectangular output waveform of a 
single-channel incremental encoder. In this case, pulses are produced for both directions of 
shaft rotation. A dual-channel encoder with two sets of output pulses is necessary for 
direction sensing and other control functions. When the phase of the two-output pulse train 
is 90° apart electrically, the two signals are said to be in quadrature , as shown in Fig. 4-61 
(b). The signals uniquely define O-to-1 and l-to-0 logic transitions with respect to the 
direction of rotation of the encoder disk so that a direction-sending logic circuit can be 
construct ed to decode the signals. Fig. 4-62 shows the single-channel output and the 
~-+~-r-~-1--~~ ~~-1--+IIIIII= 
source 
(lamp, LED) 
Rotating 
disk Statiomu·y 
mask 
Figure 4-60 Typical incremental optomechanics. + Sensor 
(photovol taic <.:ell, 
phototransist0r . 
photodio<le) 
4~6 Sensors and Encoders in Control Systems ... 197 
CW shaft rotation CCW shaft rotation 
L J 
(a) 
J+-Period -+j 
AJ I I L J---.1 I L B--i__l_rpl 
-.j 90° I+-Qua~rature I I I _J ~l 
I 
(b) 
Figure 4~61 (a) 'fypical rectangular output waveform of a single-channel encoder device 
(bidirectional). (b) Typical dual-channel encoder signals in quadrature (bidirectional). 
(a) 
(b) 
Figure 4-62 (a) Typical sinusoidal output waveform of a single-channel encoder device. 
(b) Typical dual-channel encoder signals in quadrature. 
quadrature outputs with sinusoidal waveforms. The sinusoidal signals from the incremental 
encoder can be used for fine position control in feedback control systems. The following 
ex.ample illustrates some applications of the incremental encoder in control systems. 
, EXAMPLE 4-6 Consider an incremental encoder that generates two sinusoidal signals in quadrature as the encoder 
disk rotates. The output signals of the two channels are shown in Fig. 4~63 over one cycle. Note that 
the two encoder signals generate 4 zero crossings per cycle. These zero crossings can be used for 
position indication, position control, or speed measurements in control systems. Let us assume that 
the encoder shaft is coupled directly to the rotor shaft of a motor that directly drives the printwheel of 
an electronic typewriter or word processor. The printwheel has 96 character positions on its periphery, 
and the encoder has 480 cycles. Thus, there are 480 x 4 :::::::: 1920 zero crossings per revolution. For the 
96-character printwheel, this correspml(fa to 1920/96 = 20 zero crossings per character; that is. there 
are 20 zero crossings between two adjacent characters. 
198 ._ Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Output channel I Output channel 2 
... ,~t------ I cycle --------..i Position 
Figure 4-63 One cycle of the output 
signals of a dual-channel 
incremental encoder. 
One way of measuring the velocity of the printwheel is to count the number of pulses generated 
by an electronic clock that occur between consecutive zero crossings of the encoder outputs. Let us 
assume that a 500-kHz clock is used; that is, the clock generates 500,000 pulses/sec. If the counter 
records, say, 500 clock pulses while the encoder rotates from the zero crossing to the next, the shaft 
speed is 
500, 000 pulses/sec . 
500 1 1 . = I 000 zero crossings/sec pu ses zero crossmg 
_ 1000 zero crossings/sec _ 0 52083 1 - - . rev sec 1920 zero crossings/rev (4-199) 
= 31.25rpm 
The encoder arrangement described can be used for fine position control of the printwheel. Let the 
zero crossing A of the waveforms in Fig. 4-63 correspond to a character position on the printwheel 
(the next character position is 20 zero crossings away), and the point corresponds to a stable 
equilibrium point. The coarse position control of the system must first drive the printwheel position to 
within 1 zero crossing on either side of position A; then, by using the slope of the sine wave at position 
A, the control system should null the error quickly. : 
~ 4-7 DC MOTORS IN CONTROL SYSTEMS 
Direct-current (de) motors are one of the most widely used prime movers in the industry 
today. Years ago, the majority of the small servomotors used for control purposes were 
ac. In reality, ac motors are more difficult to control, especially for position control, and 
their characteristics are quite nonlinear, which makes the analytical task more difficult. 
DC motors, on the other hand, are more expensive, because of their brushes and 
commutators, and variable-flux de motors are suitable only for certain types of control 
applications. Before permanent-magnet technology was fully developed, the torque­
per-unit volume or weight of a de motor with a permanent-magnet (PM) field was far 
from desirable. Today, with the development of the rare-earth magnet, it is possible to 
achieve very high torque-to-volume PM de motors at reasonable cost. Furthermore, the 
advances made in brush-and-commutator technology have made these wearable parts 
practically maintenance-free. The advancements made in power electronics have made 
brushless de motors quite popular in high-performance control systems. Advanced 
manufacturing techniques have also produced de motors with ironless rotors that have 
very low inertia, thus achieving a very high torque-to-inertia ratio. Low-time-constant 
properties have opened new applications for de motors in computer peripheral equip­
ment such as tape drives, printers, disk drives, and word processors, as well as in the 
automation and machine-tool industries. 
f/J Uniform, radially. 
_ \ \ / / ~riented magnetic ~ flux 
F~ T=Fr 
I "-Conductor ,. 
[ . 
Center of 
rotation carrying 
current I 
4-7-1 Basic Operational Principles of DC Motors 4-7 DC Motors in Control Systems <: 199 
fjgure 4-64 Torque production in a de motor. 
The de motor is basically a torque transducer that converts electric energy into mechanical 
energy. The torque developed on the motor shaft is directly proportional to the field flux 
and the armature current. As shown in Fig. 4-64, a current-carrying conductor is 
established in a magnetic field with flux </J. and the conductor is located at a distance r 
from the center of rotation. The relationship among the developed torque, flux </J. and 
current i" is 
(4-200) 
where Tm is the motor torque (in N-m. lb-ft, or oz-in.); </J, the magnetic flux (in webers); i,1• 
the armature current (in amperes); and Km, a proportional constant. 
In addition to the torque developed by the arrangement shown in Fig. 4-64, when the 
conductor moves in the magnetic field, a voltage is generated across its tenninals. This 
voltage. the back emf, which is proportional to the shaft velocity, tends to oppose the 
current flow. The relationship between the back emf and the shaft velocity is 
(4-201) 
where eb denotes the back emf (volts) and Wm is the shaft velocity (rad/sec) of the motor. 
Eqs. (4~200) and (4-201) form the basis of the de-motor operation. 
4-7-2 Basic Classifications of PM DC Motors 
In general. the magnetic field of a de motor can be produced by field windings or permanent 
magnets. Due to the popularity of PM de motors in control system applications, we shall 
concentrate on this type of motor. 
PM de motors can be classified according to commutation scheme and armature 
design. Conventional de motors have mechanical brushes and commutators. However, an 
important type of de motors in which the commutation is done electronically is called 
brushless de. 
According to the armature construction. the PM de motor can be broken down into 
three types of armature design: iron-core, surface-wound. and moving-coil motors. 
Iron-Core PM DC Motors 
The rotor and stator configuration of an iron-core PM de motor is shown in Fig. 4-65. The 
permanent-magnet material can be barium ferrite, Alnico. or a rare-earth compound. The 
magnetic flux produced by the magnet passes through a laminated rotor structure that 
contains slots. The armature conductors are placed in the rotor slots. This type of de motor 
200 · Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Figure 4-65 Cross-section view of a permanent ­
magnet (PM) iron-core de motor. Conductor s 
(bonded to rotating 
am,ature iron) 
Rotating flux 
path 
Figure 4-66 Cross-sec tion view of a surface­
wound permanent-magnet (PM) de motor. 
is characterized by relatively high rotor inertia (since the rotating part consists of the 
armature windings) , high inductance, low cost, and high reliability. 
Surface-Wound DC Motors 
Fig. 4-66 shows the rotor construction of a surface-wo und PM de motor. The armature 
conJu<.;lurs are bonded to the surface of a cylindrical rotor structure, which is made of 
laminated disks fastened to the motor shaft. Because no slots are used on the rotor in this 
design, the annature has no "cogging " effect. The conductors are laid out in the air gap 
between the rotor and the PM field, so this type of motor has lower inductance than that of 
the iron-core structure. 
Moving-Coil DC Motors 
Moving-coil motors are designed to have very low moments of inertia and very low armature 
inductance . This is achieved by placing the armature conductors in the air gap between a 
stationary flux return path and the PM structure, as shown in Fig. 4-67. In this case, the 
conductor structure is supported by nonmagnetic material-usually epoxy resins or fiber­
glass-to form a hollow cylinder. One end of the cy Jinder forms a hub, which is attached to the 
motor shaft. A cross-section view of such a motor is shown in Fig. 4-68. Because all 
Conducto rs 
(bonded together by 
nonmagnetic materials) 
Stationary flux 
return path 
Figure 4-67 Cross-sec tion view of a surface­
wound permanent-magnet (PM) de motor. 
Air gap 
A1111arure 
(hollow-cup -shaped 
conductor array) 
Core 4-7 DC Motors in Control Systems 201 
Magnet pole 
Flux path 
Figure 4-68 Cross-section side view of a moving-coil de motor. 
unnecessary elements have been removed from the armature of the moving-coil motor, its 
moment of inertia is very low. Because the conductors in the moving-coil armature are not in 
direct contact with iron, the motor inductance is very low, and values of less than 100 µ,H are 
common in this type of motor. Its low-inertia and low-inductance properties make the moving­
coil motor one of the best actuator choices for high-performance control systems. 
Brushless DC Motors 
Brushless de motors differ from the previously mentioned de motors in that they employ 
electrical (rather than mechanical) commutation of the armature current. The most common 
configuration of brushless de motors-especially for incremental-motion applications-is 
one in which the rotor consists of magnets and "back-iron" suppo,t and whose commutated 
windings are located external to the rotating parts, as shown in Fig. 4-69. Compared to the 
conventional de motors, such as the one shown in Fig. 4-68, it is an inside-out configuration. 
Depending on the specific application, brushless de motors can be used when a low 
moment of inertia is needed, such as the spindle drive in high-performance disk drives used 
in computers. 
4-7-3 Mathematical Modeling of PM DC Motors 
De motors are extensively used in control systems. In this section we establish the 
mathematical model for de motors. As it will be demonstrated here, the mathematical model 
of a de motor is linear. We use the equivalent circuit diagram in Fig. 4-70 to represent a PM de 
Stator 
Pem1anent-magnet Figure 4-69 Cross-section view of a brushless , 
rotor permanent -magnet (PM), iron-core de motor. 
202 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
'-11 
+ il/J Magnetic 
tlux 
Figure 4-70 Model of a separately 
excited de motor. 
motor. The armature is modeled as a circuit with resistance R" connected in series with an 
inductanc e La, and a voltage source eh representing the back emf (electromotive force) in the 
aimature when the rotor rotates. The motor variables and parameters are defined as follows: 
ia(t) = annaturecun-ent 
Ra = armature resistance 
e1,(t) = backernf 
TL(t) = load torque 
Tm ( t) = motor torque 
Bm(t) = rotordispl acement 
Ki = torque constant La = armature inductance 
ea(t) = applied voltage 
K1, = back-emf constant 
cf> = magnetic flux in the air gap 
w,11 (t) = rotor ai1gular velocity 
J711 = rotor inertia 
B.,,, = viscous-friction coefficient 
With reference to the circuit diagram of Fig. 4-70, the control of the de motor is applied at 
the armature terminals in the form of the applied voltage ea(t). For linear analysis, we 
assume that the torque developed by the motor is proportional to the air-gap flux and the 
armature current. Thus, 
Tm(t) = Km(t)</>ia(t) (4-202) 
Because <P is constant, Eq. (4-202) is written 
T111(t) = K;ia(t) (4-203) 
where Ki is the torque constant in N-m/A, lb-ft/A, or oz-in/A. 
Starting with the control input voltage ealt), the cause-and-effect equations for the 
motor circuit in Fig. 4-70 are 
di0(t) 1 Ra. 1 --= -ea(t) --ia(t) --L e1,(t) dt La La a (4-204) 
Tm(t) = K;i0(t) (4-205) 
(4-206) 
(4-207) 
where TL(t) represents a load frictional torque such as Coulomb friction. 
4-7 DC Motors in Control Systems 203 
J... 
L" 
e" -I 
I -I s 
K/J,,, 
-K1/L,, =1 
JIil 
-I .I -1 s 
-I s -I ·' 
Figure 4-71 Signal-flow graph diagram of a de-motor system with nonzero initial conditions . 
Eqs. (4-204) through (4-207) consider that the applied voltage ea(t) is the cause; Eq. 
(4-204) considers that diaCt)!dt is the immediate effect due to ea(t); in Eq. (4-205), ia(t) 
causes the torque Tm(t); Eg. (4-206) defines the back emf; and, finally, in Eg. (4-207), the 
torque T,n(t) causes the angular velocity w111(t) and displacement 8111(t). 
The state variables of the system can be defined as ia(t), wm(t), and 8111(t). By direct 
substitution and eliminating all the nonstate variables from Eqs. (4-204) through (4-207), 
the state equations of the de-motor system are written in vector-matrix form: 
dia(t) Ra K1, 
dt 0 [() [1] [o] dw111(t) La La lat - l 
K; Bm Wm(t) l + 7; e,(t) + -Jm T,(t) (4-208) 
dt 0 
d8,n(t) lm lm em(t) o O 
0 1 0 
dt 
Notice that, in this case, Ti,(t) is treated as a second input in the state equations. 
The SFG diagram of the system is drawn as shown in Fig. 4-71, using Eg. ( 4-208). The 
transfer function between the motor displacement and the input voltage is obtained from 
the state diagram as 
®m(s) K; 
Ea(s) = Lalms3 + (Ralm + BmLa)s2 + (K1,K; + RaBm)s (4-209) 
where h(t) has been set to zero. 
Fig. 4-72 shows a block-diagram representation of the de-motor system. The advan­
tage of using the block diagram is that it gives a clear picture of the transfer function 
l 
Ra+ LaS K; 
Figure 4-72 Block diagram of a de-motor system. ! s 
204 !> Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
relation between each block of the system. Because an s can be factored out of the 
denominator of Eq. (4-209), the significance of the transfer function ®m(s)/ Ea(s) is that 
the de motor is essentially an integrating device between these two variables. This is 
expected because, if ea(t) is a constant input, the output motor displacement wiU behave as 
the output of an integrator; that is, it will increase linearly with time. 
Although a de motor by itself is basically an open-loop system. the SFG diagram of Fig. 
4-71 and the block diagram of Fig. 4-72 show that the motor has a "built-in" feedback loop 
caused by the back emf. Physically, the back emf represents the feedback of a signal that is 
proportional to the negative of the speed of the motor. As seen from Eq. (4-209), the back­
emf constant K,,. represents an added term to the resistance R" and the viscous-friction 
coefficientBm, Therefore, tlzeback-emfejfect is equivalent to an "electricfriction," which 
tends to improve the stability of the motor and in general, the stability of the system. 
Relation between Ki and Kb 
Although functionally the torque constant K1 and back-emf constant Kb are two separate 
parameters, for a given motor their values are closely related. To show the relationship, we 
write the mechanical power developed in the armature as 
(4-210) 
The mechanical power is also expressed as 
P = T,,i(t)a>m(t) 
where, in SI units, Tm(t) is in N-m and a>m(t) is in rad/sec. Now, substituting Eqs. (4-205) 
and (4-206) in Eq. (4-210), we get 
(4-212) 
from which we get 
Kb(V/rad/sec) = K;(N-m/A) 
Thus, we see that, in SI units, the values of Kb and K; are identical if Kb is represented in 
V/rad/sec and K; is in N-m/A. 
In the British unit system, we convert Eq. (4-210) into horsepower (hp); that is, 
P = eb(t)ia(t) h 
746 p 
In terms of torque and angular velocity, Pis 
P = Tm(t)wm(t) h 
550 p (4~214) 
where Tm(t) is in ft-lb and a>m(t) is in rad/sec. Using Eq. (4M205) and (4M206), and equating 
Eq. (4-214) to Eq. (4-215), we get 
Kbcvm(t)T,n(t) Tm(t)aJm(t) -----=----146Ki 550 (4-216) 
4-8 Systems with Transportation Lags (Time Delays) 205 
Thus, 
746 Kb = 550 K; = I .356K; (4-217) 
where Kt, is in V/rad/sec and Ki is in ft-lb/A. 
4-8 SYSTEMS WITH TRANSPORTATION LAGS (TIME DELAYS) 
Thus far, the systems considered all have transfer functions that are quotients of 
polynomials. In practice, pure time delays may be encountered in various types of systems, 
especially systems with hydraulic, pneumatic, or mechanical transmissions. Systems with 
computer control also have time delays, since it takes time for the computer to execute 
numerical operations. In these systems, the output will not begin to respond to an input 
until after a given time interval. Fig. 4-73 illustrates systems in which transportation lags or 
pure time delays are observed. Fig. 4-73(a) outlines an arrangement where two different 
fluids are to be mixed in appropriate proportions . To assure that a homogeneous solution is 
measured, the monitoring point is located some distance from the mixing point. A time 
delay therefore exists between the mixing point and the place where the change in 
concentration is detected. If the rate of flow of the mixed solution is v inches per second 
and dis the distance between the mixing and the metering points, the time lag is given by 
d Td = -seconds 
V (4-218) 
If it is assumed that the concentration of the mixing point is y(l) and that it is reproduced 
without change Td seconds later at the monitoring point, the measured quantity is 
b(t) = y{t -Td) 
Metering 
point )'(1.) 
Valve 
----d---~1 
(a) 
Thickness -Solution A 
Solution B 
1neasuring gauge 
--'J____,Y_I_J(r_)~~~~~~~~R _o_Ik_r_(o'JJ_::,.......o~'--~~-
-~LJ~-----' -· +-_______ ~·\-·(1) +-Steel plate 
Roller~ 
1~4------d-------
{b) 
Figure 4-73 Systems with transport ation lag. (4-219) 
206 ,.. Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
The Laplace transfonn of Eq. (4-219) is 
B(s) = e-T,1J·Y(s) (4-220) 
where Y(s) is the Laplace transform of y(t). The transfer function between b(t) and y(t) is 
(4-221) 
Fig. 4-73(b) illustrates the control of thickness of rolled steel plates. The transfer function 
between the thickness at the rollers and the measuring point is again given by Eq. (4-221). 
4-8-1 Approximation of the Time-Delay Function by Rational Functions 
Systems that are described inherently by transcendental transfer functions are more 
difficult to handle. Many analytical tools such as the Routh-Hurwitz criterion (Chapter 2) 
are restricted to rational transfer functions. The root-locus technique (Chapter 7) is also 
more easily applied only to systems with rational transfer functions. 
There are many ways of approximating e-TJs by a rational function. One way is to 
approximate the exponential function by a Maclaurin series; that is, 
(4-222) 
or 
(4-223) 
where only three terms of the series are used. Apparently, the approximations are not valid 
when the magnitude of Td-fj is large. 
A better approximation is to use the Pade approximation [5, 6], which is given in the 
following for a two-tenn approximation: 
e-TJs ~ 1 -Tds/2 
1 + Tds/2 (4-224) 
The approximation of the transfer function in Eq. (4-224) contains a zero in the right-half 
s-plane so that the step response of the approximating system may exhibit a small negative 
undershoot near t = 0. 
4-9 LINEARIZATIDN OF NONLINEAR SYSTEMS 
From the discussions given in the preceding sections on basic system modeling, we 
should realize that most components found in physical systems have nonlinear char­
acteristics. In practice, we may find that some devices have moderate nonlinear 
characteristics, or nonlinear properties that would occur if they were driven into certain 
operating regions. For these devices, the modeling by linear-system models may give 
quite accurate analytical results over a relatively wide range of operating conditions. 
4-9 Linearization of Nonlinear Systems ~ 207 
However, there are numerous physical devices that possess strong nonlinear character­
istics. For these devices, a linearized model is valid only for limited range of operation 
and often only at the operating point at which the linearization is carried out. More 
importantly, when a nonlinear system is linearized at an operating point, the linear 
model may contain time-varying elements. 
4-9-1 Linearization Using Taylor Series: Classical Representation 
In general, Taylor series may be used to expand a nonlinear function f(x(t)) about a 
reference or operating value x0(t). An operating value could be the equilibrium position in 
a spring-mass-damper, a fixed voltage in an electrical system, steady state pressure in a 
fluid system, and so on. A function fl.x(t)) can therefore be represented in a form 
,i 
f(x(t)) = :Ec;(x(t) -xo(t)/ (4-225) 
i=l 
where the constant c; represents the derivatives offi:x(t)) with respect to x(t) and evaluated 
at the operating point x0(t). That is 
Or 1 i f(xo) 
c; = TI dxi 
f(x(t)) =f(xo(t)) + df(~~(t))(x(t) -xo(t)) + ~ d2 
f!~(t))(x(t)- xo(t))2+ 
1 d3 f(xo(t))( ·( ) ( ))3 I d" f(xo(t})( ( ) ( ))n d 3 .X t -Xo I + · · • + I d X t -XO t 6 t· n. in (4-226) 
(4-227) 
If 8(x) = x(t) -xo(t) is small, the series Eq. (4-227) converges, and a linearization 
scheme may be used by replacing /(x(t)) with the first two terms in Eq. (4-227). 
That is, 
f(x(t)) ~ f(xo(t)) + d f(:(t)) (x(t) -xo(t)) 
=co+ ciAx 
4-9-2 Linearization Using the State Space Approach (4-228) 
Alternatively, let us represent a nonlinear system by the following vector-matrix state 
equations: 
dx(t) ~ = f[x(t), r(t)] (4-229) 
where x(t) represents then x I state vector; r(t), the p x 1 input vector; and f[x(t), r 
(t)], an n x I function vector. In general, f is a function of the state vector and the input 
vector. 
208 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Being able to represent a nonlinear and/or time-varying system by state equations is a 
distinct advantage of the state-variable approach over the transfer-function method, since 
the latter is strictly defined only for linear time-invariant systems. 
As a simple example, the following nonlinear state equations are given: 
dx1 (t) ~ = x1(t) +xi(t) 
dt2(t) -1-= xi (t) + r(t) t.t (4-230) 
(4-231) 
Because nonlinear systems are usually difficult to analyze and design, it is desirable to 
perform a linearization whenever the situation justifies it. 
A linearization process that depends on expanding the nonlinear state equations into a 
Taylor series about a nominal operating point or trajectory is now described. All the terms 
of the Taylor series of order higher than the first are discarded. and the linear approximation 
of the nonlinear state equations at the nominal point results. 
Let the nominal operating trajectory be denoted by x0(t), which corresponds to the 
nominal input r0(!) and some fixed initial states. Expanding the nonlinear state equation ofEq. 
(4-229) into a Taylor series about x(t) = xo(t) and neglecting all the higher-order terms yields 
. ( ~8.ft(x,r)I ( ) ~8Ji(x,r)I ( ) xi(t) = fi xo,ro} + ~ [) , Xj -Xoj + L.J 8 . ri -roj (4-232) 
~l XJ ~l ~ I xu.ro 1 xo,ro 
where i.::::: 1, 2, ... , n. Let 
Axt= Xi-XOi (4-233) 
and 
(4-234) 
Then 
.6.xt = x; -xo; 
Since 
.i-oi = Ji(xo, ro) 
Eq. (4-232) is written 
",.. _ ~ EJfi{x,r)I A. • ~ 8fi(x,r)I " . 1.J,.x, -~ a L.1.:t' J + ~ a urj 
·-1 Xj ·-t rj J- xn.ro J- xo.lil (4-237) 
Eq. (4-237) may be written in vector-matrix form: 
.di= A*.dx+B*.dr (4-238) 
4-9 Linearization of Nonlinear Systems .· 209 
where 
8f1 Bfi 8f1 
8x1 8x2 Dxn 
A*= 8/2 8fz 8J2 
(4-239) 8x1 8x2 8xn 
8fn 81,i 8fn 
8x1 8x2 8xn 
8/1 8f1 8/1 
8r1 8r2 8rp 
8h 8h 8/2 
B* = 8r1 8r2 8rp (4-240) 
8/n 8fn 8/n 
8r1 8r2 Drp 
The following examples serve to illustrate the linearization procedure just described. 
f;;.. EXAMPLE 4-9-1 Find the equation of motion of a pendulum with a mass m and a massless rod of length /, as shown in 
Fig. 4-74. 
SOLUTION Assume the mass is moving in the positive direction as defined by angle 0. Note that (J is 
measured from the x axis in the counter-clockwise direction. The first step is to draw the free-body 
diagram of the components of the system, i.e., mass and the rod, as shown in Fig. 4-74(b ). For the 
mass 111, the equations of motion are 
LF.t =max 
LF.v = may (4-241) 
(4-242) 
where F_"' and F'_v are the external forces applied to mass m, and ax and ay are the components of 
acceleration of mass m in x and y, respectively. Acceleration of mass m is a vector with tangential and 
centripetal components. Using the rectangular coordinate frame (x, y) representation, acceleration vector is 
a= (-£8sine-te2sin8)t+ (t8cos8-tilsin8)} (4-243) 
where l and J are the unit vectors along x and y directions, respectively. As a result, 
X 
(a) \ 
\ ax = ( -f.Bsine -et?sine) (4w244> 
( .. ·2 :\ ay = £ecos8 -.ee sine1 
y 
m 
mg 
(b) Figure 4-74 (a) A spring-supported pendulum. 
(b) Free-body diagram of mass m. 
210 lit-· Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Considering the external forces applied to mass, we have 
LFx = -F7cose+mg 
LF'.v = -Fr sine 
Eqs. (4-241) and (4-242) may therefore be rewritten as (4-246) 
(4-247) 
-Frcos8 +mg= m(-R.Bsin9- ttf sine) (4-248) 
-Fr sin()= m( f!9cose -it:f sin()) (4-249) 
Premultip1ying Eq. (4-185) by (-sintl) and Eq. (4-186) by (cos 8) and adding the two. we get 
-mg sine= m£8 (4-250) 
where (sin2e + cos 2e = l). After rearranging, Eq. (4-250) is rewritten a~ 
mf9+mgsin9 = 0 
Or 
9 +~sine= o f (4-251) 
(4-252) 
In brief, using static equilibrium position e;:::; 0 as the operating point, for small motions the 
linearization of the system implies d9 = e ~ sine. Hence, the linear representation of the system is 
.. g e+'ie =O. 
Alternatively in the state space form, we define x1 = 9 andx2 = iJ as state variables, and as a result the 
state space representation of Eq. (4-252) becomes 
X1 =X2 
. g • 
x2 = -l smx1 (4-253) 
Substituting Eq. (4-253) into (4-173) with r(t) ::::: 0, since there is no input (or extemal excitations) in 
this case, we get 
(4-254) 
(4-255) 
where Ax1 (t) and at2(t) denote nominal values of x1(t) and x2(t), respectively. Notice that the last 
two equations are linear and are valid only for small signals. In vectorwmatrix form. these linearized 
state equations are written as 
where [a.ti (t)] [o 1] [at1 (1)] 
l\..t2(t) = a O d.t2(t) 
a = E. = constant 
I. (4-256) 
(4-257) 
It is of interest to check the significance of the linearization. If x01 is chosen to be at the origin of the 
nonlinearity. xo1 = 0, then a= K; Eq. (4-255) becomes 
Ax2(t) = KAx1 (t) (4-258) 
Switching back to classical representation, we get e +Ke= 0 (4-259) 
~·~ EXAMPLE 4-9-2 For the pendulum shown in Fig. 4-74, re-derive the differential equation using the moment equation. 
SOLUTION The free-body diagram for the moment equation is shown in Fig. 4-74. Applying the 
moment equation about the fixed point 0, 
(4-260) 
4-9 Linearization of Nonlinear Systems · 211 
Rearranging the equation in the standard input-output differential equation form. 
me2e + ,ngf, sin 8 = 0 
or (4-261) 
8 + l sine= 0 (4-262) 
which is the same result obtained previously. For small motions, as in Example 4-9-1. 
sinB ~ e (4-263) 
The linearized differential equation is 
•• 2 () + w,lJ = 0 (4-264) 
where 
(4-265) 
EXAMPLE 4-9-3 In Example 4-9-1, the linearized system turns out to be time-invariant. As mentioned earlier, 
linearization of a nonlinear system often results in a linear time-varying system. Consider the 
following nonlinear system: 
-1 
.i'i(t) = .2( ) 
.'\:2 t 
x2(t) = u(t).:q (t} (4-266) 
(4-267) 
These equations are to be linearized about the nominal trajectory [xo1 (t), xo2(t)], which is the solution 
to the equations with initial conditions xI(O) = x2(0) = 1 and input u(t) = 0. 
Integrating both sides of Eq. (4~267) with respect to t, we have 
x2(t) = x2(0) = 1 (4-268) 
Then Eq. (4-266) gives 
.t1 (t) = -t + I (4-269) 
Thctcfore. the nominal trajectory aboul which Eqs. (4-266) and (4-267) are to be linearized is described by 
X()J (t) = -t + 1 (4-270) 
xo2 ( t) = 1 ( 4-271 ) 
Now evaluating the coefficients of Eq. (4-237}. we get 
Eq. (4-237) gives 8/I(t)=O 8J1(t)=_2_ Bfi(t)=urt) 8/2(1) . 
{) ( ) !~ ( ) 3 a ( ) \ Du(t) = x, (r) XI t UX'J,. t Xz(t) XI t 
d.~1 (t) == 3 2, ) ~2(t) roz 1 
.6..t2(t) = uo(t).ixI (t) + xo1 (t)Au(t) (4-272) 
(4-273) 
(4-274) 
By substituting Eqs. (4-270) and (4-271) into Eqs. (4-273) and (4-274), the linearized equations are 
[a.~I (t)] = [o 2] [~1 (t)] + [ 0 ] llu(r) (4-275) 
LU:2 (1) o o ax2 (t) 1 -r 
which is a set of linear state equations with time-varying coefficients. 
Fig. 4-75 shows the diagram of a magnetic-ball-suspension system. The objective of the system 
is to control the position of the steel ball by adjusting the current in the electromagnet through the 
input voltage e(t}. The differential equations of the system are 
d2y(t) i2(t) M---Mg - - (4-276) dt2 - y(t) 
di(t) e(t) = Ri(t) + Ldt (4-277) 
212 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
+ 
T Electromagnet 
y 
l Steel Ball 
Mg 
Figure 4-75 Magnetic-ball-suspension system. 
where 
e(t) = input voltage 
y(t) = ball position 
-i(l) = wimliug cum:nl 
R winding resistance 
L winding inductance 
M mass of ball 
g gravitational acceleration 
Let us define the state variables as x1(1) = y(t), x2(r) = dy(t)/dt, and X3(t) = i(t). The state 
equations of the system are 
dxi (t) = x2(t) 
dt 
dx2(t) I x~(t) --=g--- ·-dt M xi (t) 
dxJ(t) = -~x-(t) +!e(t) 
dt L ·' L 
Let us linearize the system about the equilibrium point Yo(t) = xo1 = constant. Then, 
xo2(t) = d.xoi (t) = 0 
dt 
d2yo(t) = 0 dt2 
The nominal value of i(t) is determined by substituting Eq. (4-282) into Eq. (4-276) 
d'(t) e(i) = Ri(t) + L-1
-dt 
Thus, 
io(t) = xo3(t) = JMgxoi (4-278) 
(4-279) 
(4-280) 
(4-281) 
(4-282) 
(4-283) 
(4-284) 
4-10 ANALOGIES 4 .. 10 Analogies -,. 213 
The linearized state equation is expressed in the form of Eq. (4-238), with the coefficient matrices A* 
and B* evaluated as 
[ 0 
2 
Xo3. 0 
A*= M:,/· 01 
0 0 0 l [ 0 -2X03 g 
Mx;1 = x01 
-- 0 L (4-285) 
B' ~ [i] (4-286) 
Comparing Eqs. (4-11), (4-41), and (4-65), it is not difficult to see that the mechanical 
systems in Eqs. (4-11) and (4-41) are analogous to a series RLC electric network shown in 
Example 4-2-1. As a result, with this analogy, mass M and inertia J are analogous to 
inductance L, the spring constant K is analogous to the inverse of capacitance 1/C, and the 
viscous-friction coefficient B is analogous to resistance R. 
r EXAMPLE 4-10-1 It is logical, in Example 4-1-1. to assign v(t), the velocity, andfk(t). the force acting on the spring, as 
state variables, since the former is analogous to the current in L and the latter is analogous to the 
voltage across C. Writing the force on Mand the velocity of the spring as functions of the state 
variables and the input force f(t), we have 
Force on mass: 
Velocity of spring: dv(t} M-= -[k(t) -Bv(t) + f(t) dt 
_!_ d/k (t) = v(t) 
K dt (4-287) 
(4-288) 
The final equatfon of motion Eq. (4-11) may be obtained by dividing both sides of Eq. (4·287) by M 
and multiplying Eq. (4-288) by K. Hence, in terms of displacement y(t), 
d2y(t) + !!_ dy(t} + K y(t) = f(t) 
dt2 M dt M M ( 4-289) 
Considering Example 4-2-1. after rewriting Eq. (4-67) as 
di(t) Ldt = -ec(t} -Ri(t) + e(t) 
and using the current relation Eq. (4-66): 
Cdec(t) "( ) --=lt tit (4-291) 
the comparison ofEq. (4-287) with Eq. (4-290) and Eq. (4-288) with Eq. (4-291) clearly shows the 
analogies among the mechanical and electrical component~. ·' 
~,. EXAMPLE 4-10-2 As another example of writing the dynamic equations of a mechanical system with translational 
motion, consider the system shown in Fig. 4-9(a). Because the spring is deformed when it is subject 
to a force ftt), two displacements, y1 and y2, must be assigned to the end points of the spring. The 
214 Chapter 4. Theoretica l Foundation and Background Material: Modeling of Dynamic Systems 
+ 
+ e(t) C R 
e,. L 
Figure 4-76 Electric network analogous to 
the mechanical system in Fig. 4-10. 
free-body diagram of the system is shown in Fig. 4-9(h). The force erJlrnlions are 
f(t) = K[y, (t) -:V2 (t)] (4-292) 
d2y1(1) d}'1(1) Klr1 (t) -Y2(t)] = M-t,:r-+ B~ (4-293) 
These equations are rearranged as 
1 . y, (r) = yz(t) + K .f (1) (4-294) 
cl2y2(t) = _ B dy2(t) + !5_ [yi (t) _ y1(t)) 
dt2 M dt M (4-295) 
By using the last two equations , the SFG diagram of the system is drawn in Fig. 4-lO(a). The state 
variables are defined as x1 (1) = Y2(t) and x2 (t) = dY2(t)/dt. The state equations are written directly 
from the state diagram: 
(4-296) 
(4-297) 
As an alternative, we can assign the velocity v(t) of the mass Mas one state variable and the forcej",_(t) 
on the spring as the other state variable. We have 
dv(t) = _ !!._ v(t) + ~ fk(t) (4-298) 
dt M M 
Ji (t) = f(t) (4-299) 
One may wonder why there is only one state equation in Eq. (4-287), whereas there m-e two state variables 
in v(t) andfk(t). The two state equations of Eqs. (4-296) and (4-297) clearly show that the system is of the 
second order. The situation is better explained by refening to the analogous electric network of the system 
shown in Fig. 4-76. Although the network has two energy-storage elements in Land C, and thus there 
should be two state variables , the voltage across the capacitance ec(l) in this case is redundant , since it is 
equal lo the applied voltage e(1). Eqs. (4-298) and (4-297) can provide only the solutions to the velocity of 
M, v(L), which is the same as dyz(t)ldt, once fit) is specified. Then y2(t) is deternuned by integrating v(t) 
with respect to I. The displacement y1(1) is then found using Eq. (4-292). On the other hand, Eqs. (4-296) 
and (4-297) give the solutions to y2(t) and dyi(t)ldt directly, and y1(1) is obtained from Eq. (4-292). 
The transfer functions of the system are obtained by applying the gain fonnula to the state diagram. 
Y2(s) 1 
F{s) s(Ms + B) 
Ms2 +Bs+ K 
Ks(Ms + B) (4-300) 
(4-301) 
EXAMPLE 4-10-3 Dry air passes through a valve into a rigid J m3 container, as shown in Fig. 4-T/, at a constant 
A Pneumatic System temperature T = 25°C( = 298°K). The pressure at the left-hand side of the valve is p;, which is higher 
than the pressure in the tank p. Assuming a laminar flow, the valve resistance becomes linear, 
R = 200 sec/m2. Find the time constant of the system. 
4-10 Analogies · 215 
Figure 4-77 A pneumatic system with a valve and a 
sphe1·ical rigid tank. 
SOLUTION Assuming air as an ideal gas, isothermal process, and low pressures, from Example 4-5-5, 
the equation o[ the system is 
RV . --p+p= Pi RairT (4-302) 
where air at standard pressure and temperature is represented as an ideal gas, 
p l pv = -== RairT P = --P P RairT (4-303) 
Thus. the time constant is 
_ RV _ (200){1) _ 0_3 . 
i--R";,.T -88.63(298) -7.5(l )sec (4-304) 
where, from reference [ 1] at the end of this chapter. 
R.· = 53_35 ftlbr 0.3048m 4.45N kgm/sec2 lbru 0R = 88_63±._ 
air Ihm 0R ft lbr N 0.4536kg °K(9/5) sec2°K 
EXAMPLE 4-10-4 For the liquid-level system shown in Fig. 4-45, C = A/g is the capacitance and p == R is the 
A One-Tank Liquid-Level resistance. As a result, system time constant isi-=RC.Comparing the thermal, fluid, and electrical 
System systems, similar analogies may be obtained, as shown in Table 4-8. 
TABLE 4-8 Mechanical, Thermal, and Fluid Systems and Their Electrical Equivalents 
System 
Mechanical (translation) 
Mechanical (rotation) 
Fluid (incompressible) R.C,L 
F = Bv(t) 
R=B 
F = 1( /v(t)dt 
1 C=-1( 
v(t) = }1 J Fdt 
L=M 
T = Bw(t) 
R=B 
T = K j w(t)dt 
C=_!__ 1( 
I w=-Tdt J 
L = .J 
il.P = Rq(t) (laminar flow) 
R depends on flow regime 
q(t) = cP 
C depends on flow regime 
L pf (fi . . = A ow ma pipe) Analogy 
e= >F 
i(t) = > v(t) 
where 
e = voltage 
i(t) = current 
F = force 
·v( t) = linear ve loci.ty 
e= >T 
i(t) = > w(t) 
where 
e = voltage 
i(t) = current 
T = torque 
w(t) = angularvelocity 
r! = > LlP 
i(t) = > q(t) 
where 
f~ = voltage 
i(t) = current 
( Ccmtinued) 
216 . Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
TABLE 4-8 (Continued) 
System R,C,L Analogy 
where P = pressure 
A = area of cross section 
l = length q( t) = volume flow rate 
p = fluid density 
Thermal R=AT 
q 
T=bf qdt 
4-11 CASE STUDIES e= >T 
i(t) = > q(t) 
where 
e = voltage 
i(t)::::: current 
T = temperature 
q( t) = heat flow 
EXAMPLE 4-11-1 Consider the system in Fig. 4-78. The purpose of the system considered here is to control the positions 
of the fins of a modem airship. Due to the requirements of improved response and reliability, the 
surfaces of modern aircraft are controlled by electric actuators with electronic controls. Gone are the 
days when the ailerons. rudder. and elevators of the aircraft were all linked to the cockpit through 
mechanical linkages. The so-called fly-by-wire control system used in modem aircraft implies that 
the attitude of aircraft is no longer controlled entirely be mechanical linkages. Fig. 4-78 illustrates the 
controlled surfaces and the block diagram of one axis of such a position-control system. Fig. 4-79 
shows the analytical block diagram of the system using the de-motor model given in Fig. 4-72. The 
system is simplified to the extent that saturation of the amplifier gain and motor torque, gear backlash, 
and shaft compliances have all been neglected. (When you get into the real world, some of these 
nonlinear effects should be incorporated into the mathematical model to come up with a better 
controller design that works in reality. The reader should refer to Chapter 6, where these topics are 
discussed in more detail.) 
The objective of the system is to have the output of the system, 9y(t). follow the input, 9r(t). The 
following system parameters are given initially: 
Gain of encoder 
Gain of preamplifier 
Gain of power amplifier 
Gain of current feedback 
Gain of tachometer feedback 
Armature resistance of motor 
Armature inductance of motor 
Torque constant of motor 
Back-emf constant of motor 
Inertia of motor rotor 
Inertia of load 
Viscous-friction coefficient of motor 
Viscous-friction coefficient of load 
Gear-train ratio between motor and load l(o; = 1 V /rad 
K = adjustable 
K1 = IOVN 
K2 = 0.5V/A 
Kt = 0 V/rad/sec 
Ra= 5.00 
La= 0.003H 
Ki = 9.0 oz-in.IA 
K1, = 0.0636 V/rad/sec 
.Im = 0.0001 oz-in.-sec2 
h = 0.01 oz-in.-sec2 
Bm = 0.005 oz-in.-sec 
BL = 1.0 oz-in.-sec 
N = Oy/Om = 1/10 
Bt:cause the motor shaft is coupled to the load through a gear u·ain with a gear ratio of N, Oy = NOm, 
the total inertia and viscous-friction coefficient seen by the motor are 
J, = lm + N2h = 0.0001 + 0.01/100 = 0.0002oz-in.-sec2 
B, = Bm + N2 BL = 0.005 + 1 /100 = 0.015 oz-in.-sec (4-305) 
Command + 4-11 Case Studies 217 
PREAMP Conrrol 
surface ~~ Com,ul~ 
POWER AMPLIFIER 
WITH CURRENT FB 
TACHOMETER DC 
MOTOR GEAR 
TRAIN 
Figure 4-78 Block diagram of an attitude-control system of an aircrnft. 
Power amplifier 
Current feedback 
Tachomet er feedback l;S+B, LOAD 
Figure 4-79 Transfer-function block diagram of the system shown in Fig. 4-78. o, 
Position 
of control 
surface 
respectively. The forward-path transfer function 
Fig. 4-79 by applying the SFG gain formula: of the unity-feedback system is written from 
e,.(s) 
E>e(s) G(s) 
- ~~K~ (4-306) 
-s[La 11 s2 + (Ra J, + La B, + Ki K2l1 )s + RaBt + K1 K2B, + K;Kb + KK1 K,K;] 
The system is of the third order, since the highest-order term in G(s) is s3• The electrical time constant 
of the amplifier-motor system is 
0.003 --= 0.0003 sec 5+5 
The mechanic al time constant of the motor-load system is 
11 0.0002 r, = -= -0--= 0.01333 sec 
B1 .015 (4-307) 
(4-308) 
EXAMPLE 4-11-2 In this case study, we shall model a sun-seeker control system whose purpose is to control the attitude 
of a space vehicle so that it will track the sun with high accuracy. In the system described here, 
tracking the sun in only one plane is accomplished . A schematic diagram of the system is shown in 
218 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Figure 4-80 Schematic 
diagram of a sun-seeker 
system. Error discriminator 
---
--,.--
Sun Ray ---L------W Output gear 
1/n Solar axis 
t ___. ---r 
Vehicle axis 
~el/I 
I -------- -- - -::_i_.. 8,,, 
I 
1ctc motor 
+ + Servo 
<',. C's amplifier 
-K 
Tachometer 1:, 
Fig. 4-80. The principal elements of the error discriminator are two small rectangular silicon 
photovoltaic cells mounted behind a rectangular slit in an enclosure. The cells are mounted in such a 
way that when the sensor is pointed at the sun, a beam of light from the slit overlaps both cells. Silicon 
cells are used as current sources and connected in opposite polarity to the input of an op-amp. Any 
difference in the short-circuit current of the two cells is sensed and amplified by the op-amp. Because 
the current of each cell is proportional to the illuminat ion on the cell, an error signal will be present at 
the output of the amplifier when the light from the slit is not precisely centered on the cells. This error 
voltage, when fed to the servoamplifier, will cause the motor to drive the system back into alignment. 
The description of each part of the system is given in the fol1owing sections. 
Coordinate System 
The center of the coordinate system is considered to be at the output gear of the system. The 
reference axis is taken to be the fixed frame of the de motor, and all rotations are measured 
with respect to this axis. The solar axis, or the line from the output gear to the sun, makes an 
angle (},.(t) with respect to the reference axis, and e0(t) denotes the vehicle axis with respect 
to the reference axis. The objective of the control system is to maintain the error between 
e,.(t) and e0(t), o:(t), near zero: 
o:(t) = Br(t) -B0(t) 
The coordinate system described is illustrated in Fig. 4-81. 
Error Discriminator ( 4-309) 
When the vehicle is aligned perfectly with the sun, o:(t) = 0, and i0(t) = i1,(t) = I, or 
ia(t) = h(t) = 0. From the geometry of the sun ray and the photovoltaic cells shown in 
Fig. 4-81, we have 
w oa = 2 + L tan a(t) (4-310) 
w ob = 2 -L tan o: ( t) (4-311) 
Center of 
output gear Solar 
axis 
Fixed axis of 
de motor frame 
Figure 4-81 Coordinate system of the sun-seeker system. 4-11 Case Studies ·~~ 219 
Vehicle 
axis 
where oa denotes the width of the sun ray that shines on cell A and ob is the same on cell B, 
for a given a(t). Because the current ia(t) is proportional to oa and ib(t) is proportional to 
ob, we have 
2LJ ia(t) =I+ W tana(t) (4-312) 
2L/ ib(t) = I -W tan a(t) (4-313) 
forO ~ tana(t) :::; W /2L. For W /2L :S tana(t) ~ (C -W /2)/L, the sun ray is completely 
on cell A, and ia(t) = 21, i1,(t) = 0. For (C -W /2)L S tana(t) :S (C + W /2)L, i0(t) 
decreases linearly from 21 to zero. ia(t) = ib(t) :::: 0 for tana(t) 2 (C + W /2)/L. There­
fore, the error discriminator may be represented by the nonlinear characteristic of Fig. 
4-82. where for small angle a(t), tan a(t) has been approximated by a(t) on the abscissa. 
The relationship between the output of the op-amp and the currents ia(t) and ib(t) is 
_.[_W _£+W 
L 2L L 2L a -----------~---------------....._---------E'---------------------------'------~ £_}!'. 
L 2L £+.!:!'.'. L 2L (4-314) 
Figure 4-82 Nonlinear characteristic of the error discriminator. The abscissa is tan a, but it 
is approximated by a for small values of a. 
220 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
e, 
Figure 4-83 Block diagram of the sun-seeker system. 
Servoamplifier 1 
Js+B 
The gain of the servoamplifier is -K. With reference to Fig. 4-83, the output of the 
servoamplifier is expressed as 
ea(t) = -K[e0(t) + e1(t)] = -Kes(t) (4-315) 
Tachometer 
The output voltage of the tachometer e1 is related to the angular velocity of the motor 
through the tachometer constant K1: 
er(t) = K,cv111(t) (4-316) 
The angular position of the output gear is related to the motor position through the gear 
ratio 1/n. Thus, 
DC Motor 
The de motor has been modeled in Section 4-6. The equations are 
dw111(t) Tm(t) = ]--+ Bwm(t) dt (4-317) 
(4-318) 
(4-319) 
(4-320) 
(4-321) 
where J and Bare the inertia and viscous-friction coefficient seen at the motor shaft. The 
inductance of the motor is neglected in Eq. (4-318). A block diagram that characterizes all 
the functional relations of the system is shown in Fig. 4-83. 
EXAMPLE 4-11-3 Classically, the quarter-car model is used in the study of vehicle suspension systems and the resulting 
dynamic response due to various road inputs. Typically, the inertia, stiffness, and damping character ­
istics of the system as illustrated in Fig. 4-84(a) are modeled in a two degree of freedom (2-DOF) 
system, as shown in (b). Although a 2-DOF sy~tem is a more accurate model, it is sufficient for the 
following analysis to assume a 1-DOF model, as shown in (c). 
4-11 Case Studies 221 
nt1• _ix,. 
_ix..,. m __j_x 
mw k 
kn _iy Cw __j_y 
(a) (b) (c) 
Figure 4-84 Quarter-car model realization. (a) Quarter car. (b) Two degrees of freedom. (c) One 
degree of freedom. 
Open-Loop Base Excitation 
Given the system illustrated in Fig. 4-84(c). where 
m Effective 1A car mass lO kg 
K Effective stiffness 2.7135 Nim 
C Effective damping 0.9135 N-m/s-1 
x(t) Absolute displacement of the mass m m 
y(t) Absolute displacement of the base m 
:(!) Relative displacement (x(t)-y(t)) m 
the equation of motion of the system is defined as follows: 
mx(t) + d(t) + kr(t) = cy(t) + ky(t) (4-322) 
which can be simplified by substituting the relation z(t) = x(t) -y(t) and non-dimension­
alizing the coefficients to the form 
z(t) + 2twnz(t) + cv~z(t) = -y(t) = -a(t) (4-323) 
The Laplace transform of Eq. (4-323) yields the input-output relationship 
Z(s) -1 --= 2 .., A(s) s + 2~wns + w;; (4-324) 
where the base acceleration A(s) is the Laplace transform of a(t) and is the input. and 
relative displacement z(s) is the output. 
Closed-Loop Position Control 
Active control of the suspension system is to be achieved using the same de motor 
described in Section 4-7 used in conjunction with a rack as shown in Fig. 4-85. 
k C 
Figure 4-85 Active control of the 1-DOF model via a de motor 
and rack. 
222 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
In Fig. 4-85, T(t) is the torque produced by the motor with shaft rotation (3, and r is the radius of 
the motor drive gear. Thus, Eq. (4-322) is rewritten to include the active component,f(t), 
mi+ ci + kx = cy + ky + f(t) (4-325) 
where 
mz +ct+ kz = f(t) -In)!= f(t) -ma(t) (4-326) 
( ) T(t) -(11110 + Bme) ft = . 
r (4-327) 
Because z = f3r, we can substitute Eq. (4-327) into Eq. (4-326), rearrange, and take the 
Laplace transform to get 
r Z(s) - (T(s) -mrA(s)] · -(mr2 + lm)s2 + (cr2 + B111)s + kr2 (4-328) 
Noting that Z(s) / r = E>(s ), this is analogous to previous input-output relationships where 
E>(s) = Geq(T(s)-Td(s)); hence, the term m1A(s) is interpreted as a disturbance torque. 
The block diagram in Fig. 4-86 can thus be compared to Fig. 4-85, where 
J = mr2 + 1111, B = cr2 + B111, and K = k,2. Using the principle of superposition, this 
system is rearranged to the following form: 
K111r 
Z(s) = (L ) R, K K V,,(.<) 
~s+ 1 (Js2 +Bs+K) +~s Ra Ra 
(La ) -s+ 1 r 
Ra mrA(s) 
(La )( 2 KmKb -s+l Js +Bs+K)+-R-s 
Ra a (4-329) 
4-12 MATLAB TOOLS 
Apart from the MATLAB toolboxes appearing with the chapter, this chapter does not 
contain any software because of its focus on theoretical development. In Chapters 6 and 9, 
where we address more complex control-system modeling and analysis, we will introduce 
the Automatic Control Systems MATLAB and SIMULINK tools. The Automatic Control 
mrA(s)= T,,(s) 
E(s) ~ T(s) + 
Las+Ra r 
Js2 +Bs+K 
Figure 4-86 Block diagram of an armature-controlled de motor. 
4-13 SUMMARY Review Questions -~ 223 
Systems software (ACSYS) consists of a number of m-files and GUis (graphical user 
interface) for the analysis of simple control engineering transfer functions. It can be 
invoked from the MATLAB command line by simply typing Acsys and then by clicking on 
the appropriate pushbutton. A specific MATLAB tool has been developed for most chapters 
of this textbook. Throughout this chapter. we have identified subjects that may be solved 
using ACSYS, with a box in the left margin of the text titled "MATLAB TOOL." 
The most relevant components of ACSYS to the problems in this chapter are Virtual 
Lab and SIMLab, which are discussed in detail in Chapter 6. These simulation tools 
provide the user with virtual experiments and design projects using systems involving de 
motors, sensors, electronic components~ and mechanical components. 
This chapter is devoted to the mathematical modeling of physical systems. The basic mathematical 
relations of electrical, mechanical, thermal, and fluid systems are described using differential equations, 
state equations. and transfer functions. Analogies were used to relate the equations of these systems. 
The operations and mathematical descriptions of some of the commonly used components in control 
systems, such as error detectors, tachometers, and de motors, are presented in this chapter. 
This chapter includes various examples. However, due to space limitations and the intended scope 
of this text, only some of the physical devices used in practice are described. The main purpose of this 
chapter is to illustrate the methods of system modeling, and the coverage is not intended to be exhaustive. 
Because nonlinear systems cannot be ignored in the real world, and this book is not devoted to 
the subject, Section 4~9 introduced the linearization of nonlinear systems at a nominal operating 
point. Once the linearized model is detennined, the performance of the nonlinear system can be 
investigated under the small-signal conditions at the designated operating point. 
Systems with pure time delays are modeled, and methods of approximating the transfer 
functions by rational ones are described. 
In the end. three case study examples were presented that reflect mathematical modeling of 
practical applications. 
REVIEW QUESTIONS 
1. Among the three types of friction described. which type is governed by a linear mathematical 
relation? 
2. Given a two~gear system with angular displacement 61 and 92, numbers of teethN 1 and N2, and 
torques T1 and T2, write the mathematical relations between these variables and parameters. 
3. How are potentiometers used in control systems? 
4. Digital encoders are used in control systems for position and speed detection. Consider that an 
encoder is set up to output 3600 zero crossings per revolution. What is the angular rotation of the 
encoder shaft in degrees if 16 zero crossings are detected? 
5. The same encoder described in Question 4 and an electronic clock with a frequency of 1 MHz 
are used for speed measurement. What is the average speed of the encoder shaft in rpm if 500 clock 
pulses are detected between two consecutive zero crossings of the encoder? 
6. Give the advantages of de motors for control-systems applications. 
7. What are the sources of nonlinearities in a de motor? 
8. What are the effects of inductance and inertia in a de motor'? 
9. What is back emf in a de motor, and how does it affect the perlormance of a control system? 
10. What are the electrical and mechanical time constants of an electric motor? 
11. Under what condition is the torque constant K; of a de motor valid, and how is it related to the 
back-emf constant K&? 
224 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
•·· REFERENCES 
J;,-· PROBLEMS 12. An inertial and frictional load is driven by a de motor with torque T111• The dynamic equation of 
the system is 
dwm(t) Tm(t) =Jm~+BmWm 
If the inertia is doubled, how will it affect the steady-state speed of the motor? How will the steady­
state speed be affected if, instead, the frictional coefficient Bm is doubled? What is the mechanical 
constant of the system? 
13. What is a tachometer, and how is it used in control systems? 
14. Give the transfer function of a pure time delay Tc1-
lS. Does the linearization technique described in this chapter always result in a linear time­
invariant system? 
The answers to these review questions can be found on this book's companion Web site: 
www.wiley.com/college/golnaraghi. 
1. W. J. Palm III, Modeling, Analysis, and Control of Dynamic Systems, 2nd Ed., John Wiley & Sons. New York, 
1999. 
2. K. Ogata, Modern Control Engineering, 4th Ed., Prentice Hall. NJ. 2002. 
3. I. Cochin and W. Cadwallende1·, Ant1(vsis and Design of Dynamic Systems, 3rd Ed., Addison-Wesley. 1997. 
4. A. Esposito, Fluid Power with Applications, 5th Ed., Prentice Hall. NJ, 2000. 
5. H. V. Vu and R. S. Esfandiari, Dynamic- SJ·stems, Irwin/McGraw.Hill, 1997. 
6. J. L. Shearer, B. T. Kulakowski, and J. F. Gardner, Dynamic Modeling and Co11trol of Engineering Systems. 
2nd Ed., Pi-entice Hall, NJ, 1997. 
7. R. L. Woods and K. L. Lawrence, Modeling anti Simulation of Dynamic Systems, Prentice Hall, NJ. 1997. 
8. E. J. Kennedy, OperC1tiona/ Amplifier Circuits. Holt. Rinehart and Winston, Fort Worth, TX. 1988. 
9. J. V. Wait. L. P. Huelsman, and G. A. Kom, Introduction to Opemtional Amplifier Theory and Applications, 
2nd Ed .. McGraw·Hill. New York, 1992. 
I 0. B. C. Kuo. Automatic Control S)·stems. 7th Ed .• Prentice Hall. NJ, 1995. 
11. B. C. Kuo and F. Golnaraghi, Automatic Control S:,:stems, 8th Ed., John Wiley and Sons. NY. 2003. 
PROBLEMS FOR SECTION 4-1 
4-1. Consider the mass-spring system shown in Fig. 4P-1. 
6 i;(l) 
Figure 4P-1 
(a) Find the equation of the motion. 
(b) Calculate its natural frequency. 
4-2. Consider the five-spring one-mass system shown in Fig. 4P-2. 
(a) Find its single spring-mass equivalent. 
(b) Calculate its natural frequency. 
Problems 225 
Figure 4P-2 
4-3. Fig. 4P-3 shows a simple model of a vehicle suspension system hitting a bump. If the mass of 
the wheel and its mass moment of inertia are m and J, respectively, then: 
(a) Find the equation of the motion. 
(b) Determine the transfer function of the system. 
(c) Calculate its natural frequency . 
(d) Use MATLAB to plot the step response of the system. 
Figure 4P-3 
4-4. Write the force equations of the linear translmional systems shown in Fig. 4P-4. 
K 
/(1) 
(a) 
./{!) 
(b) (c) 
Figure 4P-4 
226 Chapter 4. Theoretica l Foundation and Background Material: Modeling of Dynamic Systems 
(a) Draw the system block diagrams or SFGs. 
(b) Define the state variables as follows: 
(i) x1 = Y2, x2 = dy2f dt, x3 =YI, and X4 = dy, /dt 
(ii) x1 = Y2, x2 =YI, andx3 = dyif dt 
(iii) x1 = )'1, x2 = Y2, andx3 = dy2/d1 
(c) Write the state equations . Find the transfer functions Y1(s)/ F(s) and Y2(s)/ F(s). 
4-5. Write the force equations of the linear translational system shown in Fig. 4P-5. Draw system 
block diagrams. Write the state equations. Find the transfer functions Y1(s)/ F(s) and Y2(s)/ F(s). Set 
Ml{ = 0 for the transfer functions . 
82 
B 
M 
T T y, 
Y2 K, B1 
K, 
T 
V . I Y1 
f(t) +Mg f(t) + Mg 
(a) (b) 
Figure IIP-5 
4-6. Consider a train consisting of an engine and a car, as shown in Fig. 4P-6. 
Figure 4P-6 
A controller is applied to the train so that it has a smooth stmt and stop, along with a constant-speed 
ride. The mass of the engine and the car are Mand m, respectively. The two are held together by a 
spring with the stiffness coefficient of K. F represents the force applied by the engine, and µ 
represents the coefficient of rolling friction. If the train only travels in one direction: 
(a) Draw the free-body diagram. 
(b) Find the state variables and output equations. 
(c) Find the transfer function. 
(d) Write the state-space equations of the system. 
Problems 227 
4-7. A vehicle towing a trailer through a spring-damper coupling hitch is shown in Fig. 4P-7. The 
following paramete rs and variables are denned: Mis the mass of the trailer; K1,, the spring constant of 
the hitch; B1,, the viscous-damping coefficient of the hitch; B,, the viscous-friction coefficient of the 
trailer; y1 (t), the displacem ent of the towing vehicle; Y2U), the displacement of th~ trailer; and fit), the 
force of the towing vehicle. 
fi.t),Y1 (t) Yit) 
~ ~-+-i--11.----T-R~-LER-,I ~ Lu-J (•) (•)-; --~~--- -----B,, ---------'....._ __ _,,.._.'----
figure 4P-7 
(a) Write the differential equation of the system. 
(b) Write the state equations by defining the following state variables: .1:1 (t) = yi (t) -Y2(t) and 
Xz(l) = dy2(t)dt. 
4-8. Assume that the displacement angle of the pendulums shown in Fig. 4P-8 are small enough that 
the spring always remains horizontal. If the rods with the length of Lare massless and the spring is 
attached to the rods i from the top, find the state equation of the system. 
Ill m 
Figure 4P-8 
4-9. Fig. 4P-9 shows an inverted pendulum on a cart. 
0 M 
f Motor 
0 
Figure 4P-9 
228 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
If the mass of the cart is represented by M and the force f is applied to hold the bar at the desired 
position, then 
(a) Draw the free-body diagram. 
(b) Determine the dynamic equation of the motion. 
(c) Find the transfer function. 
(d) Write the state space of the system. 
Hf is an impulse signal, plot the impulse response of the system by using MATLAB . 
4-10. A two-stage inverted pendulum on a cart is shown in Fig. 4P-10. 
0 M 
f Motor 
0 
Figure 4P-10 
If the mass of the cart is represented by M and the force f is applied to hold the bar at the desired 
position, then 
(a) Draw the free-body diagram of mass M. 
(b) Determine the dynamic equation of the motion. 
(c) Find the transfer function. 
(d) Write the state space equations of the system. 
4-11. Fig. 4P-1 l shows a well-known "ball and beam" system in control systems. A ball is located 
on a beam to roll along the Jeng th of the beam. A lever arm is attached to the one end of the beam and a 
servo gear is attached to the other end of the lever arm. As the servo gear turns by an angle e, the Lever 
arm goes up and down, and then the angle of the beam is changed by a. The change in angle causes the 
ball to roll along the beam. A controller is desired to manipulate the ball's position. 
Figure 4P-11 
Assuming: 
m = mass of the ball 
r = radius of the ball 
d = lever arm offset 
g = gravitational acceleration 
L = length of the beam 
J = ball's moment of inertia 
p = ball position coordinate 
a= beam angle coordinate 
()=servo gear angle 
(a) Determine the dynamic equation of the motion. 
(b) Find the transfer function. 
(c) Write the state space equations of the system. 
(d) Find the step response of the system by using MATLAB. Problems 229 
4-12. The motion equations of an aircraft are a set of six nonlinear coupled differential equations. 
Under certain assumptions, they can be decoupled and linearized into the longitudinal and lateral 
equations. Fig. 4P-I 2 shows a simple model of airplane during its !light. Pitch control is a longitudinal 
problem, and an autopilot is designed to control the pitch of the airplane. 
Lift 
z', Weight 
Figure 4P-12 
Consider that the airplane is in steady-cruise at constant altitude and velocity, which means the 
thrust and drag cancel out and the lift and weight balance out each other. To simplify the problem, 
assume that change in pitch angle does noc affect the speed of an aircraft under any circumstance . 
(a) Determine the longitudinal equations of motion of the aircraft. 
{b) Find the transfer function and state-space variables. 
4-13. Write the torque equations of the rotational systems shown in Fig. 4P-13. Write the state 
equations. Find the transfer function €-)(s)/T(s) for the system in (a). Find the transfer functions 
81 (s)/T(s) and 82(s)/T(s) for the systems in pa11s (b), (c), (d), and (e). 
4-14. Write rhe torque equations of the gear-train system shown in Fig. 4P-!4. The moments of 
inertia of gears are lumped as Ji, h, and J,. Tm(t) is the applied torque; N1, N2, N3, and N4 are the 
number of gear teeth. Assume rigid shafts 
(a) Assume that J1, h, and hare negligible . Write the torque equations of the system. Find the total 
inertia the motor sees. 
{b) Repeat pa11 (a) with the moments of inertia J1, h, and 1,. 
230 Chapter 4. Theoretica l Foundation and Background Material: Modeling of Dynamic Systems 
81(1) 
K 82(1) 
.I 
Flexible 
T(t) shaft 
(a) (b) 
81(!) K 8i(t) 8z(t) K2 8111(1) 811)(1) Ki 81(1) 
.!1 .f 2 .1'2 MOTOR 11 
Flexible 
T(t) shaft T(t) JIii T(t) 
(c) (d) 
82(1) K2 8,,.(t) 8111(1) K 81(1) 
1 
MOTOR 
B2 T(t) .Im T(t) 
Bi 
(e) 
Figure 4P-13 
Ni 
MOTOR )Ti 
.Im 
)H),, 
T2 B 
N2 .1 ) LOAD 
T4 11. 
N~ 
Figure 4P-14 
4-15. Fig. 4P-15 shows a motor-load system coupled through a gear train with gear ratio 
n = N1/N2. The motor torque is Tm(l), and h(t) represents a load torque. 
(a) Find the optimum gear ration* such that the load acceleration <XL= d26L(dt2 is maximized . 
(b) Repeat part (a) when the load torque is zero . 
.I,,, T,,, 
Figure 4P-15 
Problems • 231 
4-16. Fig. 4P-16 shows the simplified diagram of the printwheel control system of an old word 
processor . The printwheel is controlled by a de motor through belts and pulleys. Assume that the belts 
are rigid. The following parameter s and variables are defined: T,,,(t) is the motor torque; 8111(1), the 
motor displacement; y(I), the linear displacement of the print.wheel ; J,,,, the motor inertia; B111, the 
motor viscous-friction coefficient; r, the pulley radius; M, the mass of the printwheel. 
(a) Write the differential equation of the system. 
(b) Fi.nd the transfer function Y(s)/T,,,(s). 
Prinlwheel 
-l~J --~t-.y -....,,...._('') 
~ ~~y 
8,,, 
Motor 
1111. B111 
Figure 4P-16 
4-17. Fig. 4P-17 shows the diagram of a printwheel system with belts and pulleys. The belts are 
modeled as linear springs with spring constants K1 and K2• 
(a) Write the differential equations of the system using e,,, and y as the dependent variables. 
(b) Write the state equations using x1 = ,-em -y, x2 = dy/dt, and x3 = <v,,, = d811,/dt as the state 
variables. 
(c) Draw a state-flow diagram for the system. 
(d) Find the transfer function Y(s)/T111(s). 
(e) Find the characteristic equation of the system. 
Tm yj_T ... :~~~ 
em~ 
Motor 
J,,,. IJ,,, ={) 
Figure 4P-17 
4-18. The schematic diagram of a steel-rolling process is shown in Fig. 4P-l 8. The steel plate is fed 
through the rollers at a constant speed of V ft/s. The distance between the rollers and the point where 
+ 
AMPUFIER 
K e" 
Figure 4P-1 B R,, l,. 
GEAR 
TRAJN 
132 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
the thickness is measured is d ft. The rotary displacement of the motor, 1)111(t), is converted to the 
linear displacement y(t) by the gear box and linear-actuator combination y( 1) = n/)111 (t), where n is a 
positive constant in ft/rad. The equivalent inertia of the load that is reflected to the motor shaft is 11,. 
(a) Draw a functional block diagram for the system. 
(b) Derive the forward-path transfer function Y(s)/E(s) and the closed-loop transfer function 
Y(s)/ R(s). 
4-19. The schematic diagram of a motor-load system is shown in Fig. 4P-19. The following 
parameters and variables are defined: T111(t) is the motor torque; w111(t), the motor velocity; Bm(t), the 
motor di~-placement ; wL(t), the load velocity; l)L(t). the load displacement; K, the torsional spring 
constant; }111, the motor inertia: B111, the motor viscous-friction coefficient; and BL, the load viscous­
friction coefficient . 
(a) Write the torque equations of the system. 
(b) Find the transfer functions 0,,(s)/Tm(s) ,md ®111(s)/Tm(s). 
(c) Find the characteristic equation of the system. 
(d) Let T111(1) = T111 be a constant applied torque; show that w111 = WL = constant in the steady state. 
Find the steady-state speeds w,,, and <VL· 
(e) Repeat part (d) when the value of his doubled, but J,,, stays the same . 
IT K • ,) I 
MOTOR LOAD 
Flexible 
1111• Bm T111(t) shaft W1.(I) JL 
w,,,(r) B,, 
Figure 4P-19 
4-20. This problem deals with the attitude control of a guided missile. When traveling through the 
atmosphere, a missile encounters aerodynamic forces that tend to cause instability in the attitude of 
the missile. The basic concern from the Aight-contro·1 standpoint is the lateral force of the air, which 
tends to rotate the missile about its center of gravity. If the missile centerline is not aligned with the 
direction in which the center of gravity C is traveling. as shown in Fig. 4P-20, with angle e, which is 
also called the angle of altack, a side force is produced by the drag of the air through which the missile 
travels. The total force Fa may be considered to be applied at the center of pressure P. As shown in 
Fig. 4P-20, this side force has a tendency to cause the missile to tumble end over end, especially if the 
point Pis in front of the center of gravity C. Let the angular acceleration of the missile about the point 
C, due to the side force, be denoted by <X-F-Normally, <XF is directly proportional to the angle of attack 
I) and is given by 
Figure 4P-20 
Problems 233 
where KF is a constant that depends on such parameters as dynamic pressure, velocity of the 
missile, air density, and so on, and 
J = missile moment of inertia about C 
d1 = distance between C and P 
The main objective of the flight-control system is to provide the stabilizing action to counter the 
effect of the side force. One of the standard control means is to use gas injection at the tail of the 
missile to deflect the direction of the rocket engine thrust Ts, as shown in the figure. 
(a) Write a torque differential equation to relate among Ts, 8, e, and the system parameters given. 
Assume that o is very small, so that sin o(t) is approximated by o(t). 
(b) Assume that Ts is a constant torque. Find the transfer function ®(s)/ Ll(s), where 0(s) and Ll(s) 
are the Laplace transforms of B(t) and 8(t), respectively. Assume that o(t) is very small. 
(c) Repeat parts (a) and (b) with points C and P interchanged. The d1 in the expression of aF should 
be changed to d2. 
4-21. Fig. 4P-2l(a) shows a well-known "broom-balancing" system in control systems. The 
objective of the control system is to maintain the broom in the upright position by means of the 
force u(t) applied 10 the car as shown. In practical applications , the system is analogous to a one­
dimensional control problem of the balancing of a unicycle or a missile immediately after launching. 
The free-body diagram of the system is shown in Fig. 4P-2l(b), where 
CG 
f J~ 
~~~~-.u(t) -.x(t) 
CAR 
(a) 
Figure 4P-21 (b) -----+ u(I) 
-----+ x(f) 
g 
• 
fx = force at broom base in horizontal direction 
f,. = force at broom base in vertical direction 
M1, = mass of broom 
g = gravitational acceleration 
M,. = mass of car 
ii, = moment of inertia of broom about center of gravity CG = M1,L2/3 
(a) Write the force equations in the x and the .v directions at the pivot point of the broom. Write the 
torque equation about the center of gravity CG of the broom. Write the force equation of the car in the 
horizontal direction. 
(b) Express the equations obtained in part (a) as state equations by assigning the state variables as 
x1 = B, x2 = dfJ/dt, x3 = x, a.ndx4 = dx/dt. Simplify these equations for small e by making the 
approximations sin//~ e and cos&~ 1. 
time234 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
(c) Obtain a small-signal linearized state-equation model for the system in the form of 
dAx(r) •A . ) B*A () --= A uX(l + ur T dt 
at the equilibrium point xo1 (t) = 1, xo2(t) = 0, xo3(t) = 0, and x04(t) = 0. 
4-22. Most machines and devices have rotating parts. Even a small irregularity in the mass 
distribution of rotating components can cause vibration, which is called rotating unbalanced. Fig. 
4P-22 represents the schematic of a rotating unbalanced mass of m. Assume that the frequency of 
rotation of the machine is cv. 
(a) Draw the state-flow diagram of the system. 
(b) Find the transfer function . 
(c) Use MATLAB to obtain the response of the system. 
Guide ~~ 
y(t) 
Figure 4P-22 
4-23. Vibration absorbers are used to protect machines that work at the constant speed from steady­
state harmonic disturbance. Fig. 4P-23 shows a simple vibration absorber. 
Figure 4P-23 
Assuming the harmonic force F(t) = Asin(wt) is the disturbance applied to the mass M: 
(a) Derive the state space equations of the system. 
(b) Determine the transfer function of the system. 
4-24. Fig. 4P-24 represents a damping in the vibration absorption. 
Assuming the harmonic force F(t) = Asin{wt) i~ the uisturbance applied to the mass /vi: 
(a) Derive the state space equations of the system. 
(b) Determine the transfer function of the system. 
M 
F(t) 
1 M y(t) l 
Figure 4P-24 
PROBLEMS FOR SECTION 4-2 
4-25. Consider the electrical circuits ~hown in Figs. 4P-25(a) and (b). 
C/2 C/2 
,------i 1---.------il 
+ 2R 2R + 
VITI C R VOUI 
(a) 
L2 R 
+ IC2 \/OUl 
0 
(b) 
Figure 4P-25 
For each circuit: 
(a) Find the dynamic equations and state variables. 
(b) Determine the transfer function. 
(c) Use MATLAB to plot the step response of the system. Problems 235 
4-26. An electromec hanical system shown in Pig. 4P-26 represents a moveable -plate capacity. 
R L 
~ 
i(t) 
b 
K 
A 
B 
M e f(t) 
X 
Figure 4P-26 
236 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Assume that the plate a of the parallel capacitor is fixed and the plate b with mass M is moved by 
1:A forcef If C(x) = d' when thesis the dielectric constant and A is the surface of the plates, then the 
electric field produces a force opposing the motion of the plates, and it is related to the charge (q) 
q2 
across the plates: Jc = -2sA 
(a) Find the differential equations of this system. 
(b) Determine X(s)/C(s). 
4-27. Consider the electromechanical system shown in Fig. 4P-27. 
Figure 4P-27 
(a) Draw the free-body diagram. 
(b) Find the differential equation that describes the operation of the system. 
(c) Calculate the transfer function of the system. 
4-28. Repeat Problem 4-27 for the electromechanical system shown in Fig. 4P-28. 
Figure 4P-28 
PROBLEMS FOR SECTION 4-3 
4-29. Find the transfer function of the circuit for the simple op-amp circuit given in Fig. 4P-29. 
R 
+ ,. 
v,)U, 
Figure 4P-29 
4-30. An op-amp circuit with connection to both tenninals is shown in Fig. 4P-30. 
+ 
+ 
Figure 4P-30 
The op-amp can be modeled as 
107 
VoUI = --[v+ -Y-] s+l 
i+ = L = 0 Problems 237 
when v+ and v_ represent the voltages of positive and negative terminals , respectively, and i+ and L 
show the current of these terminals . 
(a) Find the positive feedback ratio. 
(b) Find the negative feedback ratio. 
(c) Determine when the circuit remains stable. 
4-31. Find the transfer function for each circuit given in Fig. 4P-31. 
R;n 
+ 
+ 
Figure 4P-31 C R I 
C 
+ 
PROBLEMS FOR SECTION 4-4 
4-32. A thermal lever is shown in Fig. 4P-32. 
As shown, the actuator is a pure electric resistance and the heat flow is generated by the electric 
power input. The lever (at the top} moves up or down proportionally , depending on the difference 
between the temperature of the ambient air and the temperature of the actuator. Calculate V(s)/X(s), 
assuming zero initial conditions. 
238 Chapter 4. Theoretica l Foundation and Background Material: Modeling of Dynamic Systems 
1 
+ 
R V 
Figure 4P-32 
4-33. Hot oil forging in quenching vat with its cross-sectional view is shown in Fig. 4P-33. 
-~ 
Insulator--._ 
Figure 4P-33 -~ 
Oil I@ l 
The radii shown in Fig. 4P-33 are ri, r2, and r3 from inside to outside. The heat is transferred to the 
atmosphere from the sides and bottom of the vat and also the surface of the oil with a convective 
heat coefficient of k11• Assuming: 
k,, = The thermal conductiv ity of the vat 
k; = The thermal conductivity of the insulator 
c0 = The specific heat of the oil 
d,, = The density of the oil 
c = The specific heat of the forging 
m = Mass of the forging 
A = The surface area of the forging 
/z = The thickness of the bottom of the vat 
T" = The ambient temperature 
Determine the system model when the temperature of the oil is desired. 
4-34. A power supply within an enclosure is shown in Fig. 4P-34. Because the power supply 
generates lots of heat, a heat sink is usually attached to dissipate the generated heat. Assuming the rate 
of heat generation within the power supply is known and constant, Q, the heat transfers from the power 
supply to the enclosure by radiation and conduction, the frame is an ideal insulator, and the heat sink 
temperature is constant and equal to the atmospheric temperature, determine the model of the system 
that can give the temperature of the power supply during its operation. Assign any needed parameters. 
Enclosure 
Heat sink 
~ 
Frame 
Figure 4P-34 
Problems 239 
4-35. Fig. 4P-35 shows a heat exchanger system. 
Fluid A Fluid B 
Figure 4P-35 
Assuming the simple material transport model represents the rate of heat energy gain for this 
system, then 
(1ilc)(T2 -Ti)= qguined 
where 1h represent s the mass flow, T1 and T2 are the entering and leaving Auid temperature , and c 
shows the specific heat of fluid. 
If the length of the heat exchanger cylinder is L, derive a model to give the temperature of Fluid 
B leaving the heat exchanger. Assign any required parameters, such as radii, thennal conductivity 
coefficients, and the thickness. 
PROBLEMS FOR SECTION 4-5 
4-36. The objective of this problem is to develop a linear analytical model of the automobile engine 
for idle-speed control system shown in Fig. 1-2. The input of the system is the throttle position that 
controls the rate of air flow into the manifold (see Fig. 4P-36). Engine torque is developed from the 
buildup of manifold pressure due to air intake and the intake of the air/gas mixture into the cylinder. 
The engine variations are as follows: 
----+ \ _______. 
AIRFLOW ----+ ~ 
----+ ~ 
----+ _______. 
I 
I 
IDLE-SPEED I 
CONTROL J 
MOTOR 
Figure 4P-36 
q1(1) = amount of air flow across throltle into manifold 
dq,{1)/dt = rate of air flow across throttle into manifold 
q,,,(f) = average air mass in manifold TO 
MANIFOLD 
qo(t) = amount of air leaving intake manifold through intake valves 
dqo(t)/dt = rate of air leaving intake manifold through intake valves 
T(t) = engine torque 
Tt1 = disturbance torque due to application of auto accessories = constant 
240 111,, Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
w(t) = engine speed 
a(t) = throttle position 
To = time delay in engine 
J e = inertia of engine 
The following assumptions and mathematical relations between the engine variables are given: 
1. The rate of air flow into the manifold is linearly dependent on the throttle position: 
d~y) = K1a(t) K1 = proportional constant 
2. The rate of air flow leaving the manifold depends linearly on the air mass in the manifold and the 
engine speed: 
dq0(t) ~ = K2qm(t) + K3w(t) K2, K3 = constant 
3. A pure time delay of 1:0 seconds exists between the change in the manifold air mass and the engine 
torque: 
T(t) = K4q,n(t -ro) K4 = constant 
4. The engine drag is modeled by a viscous-friction torque Bw(t), where Bis the viscous~friction 
coefficient. 
S. The average air mass qm(t) is determined from 
qm(t) = J (dq;(t) _ dq0(t))dt 
dt dt 
6. The equation describing the mechanical components is 
dw(t) T(t) = J ~ + Bw(t) + Td 
(a) Draw a functional block diagram of the system witha(t) as the input, w(t) as the output, and Tdas 
the disturbance input. Show the transfer function of each block. 
(b) Find the transfer function O(s)/a(s) of the system. 
(c) Find the characteristic equation and show that it is not rational with constant coefficients. 
(d) Approximate the engine time delay by 
-t:os rv l -Tvs/2 e ------ 1 + r:vs/2 
and repeat parts {b) and {c). 
4-37. Vibration can also be exhibited in fluid systems. Fig. 4P-37 shows a U tube manometer. 
,__ ____ L _____ _, 
Figure 4P~37 
Assume the length of fluid is L, the weight density is µ, and the cross-section area of the tube is A. 
(a) Write the state equation of the system. 
(b) Calculate the natural frequency of oscillation of the fluid. 
4-38. A long pipeline connects a water reservoir to a hydraulic generator system as shown in Fig. 4P-38. 
Problems 241 
mg 
Figure IIP-38 
At the end of Lhe pipeline, there is a valve controlled by a speed controller. It may be closed quickly to 
stop the water flow if the generator loses its load. Determine the dynamic model for the level of the 
surge tank. Consider the turbine-generator is an energy converter. Assign any required parameters . 
4-39. A simplified oil weU system is shown in Fig. 4P-39. 
In this figure, the drive machinery is replaced by the input torque, T;,,(t). Assuming the pressure in 
the surrounding rock is fixed at P and the walking beam moves through small angles, determine a 
model for this system during the upstroke of the pumping rod. 
Walking Beam 
Flexible Rod 
No friction 
Sucker rod 
111 
---- lntemal radius = R 
T 
Figure 4P-39 
242 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
4-40. A hydraulic servomotor usually is used for the speed control of engines. As shown in Fig. 
4P-40, the reference speed is controlled by the throtcle lever. The flyweight is moved by engine, so 
then the differenti al displacement of the spring determines the input to the hydraulic servomotor. 
Determine the state space model of the system. 
Fuel (Steam) 
:-_________________________ ~;aw lo Enginet 
Desired 
Speed ' A ' l 
Throttle Lever 
t 
Drain Sl.lpply 
Pressure 
Figure 4P-40 Drain I 
~ 
: Hydraulic 
, Servomolor 
I 
I 
4-41. Fig. 4P-41 shows a two-tank liquid-level system. Assume that Q, and Q2 are the steady-state 
inflow rates, and H1 and H2 are steady-state heads. If the other quantities shown in Fig. 4P-41 are 
supposed to be small, derive the state-space model of the system when h1 and h2 are oulputs of the 
system and qr, and q;2 are the inputs. 
T T 
H2+h2 
Figure 4P-41 
PROBLEMS FOR SECTION 4-6 
4-42. An accelerometer is a transducer as shown in Fig. 4P-42. 
(a) Find the dynamic equation of motion. 
(b) Determine the transfer function. 
(c) Use MATLAB to plot its impulse response. 
Air intake 
TAi Problems 243 
+ 
vo!tuge K 
x(t) 
1 
y(L) 
B 
Figure 4P-42 
4-43. Fig. 4P-43(a) shows the setup of the temperature control of an air-now system. The hot-water 
reservoir supplies the water that flows into the heat exchanger for heating the air. The temperature 
sensor senses the air temperature TAo and sends it to be compared with the reference temperature T,. 
HOT-WATER 
RESERVO\R 
CONTROLLER 
Gc<s) /l Valve 
Heat 
exchanger PV) 
ELECTRIC-TO­
PNEUMATTC 
TRANSDUCER 
u(t) 
CONTROLLER 
T, -
Temperature 
sensor T, -Hcacedair 
- TA,, 
Ompm air .--------, temperature 
PNEUMATIC dM w HEAT 7,10 ELECTRIC -TO-p(t) 
PNEUMATIC 
TRANSDUCER ACTUATOR/VALVE EXCHANGER 
~-----1_· '---------< TEMPERATURE !+------------ ----_, SENSOR 
(b) 
Figure 4P-43 
244 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
The temperature error Te is sent to the controller, which has the transfer function G,,(s). The output of 
the controller , u(t), which is an electric signal, is converted to a pneumatic signal by a transducer . The 
output of the actuator controls the water-flow rate through the three-way valve. Fig. 4P-43(b) shows 
the block diagram of the system. 
The following parameters and variables are defined: dM,.. is the flow rnte of the heating fluid = 
KMu; KM = 0.054 kg/sN; T.,., the water temperature = KRdM,,.; KR = 65°C/kg/s; and TAa, the 
output air temperature . Heat-transfer equation between water and air: 
Temperature sensor equation: dTAo 
Tc --= Tw -TAO Tc = 10 seconds dt 
dTs 
Ts di = TAo -T.,· Ts = 2 seconds 
(a) Draw a functional block diagram that includes all the transfer functions of the system. 
(b) Derive the transfer function TAo(s)/T,.(s) when Gc(s) = 1. 
4-44. An open-loop motor control system is shown in Fig. 4P-44. 
Potemio111ec er 
MOTOR 1--+-----+--t LOAD 
T111(1) 
Figure 4P-44 Ev. + 
The potentiometer has a maximum range of 10 turns (20n rad). Find the transfer functions E0(s)/ 
1~11(s). The following parameters and variables are defined: 8111(t) is the motor displacement; eL(t), 
the load displacement ; T111(t), the motor torque; J,.,, the motor inertia; B11,, the motor viscous-friction 
coefficient ; Bp, the potentiometer viscous-friction coefficient; eo(t), the output voltage; and K, the 
torsional spring constant. 
4-45. The schematic diagram of a control system containing a motor coupled to a tachometer and an 
inertial load is shown in Fig. 4P-45. The following parameters and variables are defined: Tm is the 
motor torque; lm, the motor inertia; J,, the tachometer inertia; h, the load inertia; K1 and K2, the 
spring constants of the shafts; 81, the tachometer displacement; 8m, the motor velocity; eL, the load 
displacement ; cv1, the tachometer velocity; (J)L, the load velocity; and Bm, the motor viscous -friction 
coefficient. 
(a) Write the state equations of the system using eL, WL, 81, w1, e,,,, and Wm as the state variables (in 
the listed order). The motor torque T,,, is the input. 
(b) Draw a signal flow diagram with T,,, at the left and ending with el on the far right. The state 
diagram should have a total of 10 nodes. Leave out the initial states. 
. . . ®L(s) E>i(s) ®m(s) 
(c) Fmd the followmg transfer funct10ns : -T, ( ) -(-) -T ( ) mS T111s mS 
(d) Find the characteristic equation of the system. 
e, eh,.(t)m e,n,(l)m 81, 
I) K1 )I I) K! )I J, JIii 
w, T,,, T,,, O)l 
Tachometer Motor Load 
Figure 4P-45 
11111 
Reference 
frequency 
+ 
e(t) 
0 Problems 245 
4-46. Phase-locked loops are control systems used for precision motor-speed control. The basic 
elements of a phase-locked loop system incorporating a de motor are shown in Fig. 4P-46(a). An 
input pulse train represents the reference frequency or desired output speed. The digital encoder 
produces digital pulses that represent motor speed. The phase detector compares the motor speed and 
the reference frequency and sends an error voltage to the filter (controller) that governs the dynamic 
response of the system. 
Phase detector gain = Kµ, encoder gain = Ke, counter gain = 1 /N, and de-motor torque constant= 
K1. Assume zero inductance and zero friction for the motor. 
(a) Derive the transfer function E,.(s)/E(s) of the filter shown in Fig. 4P-46(b). Assume that the filter 
sees infinite impedance at the output and zero impedance at the input. 
(b) Draw a functional block diagram of the system with gains or transfer functions in the blocks. 
(c) Derive the forward-path transfer function H111(s)/E(s) when the feedback path is open. 
(d) Find the closed-loop transfer function Hm(s)/F,.(s). 
(e) Repeat parts (a), (c), and (d) for the filter shown in Fig. 4P-46(c). 
(f) The digital encoder has an output of 36 pulses per revolution . The reference frequency f, is fixed at 
120 pulses/s. Find K,. in pulses/rad. The idea of using the counter N is that, withfr fixed, various 
desired output speeds can be attained by changing the value of N. Find N if the desired output speed is 
200 rpm. Find N if the desired output speed is 1800 rpm. 
PHASE 
DETECTOR 
K 
f'o, 
R1 
R2 e(t) 
FILTER e/t) 
Error 
voltage 
N 
COUNTER 
+ 
e)t) 11111 
Feedback 
pulses 
(a) 
CI 
0 
(b) 
Figure 4P-46 + AMPLIFIER K ea 
K., 
DIGITAL 
ENCODER 
R, 
+ 
e(t) de motor 
R,, 
(c) JIii 
C 
4-47. Describe how an incremental encoder can be used as a frequency divider. 
PROBLEMS FOR SECTION 4-7 
4-48. The voltage equation of a de motor is written as 
( ) , ) dia (t) ( ) ea t = Rata(t + l" --+ Kbwm t dt + LOAD 
h 
ec(t) 
where e,,(t) is the applied voltage; ia(t), the armature current; R"' the armature resistance; La, the 
armature inductance; Kt,, the back-emf constant; w,,,(t), the motor velocity; and w"[t), the reference 
input voltage. Taking the Laplace transform on both sides of the voltage equation, with zero initial 
246 Chapter 4. Theoretical Foundation and Backgrou nd Material: Modeling of Dynamic Systems 
conditions and solving for Dm(s), we get 
r, ( ) _ Ea(s) -(Ra+ L,,s)la(s) 
um S - Kb 
which shows that the velocity information can be generated by feeding back the armature voltage and 
current. The block diagram in Fig. 4P-48 shows a de-motor system, with voltage and current 
feedbacks, for speed control. 
(a) Let K1 be a very high gain amplifier. Show that when H;(s)/He(s) =-(Ra+ L"s), the motor 
velocity w,n(t) is totally independent of the load-disturbance torque TL. 
(b) Find the transfer function between 0111(s) and n,(s)(h = 0) when H,{s) andH.,(s) are selected as 
in part (a). 
Voltage feedback 
Figure 4P-48 l 
R0 + L_s 1 
B+Js 
------- -Motor and load----- ---
4-49. Fig. 4P-49 shows the schematic diagram of a de-motor control system for the control of the 
printwheel of a word processor . The load in this case is the printwheel, which is directly coupled 
to the motor shaft. The following parameters and variables are defined: Ks is the error-detector 
gain (V/rad); K;, the torque constant (oz-in.IA); K, the amplifier gain (V /V); Kb, the back-emf 
constant (V/rad/sec); n, the gear-train ratio = 92/Bm = Tm/T2; B,,., the motor viscous-friction 
coefficient (oz-in.-sec); lm, the motor inertia (oz-in.-sec2); KL, the torsional spring constant of 
the motor shaft (oz-in.lead) ; and JL the load inertia (oz-in.-sec2). 
(a) Write the cause-and-effect equations of the system. Rearrange these equations into the form of 
state equations with x, = e0, x2 = wo, x3 = Bm, X4 = w111, andxs = ia. 
(b) Draw the signal flow diagram using the nodes shown in Fig. 4P-49(b). 
(c) Derive the forward-path transfer function (with the outer feedback path open): 
G(s) = E>o(s)/®e(s). Find the closed-loop transfer function M(s) = E>0(s)/0,(s). 
(d) Repeat part (c) when the motor shaft is rigid; i.e., Kl = oo. Show that you can obtain the 
solutions by taking the limit as K1., approaches infinity in the results in part (c). 
R., tu Ti 
+ ,,, GEAR KL e K, K ea TRAIN LOAD 
" Flexible 
sbaft 
Jm· B111 e., 11. 
(a) 
0 0 0 0 0 0 0 0 0 0 
e, e, io ia m,,, O)m om Wo (1)0 e. 
(b) 
Figure 4P-49 
Problems 247 
4-50. The schematic diagram of a voice-coil motor (VCM), used as a linear actuator in a disk 
memory-storage system, is shown in Fig. 4P-50(a). The VCM consists of a cylindrical pemrnnent 
magnet (PM) and a voice coil. When current is sent through the coil, the magnetic field of the PM 
interacts with the current-carrying conductor, causing the coil to move li11early. The voice coil of the 
VCM in Fig. 4P-50(a) consists of a primary coil and a shorted-turn coil. The latter is installed for the 
purpose of effectively reducing the electric constant of the device. Fig. 4P-50(b) shows the equivalent 
circuit of the coils. The following parameters and variables are defined: e"(t) is the applied coil 
voltage; i,;(t), the primary-coil current; i,,(t), the shorted-turn coil current; Ra, the primary-coil 
resistance; l"' the primary-coil inductance; L"s, the mutual inductance between the primary and 
shorted-turn coils; v(t), the velocity of the voice coil; y(t), the displacement of the voice coil; 
f(t) = K;v(t), the force of the voice coil; K;, the force constant; Kb, the back-emf constant; 
eb(t) = K1,v(t), the back emf; M.,., the total mass of the voice coil and load; and Br, the total 
viscous-friction coefficient of the voice coil and load. 
(a) Write the differential equations of the system. 
(b) Draw a block diagram of the system with Ecr(s), lcr(s), ls(s), V(s), and Y(s) as variables . 
(c) Derive the transfer function Y(s)/ Ea(s). 
Spindle 
motor 
Figure 4P-50 I(, 
N 
+ 
ei, Primary 
Magnet turns 
-----"\ 
/ 
\ 
Magnetic Shorted 
Hux turns 
(a) 
L,, R, 
N L, 
(b) 
4-51. A de-motor position-control system is shown in Fig. 4P-5l(a). The following parameters and 
variables are defined: e is the error voltage; e,, the reference input; eL, the load position; KA, the 
amplifier gain; ea, the motor input voltage; eb, the back emf; i", the motor current; T,,,, the motor 
torque; J,,,, the motor inertia= 0.03 oz-in.-s2; 8111, the motor viscous-fric tion coefficient = 1 O oz-in.-s2; 
KL, the torsional spring constant= 50,000 oz-in./rad; J L, the load inertia= 0.05 oz-in.-s2; K;, the motor 
torque constant= 21 oz-in.IA; K1,, the back-emf constant= 15.5 V/1000 rpm; K,, the error-detector 
gain = E /2rr; E, the error-detec tor applied voltage = 2rr V; Ra, the motor resistance = 1.15 fl; and 
Be= e, -(h,. 
(a) Write the state equations of the system using the following state variables: x1 = eL, 
Xz = deL/dt = WL, X3 = 83, andx4 = dOm/dt = W,n. 
(b) Draw a signal flow diagram using the nodes shown in Fig. 4P-5l(b). 
248 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systerns 
0 0 
8,. e, (c) Derive the forward-path transfer function G(s) =-0L(s)/Ele(s) when the outer feedback path 
from el is opened. Find the poles of G(s). 
(d) Derive the closed-loop transfer function M(s) = EIL(s)/f><lc(s). Find 1he poles of M(s) when 
KA = 1, 2738, and 5476. Locate these poles in the s-plane, and comment on the significance of these 
values of KA. 
+ + 
e LOAD 
~ 
(),. 
(a) 
0 0 0 0 0 0 0 0 0 
e i4 X4 X:; x~ x'.! .x~ x, "I 
{b) 
Figure 4P-51 
4-52. The following differential equations describe the motion of an electric train in a traction system: 
dx(t) = v(t) 
dt 
dv(t) di= -k(v) -g(x) + f(t) 
where 
x(t) = linear displacement of train 
v(t) = linear velocity of train 
k(v) = resistance force on train [odd function of I', with the properties 
k(O) = 0 and dk(v)/dv = OJ 
g(x) = gravitational force for a nonlevel track or due to curvature of track 
j(l) = tractive force 
The electric motor that provides the tractive force is described by the following equations: 
e(t) = K1,¢(t)v(t) + Raia(!) 
f(t) = Ki¢(t)ia(t) 
where e(t) is the applied voltage; (,{t), the armature current; {r(t), the field current; R,,. the armature 
resistance; cp(t), the magnetic flux frum a separately excited field= Tyi_r(l); and K;, the force constant. 
(a) Consider that the motor is a de series motor with the armature and field windings connected in 
series, so that ia(t) = i1(t), g(x) = 0, k(v) = Bv(t), and R11 = 0. Show that the system is described 
by the following nonlinear state equations: 
dx(t) = v(t) 
dt 
dv(t) K; 2 -d = -Bv(t) + 2 2 ( ) e (t) t K1,K1v t Problems ~ 249 
(b) Consider that, for the conditions stated in part (a). ia(t) is the input of the system [instead of e(t)]. 
Derive the state equations of the system. 
(c) Consider the same conditions as in part (a) but with <j,(t) as the input. Derive the state equations. 
4-53. The linearized model of a robot arm system driven by a de motor is shown in Fig. 4P-53. The 
system parameters and variables are given as follows: 
DC Motor 
Tm = motor torque= Kia 
K; = torque constant 
ia = armature current of motor 
J111 = motor inertia 
B111 = motor viscous-friction coefficient 
B = viscous-friction coefficient of shaft between 
the motor and arm 
BL= viscous-friction coefficient of the robot arm shaft Robot Arm 
h = inertia of arm 
TL = disturbance torque on arm 
(JL = arm displacement 
K = torsional spring constant 
8111 = motor-shaft displacement 
(a) Write the differential equations of the system with i0(t) and Tdt) as input and 8,n(t) and OL(t) as 
outputs. 
(b) Draw an SFG using la(s), TL(s), ®111(s}, and 01.(s) as node variables. 
(c) Express the transfer-function relations as 
Find G(s). 
Figure 4P-53 [E>m{s)] = G(s) [ la(s) ] 
®1.(s) -h(s) 
Robot 
arrn 
250 ~ Chapter 4. Theoret[cal Foundat[on and Background Material: Modeling of Dynamic Systems 
PROBLEMS FOR SECTION 4-8 
4-54. The transfer function of the heat exchanger system is given by 
T(s) Ke-Td, 
G(s) = A(s) = (r1s + l)(r2s + 1) 
where T,1 is the time delay. 
(a) Plot the roots and zeros of the system. 
(b) Use MATLAB to verify your answer in part (a). 
4-55. Find the polar plot of the following functions by using the approximation of delay function 
described in Section 2.8. 
e-sl 
(a) G(s) = (Ts+ 1) 
2 + 2se-s + 4e-2s 
(b)G(s)= s2+3s+2 
4-56. Use MATLAB to solve Problem 4-55 and plot the step response of the systems. 
PROBLEMS FOR SECTION 4.9 
4-57. Fig. 4P-57 shows the schematic diagram of a ball-suspensio n control system. The steel ball is 
suspended in the air by the electromag netic force generated by the electromagnet. The objective of 
the control is to keep the metal ball suspended at the nominal equilibrium position by controlling the 
current in the magnet with the voltage e(t). The practical application of this system is the magnetic 
levitation of trains or magnetic bearings in high-precision control systems. The resistance of the coil 
is R, and the inductance is L(y) = L/ y(t), where Lis a constant. The applied voltage e(l) is a constant 
with amplitude E. 
(a) Let Eeq be a nominal value of E. Find the nominal values of y(l) and dy(t)/dt at equilibrium. 
(b) Define the state variables at x1 (t) = i(t), x2(t) = y(t), andx3(t) = dy(t)/dt. Find the nonlinear 
dx(t) state equations in the form of dt = f(x,e). 
(c) Linearize the state equations about the equilibrium point and express the linearized state 
equations as 
dt:i.x(t) = A*~x(r) + B*~e(r) 
di 
The force generated by the electromagnet is KF(t)/y(t), where K is a proportional constant, and the 
gravitational force on the steel ball is Mg. 
R L 
Electromagnet T 1 Steel ball 
Mg 
Figure 4P-57 e(t) 
Problems 251 
4-58. Fig. 4P-58(a) shows the schematic diagram of a ball-suspension system. The steel ball is 
suspended in the air by the electromagnetic force generated by the electromagnet. The objective of 
the control is to keep the metal ball suspended at the nominal position by controlling the current in the 
electromagnet. When the system is al the stable t:quilibrium point, any small perturbati on of the ball 
position from its floating equilibrium position will cause the control to return the ball to the 
equilibrium position. The free-body diagram of the system is shown in Fig. 4P-58(b), where 
M 1 = mass of electromagnet = 2.0 
M2 = mass of steel ball = 1.0 
B = viscous-friction coefficient of air = 0.1 
K = proportional constant of electromagnet = 1.0 
g = gravitational acceleration = 32.2 
Assume all units are consistent. Let the stable equilibrium values of the variables , i(t), y 1 (t), and 
y2(t) be I, Y1, and Y2, respectively. The state variables are defined as x,(t) = y1(t), x2(t) = dy1(t)ldt, 
x3(t) = y2(t), and x4(t) = dy2(t)/dt. 
(a) Given Y1 = 1, tind I and Y2. 
(b) Write the nonlinear state equations of the system in the form of dx(t)ldt = f(x, !J. 
(c) Find the state equations of the linearized system about the equilibrium state/, Y1, and Y2 in the form 
dx(r) =A• tix(r) + B* 6.i(t) 
dt 
Electromagnet 
G)S.oolball 
(a) 
Figure 4P-58 
PROBLEMS FOR SECTION 4-10 
4-59. Fig. 4P-59 shows a typical grain scale. 
Assign any required parameters. 
(a) Find the free-body diagram. (b) Free-body 
diagram 
,.2 I 
( )2 
Ri Y2-Y1 
(b) Derive a model for the grain scale that determines the waiting time for the reading of the weight 
of grain after placing on the scale platform. 
(c) Develop an analogous electrical circuit for this system. 
252 Chapter 4. Theoretical Foundation and Background Material: Modeling of Dynamic Systems 
Figure 4P-59 
4-60. Develop an analogous electrical circuit for the mechanical system shown in Figure 4P-60. 
m 
Figure 4P-60 
4-61. Develop an analogous electrical circuit for the fluid hydraulic system shown in Fig. 4P-61. 
T 
h 1 F ~-----~ p -:::_-:::_-:::_-:::_ -:::_-:::_-:::_-:::_-:::_-:::_ -:::_-:::_ +--P2 ---. Q Q 
Figure 4P-61 
PROBLEMS FOR SECTION 4-11 
4-62. The open-loop excitation model of the car suspension system with 1-DOF, illustrated in Fig. 
4-84(c), is given in Example 4-11-3. Use MATLAB to find the impulse response of the system. 
4-63. An active control designed for the car suspe11sion system with 1-DOF is designed by using a 
de motor and rack. Use MATLAB and the transfer function of the system given in Example 4-11-3 to 
plot the impulse response of the system. Compare your result with the result of Problem 4-62. 
CHAPTER 5 
Time-Domain Analysis of 
Control Systems 
In this chapter, we depend on the background material discussed in Chapters 1-4 to 
arrive at the time response of simple control systems. In order to find the time response of 
a control system, we first need to model the overall system dynamic s and find its 
equation of morion. The system could be composed of mechanical , electrical, or other 
sub-systems . Each sub-system may have sensors and actuators to sense the environment 
and to interact with it. Next, using Laplace transforms, we can find the transfer function 
of all the sub-components and use the block diagram approach or signal flow diagrams to 
find the interactions among the system components. Depending on our objectives, we 
can manipulate the system final response by adding feedback or poles and zeros to the 
system block diagram. Finally, we can find the overall transfer function of the system 
and, using inverse Laplace transforms , obtain the time response of the system to a test 
input-nonnally a step input. 
Also in this chapter, we look at more details of the time response analysis, discuss 
transient and steady state time response of a simple control system, and develop simple 
design criteria for manipulating the time response. In the end, we look at the effects of 
adding a simple gain or poles and zeros to the system transfer function and relate them to 
the concept of control. We finally look at simple proportional, deiivative , and integral 
controller design concepts in time domain. Throughout the chapter, we utilize MATLAB in 
simple toolboxe s to help with our development. 
· 5-1 TIME RESPONSE OF CONTINUOUS-DATA SYSTEMS : INTRODUCTION 
Because time is used as an independent variable in most control systems, it is usually of 
interest to evaluate the state and output responses with respect to time or, simply, the time 
response . In the analysis problem, a reference input signal is applied to a system, and 
the performance of the system is evaluated by studying the system response in the time 
domain. For instance, if the objective of the control system is to have the output variable 
track the input signal, starting at some initial time anc.l initial condition, it is necessary to 
compare the input and output responses as functions of time. Therefore, in most control­
system problems, the final evaluation of the performance of the system is based on the time 
responses. 
The time response of a control system is usually divided into two parts: the transient 
response and the steady-state response. Let y(t) denote the time response of a continuous­
data system; then, in general, it can be written as 
y(t) = y,(t) + Yss(t) (5-1) 
253 
254 · Chapter 5. Time~Dornain Analysis of Control Systems 
where Yi (t) denotes the transient response and Yss (t) denotes the steady-state response. 
In control systems, transient response is defined as the part of the time response that goes to 
zero as time becomes very large. Thus, y1 (t) has the property 
lim y,(t) = 0 
t-•00 (5-2) 
The steady-state response is simply the part of the total response that remains after 
the transient has died out. Thus, the steady-state response can still vary in a fixed pattern, 
such as a sine wave, or a ramp function that increases with time. 
All real, stable control systems exhibit transient phenomena to some extent before the 
steady state is reached. Because inertia, mass, and inductance are unavoidable in physical 
systems, the response of a typical control system cannot follow sudden changes in the input 
instantaneously, and transients are usually observed. Therefore, the control of the transient 
response is necessarily important, because it is a significant part of the dynamic behavior of 
the system, and the deviation between the output response and the input or the desired 
response, before the steady state is reached, must be closely controlled. 
The steady-state response of a control system is also very important, because it 
indicates where the system output ends up when time becomes large. For a position-control 
system, the steady-state response when compared with the desired reference position gives 
an indication of the final accuracy of the system. In general, if the steady-state response of 
the output does not agree with the desired reference exactly, the system is said to have a 
steady-state error. 
The study of a control system in the time domain essentially involves the evaluation of 
the transient and the steady-state responses of the system. In the design problem, 
specifications are usually given in terms of the transient and the steady-state performances. 
and controllers are designed so that the specifications are all met by the designed system. 
> 5-2 TYPICAL TEST SIGNALS FOR THE TIME RESPONSE OF CONTROL SYSTEMS 
Unlike electric networks and communication systems, the inputs to many practical control 
systems are not exactly known ahead of time. In many cases. the actual inputs of a control 
system may vary in random fashion with respect to time. For instance, in a radar-tracking 
system for antiaircraft missiles, the position and speed of the target to be tracked may vary in 
an unpredictable manner. so that they cannot be predetermined. This poses a problem for the 
designer, because it is difficult to design a control system so that it will perform satisfactorily 
to all possible forms ofinput signals. For the purpose of analysis and design, it is necessary to 
assume some basic types of test inputs so that the peiformance of a system can be evaluated. 
By selecting these basic test signals properly, not only is the mathematical treatment of the 
problem systematized, but the response due to these inputs allows the prediction of the 
system's performance to other more complex inputs. In the design problem, perfonnance 
criteria may be specified with respect to these test signals so that the system may be designed 
to meet the criteria. This approach is particularly useful for linear systems, since the response 
to complex signals can be determined by superposing those due to simple test signals. 
When the response of a linear time-invariant system is analyzed in the frequency 
domain. a sinusoidal input with variable frequency is used. When the input frequency is 
swept from zero to beyond the significant range of the system characteristics, curves in 
terms of the amplitude ratio an<l phase between the input and the output are drawn as 
functions of frequency. It is possible to predict the time-domain behavior of the system 
from its frequency-domain characteristics. 
r(t) 
0 5-2 Typical Test Signals for the Time Response of Control Systems ~ 255 
To facilitate the time-domain analysis, the following deterministic test signals are 
used. 
Step-Function Input: The step-function input represents an instantaneous change in the 
reference input. For example, if the input is an angular position of a mechanical shaft, a step 
input represents the sudden rotation of the shaft. The mathematical representation of a step 
function or magnitude R is 
where Risa real constant. Or r(t)=R t~O 
=0 t<O 
r(t) = Ru5(t) (5-3) 
(5-4) 
where us(t) is the unit-step function. The step function as a function of time is shown in 
Fig. 5-l(a). The step function is very useful as a test signal because its initial instantaneous 
jump in amplitude reveals a great deal about a system's quickness in responding to inputs 
with abrupt changes. Also, because the step function contains, in principle, a wide band of 
frequencies in its spectrum, as a result of the jump discontinuity, it is equivalent to the 
application of numerous sinusoidal signals with a wide range of frequencies. 
Ramp.Function Input: The ramp function is a signal that changes constantly with time. 
Mathematically, a ramp function is represented by 
r(t) = Rtus(t) (5-5) 
where Risa real constant. The ramp function is shown in Fig. 5-l(b). If the input variable 
represents the angular displacement of a shaft, the ramp input denotes the constant-speed 
r(t) 
r(t) = Rug(t) 
0 
(a) (b) 
r(t) 
0 
(c) 
Figure 5-1 Basic time-domain test signals for control systems. (a) Step function. (b) Ramp 
function. {c) Parabolic function. 
256 · Chapter 5. Time-Domain Analysis of Control Systems 
rotation of the shaft. The ramp function has the ability to test how the system would 
respond to a signal that changes linearly with time. 
Parabolic-Function Input: The parabolic function represents a signal that is one order 
faster than the ramp function. Mathematically, it is represented as 
Rt2 
r(t) = 2 Us(t) (5-6) 
where R is a real constant and the factor t;2 is added for mathematical convenience because 
the Laplace transform of r(t) is simply R/s3. The graphical representation of the parabolic 
function is shown in Fig. 5-1 ( c ). 
These signals all have the common feature that they are simple to describe mathe~ 
matically. From the step function to the parabolic function, the signals become progres­
sively faster with respect to time. In theory, we can define signals with still higher rates, 
such as t3, which is called the jerk function, and so forth. However. in reality, we seldom 
find it necessary or feasible to use a test signal faster than a parabolic function. This is 
because, as we shall see later, in order to track a high-order input accurately, the system 
must have high-order integrations in the loop, which usually leads to serious stability 
problems. 
5-3 THE UNIT-STEP RESPONSE AND TIME-DOMAIN SPECIFICATIONS 
As defined earlier, the transient portion of the time response is the part that goes to zero as 
time becomes large. Nevertheless. the transient response of a control system is necessarily 
important, because both the amplitude and the time duration of the transient response must 
be kept within tolerable or prescribed limits. For example, in the automobile idle-speed 
control system described in Chapter 1, in addition to striving for a desirable idle speed in 
the steady state, the transient drop in engine speed must not be excessive, and the recovery 
in speed should be made as quickly as possible. For linear control systems, the characteri­
zation of the transient response is often done by use of the unit-step function us(t) as the 
input. The response of a control system when the input is a unit-step function is called the 
unit-step response. Fig. 5-2 illustrates a typical unit-step response of a linear control 
system. With reference to the unit-step response, performance criteria commonly used for 
the characterization of linear control systeins in the time domain are defined as follows: 
1. Maximum overshoot. Let y(t) be the unit-step response. Let Ymax denote the 
maximum value of y(t); Yss, the steady-state value of y(t); and Ymax?: Y.ss· The 
maximum overshoot of y( t) is defined as 
maximum overshoot= Ymax -Yss (5-7) 
The maximum overshoot is often represented as a percentage of the final value of 
the step response; that is, 
. maximum overshoot percent maximum overshoot = x 100% (5-8) 
Yss 
The maximum overshoot is often used to measure the relative stability of a control 
system. A system with a large overshoot is usually undesirable. For design 
5-3 The Unit-Step Response and Time-Domain Specifications 257 
y(I) 
Unit-step input 
0.50 
O.IO 
o'-G--+--..___ -i--_ ......... ___ ~---~-- --~--~ ,~ 
.I I+----------Setting 
timet, 
Figure 5-2 Typical unit-step response of a control system illustrating the time-domain specifications. 
purposes, the maximum overshoot is often given as a time-domain specification. 
The unit-step inustrated in Fig. 5-2 shows that the maximum overshoot occurs at 
the first overshoot. For some systems, the maximum overshoot may occur at a 
later peak, and, if the system transfer function bas an odd number of zeros in the 
right-half s-plane, a negative undershoot may even occur (4, 51 (Problem 5-23). 
2. Delay time. The delay time t,1 is defined as the time required for the step response 
to reach 50% of its final value. This is shown in Fig. 5-2. 
3. Rise time. The rise time t,. is defined as the time required for the step response to 
rise from 10 to 90% of its final value, as shown in Fig. 5-2. An alternative measure 
is to represent the rise time as the reciprocal of the slope of the step response at the 
instant that the response is equal to 50% of its final value. 
4. Settling time. The settling time l5 is defined as the time required for the step 
response to decrease and stay within a specified percentage of its final value. A 
frequently used figure is 5%. 
The four quantities just defined give a direct measure of the transient 
characteri stics of a control system in terms of the unit-step response. These 
time-domain specifications are relatively easy to measure when the step response 
is well defined, as shown in Fig. 5-2. Analytically, these quantities are difficult to 
establish, except for simple systems lower than the third order. 
5. Steady-state error. The steady-state error of a system response is defined as the 
discrepancy between the output and the reference input when the steady state 
( t -oo) is reached. 
It should be pointed out that the steady-state error may be defined for any test 
signal such as a step-function , ramp-function , parabolic-function, or even a 
sinusoidal input, although Fig. 5-2 only shows the error for a step inpul. 
258 P Chapter 5. Time-Domain Analysis of Control Systems 
5-4 STEADY-STATE ERROR 
One of the objectives of most control systems is that the system output response follows a 
specific reference signal accurately in the steady state. The difference between the output and 
the reference in the steady state was defined earlier as the steady-state error. In the real world, 
because of friction and other imperfections and the natural composition of the system, the 
steady state of the output response seldom agrees exactly with the reference. Therefore, 
steady-state errors in control systems are almost unavoidable. In a design problem, one of the 
objectives is to keep the steady-state error to a minimum. or below a certain tolerable value, 
and at the same time the transient response must satisfy a certain set of specifications. 
The accuracy requirement on control systems depends to a great extent on the control 
objectives of the system. For instance, the final position accuracy of an elevator would be 
far less stringent than the pointing accuracy on the control of the Large Space Telescope, 
which is a telescope mounted onboard a space shuttle. The accuracy of position control of 
such a system is often measured in microradians. 
5-4-1 Steady-State Error of Linear Continuous-Data Control Systems 
Linear control systems are subject to steady-state errors for somewhat different causes than 
nonlinear systems, although the reason is still that the system no longer "sees,, the error, 
and no corrective effort is exerted. In general, the steady-state errors of linear control 
systems depend on the type of the reference signal and the type of the system. 
Definition of the Steady-State Error with Respect to System Configuration 
Before embarking on the steady~state error analysis, we must first clarify what is meant by 
system error. In general. we can regard the error as a signal that should be quickly reduced 
to zero, ifpossible. Let us refer to the closed-loop system shown in Fig. 5-3, where r(t) is 
the input; u(t), the actuating signal; b(t), the feedback signal; and y(t), the output. The error 
of the system may be defined as 
e(t) = reference signal -y(t) (5-9) 
where the reference signal is the signal that the output y(t) is to track. When the system has 
unity feedback, that is, H ( s) = l, then the input r(t) is the reference signal, and the error is 
simply 
e(t) = r(t) -y(t) (5-10) 
The steady-state error is defined as 
ess = lim e(t) 
t-+00 (5-11) 
When H(s) is not unity, the actuating signal u(t) in Fig. 5#2 may or may not be the error, 
depending on the form and the purpose of H(s). Let us assume that the objective of the 
y(t) 
Y(s) 
B(s) Figure 5-3 Nonunity feedback control system. 
Toolbox 5-4-1 5·4 Steady·State Error 0
~ 259 
system in Fig. 5-3 is to have the outputy(t) track the inputr(t) as closely as possible, and the 
system transfer functions are 
1 G(s)-......,.....--­-s2(s + 12) H(s) = 5(s + 1) 
(s + 5) 
We can show that, if H(s) = 1, the characteristic equation is 
s3 + 12s2 + 1 = 0 (5-12) 
(5-13) 
which has roots in the right-half s-plane, and the closed-loop system is unstable. We can 
show that the H(s) given in Eq. (5-12) stabilizes the system, and the characteristic equation 
becomes 
s4 + 17 s3 + 60s2 + 5s + 5 = 0 (5-14) 
In this case, the system error may still be defined as in Eq. (5-10). 
However, consider a velocity control system in which a step input is used to control the 
system output that contains a ramp in the steady state. The system transfer functions may 
be of the form 
1 
G(s) = 82(s + lZ} H(s) = K1s (5-15) 
where H(s) is the transfer function of an electromechanical or electronic tachometer, and K1 
is the tachometer constant. The system error should be defined as in Eq. (5-9), where the 
reference signal is the desired velocity and not r(t). In this case, because r(t) and y{t) are not 
of the same dimension, it would be meaningless to define the error as in Eq. (5-10). To 
illustrate the system further, let K1 = 10 volts/rad/sec. This means that, for a unit-step input 
of 1 volt, the desired velocity in the steady state is 1/10 or 0.1 rad/sec, because wht!n this is 
achieved, the output voltage of the tachometer would be 1 volt, and the steady-state error 
would be zero. The closed-loop transfer function of the system is 
Y(s) G(s) l 
M(s) = R(s) = 1 + G(s)H(s) = s(s2 + 12s + 10) (5-16) 
Step Response 
For the system in Eq. 5~15: 
1 
G{s) = s2(s + 12) H(s) = K1s 
%use Kt=lO 
%Step input 
Kt=lO; i 100 
Gzpk=zpk( [], [O O -12], 1) 
G=tf(Gzpk) 
H=zpk(O, [] ,Kt) 
cloop=feedback(G,H) 
step(cloop) 
xlabel('Tirne(sec)'); 
ylabel('Amplitude'); SOO 1000 
lime(sec) 1@ 
260 Chapter 5. Time-Domain Analysis of Control Systems 
D(s) 
R(s) U(s) Y(s) 
+ 
Figure 5-4 System with disturbance input. 
For a unit-step function input, R(s) = 1 / s. The output time response is 
y(t) = O. It -0.12 -0.000796e-l l.lt + 0.1208e-0·9011 t 2': O (5-17) 
Because the exponential terms of y(t) in Eq. (5-17) all diminish as t-> oo, the steady-state 
part of y(t) is O.lt -0.12. Thus, the steady-state error of the system is 
ess = lim [O.lt -y(t)] = 0.12 
1-+00 (5-18) 
More explanations on how to define the reference signal when H(s) =f 1 will be given 
later when the general discussion on the steady-state error of nonunity feedback systems is 
given. 
Not all system errors are defined with respect to the response due to the input. Fig. 5-4 
shows a system with a disturbance d(t), in addition to the input r(t). The output due to d(t) 
acting alone may also be considered an error. 
Because of these reasons, the definition of system error has not been unified in the 
literature. To establish a systematic study of the steady-state error for linear systems, we 
shall classify three types of systems and treat these separately . 
1. Systems with unity feedback; H(s) = 1. 
2. Systems with nonunity feedback, but H(O) = KT-J = constant. 
3. Systems with nonunity feedback , and H(s) has zeros at s = 0 of order N. 
The objective here is to establish a definition of the error with respect to one basic system 
configuration so that some fundamental relationships can be determined between the 
steady-stale error and the syslem parameters. 
Type of Control Systems: Unity Feedback Systems 
Consider that a control system with unity feedback can be represented by or simplified to 
the block diagram with H(s) = 1 in Fig. 5-3. The steady-state error of the system is written 
ess = Jim e(t) = Jim sE(s) 
t-+oc s->O 
. sR(s) 
= lun---
s->O l + G(s) (5-19) 
Clearly, e,, depends on the characteristics of G(s). More specifically , we can show that e,,s 
depends on the number of poles G(s) has at s = 0. This number is known as the type of the 
control system or, simply, system type. 
. EXAMPLE 5-4-1 5-4 Steady-State Error ,,. 261 
We can show that the steady-state error ess depends on the type of the control system. Let us 
fonnalize the system type by referring to the form of the forward-path transfer function 
G(s). In general. G(s) can be expressed for convenience as 
G(s) = K~l + T1s)(l + T2s) · · · (l + Tmis+ Tm2s2) e-T,1s 
sl( 1 + Tas)(l +Tbs)··· (1 + Tnis + Tn2s2) (5-20) 
where Kand all the T's are real constants. The system type refers to the order of the pole of 
G(s) at s = 0. Thus, the closed-loop system having the forward-path transfer function of 
Eq. (5-20) is type j. where j = 0, l, 2, .... The total number of terms in the numerator and 
the denominator and the values of the coefficients are not important to the system type, as 
system type refers only to the number of poles G(s) has at s= 0. The fol1owing example 
illustrates the system type with reference to the form of G(s). 
G(s) _ K(l + 0.5s) 
-s( I + s )( l + 2s )( I + s + s2) type 1 
G(s) = K(l s: 2s) type3 (5-22) 
Now let us investigate the effects of the types of inputs on the steady-state error. We shall 
consider only the step, ramp, and parabolic inputs. 
Steady-State Error of System with a Step-Function Input 
When the input r(t) to the control system with H(s) = l of Fig. 5-3 is a step function with 
magnitude R, R(s) =Rls, the steady-state error is written from Eq. (5-19), 
1. sR(s) . R R 
ess = un = hm = ----s-o I + G(s) s-o I + G(s) 1 + y~ G(s) 
For convenience, we define 
Kp = lim G(s) 
S'-+0 
as the step-error constant. Then Eq. (5-23) becomes 
R 
ess = 1 + K p (5-23) 
(5-24) 
(5-25) 
A typical ess due to a step input when Kp is finite and nonzero is shown in Fig. 5-5. We see 
from Eq. (5-25) that, for ess to be zero, when the input is a step function, Kp must be infinite. 
If G(s) is described by Eq. (5-20), we see that, for KP to be infinite,jmust be at least equal to 
unity; that is, G(s) must have at least one pole at s = 0. Therefore, we can summarize the 
steady-state error due to a step function input as follows: 
Type O system: R 
ess = 1 + KP = constant 
Type 1 or higher system: eSS' = 0 
262 · Chapter 5. Time-Domain Analysis of Control Systems 
r(t) 
y(t) Reference input 
1it) = Rus(t) 
Ri---<-----1------------..,.,._-~-~ 
0 t 
Figure 5-5 Typical steady-state error due to a step input. 
Steady-State Error of System with a Ramp~Function Input 
When the input to the control system [H(s) = 1] of Fig. 5-3 is a ramp function with 
magnitude R. 
r(t) = Rtus(t) 
where R is a real constant, the Laplace transform of r(t) is 
R R(s) = 2 s 
The steady-state error is written using Eq. (5-19), 
1. R R eH= lffi =----'' s-os + sG(s) lim0sG(s) 
S---+ 
We define the ramp-error constant as 
Then, Eq. (5-26) becomes Kv = limsG(s) s-o 
R 
ess =-K 
V (5-26) 
(5-27) 
(5-28) 
(5-30) 
which is the steady-state en-or when the input is a ramp function. A typical e.u due to a ramp 
input when Ki· is finite and nonzero is illustrated in Fig. 5-6. 
r(t) 
y{t) 
0 t 
Figure 5-6 Typical steady-state error due to a ramp-function input. 
5~4 Steady~State Error -. 263 
Eq. (5-30) shows that, for ess to be zero when the input is a ramp function, K •. must be 
infinite. Using Eqs. (5-20) and (5-29). we obtain 
K 
K..,,. = limsG(s) = lim--==i j = 0, I, 2, ... s-0 s-osJ (5-31) 
Thus, for Ki· to be infinite, j must be at least equal to 2, or the system must be of type 2 or 
higher. The following conclusions may be stated with regard to the steady-state error of a 
system with ramp input: 
Type O system: ess = 00 
R Type 1 system: e.u = K.., = constant 
Type 2 system: ess = 0 
Steady-State Error of System with a Parabolic-Function Input 
When the input is described by the standard parabolic form 
the Laplace transform of r(t) is 
R R(s) = 3 s 
The steady-state error of the system in Fig. 5-3 with H(s) = I is 
R (5-32) 
(5-33) 
A typical e55 of a system with a nonzero and finite K" due to a parabolic-function input is 
shown in Fig. 5-7. 
Defining the parabolic-error constant as 
Ka = lim s2G(s) (5-35) s-o 
the steady-state error becomes 
r(t) 
y(t) R 
ess = Ka 
0 I 
Figure 5-7 Typical steady-state error due to a parabolic-function input. (5-36) 
264 ::: Chapter 5. Time-Domain Analysis of Control Systems 
TABLE 5-1 Summary of the Steady-State Errors Due to Step-, Ramp-, and Parabolic-Function 
Inputs for Unity-Feedback Systems 
Steady-State Error ess 
Type of System Error Constants Step Input Ramp Input Parabolic 
j K11 Kv Ka R Ji 11. 
l+Kp Kf Ka 
0 K 0 0 R 00 00 i+K 
1 00 K 0 0 R 00 K 
2 00 00 K 0 0 R K 
3 00 00 00 0 0 0 
Following the pattern set with the step and ramp inputs, the steady-state error due to the 
parabolic input is zero if the system is of type 3 or greater. The following conclusions are 
made with regard to the steady-state error of a system with parabolic input: 
Type O system: ess = oo 
Type 1 system: ess = oo 
R 
Type 2 system: e_..s = -K = constant 
il 
Type 3 or higher system: ess = 0 
We cannot emphasize often enough that, for these results to be valid, the closed-loop 
system must be stable. 
By using the method described, the steady~state error of any linear closed-loop system 
subject to an input with order higher than the parabolic function can also be derived if 
necessary. As a summary of the error analysis, Table 5-1 shows the relations among the 
error constants, the types of systems with reference to Eq. (5-20)1 and the input types. 
As a summary~ the following points should be noted when applying the error-constant 
analysis just presented. 
1. The step-, ramp-, or parabolic-error constants are significant for the error analysis 
only when the input signal is a step function, ramp function, or parabolic function, 
respectively. 
2. Because the error constants are defined with respect to the forward-path transfer 
function G(s), the method is applicable to only the system configuration shown in 
Fig. 5-3 with H(s) = 1. Because the error analysis relies on the use of the final­
value theorem of the Laplace transform, it is important to check first to see if sE(s) 
has any poles on the jw-axis or in the right-half s-plane. 
3. The steady-state error properties summarized in Table 5-1 are for systems with 
unity feedback only. 
4. The steady-state error of a system with an input that is a Jinear combination of the 
three basic types of inputs can be determined by superimposing the errors due to 
each input component. 
5. When the system configuration differs from that of Pig. 5-3 with H(s) = l, we can 
either simplify the system to the form of Fig. 5-3 or establish the error signal and 
apply the final-value theorem. The error constants defined here may or may not 
apply, depending on the individual situation. 
5-4 Steady-State Error · ~: 265 
When the steady-state error is infinite, that is, when the error increases continuously 
with time, the error-constant method does not indicate how the error varies with time. This 
is one of the disadvantages of the error-constant method. The error-constant method also 
does not apply to systems with inputs that are sinusoidal, since the final-value theorem 
cannot be applied. The following examples illustrate the utility of the error constants and 
their values in the determination of the steady-state errors of linear control systems with 
unity feedback. 
· EXAMPLE 5-4-2 Consider that the system shown in Fig. 5-3 with H(s) = 1 has the foIIowing transfer functions. The 
error constants and steady-state errors are calculated for the three basic types of inputs using the error 
constants. 
a. 
b. 
c. 
Toolbox 5-4-2 G K(s + 3.15} 
(s) = s(s + 1.5)(s + 0.5) H(s) = l Type 1 system 
Step input: Step-error constant Kp = oo 
Ramp input: Ramp-error constant Kv = 4.2K 
Parabolic input: Parabolic-error constant Ka == 0 R 
ess =--=0 l + Kp 
R R 
ess = K1• = 4.2K 
R 
ess =-= 00 Ka 
These results are valid only if the value of K stays within the range that corresponds to a 
stable closed-loop system, which is O < K < 1.304. 
K 
G(s) = sZ(s + 12) H(s) = 1 Type 2 system 
The closed-loop system is unstable for all values of K, and error analysis is meaningless. 
Gs _ 5(s + 1) 
( ) -sZ(s + 12)(s + 5) H(s) = 1 Type2system 
We can show that the closed-loop system is stable. The steady-state errors are 
calculated for the three basic types of inputs. 
For the system in Example 5-4-2: 
K(s + 3.15) 
(a) G(s) = J'(s + l.S){s + O.S) H(s) = 1 Type I system 
% Step input 
K=l; % Use K~l 
Gzpk=zpk ( [ - 3 . 15 ] , [ 0 -1. 5 -0 . 5] , 1) 
G=tf(Gzpk); 
H=l; 
clooptf=feedback(G,H) 
step(clooptf) 
xlabel('Time(sec)'); 
ylabel('Amplitude'); 
266 Chapter 5. Time~Domain Analysis of Control Systems 
step Response 
1.8 
1.4 
1.2 
0.6 
04 
02 
o..._~--~--~_,_~--.~~..._~---~~~~~~ 
0 20 40 60 80 100 1~ ,~ ,~ 180 
Time(sec) (sec) 
Similarly you may obtain the ramp and parabolic responses 
%Ramp input 
t=0:0.1:50; 
u=t; 
[y,x]=lsim(clooptf,u,t); plot(t,y,t,u); 
title(• Closed-loop response for Ramp Input') 
xlabel('Time(sec)') 
ylabel('Arnplitude') 
%Parabolic input 
t=0:0.1:50; 
u = 0 . 5 *t . *t ; 
[y,x]=lsim(clooptf,u,t); 
plot(t,y,t,u); 
title( 'Closed-loop response for Parabolic Input') 
xlabel(1Time(sec') 
ylabel('Amplitude') 
Step input: Step~error constant: Kp = oo 
Ramp input: Ramp-error constant: Kv = oo 
Parabolic input: Parabolic-error constant: Ka = l / 12 R 
ess =-= 0 Kv 
R 
e.ss =Ka= 12R 
Relationship between Steady-State Error and Closed-Loop Transfer Function 
In the last section, the steady-state error of a closed-loop system was related to the forward­
path transfer function G(s) of the system, which is usually known. Often, the closed-loop 
transfer function is derived in the analysis process, and it would be of interest to establish 
the relationships between the steady-state error and the coefficients of the closed-]oop 
transfer function. A.Ii it turns ou4 the closed-loop transfer function can be used to find the 
steady-state error of systems with unity as well as nonunity feedback. For the present 
discussion, let us impose the following condition; 
lim H(s) = H(O) = KH = constant 
s-+O (5-37) 
5-4 Steady-State Error < 267 
which means that H(s) cannot have poles at s = 0. Because the signal that is fed back to be 
compared with the input in the steady state is KH times the steady-state output, when this 
feedback signal equals the input, the steady-state error would be zero. Thus. we can define 
the reference signal as r(t)/ KH and the error signal as 
1 e(t) = KH r(t) -y(t) (5-38) 
or. in the transfonn domain. 
1 1 E(s) = KH R(s) -Y(s) = KH [1 -KnM(s)]R(s) (5-39) 
where M(s) is the closed-loop transfer function, Y(s)/R(s). Notice that the above develop­
ment includes the unity-feedback case for which Kn = I. Let us assume that M(s) does not 
have any poles at s = 0 and is of the form 
M(s) = Y(s) = bm:!'1 + bm-1sm-t + · · · +bis+ bo 
R(s) sn + an-1sn-l + .. · + a1s + ao (5-40) 
where n > m. We further require that all the poles of M(s) are in the left-half s-plane, which 
means that the system is stable. The steady-state error of the system is written 
ess = lim sE(s) = lim Kl [l -KHM(s)]sR(s) 
s-•O s---..0 ff 
Substituting Eq. (5-40) into the last equation and simplifying, we get 
We consider the three basic types of inputs for r(t). 
1. Step-function input. R(s) = R/s. (5-41) 
(5-42) 
For a step-function input, the steady-state error in Eq. (5-42) becomes 
_ 1 (ao -boKn)R ess--Kn ao 
Thus, the steady-state error due to a step input can be zero only if 
or ao-boKH =0 
M(O) = bo =-1 
ao KH (5-43) 
(5-44) 
(5-45) 
This means that,Jor a unity-feedback system KH = 1, the constant terms of the 
numerator and the denominator of M(s) must be equal, that is, bo = a0,for the 
steady-state error to be zero. 
268 i: Chapter 5. Time-Domain Analysis of Control Systems 
2. Ramp-function input. R (s) = R/ s2. 
For a ramp-function input, the steady-state error in Eq. (5-42) becomes 
ess =-1-lim sn + "· + (a1 -b1Kn)s + (ao -boKn) R 
KHs-o s(s" +a11-1sn-t + · · · +a1s+ao) 
The following values of e.~!'i are possible: 
ess = 0 if ao -boKH = 0 and a, -b1KH =0 
a1 -b1Kn if ao -boKn = 0 and a1 -b1KH ,l=O ess = R = constant aoKH 
ess = oo if ao-boKH-:f.0 
3. Parabolic-function input. R(s) = R/s3• 
For a parabolic input, the steady-state error in Eq. (5-42) becomes 
1 1. s11 + · · · + (a2 -b2KH)s2 + (a1 -b1KH}s + (ao -boKH)R 
ess =-1m 2 I ) Ka s-o s (sn + an-isn-+ · · · + ais + ao 
The following values of e99 are possible: 
ess = 0 if ai-biKH = 0 for i = O, 1, and2 
a2-b2KH if ai -biKH = 0 for i= 0 and 1 ess = K R = constant 
ao H 
ess = 00 if ai -biKa-:f.O for i= 0 and 1 (5-46) 
(5-47) 
(5-48) 
(5-49) 
(5-50) 
(5-51) 
(5-52) 
(5-53) 
f'--EXAMPLE 5-4-3 The forward-path and closed-loop transfer functions of the system shown in Fig. 5-3 are given next. 
The system is assumed to have unity feedback, so H(s) = 1, and thus KH = H(O) = 1. 
Gs _ 5(s + 1) M 
8 _ 5(s + l) 
( ) -s2(s + 12)(s + 5) ( ) -s4 + 17s3 + 60s2 + 5s + 5 (5-54) 
The poles of M(s) are all in the left-half s-plane. Thus, the system is stable. The steady-state 
errors due to the three basic types of inputs are evaluated as follows: 
Step input: ess = 0 since ao = bo( = 5) 
Ramp input: ess = 0 sinceao = ho(= 5) anda1 = h1 (= 5) 
Parabolic input: _ a2 -b2KHR _ 60R-lZR ess - - ~ · aoKH 5 
Because this is a type 2 system with unity feedback, the same results are obtained with the error­
constant method. 
5-4 Steady-State Error :. 269 
EXAMPLE 5-4-4 Consider the system shown in Fig. 5-3, which has the following transfer functions: 
1 
G(s) = s2(s + 12) H(s) = 5(s + 1) 
s+s 
Then, KH = H(O) = 1. The closed-loop transfer function is 
Ms _ Y(s) _ G(s) _ s + 5 
( ) -R(s) -1 + G(s)H(s) -s4 + 17s3 + 60s2 + 5s + 5 (5-55) 
(5-56) 
Comparing the last equation with Eq. (5-40), we have ao = 5, a1 = 5, a2 = 60, bo = 5, b1 = I, and 
b2 = 0. The steady-state errors of the system are calculated for the three basic types of inputs. 
Unit-step input, r(t) = us(t): 
Unit-ramp input, r(t) = tus(t): 
Unit-parabolic input, r{t) = tH.t(t)/2~ ets = oo sincea1 -b1KH #-0 
It would be illuminating to calculate the steady-state errors of the system from the difference between 
the input and the output and compare them with the results just obtained. 
Applying the unit-step, unit-ramp. and unit-parabolic inputs to the system described by 
Eq. (5-56). and taking the inverse Laplace transform of Y(s), the outputs are 
U nit•step input: 
y(t) = I -0.00056e-12·051 -0.0001381e-4·8861 
-0.9993e-0·03021 cos0.2&9&t -0.130le-0·03021 sin0.2898t t ~o 
Thus, the steady-state value of y( t) is unity, and the steady-state error is zero. 
Unit-ramp input: 
y(t) =t -0.8 + 4.682 X 10-Se-JZ.OSt + 2.826 X IO-Se-4·8861 
+ o.se-0·03021 cos0.2898t -3.36Se-0·0302' sin0.2898t t 2: 0 (5-57) 
Thus, the steady-state portion of y(t) is t -0.8. and the steady-state error to a unit ramp is 0.8. 
Unit-parabolic input: 
y(t) = 0.5t2 -0.8! -11.2 -3.8842 X ro-6e-lZ.OSt -5.784 X I0-6e~4-8861 
+ ll.2e-0•03021 cos0.2898t + 3.9289e-0·03021 sin0.2898t t ~ 0 (5-59) 
The steady-state portion of y(t) is 0.5t2 -0.8t -11.2. Thus, the steady-state error is 0.8t + 11.2, 
which becomes infinite as time goes to infinity. 
EXAMPLE 5-4-5 Consider that the system shown in Fig. 5-3 has the following transfer functions: 
I IO(s+ I) 
G(s) = 2( l2) H(s) = 5 s s+ s+ (5-60) 
Thus, 
KH = lim H(s) = 2 
s--+O (5-61) 
The closed-loop transfer function is 
M(i) _ Y(s) _ G(s) _ s + 5 
' -R(s) -l + G(s)H(s) -s4 + I 7s3 + 60s2 + 10s + 10 (5-62) 
270 · Chapter 5. Time-Domain Analysis of Control Systems 
The steady-state errors of the system due to the three basic types of inputs are calculated as follows: 
Unit-step input r(t) = Us(t): 
ess = _l (ao -boKH) = ! (IO -5 x 2) = 0 KH ao 2 10 (5-63) 
Solving for the output using the M(s) in Eq. (5-62), we get 
y(t) = O.Sus(t) + transientterms (5-64) 
Thus, the steady-state value of y(t) is 0.5, and because KH = 2, the steady-state error due to a unit­
step input is zero. 
Unit-ramp input r(t) = tus(t): 
= _1 (al -b1KH) = ~ (10 -1 X 2) = O 4 es... KH ao 2 10 · 
The unit-ramp response of the system is written 
y(t} = [O.St -0.4]u.f(t) + transient terms 
Thus, using Eq. (5-38), the steady-state error is calculated as 
e(t) = ;H r(t) -y(t) == 0.4us(t) -transient terms (5-65) 
(5-66) 
(5-67) 
Because the transient terms will die out as t approaches infinity, the steady-state error due to a unit­
ramp input is 0.4, as calculated in Eq. (5-66). 
Unit-parabolic input r(t) = t2us(t)/2: 
ess = oo since a1 -b1KH :pO 
The unit-parabolic input is 
y(t) = [0.25t2 -0.4t -2.6]u9(t) + transienttenns 
The error due to the unit-parabolic input is 
e(t) = ;H r(t) -y(t) = (0.4t -2.6)u9{t) -transient terms (5-69) 
Thus, the steady-state error is 0.4t + 2.6. which increases with time. 
Steady-State Error of Nonunity Feedback: H(s) Has Nth-Order Zero at s = 0 
This case corresponds to desired output being proportional to the Nth-order derivative of 
the input in the steady state. In the real world, this corresponds to applying a tachometer or 
rate feedback. Thus, for the steady-state error analysis, the reference signal can be defined 
as R(s)/KHsN~ and the error signal in the transform domain may be defined as 
where 1 E(s) = K N R(s) -Y(s) (5-70) 
HS 
K 1. H(s) 
H ::::::: tm-:;;r­s-+0 y· (5-71) 
We shall derive only the results for N = 1 here. In this case. the transfer function of M(s) in Eq. 
(5-40) will have a pole at s = O. or ao = 0. The steady-state error is written from Eq. (5-70) as 
_ 1 I' [s'1-l + · · · + (a2 -b1KH)s + (a1 -boKH)] R() 
ess -Kn s1!.:A s" + an-1sn-l + · · · + a1s s s (5-72) 
5-4 Steady-State Error .. ·; 271 
For a step input of magnitude R, the last equation is written 
(5-73) 
Thus, the steady-state error is 
ess = 0 if a2 -h1KH =0 and a1 -boKH = 0 (5-74) 
a2 -b1KH if a1 -boKH = O but a2 -b1Kw/:O (5-75) ess = K R = constant 
llf H 
ess = 00 if a1 -boKH f:. 0 (5-76) 
We shall use the following example to iUustrate these results. 
EXAMPLE 5-4-6 Consider that the system shown in Fig. 5-3 has the following transfer functions: 
Toolbox 5-4-3 Thus, 1 G(s) ---,.--­-s2(s + 12) H(s) = lOs 
s+5 
. H(s) KH = hm--=2 s-0 S 
The closed-loop transfer function is 
Ms _ Y(s) _ s + 5 
( )-R(s) -s4+ 17s3 +60s2+ 10s (5-77) 
(5-78) 
(5-79) 
The velocity control system is stable, although M(s) has a po1e at s = 0, because the objective is to 
control velocity with a step input. The coefficients are identified to be ao = 0, a1 = 10, 
a2 = 60, bo = 5, and b1 = 1. 
For a unit-step input, the steady-state error. from Eq. (5-75)~ is 
== _l_ (a2 -ht Kn) = ~ (60 - 1 x 2) = 2 9 ess Kn at 2 10 · (5-80) 
To verify this result, we find the unit-step response using the closed-loop transfer function in 
Eq. (5-79). The result is 
y(t) = (0.5t -2.9)us(t) + transientterms (5 .. 81) 
From the discussion that leads to Eq. (5-70), the reference signal is considered to be tus(t)/KH = 
0.5tus(t) in the steady state; thus, the steady-state error is 2.9. Of course, it should be pointed out that 
if H(s) were a constant for this type 2 system, the closed-loop system would be unstable. So, the 
derivative control in the feedback path also has a stabilizing effect. 
The corresponding responses for Eq. 5~79 are obtained by the following sequence of MATLAB functions 
t=O:Q.1:50; 
nurn::::: [1 S]; 
den= [117 60 10 OJ; 
sys= tf(nurn, den); 
sys_cl=feedback(sys,1); 
[y,t)=step(sys_cl); 
272 : Chapter 5. Time-Domain Analysis of Control Systems 
u=ones(size(t)); 
plot(t,y, 'r' ,t,u, 1g') 
xlabel(1Tirne(secs)') 
ylabel('Amplitude') 
title('Input-green, Output-red') 
Input-green, Output-red 
1.4 ,----..........:~--.------,,------r------r------. 
1.2 
.g 0.8 
-~ J 0.6 
0.4 
0.2 
10 20 30 
Time(secs) 
5-4-2 Steady-State Error Caused by Nonlinear System Elements 50 60 
In many instances, steady-state errors of control systems are attributed to some nonlinear 
system characteristics such as nonlinear friction or dead zone. For instance, if an amplifier 
used in a control system has the input-output characteristics shown in Fig. 5-8, then: when 
the amplitude of the amplifier input signal falls within the dead zone, the output of the 
amplifier would be zero, and the control would not be able to correct the error if any exists. 
Dead-zone nonlinearity characteristics shown in Fig. 5-8 are not limited to amplifiers. The 
flux-to-current relation of the magnetic field of an electric motor may exhibit a similar 
characteristic. As the current of the motor faUs below the dead zone D~ no magnetic flux, 
and, thus. no torque will be produced by the motor to move the load. 
The output signals of digital components used in control systems, such as a micro­
processor, can take on only discrete or quantized levels. This property is illustrated by the 
quantization characteristics shown in Fig. 5-9. When the input to the quantizer is within 
±q/2, the output is zero, and the system may generate an error in the output whose 
Output 
Input 
Figure 5-8 Typical input-output 
characteristics of an amplifier with dead 
zone and saturation. 
5-4 Steady-State Error 273 
Output 
Sq 
4q 
3q 
q 
-Sq -4q -3q -2q -q 0 (/ 2q 3q 4q 5q fnput 
-q 
-2q 
-3q 
-4q 
-5q 
Figure 5-9 Typical input-output characteristics of a quantizer. 
magnitude is related to ±q /2. This type of error is also known as the quantization error in 
digital control systems. 
When the control of physical objects is involved, friction is almost always present. 
Coulomb friction is a common cause of steady-state position errors in control systems. 
Fig. 5-10 shows a restoring-torque-versus-position curve of a control system. The torque 
curve typically could be generated by a step motor or a switched-reluctance motor or from 
a closed-loop system with a position encoder. Point O designates a stable equilibrium point 
on the torque curve, as well as the other periodic intersecting points along the axis where 
the slope on the torque curve is negative. The torque on either side of point O represents a 
restoring torque that tends to return the output to the equHibrium point when some angular­
displacement disturbance takes place. When there is no friction, the position error should 
be zero. because there is always a restoring torque so long as the position is not at the stable 
Torque 
Figure 5-10 Torque-angle curve of a motor or closed-loop ;;ystem with Coulomb friction. 
274 liP Chapter 5. Time-Domain Analysis of Control Systems 
equilibrium point. If the rotor of the motor sees a Coulomb friction torque T F, then the motor 
torque must first overcome this frictional torque before producing any motion. Thus, as the 
motor torque falls below T F as the rotor position approaches the stable equilibrium point, it 
may stop at any position inside the error band bounded by· ±Be, as shown in Fig. 5-10. 
Although it is relatively simple to comprehend the effects ofnonlinearities on errors and 
to establish maximum upper bounds on the errormagnitudes, it is difficult to establish general 
and closed-form solutions for nonlinear systems. Usually, exact and detailed analysis of 
errors in nonlinear control systems can be carried out only by computer simulations. 
Therefore, we must realize that there are no error-free control systems in the real 
world, and, because aII physical systems have nonlinear characteristics of one form or 
another, steady-state errors can be reduced but never completely eliminated. 
5-5 TIME RESPONSE OF A PROTOTYPE FIRST-ORDER SYSTEM 
Consider the prototype first-order system of form 
dy(t) + !y(t) = .!. f(t) 
dt , r 
where , is known as the time constant of the system, which is a measure of how fast 
the system responds to initial conditions of external excitations. Note that the input in 
Eq. (5-82) is scaled by t for cosmetic reasons. 
For a unit-step input 
J(t) = u,(t) = {~: : ~ g, 
If y(O) = y(O) = 0, .C(us(t)) =!and .C(y(t)) = Y(s), then s 
1 1/, 
Y(s) =-:;-s + 1/r: (5-83) 
(5-84) 
Applying the inverse Laplace transform to Eq. (5-84), we get the time response ofEq. (5-82): 
y(t) = l -e-t/1: (5-85) 
where , is the time for y(t) to reach 63% of its final value of lim y(t) = 1. r-oo 
Fig. 5-11 shows typical unit-step responses of y(t) for a general value of,. As the value 
of time constant r decreases, the system response approaches faster· to the final value. 
The step response will not have any overshoot for any combination of system parameters. 
y(t) 
0.63 
0 ----------------------------
Figure 5-11 Unit-step response of a 
prototype first-order system. 
I 
r 5-6 Transient Response of a Prototype Second-Order System • 275 
Jw 
s-plane 
0 
Figure 5-12 Pole configuration of the 
transfer function of a prototype first­
order sysrem. 
Fig. 5-12 shows the location of the pole at s = -f in the s-plane of the system transfer 
function. For positiver , the pole at s = -i will always stay in the left-half s-plane, and the 
system is always stable. 
5-6 TRANSIENT RESPONSE OF A PROTOTYPE SECOND-ORDER SYSTEM 
Although true second-order control systems are rare in practice, their analysis generally 
helps to form a basis for the understanding of analysis and design of higher-order systems, 
especially the ones that can be approximated by second-order systems. 
Consider that a second-order control system with unity feedback is represented by the 
block diagram shown in Fig. 5-13. The open-loop transfer function of the system is 
G(s) = Y(s) = w~ 
E(s) s(s + 2{w11) (5-86) 
where { and w,, are real constants. The closed-loop transfer function of the system is 
Y(s) 
R(s) (J)2 n (5-87) 
The system in Fig. 5-13 with the transfer functions given by Eqs. (5-86) and (5-87) is 
defined as the prototype second-order system. 
The characteristic equation of the prototype second-order system is obtained by setting 
the denominator of Eq. (5-87) to zero: 
ll(s) = s2 + 2sW 11S +CV~= Q (5-88) 
For a unit-step function input, R(s) = 1/ s, the output response of the system is obtained by 
taking the inverse Laplace transform of the output transform : 
r(t) ~ 
R(s) + e(t) w~ 
E(s) s(s + 2(w,,) 2 
Y(s)= 2 u.>11 2 
s(s + 2{wns + w11) (5-89) 
y(T) 
Y(s) 
Figure 5-13 Prototype second-order control 
system. 
276 ..., Chapter 5. Time~Domain Analysis of Control Systems 
I. I 
LO 
.-. ... :::. 
0.8 
0.7 
0.6 
0.5 
0.4 
0.3 
0 2 3 4 5 6 7 
lU,it 8 9 10 l I 12 l3 
Figure 5-14 Unit-step responses of the prototype second-order system with various damping ratios. 
This can be done by referring to the Laplace transform table in Appendix C. The result is 
e-t;a,,.t ( ) y(t) = I -~ sin wnv'l -~2t + cos-1; 1 -{2 t~O 
Fig. 5-14 shows the unit-step responses ofEq. (5-90) p]otted as functions of the nonnalized 
time w,,t for various values oft. As seen, the response becomes more oscillatory with larger 
overshoot as { decreases. When t ~ 1, the step response does not exhibit any overshoot; 
that is, y(l) never exceeds its final value during the transient. The responses also show that 
w,1 has a direct effect on the rise time, delay time, and settling time but does not affect the 
overshoot. These will be studied in more detail in the following sections. 
5~6 Transient Response of a Prototype Second-Order System 1 277 
5-6-1 Damping Ratio and Damping Factor 
The effects of the system parameters { and Wn on the step response y(t) of the prototype 
second~order system can be studied by referring tu the roots of the characteristic equation 
in Eq. (5-88). 
Toolbox 5-6-1 
The corresponding time responses for Fig. 5-14 are obtained by the following sequence of MATLAB 
functions 
clear all 
W=lO; 
for l= [ o . 2 o . 4 0 . 6 0 . 8 1 1 . 2 1 . 4 1. 6 1. 8 2] 
t=0:0.1:50; 
nunt = [ w • "2] ; 
den= [1 2*1*w w. A2]; 
t=0:0.01:2; 
step(num,den, t) hold on; 
e.nd 
xlabel(1Time(secs)1) 
ylabel('Amplitude') 
title(' Closed-Loop Step') 1.4 
1.2 
0.6 
0.4 
0.2 
0.2 OA 
The two roots can be expressed as c1osed~Loop step 
0.6 O.B , .2 1 .4 1 .a 1 .a 
Time(secs:) (sec) 
s1, s2 = -(w11 ± jw,, ~ 
=-a± jw 
where 
and 
(JJ = W11 V 1 - {2 2 
(5-91) 
(5-92) 
(5-93) 
The physical significance oft and a is now investigated. As seen from Eqs. (5-90) and 
(5-92), a appears as the constant that is multiplied to t in the exponential term of y(t). 
278 ~ Chapter 5. Time~Domain Analysis of Control Systems 
Therefore, a controls the rate of rise or decay of the unit-step response y(t). In other 
words, a controls the "damping" of the system and is called the damping factor, or the 
damping constant. The inverse of a, 1 / a, is proportional to the time constant of the 
system. 
When the two roots of the characteristic equation are real and equal, we called the 
system critically damped. From Eq. (5-91), we see that critical damping occurs when 
{ = 1. Under this condition, the damping factor is simply a = wn, Thus, we can regard t as 
the damping ratio; that is, 
d . . a actual damping factor s = ampmgrat10 = - = ------------
Wn damping factor at critical damping (5-94) 
5 .. & .. 2 Natural Undamped Frequency 
The parameter w11 is defined as the natural undamped frequency. As seen from Eq. (5-91), 
when t = 0, the damping is zero, the roots of the characteristic equation are imaginary7 and 
Eq. (5-90) shows that the unit-step response is purely sinusoidal. Therefore, Wn corresponds 
to the frequency of the undamped sinusoidal response. Eq. (5-91) shows that, when O < { < l, 
the imaginary part of the roots has the magnitude of w. When { #, 0, the response of y(t) is not 
a periodic function, and 117 defined in Eq. (5w93) is not a frequency. For the purpose of 
reference, w is sometimes defined as the conditional frequency, or the damped frequency. 
Fig. 5-15 illustrates the relationships among the location of the characteristic equation 
roots and a, t~ Wm and w. For the complex-conjugate roots shown, 
• Wn is the radial distance from the roots to the origin of the s-plane. 
• a is the real part of the roots. 
• w is the imaginary part of the roots. 
• { is the cosine of the angle between the radial line to the roots and the negative axis 
when the roots are in the left-half s-plane, or 
~ = cos61 
j(J) 
Root s-plane 
)(--------......-A f) cq, co= co,;Jr -(2 
(J 
X 
Root (5-95) 
Figure 5-15 Relationships among the 
characteristic-equation roots of the 
prototype second-order system and a, ~. run, 
andw. 
j(J) 
(a) 
jm ''" 
Positive 
damping 
-a2 -a1 0 
Positive 
damping 
(c) 5-6 Transient Response of a Prototype Second-Order System ~ 279 
s-plane 
Negative 
damping 
-a3 
Negative 
damping 
a2> a1>0 
a3<0 L . a Positive 
damping 
Positive 
damping 
,2 j(J) 
{b) 
jOJ .. 
0 
(d) s-plane 
Negative 
damping 
(! 
Negative 
damping 
{2> {1 
s-plane 
@2 
ru1 
-. 
(1 
-(1)1 
-Wz 
Figure 5-16 (a) Constant-natural-undamped-frequency loci. (b) Constant-damping-ratio loci. 
(c) Constant-damping-factor loci. (d) Constant-conditional .. frequency loci. 
Fig. 5-16 shows in the s-plane (a) the constant-con loci, (b) the constant-t loci, (c) the 
constant-a loci~ and (d) the constant-a> loci. Regions in the s-plane are identified with the 
system damping as follows: 
• The left~half s .. plane corresponds to positive damping; that is, the damping factor or 
damping ratio is positive. Positive damping causes the unit-step response to settle to 
a constant final value in the steady state due to the negative exponent of 
exp(-tcvnt). The system is stable. 
• The right-half s-plane corresponds to negative damping. Negative damping gives a 
response that grows in magnitude without bound. and the system is unstable. 
• The imaginary axis corresponds to zero damping (a= 0 or { = 0). Zero damping 
results in a sustained oscillation response, and the system is marginally stable or 
marginally unstable. 
Thus. we have demonstrated with the help of the simple prototype second-order 
system that the location of the characteristic equation roots plays an important role in the 
transient response of the system. 
280 ._ Chapter 5. Time-Domain Analysis of Control Systems 
j{V 
(>l 
(--oo (f 
Figure 5-17 Locus of roots of the 
characteristic equation of the 
prototype second-order system. 
The effect of the characteristic equation roots on the damping of the second-order 
system is further illustrated by Fig. 5-17 and Fig. 5-18. In Fig. 5-17, w11 is held constant 
while the damping ratio { is varied from -oo to +oo. The following classification of the 
system dynamics with respect to the value oft is made: 
O<l;< I: s1, s2 = -l;u),i±jw 11~ (-l;u),z <0) zmderdamped 
t;= I; SJ, S2 = -W11 critically damped 
l;> l: s1, s2 = -l;tv11 ± wnJt;2 -1 overdamped 
1;=0: St, s2 = ±Jw,, undamped 
l;<O: st, s2 = -t;w,, ± jw11J1 -1;2 (-t;w,, > O) negatively damped 
Fig. 5-18 illustrates typical unit-step responses that correspond to the various root locations 
already shown. 
In practical applications, only stable systems that correspond to s > 0 are of interest. 
Fig. 5-14 gives the unit-step responses ofEq. (5-90) plotted as functions of the normalized 
time Wrl for various values of the damping ratio (. As seen, the response becomes more 
oscillatory as l; decreases in value. When l; ~ l, the step response does not exhibit any 
overshoot; that is, y( t) never exceeds its final value during the transient. 
5-6-3 Maximum Overshoot 
The exact relation between the damping ratio and the amount of overshoot can be obtained 
by taking the derivative of Eq. (5-90) with respect tot and setting the result to zero. Thus~ 
dy(t) w e-(w,,t [ ~ ] -d = ~ l; sin(wt + 8) -v' 1 -t2 cos(wt + 8) t 1 _ ,;2 t2:':0 (5-96) 
where wand() are defined in Eqs. (5-93) and (5-95), respectively. We can show that the 
quantity inside the square bracket in Eq. (5-96) can be reduced to sin wt. Thus, Eq. (5-96) is 
simplified to 
(5-97) 
jw 
s-plane 
0 
'> 1 
jw 
s-plane 
0 
s-plane . X ,w 
0<{<1 
0 
X 
jro 
s-plane 
0 
jru 
s-plane 
0 
0> (>-1 
j{J) 
s-pJane 
s<-1 0 5-6 Transient Response of a Prototype Second-Order System .,.. 281 
y(t) 
0 
0 
y(t) 
a 
0 
y(t) 
(J' 
0 
y(t) 
X 
X 
y(t) 
C1 
0 
Figure 5-18 Step-response comparison for various characteristic-equation-root locations 
in the s-plane. 
282 ..,. Chapter 5. Time-Domain Analysis of Control Systems 
Setting dy(t)/ dt to zero, we have the solutions: t = oo and 
Wn~t = ,m: n = 0, 1, 2, ... (5-98) 
from which we get 
mr I= ~ n=0,1,2, ... 
Wn V 1 -{2 (5-99) 
The solution at t = oo is the maximum of y(t) only when t ~ 1. For the unit-step responses 
shown in Fig. 5-13, the first overshoot is the maximum overshoot. This corresponds to 
n = I in Eq. (5-99). Thus, the time at which the maximum overshoot occurs is 
lmax= .~ 
WnV I -{-(5-100) 
With reference to Fig. 5-13, the overshoots occur at odd values of n, that is, n = 1, 3, 
5, ... , and the undershoots occur at even values of n. Whether the extremum is an 
overshoot or an undershoot, the time at which it occurs is given by Eq. (5-99). It should be 
noted that, although the unit-step response for ( # 0 is not periodic. the overshoots and the 
undershoots of the response do occur at periodic intervals, as shown in Fig. 5-/9. 
The magnitudes of the overshoots and the undershoots can be determined by 
substituting Eq. (5-99) into Eq. (5-90). The result is 
-mrt;/~ 
y(tllmaxormin = I -e ~ sin(mr + 9) II= I, 2, ... (5-101) 
or 
( )I . -1 (-1)11-l -mr:r,/VN2 = 1 2 Y 1 max ar mm -+ e n , t • • • (5-102) 
Figure 5-19 Unit-step response illustrating that the maxima and minima occur at periodic intervals. 
100 
\ 
80 c \ 
\ 
0 ..c:: 
~ 60 a:i > 0 \ 
\ 
fie 
Cl) 
OJ) 
~ 
E. 40 Cl) \ 
~ 
Cl) 
Q., 
20 
0 0.2 '\ 5-6 Transient Response of a Prototype Second-Order System ~ 283 
', 
"" ""--0.4 0.6 0.8 
Da01ping ratio ( 1.0 Figure 5-20 Percent overshoot as a 
function of damping ratio for the step 
1.2 response of the prototype second-order 
system. 
The maximum overshoot is obtained by letting n = 1 in Eq. (5-102). Therefore. 
maximum overshoot= Ymax -1 = e-1r,;J~ (5-103) 
and 
percent maximum overshoot = I ooe-1'(1;/ ~ (5-104) 
Eq. (5-103) shows that the maximum overshoot of the step response of the prototype 
second-order system is a function of only the damping ratio{. The relationship between 
the percent maximum overshoot and the damping ratio given in Eq. (5-104) is plotted in 
Fig. 5-20. The time lmax in Eq. (5-100) is a function of both t and w,l' 
5-6-4 Delay Time and Rise Time 
It is more difficult to determine the exact analytical expressions of the delay time ti1, rise 
time t,., and settling time t.s-, even for just the simple prototype second-order system. For 
instance, for the delay time, we would have to set y(t) = 0.5 in Eq. (5-90) and solve fort. 
An easier way would be to plot w,,td versus {, as shown in Fig. 5-21. and then approximate 
the curve by a straight line or a curve over the range of O < { < 1. From Fig. 5-21. the delay 
time for the prototype second-order system is approximated as 
Id~ 1 + 0.7( 0 < { < 1.0 
cu,, 
We can obtain a better approximation by using a secondMorder equation for t,1: 
1.1 + 0.125{ + 0.469(2 
id~ o < s< 1.0 
W11 (5-106) 
For the rise time t,, which is the time for the step response to reach from IO to 90% of its 
final value. the exact value can be determined directly from the responses of Fig. 5-14. The 
284 Ila-Chapter 5. Time-Domain Analysis of Control Systems 
2.5 ......----......----~--~--..---------~--~-~ 
0 0.2 0.4 0.6 0.8 
{ 1.0 1.2 1.4 1.6 
Figure 5-21 Normalized delay time versus { for the prototype second-order system. 
plot of Wnlr versus s is shown in Fig. 5-22. In this caset the relation can again be 
approximated by a straight line over a limited range of (: 
0.8 +2.5~ tr= 0 < ?;< 1 
Wn 
A better approximation can be obtained by using a second-order equation: 
0 0.2 1 -o.416n + 2.911f t, = 0< t< 1 
0.4 0.6 
t Wn 
0.8 1.0 1.2 
Figure 5-22 Normalized rise time versus s for the prototype second-order system. (5-108) 
5-6-5 Settling Time 5-6 Transient Response of a Prototype Second-Order System 285 
From this discussion , the following conclusions can be made on the rise time and delay 
time of the prototype second-order system: 
• t,. and td are proportional to { and inversely proportional to wn. 
• Increasing (decreasing) the natural undamped frequency w,, will reduce (increase) 
tr and td. 
From Fig. 5-14, we see that, when O < ~ < 0.69, the unit-step response has a maximum 
overshoot greater than 5%, and the response can enter the band between 0.95 and 1.05 for 
the last time from either the top or the bottom. When~ is greater than 0.69, the overshoot is 
less than 5%, and the response can enter the band between 0.95 and 1.05 only from the 
bottom. Fig. 5-23(a) and (b) show the two different situations. Thus, the settling time has a 
l+-1-~ 
I + _I -e -(W,il ,,/' ..p 
1 __ 1_.-,w.1 ..p 
1, 
I _1_ 
-~ 
(a) 0< (<0.69 
I.OS 
1.00 
0.95 -------------------------- -----------
0 ,., 
(b) '> 0.69 
Figure 5-23 Settling time of the unit-step response. 
286 t>-Chapter 5. Time-Domain Analysis of Control Systems 
(C) 
Figure 5-23 (continued) 
discontinuity at { = 0.69. The exact analytical description of the settling time t. .. is difficult 
to obtain. We can obtain an approximation for(., for O < { < 0.69 by using the envelope of 
the damped sinusoid of y(t)., as shown in Fig. 5-23(a) for a 5% requirement. In general~ 
when the settling time corresponds to an intersection with the upper envelope of y(t), the 
following relation is obtained: 
I + R, e-r.,.,, = upper bound of unit-step response 
1 -{2 (5-109) 
When the settling time corresponds to an intersection with the bottom envelope of y(t), t.,, 
must satisfy the following condition: 
J -1 e-(wnt, = lower bound of unit-step response JI=? (5-110) 
For the 5% requirement on settling time, the right-hand side of Eq. (5-109) would be 1.05, 
and that of Eq. (5-110) would be 0.95. It is easily verified that the same result for t.~ is 
obtained using either Eq. (5-109) or Eq. (5-110). 
Solving Eq. (5-109) for Wnl.r, we have 
w,,ts = -~ In ( Cts ~) (5-111) 
where c,s is the percentage set for the settling time. For example, if the threshold 
is 5 percent, the Cts = 0.05. Thus, for a 5-percent settling time, the right-hand side of 
5·6 Transient Response of a Prototype Second-Order System ~ 287 
Eq. (5-111) varies between 3.0 and 3.32 as t varies from Oto 0.69. We can approximate the 
settling time for the prototype second-order system as 
3.2 ts~ -0< {<0.69 
{W,z 
The approximation will be poor for small values of (( < 0.3 ). (5-112) 
When the damping ratio c; is greater than 0.69, the unit-step response will always enter 
the band between 0.95 and 1.05 from below. We can show by observing the responses in 
Fig. 5-14 that the value of Wnts is almost directly proportional to t. The following 
approximation is used for ls for { > 0.69. 
4.5( ts= -s>0.69 
Wn (5-113) 
Fig. 5-23(c) shows the actual values of w,11,., versus t for the prototype second-order 
system described by Eq. (5-87), along with the approximations using Eqs. (5-112) 
and (5-113) for their respective effective ranges. The numerical values are shown in 
Table 5-2. 
We can summarize the relationships between t.\ and the system parameters as 
follows~ 
• For { < 0.69, the settling time is inversely proportional to sand W,z. A practical way 
of reducing the settling time is to increase Wn while holding s constant. Although 
TABLE 5-2 Comparison of Settling Times of 
Prototype Second-Order System, Cvnfs 
s Actual 3.2 4.5t (" 
0.10 28.7 30.2 
0.20 13.7 16.0 
0.30 10.0 10.7 
0.40 7.5 8.0 
0.50 5.2 6.4 
0.60 5.2 5.3 
0.62 5.16 5.16 
0.64 5.00 5.00 
0.65 5.03 4.92 
0.68 4.71 4.71 
0.69 4.35 4.64 
0.70 2.86 3.15 
0.80 3.33 3.60 
0.90 4.00 4.05 
1.00 4.73 4.50 
1.10 5.50 4.95 
1.20 6.21 5.40 
1.50 8.20 6.75 
288 ~ Chapter 5. Time-Domain Analysis of Control Systems 
Toolbox 5-6-2 the response will be more oscillatory. the maximum overshoot depends only on t 
and can be controlled independently. 
• For ( > 0.69, the settling time is proportional to { and inversely proportional to Wn. 
Again, Ls can be reduced by increasing Wn, 
To find PO, rise time, and settling time using MATLAB, point at a desired location on the graph and right­
click to display the x and y values. For example 
clear all 
w=lO;l=0.4; 
t=0:0.01:5; 
nunt = [w. 1\2]; 1.4 System: sys 
Time (sec): 0.354 
Ampltude: 1.25 Closed.Loop Step 
den= [12*1 ... ww."'2]; 
step(num,den,t) 
xlabel('Time(secs)') 
ylabel('Amplitude') title ('Closed-Loop Step') 
t> 0.6 
"B 
~ 
i 0.6 
0.4 
0.2 
0 
0 0.5 1.5 2 2.5 3 3.5 4 4.5 5 
Time(secs) (sec) 
It should be commented that the settling time for ~ > 0.69 is truly a measure of how 
fast the step response rises to its final value. It seems that, for this case, the rise and delay 
times should be adequate to describe the response behavior. As the name implies, settling 
time should be used to measure how fast the step response settles to its final value. It should 
also be pointed out that the 5% threshold is by no means a number cast in stone. More 
stringent design problems may require the system response to settle in any number less 
than 5%. 
Keep in mind thatt while the definitions onymax• lmax, tdt tr, and ls apply to a system of 
any order. the damping ratio { and the natural undamped frequency Wn strictly apply only to 
a second-order system whose closed-loop transfer function is given in Eq. (5-87). 
Naturally, the relationships among td, t,, and Is and ; and Wn are valid only for the 
same second-order system model. However, these relationships can be used to measure the 
performance of higher-order systems that can be approximated by second-order ones, 
under the stipulation that some of the higher-order poles can be neglected. 
5-7 Speed and Position Control of a OC Motor 289 
5-7 SPEED AND POSITION CONTROL OF A DC MOTOR 
Servomechanisms are probably the most frequently encountered electrmnechanica1 control 
systems. Applications include robots (each joint in a robot requires a position servo), 
numerical control (NC) machines , and laser printers, to name but a few. The common 
characteristic of all such systems is that the variable to be controlled (usually position or 
velocity) is fed back to modify the command signal. The servomechanism that will be used 
in the experiments in this chapter comp1ises a de motor and amplifier that are fed back the 
motor speed and position values. 
One of the key challenges in the design and implementation of a successful controller 
is obtaining an accurate model of the system components, particularly the actuator. In 
Chapter 4, we discussed various issues associated with modeling of de motors. We will 
briefly revisit the modeling aspects in this section. 
5-7-1 Speed Response and the Effects of Inductance and Disturbance-Open Loop Response 
Consider the armature-controlled de motor shown in Fig. 5-24, where the field current is 
held constant in this system. The system parameters include 
Gear 
head Ra 
La 
e 
T 
h 
h 
lm 
J 
n 
B armature resistance, ohm 
armature inductance, henry 
applied armature voltage, volt 
back emf, volt 
angular displacement of the motor shaft, radian 
torque developed by the motor, N-m 
moment of inertia of the load. kg-m2 
any external load torque considered as a disturbance, N-m 
moment of inertia of the motor (motor shaft), kg-m2 
equivalent moment of inertia of the motor and load connected to the motor­
shaft, J = h/ n2 + lm, kg-m2 (refer to Chapter 4 for more details) 
gear ratio 
equivalent viscous-friction coefficient of the motor and load referred to the 
motor shaft, N-m!rad!sec (in the presence of gear ratio, B must be scaled by n; 
refer to Chapter 4 for more details) 
speed sensor (usua11y a tachometer) gain 
Figure 5-24 An armature-controlled de motor with a 
gear head and a load inertia h, 
290 Chapter 5. Time-Domain Analysis of Control Systems 
V,,(s) _1_ 
Js+B 
Figure 5-25 Block diagram of an armature- controlled de motor. 
As shown in Fig. 5-25, the armature-controlled de motor is itself a feedback system, 
where back-emf voltage is proportional to the speed of the motor. In Fig. 5-25, we have 
included the effect of any possible external load (e.g., the load applied to a juice machine 
by the operator pushing in the fruit) as a disturbance torque TL. The system may be 
arranged in input-output form such that Va(s) is the input and fl(s) is the output: 
(5-114) 
The ratio L"/ Ra is called the motor electric-time constant, which makes the system speed­
response transfer function second order and is denoted by re-Also, it introduces a zero to 
the disturbance-output transfer function. However, as discussed in Chapter 4, because La in 
the armature circuit is very small, 'e is neglected, resulting in the simplified transfer 
functions and the block diagram of the system. Thus, the speed of the motor shaft may be 
simplified to 
Km 
fl(s) = Ralm V (s) J m T (s) KK+RBa -KK+RBL s+ m b a s+ 111 b a 
Ra.Im Ral111 (5-115) 
or 
i111 
Ke"" J D(s) = 11 Va(s) -m TL(s) 
7:,nS + 1 7:111S + 1 (5-116) 
where K,ff = K111/{RaB + KmK1,) is the motor gain constant, and r111 = Ralm/(RaB + 
K111K1,) is the motor mechanical time constant. If the load inertia and the gear ratio arc 
incorporated into the system model, the inertia 1111 in Eqs. (5-114) through (5-116) is 
replaced with J (total inertia). 
5-7 Speed and Position Control of a DC Motor 291 
Using superpositio n, we get 
fl(s) = fl(s)IT1,(s)=o+fl(s) iv .. (s)=O (5-117) 
To find the response w(I), we use superposition and find the response due to the individual 
inputs. For Ti= 0 (no disturbance and B = 0) and an applied voltage Va(t) = A, such that 
Va(s) = A/s, 
(5-118) 
In this case, note that the motor mechanical time constant r,,, is reflective of how fast 
the motor is capable of overcoming its own inertia J,,, to reach a steady state or constant 
speed dictated by voltage Va. From Eq. (5-118), the speed final value is w(t) =A/Kb.As 
r,,, increases , the approach to steady state takes longer. 
If we apply a constant load torque of magnitude D to the system (i.e., TL = D /s), the 
speed response from Eq. (5-118) will change to 
(5-119) 
which clearly indicates that the disturbance h affects the final speed of the motor. From 
Eq. (5-119), at steady state, the speed of the motor is W'fiv = Kl (A -RKa0). Here the final b Ill value of w(t) is reduced by RaD/KmK1,. A practical note is that the value of h = D may 
never exceed the motor stall torque, and hence for the motor to turn, from Eq. (5-119), 
AKm/Ra > D, which sets a limit on the magnitude of the torque TL. For a given motor, the 
value of the stall torque can be found in the manufacturer's catalog. 
If the load ine1tia is incorporated into the system model, the final speed value becomes 
Wfv = A/Kb. Does the stall torque of the motor affect the response and the steady-state 
response? In a realistic scenario, you must measure motor speed using a sensor. How would 
the sensor affect the equations of the system (see Fig. 5-25)? 
5-7-2 Speed Control of DC Motors: Closed-Loop Response 
As seen previously, the output speed of the motor is highly dependant on the value of torque 
TL. We can improve the speed perlonnance of the motor by using a proportional feedback 
controller . The controller is composed of a sensor (usually a tachometer for speed 
applications) to sense the speed and an amplifier with gain K (prop01tional control) 
in the configuration shown in Fig. 5-26. The block diagram of the system is also shown in 
Fig. 5-27. 
Gear 
head 
+~...f-~~~~~~~~~ .r.-~~---, 
"u,(r) j Amp. I Va(t) r-=::::1 ,,,__ ___ ~ .~ 
Feedback .Ir. 
figure 5-26 Feedback control of an 
armature-controlled de motor with 
a load inertia. 
292 Chapter 5. Time-Domain Analysis of Control Systems 
5-7~3 Position Control K I 
Js+B 
Figure 5-27 Block diagram of a speed-control. armature-controlled de motor. 
Note that the speed at the motor shaft is sensed by the tachometer with a gain K1• For 
ease in comparison of input and output, the input to the control system is converted from 
voltage Vill to speed D.;11 using the tachometer gain K,. Hence, assuming La = 0, we have 
K1KmK 
!l(s) = Ralm . Di/!(s) 
(KmKb + RaB + K,K111K) s+ Ralm 
1 
Im TL(s) 
(K111K1, + RaB + KrKmK) s+ Ra.Im (5-120) 
For a step input D.;11 =A/sand disturbance torque value Ti= D/s, the output becomes 
(t)_AKKmK1 (l -r/r<) TcD(l -r/rr) w - Tc -e ----e 
Ralm J,,, (5-121) 
where r - Raf,,. is the system mechanical-time constant. The steady-state c -K111K1>+RaB+K1K,,,K 
response in this case is 
(5-122) 
where Wfv -+ A as K-+ oo. So, speed control may reduce the effect of disturbance . As in 
Section 5-7-1, the reader should investigate what happens if the inertia his included in 
this model. If the load inertia h is too large, will the motor be able to turn? Again, as 
in Section 5-7-1, you will have to read the speed-sensor voltage to measure speed. How will 
that affect your equations? 
The position response in the open-loop case may be obtained by integrating the speed 
response. Then, considering Fig. 5-25, we have ®(s) = .fl(s) / s. The open-loop transfer 
function is therefore 
®(s) Km 
Va(s) = s(La1111s2 + (LaB +R0J111)s + RaB + KmKb) (5-123) 
5-8 Time-Domain Analysis of a Position-Control System ~ 293 
_l_ 
Js+B 
Figure 5-28 Block diagram of a position-control, armature-controlled de motor. 
where we have used the total inertia J. For small La, the time response in this case is 
(5-124) 
which implies that the motor shaft is turning without stop at a constant steady-state speed. 
Tu control the position of the motor shaft, the simplest strategy is to use a proportional 
controller with gain K. The block diagram of the closed-loop system is shown in Fig. 5-28. 
The system is composed of an angular position sensor (usually an encoder or a potenti­
ometer for position applications). Note that, for simplicity, the input voltage can be scaled 
to a position input ®;11(s) so that the input and output have the same units and scale. 
Alternatively , the output can be converted into voltage using the sensor gain value. The 
closed-loop tranc;fer function in this case becomes 
® (s) 
ein(s) (5-125) 
where Ks is the sensor gain, and, as before, re= (L11/Ra) may be neglected for small L11• 
® (s) 
®m(s) (5-126) 
Later, in Chapter 6, we set up numerical and experimenta l case studies to test and verify the 
preceding concepts and learn more about other practical issues. 
5-8 TIME-DOMAIN ANALYSIS OF A POSITION-CONTROL SYSTEM 
In this section, we shall analyze the performance of a system using the time-domain criteria 
established in the preceding section. The purpose of the system considered here is to 
control the positions of the fins of an airplane as discussed in Example 4-11-1. 
Recall from Chapter 4 that 
G(s) = ®:,:(s) == KsK1KiKN 
®e(s) s[L,J1s2 + (Ral, + LaB1 + K1K2l1)s + RaBt + K1K2B 1 + K;Kb + KK1K1Ki] 
(5-127) 
294 .._ Chapter 5. Time-Domain Analysis of Control Systems 
The system is of the third order, since the highest-order term in G(s) is s3. The electrical 
time constant of the amplifier-motor system is 
La 0.003 
Ta= Ra+ KiK2 = 5 + 5 = 0.0003sec (5-128) 
The mechanical time constant of the motor-load system is 
Jt 0.0002 
-r:1 = B, = O.OlS = 0.01333 sec (5-129) 
Because the electrical time constant is much smaller than the mechanical time constant, on 
account of the low inductance of the motor, we can perform an initial approximation by 
neglecting the armature inductance La. The result is a second-order approximation of the 
third-order system. Later we will show that this is not the best way of approximating a high­
order system by a low-order one. The forward-path transfer function is now 
G(s) = KsK1KiKN 
s[(R0J, + K1K2J1)s + RaBt + K1K2B1 + K;Kb + KK1K;K1] 
KsK1KiKN (5-130) 
RaJ1 + K1K2l1 =---,.---------------:.;.....;._ __ ..;a......:;.....;.. ________ ...,..... 
( RaBt + K1K2B1 + K;Kb + KK1KiK1) s s+~~~------------------~------------Ralt +K1K2lr 
Substituting the system parameters in the last equation, we get 
Gs _ 4500K 
( ) -s(s + 361.2) (5-131) 
Comparing Eq. (5-131) and (5-132) with the prototype second-order transfer function of 
Eq. (5-86), we have 
natural undamped frequency Wn = ± KsKiK;KN = ±./ 4500K rad/sec 
Ralt + K1K2J, (5-132) 
(5-133) 
Thus, we see that the natural undamped frequency (l)n is proportional to the square root of 
the amplifier gain K, whereas the damping ratio tis inversely proportional to ../K. 
The closed-loop transfer function of the unity-feedback control system is 
0y(s) 4500K 
Se(s) = s2 + 361.2s + 4500K (5-134) 
5-8-1 Unit-Step Transient Response 
For time-domain analysis, it is informative to analyze the system petformance by applying 
the unit-step input with zero initial conditions. In this way, it is possible to characterize the 
5-8 Time-Domain Analysis of a Position-Control System ~ 295 
system performance in terms of the maximum overshoot and some of the other measures, 
such as rise time, delay time, and settling time, if necessary. 
Let the reference input be a unit-step function Br(t) = us(t) rad; then @(s) = 1 / s. The 
output of the system, with zero initial conditions. is 
_1 [ 4500K ] 
Oy(t) = £ s(s2 + 361.2s -4500K) (5-135) 
The inverse Laplace transform of the right-hand side of the last equation is carried out using 
the Laplace transform table in Appendix D, or using Eq. (5-90) directly. The following 
results are obtained for the three values of K indicated. 
K = 7.248((~1.0): 
By(t) = (1 -15le-1801 + 150e-l8l.2t)us(t) (5-136) 
K = 14.5(( = 0.707): 
Oy(t) = (I -e-lSO.Gt cos 180.6t -0.9997e-180·6' sin 1S0.6t)us(t) (5-137) 
K = 181.17(( = 0.2): 
Oy{t) = (1 ~ e-180·61 cos 884.7t -0.2041e-180·61 sin 884.7t)u5(t) (5-138) 
The three responses are plotted as shown in Fig. 5-29. Table 5-3 gives the comparison of the 
characteristics of the three unit-step responses for the three values of K used. When 
0.00 0.01 0.02 0.03 0.04 0.05 
Time (sec) 
Figure 5-29 UniHtep responses of the attitude-conlrol system in Fig. 4-78; La = O. 
296 ~ Chapter 5. 1\me-Domain Analysis of Control Systems 
Toolbox 5-8-1 TABLE 5-3 Comparison of the Performance of the Second-Order Position-Control System with 
lhe Gain K Values 
W,i %Max td t,. l.f lmax 
GainK t (rad/sec) overshoot (sec) (sec) (sec) (sec) 
7.24808 1.000 180.62 0 0.00929 0.0186 0.0259 
14.50 0.707 255.44 4.3 0.00560 0.0084 O.Dll4 0.01735 
181.17 0.200 903.00 52.2 0.00125 0.00136 0.0150 0.00369 
K = 181.17, ~ = 0.2, the system is lightly damped, and the maximum overshoot is 52. 7%, 
which is excessive. When the value of K is set at 7 .248, ( is very close to 1.0, and the system 
is almost critically damped. The unit-step response does not have any overshoot or 
oscillation. When K is set at 14.5, the damping ratio is 0.707, and the overshoot is 
4.3%. It should be pointed out that, in practice, it would be time consuming, even with the 
aid of a computer, to compute the time response for each change of a system parameter for 
either analysis or design purposes. Indeed, one of the main objectives of studying control 
systems theory, using either the conventional or modern approach, is to establish methods 
so that the total reliance on computer simulation can be reduced. The motivation behind 
this discussion is to show that the pe1formance of some control systems can be predicted by 
investigating the roots of the characteristic equation of the system. For the characteristic 
equation of Eq. (5-135), the roots are 
S\ = -180.6 + ./32616 -4500K 
s2 = -180.6 -V32616 -4500K (5-139) 
(5-140) 
The Fig. 5-29 responses may be obtained by the following sequence of MATLAB functions. 
% Equation 5 .136 
% Unit-Step Transient Response 
for k=[7. 248 14. S 181. 2] 
num = [4500 ... 'k]; 
den= [l 361. 2 4500*k]; 
step(num,den) 
hold on; 
end 
xlabel('Time(secs)') 
ylabel('Amplitude') 
title( 1 Closed-Loop Step t) 
For K = 7.24808, 14.5, and 181.2, the roots of the characteristic equation are tabulated as 
follows: 
K = 7.24808: 
K = 14.5: 
K = 181.2: s1 = s2 = -180.6 
s1 = -180.6 + j180.6 
S\ = -180.6 + j884.7 s2 = -180.6- jl80.6 
s2 = -180.6 + j884.7 
_.,.,.,_K 5-8 Time-Domain Analysis of a Position-Control System -< 297 
I 
~ 
K= 181.2 
Kaa 181.2 
~ 
8 J(J) 
jlOOO 
}884.75 
j800 
s-plune 
j6(){) 
j400 
j180.6 
K--.... 
K<O a 
-J"200 
-j400 
-j600 
-j800 
-j884.75 
-JIOOO 
Figure 5-30 Root loci of the characteristic equation in Eq. (5-134) as K varies. 
These roots are marked as shown in Fig. 5-30. The trajectories of the two characteristic 
equation roots when K varies continuously from -oo to oo are also shown in Fig. 5-30. 
These root trajectories are called the root loci (see Chapter 4) of Eq. (5-135) and are used 
extensively for the analysis and design of linear control systems. 
From Eqs. (5-140) and (5-141), we see that the two roots are real and negative for 
values of K between O and 7 .24808. This means that the system is overdamped, and the step 
response will have no overshoot for this range of K. For values of K greater than 7 .24808, 
the natural undamped frequency will increase with ./K. When K is negative, one of the 
roots is positive: which corresponds to a time response that increases monotonically with 
time, and the system is unstable. The dynamic characteristics of the transient step response 
as determined from the root loci of Fig. 5-30 are summarized as follows: 
Amplifier Gain Dynamics 
0 < K < 7.24808 
K = 7.24808 
7.24808 < K < oo 
-oo<K<O Characteristic Equation Roots 
Two negative distinct real roots 
Two negative equal real roots 
Two complex-conjugate roots 
with negative real parts 
Two distinct real roots, one 
positive and one negative System 
Overdamped ( (' > I) 
Critically damped ( t = l) 
Underdamped ( s < I) 
Unstable system (t < 0) 
298 ~ Chapter 5. 1ime-Oomain Analysis of Control Svstems 
5-8-2 The Steady-State Response 
Because the forward-path transfer function in Eq. (5-132) has a simple pole at s = 0, 
the system is of type 1. This means that the steady-state error of the system is zero for 
all positive values of K when the input is a step function. Substituting Eq. (5-132) into 
Eq. (5-24), the step-error constant is 
K , = lim 4500K = 00 1 s--os(s + 361.2) (5-141) 
Thus, the steady-state error of the system due to a step input, as given by Eq. (5-25), is zero. 
The unit-step responses in Fig. 5-29 verify this result. The zero-steady-state condition is 
achieved because only viscous friction is considered in the simplified system model. In the 
practical case, Coulomb friction is almost always present, so the steady-state positioning 
accuracy of the system can never be perfect. 
5-8-3 Time Response to a Unit-Ramp Input 
The control of position may be affected by the control of the profile of the output, rather 
than just by applying a step input. In other words, the system may be designed to follow a 
reference profile that represents the desired trajectory. It may be necessary to investigate 
the ability of the position-control system to follow a ramp-function input. 
For a unit-ramp input, 8,.(t) = tus(t). The output response of the system in Fig. 4-79 is 
-I [ 4500K ] 
Oy(t) = £ s2(s2 + 361.2s + 4500K) (5-142) 
which can be solved by using the Laplace transform table in Appendix C. The result is 
(5-143) 
where 
(5-144) 
The values oft and Wn are given in Eqs. (5-134) and (5-133). respectively. The ramp 
responses of the system for the three values of K are presented in the following 
equations. 
K = 7.248: 
8y(t) = (t -0.01107 -0.8278e-181.2r + 0.8389e-1801)us(t) 
K = 145: 
Oy(t) -(t -0.005536 + 0.005536e-180·61 cus180.6 t 
-5.467 x 10-7 e-180·61sin180.6t)us(t) (5-145) 
(5-146) 
5-8 Time-Domain Analysis of a Position-Control System ~ 299 
e 11 = 0.00044 
(K= 181.2) 
) 
n10~~~~~~~~~~~~~~~~~~~~~~~~1]e"=QOO" f\ (K= 14.5) 
0.08 J----1---1-----+--1-----+--1----+---~----,.'---l,,l'e:..____.--1 e" = 0.0111 
o o.oi 0.02 o.o3 o.04 o.os 0.06 om o.os o.o9 0.1 
Times (sec) 
Figure 5-31 Unit-ramp responses of the attitude-control system in Fig. 4-78; La := 0. 
K= 181.2: 
Oy(t) = (t -0.000443 + 0.000443e-180·6' cos884.7t 
-0.00104e-180·61 sin884.7t)us(t) (K=7.248) 
(5-147) 
These ramp responses are plotted as shown in Fig. 5-31. Notice that the steady-state error of 
the ramp response is not zero. The last term in Eq. (5-144) is the transient response. The 
steady-state portion of the unit-ramp response is 
lim Bv{t) = lim [(1 -2s) Us(t)l 1-00 • t-+oo CV,t (5-148) 
Thus. the steady-state error of the system due to a unit-ramp input is 
2?; 0.0803 ess=-=--
Wn K (5-149) 
which is a constant. 
A more direct method of determining the steady-state error due to a ramp input is to 
use the rampMerror constant Kv. From Eq. (5~31 ). 
Kv = lim sG(s) = Jim 45
~~~ 2 = 12.46K 
S-+0 s--+0 S + . (5-150) 
300 t.. Chapter 5. Time-Domain Analysis of Control Systems 
Thus, the steady-state error is 
1 0.0803 
e.u=Kv :::;~ (5-151) 
which agrees with the result in Eq. (5-149). 
Toolbox 5 ... s.2 
The Fig. 5-31 responses are obtained by the following sequence of MATLAB functions 
for k=[7. 248 14. 5 181. 2] 
clnum = [4500,"k]; 
clden = [1 361. 2 4500*k]; 
t=0:0.0001:0.3; 
u = t; 
[y,x]=lsirn(clnum,clden,u,t); 
plot(t,y,t,u); 
hold on; 
end 
title( 'Unit-ramp responses') 
xlabel('Time(sec)') 
ylabel('Amplitude') 
The result in Eq. (5-151) shows that the steady-state error is inversely proportional to 
K. For K =: 14.5, which corresponds to a damping ratio of 0. 707, the steady-state error is 
0.0055 rad or, more appropriately, 0.55% of the ramp-input magnitude. Apparently, if we 
attempt to improve the steady-state accuracy of the system due to ramp inputs by increasing 
the value of K, the transient step response will become more oscillatory and have a higher 
overshoot. This phenomenon is rather typical in all control systems. For higher-order 
systems, if the loop gain of the system is too high, the system can become unstable. Thus, 
by using the controller in the system loop, the transient and the steady~state error can be 
improved simultaneously. 
5-8-4 Time Response of a Third-Order System 
In the preceding section, we have shown that the prototype second-order system, obtained 
by neglecting the armature inductance, is always stable for all positive values of K. It is not 
difficult to prove that, in general, all second-order systems with positive coefficients in the 
characteristic equations are stable. 
Let us investigate the performance of the position-control system with the armature 
inductance La::::: 0.003 H. The forward-path transfer function of Eq. (5-128) becomes 
1.5 X 107 K G(s} ----,,,------~ -s(s2 + 3408.3s + 1,204,000) 
The closed-loop transfer function is 1.5 X 107 K 
s(s + 400.26)(s + 3008) 
E>y(s) 1.5 x 107 K 
@r(s) = s3 +3408.3s2 + 1,204,000s+ 1.5 x 107K (5-152) 
(5-153) 
5-8 Time-Domain Analysis of a Position-Control System -~ 301 
The system is now of the third order, and the characteristic equation is 
s3 + 3408.3s2 + 1,204,000s + 1.5 x 107 K = 0 (5-154) 
Transient Response 
The roots of the characteristic equation are tabulated for the three values of K used earlier 
for the second-order system: 
K = 7.248: 
K = 14.5: 
K = 181.2: SJ = -156.21 
S] = -186.53 + jl92 
S] = -57.49 + j906.6 s2 = -230.33 
s2 = -186.53 -jl 92 
s2 = -57.49 -j906.6 S3 = -3021.8 
S3 = -3035.2 
S3 = -3293.3 
Comparing these results with those of the approximating second-order system. we see that, 
when K = 7.428, the second-order system is critically damped, whereas the third-order 
system has three distinct real roots, and the system is slightly overdampe<l. The root at 
-3021.8 corresponds to a time constant of 0.33 millisecond, which is more than 13 times 
faster than the next fastest time constant because of the pole at -230.33. Thus. the transient 
response due to the pole at -3021.8 decays rapidly, and the pole can be neglected from the 
transient standpoint. The output transient response is dominated by the two roots at -156.21 
and -230.33. This analysis is verified by writing the transformed output response as 
@ (s) _ 10.87 X 107 
Y -s(s + 156.2l)(s + 230.33)(s + 3021.8) (5-155) 
Taking the inverse Laplace transform of the last equation, we get 
Oy(t) = (1 -3.28e-156·211 + 2.28e-230·33' -0.0045e-302L81)us(t) (5-156) 
The last term in Eq. (5-156). which is due to the root at -3021.8, decays to zero very 
rapidly. Furthermore, the magnitude of the term at t = 0 is very small compared to the other 
two transient terms. This simply demonstrates that, in general, the contribution of roots that 
lie relatively far to the left in the s-plane to the transient response will be small. The roots 
that are closer to the imaginary axis will dominate the transient response, and these are 
defined as the dominant roots of the characteristic equation or of the system. 
When K = 14.5, the second-order system has a damping ratio of 0.707, because the 
real and imaginary parts of the two characteristic equation roots are identical. For the third­
order system, recall that the damping ratio is strictly not defined. However, because the 
effect on transient of the root at -3021.8 is negligible, the two roots that dominate the 
transient response correspond to a damping ratio of0.697. Thus, for K = 14.5, the second­
order approximation by setting La to zero is not a bad one. It should be noted, however, 
that the fact that the second-order approximation is justified for K = 14.5 does not mean 
that the approximation is valid for all values of K. 
When K = 181.2, the two complex-conjugate roots of the third-order system again 
dominate the transient response, and the equivalent damping ratio due to the two roots is 
only 0.0633, which is much smaller than the value of 0.2 for the second-order system. Thus, 
we see that the justification and accuracy of the second-order approximation diminish as 
the value of K is increased. Fig. 5-32 illustrates the root loci of the third-order characteristic 
equation of Eq. (5-154) as K varies. 
302 ~ Chapter 5. Time-Domain Analysis of Control Systems 
-3035.2 
--K K=r~i~~ 
~ t'~ 
-3293.3 -3021.8 
K ~ 181.2 K = 7.248 K<O -186.53 + jl92 
K= 14.5 
-800 jw 
jl400 
-jl400 
Figure 5-32 Root loci of the third-order attitude-control system. s-plane 
J'800 
j600 
j400 
J200 
K<O K--oo 
a 
-j200 
-j400 
-j600 
-j800 
When K = 181.2, the real root at -3293.3 still contributes little to the transient 
response, but the two complex-conjugate roots at -57.49 ± j906.6 are much closer to the 
jw-axis than those of the second-order system for the same K, which are at 
-180.6 ± j884.75. This explains why the third-order system is a great deal less stable 
than the second-order system when K = 181.2. 
By using the Routh-Hurwitz criterion, the marginal value of K for stability is found to 
be 273.57. With this critical value of K, the closed-loop transfer function becomes 
@y(s) 1.0872 X 108 
0r(s) = (s + 3408.3)(s2 + 1.204 x 106) (5-157) 
Therootsofthecharacteristicequationareats = -3408.3, -j1097.3,andj1097.3. These 
points are shown on the root loci in Fig. 5-32. 
Toolbox 5-8-3 5~8 Time-Domain Analysis of a Position .. control System • 303 
2.00 
1.60 ~\ n ( " I I\ r n n n ........-K=273.57 
' I I 
~ K= 181.2 I I 
' (\ ,. 
\ \ I I \ f\ r~ ,, i",... 1.20 
1 /l K= 14.5 ' h . ' '\. './ '-' 
~ 
J -I\ ) ,~ ll .~-
;r I/ ~ T \ '< 
~ V K= 7.248 
I J 1 
lU ',I 
I 
~ 
V V V V V \ u u 0.80 
0.40 
0.00 0.01 0.02 0.03 0.04 0.05 
1ime (sec) 
Figure 5-33 Unit-step responses of the third-order attitude-control system. 
The unit-step response of the system when K = 273.57 is 
By(t) = [1 -0.094e-3408·31 -0.952sin(1097.3t + 72.16°)]us(t) (5-158) 
The steady-state response is an undamped sinusoid with a frequency of 1097 .3 rad/sec. and 
the system is said to be marginally stable. When K is greater than 273.57. the two complex­
conjugate roots will have positive real parts~ the sinusoidal component of the time response 
will increase with time. and the system is unstable. Thus, we see that the third-order system 
is capable of being unstable. whereas the second-order system obtained with La =: 0 is 
stable for all finite positive values of K. 
Fig. 5-33 shows the unit-step responses of the third-order system for the three values of 
K used. The responses for K = 7 .248 and K = 14.5 are very close to those of the second­
order system with the same values of K that are shown in Fig. 5-29. However, the two 
responses for K = 181.2 are quite different. 
The root locus plot in Fig. 5-32 is obtained by the following MATI.AB commamlv 
for k= [ 7 • 2 4 8 14 . 5 181 . 2 2 7 3 . 5 7] 
t=0:0.001:0.05; 
num = [1. 5* (10"7) *k] ; 
den= [13408.312040001. 5*(10"7)*k]; 
rlocus(num,den) 
hold on; 
end 
304 Chapter 5. Time-Domain Analysis of Control Systems 
3000 
2000 
1000 ' 
' . V /! 
en m 1 ! o,·f-~~--l...,... __ ~~~~~~~~~ ~~~M><- .;.._~~ -~ 
E 
-1000 
-2000 
-3000 
4000'--..__~_,_~-'-~-'-~--'-~-'-~--'~----''--~..__~_,__, 
-4000 -3500 -3000 -2500 -2000 -1500 -1000 -500 
Real Axis 
Steady-State Response 0 500 
From Eq. (5-152), we see that, when the inductance is restored, the third-order system is 
still of type 1. The value of Kv is still the same as that given in Eq. (5-150). Thus, the 
inductance of the motor does not affect the steady-state performance of the system, 
provided that the system is stable. This is expected, since La affects only the rate of change 
and not the final value of the motor current. A good engineer should always try to interpret 
the analytical results with the physical system. 
5-9 BASIC CONTROL SYSTEMS AND EFFECTS OF ADDING POLES AND ZEROS 
TO TRANSFER FUNCTIONS 
The position-control system discussed in the preceding section reveals important proper­
ties of the time responses of typical second-and third-order closed-loop systems. 
Specifically, the effects on the transient response relative to the location of the roots of 
the characteristic equation are demonstrated . 
In all previous examples of control systems we have discussed thus far, the controller 
has been typically a simple amplifier with a constant gain K. This type of control action is 
formally known as proportional control, because the control signal at the output of the 
controller is simply related to the input of the controller by a proportional constant. 
Intuitively, one should also be able to use the derivative or integral of the input signal, 
in addition to the proportional operation. Therefore , we can consider a more general 
continuous-data controller to be one that contains such components as adders or summers 
(addition or subtraction), amplifiers, attenuators , differentiators, and integrator s -see 
Section 4-3-3 and Chapter 9 for more details. For example, one of the best-known 
controllers used in practice is the PID controller, which stands for proportional , integral, 
and derivative . The integral and derivative components of the PID controller have 
5-9 Basic Control Systems and Effects of Adding Poles and Zeros ~ 305 
individual performance implications, and their applications require an understanding of the 
basics of these elements. 
All in all, what these controllers do is add additional poles and zeros to the open-or 
closed-loop transfer function of the overall system. As a result, it is important to appreciate 
the effects of adding poles and zeros to a transfer function first. We show that-although 
the roots of the characteristic equation of the system, which are the poles of the closed-loop 
transfer function, affect the transient response of linear time-invariant control systems, 
particularly the stability-the zeros of the transfer function are also important. Thus, the 
addition of poles and zeros and/or cancellation of undesirable poles and zeros of the 
transfer function often are necessary in achieving satisfactory time-domain performance of 
control systems. 
In this section, we show that the addition of poles and zeros to forward-path and 
closed-loop transfer functions has varying effects on the transient response of the closed­
loop system. 
5 .. 9.1 Addition of a Pole to the Forward-Path Transfer Function: Unity-Feedback Systems 
For the position-control system described in Section 5-8, when the motor inductance is 
neglected, the system is of the second order. and the forward-path transfer function is of the 
prototype given in Eq. (5-131). When the motor inductance is restored, the system is of 
the third order, and the forward-path transfer function is given in Eq. (5-149). Comparing 
the two transfer functions of Eqs. (5-131) and (5-149), we see that the effect of the motor 
inductance is equivalent to adding a pole at s = -3008 to the forward-path transfer 
function of Eq. (5-131) while shifting the pole at -361.2 to -400.26, and the proportional 
constant is also increased. The apparent effect of adding a pole to the forward-path transfer 
function is that the third-order system can now become unstable if the value of the amplifier 
gain K exceeds 273.57. As shown by the root-loci diagrams of Fig. 5-32 and Fig. 5-34, the 
new pole of G(s) at s = -3008 essentially "pushes" and "bends" the complex-conjugate 
portion of the root loci of the secoml-order system toward the right-half s-plane. Actually, 
because of the specific value of the inductance chosen, the additional pole of the third~order 
system is far to the left of the pole at -400.26, so its effect is small except when the value of 
K is relatively large. 
0 5 10 15 20 
Time (sec) 
Figure 5-34 Unit~step responses of the system with the closed-loop transfer function in 
Eq. (5-160): ~ = 1; Wn = l; and TJJ = 0, 1.2. and 5. 
306 ~ Chapter 5. Time-Domain Analysis of Control Systems 
Toolbox 5-9-1 To study the general effect of the addition of a pole, and its relative location, to 
a forward-path transfer function of a unity-feedback system, consider the transfer 
function 
(5-159) 
The pole at s = -1 /T P is considered to be added to the prototype second-order transfer 
function. The closed-loop transfer function is written 
M(s) = Y(s) = G(s) = w~ 
R(s) 1 + G(s) Tps3 +(I+ 2(r.vnTp)s2 + 2~£VnS + WT? (5-160) 
Fig. 5-34 illustrates the unit-step responses of the closed-loop system when r.vn = 1; t = 1; 
and T P = 0, 1, 2, and 5. These responses again show that the addition of a pole to the 
forward-path transfer function generally has the effect of increasing the maximum 
overshoot of the closed-loop !Jystem. 
As the value of Tp increases, the pole at -1 /T p moves closer to the origin in the 
s-plane, and the maximum overshoot increases. These responses also show that the added 
pole increases the rise time of the step response. This is not surprising, because the 
additional pole has the effect ofreducing the bandwidth (see Chapter 8) of the system, thus 
cutting out the high-frequency components of the signal transmitted through the system. 
The corresponding responses for Fig. 5-34 are obtained by the following sequence of MATLAB functions 
clear all 
w=l; l=l; 
for Tp=[O 1 2 SJ; 
t=0:0.001:20; 
num= [w]; 
den= [Tp 1+2 *l *w*Tp 2 *l *w wA2 J ; 
step(num,den,t) i 
hold on; 
end 
xlabel('Time(secs)') 
ylabel('apos;y(t)') 
title( 'Unit-step responses of the system') 
The corresponding responses for Fig. 5-37 are obtained by the following sequence of MATLAB functions 
clear all 
W=l ; l=O . 2 5 ; 
for Tp= [ 0 0 . 2 0 . 66 7 1] ; 
t=0:0.001:20; 
num= [w]; 
den= [~p 1+2*11t-w*Tp 2*l*w wA2]; 
step(num,den,t); 
hold on; 5-9 Basic Control Systems and Effects of Adding Poles and Zeros _. 307 
end 
xlabel('Time(secs)1) 
ylabe1( 'y(t) 1
) 
title( 'Unit-step responses of the system') 
The same conclusion can be drawn from the unit-step responses of Fig. 5-35, which are 
obtained with w,1 = 1; s = 0.2S; and Tp = O. 0.2, 0.667, and 1.0. In this case, when Ti, is 
greater than 0.667 t the amplitude of the unit-step response increases with time, and the 
system is unstable. 
5~9-2 Addition of a Pole to the Closed-Loop Transfer function 
Because the poles of the closed-loop transfer function are roots of lhe characteristic 
equation, they control the transient response of the system directly. Consider the closed­
loop transfer function 
(5-161) 
where the term (1 + Tps) is added to a prototype second-order transfer function. Fig. 5-36 
illustrates the unit-step response of the system with w,, = 1.0; t = 0.5; and 
T P = 0~ 0.5~ 1.0~ 2.0~ and 4.0. As the pole at s = -1 /T P is moved toward the origin 
... 
:;.., 
0 5 IO 15 20 
Time (sec) 
Figure 5-35 Unit-step responses of the system with the closed-loop transfer function in 
Eq. (5-160): { = 0.25; Cl>,1 = l; and T P = O. 0.2. 0.667. and 1.0. 
308 • Chapter 5. Time-Domain Analysis of Control Systems 
1.20 
1.00 
'C" 1:'.; 0.80 
0.00 I.SO 3.00 4.50 6.00 7.50 9.00 10.50 12.00 13.50 15.00 
Time (sec) 
Figure 5-36 Unit-step responses of the system with the closed-loop transfer function in 
Eq. (5-161): ,; = 0.5; (r),i :: 1; and T P = O. 0.5, 1.0, 2.0, and 4.0. 
in the s-plane, the rise time increases and the maximum overshoot decreases. Thus, as far as 
the overshoot is concerned. adding a pole to the closed-loop transfer function has just the 
opposite effect to that of adding a pole to the forward-path transfer function. 
Toolbox 5-9-2 
The corresponding responses for Fig. 5-36 are obtained by the following sequence of MATLAB functions 
clear all 
w=l;l=O.S; 
for Tp= [ O O . 5 1 2] ; 
t=0:0.001:15; 
num = [w"2 J; 
den= conv( [1 2*l*w wA2], [Tp 1]); 
step(num,den,t); 
hold on; 
end 
xlabel('Time(secs)') 
ylabel( 'y(t) ') 
title( 'Unit-step responses of the system') 
5-9-3 Addition of a Zero to the Closed-Loop Transfer Function 
Fig. 5-37 shows the unit-step responses of the closed~ loop system with the transfer function 
M(s) = Y(s) = w;,(1 + Tzs) 
R(s) (s2 + 2tw11s + w~) (5-162) 
5-9 Basic Control Systems and Effects of Adding Poles and Zeros ~ 309 
0.00 1.50 3.00 4.50 6.00 7.50 9.00 10.50 12.00 13.50 15.00 
Time (sec) 
Figure 5-37 Unit-step responses of the system with the closed-loop transfer function in 
Eq. (5-162): T:. = 0, 1,2,3,6, and 10. 
where Wn = I;,= 0.5; and Tz:::. 0, l, 2, 3, 6, and 10. In this case, we see that adding a zero 
to the closed-loop transfer function decreases the rise time and increases the maximum 
overshoot of the step response. 
We can analyze the general case by writing Eq. (5-162) as 
( ) -Y(s) - w~ TzW~S Ms----2 2+, 2 R(s) s + 2tw11s + w11 s-+ 2twns + Wn (5-163) 
For a unit-step input, let the output response that corresponds to the first tenn of the right 
side of Eq. (5-163) be y1(t). Then, the total unit-step response is 
dy1 (t) y(t) = YI (t) + Tz~ (5-164) 
Fig. 5-38 shows why the addition of the zero at s = -1 /Tz reduces the rise time and 
increases the maximum overshoot, according to Eq. (5-164 ). In fact. as T: approaches 
infinity. the maximum overshoot also approaches infinity, and yet the system is still stable 
as long as the overshoot is finite and t is positive. 
5-9-4 Addition of a Zero to the Forward-Path Transfer Function: Unity-Feedback Systems 
Let us consider that a zero at -1 /Tz is added to the forward-path transfer function of a 
third-order system, so 
G Y _ 6( 1 + Tzs) 
(.) ~ s(s + l)(s + 2} 
310 ..._ Chapter 5. Time-Domain Analysls of Control Systems 
Time (sec) 
Figure 5-38 Unit-step responses showing the effect of adding a zero to the closed-loop 
transfer function. 
The closed-loop transfer function is 
M ~ _ Y(s) _ 6(1 + Tzs) 
(.) -R(s) -s3 + 3s2 + (2 + 6Tz)s + 6 (5-166) 
The difference between this case and that of adding a zero to the closed-loop transfer 
function is that, in the present case, not only the term ( 1 + T .. s) appears in the numera­
tor of M(s), but the denominator of M(s) also contains T:. The term ( I + Tzs) in the 
numerator of M(s) increases the maximum overshoot, but T: appears in the coefficient of 
the s term in the denominator, which has the effect of improving damping, or reducing the 
maximum overshoot. Fig. 5-39 illustrates the unit-step responses when T:. = 0, 0.2, 0.5, 
2.0, 5.0, and 10.0. Notice that, when T .. = 0, the closed-loop system is on the verge of 
becoming unstable. When T2 = 0.2 and 0.5, the maximum overshoots are reduced, mainly 
0 2 3 4 5 6 7 8 9 
Time(sec) 
Figure 5-39 Unit-step responses of the system with the closedMloop transfer function in 
Eq. (5-166): Ti == 0, 0.2, 0.5, 2.0. 5.0, and 10.0. 10 
Toolbox 5-9-3 5-10 Dominant Poles a11d Zeros of Transfer Functions ... 311 
because of the improved damping. As T::. increases beyond 2.0. although the damping is still 
further improved, the ( 1 + Tzs) term in the numerator becomes more dominant, so the 
maximum overshoot actually becomes greater as T= is increased further. 
An important finding from these discussions is that, although the characteristic 
equation roots are generally used to study the relative damping and relative stability of 
linear control systems, the zeros of the transfer function should not be overlooked in their 
effects on the transient performance of the system. 
The corresponding responses for Fig. 5-39 are obtained by the following sequence of MATLAB functions 
clear all 
w=l;l=O.Si 
for Tz= [ 0 O . 2 0 . 5 3 S J ; 
t=0:0.001:15; 
nurn= [6)"'Tz 6]; 
den= (13 2+6*Tz 6); 
step(num,den,t); 
hold on; 
end 
xlabel('Time(secs)') 
ylabel( 'y(t) ') 
title( 1Unit-step responses of the system') 
·~ 5-10 DOMINANT POLES AND ZEROS OF TRANSFER FUNCTIONS 
From the discussions given in the preceding sections, it becomes apparent that the location 
of the poles and zeros of a transfer function in the s-plane greatly affects the transient 
response of the system. For analysis and design purposes, it is important to sort out the 
poles that have a dominant effect on the transient response and call these the dominant 
poles_ 
Because most control systems in practice are of orders higher than two, it would be 
useful to establish guidelines on the approximation of high-order systems by lower-order 
ones insofar as the transient response is concemed. In design~ we can use the dominant 
poles to control the dynamic performance of the system, whereas the insignificant poles are 
used for the purpose of ensuring that the controller transfer function can be realized by 
physical components. 
For all practical purposes, we can divide the s-plane into regions in which the 
dominant and insignificant poles can lie, as shown in Fig. 5-40. We intentionally do 
not assign specific values to the coordinates. since these are all relative to a given system. 
The poles that are close to the imaginary axis in the left-half s-plane give rise to 
transient responses that will decay relatively slowly, whereas the poles that are far away 
from the axis (relative to the dominant poles) correspond to fast-decaying time responses. 
The distance D between the dominant region and the least significant region shown in Fig. 
5-40 will be subject to discussion. The question is: How large a pole is considered to be 
really large'? It has been recognized in practice and in the literature that if the magnitude of 
the real part of a pole is at least 5 to 10 times that of a dominant pole or a pair of complex 
312 Chapter 5. Time-Domain Analysis of Control Systems 
Region of 
insignificant 
poles 
D j(I) 
Region of 
dominant 
poles 
0 s-plane 
Unstable 
region 
Unstable 
region a 
Figure 5-40 Regions of dominant 
and insignificant poles in the s-plane. 
dominant poles, then the pole may be regarded as insignificant insofar as the transient 
response is concerned . The zeros that are close to the imaginary axis in the left-half s-plane 
affect the transient responses more significantly, whereas the zeros that are far away from 
the axis (relative to the dominant poles) have a smaller effect on the time response. 
We must point out that the regions shown in Fig. 5-40 are selected merely for the 
definitions of dominant and insignificant poles. For design purposes, such as in pole­
placemen t design, the dominant poles and the insignificant poles should most likely be 
located in the tinted regions in Fig. 5-41. Again, we do not show any absolute coordinate s, 
except that the desired region of the dominant poles is centered around the line that 
corresponds to s = 0.707. It should also be noted that, while designing, we cannot place the 
insignificant poles arbitrarily far to the left in the s-piane or these may require unrealistic 
system parameter values when the pencil-and -paper design is implemented by physical 
components. 
Region of 
insignificant 
poles ' ' Region of ', 
dominant 0 
poles '• 
' ' jw 
' ' 
/ 0 
/ s-plane 
Unstable 
region 
Unstable 
region Figure 5-41 Regions of 
dominant and insignificant 
poles in the s-plane for design 
purposes. 
5~10 Dominant Poles and Zeros of Transfer Functions ·t-i 313 
5-10-1 Summary of Effects of Poles and Zeros 
Based on previous observations, we can summarize the following: 
I. Complex-conjugate poles of the closed.-loop transfer function lead to a step 
response that is underdamped. If all system poles are reat the step response is 
overdamped. However, zeros of the closed-loop transfer function may cause 
overshoot even if the system is overdamped. 
2. The response of a system is dominated by those poles closest to the origin in the 
s-plane. Transients due to those poles, which are farther to the left. decay faster. 
3. The farther to the left in the s-plane the system's dominant poles are, the faster the 
system will respond and the greater its bandwidth will be. 
4. The farther to the left in the s-plane the system's dominant poles are, the more 
expensive it will be and the larger its internal signals will be. While this can be 
justified analytically, it is obvious that striking a nail harder with a hammer drives 
the nail in faster but requires more energy per strike. Similarly, a sports car can 
accelerate faster, but it uses more fuel than an average car. 
5. When a pole and zero of a system transfer function nearly cancel each other, the 
portion of the system response associated with the pole will have a small 
magnitude. 
5-10-2 The Relative Damping Ratio 
When a system is higher than the second order, we can no longer strictly use the damping 
ratio r and the natural undamped frequency w,h which are defined for the prototype 
second-order systems. However, if the system dynamics can be accurately represented 
by a pair of complex-conjugate dominant poles, then we can stiII use t and w11 to indicate 
the dynamics of the transient response, and the damping ralio in this case is referred to as 
the relative damping ratio of the system. For example, consider the closed-loop transfer 
function 
Ms _ Y(s) _ 20 
( ) -R(s) -(s + 10)(s2 + 2s + 2) (5-167) 
The pole at s = -10 is 10 times the real part of the complex conjugate poles, which are at 
-1 ± jl. We can refer to the relative damping ratio of the system as 0.707. 
5-10-3 The Proper Way of Neglecting the Insignificant Poles 
with Consideration of the Steady .. State Response 
Thus far. we have provided guidelines for neglecting insignificant poles of a transfer 
function from the standpoint of the transient response. However, going through with the 
mechanics, the steady-state performance must also be considered. Let us consider the 
transfer function in Eq. (5~167); the pole at -10 can be neglected from the transient 
standpoint. To do this, we should first express Eq. (5-167) as 
M(s) - 20 
-lO(s/10 + 1 )(s2 + 2s + 2) (5-168) 
314 Chapter 5. Time-Domain Analysis of Control Systems 
Then we reason that Is/ 1 OI « 1 when the absolute value of s is much smaller than I 0, 
because of the dominant nature of the complex poles. The term s/10 can be neglected when 
compared with l. Then, Eq. (5-168) is approximated by 
20 
M(s) £::: 10(s2 + 2s + 2) (5-169) 
This way, the steady-state performance of the third-order system will not be affected by the 
approximation . In other words, the third-order system described by Eq. (5-167) and the 
second-order system approximated by Eq. (5-J 69) all have a final value of unity when a 
unit-step input is applied. On the other hand, ifwe simply throw away the term (s + 10) in 
Eq. (5-167), the approximating second-order system will have a steady-state value of 5 
when a unit-step input is applied. 
5-11 BASIC CONTROL SYSTEMS UTILIZING ADDITION OF POLES AND ZEROS 
In practice we can control the response of a system by adding poles and zeros or a simple 
amplifier with a constant gain K to its transfer function. So far in this chapter, we have 
discussed the effect of adding a simple gain in the time response-i.e., proportional 
control. In this section, we look at controllers that include derivative or integral of the input 
signal in addition to the proportional operation. 
EXAMPLE 5-11-1 Fig. 5-42 shows the block diagram of a feedback control system that arbitrarily has a second-order 
prototype process with the transfer function 
w2 
Gh)= II 1 • s(s + 2(w11) (5-170) 
The series controller in this case is a proportional-derivat ive (PD) type with the transfer function 
Ge(.~) = Kp + Kvs (5-171) 
In this case, the forward-path transfer function of the compensated system is 
G(s) = Y(s) = Gc(s)G ,is)= cu~(Kp + Kos) 
E(s) · 1' s(s + 2{cv11) (5-172) 
E(s) KP U(s) w,~ Y(s) 
+ s(s + 2(w,,) 
+ 
G1,(s) 
KoJ 
G)s) 
Figure 5-42 Control system with PD controller. 
5-11 Basic Control Systems Utilizing Addition of Poles and Zeros ~ 315 
which shows that the PD control is equivalent to adding a simple zero at s == -Kp / Kv to the forward~ 
path transfer function. Consider the second-order model 
2 G(s)--­-s(s + 2) 
Rewriting the transfer function of the PD controller as 
Gc(s) == (Kp + KDs) 
the forward-path transfer function of the system becomes 
G(s) = Y(s) = 2(Kp + Kos) 
E(s) s(s + 2) 
The closed-loop transfer function is 
Y(s) 2{Kp + Kos) 
R(s) = s2 + (2 + 2K0)s + 2Kp 
Eq. (5-176} shows that the effects of the PD controller are the following: 
1. Adding a zero at s = -Kp / Kl) to the closed-loop transfer function. (5-173) 
(5-174) 
(5-176) 
2. Increasing the damping term, which is the coefficient of the s term in the denominator, from 
2 to 2 + 2Kn. 
We should quickly point out that Eq. (5-175) no longer represents a prototype s.econd~order system, 
since the transient response is also affected by the zero of the transfer function at s = -Kp / Kv. It 
turns out that for this second-order system, as the value of Kn increases, the zero will move very close 
to the origin and effecti.vely cancel the pole of G(s) at s = 0. Thus, as KD increases, the transfer 
function in Eq. (5-175) approaches that ofa first-order system with the pole ats = -2. and the closed­
loop system will not have any overshoot. In general, for higher-order systems, however, the zero at 
s = -Kp / Kn may increase the overshoot when KD becomes very large. 
The characteristic equation is written as 
s2 + (2 + 2Ko )s + 2Kp = 0 (5-177) 
Ignoring the zero of the transfer function in equation (5-177} and comparing (5-177) to prototype 
second-order system characteristic equation 
s2 + 2?,"w11s + w~ = 0 
we get the damping 1·atio and natural frequency values of 
1 +Ko { = ..f[Kp 
W,i = /Up (5-178) 
which clearly show the positive effect of K0 on damping. fior Kp = 8, if we wish to have critical 
damping, ~ = I, Eq. (5-179) gives Ko = 3. Fig. 5-43 shows the unit-step responses of the closed-loop 
system with Kp = 8 and Kv = 3. With the PD control, the maximum overshoot is 2%. In the present 
case, although Kn is chosen for critical damping. the overshoot is due to the zero at s = -Kp / Ko of 
the closed-loop transfer function. Upon selecting a smaller Kp = 1, for r = I. Eq. (5-179) gives 
Ko= 0.414. Fig. 5-43 shows a critically damped unit-step response in this case. which implies the 
zero at s = -Kp / Kl) of the closed-loop transfer function has a smaller impact on the response of the 
system, and the overall response is similar to that of a prototype second-order system. However, in 
either case. upon increasing Ko, the general conclusion is tltat the PD controller decreases the 
rnaximum oi•ershoot, the rise time, and the settling time. 
316 ~ Chapter 5. Time-Domain Analysis of Control Systems 
1.2 
0.8 
0.6 
0.4 
0.2 
0.5 System: sys 
Time (sec): 0.729 
Amplitude: 1.02 
1.5 Unit-step responses of the system 
2 2.5 3 3.5 4 
Time(secs) (sec) 
Figure 5-43 Unit-step response of Eq. (5-176) for two sets of Kv and Kp values. 
Toolbox 5-11-1 4.5 
The corresponding responses for Fig. 5-43 are obtained by the following sequence of MATZ.AB functions 
clear all 
t=0:0.001:5; 
nurn = [ 2 * 3 16 J ; % KP=4 and KD=3 
den= [12+2*316]; 
step(num,den,t): 
hold on; 
nurn = [2*. 414 2]; % KP=l and KD=O. 414 
den= [12+2*.4142]; 
step(num,den,t); 
xlabel('Time(secs)') 
ylabel( 'y(t) ') 
title( 'Unit-step responses of the system') 5 
~ ... EXAMPLE 5 .. 11-2 We saw in the previous example that the PD controller can improve the damping and rise time of 
a control system. Because the PD controller does not change the system type. it may not fulfill the 
compensation objectives in many situations involving steady-state error. For this purpose. an integral 
controller may be used. The integral part of the PID controller produces a signal that is proportional to 
5-11 Basic Control Systems Utilizing Addition of Poles and Zeros 317 
R(s) E(s) U(s) Y(s) 
G,(s) 
Figure 5-44 Control system with PI controller . 
the time integral of the input or the controller. Fig. 5-44 illustrates the block diagnl.m of the 
prototype second-order system with a series PI controller . The transfer function of the PI 
controller is 
Ki G,.(s) = Kp +­s (5-180) 
Using the circuit elements given in Table 4-4 in Chapter 4, the forward-path transfer function of the 
compensated system is 
l'.o~(Kps + K1) G(s) = Gc(s)Gp(s) = 2( 2 ) s s+ l;w11 (5-181) 
Clearly, the immediate effects of the PI controller are the following: 
1. Adding a zero at s = -KJ/ Kp to the forward-path trnnsfer function. 
2. Adding a pole at s = 0 to the forward-path transfer function. This means that the system 
type is increased by one. Thus, the steady-state error of the original system is improved by 
one order; ihat is, if the steady-state error to a given input is constant. the Pl control reduces 
it to zero (provided that the compensated system remains stable). 
Consider the second-order model 
2 
Gp(s) = (s+ l)(s+2) (5-182) 
The system in Fig. 5-44, with the forward-path transfer function in Eq. (5-182), wilJ now have a zero 
steady-state error when the reference input is a step function. However , because the system is now of 
lhe third order, it may be less stable than the original second-order system or even become unsiable if 
the parameters Kp and K1 are not properly chosen. In the case of a type O system with a PD control, the 
magnitude of the steady-state error is inversely proportional to Kp. When a type O system is converted 
to type l using a PI controller , the steady-state error due to a step input is always zero if the system is 
stable. The problem is then to choose the proper combination of KP and K1 so that the transient 
response is satisfactory . 
The pole-zero configuration of the PI controller in Eq. (5-180) is shown in Fig. 5-45. At first 
glance, it may seem that Pl control will improve the steady-state error at the ex.pense of stability. 
However , we shall show that, if the location of the zero of C,.(s) is selected properly, both the damping 
and the steady-state en-or can be improved . Because the PI controlJer is essentially a low-pass filter, 
the compensated system usually will have a slower rise time and .longer settling time. A viable method 
of designing the Pl control is to select the zeru at s = -Ki/Kp so that ii is rela1i11ely close w the 
origin and away.from the most sign(ficant poles of tire process; 1/ze values <~f Kr and K1 should be 
relativezv small. 
318 µ.. Chapter 5. Time~Domain Analysis of Control Systems 
j(J) 
s-plane 
0 er 
Figure 5-45 Pole-zero configuration of a PI controller. 
Applying the PI controller of Eq. (5-180), the forward-path transfer function of the system 
becomes 
G(s) == Gc-(s)Gp(s) = 2Kp(s ~ K[/Kp) = 2Kp(s + K[/Kp) 
s(s + l)(s + 2) s3 + 3s2 + 2s (5-183) 
The steady-state error due to a step input us(t) is zero. The closed-loop transfer function is 
Y(s) 2Kp(s + KJ/Kp) 
R(s) = s3 + 3s2 + 2(1 + Kp)s + 2K1 (5-184) 
The characteristic equation of the closed-loop system is 
s3 + 3s2 + 2(1 + Kp )s + 2K1 = 0 (5-185) 
Applying Routh's test to Eq. (5-185) yields the result that the system is stable for O < K1 / Kp < 13.5. 
This means that the zero of G(s) at s = -Ki J Kp cannot be placed too far to the left in the left-half 
s-plane. or the system will be unstable. Let us place the zero at -Ki/ Kp relatively close to the origin. 
For the present case. the most significant pole of Gp(s) is at -1. Thus. K1 / Kp should be chosen so that 
the following condition is satisfied: 
With the condition in Eq. (5-186) satisfied, Eq. (5-184) can be approximated by 
G( } 2Kp 
s 9:! s2 + 3s + 2 + 2Kp (5-187) 
where the term KI/ Kp in the numerator and K1 in the denominator are neglected. As a design criterion. 
we assume a desired percent maximum overshoot value of about 4.3 for a unit-step input, which 
utilizing expression (5-104) results in a relative damping ratio of 0. 707. From the denominator of Eq. 
(5-187) compared with a prototype second~order system, we get natural frequency value of W,i = 
2.1213 rad/s and the required proportional gain of Kp = 1.25. This should also be true for the third­
order system with the PI controller if the value of KI/ Kp satisfies Eq. (5-186). Thus. to achieve this. 
we pick a small K1• If K1 is too small. however. the system time response is slow and the desired 
steady-state error requirement is not met fast enough. Upon increasing K1 to 1.125. the desired 
response is met. as shown in Fig. 5-46. 
5-12 MATLAB Tools ~. 319 
Unit-step responses of the system 1.4.-------.----.----,---...----..------.----.----.----.-------. 
Toolbox 5-11-2 1.2 
0.8 
0.6 
0.4 
0.2 KP=l.1.$ 
Kl=l.125 
2 3 4 5 6 7 8 
Time(secs) (sec) 
Figure 5-46 Unit-step response of Eq. (5-185) for two sets of K1 and Kp values. 9 
The conesponding responses/or Fig. 5-46 are obtained by the following sequence of MATLAB functions 
clear all 
t=0:0.001:10; 
num= [2*1.251.125]; %KP=l.25 andKl=0.625 
den= [13 2+2*1.251.125]; 
step(num,den,t); 
hold on; 
num= [2*1. 25 2*1. 125]; % KP=l. 25 and KI=l.125 
den= [1 3 2+2*1.25 2*1.125]; 
step(num,den,t); 
xlabel('Time(secs)') 
ylabel( 'y(t) ') 
title( 'Unit-step responses of the system') 
· 5-12 MATLAB TOOLS IO 
In this chapter we provided MATLAB toolboxes for finding the time response of simple 
control systems. We also introduced the concepts of root contours and root locus and 
included MATLAB codes to draw them for simple control examples. In Chapters 6 and 9, 
320 ., Chapter 5. Time-Domain Analysis of Control Systems 
... 5-13 SUMMARY where we address more complex control-system modeling and analysis, we will intro­
duce the Automatic Control Systems software (ACSYS) that utilizes MATLAB and 
SIMULINK m-files and GUis (graphical user interface) for the analysis of more complex 
control engineering problems. 
The reader is especially encouraged to explore the Control Lab software tools 
presented in Chapter 6 that simulate de motor speed and position control topics discussed 
earlier in this chapter. These simulation tools provide the user with virtual experiments and 
design projects using systems involving de motors, sensors, electronic components, and 
mechanical components . 
This chapter was devoted to the time-domain analysis of linear continuous-data control systems. The 
time response of control systems is divided into the transient and the steady-state responses. The steady­
state error is a measure of the accuracy of the system as time approaches infinity. When the system has 
unity feedback for the step. ramp. and parabolic inputs. the steady-state error is characterized by the 
error constants Kp, K ... and Ka, respectively. as well as the system type. When applying the steady-state 
error analysis, the final-value theorem of the Laplace transfonn is the basis; it should be ascertained that 
the closed-loop system is stable or the error analysis will be invalid. The error constants are not defined 
for systems with nonunity feedback. For nonunity-feedback systems. a method of detennining the 
steady-state error was introduced by using the closed-loop transfer function. 
The transient response is characterized by such criteria as the maximum overshoot, rise time, 
delay time. and settling time. and such parameters as damping ratio. natural undamped 
frequency, and time constant. The analytical expressions of these parameters can all be related 
to the system parameters simply if the transfer function is of the second-order prototype. For second­
order systems that are not of the prototype and for higher-order systems, the analytical relationships 
between the transient parameters and the system constants are difficult to determine. Computer 
simulations are recommended for these systems. 
Time-domain analysis of a position-control system was conducted. The transient and steady­
state analyses were caiTied out first by approximating the system as a second-order system. The effect 
of varying the amplifier gain Kon the transient and steady-state performance was demonstrated. The 
concept of the root-locus technique was introduced, and the system was then analyzed as a third-order 
system. It was shown that the second-order approximation was accurate only for low values of K. 
The effects of adding poles and zeros to the forward-path and closed-loop transfer functions 
were demonstrated. The dominant poles of transfer functions were also discussed. This established 
the significance of the location of the poles of the transfer function in the s-plane and under what 
conditions the insignificant poles (and zeros) could be neglected with regard to the transient response. 
Later in the chapter, simple controllers-namely the PD, PI, and PIO-were introduced. 
Designs were carried out in the time-domain (and .r-domain). The time-domain design may be 
characterized by specifications such as the relative damping ratio, maximum overshoot, rise time, 
delay time, settling time, or simply the location of the characteristic-equation roots, keeping in mind 
that the zeros of the system transfer function also affect the transient response. The perfonnance is 
generally measured by the step response and the steady-state error. 
MATLAB toolboxes and the Automatic Control System software tool are good tools to study the 
time response of control systems. Through the GUI approach provided by ACSYS, these programs 
are intended to create a user~friendly environment to reduce the complexity of control systems design. 
See Chapters 6 and 9 for more detail. 
~ REVIEW QUESTIONS 
1. Give the definitions of the error constants Kp, Kv, and K". 
2. Specify the type of input to which the error constant Kp is dedicated. 
Review Questions ~ 321 
3. Specify the type of input to which the error constant K~. is dedicated. 
4. Specify the type of input to which the error constant K0 is dedicated. 
5. Define an error constant if the input to a unity-feedback control system is 
described by r(t) = t'!'us(t)/6. 
6. Give the definition of the system type of a linear time-invariant system. 
7. If a unity-feedback control system type is 2. then it is certain that the steady-state 
error of the system to a step input or a ramp input will be zero. (T) (F) 
8. Linear and nonlinear frictions will generally degrade the steady-state error 
of a control system. (T) (F) 
9. The maximum overshoot of a unit-step response of the second-order prototype 
system will never exceed I 00% when the damping ratio ( and the natural undamped 
frequency Wn are an positive. (T) (F) 
10. For the second-order prototype system, when the undamped natural frequency w,1 
increases, the maximum overshoot of the output stays the same. (T) (F) 
11. The maximum overshoot of the following system will never exceed 100% when 
{, <On, and T are all positive. 
Y(s) w~(1 + Ts) 
R(s) = s2 + 2{w11s + w;, 
12. Increa.c,ing the undamped natural frequency will generally reduce the rise time 
of the step response. 
13. Increasing the undamped natural frequency will generally reduce the settling time (T) (F) 
{T) (F) 
of the step response. (T) (F) 
14. Adding a zero to the forward-path transfer function will generally improve the 
system damping and thus will always reduce the maximum overshoot of 
the system. (T) (F) 
15. Given the following characteristic equation of a linear contrnl system, 
increasing the value of K will increase the frequency of oscillation of the system. 
s3 + 3s2 + 5s + K = 0 (T) (F) 
16. For the characteristic equation given in question 15, increasing the coefficient 
of the s2 term will generally improve the damping of the system. (T) (F) 
17. The location of the roots of the characteristic equation in the s-plane will give 
a definite indication on the maximum overshoot of the transient response of 
the system. (T) (F) 
18. The following transfer function G(s) can be approximated by GL(s) because 
the pole at -20 is much larger than the dominant pole at s = -1. 
10 10 
G(s) = s(s + I )(s + 20) GL(s) ;::::: s(s + I) (T) (F) 
19. What is a PD controller'? Write its input-output transfer function. 
20. A PD controller has the constants KD and Kp. Give the effects of these constants on 
the steady-state error of the system. Does the PD control change the type of a 
system? 
21. Give the effects of the PD control on rise time and settling time of a control system. 
22. How does the PD controller affect the bandwidth of a control system? 
23. Once the value of Kv of a PD controller is fixed, increasing the value of Kp will 
increase the phase margin monotonically. (T) (F) 
322 i.-.. Chapter 5. Time-Domain Analysis of Control Systems 
REFERENCES 
r PROBLEMS 24. If a PD controller is designed so that the characteristic~equation roots have better 
damping than the original system, then the maximum overshoot of the system 
is always reduced. (T) (F) 
25. What does it mean when a control system is described as being robust? 
26. A system compensated with a PD contro11er is usually more robust than the system 
compensated with a PI controller. (T) (F) 
27. What is a PI controller? Write its input-output transfer function. 
28. A Pl controller has the constants Kp and K1• Give the effects of the PI controller 
on the steady-state error of the system. Does the Pl control change the system type? 
29. Give the effects of the PI control on the rise time and settling time of a control system. 
Answers to these review questions can be found on this book's companion Web site: 
www.wiley.com/college/golnaraghi. 
1. J, C. Willems and S. K. Mitter ... Controllability, Observability, Pole Allocation. and State Reconstruction.'' 
IEEE Trans. Automatic Control, Vol. AC-16, pp. 582-595, Dec. 1971. 
2. H. W. Smith and E. J. Davison, ••oesign oflndustrial Regulators.'' Proc. IEE (Lond(}n), Vol. 119. pp. 1210-
1216. Aug. 1972. 
3. F. N. Bailey and S. Meshkat, "Root Locus Design of a Robust Speed Control," Proc. Incremental Motion 
Colllrol S.vmposium, pp. 49-54. June 1983. 
4, M. Vidyaso.gar, .. On Undershoot o.nd Nonminimum Phase Zeros," IEEE Tl'ans. Automatil· Control, Vol. AC-
31. p. 440. May 1986. 
5. T. Narimatsu and M. Ito, "On the Zero Non-Regular Control System.'' J. Inst. Elec. Eng. Japan. Vol. 81. 
pp. 567-575. 1961. 
6. K. Ogata, Modern Control Engineering, 4th Ed .• Prentice Hall, NJ, 2002. 
7. G. F. Franklin and J. D. Powell, Feedback Control of Dynamic Systems. 5th Ed., Prentice-Han, NJ, 2006. 
8. J. J. Distefano, JII, A. R. Stubberud, and I. J. Williams, Schaum's Outline of Theory and Problems of 
Feedback and Control Systems. 2nd Ed. McGraw-Hill, 1990. 
In addition to using the conventional approaches~ use MATLAB to solve the problems in this 
chapter. 
5-1. A pair of complex-conjugate poles in the s-plane is required to meet the various specifications 
that follow. For each specification, sketch the region in the s~plane in which the poles should be 
located. 
(a) ?:2 0.707 
(b) 0 $ t :5 0.707 
(c) ?: S 0.5 
(d) 0.5 5 { :5 0.707 Wn 2:2rad/sec 
Wn :5 2 rad/ sec 
1 S Wn :5 5 rad/sec 
Wn :5 5 rad/ sec (positive damping) 
(positive damping) 
(positive damping) 
(positive and negative damping) 
5-2. Determine the type of the following unity-feedback systems for which the forward-path 
transfer functions are given. 
K 
(a) G(s) =(I+ s)(I + lOs)(l + 20s) 
IO(s + I) 
(c) G(s) = s(s + 5)(s + 6) 10e-0.2s 
(b) G(s) = (1 + s)(l + IOs)(I + 20s) 
(d) G(s) = 100(s -1) ., 
s2(s + 5)(s + 6)'" 
{e) G(s) = IO(s + I) 
s3(s2 + 5s + 5) 
(g) G(s) = S(s + 2) 
s2(s + 4) {() G(s) = 100 
s3(s+ 2)2 
(h) G(s) -8(s + 1) 
-(s2 + 2s + 3)(s + I) Problems -4l 323 
5-3. Determine the step, ramp, and parabolic error constants of the following unity-feedback 
control systems. The forward-path transfer functions are given. 
lOOO 
(a) G(s) =(I+ O.Is)(l + 10s) 100 
(b} G(s) = s(s2 + IOs + 100) 
K 
(c} G(s) := s(l + 0.ls)(l + 0.5s) 100 
(d) G(s) = s2(s2 + IDs+ 100) 
1000 
(e) G(s) = s(s + lO)(s + 100) (f) G(s) = K(I + 2s)(l + 4s) 
s2(.v2+s+l) 
5-4. For the unity-feedback control systems described in Problem 5-2, determine the steady-state 
error for a unit-step input. a unit.ramp input, and a parabolic input. (t2 /2)us(t). Check the stability of 
the system before applying the final-value theorem. 
5-5. The following transfer functions are given for a single-loop nonunity-feedback control system. 
Find the steady-state errors due to a unit-step input. a unit-ramp input, and a parabolic input, 
(t2 /2)us(t). 
I 
(a) G(s) = ( 2 Z) s +s+ 
I 
(b) G(s) = s(s + 5) 
1 
(c) G(s) = s2(s + 10) 
I 
(d) G(s) = 2( 12) s s+ I 
H(s) = (s+ 1) 
H(s) = 5 
H(s) =~ s+5 
H(s) = 5(s + 2) 
5-6. Find the steady-state errors of the following single-loop control systems for a unit-step input, a 
unit-ramp input, and a parabolic input, (t2 /2)us(t). For systems that include a parameter K, find its 
value so that the answers are valid. 
s+4 
(a) M(s) = s4 16 3 48 2 4 4' KH = l + s· + s + s+ 
K(s+3} 
(b) M(s) == .~3 + 3s2 + (K + 2)s + 3K' KH = l 
( ) M( ) s + 5 H ( ) lOs c .s = s4 + 15.,3 + 50s2 + JOs' s = s + 5 
K(s + 5) 
(d) M(s) = s4 + 17s3 + 60s2 + 5Ks + 5K' KH = I 
5-7. The output of the system shown in Fig. 5P-8 has a transfer function Y/X. Find the poles and 
zeros of the closed loop system and the system type. 
324 Chapter 5. Time-Domain Analysis of Control Systems 
5-8. Find the position, velocity, and acceleration error constants for the system given in Fig. SP-8. 
x~ s+ I ·I 5 
I s+3 s(s+ 2) 
I • y 
Figure 5P-8 
5-9. Find the steady-state error for Problem 5-8 for (a) a unit-step input, (b) a unit-ramp input, and 
(c) a unit-parabolic input. 
5-10. Repeat Problem 5-8 for the system given in Fig. 5P-10. 
x---v--1 1_s+l 
·I 4 
I I-, 
I • y s+2 s-
Figure 5P-10 
5-11. Find the steady-state error of the system given in Problem 5-10 when the input is 
5 3 4 X----+­-2s s2 s3 
5-12. Find the rise time of the following first-order system: 
1 -k 
G(s) = --with lkl < I s-k 
5-13. The block diagram of a control system is shown in Fig. SP-13. Find the step-, ramp-, and 
parabolic-error constants . The error signal is defined to be e(t). Find the steady-state errors in terms of 
Kand K1 when the following inputs are applied. Assume that the system is stable. 
(a) r(t) = u5(t) 
(b) r(t) = n~_.(r) 
(c) r(t) = (t2 /2)u,(t) 
R(s) ---+ 
+ 
Figure 5P-13 E(s) 0----t _L 
20s 
5-14. Repeat Problem 5-13 when the transfer function of the process is, instead, 
100 
Gp(s) = (1 + O.ls)(l + 0.5s) Y(s) 
What constraints must be made, if any, on the values of K and K, so that the answers are valid? 
Determine the minimum steady-state error that can be achieved with a unit-ramp input by varying 
the values of K and K,. 
Problems 325 
5-15. For the position-control system shown in Fig. 3P-7, determine the following. 
(a) Find the steady-state value of the error signal Be(t) in terms of the system parameters when the 
input is a unit-step function. 
(b) Repeat part (a) when the input is a unit-ramp function. Assume that the system is stable. 
5-16. The block diagrmn of a feedback control system is shown in Fig. SP-16. The effor signal is 
defined to be e(t). 
(a) Find the steady-state error of the system in terms of Kand K, when the input is a unit-ramp 
function. Give the constraints on the values of Kand K, so that the answer is valid. Let n(t) = 0 for 
this part. 
(b) Find the steady-state value of y(t) when n(t) is a unit-step function. Let r(t) = 0. Assume that the 
system is stable. 
R(s) _.. 
+ 
Figure SP-16 l + 0.02s N(s) 
K Y(s) 
i(s + 25) 
5-17. The block diagram of a linear control system is shown in Fig. SP-17, where r(t) is the 
reference input and n(t) is the disturbance. 
(a) Find the steady-state value of e(t) when n(t) = 0 and r(t) = tus(t). Find the conditions on the 
values of a and K so that the solution is valid. 
(b) Find the steady-state value of y(t) when r(t) = 0 and 11(1) = u,(1). 
R(s) _.. 
+ 
Figure 5P-17 Controller N(s) 
K(s+3) 
(s' -1) 
Process Y(s) 
5-18. The unit-step response of a linear conlrol system is shown in Fig. SP-I 8. Find the transfer 
function of a second-order prototype system to model the system. 
1.25 
1.0 
0 
Figure 5P-18 0.01 l(.l"ec) 
326 ~ Chapter 5. Time-Domain Analysis of Control Systems 
5-19. For the control system shown in Fig. 5P-13, find the val.ues of Kand K, so that the maximum 
overshoo t of the output is approximately 4.3% and the rise time t, is approximate ly 0.2 sec. Use Eq. 
(5-98) for the rise-time relationship. Simulate the system with any time-response simulation program 
to check the accuracy of your solutions. 
5-20. Repeat Problem 5-19 with a maximum overshoot of 10% and a 1ise time of 0.1 sec. 
5-21. Repeat Problem 5-19 with a maximum overshoot of 20% and a rise time of 0.05 sec. 
5-22. For the control system shown in Fig. 5P-13, find the values of Kand K, so that the maximum 
overshoot of the output is approximately 4.3% and the delay time t,1 is approximately 0.1 sec. Use 
Eq. (5-96) for the delay-time relationship . Simulate the system with a computer program to check 
the accuracy of your solutions. 
5-23. Repeat Problem 5-22 with a maximum overshoot of 10% and a delay time of 0.05 sec. 
5-24. Repeat Problem 5-22 with a maximum overshoot of 20% and a delay time of 0.01 sec. 
5-25. For the control system shown in Fig. 5P-13, find the values of Kand K, so that the damping 
ratio of the system is 0.6 and the settling time of the unit-step response is 0.1 sec. Use Eq. (5-102) for 
the settling time relationship . Simulate the system with a computer program to check the accuracy of 
your results. 
5-26. (a) Repeat Problem 5-25 with a maximum overshoot of 10% and a settling time of 0.05 sec. 
(b) Repeat Problem 5-25 with a maximum overshoot of 20% and a settling time of 0.()1 sec. 
5-27. Repeat Problem 5-25 with a damping ratio of 0.707 and a settling time of 0.J sec. Use 
Eq. (5-103) for the settling time relationship. 
5-28. The forward-path transfer function of a control system with unity feedback is 
K 
G( s) = ...,s(-s +-a),....,.( s-+-30...,..) 
where a and K are real constants. 
(a) Find the values of a and K so that the relative damping ratio of the complex roots of the 
characteristic equation is 0.5 and the rise time of the unit-step response is approximately 1 sec. Use 
Eq. (5-98) as an approximation of the rise time. With the values of a and K found, determine the actual 
rise time using computer simulation. 
(b) With the values of a and K found in part (a), find the steady-state errors of the system when the 
reference input is (i) a unit-step function and (ii) a unit-ramp function. 
5-29. The block diagram of a linear control system is shown in Fig. SP-29. 
(a) By means of trial and error, find the value of K so that the characteristic equation has two egual 
real roots and the system is stable. You may use any root-finding computer program to solve this 
problem. 
(b) Find the unit-step response of the system when K has the value found in part (a). Use any 
computer simulation program for this. Set all the initial conditions to zero. 
(c) Repeat part (b) when K = -l. What is peculiar about the step response for small t, and what may 
have caused it? 
R(s) ___. 
+ 
Figure 5P-29 E(s) K(s -1) Y(s) 
S(S + !)(S + 2) 
5-30. A controlled process is represented by the following dynamic equations: 
dxi (t) . ~ = -xi (t) + 5x2(t) 
dx2(t) ------;ft= -6.x:1 (t) + u(t) 
y(t) = x, (t) 
The control is obtained through state feedback with 
u(t) = -kix, (t) -k2x2(t) + r(t) 
where k1 and k2 are real constants , and r(t) is the reference input. Problems -C 327 
(a) Find the locus in the k1-versus-k2 plane (k1 = vertical axis) on which the overall system has a 
natural undamped frequency of 10 rad/sec. 
(b) Find the locus in the k1-versus-k2 plane on which the overall system has a damping ratio of0.707. 
(c) Find the values of k1 and k2 such that t = 0.707 and W11 = IO rad/sec. 
(d) Let the error signal be defined as e(t) = r(t) -y(t). Find the steady-state error when r(r) = u.,(t) 
and k1 and k, are at the values found in part (c). 
(e) Find the locus in the k1-versus-k2 plane on which the steady-state error due to a unit-step input is 
zero. 
5-31. The block diagram of a linear control system is shown in Fig. 5P-3 l. Construct a parameter 
plane of Kp versus Kd (Kp is the vertical axis), and show the following trajectories or regions in the 
plane. 
(a) Unstable and stable regions 
(b) Trajectories on which the damping is critical (( = I) 
(c) Region in which the system is overdamped ((> 1) 
(d) Region in which the system is underdamped ( ~ < 1) 
(e) Trajectory on which the parabolic-error constant K,, is 1000 sec-2 
(f) Trajectory on which the natural undamped frequency w,, is 50 rad/sec 
(g) Trajectory on which the system is either urn::ontrollable or unobservable (hint: look for pole-zero 
cancellation) 
R(s) --------.. 
+ 
Figure 5P-31 K1,+ Kns 1-----100 Y(s) 
; 
5-32. The block diagram of a linear control system is shown in Fig. SP-32. The fixed parameters of 
the system are given as T = 0.1, J = 0.01, and K; = 10. 
(a) When r(t) = tu5(t) and Td(t) = 0, determine how the values of Kand K1 affect the steady-state 
value of e(t). Find the restriclions on Kand K, so that the system is stable. 
(b) Let r(t) = 0. Determine how the values of Kand K, affecL the steady-state value of y(I) when the 
disturbance input Td(t) = Us(t). 
(c) Let K1 = 0.01 and r(t) = 0. Find the minimum steady-state value of y(t) that can be obtained by 
varying K, when T"(t) is a unit-step function. Find the value of this K. From the transient standpoint, 
would you operate the system at this value of K? Explain. 
(d) Assume that it is desired to operate the system with the value of K as selected in part (c). Find the 
value of K, so that the complex roots of the characteristic equation will have a real part of -2.5. Find 
aJJ three roots of the characteristic equation. 
328 Chapter 5. Time-Domain Analysis of Control Systems 
E(s) 
K 
Figure 5P-32 + + l 
Js2 Y(I) 
5-33. Consider a second-order unity feedback system with ~ = 0.6 and w11 = 5 rad/sec. Calculate 
the rise Lime, peak time, maximum overshoot, and settling time when a unit-step input is applied to 
the system. 
5-34. Fig. 5P-34 shows the block diagram of a servomotor. Assume J = 1 kg-m2 and B = 1 N-m/ 
rad/sec. If the maximum overshoot of the unit-step input and the peak time are 0.2 and 0.1 sec., 
respectively , 
(a) Find its damping ratio and natural frequency . 
(b) Find the gain Kand velocity feedback K1. Also, calculate the rise time and settling time. 
X 
Figure 5P-34 K 
Js+a s y 
5-35. Find the unit-step response of the following systems assuming zero initial conditions: 
(a) [.i-1] [-I -IJ[X1] [I 1][''1] 
.i:2 = 6.5 0 x2 + I O u2 
[YI-= [I o] [Xi]+ [o OJ ["l] 
Y2 _ 0 l x2 0 0 u2 
(b) [·i:1 -[ 0 I ] [XJ] [0] 
.i:2 J = -1 -l x2 + l u 
.v1=[l 01[:J+roJu 
(c) [.i-11 [ o ol [x1] [o] 
::: ~I ~l ~ :: + ~ u 
y=[O O l][::J 
X3 
5-36. Use MATLAB to solve Problem 5-35. 
5-37. Find the impulse response of the given systems in Problem 5-35. 
5-38. Use MATLAB to solve Problem 5-37. 
5-39. Fig. 5P-39 shows a mechanical system. 
(a) Find the differential equation of the system. 
(b) Use MATLAB to find the unit-step input response of the system. 
y 
Figure 5P-39 Problems 329 
5-40. The de-motor control system for controlling a printwheel described in Problem 4-49 has the 
forward-path transfer function 
G( i·) = _®_0_(s_) = _nK_.,_K_;K_LK_ 
' ®e(s) Ll(s) 
where L\(s) = s[Laf,1ths4 + JL(Ral111 + B111La)s3 
+ (n2KLLah + KLLalm + K;K&h + Rt1B111h.)s2 
+ (n2RaKLJL + RaKLlm + BmKLL")s + RaB111KL + K;K1,KL] 
where K; = 9oz-in./A, Kt,= 0.636 V/rad/sec , Ra = 5fl, L,, = I mH, K_, = l V/rad, n = 1/ lO, 1111 = fr,= 
0.001 oz-in.-sec2, and B,,, 3=' 0. The characteristic equation of the closed-loop system is 
(a) Let KL= 10,000 ot.-in./rad. Write the forward-path transfer function G(s) and find the poles of 
G(s). Find the critical value of K for the closed-loop system to be stable. Find the roots of the 
characteristic equation of the closed-loop system when K is at marginal stability. 
(b) Repeat pa11 (a) when K,_ = 1000 oz-in./rad. 
(c) Repeat part (a) when K1• == oo; that is, the motor shafL is rigid. 
(d) Compare the results of parts (a), (b), and (c), and comment on the effects of the values of K1• on 
the poles of G(s) and the roots of the character istic equation. 
5-41. The block diagram of the guided-mis sile attitude-control system described in Problem 4-20 is 
shown in Fig. SP-41. The command input is r(t), and d(t) represents disturbance input. The objective 
of this problem is to study the effect of the controller G ,.(s) on the steady-state and transient responses 
of the system. 
330 Chapter 5. Time-Domain Analysis of Control Systems 
(a) Let Gc(s) = 1. Find the steady-state error of the system when r(I) is a unit-step function. 
Set d(t) = 0. 
(b) Let Gc(s) = (s + a)/s. Find the steady-state error when r(t) is a unit-step function. 
(c) Obtain the unit-step response of the system for O :St :S 0.5 sec with Gc(S) as given in part (b) and 
a = 5, 50, and 500. Assume zero initial conditions . Record the maximum overshoot of y(I) for each 
case. Use any available computer simulation program. Comment on the effect of varying the value of 
a of the controller on the transient response. 
(d) Set r(t) = 0 and G,.(s) = 1. Find the steady-state value of y(t) when d(t) = us(t). 
(e) Let Gc(s) = (s + a)/s. Find the steady-state value of y(t) when d(t) = u,(t). 
(f) Obtain the output response for O ~ t ~ 0.5 sec, with G,.(s) as given in part (e) when r(r) = 0 and 
d(t) = us(t); a= 5, 50, and 500. Use zero initial conditions . 
(g) Comment on the effect of varying the value of a of the controller on the transient response of y(t) 
and d(t). 
E(s) 
G/s) 
Controller 
Figure 5P-41 D(s) 
IOO(s + 2) 
cs2-J> 
Missile dynamics Y(s) 
5-42. The block diagram shown in Fig. 5P-42 represents a liquid-level control system. The liquid 
level is represented by lz(t), and N denotes the number of inlets. 
(a) Because one of the poles of the open-loop transfer function is relatively far to the lefL on the 
real axis of the s-plane at s = -10, it is suggested that this pole can be neglected. Approximate the 
system by a second-order system by neglecting the pole of G(s) at s = -10. The approximat ion 
should be valid for both the transient and the steady-state responses . Apply the formulas for the 
maximum overshoot and the peak time 111111, to the second-order model for N = l and N = 10. 
(b) Obtain the unit-step response (with zero initial conditions) of the original third-order system with 
N = J and then with N = 10. Compare th e responses of the 01iginal system with those of the second­
order approximating system. Comment on the accuracy of the approximation as a function of N. 
50 
s(0.05s + 0.5) 
Figure 5P-42 O.OlN 
s+T H(s) 
5-43. The forward-path transfer function of a unity-feedback control system is 
( ) l + T,s Gs = 2 s(s + J) 
Compute and plot the uniL-step responses of tbt: closed-loop system for T: = 0, 0.5, 1.0, I 0.0, and 
50.0. A,sume zero initial conditions. Use any computer simulation program that is available. 
Comment on the effects of the various values of T= on the step response. 
5-44. The forward-path transfer function of a unity-feedback control system is 
l G(s) = J 
s(s + l)-(l + Tps) Problems 331 
Compute and plot the unit-step responses of the closed-loop system for T1, = 0, 0.5, and 0.707. Assume 
zero initial conclitions. Use any computer simulation program. Find the critical value of 0, so that the 
closed-loop system is margina.lly stable. Comment ml the effects of the pole at s = -1 /Tµ in G(s). 
5-45. Compare and plot the unit-step responses of the unity-feedback closed-loop systems with the 
forward-path transfer functions given. Assume zero initial conditions. 
I+ T.s 
(a) G(s) = s(s + 0.55)(: + 1.5) 
l + T.s 
(b) G(s) = ( 2 2 -2) s + s + 
2 
(c) G(s) = (s2 +2s+2)(1 + Tµs) 
10 
(d) G(s) = ------c­s(s + 5)(1 + T,,s) 
K For 
For 
For 
For 
(e) G(s) = J s(s + l.25)(s-+ 2.5s + 10) 
(i) For K = 5 
(ii) For K = 10 
(iii) For K = 30 
(f) G(s) = . K(s + 2.5) 
s(s + l.25)(s2 + 2.5s + 10) 
(i) For K = 5 
(ii) For K = JO 
(iii) For K = 30 T:=0,l,5,20 
T~ = 0, I, 5, 20 
Tp = 0, 0.5, 1.0 
Tp = 0, 0.5, 1.0 
5-46. Fig. 5P-46 shows the block diagram of a servomotor with tachometer feedback. 
(a) Find the error signal E(s) in the presence of the n:ference input X(s) and disturbance input D(s). 
(b) Calculate the steady-state error of the system when X(s) is a unit ramp and D(s) is a unit step. 
(c) Use MATLAB to plot the response of the system for pa1t (b). 
(d) Use MATLAB to plot the response of the system when X(s) is a unit-step input and D(s) is a unit 
impulse input. 
X K 
Figure 5P-46 _l_ 
s y 
332 ..,. Chapter 5. Time-Domain Analysis of Control Systems 
5-47. The feedfo1ward transfer function of a stable unity feedback system is G(s). If the closed-loop 
transfer function can be rewritten as 
Y(s) 
X(s) G(s) 
1 +G(s) (Ats+ l)(A2s + 1) ... (A,,s + 1) 
(Bis+ l)(B2s + l) ... (B,,,s + l) 
(a) Find the steady-state error to a unit-step input. 
(b) Calculate k = Iim,-~sC(s). 
5-48. If the maximum overshoot and l % settling time of the unit-step response of the closed-loop 
system shown in Fig. 5P-48 are no more than 25% and 0.1 sec, find the gain Kand pole location P of 
the compensator. Also, use MATLAB to plot the unit-step input response of the system and verify 
your controller design. 
R s+K t---~--.c s+p 
Figure 5P-48 
5-49. If a given second-order system is required to have a peak time less than I, find the region in the 
s-plane corresponding to the poles that meet this specification. 
5-50. A unity feedback control system shown in Fig. 5P-50(a) is designed so that its closed-loop 
poles lie within the region shown in Fig. 5P-50(b). 
R E + 
K -5!_ 
s+p C 
s 
(a) 
[m (s) 
-3 
0 -2 
(b) 
Figure 5P-50 
^a unity feedback configuration and utilize
, and confirm the results.Problems ~ 333 
(a) Find the values for Wn and ~-
(b) If Kp = 2 and P = 2, then find the values for K and K1• 
(c) Show that. regardless of values Kp and p, the controller can be designed to place the poles 
anywhere in the left side of the s-plane. 
5-51. The equation of a de motor is given by 
·· ( K1K2)·· K1 lm9m + B+~ Om =RV 
Assuming Im = 0.02 kg-m2, B = 0.002 N-m-sec, K1 = 0.04 N-m/A, K2 = 0.04 V-sec, and 
R= 20.0. 
(a) Find the transfer function between the applied voltage and the motor speed. 
(b) Calculate the steady-state speed of the motor after applying a voltage of 10 V. 
(c) Determine the transfer function between the applied voltage and the shaft angle Om. 
(d) Including a closed-loop feedback to part (c) such that v = K(e p -Om), where K is the feedback 
gain, obtain the transfer function between (}P and 9m. 
(e) If the maximum overshoot is less than 25o/o, determine K. 
(f) If the rise time is less than 3 sec, determine K. 
(g) Use MATLAB to plot the step response of the position servo system for K = 0.5, 1.0, and 2.0. 
Find the rise time and overshoot. 
5-52. In the unity feedback closed-loop system in a configuration similar to that in Fig. SP-48, the 
plant transfer function is 
l G(s)---­-s(s+3) 
and the controller transfer function is 
H(s) == k(s + a) 
(s + b) 
Design the controller parameters so that the closed-loop system has a I 0% overshoot for a unit step 
input and a 1 % settling time of LS.sec. 
5-53. An autopilot is designed to maintain the pitch attitude ex of an airplane. The transfer function 
between pitch angle ex and elevator angle f3 are given by 
a(s) 60(s + 1 )(s + 2) 
{J(s) = (s2 + 6s + 40)(s2 + 0.04s + 0.07) 
The autopilot pitch controller uses the pitch error e to adjust the elevator as 
f3(s) K(s+3) 
E{s) = s+ 10 
Use MATLAB to find K with an overshoot of less than 10% and a rise time faster than 0.5 sec for a 
unit-step input. Explain controller design difficulties for complex systems. 
5-54. The block diagram of a control system with a series controller is shown in Fig. SP-54. Find the 
transfer function of the controller Gc(s) so that the following specifications are satisfied: 
(a) The ramp-error constant Kv is 5. 
(b) The closed-loop transfer function is of the form 
M(s) _ Y(s) _ K 
--R(s) -(s2 + 20s + 200)(s + o) 
where Kand a are real constants. Use MATLAB to find the values of Kand a 
334 ... Chapter 5. Time-Domain Analysis of Control Systems 
The design strategy is to place the closed-loop poles at -10 + jlO and -10 -)10, and then 
adjust the values of Kand a to satisfy the steady-state requirement. The value of a is large so that 
it will not affect the transient response appreciably . Find the maximum overshoot of the designed 
system. 
E(s) G ( )- LOO ,. s - ? s(s-+ l Os+ 100) Y(s) 
Figure SP-54 
5-55. Repeat Problem 5-54 if the ramp-error constant is to be 9. What is the maximum value of Kv 
that can be realized? Comment on the difficulties that may arise in attempting to realize a very 
large K, .. 
5-56. A control system with a PD controller is shown in Fig. 5P-56. Use MATLAB to 
(a) Find the values of Kp and KD so that the ramp-error constant K, is 1000 and the damping ratio 
is 0.5. 
(b) Find the values of Kp and K0 so that the ramp-error constant K, is 1000 and the damping ratio 
is 0.707. 
(c) Find the values of Kp and K0 so that the ramp-error constant K, is 1000 and the damping ratio 
is 1.0. 
Figure SP-56 1000 
s(s+ 10) Y(s) 
5-57. For the control system shown in Figure 5P-56, set the value of Kp so that the ramp-error 
constant is 1000. Use MATLAB to 
(a) Vary the value of KD from 0.2 to 1.0 in increments of 0.2 and detennine the values of rise time and 
maximum overshoot of the system. 
(b) Vary the value of KD from 0.2 to 1.0 in increments of 0.2 and find the value of KD so that the 
maximum overshoot is minimum. 
5-58. Consider the second-order model of the aircraft attitude control system shown in Fig. 5-29. 
The transfer function of the process is G,,(s) = .,c;l~f2r Use MATLAB to design a series PD 
controller with the transfer function Gc(s) = Kp + K0s so that the following performance specifi­
cations are satisfied: 
Steady-state error due to a unit-ramp input ::; 0.001 
Maximum overshoot ::; 5% 
Rise time tr ::; 0.005 sec 
Settling time t, ::; 0.005 sec 
5-59. Fig. 5P-59 shows the block diagram of the liquid-level control system described in Problem 
5-42. The number of inlets is denoted by N. Set N = 20. Use MATLAB to design the PD controller so 
Lhat with a unit-step input the tank is filled to within 5% of the reference level in less than 3 sec 
without overshoot. 
Problems 335 
R(s) ION Y(s) 
s(s +l)(s + JO) 
Figure 5P-59 
5-60. For the liquid-level control system described in Problem 5-59, set Kp so that the ramp-error 
constant is J. Use MATLAB to vary KD from O to 0.5 and determine the values of rise time and 
maximum overshoot of the system. 
5-61. A control system with a type O process Gp(s) and a Pl controller is shown in Fig. 5P-61. Use 
MATLAB to 
(a) Find the value of K1 so that the ramp-error constant K,. is 10. 
(b) Find the value of Kp so that the magnitude of the imaginary parts of the complex roots of the 
characteri stic equation of the system is 15 rad/sec. Fi.nd the roots of the characteristic equation. 
(c) Sketch the root contours of the characteristic equation with the value of K1 as determined in part 
(a) and for O ::5 Kp < oo. 
Figure 5P-61 K K + _J_ p s G (s)= 2 100 
P s + 10s+ 100 Y(s) 
5-62. For the control system described in Problem 5-61, set K1 so that the ramp-error constant is 10. 
Use MATLAB to vary Kp and determine the values of rise time and maximum overshoot of the 
system. 
5-63. For the control system shown in Fig. 5P-61, use MATLAB to perform the following: 
(a) Find the value of K1 so that the ramp-enor constant K,, is 100. 
(b) With the value of K1 found in part (a), find the critical value of Kp so that the system is stable. 
Sketch the root contours of the characteristic equation for O ::; Kp < oc. 
(c) Show that the maximum overshoot is high for both large and small values of Kp. Use the value of 
K1 found in part (a). Find the value of K,, when the maximum overshoot is a minimum. What is the 
value of this maximum overshoot'? 
5-64. Repeat Problem 5-63 for Kv = 10. 
5-65. A control system with a type O process and a PID controller is shown in Fig. 5P-65. Use 
MATLAB to design the controller parameters so that the following specifications are satisfied: 
Ramp-error constant K., = I 00 
Rise time t,. < 0.01 sec. 
Maximum overshoo t < 2% 
Plot the unit-step response of the designed system. 
R(s) 
Figure 5P-65 G p(s) = ~2~=100=-­
s + 10s+ 100 Y(s) 
336 lilll-Chapter 5. Time-Domain Analysis of Control Systems 
5-66. Consider the quarter-car model of vehicle suspension systems in Example 4-11-3. 
The Laplace transfom1 between the base acceleration and displacement is given by 
Z(s) -1 
Y(s) = s2 + 2t;wns + Wn 2 
(a) It is desired to design a proportional controller. Use MATLAB to design the controller 
parameters where the rise time is no more than 0.05 sec and the overshoot is no more than 3%. 
Plot the unit~step response of the designed system. 
(b) It is desired to design a PD controller. Use MATLAB to design the controller parameters where 
the ris~ timt! is nu more than 0.05 sec and the overshoot is no more than 3%. Plot the unit-step 
response of the designed system. 
(c) It is desired to design a PI controller. Use MATLAB to design the controller parameters where 
the rise time is no more than 0.05 sec and the overshoot is no more than 3%. Plot the unit-step 
response of the designed system. 
(d) It is desired to design a PIO controller. Use MATLAB to design the controller parameters where 
the rise time is no more than 0.05 sec and the overshoot is no more than 3%. Plot the unit-step 
response of the designed system. 
5-67. Consider the spring-mass system shown in Fig. 5P-67. 
I fiti ... b!i!L l ts trans er unct10n 1s given Y F(s) = Msz+ns+K • 
Repeat Problem 5-66 where M = 1 kg, B = 10 N.s/m, K = 20 Nim. 
B 
Figure 5P-67 r"'y(t) 
M Jtt) 
5-68. Consider the vehicle suspension system hitting a bump described in Problem 4-3. Use 
MATLAB to design a proportional controller where the 1 % settling time is less than 0.1 sec and the 
overshoot is no more than 2%. Assume m = 25 kg, J = 5 kg-m2, K = 100 Nim, and r = 0.35 m. Plot 
the impulse response of the system. 
5-69. Consider the train system described in Problem 4-6. Use MATLAB to design a proportional 
controller where the peak time is less than 0.05 sec and the overshoot is no more than 4%. Assume 
M = 1 kg, m = 0.5 kg, k = I N/m, µ = 0.002 sec/m, and g = 9.8 rn/s2. 
5-70. Consider the inverted pendulum described in Problem 4-9, where M = 0.5 kg, m = 0.2 kg, 
µ = 0.1 N/m/sec (friction of the cart), I= 0.006 kg-m2, g = 9.8 m/s2, and I = 0.3 rn. 
Use MATLAB to design a PD controller where the rise time is less than 0.2 sec and the overshoot is 
no more than 10%. 
6 
The Control Lab 
IJII.. 6-1 INTRODUCTION 
The majority of undergraduate courses in control have labs dealing with time response 
and control of de motors. The focus of this chapter is therefore on these lab probJems ­
namely, speed response, speed control, position response, and position control of de 
motors. In this chapter, using MATLAB and Simulink, we have created a series of virtual 
lab experiments that are designed to help students understand the concepts discussed 
in Chapters 4 and 5. This chapter also contains two controller design experiments. 
There are three classes of simulation experiments designed for this chapter: SIMLab, 
Virtual Lab, and Quarter Car Sim. There experiments are intended to supple­
ment the experimental exposure of the students in a traditional undergraduate control 
course. 
It is a demanding task to develop software that provides the reader with practical 
appreciation and understanding of de motors including modeling uncertainties , non­
linear effects, system identification , and controller design amid these practical chal­
lenges. However, through the use of MATLAB and Simulink , we created a virtual de 
motor in Virtual Lab, which exhibits many of the same non-idealized behaviors observed 
in an actual system. All the experiments presented here were compared with real systems 
in the lab environment , and their accuracy has been verified. These virtual labs include 
experiments on speed and position control of de motors followed by two controller 
design projects, the first involving control of a simple robotic system and the last one 
investigating the response of an active suspension system. In this chapter, the focus on de 
motors in these experiments is intentional, because of their relative simplicity and wide 
usage in numerous industrial applications. 
The main objectives of this chapter are: 
1. To provide an in-depth description of de motor speed response, speed control, and 
position control concepts. 
2. To provide preliminary instruction on how to identify the parameters of a system. 
3. To show bow different parameters and nonlinear effects such as fri<.:tiun and 
saturation affect the response of the motor. 
4. To give a better feel for controller design through realistic examples. 
5. To get started using the SIMLab and Virtual Lab. 
6. To gain practical knowledge of the Quarter Car Sim software. 
Before starring the lab, you must have completed the relevant background preparation 
in Chapters 4 and 5. 
337 
338 Chapter 6. The Control Lab 
6-2 DESCRIPTION OF THE VIRTUAL EXPERIMENTAL SYSTEM 
The experiments that you will perform are intended to give you hands-on (virtually!) 
experience in analyzing the system components and experimenting with various feedback 
control schemes. To study the speed and position response of a de motor, a typical 
experimental test bed is shown in Fig. 6-L 
The setup components are as fo11ows: 
• A de motor with a position sensor (usually an encoder with incremental rotation 
measurement) or a speed sensor (normally a tachometer or a differencing operation 
performed on encoder readings) 
• A power supply and amplifier to power the motor 
• Interface cards to monitor the sensor and provide a command voltage to the 
amplifier input and a PC running MATLAB and Simulink to control the system and 
to record the response (alternatively, the controller may be composed of an analog 
circuit system) 
A simple speed control system is composed of a sensor to measure motor shaft speed 
and an amplifier with gain K (proportional control) in the configuration shown in Fig. 6-1. 
The block diagram of the system is also shown in Fig. 6-2. 
To control the position of the motor shaft, the simplest strategy is to use a 
proportional controller with gain K. The block diagram of the closed-loop system is 
shown in Fig. 6-3. The system is composed of an angular position sensor (usually an 
encoder or a potentiometer for position applications). Note that for simplicity the input 
voltage can be scaled to a position input T;,,(s) so that the input and output have the same 
units and scale. 
The components are described in the next sections. 
Gear 
head 
+-J-----< ~-----t~--- .111 
"in(t) j Amp. I Va (f) i::::::1 -----~ J,11 
Feedback ~--- sensor 
Figure 6-1 Feedback control of an armature-controlled de motor with load inertia. 
V,,(s) K,,, 
L0s+ R" I 
Js +B 
Figure 6-2 Block diagram of a speed-control, armature-controlled de motor. K, v ... ,(s) 
6-2-1 Motor 6-2 Description of The Virtual Experimental System ' 339 
_1_ 
Js+B 
Figure 6-3 Block diagram of a position-control , armature-controlled de motor. 
Recall from Chapter 5 that for the annature-controlled de motor shown in Fig. 5-24, the 
system parameters include 
Ra = armature resistance , ohm 
La = armature inductance, henry 
110 = applied armature voltage, volt 
v1, = back emf, volt 
e = angular displacement of the motor shaft, radian 
T = torque developed by the motor, N-m 
Ji = moment of inertia of the load, kg-m2 
h = any external load torque considered as a disturbance , N-rn 
lm = moment of inertia of the motor (motor shaft), kg-m2 
J = equivalent moment of inertia of the motor and load connected to the motor-shaft , 
J = h/n2 + lm, kg-m2 (refer to Chapters 4 and 5 for more details) 
n = ge;ir ratio 
B = equivalent viscous-friction coefficient of the motor and load refetTed to the 
motor shaft, N-m/rad/sec (in the presence of gear ratio, B must be scaled by n; 
refer to Chapter 4 for more details) 
K1 = speed sensor (usually a tachometer) gain 
The motor used in this experiment is a permanent magnet de motor with the following 
parameters (as given by the manufacturer): 
K111= Motor (torque) constant 0.10 Nm/A 
K1, = Speed Constant 0.10 V/rad/sec 
Ra = Armature resistance I .35 ohm 
L" = Armature inductance 0.56 mH 
J,,, = Armature moment of inertia 0.0019 kg-m2 
r:111 = Motor mechanical time constant 2.3172 E-005 sec 
A reduction gear head may be attached to the output disk of the motor shaft. If the motor 
shaft's angular rotation is considered the output, the gear head will scale the inertia of the 
load by l / n2 in the system model, where n is the gear ratio. 
6-2-2 Position Sensor or Speed Sensor 
For position-control applications, an incremental encoder or a potentiometer may be 
attached directly to the motor shaft to measure the rotation of the armature. In speed 
340 ~ Chapter 6. The Control Lab 
6-2-3 Power Amplifier 
6-2-4 Interface control, it is customary to connect a tachometer to the motor shaft. Sensor-shaft inertia and 
damping are normally too small to be included in the system model. The output from each 
sensor is proportional to the variable it is measuring. We will assume a proportionality gain 
of 1; that is, K, = 1 (speed control), and/(.,, = 1 (position control). 
The purpose of the amplifier is to increase the current capacity of the voltage signal from 
the analog output interface card. The output current from the interface should normally be 
limited, whereas the motor can draw many times this current. The details of the amplifier 
design are somewhat complex and will not be discussed here. But we should note two 
important points regarding the amplifier; 
1. The maximum voltage that can be output by the amplifier is effectively limited to 
20 V. 
2. The maximum current that the amplifier can provide to the motor is limited to 8 A. 
Therefore, 
Amp gain 2 VIV 
Amplifier input saturation limits ± 10 V 
Current saturation limits ±4 A 
In a real-world scenario, interfacing is an important issue. You would be required to attach 
all the experimental components and to connect the motor sensor and the amplifier to a 
computer equipped with MATLAB and Simulink ( or some other real-time interface 
software). Simulink would then provide a voltage output function that would be passed 
on to the amplifier via a digital-to-analog (DI A) interface card. The sensor output would 
also have to go through an analog-to-digital (AID) card to reach the computer. Alterna­
tively, you could avoid using a computer and an AID or DI A card by using an analog circuit 
for control . 
..... 6-3 DESCRIPTION OF SIMLAB AND VIRTUAL LAB SOFTWARE 
As shown in Fig. 6-4, SIMLab and Virtual Lab are series of MATLAB and Simulink files 
within the Automatic Control Systems (ACSYS) applet that makes up an educational tool 
for students learning about de motors and control systems. SIMLab was created to allow 
students to understand the basic simulation model of a de motor. The parameters of the 
motor can be adjusted to see how they affect the system. The Virtual Lab was designed to 
exhibit some of the key behaviors of real de motor systems. Real motors have issues such as 
gear backlash and saturation, which may cause the motor response to deviate from 
expected behavior. Users should be able to cope with these problems. The motor 
parameters cannot be modified in the Virtual Lab because, in a realistic scenario, a motor 
may not be modified but must be replaced by a new one! 
In both the SIMLab and the Virtual Lab, there are five experiments. In the first two 
experiments, feedback speed control and position control are explored. Open-loop step 
response of the motor appears in the third experiment. In the fourth experiment, the 
frequency response of the open~loop system can be examined by applying a sinusoidal 
input. A controller design project is the last experiment. 
6-3 Description of SIMLab and Virtual Lab Software ~ 341 
matic Control 5Y5te~1s ·(ACSYS) © ... 
• 1111 m1mt fr · C 1111 tr11/ . ,·1 · ':it1 m.-; 
Transfer function Symbolic 
Controller Design Tool 
Sim Lab 
Virtual Lab 
Quarter Car Sim 
Close and Exit 
Figure 6-4 The Automatic Control Systems (ACSYS) applet. 
To launch the ACSYS applet, navigate to the appropriate directory in the MATLAB 
command window, and type Acsys at the command prompt. The SIMLab or Virtual Lab 
experiment windows can be called from the ACSYS applet by clicking on the appropriate 
button. Alternatively, you may directly call SIMLab or Virtual Lab from the MATLAB 
command window by navigating to the Vi11ualLab subdirectory and typing simlab or 
virtuallab, respectively. 
When SIMLab or Virtual Lab is opened, the experiment control window will be 
displayed. The Experiment menu can be used to swilch between different control experi­
ments, as in Fig. 6-5. The grey control panel on the left contains the control buttons for the 
experiment. Every experiment has a button to enter model parameters, a field to enter 
simulation time, and additional experiment -specific plot controls. The plots or animations 
that the experiment supports appear in the display panel on the right. Fig. 6-6 shows a 
typical experiment control window in SIMLab. The time-response plot is displayed, and 
plot control buttons appear below the axes. Zoom control buttons allow you to view the 
response at greater detail, and the data cursor gives precise point values for graphed data. 
SIMLab allows you to display the motor transfer functions in various formats and to access 
other custom tools from the SIMLab Tools dropdown menu. For step-by-step instnictions 
on using the experiment window, click on the Help Me button in the menu bar. The standard 
342 • Chapter 6. The Control Lab 
l)l'lliilllll!l!l!lll!lllml!l!ll!!il!l!ll!lm.Dlll!m ll!!!ll ............ ;,r-....-~~ 
''"':':::~ Jl'A.:...-:•,oo----'-""'""'~'--r=============== ====="""========================= =;I 
i:Pmb:lcavoi Cltl+2 t---
1: Open loop Speed CIJM t--
i' Opel\ U,CC,SN lr# OriH 
:.,_!!i~Syitr,rri~ CttU-.5 ·s I 
I ~ O,itQ_ '.'.!__j 
.,,,J11;)(1 
r,o1., W]t 
r ReuseAzas 
Figure 6-5 The Experiment menu for SIMLab or Virtual Lab. 
[ _ _,, _______ ...,.j {'SM.tibloobJ 
S1mu1auon Tinie (s):r-::;-;--0_5 1 1 ,Sifdiet12na Ordel' a. Tl" 
I u., ,-.,1!·"1'"""~~a.~w~··· 
EnterModel P?!lfl'ICJQr.t J j _. ~dOrJer OL TF 
Show Sh,J:,llon P0r11'111Un ----------····-,~-=-=-"-="'"--___, 
r~ Run Smu'•tion ~~ 
I P~10Figoro 
., ____ _ U(.,)=~.k,. 1 
,/Ji. s+~ 
!!(.<) = 78 · .... ~.:i, 
--Ou, put. --~pu, 
08 · -···· .... ---i-.•.•• { 
: t I 1 : : 
................ ··1·······,··"···1,:_· 
. . . i ' l . : . DA 
0.2 ...... • ....... • ........ • ....... j. ...... < ...... ' ....... } ....... 1 ....... • ...... . l \ . 1 . . : ': . 
0o nos 01 o,s 0.2 025 o.a o.as o., 045 05 
nme[sec) 
Figure 6-6 Typical SIMLab experiment control window. 
Sltp 
Oish.rrb1n¢• 
(Nm) 6-3 Description of SIMLab and Virtual Lab Software 343 
Eloptllmtnt1 SP4:edC0n l1ol 
DC Moto1 (Spud Output) 
D<uJbt.-clldcon lhl 
OCmolo,blod(totnodif), 
lh1Jr1oto1p,111m1t1 0. 
Rl;trhhd,: on th._ DC motor 
bl•d<•11dnl1ot•t.0*4 1Jnd11 
M,~ tout tht stmul.alion 
DCmatorlt'lodtl 
Figure 6-7 SlMLab Speed Control Simulink model. 
Microsoft Windows calculator and a unit conversion tool can be accessed from the top 
menu. 
The model parameters must be set first in any experiment. By selecting the Enter 
Model Parameters button, a Simulink (.mdl) window containing the model for the 
experiment will be launched. The model, shown in Fig. 6-7, contains a simple closed­
loop system using PID speed control, with a reference step input and multiple outputs. 
All the simulation parameters for the Simulink model are pre-set. Selecting Simulation 
from the Simulink menu and next choosing Configuration Parameters allows access to 
these settings, shown in Fig. 6-8. The Start Time and Stop Time settings in the Solver 
'Configuration .J'E:-
Select 1·SmJ,ioanlffil-- -·-------~ 
mL,_116~_11.•1":"• ... •VE!l_•I ·L~~~ 0.0 ---- _-_-__ Slopbme 0.6 ~J 
ID~~= !me 
jDal:aV6Eot.11 r Type CO<lvet,oon 
[c°""'°'";oy 
·Cempati>iiy 
~Mood Aele1encr9 
I--H•tdw0te l1T"1>omo,,l...,., 
-Mode!Aele1encn.:1 
~" Real-Tm!! 'w'akshop 
'-C orM'fflt. Lsi,,1,o1t 
~C.,.lomCodo 
t·Dol>ug 
L1nlerface SCMtop"""' -- -• ---
r,,,. I Vetiobi.•dep ..;] Solve,· l ode45 [D0<mord-P1iroco) 
M;;,i,tepo,e. ,...,.;._;~-o------=- Aelowetole"""" J10-J . 
Hr1'1ep,ue. l"'-"o Ab,oktetoW"""'.Jouto 
lnlim !lep::ae j.!luto 
Z01ocroos,n9 C0<1•11>1",-J u-,.-loeel-.et-l"l!-,---3-.. 
r AtJ~ Mrdedat~ll,yi s:f~rtbei:"""""""l~ ·Ji:s 
.QK !)ncol l!e\> 
Figure 6-8 Configuration Parameters: Solver properties. 
344 Chapter 6. The Control Lab 
[:]Funct,on Block Parameters: 5ubSystem2 , 
P~am~~s~ ~~~~~ ~~~-=--,-~~ ~~~~~~ ,., 
Armature Inductance (l [HD 
\0.00056 
Armature Resistance (R [ohm)) 
1.35 
Motor and Load Inertia [J [kg.m"2)) 
0.0019 
Viscous damping friclion (b(kg.m"2/s]l 
)0.000792 
Back emf conslant (Kb IV /radls]) 
0.10 
Motor conctant (Km (N.m/A]l 
0.10 
.!:!elp Bµply 
Figure 6-9 Adjustable parameter s for the SIMLab motor blocks. 
options are most important as far as SIMLab and Virtual Lab examples are concerned, and 
they can be manipulated in Configuration Parameters, or on the left panel in the SIMLab/ 
Virtual Lab interface. They allow you to modify the simulation running time. Other options 
in Configuration Parameters should not be modified, as they may cause errors in the 
SIMLab and Yfrtual Lab software. 
When the Simulink model is opened, double-click on the appropriate model block to 
modify model parameters such as the PID values. For SIMLab, double-clicking on 
the motor block brings up a window containing a list of adjustable motor parameters 
( see Fig. 6-9). All motor parameters , such as the resistance, back-emf constant, load inertia, 
and damping coefficient, may be modified. Right-clicking on a SIMLab motor block and 
selecting Look under Mask makes the de motor model available. However , the Virtual Lab 
motor blocks are completely opaque to the user since they model actual de motors. One 
other feature that STMLab has, which Virtual Lab does not, is a torque-disturbance input 
into the motor. This can be used to investigate the stall torque and the effect of an integral 
controller . 
To run the simulation, close the Simu1ink model and click the button labeled Run 
Simulation . For more detail, click the zoom button and select the area of the time-response 
plot to view it closer. The data cursor button allows the graphed values to be displayed as 
the cursor dot is moved around on the graph using the mouse or arrow keys. The Print to 
Figure button allows the current response plot to be sent to a separate MATLAB figure. 
Selecting the Reuse Axes checkbox prints all plots to the same set of axes in an external 
figure, which is useful for comparing the system response after changing a parameter in the 
Simulink model. This figure can also be saved as a .fig or image file for future reference and 
analysis. Again, in the Virtual Lab, you cannot change the system parameters, but PID 
values are available for modification. 
Some of the experiments have addiLiona l features, such as animation and calculation 
tools. These are discussed in the following sections. Selecting Close Experiment in the 
control window exits the program. 
6-4 Simulation and Virtual Experiments ~ 345 
6-4 SIMULATION AND VIRTUAL EXPERIMENTS 
It is desired to design and test a controller offline by evaluating the system performance in the 
safety of the simulation environment. The simulation model can be based on available system 
parameters, or they may be identified experimentally. Because most of the system parameters 
are available (see motor specifications in Section 6-2-1 ), it will be useful to build a model using 
these values and to simulate the dynamic response for a step input. The response of the actual 
system (in this case, the virtual system) to the same test input will then verify the validity of the 
model. Should the actual response to the test input be significantly different from the predicted 
response, certain model parameter values would have to be revised or the model structure 
refined to reflect more closely the observed system behavior. Once satisfactory model 
performance has been achieved, various control schemes can be implemented. 
In this chapter, SIMLab represents the simulation model with adjustable parameters. 
and Virtual Lab represents the actual (virtual) system. Once the model of the Virtual Lab 
system is identified and confirmed, the controller that was originally designed using 
SIMLab should be tested on the Virtual Lab model. 
6-4-1 Open-Loop Speed 
The first step is to model the motor. Using the parameter values in Section 6-2-1 for the 
model of the motor in Fig. 5-24, simulate the open-loop velocity response of the motor to a 
step voltage applied to the armature. Start up SIMLab, select 3: Open Loop Speed from the 
Experiment menu~ and perform the following tests: 
1. Apply step inputs of +5 V~ +15 V, and -10 V. Note that the steady-state speed 
should be approximately the applied armature voltage divided by Kb as in Eq. 
(5-118)1 (try de motor alone with no gear head or load applied in this case). 
2. Study the effect of viscous friction on the steady-state motor speed. First set B = 0 
in the Simulink motor parameter window. Then gradually increase its value and 
check the speed response. 
3. Repeat Step 2 and connect the gear head with a gear ratio of 5.2: I, using additional 
load inertia at the output shaft of the gear head of 0.05 kg-m2 (requires 
modification of Jin the Simulink motor parameters). Try using the gear head 
calculator in the SIMLab Tools dropdown menu. 
4. Determine the viscous friction required at output shaft to reduce the motor speed 
by 50% from the speed it would rotate at if there were no viscous friction. 
5. Derive and calculate the disturbance torque steady~state gain. Introduce an 
appropriate step-disturbance input TL and study its effect on the system in 
Step 3. 
6. Assuming that you do not know the overall inertia J for the system in Step 3. can 
you use the spee<l-rnsponse plot to estimate its value? If so, confirm the values of 
motor and load inertia. How about the viscous-damping coefficient? Can you use 
the time response to find other system parameters? 
In this experiment, we use the open-loop model represented in Experiment 3: Open Loop 
Speed. The Simulink. system model is shown in Fig. 6-10, representing a simple open-loop 
model with a motor speed output. 
I w(t) = :b ( I -e-t/tm) {5-118) 
346 • Chapter 6. The Control Lab 
Hefd< ___ , .... ~ 
o lwit 1.1 a ~, etl4--~ it ~· ..:1 • • ~~ 1~~ rn '!) l!-tJ a,-~~i-
-
Step 
Db:tu1b,11no4 
(N.m) Ooub1t,cU<kontn, 
CC ll'IO!orl>lOclc to,ro41fy 
1"1i-oto,p,11r,mtttl'S. 
Algtt,chd( O.t>{h•O.C: ff\.olot 
blot6t.1rod:,11.ct"LO\ll,:1111d11 
W~lo5'1lht-ll l;olion 
OC mtito, rno(kl 
Figure 6-10 SIMLab open-loop speed response of de motor experiment. 
lni:ut 
Voltage 
Saturation 1 
L.s+R 
Electrical 
Motor feedoack 1 
J.stb 
Mechanical 
Figure 6-11 DC motor model including voltage and current saturation. Out 
In a realistic scenario, the motor is connected to an amplifier that can output a voltage 
only in a certain range. Outside of this range, the voltage saturates. The current within the 
motor may also be saturated. To create these effects in software, right-click the de motor 
block and select Look under Mask to obtain the motor model shown in Fig. 6-11. Double­
click both the voltage and current blocks and adjust their values (default values of ±10 
volts and ±4 amps have already been set). If you do not wish to include saturation, you can 
set the limits very large (or delete these blocks altogether). Run the above experiments 
again and compare the results. 
Assuming a small electric-time constant, we may model the de motor as a first-order 
system. As a result, the motor inertia and the viscous-damping friction could be calcula.ted 
with measurements of the mechanical-time constant using different input magnitudes. For 
a unit-step input, the open-loop speed response is shown in Fig. 6-12. After measuring the 
mechanical-time constant of the system r,,,, you can find the inertia J, assuming all other 
parameters are known. Recall that, for a first-order system, the time constant is the time to 
reach ( l-e-1
) x 100, or 63 .2 % of the final value for a step input [ verify using Eq. (5-118) or 
(5-119)]. A typical open-loop speed response is shown in Fig. 6-12. The steady-state 
velocity and the time constant r,,, can be found from the time-resporn;e plot by using the 
cursor. 
In SIMLab, the disturbance torque default value is set to zero. To change an input 
value, simply change its final value. 
r_c,..,~ 
S,muhlllon T,mo (•').r-;--
EnW l,'l")dt[ PQra)r'IVttl P I 
I ""'"". __ _!l~~ -.,.;r;.-1 .... 
I Plilt 10 F19l.l,e 
r RiUHAHI 6-4 Simulation and Virtual Experiments 347 
-0111pu1 
-lnp~ 
90 -
. ............. . 
70 ••••••••• • • •••••••••••• :•••••••••••••'.• •••u• .. ••••:•••••••••••••:•••••••••••• 
• ! 1 
t w ......... ~ ............ '.·············i········· .. r··········r·········· 
~50 ........... · ············-···· ·······'·············l·············i-············ l ! : : : : 
,,, 1 : ! 
40 •.•..•..•. : .••••.••••.• : •••...••.•.• :-············; ·············: •••·••·••••• 
: : : : 
l l l 1 
JO •.•.•.•.•• : .••.••...•.• :----·-·····-:· ···········-:---·-········:---········· 
20 ···········j·············t··· .. ·······l······· ······j·············t···· ········ 
i ! j l ! 
IO . • • t : l 1 1 
05 '5 
Time(-.ec) 25 
Figure 6-12 Speed response of the open-loop system (SIMLab) . 
Now that you have gained insight into the motor speed response, it is time to apply 
your knowledge to test the virtual experiment. Here you have no access to the system 
p,Lramt:ler values. Use the Virtual Lab to test the following: 
7. Apply step inputs of +5 V, +15 V, and -10 V. How djfferent are the results from 
Step l? 
8. From the transient and steady-state responses, identify the system model as 
closely as possible. 
Recall that the motor and amplifier have built-in nonlinear effects due to noise, friction, and 
saturation. So, in Step 8, your model may vary for different input values. Distotted values may 
be obtained if the input to the motor is excessive and saturates. Caution must be taken to 
ensure that the motor input is low enough such that this does not happen. Use the mechanical 
time constant and final value of the response in this case to confirm the system parameters 
defined in Section 6-2-l. These parameters are needed to conduct the speed-and position­
control tasks. Fig. 6-11 shows the Virtual Lab motor speed response to a small step input. The 
friction effect is observed when the motor starts. The noise at steady state may also be 
observed . For higher input magnitudes, the response will saturate. 
6-4-2 Open-Loop Sine Input 
The objective of using open-loop sine input is to investigate the frequency response of the 
motor using both SIMLab and Virtual Lab. 
9. For both SIMLab and Virtual Lab, apply a sine wave with a frequency of 1 rad/sec 
and amplitude of 1 V to the amplifier input, and record both the motor velocity and 
348 Chapter 6. The Control Lab 
ModE!l(«llrd---- -~1 
S1mul1t1on frne (s)·rs--
06 09 
r"°""',. un6!J!Y~~ •• ! 
Plclto Figure 
r ReuseA11;es 07 
06 ·····'.--·--·----·1·----·----·--·--·------'.-·------r .......... l ......... ----:---···-------j--·----------i----····--···i······----·· 
:: .......... : ............ \ ...........• · •..•.......... \ ; .. 
0.2 ····-r--· ... ,. ......... . .... 1""""''"("'""" 
0, ....................... ! : ...................... , ........... . 
00'---~os--~--~ ,s--~--~25,----~ 
Timt(11C) 
Figure 6-13 Speed response of lhe open-loop system (Virtual Lab). 
sine wave input signals. Repeat this experiment for frequencies of 0.2, 0.5, 2.0, 
5.0, 10.0, and 50.0 rad/sec (keeping the sine wave amplitude at l V). 
10. Change the input magnitude to 20 V and repeat Step 9. 
Open Expe riment 4: Open Loop Sine Input from the SIMLab or Virtual Lab Experiment 
menu. The input and disturbance blocks and the motor parameters are adjustable in the 
SIMLab model. For the Vi1iual Lab version, the amplitude should below to avoidamplifieror 
armature current saturation. The Simulink model is shown in Fig. 6-14. Double-click on the 
Sine Wave block to modify the properties of the input wave. Amplitude of 1 is a low enough 
value to avoid saturation in this example. In the SIMLab version, the saturation values are 
adjustable to allow you practice with their effect. The SIMLab response for sine input with 
Sh,p 
t>ist.,rb.111c1 
(NIT'!) 
Figure 6-14 Experiment 4: Simulink model. T0Wo~.1M 
D~ubl•·thdl:~th.• 
OC motior llolod< tao n-~,6",t, 
ii.• molo1 p:1um11-
To W,o~.10f2 Rl;hHlld( ot1 th~ DC. rl'IOlOf 
blt>dt.i11d1,4lkt"'looil"Mu 
M:.sf('t,;1n, thtt:11T.11l,1,U111" 
DC me-tor moih.l 
r""""'____, ~ 
PloMo Figura 
rReuseAxn 
Gllt!M:JFttMe~- ---, I 
!n«f,~rtdh ). 11 ! 
~,~--,I ! 
17.6002 -13.038 -6 -·-· 
-10 i ; 6-4 Simulation and Virtual Experiments 349 
5 
r.me($ee) .... ;" ............ . 
10 
Figure 6-15 SIMLab time response and gain and phase calculation for input = sin(!). 
magnitude and frequency of 1 is shown in Fig. 6-15. You may also try adding dead zone and 
backlash to your motor block to test their effects (these functions are available in the Simulink 
Library Browser, briefly discussed at the end of Section 6-5). For a sine input of magnitude 
20 V, the Virtual Lab system exhibits saturation as shown in Fig. 6-16. 
10 
Figure 6-16 Virtual Lab time response and gain and phase calculation for input= 20 sin(t). 
350 Chapter 6. The Control Lab 
6-4-3 Speed Control The frequency of the sine wave will dictate the gain and phase of the response curve. 
There is a Gain and Phase Calculator in the Experiment 4 control window. To measure 
the magnitude and phase of the steady-state response, enter a frequency of 1 rad/sec 
in the edit block. Entering the input frequency and clicking on Calculate displays the 
gain and phase of the system (see Fig. 6-15). Using the Gain and Phase Calculator, you 
can record the gain and phase of the response. Repeat with other input frequencies, and 
discuss any trends. 
Having simulated the open-loop motor characteristics in previous sections, we can 
now extend the model to include velocity feedback from the motor and use a pro­
portional controller . Assume that the motor velocity is measured using a sensor 
that provides 1 V/rad/sec . The block diagram that you should be modeling is shown 
in Fig. 6-2. For proportional gains of 1, 10, and 100, perform the following tests using 
SIMLab: 
11. Apply step inputs of+ 5 V, + 15 V, and -10 V (try de motor alone; no gear head or 
load applied in this case). 
12. Repeat Step 11 using additional load inertia at the output shaft of the gear head 
(gear ratio 5.2: 1) of 0.05 kg-m2 (requires adjustment of the J value in SIMLab 
motor parameter block). 
13. Apply the same viscous friction to the output shaft as obtained in Step 4 in Section 
6-4-1, and observe the effect of the closed-loop control. By how much does the 
speed change? 
14. Repeat Step 5 in Section 6-4-1, and compare the results. 
Open Experiment 1: Speed Control from the SIMLab menu window. A screen similar to 
Fig. 6-5 will be displayed . Next, select the Enter Model Parameter s button to get the 
system Simulink model, as shown in Fig. 6-17. This figure is a simple Pill speed-control 
model. Double-clicking on the PIO block displays the editable PIO values. The values of 
Fl& Edt \lle'I, ~ fc,Nt Tods ~ _ 
Ol~liilo\!,U:1 ""~·,.t ,_-~l~ •r~ !J;l&~~~m-!1,-
st,, 
OJmrtuno 
(fo) 
Figure 6-17 Experiment I: Sirnulink model. o. ........ lc:k911lllt 
Dtlnft••bltdoi.rntditf 
1M,-,to1p.ar,1m•""' 
RiOhhlid(Hlft,OC ITlbltl 
bJodcrndHl•ot'"\.o.1/tJndlu 
M.dl"ttUt1n•IW'l'IU IJtlOfl 
~nn\Vlffl•l!i.t Input 
6-4 Simulation and Virtual Experiments 351 
--'1----- -~ 
?t0l·10F19u ra 06 
r Rooc:c MC!. 
02 ······l· 
00'---0~1- 0~2-0~3-~o ,-~05-~ c.6--0~1-,,o~a- 0~9___, 
Ttmo(0<c) A!rj~! 
Figure 6-18 Speed-control response in the STMLab control window. 
the step-input and the disturbanc e-torque blocks may also be adjusted. The disturbance ­
torque default value is set to zero. To change an input value, simply change the number in 
the final value field. 
Increasing the propo11ional gai[l in Lht:: PID block will decrease the rise time. For an 
unsaturated model, the SIMLab version of this experiment could exhibit extremely fast rise 
times at very high proportional gains, because the de motor can utilize unlimited voltage 
and current levels. To create this effect in software, right-click the de motor block, and 
select Look under Mask to obtain the motor model similar to Fig. 6-l l. Double-click both 
the voltage and current blocks and adjust their values to very large (or delete their blocks). 
Recall from Section 6-4-1 that the default saturation limits are ± 10 V and ±4 A, 
respectively. Fig. 6-18 displays a typical speed response from the SIMLab. 
For a given input to change the proportional gain values, enter the following sets of 
PID values and print all three plots on the same figure ( use the Print to Figure button and the 
Reuse Axes checkbox in the experiment control panel). 
P=l 
p = 10 
P = 100 I=O 
1=0 
I=O D =0 
D =0 
D =0 
The input units used in these simulations are specified in volts, while the feedback units 
at the motor are in radians per second. This was done intentionally to illustrate the scaling 
(or cmwersion) that is pe1formed by the sensor. Had the velocity been specified in volts 
per radians per second, a different response would have been obtained. To check the effect 
of the velocity feedback scaling, repeat the preceding experiments using a propmtional 
gain of 10, but assume that the velocity feedback signal is a voltage generated by a sensor 
352 '.. Chapter 6. The Control Lab 
6-4-4 Position Control with a conversion factor of 0.2 V /rad/sec. (Note: in commonly used industry standards, the 
tachometer gain is in volts per RPM.) 
Next, for the Virtual Lab, test the following: 
15. Apply step inputs of +5 V, + 15 V, and-10 V. How different are the results from 
the SIMLab? 
You may again confirm the system parameters obtained in Section 6-4-1. 
Next, investigate the closed-loop position response; choose Experiment 2: Position Control 
from the Experiment menu. For proportional gains of 1, 10, and I 00 (requires modification 
of PID block parameters), perform the following tests using SIMLab: 
16. For the motor alone, apply a 160° step input. How large is the error when the 
system reaches steady state? 
17. Apply a step disturbance torque (-0.1) and repeat Step 16. Estimate the distur­
bance-torque gain based on your observations. 
18. Eliminate the disturbance torque and repeat Step 16, using additional load inertia 
at the output shaft of 0.05 kg-m2 and the gear ratio 5.2: 1 (requires modification of 
Jm and B in the motor parameters). What can be said about the effect of the 
increased load on the system perfonnance? 
19. Using the disturbance torque in Step 17, examine the effect of integral control by 
modifying the Simulink PID block. Choose several different integral gain values, 
and compare the time response for a constant proportional gain. Select the Reuse 
Axes checkbox, and plot the different simulation results in an external figure for 
comparison. 
20. How does an increase in J affect the system with a PI controller? Compare the 
transient and steady-state response. 
21. Examine the effect of voltage and current saturation blocks (requires modification 
of the saturation blocks in the motor model). 
22. Design a Pl controller that will give a 30% overshoot and a rise time of 0.1 
seconds. What is the maximum step input amplitude that will meet these 
calculati.:<l requirements (i.e., not cause the amplifier to saturate), given the default 
current and voltage saturation limits of ±4 A and ± 10 V, respectively. 
23. In all previous cases, comment on the validity of Eq. (5-126).2 
Open Experiment 2: Position Control from the SIMLab Experiment menu. A screen 
similar to Fig. 6-5 will be displayed. Next, select Enter Model Parameters to get the 
system Simulink model, as shown in Fig. 6-19. This model represents a simple PID 
position-control system. Double-clicking on the PID block allows you to edit the PID 
gain values. The Deg to Rad and Rad to Deg gain blocks convert the input and the output 
6-4 Simulation and Virtual Experiments 353 
..,Jgj~ 
fie-Edl \I~ s~ Fonn-Jt: Jods Help ---------
DI Qi; Iii Ci!} '·le',"-'"' vi:,, .! •• r 1tl"""' Eu 9illi ~it) 1 I,~ Ill!~-
.--------------'""'~----------~~ 
foWoil<:sp,Ht1 
OC Motor(f'oJlt~n 011~1.1,:i 
()oubl,..c.1tckor1lh• 
l>C rr.of,1,rblodtto 1T1odlfy 
lh'-lflti'IVlf/~1~11,~IS. 
fuqht·el1rieol'lthtt>C.inolo1 
Moct ad Hlt~~Lo~ undt1 
Jr,Uli(I0 14.tft4'SltflUl.t\10" 
OCrnotumoci.1 
Figure 6-19 Experiment 2: Position Control Simulink model. 
such that the user enters inputs and receives outputs in degrees only. The values of the 
step-input and the disturbance-torque blocks are also adjustable . The disturbance-torque 
default value is set to zero. To change an input value, double-click on the relevant block 
and change the number in the final value field. Fig. 6-20 displays a typical position 
response from the SIMLab. 
[·-c-a--
Simulahon Time (s);~ 
Enle1 Modet P•ran'f!t81 :l j --------,-~, 
I Slop S.mulahon j 
} Plul to Figure 
I r Reuse Axes 
Close E:iipenme :1t 90 
270 
Posri1on Respo~e 
250i:-:::-:-::- c::-:-:,.c::::::::-:r.:::::::::CCC!CC::-:-C::-::C::,::::::-C:::;=a======;i 
--Oulput 
-----lllpl.JI 
: . : 
-~----: ........... •i·-··· -...... } ~· .•........ ] ······•·· ... i .. ····-· ··-
50 ··········i··········-:·-··· ·······:. ·-········ ........ . 
0.5 15 
Ttrne (s) 25 
AICl~I 
Figure 6-20 Position response in the Experiment 2 control window. 
354 ~ Chapter 6. The Control Lab 
The position time response is also animated when the simulation is run. This is a useful 
tool that gives the user a physical sense of how a real motor turns. The time, input-angle, 
and output-angle values are displayed on the animation field, as shown in Fig. 6-20. 
The nonlinearities due to voltage and current limits cause the time response to saturate 
at a high enough proportional gain. The maximum speed and acceleration of the de motor 
are dictated by the voltage and current saturation limits. 
24. For proportional gains of 1, 10, and 100 (requires modification of PID block 
parameters), repeat Steps 16 and 19 using Virtual Lab. 
6-5 DESIGN PROJECT 1-ROBOTIC ARM 
The primary goal of this section is to help you gain experience in applying your control 
knowledge to a practical problem. You are encouraged to apply the methods that you have 
learned throughout this book, particularly in Chapter 5 and later on in Chapter 9, to design a 
controller for your system. The animation tools provided make this experience more 
realistic. The project may be more exciting if it is conducted by teams on a competitive 
basis. The SlMLab and Virtual Lab software are designed to provide enough flexibility to 
test various scenarios. The SIMLab, in particular, allows introduction of a disturbance 
function or changes of the system parameters if necessary . 
Description of the Project: Consider the system in Fig. 6-21. The system is composed of 
the de motor used throughout this chapter. We connect a rigid beam to the motor shaft to 
create a simple robotic system conducting a pick-and-place operation. A solid disk is 
attached to the end of the beam through a magnetic device (e.g., a solenoid). If the magnet 
is on, the disk will stick to the beam, and when the magnet is turned off, the disk is released. 
Objective: The objective is to drop the disk into a hole as fast as possible. The hole is 1 in. 
(25.4 mm) below the disk (see Fig. 6-22). 
Design Criteria: The arm is required to move in only one direction from the initial 
position. The hole location may be anywhere within an angular range of 20° to 180° from 
the initial position. The arm may not overshoot the desired position by more than 5°. 
Figure 6-21 Control of a simple robotic arm and a payload. 
508 mm (20") 
Robot arm 
DC Motor 
Figure 6-22 Side view of the robot arm. 6-5 Design Project 1-Robotic Arm 355 
Electromagnet 
Metal puck 
A tolerance of ±2% is acceptable (settling time). These criteria may easily be altered to 
create a new scenario. 
The objective may be met by looking at the settling time as a key design criterion. 
However , you may make the design challenge more interesting by introducing other design 
constraints such as the percent overshoot and rise time. In SlMLab, you can also introduce 
a disturbanc e torque to alter the final value properties of the system. The Virtual Lab system 
contains nonlinear effects that make the controller design more challenging. You may try to 
confirm the system model parameter s first, from earlier experiments. It is highly recom­
mended that you do the design project only after fully appreciating the earlier experiments 
in this chapter and after understanding Chapter 5. Have fun! 
This experiment is similar to the position-control experiment in some respects. The 
idea of this experiment is to get a metal object attached to a robot arm by an electromagnet 
from position 0° to a specified angular position with a specified overshoot and minimum 
overall time. 
Select Experiment 5: Control System Design from the SIMLab Experiment menu. A 
screen similar to Fig. 6-5 will be displayed. Next, select Enter Model Parameters to get the 
system Simulink model, as shown in Fig. 6-23. As in Section 6-4-1, this figure represent s a 
Sltp 
Oln1,1/b.1nc• 
{fl.m) .,JJ;!J.ll] 
• ~ INo,m~ ;l lli el ff) lj) ;-.;-i· a § ni @, _....,-,,...... 
OC M;iotor(Pi,1i tlon Outpl.l!) 
[)~blt-Clidconlh• 
C>C ,no,to,olodcWl'IIDd tty 
111"moto,"...-~,.,e1~ 
,h,;h~olodi on th1 Dt molo1 
blod(.ind~l•ct·L•Ol< ,111d1• 
M.IM'lonttl'ltJtm.vbtion 
DC m.oto, mod11I ~o,op, r>Qfltlor, .11ng14,• IJ: tho .ingl• t,",.al tlH 
m19n1t 1111~11•••d 10 rdutt lnt mthl p,,1e,k 
•s1.11tl0.,..tltford1oppomlon .1tt1,., ... 
r,ef.,s;tcithoelim1"11111th 1nu5111iett1111u••!$ 
,n,bltd 
Figure 6-23 Experiment 5: Simulink model. 
356 Chapter 6. The Control Lab 
i:=,smk Block Parameters: Electromagnet Control 
Pa1amete1s------= =---~..-,,--~------ ------, 
Drop position angle 
115 
Stert to wait for drop position al tim,.-
0.3 
J:!elp ~pply 
Figure 6-24 Parameter window for the electromagnet control. 
simple PID position-control model with the same functionalities. The added feature in this 
model is the electromagnetic control. By double-clicking the Electromagnet Control block, 
a parameter window pops up, as in Fig. 6-24, which allows the user to adjust the drop-off 
payload location and the time delay (in seconds) to turn the magnet off after reaching the 
target. This feature is particularly usefol if the response overshoots and passes through 
the target more than once. So, in Fig. 6-24, the "Drop position angle" is the angle where the 
electromagnet turns off, dropping the payload. "Start to wait for drop position at time" 
refers to the time where the position trigger starts to wait for the position specified by 
"Drop position angle." 
An important note to remember is that in the Virtual Lab the electromagnet will never 
drop the object exactly where it is specified. Because any electromagnet has residual 
magnetism even after the cmTent stops flowing, the magnet holds on for a short time after 
the trigger is tripped. A time response of the system for proportional gain and derivative 
gain of 3 and 0.05, respectively, is shown in Fig. 6-25. 
-Olapl.ll 
-ln?',lt 
1oof-1--;;.-'-,'---"-=--'--------~--~ ~ 
fosjt1on; 116 deg j : : 
ro ] ! 1 i ; ! 
I 
05 25 
P.ICl<al 
Figure 6-25 PosiLion response for Experiment 5. 
6-6 Design Project 2-Cluarter-Car Model ~ 357 
The model response is also animated. This feature makes the problem more realistic. 
The puck has overshot the hole in this case. The drop angle and drop time are displayed on 
the time-response plot. Note that. in this case. the magnet drop-off takes place prematurely. 
As a result, the payload has been released earlier and is not on target! In SlMLab, it is 
possible to change the dimensions of the experiment setup. Choose Modify Puck Drop 
Setup from the SIMLab Tools menu to adjust the height of the drop and the length of the 
arm, and change your controller design accordingly. 
~ 6-6 DESIGN PROJECT 2-0UARTER-CAR MODEL 
6-&R 1 Introduction to the Quarter-Car Model 
After studying position and velocity control of the de motor in the preceding sections of 
this chapter, you are now well acquainted with the use of the A CSYS tools and Simulink 
and their applications in the study of controls. 
In this section a simple one degree of freedom quarter-car model. as shown in Fig. 6-26 
(c) is presented for studying base excitation response (i.e., road transmitted effects). The 
objective here is to control the resulting displacement or acceleration of the mass of 
the system-which is reflective of the chassis of the car. This study follows the modeling 
exercise that was discussed in Example 4-11-3. 
As discussed in Chapter 4, there are various representations of a quarter-car system, 
as illustrated in Fig. 6-26, where a two degree of freedom (2-DoF) system in Fig. 6-26(b) 
takes into account the damping and elastic properties of the tire, shown in Fig. 6-26(a). 
However, for simplicity, it is customary to ignore tire dynamics and assume a 1-DoF model 
as shown in Fig. 6-26(c). Hence, for the duration of this design project, we will assume a 
rigid wheel. 
We further assume hereafter the following parameter values for the system illustrated 
in Fig. 6-26(c): 
111 Effective 1/4 car mass 10 kg 
k Effective stiffness 2,7135 N/m 
C Effective damping 0.9135 N-rn/s·1 
x(t) Absolute displacement of the mass m m 
y(t} Absolute displacement of the base m 
=(!) Relative displacement (x(t}-y(t)) m 
a(t) Base acceleration y(t) rn/s2 
Recall from Eq. (4-324) that the open loop response of the system to a base acceleration 
a(t) has a transfer function: 
Z(s) -I 
A (s) = s2 + 2l;wns + w; (6-1) 
where the base acceleration A(s) is the input and relative displacement, Z(s), is the output. 
Let us next consider the active control suspension system and use the same de motor 
described ill Section 6-2 used in conjunction with a rack as shown in Fig. 6-27. In this case, 
Tis the torque produced by the motor with shaft position 0, and r is the radius of the motor 
drive gear. 
358 Chapter 6. The Control Lab 
m,. Ills 1x, 111 1x 
k., Cs k 
c., 1x .. Figure 6-26 Quarter-car model k., cw1y 1y realization . (a) Quarter car. (b) Two m.., 
)))/////////////, degree& of freedom. (c) One degree of 
a) b) C) freedom. 
Figure 6-27 Active control of the 1-DOF model via a de motor and rack. 
Recall from Example 4-I 1-3 that the block diagram in Fig. 6-28 represents the open 
loop system with no base excitation, where J = mr2 + J,,,, B = cr2 + Bm, and K = kr2. 
Using superposition, this system is rearranged to the following form: 
K111r 
Z(s) Ra V (, 
(L ) K K as) 
_!!_s + I (Js2 + Bs + K) + .....!!.!..__}}s 
Ra Ra 
(La ) -s+ 1 r 
Ra nzrA(s) 
(La ) ( ? KmKh _:_s + I ls-+ Bs + K) +--s K, Ra (6-2) 
mrA(s) 
Vc,(s) E(s) Km r Z(s) 
+ L,iS+ R., Js2+Bs +K 
Vis) 
Figure 6-28 Block diagram of an armature-controlled de motor. 
6-6 Design Project 2-0uarter-Car Model 359 
V;,,(S) Z(,) 
Figure 6-29 Block diagram of a position-control, armature-controlled de motor. 
Again, as in previous sections, we assume the motor electric-time constant is insig11ificant 
relative to the mechanical-time constant, Eq. 6-2 and is reduced to 
mr2 
Z(s) = Ral Va(s) - J A(s) (6-3) 
2 BRa + KmKb K 2 BRa + KmKb K 
s + KJ s + J s + Raf s + J 
For simplicity, Eq. (6-3) is written as Z(s) = Geq1(s)V,i(s)- G,,q2(s)A(s). The position control 
block diagram in Fig. 6-29 illustrates the feedback of relative position, Z(s), where K., is the 
sensor gain, with units V/m. In this application , the sensor is a linear variable differential 
transformer (LVDT), which transforms the displacement z(t) between the base y(t) and 
mass x{t) to voltage. The goal of position control in this scenario is not to create offset as in 
the previous lab, where a robot arm is given the command signal to displace a metal puck, 
but rather to reject the so-called disturbance input. Hence the command voltage, or set 
point, V;n(s) = 0 V. 
Setting E(s) = 0-Ks Z(s), the block diagram represented in Fig. 6-29 can be reduced to 
an input-output relation of Y(s) and Z(s), where the simplified closed-loop system is 
represented in Fig. 6-30: 
6-6-2 Closed-loop Acceleration Control Z(s) 
-A(s) mr2 
J (6-4) 
Relative position control is a familiar way to introduce the control of the quarter-car model; 
however, the vehicle operator cannot really sense displacement except perhaps by 
comparing their height to fixed objects. If you have ever driven a car too quickly over 
-A(s) J 
+ 
KmKampK, 
mrRa Z(s) 
Figure 6-30 Simplified block diagram of the quatter-car de motor position control. 
360 .,. Chapter 6. The Control Lab 
-A(s) 
+ 2 BR"+K 111Kb K s + s+-R«f J 
KmKm,11,Ks __ __, 
mrRa Z(sl 
Figure 6-31 Simplified block 
diagram of the quarter-car relative 
acceleration control. 
a sharp rise and fall of the road, you can feel the effect of acceleration in your stomach. 
Thus, it is more desirable to control the acceleration because the ultimate goal of 
the suspension system is to improve ride and driving performance. The block diagram 
in Fig. 6-30 can be modified to control the relative acceleration of the system. 
The second derivative of the forward-path transfer function yields the acceleration 
control system in Fig. 6-31. The input-output relation is as follows: 
., nu· 
i(s) -s2 = J 
-A(s) 2 BRa + KmKb !5_ KmKampK sr G 2 
S + Raf S + J + Ral cS (6-5) 
As described above, the position control system used an LVDT to provide the feedback. 
Just as the LVDT measures relative displacement, two accelerometers can be used to 
measure both x(t) and ji(t), where z(t) = i(t) -ji(t). Thus, to control the relative 
acceleration of the mass, two accelerometers with gain Ks are fixed to the mass and 
base to provide the relative acceleration feedback . 
It is also of interest to control the absolute acceleration of the mass rn. The closed-loop 
system is determined by reconfiguring Fig. 6-29 to yield absolute acceleration from the 
relation X(s) = Z(s) +A(s) where Z(s) and X(s) are the Laplace transforms of z(t) and 
i(t), respectively. 
The block diagram in Fig. 6-32(a) is simplified to the closed-loop form in Fig. 6-32(b) 
to obtain the input-output relation 
X(s) 
A(s) (l _ m?)s2 +BRa + KmK1, s + K 
J Ral ' J 
(6-6) 
Note that, in the case of the systems represented by Eq. (6-5) and Eq. (6-6), implement ing a 
compensator will lead to a higher-order transfer function. In this case, designing in the time 
domain may require that the systems be approximated by lower-order systems, as 
demonstrated in Chapter 5. Also see Chapter 9, where the controller design topics are 
studied in more detail. 
6-6-3 Description of Quarter Car Modeling Tool 
The Quarter Car Modeling Tool allows the students to implement the familiar de motor and 
amplitier described in Section 6-2-1 and conduct experiments to observe its effect on a new, 
slightly more complex system. Designing a controller for a vehicle suspension system 
requires studying its performance under the influence of different inputs, such as driving 
6-6 Design Project 2-Quarter-Car Model -cl 361 
V;,.(s) x°cs) 
(a) 
A(s) I m,2 . 2 BR0 + K,,,Kb K ---s+ s+-1 R,,J J X(s) 
+ 
K,,l(.w11pK,r 2 ----'--S 
Rc/ 
(b) 
Figure 6-32 Block diagram of the absolute acceleration control system. 
over a curb or speed bump. This tool also incorporates nonlinear effects, such as backlash 
and saturation in the Virtual Lab component. All of these features are available in one 
simple window, which automatically controls the Simulink model. 
To start the program, click on Quarter Car Sim on the ACSYS applet. This launches 
both a Simulink model file (Fig. 6-33) and MATLAB graphical user interface, to be used as 
P•.t11~til------ -~- --
~-.1. (, 1·, .-
ToC:11JSl1T1GUI 
Coonp,,.uto1 
Figure 6-33 Quarter Car Modeling Tool top-level Simulink model. 
362 Chapter 6. The Control Lab 
I-s .. ,.,.,R,,p,o,, I 
S1cp S1mu1~1ron :J 
I _____ __, 
j¥.:ici;rvc Suspcn::1:11 3 & ·----------i ' 
.. •• ·" 
" 
i 
J • 
.. ., . ., 
""""' 
Figure 6-34 Quarter Car Modeling Tool control window. 
the control panel (Fig. 6-34). There is very little need to access the Simulink model, other 
than to reference the model or to moclify the simulation parameters . 
From the control window, clicking on Model Parameters brings up a window (Fig. 6-35) 
from which you can modify the parameters of the de motor, amplifier, sensor gains, and of 
course the quarter-car model. Parameters from the workspace or a .mat file may be selected in 
the left IMPORT frame and then assigned to the selected model parameters in the right 
MODEL frame. Model settings may be saved to, or loaded from, .mat files. Clicking on 
Defaults assigns the default values to the parameter s. Click Apply to implement your changes 
or Close to cancel. 
Selecting Control Parameters calls a window (Fig. 6-36) used to configure the 
compensator command signal in the left frame and the compensator in the right pane. 
There are a number of inputs to select from: step, impulse, sin, rounded pulse, rounded step, 
and random. The compensator frame allows the user to select the sensor output to be used 
. -.;JtjiJ 
M'()o<l ""'"'-v ... v..., 
I IIJ --==--J I oooom 
r d ~e-~-.·~~ 1~~1!1"'2,·1 
f J 
I 
~ .!:I 
(:' \l'.tlrDpx• 11 
rlf'JltF# ..... I .... I ,,.. ..... I 
I ,,....,..,. I -I °"' I 
Figure 6-35 Model Parameter s window. 
6-6 Design Project 2-0uarter-Car Model 363 
· .I Controller Parameters ·--
DISTURBANCE: COMPENSATOR 
[step __ _3 Feedback . jz .:.I 
Amplitude (mls"2) [PIDJ:I_ [2750121 : 
Compen'Selor if: jNone .:.l 
Step Time (s) 
i r SISOTool 
I ~~~~~~~~~~ 
APl'JIY Close 
Figure 6-36 Control Parameters window. 
as feedback. Also, PID gains are specified in array format, and any existing transfer 
function object may be selected from the workspace for use as a controller via the 
dropdown menu. The MATLAB SISO Design Tool may be activated, with the appropriate 
system transfer functions automatically loaded, using the SISOTool button. Click Apply to 
implement your changes or Close to cancel. 
The closed-loop transfer functions of the system are displayed in the top right comer. 
The various transfer functions of the fonn displayed in Fig. 6-37 can be selected from the 
popup menu. 
Once the model aml controller parameters are specified, the system is ready for 
simulation. Click on Simulate Response to begin the simulation. This will start the 
animation and plot the data on the upper and lower graphs. At the top right corner of 
both the upper and lower axes, pressing the Setup Axes button will display a small control 
menu that is used to select which data are to be displayed on the graph. Note that the control 
menus may be dragged off the axes by clicking and dragging the top bar or closed by 
clicking the X in the top right corner. Click on Stop Simulation to stop the animation and 
simulation. Below the progress bar is a popup menu, which allows the user to toggle to 
different experiment modes. The active suspension system is the de motor-controlled 
system from Fig. 6-27. The passive suspension system operates as a spring and damper, 
without the added control of the de motor. 
To store the input/output plots on a new figure, click Print to Figure. The zoom control 
and cursor buttons appear at the bottom right comer of the display panel, as seen in Fig. 6-38. 
A(s) 
Figure 6-37 Closed-loop transfer functions . 
364 Chapter 6. The Control Lab 
<:r-3l•71~~o.i1:1 
r-~ .... :.f!, t': 
~ S1c1> &rn..' 1.vn 
~'lt1~So-r, .. ,,.,.11 ..:) .......... , 
: : : : : : : : le 
"'······:--------:···----;-----···:-------:---···--:-------:----····F.:1 ' ,.~ tt+ t+j !Jb-::1 
·········#<····~··· ~:: ,2-.;'~ ~ ...... ~-·······~-.... -~· .... 
Un• 2. -0 )1882 • " 
L,r,e 3. ,7 'ieu.,11 "'°"' f 
Figure 6-38 A view of the axes controls. 
6-6-4 Passive Suspension 
The following experiments explore the response of the open-loop qua1ter-car model. 
Studying the response of the passive system is essential to understanding the effect of 
various inputs on the quality of the vehicle's ride and is necessary for appreciating the 
effect of adding compensators to actively control the suspension system. Run the following 
tests in order: 
1. Set the simulation mode to Passive Suspension and set up the top axes to display 
)i(t). To accomplish this, click on Setup Axes, choose Acceleration from the 
dropdown menu, and click the checkbox labeled "y." Using the same method, 
configure the bottom axes to display z(t). Click on Control Parameters, and select 
a step input with amplitude 0.0 l m/s2 and step time O seconds. There is no need to 
configure the compensator since it is not used in a passive system. Click Simulate 
Response . When finished, the result will appear similar to the window displayed in 
Fig. 6-39. Note the shape of the road profile y(t) as well as z(t) and x(t). This data 
can be accessed in the Setup Axes menu for either axis. Repeat this procedure for 
O. l and 1 m/s2 input. 
2. Experiment with the stiffness and damping of the system by clicking Model 
Parameters and changing the stiffness, k, from the default 2.17 N/111 to 10 Nim. 
With a step input of 0.01 m/s2, and the lower axes configured to display z( t), what 
is the frequency of the oscillatory response? This is the damped frequency of the 
system using default parameters (w,1). How does the period of oscillation compare 
to the value that was observed in Step 1" Open the Setup Axes menu for the lower 
axes and click the Print to Figure button. This will plot the data on the axes to an 
6-6 Design Project 2-Quarter-Car Model 365 
MQOd(crlfot-----~ 
Enti:;r S1mul!ll1on Tlmt~ 
..:.1 
<,'p -~ .. ,.~, 1=111~'"'"',.-u=,, 
(Pt .i S1,h.r;,• 1u, 1111 
·-·-·--·-····r··-···-·---·-.··········--· 
·~.~-~--~--~-~-- ~-___. 
,.,e~ SC..,,A;: e,, j 
--------····;····----···{····· ·-· ----i············· 
Figure 6-39 Passive system response to a step input. 
external figure. Repeat the simulation several more times, gradually reducing the 
damping (variable c in the Model Parameters control window). The frequency of 
the oscillation when c is reduced to O is the natural frequency of the system (wn)­
Select the checkbox labeled Reuse Axes, and click Pri11L tu Figure to plot data 
from a new simulation in the same external figure. This is useful for comparison. 
3. Set the system parameters to the default settings (click Model Parameters, then 
Defaults, then Apply). Study the effect of a sinusoidal input (washboard bumps) 
on the response of the system. Select an amplitude of 0.01 rn/s2 and vary the 
frequency from 5 rad/s to 0.1 rad/s. What happens to the amplitude of relative 
displacement at the damped natural frequency , cvd, measured in Step 2? 
4. Now try using the rounded step input with amplitude 0.1 m and duration 0.01 
seconds. This input function simulates driving the quarter-car model over a curb. 
Calculate values of c such that the system is underdamped (t = 0.1), critically 
damped ({ = 1 ), and overdamped (s = 1.5), and observe the response for each case. 
5. Repeat Step 4 using the unidirectional rounded pulse (URP) input (amplitude 
0.1 m, duration 0.01 set:unds). This emulates driving over a pothole if given 
amplitude less than zero, or a speed bump if the amplitude is positive. 
6-6-5 Closed-Loop Relative Position Control 
Now set the simulation mode to active suspension by selecting Active Suspension from the 
control panel dropdown menu or from the Experiment menu. This activates the feedback 
control system as defined in the Control Parameters window. Relative position control 
is the control of z(t) = x(t) -y(t); thus, set the Feedback popup menu to z. The set point is 
366 ~ Chapter 6. The Control Lab 
x 10"3 CarS1m • Relative Position Time Response o --·---· i-···-···-: ··----·· c··-··-··: ···---···: ······-· :"········: ···--·--:"········ ... -.... : 
, , . . , , . , --Kd-0 , 
-1 --------:-----·---~---------:-----· ..... ~ ---------:---- -----;------- .. -~ --------~ ~ : : ! : : : : : --~=5 : 
-2 •••••• * .......... t .......... ..: .............. ! .......... : ............ ! ........... !. ......... ~ K -10 J 
: : : : : : : :-- kl-: 
-}~-------i--------~t------*-+------~-{--------+--------1 --~ = 15 i 
: : : : : ! ! --K =20 : ···· ·· r···· · ·r··-·····r·······-r·····--·r-··-····-r···-····1 ~ : ....... 4 
.§. 
' : : : J • : : 
~ •5 1
f " • •• ••, • • •••• ""1 I \ I : 4 ; • : 
.. 5 \ .... __ j --____ t -_____ .,. .. ___ .... __ .... 1 .. ________ . _______ ...,_: ......... _._ ....... :. ____ ... ___ ! .................... ._ ....... 1 --------..! 
•7 • • .J. ..J ........ J ....... J ....... J •••••O.t.••••••••~•••••••)••••••j••••••..j 
I ~ I I I • I a I • 
I I I • I I I a 4 I 
I I i I 4 • I I f I 
.. a ... · ---~---------:--------1---------:---------:~------ ... -: ............... r-----.. --:--~·---·-: --·--..... : 
t ~ • I 4 • l :II t I 
: : : : : ~ : : ! : 
.. g -· •• · ·-~· ..... -___ ..,. t--------~·-----... · !---------:-------... -~ ..... ~--· -~ ------··1· -....... -· .. }--.. ·----~ 
1 I I t 4 I t l t f 
0 05 1.5 2 2.5 3 3.5 .4.5 5 
Time (s) 
Figure 6-40 Relative Position Time Response plot. 
Vin(t) = 0 V, where feedback gain is/(,= 1 V/m. In this section, both a PD and phase-lag 
controller wiII be implemented. 
6. Click on Control Parameters and select a slep ilislurbam;e 1 m/s2 aml step Lime O sec­
onds; feedback z, PID :::: [ 1 0 OJ. Simulate the response. What is the steady-state error? 
mr1 
Apply the final value theorem to Z(s()) = J -A s 2 BRa + KnrKb K KmKampK.tr G 
.'f + Raf S + J + R
0J ,. 
Do the values correspond? Validate the observed overshoot and rise time using the 
time-domain analysis techniques introduced in Chapter 5. 
7. What value of Kp (PID = [Kp O 0]) will yield a steady-state error less than 5 mm? 
This will require a gain much higher than 1. To reduce the need for trial and error, 
click SIS0Tool in the Control Parameters window and increase the gain while 
observing the LTI Viewer step response. What happens to the system overshoot at 
this gain? Does this match your calculations? 
8. Increase the derivative gain in steps from O to 22, keeping the proportional gain 
that was found in Step 7, and observe the effect of adding derivative gain. Again, 
validate these results using time-domain analysis techniques. Plot successive trials 
to an external figure for comparison, a,;; in Fig. 6-40. 
9. Design four phase-lead compensators with sufficient gain KP to meet the steady­
state error requirement as specified in Step 7 and with phase margins 'Pm, of 10, 30, 
40, and 60°. Compare the optimized response with the PD response. 
10. Test your controller's response to the inputs applied in Steps 3, 4, and 5. 
6-6-6 Closed-Loop Acceleration Control 
As mentioned previously, it is preferable to control the acceleration of the mass m, because 
it is the acceleration of the vehicle that affects the comfort of the ride. Set the simulation 
mode to Active Suspension. and set the feedback to z in Control Parameters. This causes 
6-7 SUMMARY 6-7 Summary 367 
) Controller Parameters -' -CJ~ 
DISTURBANCE COMPENSA TOR 
!step --;] Feedback: lz ..:l 
Ampltude (mls"2) [PJD]: I [KOO] 
f Compensator TF: IPhaseLag g 
step Time (s) 
SISOTool 
Close 
Figure 6-41 The Controller Parameters window. 
the relative acceleration, z(t), with gain K.. = 1 V/m/s2 to be compared with the set point 
V;n(t) = OV. 
11. In the Control Parameters window, change the PID gains to PID = [5 0 OJ, and 
click SISOTool to apply the changes and launch the SISO Design Tool. Use the 
LTI Viewer to monitor the step response while tweaking the gain. What gain 
achieves the smallest rise time? Test this gain on the actual controller, clicking on 
Print to Figure in the Setup Axes menu to save the results for comparison. 
12. f)esign a phase-lag compensator, with gain K = 5 and a>~ = 0.1 rad/s. Once the 
compensator is designed, implement it by using the following MATLAB script: 
K = 5, a= 0.1442, T = 231.1996 
PhaseLag = tf([a*T 1], [T 1]) 
This creates a transfer function object in the workspace. Now click on Control Parameters 
and select PhaseLag as the compensator in the Compensator TF dropdown and enter K as 
the proportional gain (Fig. 6-41). Any transfer function object created in the MATLAB 
workspace is accessible in this menu and can be used in place of the PID controller Gc(s). 
Compare the step response to the response in Step 11. Try designing various phase-lag 
controllers as per Section 9-6-2 and compare the results. 
13. Repeat Steps 11 and 12 using absolute acceleration as the feedback (Feedback = 
x). For the phase-lag compensator , try K = 5 and w~ -0.1 rad/s. 
14. Test the controllers designed in the last few steps with various inputs such as 
sinusoidal, rounded step, and rounded pulse. 
In this chapter, we described the SIMLab and Virtual Lab software to improve your understanding of 
control and to provide a better practical appreciation of the subject. We discussed that, in a realistic 
system including an actuator (e.g., a de motor) and mechanical (gears) and electrical component s 
368 · Chapter 6. The Control Lab 
REFERENCE 
PROBLEMS (amplifiers). issues such as saturation of the amplifier, friction in the motor, or backlash in gears will 
seriously affect the controller design. This chapter focused on problems involving de motors 
including modeling, system identification, and controller design. We pre.o,ented experiment., on 
speed and position control of de motors. followed by two controller design projects involving control 
of a simple robotic system and control of a single degree of freedom quarter-car model. The focus on 
de motors in these experiments was intentional, because of their simplicity and wide use in industrial 
applications. Note that, in the design projects. aside from the speed and position control topics, other 
controllers such as PID and lead/lag were also discussed. You may wish to visit Chapter 9 to become 
more acquainted with these topics. 
l. F. Golnaraghi, .. ENSC 383 Laboratory Experiment;· Simon Fraser University, Mechatronic Systems 
Engineering Program, British Columbia. Canada, Lab Manual. 2008. 
6-1. Create a model of the motor shown in Fig. 5-25. Use the following parameter values: Jm = 
0.0004 kg-m2; B = 0.001 Nm/rad/sec, R" = 2 n. L., = 0.008 H, Km =: 0.1 Nm/ A, and Kb = 0.1 V /rad/ 
sec. Assume that the load torque TL is zero. Apply a 5-V step input to the motor, and record the motor 
speed and the current drawn by the motor (requires modification of SIMLab blocks by making current 
the output) for 10 sec following the step input. 
(a) What is the steady-state speed? 
(b) How long does it take the motor to reach 63% of its steady-state speed? 
(c) How long does it take the motor to reach 75% of its steady-state speed'! 
(d) What is the maximum current drawn by the motor? 
6-2. Set the viscous friction B to zero in Problem 6-1. Apply a 5-V step input to the motor, and 
record the motor speed and current for 10 sec following the step input. What is the steady-state speed? 
(a) How long does it take the motor to reach 63% of its steady-state speed? 
(b) How long does it take the motor to reach 75% of its steady-state speed? 
(c) What is the maximum current drawn by the motor? 
(d) What is the steady-state speed when the applied voltage is IO V? 
6-3. Set the armature inductance 41 to zero in Problem 6-2. Apply a 5-V step input to the motor, and 
record the motor speed and current drawn by the motor for 10 sec following the step input. 
(a) What is the steady-state speed? 
(b) How long does it take the motor to reach 63% of its steady-state speed? 
(c) How long does it take the motor to reach 75% of its steady-state speed? 
(d) What is the maximum current drawn by the motor? 
(e) If J111 is increased by a factor of 2, how long does it take the motor to reach 63% of its steady-state 
speed following a 5-V step voltage input? 
(f) If Jm is increased by a factor of 2, how long does it take the motor to reach 75% of its steady-state 
speed following a 5-V step voltage input? 
6-4. Repeat Problems 6-1 through 6-3, and assume the load torque TL= -0.1 N-m (don't forget the 
minus sign) starting after 0.5 sec (requires change of the disturbance block parameters in SIMLab). 
(a) How does the steady-state speed change once TL is added? 
(b) How long does it take the motor to reach 63% of its new steady-state speed'! 
(c) How long does it take the motor to reach 75% of its new steady-state speed? 
(d) What is the maximum current drawn by the motor'? 
(e) Increase hand further discuss its effect on the speed response. 
Problems _. 369 
6-5. Repeat Problems 6-1 through 6-3. and assume the load torque TL= -0.2 N-m (don't forget the 
minus sign) starting after I sec (requires change of the disturbance block parameters in SIMLab). 
(a) How does the steady-state speed change once TL is added? 
(b) How long does it take the motor to reach 63% of its new steady•state speed? 
(c) How long does it take the motor to reach 75% of its new steady-state speed? 
(d) What is the maximum current drawn by the motor? 
(e) Increase TL and further discuss its effect on the speed response. 
6-6. For the system in Fig. 6-1. use the parameters for Problem 6-1 (but set Lu = 0) and an amplifier 
gain of 2 to drive the motor (ignore the amplifier voltage and current limitations for the time being). 
What is the steady-state speed when the amplifier input voltage is 5 V? 
6-7. Modify the model in Problem 6-6 by adding a proportional controller with a gain of KP== 0.1. 
apply a IO rad/sec step input, and record the motor speed and current for 2 sec following the step 
input. 
(a) What is the steady-state speed? 
{b) How long does it take the motor to reach 63% of its steady-state speed'? 
(c) How long does it take the motor to reach 75% of its steady-state speed? 
(d) What is the maximum current drawn by the motor? 
6-8. Change Kp to 1.0 in Problem 6-7. apply a 10 rad/sec step input, and record the motor speed and 
current for 2 sec following the step input. 
(a) What is the steady-state speed? 
(b) How long does it take for the motor to reach 63% of its steadyftstate speed? 
{c) How long does it take for the motor to reach 75% of its steady-state speed'? 
(d) What is the maximum current drawn by the motor? 
(e) How does increasing Kp affect the response (with and without saturation effect in the SIMLab 
model)? 
6-9. Repeat Problem 6-7, and assume the load torque TL= -0.1 N-m starting after 0.5 sec (requires 
change of the disturbance block parameters in SIMLab). 
(a) How does the steady-state speed change once T1, is added? 
(b) How long does it take the motor to reach 63% of its new steady-state speed? 
(c) How long does it take the motor to reach 75% of its new steady-state speed? 
6-10. Repeat Problem 6-7, and assume the load torque TL= -0.2 N-m starting after l sec (requires 
change of the disturbance block parameters in SIMLab). 
(a) How does the steady-state speed change once TL is added? 
(b) How long does it take the motor to reach 63% of its new steady-state speed? 
(c) How long does it take the motor to reach 75% of its new steady~state speed? 
6-11. Insert a velocity sensor Lransfer function K,s in the feedback loop, where K_, = 0.2 V/rad/sec 
(requires adjustment of the SIMLab model). Apply a 2 rad/sec step input, and record the motor speed 
and current for 0.5 sec following the step input. Find the value of Kp that gives the same result as in 
Problem 6-7. 
6· 12. For the system in Fig. 6-3, select K,J = 1.0, apply a 1 rad step input, and record the motor 
position for 1 sec. Use the same motor parameters as in Problem 5 .. 1. 
(a} What is the steady-state position? 
{b) What is the maximum rotation? 
(c) At what time after the step does the maximum occur? 
6-13. Change KP to 2.0 in Problem 6~ 12. apply a 1 rad step input, and record the motor position for 
1 sec. 
(a) At what time after the step does the maximum occur? 
{b) What is the maximum rotation? 
370 ~· Chapter 6. The Control Lab 
6-14. Using the SIMLab, investigate the closed-loop position response using a proportional 
controller. For a position-control case, use proportional controller gains of 0.1, 0.2, 0.5, 1.0, and 
2.0; record the step response for a 1 rad change at the output shaft; and estimate what you consider to 
be the best value for the proportional gain. Use the same motor parameters as in Problem 6-1. 
6 .. ts. Using the SIMLab, investigate the closed-loop position response using a PD controller. 
Modify the controller used in Problem 6-14 by adding derivative action to the proportional controller. 
Using the best value you obtained for K,,. try various values for KDt and record the step response in 
each case. 
6-16. Repeat Problem 6-15 and assume a disturbance torque T/J = -0.l N-m in addition to the step 
input of I rad (requires change of the disturbance block parameters in SIMLab). 
6-17. Repeat Problem 6-15 and assume a disturbance torque Tn = -0.2 N-m in addition to the step 
input of 1 rad (requires change of the disturbance block parameters in SIMLab). 
6-18. Use the SIMLab and parameter values of Problem 6-1 to design a PID controller that 
eliminates the effect of the disturbance torque, with a percent overshoot of 4.3. 
6-19. Use the SIMLab and parameter values of Problem 6-1 to design a PID controller that 
eliminates the effect of the disturbance torque. with a percent overshoot of 2.8. 
6-20. Investigate the frequency response of the motor using the Virtual Lab Tool. Apply a sine wave 
with a frequencyofO.l Hz (don't forget: 1 Hz= 21r rad/sec) and amplitude of 1 V the amplifier input, 
and record both the motor velocity and sine wave input signals. Repeat this experiment for 
frequencies of 0.2, 0.5. 1.0, 2.0, 5.0, 10.0, and 50.0 Hz (keeping the sine wave amplitude at 1 V). 
6-21. Using the Virtual Lab Tool, investigate the closed-loop motor speed response using a 
proportional controller. Record the closed-loop response of the motor velocity to a step input of 
2 rad/sec for proportional gains of 0.1, 0.2, 0.4, and 0.8. What is the effect of the gain on the steady­
state velocity? 
6-22. Using the Virtual Lab Tool, investigate the closed-loop position response using a proportional 
controller. For a position-control case, use proportional controller gains of 0.1, 0.2, 0.5, 1.0, and 2.0; 
record the step response for a 1 rad change at the output shaft; and estimate what you consider to be 
the best value for the proportional gain. 
6-23. Using the Virtual Lab Tool, investigate the closed-loop position response using a PD 
controller. Modify the controller used in Problem 6-15 by adding derivative action to the proportional 
controller. Using the best value you obtained for K,.,. try various values for KD, and record the step 
response in each case. 
6-24. In Design Project 2 in Section 6-7, use the CarSim tool to investigate the effects of controlling 
acceleration X on relative motion (or bounce) Zand vice versa. 
(a) Use a PD controller in your investigation. 
(b) Use a PI controller in your investigation. 
(c) Use a PID controller in your investigation. 
6-25. Using the Quarter Car Modeling Tool controlling, 
(a) Set the simulation mode to "Passive Suspension" and set up the top axes to display y(t). Select a 
step input with amplitude 0.02 m/s2 and step time O seconds. Plot the response. Repeat this procedure 
for 0.2 and 0.5 m/s2inputs~ Compare the results. 
{b) Change the stiffness, k, to 15 N/m. With a step input of0.02 m/s2 and the lower axes configured to 
display z(t), what is the frequency of the oscillatory response? This is the damped frequency of the 
system using default parameters (cud). How does the period of oscillation compare to the value that 
was observed in part (a)? Repeat the simulation several more times. gradually reducing the damping 
(variable c in the Model Parameters control window) to find the natural frequency of the system (w"). 
(c) Obtain the effect of washboard bumps with an amplitude of 0.02 m/s2 on the response of the 
system. Vary the frequency from 10 rad/s to 0.1 rad/s. What happens to the amplitude of relative 
displacement at the damped natural frequency, wd, measured in part (b)? 
Problems ·: 371 
(d) Simulate driving the quarter-car model over a curb by using the rounded step input with 
amplitude 0.2 m and duration 0.02 seconds. Calculate values of c such that the system is under­
damped (?: = 0.25). critically damped(?:= 1), and overdamped (?: = 2.5) and observe the response for 
each case. 
(e) Repeat part (d) using the unidirectional rounded pulse (URP) input (amplitude 0.2 m, duration 
0.02 seconds). 
(t) Add a step disturbance of 2 m/s2 and step time of O seconds; feedback z, PIO = [ I O O]. Simulate 
the response. Find the steady-state error by simulation and by applying the final-value theorem. 
Compare the results. Validate the observed overshoot and rise time using the time domain analysis. 
(g) What value of KP (PIO= [Kp O 01) will yield a steady-state error less than 4 mm? What happens to 
the system overshoot at this gain? Does this match your calculations? 
(h) Increase the derivative gain in steps from Oto 50, keeping the proportional gain that was found in 
part (g). and observe the effect of adding derivative gain. Again, validate these results using time 
domain analysis techniques. Plot successive trials to an external figure for comparison. 
(i) Design four phase-lead compensators with sufficient gain Kp to meet the steady-state error 
requirement as specified in part (g) and with phase margins, <Pm, of 15, 20, 25, and 50°. Compare the 
optimized response with the PD response. 
(j) Test your controller's response to the inputs applied in parts (c), (d), and (e). 
(k) Change the PIO gains to P/D = [5 I OJ and click SISO Tool to apply the changes and launch the 
SISO Design Tool. Explain what happens. 
(I) What value of K1 (PIO= [5 K1 O]) will yield a steady-state error less than 4 mm? What happens to 
the system overshoot and rise time at this gain? Does this match your calculations? 
(m) Test the controllers designed in the last few parts with sinusoidal, rounded-step, and rounded­
pulse input. 
CHAPTER 7 
Root Locus Analysis 
7-1 INTRODUCTION 
372 In the preceding chapters, we have demonstrated the importance of the poles and zeros 
of the closed-loop transfer function of a linear control system on the dynamic 
performance of the system. The roots of the characteristic equation, which are the 
poles of the closed-loop transfer function, determine the absolute and the relative 
stability of linear SISO systems. Keep in mind that the transient properties of the system 
also depend on the zeros of the closed-loop transfer function. 
An important study in linear control systems is the investigation of the trajectories of 
the roots of the characteristic equation-or, simply, the root loci-when a certain system 
parameter varies. In Chapter 5, several examples already illustrated the usefulness of the 
root loci of the characteristic equation in the study of linear control systems. The basic 
properties and the systematic construction of the root loci are first due to W.R. Evans [1, 3]. 
In general, root loci may be sketched by following some simple rules and properties . 
For plotting the root loci accurately , the MATLAB root-locus tool in the Control 
Systems Toolbox component of ACSYS can be used. See Chapter 9 for examples. As a 
design engineer, it may be sufficient for us to learn how to use these computer tools to 
generate the root loci for design purposes. However, it is important to learn the basics of the 
root loci and their properties, as well as how to interpret the data provided by the root loci for 
analysis and design purposes. The material in this text is prepared with these objectives in 
mind; details on the prope1ties and construction of the root loci are presented in Appendix E. 
The root-locus technique is not confined only to the study of control systems. In 
general, the method can be applied to study the behavior of roots of any algebraic equation 
with one or more variable parameter s. The general root-locus problem can be formulated 
by referring to the following algebraic equation of the complex variable, say, s: 
F(s) = P(s) + KQ(s) = 0 (7-1) 
where P(s) is an nth-order polynomial of s, 
P(s) = s" + a11-is'1-1 + · · · + a1s + ao (7-2) 
and Q(s) is an mth-order polynomial of s; n and m are positive integers. 
Q(s)=s111+b111-d11
-1+ ··· +b1s+ho (7-3) 
For the present, we do not place any limitations on the relative magnitudes between n and 
m. K is a real constant that can vary from -oo to +oo. 
7-2 Basic Properties of the Root Loci (RL) ·· 373 
The coefficients a1, a2, ... , an, b1, b2, ... , b,,z are considered to be real and fixed. 
Root loci of multiple variable parameters can be treated by varying one parameter 
at a time. The resultant loci are called the root contours. and the subject is treated in Section 
7-5. By replacing s with z in Eq. (7-1) through (7-3), the root loci of the characteristic equa­
tion of a linear discrete-data system can be constructed in a similar fashion (Appendix E). 
For the purpose of idet1tificatio11 in this text. we define the following categories of root 
loci based on the values of K: 
1. Root loci (RL). Refers to the entire root loci for -oo < K < oo. 
2. Root contours (RC). Contour of roots when more than one parameter varies. 
In general, for most control-system applications~ the values of Kare positive. Under unusual 
conditions, when a system has positive feedback or the loop gain is negative, then we have the 
situation that K is negative. Although we should be aware of this possibility, we need to place 
the emphasis only on positive values of Kin developing the root-locus techniques. 
7-2 BASIC PROPERTIES OF THE ROOT LOCI (RL) 
Because our main interest is control systems, let us consider the closed-loop transfer 
function of a single-loop control system: 
Y(s) G(s) 
R(s) = 1 + G(s)H(s) (7-4) 
keeping in mind that the transfer function of multiple-loop SISO systems can also be 
expressed in a similar fonn. The characteristic equation of the closed-loop system is 
obtained by setting the denominator polynomial of Y(s)/R(s) to zero. Thus, the roots of the 
characteristic equation must satisfy 
1 + G(s)H(s) = 0 
Suppose that G(s)H(s) contains a real variable parameter Kasa multiplying factor, such 
that the rational function can be written as 
G(s)H(s) = Ki(~;) (7-6) 
where P(s) and Q(s) are polynomials as defined in Eq. (7-2) and (7-3), respectively. 
Eq. (7-5) is written 
(7-7) 
The numerator polynomial of Eq. (7~7) is identical to Eq. (7-1). Thus, by considering that 
the loop transfer function G(s)H(s) can be written in the form of Eq. (7-6), we have 
identified the RL of a control system with the general root-locus problem. 
When the variable parameter K does not appear as a multiplying factor of G(s)H(s). we 
can always condition the functions in the form of Eq. (7-1). As an illustrative example, 
consider that the characteristic equation of a control system is 
s(s + I )(s + 2) + s2 + (3 + 2K)s + 5 = 0 (7-8) 
374 • Chapter 7. Root Locus Analysis 
( 
To express the last equation in the form ofEq. (7-7), we divide both sides of the equation by 
the terms that do not contain K, and we get 
I+ 2Ks = O 
s(s + l)(s + 2) + s2 + 3s + 5 (7-9) 
Comparing the last equation with Eq. (7-7), we get 
Q(s) 2s 
P(s) = s3+4s2+5s+5 (7-10) 
Now K is isolated as a multiplying factor to the function Q(s)/ P(s). 
We shall show that the RL of Eq. (7-5) can be constructed based on the properties of 
Q(s)/P(s). In the case where G(s}H(s) = KQ(s)/P(s), the root-locus problem is another 
example in which the characteristics of the closed-loop system, in this case represented by 
the roots of the characteristic equation, are determined from the knowledge of the loop 
transfer function G(s)H(s). 
Now we are ready to investigate the conditions under which Eq. (7-5) or Eq. (7-7) is 
satisfied. 
Let us express G(s)H(s) as 
G(s)H(s) = KG1 (s)H1 (s) (7-11) 
where G1 (s)H1 (s) does not contain the variable parameter K. Then, Eq. (7-5) is written 
1 G1(s)H1(s) = -­K 
To satisfy Eq. (7~12), the following conditions must be satisfied simultaneously: 
Condition on magnitude 
Condition on angles 1 
IG1 (s)H1 (s)I = IKI -oo<K<oo 
LG1(s)H1(s) = (2i+ l),r K~O 
= odd multiples of ,r radians or 180° 
LG1 (s)H1 (s) = 2in K::; 0 
= even multiples of 1t radians or 180° 
where i = 0, ±1, ±2, ... (any integer). (7-13) 
(7-14) 
(7-15) 
In practice, the conditions stated in Eq. (7-13) through (7-15) play different roles in the 
construction of the root loci. 
• The conditions on angles in Eq. (7-14) or Eq. (7-15) are used to determine the 
trajectories of the root loci in the s-plane. 
• Once the root loci are drawn, the values of Kon the loci are determined by using the 
condition on magnitude in Eq. (7-13). 
7-2 Basic Properties of the Root Loci (RL) ~ 375 
The construction of the root loci is basically a graphical problem, although some of the 
properties are derived analytically. The graphical construction of the RL is based on the 
knowledge of the poles and zeros of the function G(s)H(s). In other words, G(s)H(s) must 
first be written as 
G(s)H(s) = KG1 (s)Hi (s) = K(s + Zl )(s + z2) · • • (s + Zm) (7-16) 
(s + P1)(s + pz) .. · (s + Pn) 
where the zeros and poles of G(s)H(s) are real or in complex-conjugate pairs. 
Applying the conditions in Eqs. (7-13), (7-14), and (7-15) to Eq. (7-16), we have 
m 
ITJs + z;f 
I ) I 1-l 1 G1 (s Hi (s) == ;; = JKI -oo < K < oo 
II\s+ Pk\ (7-17) 
k=l 
For O ~ K<oo: 
m n 
LG1(s)H1(s) = L)(s+zk)- LL(s+ Pj) = (2i+ I) x 180° (7-18) 
k=l j=l 
For -oo < K $'. 0: 
m n 
LG1(s)H1(s) = LL(s+zk)- LL(s+ Pj) = 2i x 180° (7-19) 
k=l j=l 
where i = 0, ±:1, ±2, .... 
The graphical interpretation of Eq. (7-18) is that any point s1 on the RL that 
corresponds to a positive value of K must satisfy the following condition: 
The difference between the sums of the angles of the vectors drawn from the zeros 
and those from the poles of G(s)H(s) to s1 is an odd multiple of 180 degrees. 
For negative values of K, any point St on the RL must satisfy the following condition: 
The difference between the sums of the angles of the vectors drawn from the zeros 
and those from the poles of G(s)H(s) to s1 is an even multiple of 180 degrees, 
including zero degrees. 
Once the root loci are constructed, the values of K along the loci can be determined by 
writing Eq. (7-17) as 
" Ilis+ Pi\ 
IKJ = _i:_1 __ (7-20) 
Ills+ z;j 
i::;;;; 1 
The value of Kat any point s1 on the RL is obtained from Eq. (7-20) by substituting the value 
of St into the equation. Graphically, the numeratorofEq. (7-20) represents the product of the 
lengths of the vectors drawn from the poles of G(s)H(s) to s1, and the denominator 
represents the product of lengths of the vectors drawn from the zeros of G(s)H(s) to s1• 
376 • Chapter 7. Root Locus Analysis 
jw 
(f 
Figure 7-1 Pole-zero configuration of 
G(s)H(s) = K(s + z1 )/[s(s + p2) x 
(s + p3)]. 
To illustrate the use of Eqs. (7-18) to (7-20) for the construction of the root loci, let us 
consider the function 
G(s)H(s) = K(s + Zl) 
s(s + p2)(s + p3) 
The location of the poles and zero of G(s)H(s) are arbitrarily assigned, as shown in Fig. 7-1. 
Let us select an arbitrary trial point s1 in the s-plane and draw vectors directing from the 
poles and zeros of G(s)H(s) to the point. If s1 is indeed a point on the RL for positive K, it 
must satisfy Eq. (7-18); that is, the angles of the vectors shown in Fig. 7-1 must satisfy 
L(s1 + Zl) -Ls1 -L(s1 + P2) -L(s1 + p3) 
= 6:1 -8p\ -8112 -8p3 = (2i + l) X 180° (7-22) 
where i = 0, ±1, ±2 •.... As shown in Fig. 7-1. the angles of the vectors are measured 
with the positive real axis as reference. Similarly, if s1 is a point on the RL for negative 
values of K, it must satisfy Eq. (7-19); that is, 
L(s1 + z1) -Ls1 -L(s1 + p2) -L(s1 + p3) 
= 0:1 -ep1 -8112 -Bp3 = 2i X 180° 
where i = 0, ±1, ±2 •.... (7-23) 
If s1 is found to satisfy either Eq. (7-22) or Eq. (7-23), Eq. (7-20) is used to find the 
magnitude of Kat the point. As shown in Fig. 7-1. the lengths of the vectors are represented 
by A, B, C, and D. The magnitude of K is 
IKI = !s1 ]ls1 + P2lls1 + p3J = BCD 
ls1 + zil A (7-24) 
The sign of K depends on whether s1 satisfies Eq. (7-22) (K ~ O)or Eq. (7-23)(K::; 0). Thus, 
given the function G(s)H(s) with Kasa multiplying factor and the poles and zeros are known, 
the construction of the RL of the zeros of 1 + G(s)H(s) involves the following two steps: 
1. A search for all the s1 points in the s-plane that satisfy Eq. (7-18) for positive K. If 
the RL for negative values of Kare desired, then Eq. (7-19) must be satisfied. 
2. Use Eq. (7-20) to find the magnitude of Kon the RL. 
7~3 Properties of the Root Loci ~ 377 
We have established the basic conditions on the construction of the root-locus 
diagram. However, if we were to use the trial-and-error method just described, the 
search for all the root-locus points in the s-plane that satisfy Eq. (7-18) or Eq. (7-19) and 
Eq. (7-20) would be a very tedious task. Years ago, when Evans [1, 2] first invented the 
root-locus technique, digital computer technology was still at its infancy; he had to 
devise a special tool, called the Spirule, which can be used to assist in adding and 
subtracting angles of vectors quickly. according to Eq. (7-18) or Eq. (7-19). Even with 
the Spirule, for the device to be effective~ the user still has to first know the general 
proximity of the roots in the s-plane. 
With the availability of digital computers and efficient root-finding subroutines, the 
Spirule and the trial-and-error method have long become obsolete. Nevertheless, even with 
a high-speed computer and an effective root-locus program, the analyst should still have an 
understanding of the properties of the root loci to be able to manually sketch the root loci of 
simple and moderately complex systems, if necessary, and interpret the computer results 
correctly, when applying the root loci for analysis and design of control systems. 
>· 7-3 PROPERTIES OF THE ROOT LOCI 
The following properties of the root loci are useful for the purpose of constructing the root 
loci manually and for the understanding of the root loci. The properties are developed 
based on the relation between the poles and zeros of G(s)H(s) and the zeros of 
1 + G(s)H(s). which are the roots of the characteristic equation. We shall limit the 
discussion only to the properties but leave the details of the proofs and the applications of 
the properties to the construction of the root loci in Appendix E. 
7-3-1 K = 0 and K = ± oo Points 
The K = O points on the root loci are at the poles of G(s)H{s). 
The K= ± oo points on the root loci are at the zeros of G(s )H(s ). 
The poles and zeros referred to here include those at infinity, if any. The reason for these 
properties are seen from the condition of the root loci given by Eq. (7-12), which is 
As the magnitude of K approaches zero, G1 (s)H1(s) approaches infinity, sos must approach 
the poles of G1 (s)H1 (s) or of G(s)H(s). Similarly, as the magnitude of K approaches infinity, 
s must approach the zeros of G(s)H(s). 
EXAMPLE 7-3-1 Consider the equation 
s(s + 2)(s + 3) + K(s + 1) = 0 (7-26) 
When K:::: O. the three roots of the equation are at s = 0,-2, and -3. When the magnitude of K is 
infinite, the three roots of the equation are at s = -1, oo, and oo. It is useful to consider that infinity in 
the s-plane is a point concept. We can visualize that the finite s-plane is only a small portion of a 
sphere with an infinite radius. Then, infinity in the s~plane is a point on the opposite side of the sphere 
that we face. 
Dividing both sides of Eq. (7-26) by the terms that do not contain K. we get 
K(s + 1) I + G(s)H(s) = I+ ( 2). 3) = 0 (7-27) s s+ (s + 
378 ' -Chapter 7. Root Locus Analysis 
s-plane 
K=O K=O K=±= 
-3 -2 -1 jm 
0 K=O 
Figure 7-2 Points at which K = 0 and 
K = ±oo on the RL of s(s + 2)(s + 3)+ 
K(s + 1) = 0. 
which gives 
K(s+ 1) 
G(s)H(s) = s(s + 2)(s + 3) (7-28) 
Thus. the three roots of Eq. (7-26) when K::::: 0 are the same as the poles of the function 
G(s)H(s). The three roots of Eq. (7-26) when K = ±oo are at the three zeros of G(s)H(s), 
including those at infinity. In this case, one finite zero is at s = -1, but there are two zeros at 
infinity. The three points on the root loci at which K = 0 and those at which K = ±oo are shown 
in Fig. 7-2. 
7-3-2 Number of Branches on the Root Loci 
A branch of the RL is the locus of one root when K varies between -oo and oo. The 
following property of the RL results, since the number of branches of the RL must equal the 
number of roots of the equation. 
The number of branches of the RL of Eq. {7-1) or Eq. {7-5) is equal to the order of 
the polynomial. 
For example, the number of branches of the root loci ofEq. (7-26) when Kvaries from 
-oo to oo is three, since the equation has three roots. 
Keeping track of the individual branches and the total number of branches of the 
root-locus diagram is important in making certain that the plot is done correctly. This 
is particularly true when the root-locus plot is done by a computer, because unless 
each root locus branch is coded by a different color, it is up to the user to make the 
distinctions. 
7 .. 3 .. 3 Symmetry of the RL 
The RL are symmetrical with respect to the real axis of the s-plane. In general, the 
RL are symmetrical with respect to the axes of symmetry of the pole-zero 
configuration of G(s)H(s). 
The reason behind this property is because for real coefficient, K, in Eq. (7-1), the roots 
must be real or in complex-conjugate pairs. 
7-3-4 Angles of Asymptotes of the RL: Behavior of the RL at Isl = oo 
When n, the order of P(s), is not equal tom, the order of Q(s), some of the loci will 
approach infinity in the s-plane. The properties of the RL near infinity in the s-plane 
are described by the asymptotes of the loci when Isl-+ oo. In general when n ~ m, there 
will be Zin -mj asymptotes that describe the behavior of the RL at Isl = oo. The angles 
of the asymptotes and their intersect with the real axis of the s-plane are described as 
follows. 
7-3 Properties of the Root Loci ~ 379 
For large values of s, the RL for K ~ 0 are asymptotic to asymptotes with angles 
given by 
e. -(2i + 1) 1800 ...J. i-
1 1x nrm n-m (7-29) 
where i = 0, 1, 2, •.• , In -m I -1; n and m are the number of finite poles and zeros 
of G(s)H(s), respectively. 
The asymptotes of the root loci for K ~ 0 are simply the extensions of the 
asymptotes for K 2:: 0. 
7-3-5 Intersect of the Asymptotes (Centroid) 
The intersect of the 21n -ml asymptotes of the RL lies on the real axis of the s-plane, at 
O"J = L finite poles of G(s)H(s) -I: finite zeros of G(s)H(s) (7-30) n-m 
where n is the number of finite poles and m is the number of finite zeros of G(s)H(s). 
respectively. The intersect of the asymptotes o-1 represents the center of gravity of the root 
loci and is always a real number, or 
I: real parts of poles ofG(s)H(s) -Z:: rea1 parts of zeros ofG(s)H(s) a1 =~~~~~~~~~~~~~~~~~~~~~~~- (7-31) n-m 
The root loci and their asymptotes for Eq. (7-26) for -oo :5 K :5 oo are shown in Fig. 7-3. 
More examples on root .. Joci asymptotes and constructions are found in Appendix E. 
I 
l 
: s-plane 
I 
I 
I 
I 
l 
\ 
1 Asymptote 
~ 
I 
I 
I 
~K=OK<O K=±O j(tJ 
0 Cf 
Figure 7-3 Root loci and asymptotes of s(s + 2)(s + 3) + K(s +I)= 0 fot-x::;; K :5 oc. 
380 .. Chapter 7. Root Locus Analysis 
7-3-6 Root Loci on the Real Axis 
The entire real axis of the s-plane is occupied by the RL for all values K. On a given section 
of the real axis, RL for K ~ 0 are found in the section only if the total number of poles and 
zeros of G(s)H(s) to the right of the section is odd. Note that the remaining sections of the 
real axis are occupied by the RL for K :5 0. Complex poles and zeros of G(s)H(s) do not 
affect the type of RL found on the real axis. 
7-3-7 Angles of Departure and Angles of Arrival of the RL 
The angle of departure or arrival of a root locus at a pole or zero, respectively, of G(s)H(s) 
denotes the angle of the tangent to the locus near the point. 
7-3-8 Intersection of the RL with the Imaginary Axis 
The points where the RL intersect the imaginary axis of the s-plane and the corresponding 
values of K may be detennined by means of the Routh-Hurwitz criterion. For complex 
situations, when the RL have multiple numbers of intersections on the imaginary axis, the 
intersects and the critical values of K can be determined with the help of the root-locus 
computer program. The Bode diagram method in Chapters 2 and 8, associated with the 
frequency response, can also be used for this purpose. 
7-3-9 Breakaway Points (Saddle Points) on the RL 
Breakaway points on the RL of an equation correspond to multiple~order roots of the 
equation. 
The breakaway points on the RL of I+ KG1 (s)H1 (s) = 0 must satisfy 
dG1 (s)H1 (s) = 0 ds (7-32) 
It is important to point out that the condition for the breakaway point given in 
Eq. (7-32) is necessary but not sufficient. In other words, all breakaway points on the root 
loci must satisfy Eq. (7-32), but not all solutions of Eq. (7 ~32) are breakaway points. To be a 
break.away point~ the solution ofEq. (7-32) must also satisfy Eq. (7-5), that is, must also be 
a point on the root loci for some real K. 
Toolbox 7-3-1 
MATLAB statements for Fig. 7-3 
num==[l 1]; 
den=conv( [1 OJ, [1 2]); 
den=conv(den, [ 1 3]); 
rnysys=tf(nurn,den); 
rlocus(mysys); 
title ( 1 Root loci for equation 7. 2 7' ) ; 
axis([-3 0 -8 BJ) 
[k,poles] = rlocfind(mysys) % rlocfind command in MATLAB can choose the 
desiredpolesonthelocus 
7-3 Properties of the Root Loci ~ 381 
If we take the derivatives on both sides of Eq. (7-12) with respect to s, we get 
dK dG1 (s)H1 (s)/ds 
ds = [G1 (s)H1 (s)]2 (7-33) 
Thus, the condition in Eq. (7-32) is equivalent to 
dK=O 
ds (7-34) 
In summary, except for extremely complex cases, the properties on the root loci just 
presented should be adequate for making a reasonably accurate sketch of the root-locus 
diagram short of plotting it point by point. The computer program can be used to solve 
for the exact root locations, the breakaway points, and some of the other specific details 
of the root loci, including the plotting of the final loci. However, one cannot rely on the 
computer solution completely, since the user still has to decide on the range and 
resolution of K so that the root-locus plot has a reasonable appearance. For quick 
reference, the important properties described are summarized in Table 7-1, and the 
details are given in Appendix E. 
TABLE 7-1 Properties of the Root Loci of 1 + KG1 (s) H1 = 0 
l. K = 0 points 
2. K = ±co points 
3. Number of separate root loci 
4. Symmetry of root loci 
5. Asymptotes of root loci as 
s~oo 
6. Intersection of the asymptotes 
7. Root loci on the real axis. The K = 0 points are at the poles of G(s)H(s)~ including those 
at s = oo. 
The K = oo points are at the zeros of G(s)H(s), including 
those at s = oo. 
The total number of root loci is equal to the order of the 
equation 1 + KG1 {s)H1 {s) = 0. 
The root loci are symmetrical about the axes of symmetry the 
of pole-zero configuration of G(s)H(s). 
For large values of s, the RL (K > 0) are asymptotic to 
asymptotes with angles given by 
fi· = .2i±1.. X 180° , In-ml 
For K <0. the RL are asymptotic to 
fJ· = 2i X 180° 1 In-ml 
where i = 0, 1, 2, ... , In -ml -1 i 
n = number of finite poles of G(s)H(s), and 
m = number of finite zeros of G(s)H(s). 
(a) The intersection of the asymptotes lies only on the real axis 
in the s-plane. 
(b) The point of intersection of the asymptotes is given by 
_ L realpartsofpolesofG(s)H(s)-I;realpartsofzerosofG{s)H(s) 
O'f - n-m 
RL for K ~ 0 are found in a section of the real axis only if the 
total number of real poles and zeros of G(s)H(s) to the right 
of the section is odd. If the total number of real poles and 
zeros to the right of a given section is even. RL for K :5 0 are 
found. 
(Continued) 
382 I.I-Chapter 7. Root Locus Analysis 
TABLE 7-1 (Continued) 
8. Angles of departure The angle of depru1ure or arrival of the RL from a pole or a 
zero of G(s)H(.v) can be detennined by assuming a point s1 that 
is very close to the pole, or zero, and applying the equation 
m m 
!G(sJ)H(s1) = LL(si -zk) -~)(s1 -Pi) 
k=I J=I 
=2{i+l)l80° K~O 
= 2i x l 80° K S 0 
where i = 0. ± 1. ±2 ..... 
9. Intersection of the root loci with The crossing points of the root loci on the imaginary axis and 
the imaginary axis the corresponding values of K may be found by use of the 
Routh-Hurwitz criterion. 
10. Breakaway points The breakaway points on the root loci are determined by 
finding the roots of dK/ds = 0, or dG(s)H(s)/clv = 0. These 
are necessary conditions only. 
11. Calculation of the values of K The absolute value of Kat any point s1 on the root loci is on 
the root loci determined from the equation 
IKI = I 
IG1 (st)H1 (sJ)I 
7-3-10 The Root Sensitivity 
The condition on the breakaway points on the RL in Eq. (7-34) leads to the root sensitivity 
[ 17, 18, 19] of the characteristic equation. The sensitivity of the roots of the characteristic 
equation when K varies is defined as the root sensitivity and is given by 
SK = ds J s = K ds 
dK / K s dK <7-35) 
Thus, Eq. (7-34) shows that the root sensitivity at the breakaway points is infinite. From the 
root-sensitivity standpoint, we should avoid selecting the value of K to operate at the 
breakaway points, which correspond to multiple-order roots of the characteristic equation. 
In the design of control systems, not only it is important to arrive at a system that has the 
desired characteristics, but, just as important, the system should be insensitive to parameter 
variations. For instance, a system may perform satisfactorily at a certain K, but if it is very 
sensitive to the variation of K, it may get into the undesirable perfonnance region or become 
unstable if K varies by only a small amount. In formal control-system terminology, a system 
that is insensitive to parameter variations is calied a robust system. Thus, the root-locus 
study of control systems must involve not only the shape of the root loci with respect to the 
variable parameter K but also how the roots along the loci vary with the variation of K. 
~ EXAMPLE 7-3-2 Fig. 7-4 shows the root locus diagram of 
s(s + 1) + K = 0 (7-36) 
with K incremented uniformly over 100 values from -20 to 20. The RL are computed and plotted 
digitally. Each dot on the root-locus plot represents one root for a distinct value of K. Thus. we see that 
the root sensitivity is low when the magnitude of K is large. As the magnitude of K decreases, the 
movements of the roots become larger for the same incremental change in K. At the breakaway point. 
s = -0.5. the root sensitivity is infinite. 
Fig. 7-5 shows the RL of 
s2(s+ 1)2+K(s+ 2) = 0 (7•37) 
Figure 7-4 RL of 
.~(s + 1) + K = 0 showing 
the root sensitivity with 
respect to K. 
Figure 7-5 RL of s2(s+ 
1)2 + K(s+ 2) = 0, 
showing the root 
sensitivity with respect 
to K. ----K 
-5.0 -4.0 
oo"-K 
-3.0 7-3 Properties of the Root Loci 4 383 
j(J) 
8 
t 4.0 
:-a< 
s-plane 
-3.0 -2.0 3.0 
0 
A 
::.:: 2.0 
1.0 
K=O 
-1.0 • 0.0 . 
·-1.0 
. 
0 i-2.0 
1-3.0 
::.:: i 
~ 1-4.0 
........... K>O 
j(J) K=O K<O 
1.0 2.0 
.. ......... K<O 
il ~ s-plane 
I 
·" 3.0 .• ,,• 
.•' 
..... 
........ •. 
.... -f- 2.0 
\.~~ 
K>O 1.0 
K::::O 
K=O 0.0 
-1.0 
-2.0 
-3.0 
............ K>O ~. 
<tr: .. 
K=O 
K=O 1.0 
·.~ 
·• 0 K<O 
2.0 
•, ·· .... ... •, 
~~ 
••• ......... K<O 3.0 K--oo 
4.0 
K ----
3.0 u 
384 ~ Chapter 7. Root Locus Analysis 
with K incremented uniformly over 200 values from -40 to 50. Again, the loci show that the root 
sensitivity increases as the roots approach the breakaway points ats = 0, -0.543, -1.0, and -2.457. 
We can investigate the root sensitivity further by using the expression in Eq. (7-34). For the second­
order equation in Eq. (7-36), 
Toolbox 7-3-2 
MATLAB staternents for Eqs. 7-36 and 7-37 
numl=[l]; 
denl=conv( [l O], [1 l]); 
mysysl=tf(numl,denl); 
subplot(2,1,1); 
rlocus(rnysysl); 
title ('Root loci for equation 7. 36') ; dK -== -2s-l ds 
[k,poles] = rlocfind(mysysl) %rlocfind command in MATLAB can choose the 
desired poles on the locus. 
num2=[1 2]; 
den2-conv( [l O O]. [1 1]); 
den2=conv(den2, [1 1]); 
subplot(21l12) 
mysys2=tf(num2,den2); 
rlocus(mysys2); 
title( 'Root loci for equation 7-37'); 
axis( [-3 0 -8 8]) 
[k, poles] = r1ocfind(mysys2) 
From Eq. (7-36), K = -s(s + 1); the root sensitivity becomes (7-38) 
(7-39) 
wheres= <r + j(J), ands must take on the values of the roots of Eq. (7-39). For the roots on 
the real axis, (J) = 0. Thus, Eq. (7-39) leads to 
la+l 1 ISxlw=O = zu + 1 (7-40) 
When the two roots are complex, s = -0.5 for all values of w; Eq. (7-39) gives 
(0.25 + (1)2) 1/2 
\SKla=-o.s= 4w2 (7-41) 
From Eq. (7-41 ), it is apparent that the sensitivities of the pair of complex-conjugate roots 
are the same, since w appears only as w2 in the equation. Eq. (7-40) indicates that the 
sensitivities of the two real roots are different for a given value of K. Table 7-2 gives the 
magnitudes of the sensitivities of the two roots ofEq. (7-36) for several values of K, where 
JSK1 J denotes the root sensitivity of the first root, and ISK21 denotes that of the second root. 
These values indicate that, although the two real roots reach a = -0.5 for the same value of 
7-4 Design Aspects of the Root Loci ·• 385 
TABLE 7-2 Root Sensitivity 
K ROOT 1 JSKtl ROOT2 ISK2I 
0 0 1.000 -1.000 0 
0.04 -0.042 1.045 -0.958 0.454 
0.16 -0.200 1.333 -0.800 0.333 
0.24 -0.400 3.000 -0.600 2.000 
0.25 -0.500 00 -0.500 00 
0.28 -0.5 + J0.173 1.527 -0.5 -j0.173 1.527 
0.40 -0.5 + j0.387 0.817 -0.5 -j0.387 0.817 
1.20 -0.5 + j0.915 0.562 -0.5 -j0.915 0.562 
4.00 -0.5 + jl.937 0.516 -0.5 -jl.937 0.516 
00 -0.5+ joo 0.500 -0.5 -Joo 0.500 
K = 0.25, and each root travels the same distance from u = 0 ands = -1, respectively, the 
sensitivities of the two real roots are not the same. 
~-7-4 DESIGN ASPECTS OF THE ROOT LOCI 
One of the important aspects of the root-locus technique is that, for most control systems 
with moderate complexity, the analyst or designer can obtain vital information on the 
perfonnance of the system by making a quick sketch of the RL using some or all of the 
properties of the root loci. It is of importance to understand all the properties of the RL 
even when the diagram is to be plotted with the help of a digital computer program. 
From the design standpoint, it is useful to learn the effects on the RL when poles and zeros 
of G(s)H(s) are added or moved around in the s~plane. Some of these properties are helpful 
in the construction of the root-locus diagram. The design of the PI, PID, phase-lead, phase­
lag, and the lead-lag controllers discussed in Chapter 9 all have implications of adding 
poles and zeros to the loop transfer function in the s-plane. 
7-4-1 Effects of Adding Poles and Zeros to G(s) H(s) 
The general problem of controller design in control systems may be treated as an 
investigation of the effects to the root loci when poles and zeros are added to the loop 
transfer function G(s)H(s). 
Addition of Poles to G (s) H (s) 
Adding a pole to G(s)H(s) has the effect of pushing the root loci toward the right­
half s-plane. The effect of adding a zero to G(s)H(s) can be illustrated with several 
examples . 
. , EXAMPLE 7-4-1 Consider the function 
K G(s)H(s) = -(--} a> 0 s s+a (7-42) 
386 Chapter 7. Root Locus Analysis 
s-plane 
K=O 
-a 
s-p]ane 8 jOJ 
t 
::ii::: 
K=O 
-a 0 
2 
~ 
~ 
8 
(a) 
8 }Cu 
I 
~ 
(c) co -K 
er 
(b) 
s-p1ane 
(d) 
Figure 7-6 Root-locus diagrams that show the effects of adding poles to G(s)H(s). a 
The RLof I+ G(s)H(s) == 0 are shown in Fig. 7-6(a). These RL are constructed based on the poles of 
G(s)H(s), which are at s = 0 and-a. Now let us introduce a pole at s = -b, with b >a.The function 
G(s)H(s) now becomes 
G(s)H(s) = __ K __ 
s(s +a)(s + b) (7-43) 
Fig. 7-6(b) shows that the pole at s = -b causes the compfox part uf the root loci to bend toward the 
right-half s-plane. The angles of the asymptotes for the complex roots are changed from ±90° to 
±60°. The intersect of the asymptotes is also moved from -a/2 to -(a+ b)/2 on the real axis. 
7-4 Design Aspects of the Root loci : 387 
Toolbox 7-4-1 
MATLAB statements for Fig. 7-3 
The results for Fig. 7-6 can be obtained by the following Matlab statements: 
a=2; 
b=3; 
C=S; 
nurn.4=(1]; 
den4=conv( [1 OJ, [1 a]); 
subplot(2,2,1) 
mysys4=tf(num4,den4); 
rlocus(mysys4); 
axis( [-3 0 -8 8]) 
num3=(1]; 
den3=conv( [ 1 0] , conv( [ 1 a] 1 [ 1 a/2])) ; 
subplot(2,2,2) 
mysys3=tf(num3,den3); 
rlocus(mysys3); 
axis( [-3 0 -8 8]) 
nuro.2=(1]; 
den2=conv( [1 OJ, conv( [1 a] 1 [lb])); 
subplot(212,3) 
mysys2=tf(nurn2,den2); 
rlocus(rnysys2); 
axis( [-3 0 -8 8]) 
num1=[1]; 
denl=conv([l O] ,conv([l a], [1 b])); 
denl=conv(denl, [1 c]); 
mysysl=tf(numl,denl); 
subplot(2,2,4); 
rlocus(rnysysl); 
If G(s)H(s) represents the loop transfer function of a control system, the system with the root loci in 
Fig. 7-6(b) may become unstable if the value of K exceeds the critical value for stability, whereas the 
system represented by the root loci in Fig. 7-6(a) is always stable for K > 0. Fig. 7~6(c) shows the root 
loci when another pole is added to G{s}H(s} at s = -c, c > b. The system is now of the fourth order. 
and the two complex root loci are bent farther to the right. The angles of asymptotes of these two 
complex loci are now ±45°. The stability condition of the fourth-order system is even more acute 
than that of the third-order system. Fig. 7-6(d) illustrates that the addition of a pair of complex­
conjugate poles to the transfer function ofEq. (7-42) will result in a similar effect. Therefore. we may 
draw a general conclusion that the addition of poles to G(s)H(s) has the effect of moving the dominant 
portion of the root loci toward the right-half s-plane. 
Addition of Zeros to G(s)H(s) 
Adding left-half plane zeros to the function G(s)H(s) generally has the effect of 
moving and bending the root loci toward the left-half s-plane. 
The following example illustrates the effect of adding a zero and zeros to G(s)H(s) on 
the RL. 
388 t--Chapter 7. Root locus Analysis 
;_; .. EXAMPLE 7-4-2 Fig. 7-7(a) shows the RL of the G(s)H(s) in Eq. (7-42) with a zero added at s = -b(b > a). The 
complex-conjugate part of the RL of the original system is bent toward the left and forms a circle. 
Thus, if G(s}H(s) is the loop transfer function of a control system, the relative stability of the system is 
improved by the addition of the zero. Fig. 7-7(b) shows that a similar effect will result if a pair of 
complex-conjugate zeros is added to the function ofEq. (7-42). Fig. 7-7(c) shows the RL when a zero 
at s = -c is added to the transfer function of Eq. (743). 
oo-K s-plane 
(a) 8 jro t 
b=oo--+ ~ 
K=O 
0 Cf 
(c) 8 j{J) 
s-plane t 
~ 
K=oo 
K=O 
(b) 
CT 
Figure 7-7 Root-locus diagrams that show the effects of adding zeros to G(s)H(s). K=O 
0 Cf 
7-4 Design Aspects of the Root Loci -~ 389 
Toolbox 7-4~2 
MATLAB statements for Fig. 7-7 
a=2; 
b=3; 
d=6; 
c=20; 
num4=[1 d]; 
den4=conv( [ 1 0] , [ 1 a]) ; 
subplot(2,2,1) 
rnysys4=tf(num4,den4); 
rlocus(rnysys4); 
num3=[1 c]; 
den3=conv( [1 OJ, [1 a]); 
subplot(2,2,2) 
rnysys3=tf(num3,den3); 
rlocus(mysys3); 
axis ( [ -6 0 - 8 8]) 
num2=[1 d]; 
den2=conv([l O] ,conv([l a], [1 b])); 
subplot(2,2,3) 
mysys2=tf(num2,den2); 
rlocus(mysys2); 
axis ( [ -6 0 - 8 8]) 
~ EXAMPLE 7-4-3 Consider the equation 
s2(.t +a)+ K(g + h) = 0 (7-44) 
Dividing both sides of Eq. (7-44) by the terms that do not contain K. we have the loop transfer function 
G(s)H(s) = ~(s + b) (7-45) 
s-(s + a) 
It can be shown that the nonzero breakaway points depend on the value of a and are 
a+3 1_1 s = ---±-va2 -10a+9 4 4 (7-46) 
Fig. 7-8 shows the RL ofEq. (7-44) with b = 1 and several values of a. The results are summarized as 
follows: 
Fig. 7-8(a): a = 10. Breakaway points: s = -2.5 and -4.0. 
Fig. 7-S(b): a = 9. The two breakaway points given by Eq. (7-46) converge to one point at 
s = -3. Note the change in the RL when the pole at -a is moved from -10 to -9. 
For values of a less than 9, the values of s as given by Eq. (7-46) no longer satisfy Eq. (7-44), 
which means that there are no finite, nonzero, breakaway points. 
Fig. 7-8(c): a = 8. No breakaway point on RL. 
As the pole at s = -a is moved farther to the right along the real axis, the complex p011ion of the 
RL is pushed farther toward the right-half plane. 
Fig. 7-8(d): a = 3. 
Fig. 7-8(e): a= b = I. The pole at s = -a and the zero at -b cancel each other out, and the RL 
degenerate into a second-order case and lie entirely on the Jw-axis. 
390 ~ Chapter 7. Root Locus Analysis 
s~plane 
K=O 
-9 -4 8 
t 
~ s-plane 
K=O 
-IO 
jm 
(b) a= 9 -4.5 8 
t 
~ 
~ 
l 
8 
(a) a= IO jru 
K=O 
K=O a 
s-plane 
K=O 
-8 -3.51 g 
t 
~ 
:i.:: 
! 
8 
(c) a= 8 jw 
K=O 
K=O a 
Figure 7-8 Root-locus diagrams that show the effects of moving a pole ofG(s)H(s). G(s)H(s) = K(s + 1)/ [s2(s + a)J 
(Continued). 
8 jm 
t 
~ 
s-plane 
K=O 
K=O 
(d)a = 3 
Figure 7-8 (Continued) 
Toolbox 7-4-3 
MATLAB statements for Fig. 7-8 
a1=10;a2=9;a3=8;a4=3;b=l; 
num1=[1 b]; 
denl=conv( [1 0 OJ, [1 al]); 
subplot(2,2,1) 
mysysl=tf(numl,denl); 
rlocus(mysysl); 
num2=[1 b]; 
den2=conv( [1 0 OJ, [1 a2]); 
subplot(2,2,2) 
mysys2=tf(num2,den2); 
rlocus(mysys2); 
nwn3=[1 b]; 
den3=conv( [1 0 OJ, [1 a3]); 
subplot(2,2,3) 
rnysys3=tf(num3,den3); 
rlocus(mysys3); 
num4=[1 b]; 
den4=conv( [1 O OJ, [1 a4]); 
subplot(2,2,4) 
mysys4=tf(num4,den4); 
rlocus(mysys4); 7-4 Design Aspects of the Root Loci <l 391 
8 jOJ 
t 
~ 
s-plane 
K=O 
0 K=O a 
(e) a::: I 
392 Chapter 7. Root Locus Analysis 
: .-EXAMPLE 7-4-4 Consider the equation 
s-plane 
---K 
-2.618 s ( s2 + 2s + a) + K ( s + 2) = 0 (7-47) 
which leads to the equivalent G(s)H(s) as 
K(s + 2) 
G(s)H(s) = ( -, 2 ) s s~ + s+a (7-48) 
The objective is to study the RL for various values of a(> 0). The breakaway point equation of the RL 
is determined as 
s3 + 4s2 + 4s + a = 0 (7-49) 
Fig. 7-9 shows the RL of Eq. (7-47) under the following conditions. 
Fig. 7-9(a}: a ;;:::; l. Breakaway points: s = -0.38, -l .O, and -2.618. with the last point being 
on the RL for K ~ 0. As the value of a is increased from unity. the two double poles of G(s)H(s) 
at s = -1 will move vertically up and down with the real parts equal to-I. The breakaway 
points at s = -0.38ands = -2.618 will move to the left, whereas the breakaway point at 
s = -1 will move to the right. 
Fig. 7-9(b): a= 1.12. Breakaway points: s = -0.493, -0.857, and-2.65. Because the real 
parts of the poles and zeros of G(s)H(s) are not affected by the value of a, the intersect of the 
asymptotes is always at s = 0. 
Fig. 7-9(c): a= l.185. Breakaway points: s = -0.667, -0.667,and -2.667. The two break­
away points of the RL that lie between s = 0 and - 1 converge to a point. 
Fig. 7-(;J(d): a= 3. Breakaway point: s = -3. When a is greater than 1.185, Eq. (7-49) yields 
only one solution for the breakaway point. 
The reader may investigate the difference between the RL in Figs. 7-9(c) and 7-9(d) and 
fill in the evolution of the loci when the value of a is gradually changed from 1.185 to 3 and beyond. 
(a) a= l 8 
t 
}< jro 
K---
(j s-plane 
---K 
-2.65 
(b) a= 1.12 
Figure 7-9 Root-locus diagrams that show the effects of moving a pole of 
G(s)H(s) = K(s + 2)/[s(s2 + 2s + a)] (Continued). 8 
t 
~ j(J) 
s-plane 
-2.667 
K=O 
-l -j0.43 
(c} a= 1.185 8 
t :.:: j(J) 
K---oo 
--K>O 
Figure 7-9 (Continued) 7-5 Root Contours (RC): Multiple-Parameter Variation .... 393 
j(J) 
s-plane 
jl.414 
-oo..-K 
-3 0 CT 
-jl.414 
-1 -jl.414 
(d) a= 3 
--K<O 
7-5 ROOT CONTOURS (RC): MULTIPLE-PARAMETER VARIATION 
The root-locus technique discussed thus far is limited to only one variable parameter in K. In 
many control-systems problems, the effects of varying several parameters should be 
investigated. For example, when designing a controller that is represented by a transfer 
function with poles and zeros, it would be useful to investigate the effects on the characteristic 
equation roots when these poles and zeros take on various values. In Section 7-4, the root loci 
of equations with two variable parameters are studied by fixing one parameter and assigning 
different values to the other. In this section, the multiparameter problem is investigated 
through a more systematic method of embedding. When more than one parameter varies 
continuously from -oo to oo, the root loci are referred to as the root contours (RC). It will be 
shown that the root contours still possess the same properties as the single-parameter root 
loci, so that the methods of construction discussed thus far are all applicable. 
The principle of root contour can be described by considering the equation 
(7-50) 
where Kt and K2 are the variable parameters and P(s), Q1(s), and Q2(s) are polynomials 
of s. The first step involves setting the value of one of the parameters to zero. Let us set K2 
to zero. Then, Eq. (7-50) becomes 
(7-51) 
394 ~ Chapter 7. Root Locus Analysis 
which now has only one variable parameter in Ki. The root loci of Eq. (7-51) may be 
determined by dividing both sides of the equation by P(s). Thus, 
l K1Qi(s) = O + P(s) (7-52) 
Eq. (7-52) is of the form of 1 + Ki G1 (s)Hi (s) = 0, so we can construct the RL of the 
equation based on the pole-zero configuration of Gi (s)Hr (s). Next, we restore the value of 
K2, while considering the value of K1 fixed, and divide both sides of Eq. (7-50) by the 
terms that do not contain K2. We have 
1 + K2Q2(s) = O 
P(s) + Ki Q, (s) (7-53) 
which is of the form of I+ K2G2(s)H2(s) = 0. The root contours ofEq. (7-50) whenK2 
varies (while Ki is fixed) are constructed based on the pole-zero configuration of 
Q2(s) 
G2(s)H2(s) = P(s) + Ki Qi (s) (7-54) 
It is important to note that the poles of G2(s)H2(s) are identical to the roots of Eq. (7-51). 
Thus. the root contours of Eq. (7-50) when K2 varies must all start (K2 = 0) at the points 
that lie on the root loci of Eq.(7-51). This is the reason why one root-contour problem is 
considered to be embedded in another. The same procedure may be extended to more than 
two variable parameters. The following examples illustrate the construction of RCs when 
multiparru:nt!ler-variation situations exist. 
;,~ EXAMPLE 7-5-1 Consider the equation 
s3 +K2s2 +K1s+ Ki= 0 (7-55) 
where K1 and K2 are the variable parameters, which vary from Oto oo. 
As the first step. we let K2 = O. and Eq. (7-55) becomes 
s3 +K1s+Ki = 0 (7-56) 
Dividing both sides of the last equation by s3, which is the term that does not contain K1, we have 
l + Ki (s + 1) O 
s3 (7-57) 
The root contours of Eq. (7-56) are drawn based on the pole-zero configuration of 
s+l G1 (s)H1 (s) == -3- (7-58) 
S· 
as shown in Fig. 7-IO(a). Next, we let K2 vary between O and oo while holding Ki at a constant 
nonzero value. Dividing both sides of Eq. (7-55) by the tenns that do not contain K2, we have 
1 + K2s2 = 0 (7 59) 
s3 +K1s+K1 -
Thus, the root contours ofEq. (7-55) when K2 varies may be drawn from the pole-zero configuration 
of 
S2 
G2(s)H2(s) = 3 K K s· + is+ 1 (7-60) 
The zeros of G2 (s)H2(s) are at s = 0, 0, but the poles are at the zeros of I + K1 Gr (s)H1 (s), which are 
found on the RL of Fig. 7-1 O(a). Thus, for fixed K 1, the RC when Kz varies must all emanate from the 
root contours of Eq. 7-lO(a). Figure 7-lO(b) shows the root contours of Eq. (7-55) when K2 varies 
from Oto oc, for K1 = 0.0184, 0.25. and 2.56. 
s-plane 
-I (j 
(a) 7-5 Root Contours (RC): Multiple-Parameter Variation -~ 395 
jm 
s-plane 8 
t 
~ ~K2=0 
K2;::; 0(0.4 + jl.74) 
K1 =2.56 
K2= 0(0.25 + j0.66) 
K1=0.25 
K'!. = 0(0.1665 + j0.318) 
K1 =0.0184 
Kt=oo 
(b) 
Figure 7-10 Root contours of s2 + K2s2 + K1s + K1 == 0. (a) Kz = 0. (b) Ki varies and 
K 1 is a constant. 
~ EXAMPLE 7-5-2 Consider the loop transfer function 
K 
G(s)H(s) = s(l + T.r)(s2 + 2s + 2) (7-61) 
of a closed-loop control system. It is desired to construct the root contours of the characteristic 
equation with K and T as variable parameters. The characteristic equation of the system is 
s(l + Ts)(s2 + 2s + 2) + K = 0 (7-62) 
Toolbox 7-5-1 First, we set the value of T to zero. The characteristic equation becomes 
s(s2 +2s+2) +K = 0 
MA.TIAB statements for Fig. 7-10 
forkl=[0.0184 0.25 2. 56]; 
num=[l O O]; 
den=[l O kl kl]; 
mysys=tf(num,den); 
rlocus(mysys); 
hold on; 
end; (7-63) 
196 :-Chapter 7. Root Locus Analysis 
s-plane 
oo-K K=O -l+j 
K=O -1-j jm 
(a) K= 10 
T=O .)·-plane 
K=O 
T=oo j(J) 
(b) 
Figure 7-11 (a) RL for s(s2 + 2s + 2) + K = 0. (b) Pole-zero configuration of 
G2(s)H2(s) = Ts2(s2 + 2s + 2)/[s(s2 + 2s + 2) + K). 
The root contours of this equation when K varies are drawn based on the pole-zero configuration of 
1 
Gr (s)H1 (s) = ( 2 2 2) (7-64) ss + .f+ 
as shown in Fig. 7-1 l(a). Next, we let K be fixed and consider that Tis the variable parameter. 
Dividing both sides of Eq. (7-62) by the terms that do not contain T, we get 
Ts2(s2 + 2s + 2) 
1 + TG2(s)H2(s) = 1 + ( 2 2 ?) K = 0 (7-65) ss + s+ ... + 
The root contours when T varies are constructed based on the pole-zero configuration of 
G2(s)H2(s). When T = 0, the points on the root contours are at the poles of G2(s)H2(s), which are 
on the root contours of Eq. (7-63). When T = oo. the roots of Eq. (7-62) are at the zeros of 
G2(s)H2(s), which are at s = 0, 0, -1 +j. and -1 -j. Figure 7-1 l(b) shows the pole-zero 
configuration of G2(s)H2(s) for K = 10. Notice that G2(s)H2(s) has three finite poles and four 
finite zeros. The root contours for Eq. (7-62) when Tvaries are shown in Figs. 7-12, 7-13. and 
7-14 for three different values of K. 
j(J) 
0--T 
(J 
Figure 7-12 Root contours for s(1 + Ts)(s2 + 2s + 2) + K = 0. K > 4. 
7-5 Root Contours (RC): Multiple-Parameter Variation ~ 397 
0-T 
0-T .r-plane Figure 7-13 Root contours for 
s(l + Ts)(s2 + 2~ + 2) + K = 0. 
K=0.5 . 
Figure 7--14 Root contours for 
s(l + Ts)(s2 + 2s + 2) + K = 0. K < 0.5. 
The root contours in Fig. 7-13 show that when K = 0.5 and T = 0.5, the characteristic equation in 
Eq. (7-62) has a quadruple root at s = -1. 
Toolbox 7-5-2 
M4TLAB statements for Example 7-5-2 
%T= 0 
nurn=[l]; den=conv( [1 O] , conv( [O 1], [ 1 2 2])); 
mysys=tf(num,den); 
subplot(2,2,l)irlocus(mysys); 
%k>4 
for k=4:10; 
num=conv([l O OJ, [1 2 2]) ;den=conv([l OJ 1 [1 2 2]); 
den=den+k; 
mysys=tf(num,den); 
subplot(2,2,2);rlocus(rnysys); 
end; 
k=0.5; 
num=conv( [1 0 O], [1 2 2]); den= conv( [1 OJ, [1 2 2]); 
den=den+k; 
mysys=tf(num,den); 
398 ~ Chapter 7. Root Locus Analysis 
subplot(2,2,3) 
rlocus(mysys); 
%k<0.5 
for k=-100 :O. 5; 
num=conv( [1 0 OL [l 2 2]); den=conv( [1 OJ, (1 2 21); 
den=den+k; 
mysys~tf(num,den); 
subplot(2,2,4);rlocus(mysys); 
end; 
: · EXAMPLE 7-5-3 As an example to illustrate the effect of the variation of a zero of G(s)H(s). consider the function 
The characteristic equation is K(l + Ts) 
G(s)H(s) = s(s + 1 )(s + 2) (7-66) 
s(s + J)(s + 2) + K(l +Ts)= 0 (7-67) 
Let us first set T to zero and consider the effect of varying K. Eq. (7-67) becomes 
s(s + l)(s + 2) + K == 0 (7-68) 
This leads to 1 
G1 (s)Hi (s) = ( I)( 2) s s+ s+ (7-69) 
The root contours ofEq. (7~68) are drawn based on the poJe .... zero configuration ofEq. (7-69), and are 
shown in Fig. 7-15. 
When the K is fixed and nonzero. we divide both sides of Eq. (7-67) by the tenns that do not 
contain T, and we get 
TKs 
1 + TG2(s)H2(s) = 1 + ( I)( l) K = 0 ss+ s+ + (7-70) 
The points that correspond to T = 0 on the root contours are at the poles of G2 ( s )H2 ( s) or the zeros 
of s(s + 1)(s + 2) + K, whose root contours are sketched as shown in Fig. 7~15 when K varies. 
If we choose K = 20 just as an illustration, the pole-zero configuration of G2(s)H2(s) is shown in 
Fig. 7-16. The root contours of Eq. (7-67) for O s T < oo are shown in Fig. 7 -17 for three different 
values of K. 
s~plane 
oo-K K=O 
• X -2 
figure 7-15 Root loci for 
s(s + l)(s + 2) + K :=: 0. 
7-5 Root Contours (RC): Multiple-Parameter Variation ~ 399 
j(I) 
s~plane 
K=20 
-3.85 -2 -I a 
0.425 ~ j2.235 Figure 7-16 Pole-zero configuration ~= 5° of G2(s)H2{.r) ~ Ks/[s(s + l) 
(s + 2)+K]. K = 20. 
s-plane 
Asymptote of __ .., 
K=20 
T=20 
--4 -3.85 root contours 
-2 
Root contour 
on real axis 
Figure 7~17 Root contours of s(s + l)(s + 2) + K + KTs = 0. 
400 Chapter 7. Root Locus Analysis 
Toolbox 7-5-3 
MATI.AB statementsfor Fig. 7-17 
Same results as Fig. 7-17 can be obtained by using the following MATLAB statements: 
fork= [3 6 20]; 
num=[k OJ; 
den=conv( [1 OJ, conv( [1 1], (1 2J)); 
den=den+k; 
mysys=tf(nwn,den); 
rlocus(mysys); 
axis([-4 4 -10 10]); 
hold on 
end; 
Because G2(s)H2(s) has three poles and one zero, the angles of the asymptotes of the root contours 
when T varies are at 90° and -90°. We can show that the intersection of the asymptotes is always at 
s = 1.5. This is because the sum of the poles of G2 (.Y )H2 (s ), which is given by the negative of the 
coefficient of the s2 term in the denominator polynomial of Eq. (7~ 70), is 3; the sum of the zeros of 
G2(s)H2(s) is 0; and n-m in Eq. (7-30) is 2. 
The root contours in Fig. 7-17 show that adding a zero to the loop transfer function generally 
improves the relative stability of the closed-loop system by moving the characteristic equation roots 
toward the left in the s-plane. As shown in Fig. 7-17, for K = 20, the system is stabilized for an values 
of T greater than 0.2333. However, the largest relative damping ratio that the system can have by 
increasing T is only approximately 30 percent. 
7-6 MATLAB TOOLS AND CASE STUDIES 
7-7 SUMMARY Apart from the MATLAB toolboxes appearing in this chapter, this chapter does not 
contain any software because of its focus on theoretical development. In Chapter 9, 
when we address more complex control system modeling and analysis, we will 
introduce the Automatic Control Systems MATLAB tools. The Automatic Control 
Systems software (ACSYS) consists of a number of m-files and GUis (graphical user 
interface) for the analysis of simple control engineering transfer functions. It can be 
invoked from the MATLAB command line by simply typing Acsys and then by clicking 
on the appropriate pushbutton. A specific MATLAB tool has been developed for most 
chapters of this textbook. Throughout this chapter, we have identified subjects that 
may be solved using ACSYS. with a box in the left margin of the text titled 
"MATLAB TOOL." 
In this chapte1·s, we iuLrm.lucr:d the root-locus technique for linear continuous data control systems. 
The technique represents a graphical method of investigating the roots of the characteristic 
equation of a linear time-invariant system when one or more parameters vary. In Chapter 9 the 
root-locus method will be used heavily for the design of control systems. However, keep in mind 
that, although the characteristic equation roots give exact indications on the absolute stability of 
linear SISO systems. they give only qualitative information on the relative stability, since the zeros 
Review Questions 401 
of the closed-loop transfer function, if any, play an important role in the dynamic performance of 
the system. 
The root-locus technique can also be applied to discrete-data systems with the characteristic 
equation expressed in the z-transform. As will be shown in Appendix H. the properties and 
construction of the root loci in the z-plane are essentially the same as those of the continuous­
data systems in the s-plane, except that the interpretation of the root location to system per­
formance must be made with respect to the unit circle Jzl = 1 and the significance of the regions in 
the z-plane. 
The majority of the material in this chapter is designed to provide the basics of constructing 
the root loci. Computer programs, such as the MATLAB Toolboxes used throughout this chapter, 
can be used to plot the root loci and provide details of the plot. The final section of Chapter 9 deals 
with the root-locus tools of MATLAB. However. the authors believe that a computer program can be 
used only as a tool, and the intelligent investigator should have a thorough understanding of the 
fundamentals of the subject. 
The root-locus technique can also be applied to linear systems with pure time delay in the system 
loop. The subject is not treated here, since systems with pure time delays are more easily treated with 
the frequency-domain methods discussed in Chapter 8. 
REVIEW QUESTIONS 
The following questions and true-and-false problems all refer to the equation P(s) + KQ(s) == O. 
where P(s) and Q(s) are polynomials of s with constant coefficients. 
1. Give the condition from which the root loci are constructed. 
2. Detennine the points on the complete root loci at which K = 0, with reference to the poles and 
zeros of Q(s)/ P(s). 
3. Determine the points on the root loci at which K = ±oo, with reference to the poles and zeros of 
Q(s)/P(s). 
4. Give the significance of the breakaway points with respect to the roots of P(s) + KQ(s} == 0. 
5. Give the equation of intersect of the asymptotes. 
6. The asymptotes of the root loci refer to the angles of the root loci 
when K = ±oo. (T) (F) 
7. There is only one intersect of the asymptotes of the complete root loci. (T) (F) 
8. The intersect of the asymptotes must always be on the real axis. (T) (F) 
9. The breakaway points of the root loci must always be on the real axis. (T) (F) 
10. Given the equation I + KG1 (s)H1 (s) = 0, where Gr (s)H1 (s) is a rational function 
of .i; and does not contain K. the roots of dG1 (s)H1 (s)/ds are all breakaway points 
on the root loci (-oo < K < oo ). (T) (F} 
11. At the breakaway points on the root loci, the root sensitivity is infinite. (T) (F) 
12. Without modification. all the rules and properties for the construction of root loci in the s-plane 
can be applied to the construction of root loci of discrete-data systems in the z-plane. (T) (F) 
13. The detennination of the intersections of the root loci in the s-plane with the jw-axis can be 
made by solving the auxiliary equatiou of Routh ts tabulation of the equation. (T) (F) 
14. Adding a pole to Q(s) / P(s) has the general effect of pushing the root loci to the right, whereas 
adding a zero pushes the loci to the left. (T) (F) 
Answers to these true-and-false questions can be found on this book's companion Web site: 
www.wiley.com/college/golnaraghi. 
102 > Chapter 7. Root Locus Analysis 
,,, REFERENCES 
Jeneral Subjects 
1. W.R. Evans ... Graphical Analysis of Control Systems," Trans. AIEE, Vol. 67, pp. 548-551, 1948. 
2. W.R. Evans. ••control System Synthesis by Root Locus Method," Trans. AIEE. Vol. 69, pp. 66-69. 1950. 
3. W.R. Evans. Control System Dynamics. McGraw-Hill Book Company. New York. 1954. 
:onstruction and Properties of Root Loci 
4. C. C. MacDuff. Theory of Equations. pp. 29-104. John Wiley & Sons, New York, 1954. 
5. C. S. Lorens and R. C. Titsworth, "Properties of Root Locus Asymptotes," IRE Trans. Automatic Control, 
AC-5, pp. 71-72, Jan. 1960. 
6. C. A. Stapleton, "On Root Locus Breakaway Points," IRE Trans. Automatic Control. Vol. AC-7, pp. 88-
89, April 1962. 
7. M. J. Remec, ··saddle~Points of a Complete Root Locus and an Algorithm for Their Easy Location in the 
Complex Frequency Plane," Proc. Natl. Electronics Con{., Vol. 21, pp. 605-608, 1965. 
8. C. F. Chen, ''A New Rule for Finding Breaking Points of Root Loci Involving Complex Roots.'' IEEE Trans. 
Automatic Control, AC-10, pp. 373-374, July 1965. 
9. V. Krishran1 "'Semi-Analytic Approach to Root Locus," IEEE Trans. Automatic Control, Vol. AC-I 1, 
pp. 102-108, Jan. 1966. 
10. R. H. Labounty and C. H. Houpis, "'Root Locus Analysis of a High-Grain Linear System with Variable 
Coefficients: Application of Horowitz's Method," IEEE Trans. Automatic Control. Vol. AC-I I, 
pp. 255-263, April 1966. 
11. A. Fregosi and J. Feinstein, "Some Exclusive Properties of the Negative Root Locus," IEEE Trans. 
Automatic Control. Vol. AC-14. pp. 304-305. June 1969. 
~nalytical Representation of Root Loci 
loot Sensitivity 
PROBLEMS 12. G. A. Bendrikov and K. F. Teodorchik, ''The Analytic Theory of Constructing Root Loci,'' Automation and 
Remote Control, pp. 340-344. March 1959. 
13. K. Steiglitz ... Analytical Approach lo Root Loci.'' IRE Trans. Automatic Control, Vol. AC-6, pp. 326-332, 
Sept. 1961. 
14. C. Wojcik, ··Analytical Representation of Root Locus," Trans. ASME.J. Basic Engineering. Ser. D. Vol. 86, 
March 1964. 
15. C. S. Chang. "An Analytical Method for Obtaining the Root Locus with Positive and Negative Gain," IEEE 
Trans. Automatic Control, Vol. AC-10, pp. 92-94. Jan. 1965. 
16. B. P. Bhattacharyya, ''Root Locus Equations of the Fourth Degree." lnterna. ]. Control, Vol. I. No. 6, 
pp. 533-556. 1965. 
17. J. G. Truxal and M. Horowitz, ··sensitivity Consideration in Active Network Synthesis." Proc. Second 
Midwest Symposium on Circuit Theory, East Lansing, Ml, 1956. 
18. R. Y. Huang, "The Sensitivity of the Poles of Linear Closed-Loop Systems," IEEE Trans. Appl. Ind., 
Vol. 77, Part 2, pp. 182-187, Sept. 1958. 
19. H. Ur. ''Root Locus Properties and Sensitivity Relations in Control Systems," IRE Trans. Automatic 
Control, Vol. AC-5, pp. 58-65. Jan. 1960. 
7-1. Find the angles of the asymptotes and the intersect of the asymptotes of the root loci of the 
following equations when K varies from --x to oo. 
(a) s4 + 4s3 + 4s2 + (K + 8}s + K = 0 
(c) s2 + K(s3 + 3s2 + 2s + 8) = 0 
(e) s5 + 2s4 + 3s-; + K(s2 + 3s + 5) = 0 (b) s3 + 5s2 + ( K + 1 )s + K = 0 
(d) s3 + 2s2 + 3.r + K (s2 -1) (s + 3) = 0 
(f) s4 + 2s2 + 10 + K(s + 5) = 0 
7-2. Use MATLAB to solve Problem 7-1. 
7-3. Show that the asymptotes angles are 
( 8; = (2i + I) X 180° K > 0 In-ml 
ei = _J3Q_ x 1 so° K < o ln-m\ 
7-4. Prove that the asymptotes center is 
E finite poles ofG(s)H(s) -L finite zetos ofG(s)H(s) a,= n-m 
7-5. Plot the asymptotes for K > 0 and K < 0 for 
K GH= .., s(s + 2)(s .. + 2s + 2) Problems 403 
7-6. For the loop transfer functions that follow, find the angle of departure or arrival of the root loci 
at the designated pole or zero. 
Ks 
(a) G(s)H(s) = (s + l)(s2 + 1) 
Angle of arrival (K < 0) and angle of departure (K > 0) at s = j. 
Ks 
(b) G(s)H(s) = (s -I )(s2 + 1) 
Angle of arrival (K < 0) and angle of departure (K > O) at s = j. 
K 
(c) G(s)H(s) = s(s + 2)(s2 + 2s + 2) 
Angle of departure (K > 0) at s = -1 + j. 
K 
(d) G(s)H(s) = s2(s2 + 2s + 2) 
Angle of departure (K > O) at s = -1 + j. 
. _ K (s2 + 2s + 2) 
(e) G(s)H{s) -"( 2)( ) s-s+ s+3 
Angle of arrival (K > 0) at s ;:=: -1 + j. 
7-7. Prove that: 
(a) the departure angle of the root locus from a complex po]e is 9n = 180° -argGH; where argGH1 
is the phase angle of GH at the complex polet ignoring the effect of that pole. 
(b) the arrival angle of the root locus at the complex zero is 00 = 180° -argGH'[ where 
argGH" is the phase angle of GH at the complex zero, ignoring the contribution of that 
particular zero. 
7-8. Find the angles of departure and arrival for all complex poles and zeros of the open-loop 
transfer function of 
G(s)H(s) = K(sl + 2s + 2) K > 0 
s(s2 + 4) 
7-9. Mark the K:::; 0 and K = ±oo points and the RL and complementory root foci (CRL) on the 
real axis for the pole-zero configumtions shown in Fig. 7P-9. Add arrows on the root loci on the real 
axis in the direction of increasing K. 
104 ;f' Chapter 7. Root Locus Analysis 
s-plane .r-plane 
X j 
0 (1 
-j 
(a) (b) 
jm ._ 
s-plane s-plane 
X j2.5 0 j 
-I 
-4 -3 -2 -1 0 (j 
0 -j 
(c) (d) 
Figure 7P-9 
7-10. Prove that a breakaway a satisfies the fo11owing: 
n 1 m I E-=L-
i=1 a + P; i= 1 a+ Z; 
7-11. Find all the breakaway points of the root loci of the systems described by the pole-zero 
configurations shown in Fig. 7P-9. 
7-12. Construct the root-locus diagram for each of the following control systems for which the poles 
and zeros of G(s)H(s) are given. The characteristic equation is obtained by equating the numerator of 
1 + G(s)H(s) to zero. 
(a) Poles at 0, -5, -6; zero at -8 
(b) Poles at 0, -lJ -3, -4; no finite zeros 
(c) Poles at 0, 0,, -2, -2; zero at -4 
(d) Poles at 0, -1 + j, -1 -j; zero at -2 
(e) Poles at 0, -1 + j, -1 -j; zero at -5 
(f) Poles at 0, -1 + j, -1 -j; no finite zeros 
(g) Poles at O* 0, -8, -8; zeros at -4, -4 
(h) Poles at 0, 0, -8, -8; no finite zeros 
(i) Poles at 0, 0, -8, -8; zeros at -4 + j2, -4 -j2 
(j) Poles at -2, 2; zeros at 0, 0 
(k) Poles at j, -j, )2, -j2; zeros at -2, 2 
(I) Poles atj., -j,J2, -j2; zeros at -1~ 1 
(m) Poles at 0, 0, 0, I; zeros at -1, -2, -3 
(n) Poles at 0, 0, 0, -100, -200; zeros at -5, -40 
(o) Poles at 0, -1, -2; zero at 1 
7-13. Use MATLAB to solve Problem 7-12. 
7-14. The characteristic equations of linear control systems are given as follows. Construct the root 
loci for K ~ 0. 
(a) s3 + 3s2 + (K + 2)s + 5K = 0 
(b) s3 + s2 + (K + 2)s + 3K = 0 
(c) s3 + 5Ks2 + 10 = 0 
{d) s4 + (K + 3 )s3 + {K + 1 )s2 + (2K + 5) + 10 = 0 
(e) s3 + 2s2 + 2s + K(s2 -l)(s + 2) = 0 
(f) s3 -2s+K(s+4)(s+ 1) = 0 
(g) i + 6s3 + 9s2 + K(s2 + 4s + 5) = O 
(h) s3 + 2s2 + 2s + K(s2 -2) (s + 4) = 0 
(i) s(s2 -I) + K(s + 2)(s + 0.5) = 0 
(j) s4 + 2s3 + 2s2 + 2Ks + SK = 0 
(k) s5 + 2s4 + 3s3 + 2s2 + s + K = 0 
7-15. Use MATLAB to solve Problem 7-14. Problems -i 405 
7-16. The fmward-path transfer functions of a unity-feedback control system are given in the following: 
(a) G(s) - K(s + 3) (b) G(s) = K 
-s(s2 + 4s + 4)(s + 5)(s + 6) s(s + 2)(.r + 4)(s + 10) 
(c) G(s} = K(s2 + 2s + 8) (d) G(s) = K(s2 + 4) 
s(s + 5)(s + 10) (s + 2)2(s + 5)(s + 6) 
( ) G{ ) K(s + 10) 
e s = s2(s + 2.S)(.r2 + 2.r + 2) K 
(f) G(s) = -(s_+_I_)(_s2 ..... +-4s_+_5_) 
K(s + 2) 
(g) G(s) = (s + I)(s2 + 6s + 10) (h) G(s) = K(s + 2)(s + 3) 
s(s + I) 
(i) G(s) = s(s2 +: + 5) 
Construct the root loci for K ~ 0. Finrl the value of K that makes the relative damping ratio of the 
closed-loop system (measured by the dominant complex characteristic equation roots) equal to 
0.707, if such a solution exists. 
7-17. Use MATLAB to verify your answer to Problem 7-16. 
7-18. A unity-feedback control system has the forward~path transfer functions given in the 
following. Construct the root locus diagram for K 2:: 0. Find the values of K at all the breakaway 
points. 
K (a) G(s) =----­s(s + to)(s + 20) 
(c) G(s) = K(s -0.5) 
(s -1)2 
I K(s+3)(s+ I) 
(e) G(s} = ---=1 --
s(s + 2)(s -I) K 
(b) G(s) = .-s(s-+-l)-(s_+_3_)(-s· +-5) 
K 
(d) G(s) = (.t + 0.5)(.s -1.5) 
K 
(f) G(s) = s(s2 + 6s + 25) 
7-19. Use MATLAB to verify your answer to Problem 7-18. 
7-20. The forward-path transfer function of a unity-feedback control system is 
G(s) -K -(s+4)" 
Construct the root loci of the characteristic equation of the closed-loop system for K ~ oo, with 
(a) n =;: 1 ~ (b) n. = 2~ (c) n = 3, (d) n = 4, and (e) n -5. 
7-21. Use MATLAB to solve Problem 7-20. 
7 .. 22. The characteristic equation of the control system shown in Fig. 5P-16 when K = 100 is 
.v3 + 25s2 + (lOOK, + 2)s + 100 = 0 
Construct the root loci of the equation for K1 ~ 0. 
io6 Chapter 7. Root Locus Analysis 
7-23. Use MATLAB to verify your answer to Problem 7-22. 
7-24. The block diagram of a control system with tachometer feedback is shown in Fig. 7P-24. 
(a) Construct the root loci of the characteristic equation for K 2 0 when Kr= 0. 
(b) Set K = 10. Construct the root loci of the characteristic equation for K1 2 0. 
R(s) E(s) 
K Y(s) 
s2cs + 5) 
K,s 
Figure 7P-24 
7-25. Use MATLA B to solve Problem 7-24. 
7-26. The characteris tic equation of the de-motor control system described in Problems 4-49 and 
5-40 can be approximated as 
2.05hs3 + (1 + I0.25h)s2 + 116.84s + 1843 = 0 
when KL = oo and the load inertia J L is considered a,;; a variable paramete r. Construct the root loci 
of the characteristic equation for h 2:: 0. 
7-27. Use MATLA B to verify your answer to Problem 7-26. 
7-28. The forward-path transfer function of the control system shown in Fig. 7P-24 is 
G(s) = K(s + :)(s + 3) 
s(s~ -1) 
(a) Construct the root loci for K 2:: 0 with a = 5. 
(b) Construct the root loci for a 2 0 with K = 10. 
7-29. Use MATLAB to solve Problem 7-28. 
7-30. The forward-path transfer function of a control system is 
(a) Construct the root loci for K 2 0. G(s) = K(s + 0.4) 
s2(s + 3.6) 
(b) Use MATLAB to verify your answer to part (a). 
7-31. The characteristic equation of the liquid-level control system described in Problem 5-42 is 
written 
0.06.s(s + l2.5)(As + K0) + 250N = 0 
(a) For A = K0 = 50, construct the root loci of the characteristic equation as N varies from Oto oc. 
(b) For N = 10 and K, = 50, construct the ruot loci of the characteristic equation for A 2 0. 
(c) For A = 50 and N = 20, construct the root loci for K0 2: 0. 
7-32. Use MATLAB Lo solve Problem 7-31. 
7-33. Repeat Problem 7-31 for the following cases. 
(a) A =Ko= 100 (b) N = 20 and K0 = 50 (c) A= 100 and N = 20 
7-34. Use MATLAB to verify your answer to Problem 7-33. 
7-35. The forward-path transfer function of a unity-feedback system is 
G(s) = K(s + 2)2 " 
(s2 + 4)(s + St 
(a) Construct the root loci for K = 25. 
{b) Find the range of K value for which the system is stable. 
(c) Use MATLAB to verify your answer to part (a). 
7-36. The transfer functions of a single-feedback-loop control system are 
K 
G(s) = 'Jr I)( S) H(s) = 1 
S""1ls+ s+ 
(a) Construct the loci of the zeros of 1 + G(s) for K ~ 0. 
(b) Repeat part (a) when H(s) = 1 + 5s. 
7-37. Use MATLAB to solve Problem 7-36. 
7-38. The forward-path transfer function of a unity-feedback system is 
Ke-n 
G(s) =--s+ t 
(a) Construct the root loci for T = 1 sec and K > 0. 
(b) Find the values of K where the system is stable. 
(c) Use MATLAB to verify your answer to part (a). 
7-39. The transfer functions of a single-feedback~Ioop control system are 
10 
G(s) = 2( I)( 5) H(s) = 1 + Tds s s+ s+ 
(a) Construct the root loci of the characteristic equation for Ti1 ~ 0. 
(b) Use MATLAB to verify your answer to part (a). Problems 407 
7 .. 40. For the de-motor control system described in Problems 4-49 and 5-40, it is of interest to study 
the effects of the motor-shaft compliance KL on the system performance. 
(a) Let K = 1. with the other system parameters as given in Problems 4 .. 49 and 5 .. 40, Find an 
equivalent G(s)H(s) with K1. as the gain factor. Construct the root loci of the characteristic equation 
for KL ~ 0. The system can be approximated as a fourth-order system by canceling the large negative 
pole and zero of G(s)H(s) that are very close to each other. 
(b) Repeat part (a) with K = 1000. 
7 .. 41. Use MATLAB to verify your answer to Problem 7-40. 
7-42. The characteristic equation of the de-motor control system described in Problems 4-49 and 
5-40 is given in the following when the motor shaft is considered to be rigid (KL = oo ). Let K = I .. 
1111 = 0.001, La = 0.001; n = 0.1, Ra = 5, Ki = 9, Kb = 0.0636, Bm :::::: 0, and Ks = 1. 
L,r (lm + n2 Ji)i + {Ralm + n2RoiL + Bmla)s2 + (RaBm + KiKb)s + nK.;K;K = 0 
{a) Construct the root loci for h ~ 0 to show the effects of variation of the load ine11ia on system 
pe1fonnance. 
(b) Use MATLAB to verify your answer to part (a). 
7-43. Given the equation sJ + as2 +Ks+ K = 0, it is desired to investigate the root loci of this 
equation for -oo < K < oo and for various values of a. 
(a) Construct the root Joci for -oo < K <: oc when a = 12. 
(b) Repeat part (a) when a= 4. 
(c) Determine the value of o. so that there is only one nonzero breakaway point on the entire root Joci 
for -oo < K < oo. Construct the root loci. 
J08 Chapter 7. Root Locus Analysis 
7-44. Use MATLAB to solve Problem 7-43. 
7-45. The forward-path Lransfer function of a unity-feedback control system is 
K(s + a) 
G(s) = s2(s + 3) 
Determine the values of Cl so that the root loci (-oo < K < oo) will have zero, one, and two 
breakawa y points, respectively, not including the one at s = 0. Construct the root loci for 
-oo < K < x for all three cases. 
7-46. Fig. 7P-46 shows the block diagram of a unity-feedback control system. 
Design a proper controller H(s) for the system. 
X :9 ·I H(s) ~1 G(s)e-Ts I 
I ~ y 
Figure 7P-46 
7-47. The pole-zero configuration of G(s)H(s) of a single-feedback-loop control system is shown 
in Fig. 7P-4 7 (a). Without actually plotting, apply the angle-of-departure ( and -arrival) property of the 
root loci to determine which root-locus diagram shown is the correct one. 
s-plane j(J) 
0 )12 
jlO 
-JIO 
-}12 (j 
(a) Pole-zero configuration 
s-plane j(J) 
K== 
K=O 
oo-K 
0 (j 
K=O 
K=oo 
(d) 
Figure 7P-47 s-plane jco 
K== 
K=O 
=-K K=O 
0 
K=O 
K== 
(b) 
s-plane j(J) 
K== 
K=O 
=-K K=O 
0 
K=O 
K== 
(e) s-plane 
K== 
K=O 
=-K K=O 
(j 0 (j 
K=O 
K== 
(c) 
s-plane 
K== 
K=O 
=-K 
a 0 a 
K=O 
K== 
(0 
.CHAPTER ·8 
Frequency-Domain Analysis 
8-1 INTRODUCTION 
The basic concepts and background material for this subject appear in Chapter 2. In practice, the 
perfonnance of a control system is more realistically measured by its time-domain character ­
istics. The reason is that the pe1fonnance of most control systems is judged based on the time 
responses due to certain test signals. This is in contrast to the analysis and design of 
communication systems for which the frequency response is of more impo1tance , since 
most of the signals to be processed are either sinusoidal or composed of sinusoidal components . 
We learned in Chapter 5 that the time response of a control system is usually more difficult to 
determine analytically , especially for high-order systems. In design problems, there are no 
unified methods of aniving at a designed system that meets the time-domain perfonnance 
specifications, such as maximum overshoot, rise time, delay time, settling time, and so on. On 
the other hand, in the frequency domain, there is a wealth of graphical methods available that are 
not limited to low-order systems. It is importan t to realize that there are correlating relations 
between the frequency-domain and the time-domain performanc es in a linear system, so the 
time-domain properties of the system can be predicted based on the frequency-domain 
characteristics. The frequency domain is also more convenient for measurements of system 
sensitivity to noise and parameter variations. With these concepts in mind, we consider the 
primary motivation for conducting control systems analysis and design in the frequency domain 
to be convenience and the availability of the existing analytical tools. Another reason is that it 
presents an alternative point of view to control-system problems , which often provides valuable 
or crucial information in the complex analysis and design of control systems. Therefore, to 
conduct a frequency-domain analysis of a linear control system does not imply that the system 
will only be subject to a sinusoidal input. It may never be. Rather, from the frequency-response 
studies, we will be able to project the time-domain performance of the system. 
The starting point for frequency-domain analysis of a linear system is its transfer 
function. It is well known from linear system theory that when the input to a linear time­
invariant system is sinusoidal with amplitude R and frequency wo, 
r(t) = RsinUJot (8-1) 
the steady-state output of the system, y(t), will be a sinusoid with the same frequency w0 
but possibly with different amplitude and phase; that is, 
y(t) = Ysin((vot + rp) (8-2) 
where Y is the amplitude of the output sine wave and ¢ is the phase shift in degrees or 
radians. Let the transfer function of a linear SlSO system be M(s); then the Laplace 
transforms of the input and the output are related through 
Y(s) = M(s)R(s) (8-3) 
409 
410 Chapter 8. Frequency-Domain Analysis 
For sinusoidal steady-state analysis, we replace s by jw, and the last equation becomes 
Y(jw) = M(jw)R(jw) (8-4) 
By writing the function Y(jw) as 
Y(jw) = IY(jw)ILY(jw) (8-5) 
with similar definitions for M(jw) and R(jw), Eq. (8-4) leads to the magnitude relation 
between the input and the output: 
[Y(jw)J = [M(jw)][R(jw)[ (8-6) 
and the phase relation: 
LY(jw) = LM(jw) + LR(jw) (8-7) 
Thus, for the input and output signals described by Eqs. (8-1) and (8-2), respectively, the 
amplitude of the output sinusoid is 
Y = RJM(jwo)[ (8-8) 
and the phase of the output is 
</J = LM (jwo) (8-9) 
Thus, by knowing the transfer function M(s) of a linear system, the magnitude character­
istic, IM(jw)I, and the phase characteristic~ LM(jw), completely describe the steady-state 
performance when the input is a sinusoid. The crux of frequency-domain analysis is that the 
amplitude and phase characteristics of a closed-loop system can be used to predict both 
time-domain transient and steady-state system performances. 
a .. 1 .. 1 Frequency Response of Closed .. Loop Systems 
For the single-loop control-system configuration studied in the preceding chapters, the 
closed-loop transfer function is 
M r _ Y(s) _ G(s) 
(.) -R(s) -1 + G(s)H(s) (8-10) 
Under the sinusoidal steady state, s = jw, Eq. (8-10) becomes 
. Y(jw) G(jw) 
M(Jw) = R(jw) = 1 + G(jw)H(jw) (8-11) 
The sinusoidal steady-state transfer function M(jw) may be expressed in terms of its 
magnitude and phase; that is, 
M(jw) = IM(jw)[!'.M(jw) 
8-1 Introduction 411 
IM(jco)l .i~ 
0 
0 (J) 
Figure 8-1 Gain-phase characteristics of 
an ideal low-pass filter. 
Or M(jw) can be expressed in terms of its real and imaginary paits: 
M(jro) = Re[M(jw)] + jlm(M(jw)] (8-13) 
The magnitude of M(jw) is 
. I G(jw} I [G(jw)I 
IM(Jw)I = 1 + G(jro)H(jw) = Jl + G(jw)H(jw)I (8-14) 
and the phase of M(jw) is 
LM(jw) = q,M( jw) = LG(jw) -L[l + G(jw)H( jw)] (8-15) 
If M(s) represents the input-output transfer function of an electric filter, then the 
magnitude and phase of M(jw) indicate the filtering characteristics on the input signal. 
Fig. 8-1 shows the gain and phase characteristics of an ideal low-pass filter that has a 
sharp cutoff frequency at We. It is well known that an ideal filter characteristic is 
physically unrealizable. In many ways, the design of control systems is quite similar to 
filter design, and the control system is regarded as a signal processor. In fact, if the ideal 
low-pass-filter characteristics shown in Fig. 8-1 were physicaily realizable, they would 
be highly desirable for a control system, since all signals would be passed without 
distortion below the frequency We, and completely eliminated at frequencies above w,. 
where noise may lie. 
If w, .. is increased indefinitely, the output Y(jcv) would be identical to the input R(jw) 
for all frequencies. Such a system would follow a step-function input in the time domain 
exactly. From Eq. (8-14). we see that, for IM(Jw)J to be unity at all frequencies, the 
magnitude of G(jw) rnust be infinite. An infinite magnitude of G(jw) is, of course, 
impossible to achieve in practice, nor would it be desirable, since most control systems may 
become unstable when their loop gains become very high. Furthermore, all control systems 
are subject to noise during operation. Thus, in addition to responding to the input signal, the 
system should be able to reject and suppress noise and unwanted signals. For control 
systems with high .. frequency noise, such as air-frame vibration of an aircraft, the frequency 
response should have a finite cutoff frequency we-
The phase characteristics of the frequency response of a control system are also of 
importance, as we shall see that they affect the stability of the system. 
412 .,, Chapter 8. Frequency-Domain Analysis 
l 
0.707 
0 
0 I 
I 
I 
I ________ _! ______ _ 
I 
I 
I 
I 
I 
BW 
(J) 
Figure 8-2 Typical gain-phase 
characteristics of a feedback 
control system. 
Fig. 8-2 illustrates typical gain and phase characteristics of a control system. As 
shown by Eqs. (8-14) and (8-15), the gain and phase of a closed-loop system can be 
determined from the forward-path and loop transfer functions. In practice, the frequency 
responses of G(s) and H(s) can often be determined by applying sine-wave inputs to the 
system and sweeping the frequency from O to a value beyond the frequency range of the 
system. 
8-1-2 Frequency-Domain Specifications 
• M,. indicates the relative 
stability of a stable closed­
loop system. In the design of linear control systems using the frequency-domain methods, it is necessary 
to define a set of specifications so that the performance of the system can be identified. 
Specifications such as the maximum overshoot, damping ratio, and the like used in the time 
domain can no longer be used directly in the frequency domain. The following frequency­
domain specifications are often used in practice. 
Resonant Peak Mr 
The resonant peak Mr is the maximum value of JM(jw)I. 
In general, the magnitude of M, gives indication on the relative stability of a stable 
closed-loop system. Normally, a large M, corresponds to a large maximum overshoot of the 
step response. For most control systems, it is generally accepted in practice that the 
desirable value of M, should be between 1.1 and 1.5. 
• BW gives an indication of Resonant Frequency Cc>r 
the transient response The resonant frequency Cc>r is the frequency at which the peak resonance Mr occurs. properties of a control 
!iystem. 
• BW gives an indication of 
the noise-filtering 
characteristics and 
robustness of the system. Bandwidth BW 
The bandwidth BW is the frequency at which IM(ir.,)I drops to 70.7% of, or 3 dB 
down from, its zero-frequency value. 
In general, the bandwidth of a control system gives indication on the transient­
response properties in the time domain. A large bandwidth corresponds to a faster rise time, 
8-2 M,, w,, and Bandwidth of the Prototype Second-Order System :. 413 
since higher-frequency signals are more easily passed through the system. Conversely, if 
the bandwidth is small, only signals of relatively low frequencies are passed, and the time 
response will be slow and sluggish. Bandwidth also indicates the noise-filtering character­
istics and the robustness of the system. The robustness represents a measure of the 
sensitivity of a system to parameter variations. A robust system is one that is insensitive to 
parameter variations. 
Cutoff Rate 
Often, bandwidth alone is inadequate to indicate the ability of a system in distinguishing 
signals from noise. Sometimes it may be necessary to look at the slope of IM(jw)I, which is 
called the cutoff rate of the frequency response, at high frequencies. Apparently, two 
systems can have the same bandwidth, but the cutoff rates may be different. 
The perfonnance criteria for the frequency-domain defined above are illustrated in 
Fig. 8-2. Other important criteria for the frequency domain will be defined in later sections 
of this chapter. 
· 8~2 Mr, Wr, AND BANDWIDTH OF THE PROTOTYPE SECOND-ORDER SYSTEM 
8-2-1 Resonant Peak and Resonant frequency 
For the prototype second-order system defined in Section 5-6, the resonant peak M,., the 
resonant frequency w,., and the bandwidth BW are all uniquely related to the damping ratio 
{ and the natural undamped frequency w11 of the system. 
Consider the closed-loop transfer function of the prototype second-order system 
Y(s) w~ M{s) =-= 2 ., R(s) s + 2{(J)11S + w;; 
At sinusoidal steady state. s = jcv, Eq. (8-16) becomes 
M(jw) = Y(~w) = 0; 
R(1w) (jw)2+2(wn(jw) + w~ 
1 
-1 + j2(w/wn)s -(w/wn)2 
We can simplify Eq. (8-17) by letting u = w/con, Then, Eq. (8-17) becomes 
. 1 M(Ju)=----1 + j2u( --u2 
The magnitude and phase of M(ju) are 
and IM(ju)\ = 1 
J(" 
[ (1 -u2)2 +(2{u)2] -
!M( ju) = <PM( ju) = -tan-1 2{u., 1-w· (8-16) 
(8-17) 
(8-18) 
(8-19) 
(8-20) 
414 ~ Chapter 8. Frequency-Domain Analysis 
• For the prototype second­
order system. MR is a 
function of t only. 
• For the prototype second­
order system. M,. = 1 and w,. 
= 0 when l; ~ 0.707. 
Toolbox 8-2-1 respectively. The resonant frequency is determined by setting the derivative of IM(ju)J 
with respect to u to zero. Thus, 
(8-21) 
from which we get 
4u3 -4u + 8u?;2 = 4u(u2 -I+ 2?;2) = 0 (8-22) 
In normalized frequency, the roots of Eq. (8-22) are Ur= 0 and 
The solution of u, = 0 merely indicates that the slope of the IM( ju) J-versus-w curve is zero 
at w = 0; it is not a true maximum if { is less than 0.707. Eq. (8-23) gives the resonant 
frequency 
Wr = Wn VI -2?;2 (8-24) 
Because frequency is a real quantity, Eq. (8-24) is meaningful only for 2?;2 $ I. or 
?; ::; 0.707. This means simply that, for all values of s greater than 0.707, the resonant 
frequency is Wr = 0 and Mr = I. 
Substituting Eq. (8-23) into Eq. (8-20) for u and simplifying. we get 
Mr= 2?;~ ?; :5 0.707 (8-25) 
It is important to note that, for the prototype second-order system, Mr is a function of the 
damping ratio { only, and Wr is a function of both { and Wn, Furthermore. although talcing 
the derivative of IM{ ju)I with respect to u is a valid method of detennining Mr and Wr, for 
higher-order systems, this analytical method is quite tedious and is not recommended. 
Graphical methods to be discussed and computer methods are much more efficient for 
high-order systems. 
MATLAB statements for Fig. 8-3 
i=l; 
zeta= [O O .1 o. 2 0. 4 0. 6 0. 707 11. 5 2. OJ 
for u=O: 0. 001: 3 
z=li 
M(z,i)=abs(l/(l+(j*2*zeta(z)*u)-(uA2)));z=z+l; 
M(z,i)=abs(l/(l+(j*2*zeta(z)*u)-(uA2)));z=z+l; 
M(z, i)= abs(l/(l+(j*2*zeta(z) iru)-(uA2))); z=z+l; 
M(z,i)=abs(l/Cl+(j*2*zeta(z)*u)-(uA2)));z=z+l; 
M(z,i)=abs(l/(l+(j*2*zeta(z)*u)-(uA2)));z=z+l; 
M(z,i)=abs(l/(l+(j*2*zeta(z)*u)-(uA2)));z=z+li 
M(z,i)=abs(l/(l+(j*2*zeta(z)*u)-(uA2)));z=z+l; 
8-2 Mr, oo,, and Bandwidth of the Prototype Second-Order System ~ 415 
end M(z,i)=abs(l/(1+(j*2*zeta(z)*u)-(uA2)));z=z+l; 
M(z,i)=abs(l/(1+(j*2*zeta(z)*u)-(uA2)));z=z+l; 
i=i+1; 
u:::::O : 0. 001 : 3 ; 
for i = 1: length( zeta) 
plot(u,M(i,: )) ; 
hold on; 
end 
xlabel( 1 \mu= \omega/\omega_n'); 
ylabel(' JM(j\omega)J '); 
ax.is ( [ 0 3 0 6]) ; 
grid 
Fig. 8-3 illustrates the plots of IM( ju)I of Eq. (8-19) versus u for various values of S· 
Notice that, if the frequency scale were unnonnalized, the value of Wr = u,wn would 
increase when~ decreases, as indicated by Eq. (8-24). When f = O. w, = w,l· Figs. 8-4 and 
8-5 illustrate the relationship between Mr and (, and u,(::::: w,./{l)n) and (, respectively. 
0 2 3 
u= Mw,, 
Figure 8-3 Magnification versus nonnalized frequency of the prototype second-order control 
system. 
416 • Chapter 8. Frequency-Domain Analysis 
8-2-2 Bandwidth 5 
2 \ \ \ Mr= 1 
2(-J1 -~2 
~ --4 
3 
I 
1 
I 
I 
I 
0 0.5 0.707 1.0 1.5 2.0 
Damping ratio , 
Figure 8-4 Mr versus damping ratio for the prototype second-order system. 
In accordance with the definition of bandwidth, we set the value of jM(ju)j to 
1/-./291. 0. 707. 
Thus~ 
1.0 
0.8 
~ 0.6 -s ... 
II 
::s'-0.4 
0.2 
0 (8-26) 
[ .., 2 ")] 1/2 ~ (1 -u-) +(2tu)"" = v2 (8-27) 
0.5 0.707 
Damping ralio ( 1.0 Figure 8-5 Normalized resonant frequency versus 
damping ratio -/or the ~rototype second-order 
system. u,. = 1 -2{'"'. 
• BW/w,, decreases 
monotonically as the 
damping ratio ( decreases. 
Toolbox 8-2-2 8-2 M,, <»,, and Bandwidth of the Prototype Second-Order System ·: 417 
which leads to 
(8-28) 
MATLAB staternents for Fig. 8-6 
clear all 
i=l; 
for zetai=O: sqrt (1/2)/100: 1. 2 
M(i.) = sqrt( (1-2*zetaL /\2)+sqrt(4*zetai. /\4-4*zetai. /\2+2)); 
zeta(i)=zetai 
i=i+1; 
end 
TMP _COLOR= 1 ; 
plot(zeta,M); 
xlabel( 1 \zeta'); 
ylabel('BW/\omega_n'); 
axis ( [ 0 1 . 2 0 2] ) ; 
grid 
• BW is directly 
proportional to w11• 
• When a system is 
unstable, M,. no h)nger has 
any meaning. The plus sign should be chosen in the last equation, since u must be a positive real quantity 
for any (. Therefore, the bandwidth of the prototype second-order system is dete1mined 
from Eq. (8-28) as 
(8-29) 
Fig. 8~6 shows a plot of BW /wn as a function of?;. Notice that, as ?: increases, BW /wn 
decreases monotonically. Even more important, Eq. (8-29) shows that BW is directly 
proportional to Wn, 
We have established some simple relationships between the time-domain response and 
the frequency-domain characteristics of the prototype second-order system. The summary 
of these relationships is as follows. 
1. The resonant peak Mr of the closed-loop frequency response depends on { only 
[Eq. (8-25)]. When { is zero. M, is infinite. When { is negative, the system is 
unstable, and the value of M,. ceases to have any meaning. As~ increases, Mr 
decreases. 
2. For (?. 0.707, M,. = 1 (see Fig. 8-4). and w,. = 0 (see Fig. 8-5). In comparison 
with the unit-step time response, the maximum overshoot in Eq. (5-103) also 
depends only on t. However, the maximum overshoot is zero when { 2::: 1. 
3. Bandwidth is directly proportional tow,, [Eq. (8-29)]; that is, BW increases and 
decreases linearly with w11• BW also decreases with an increase in t for a fixed Wn 
418 ..,_ Chapter 8. FrequencywDomain Analysis 
• Bandwidth and rise time 
are inversely proportional to 
each other. 2.0 
1.6 -~ ~ 
~~ 
BW = wJ(l -2~2) + v'4l;4 -4l;2+ 2 ]112 ~ --------l.2 
0.8 
-
0.4 
0 0.2 0.4 0.6 0.8 1.0 1.1 1.2 
Damping ratio ( 
figure 8-6 Bandwidthlwn versus damping ratio for the prototype second-order system. 
(see Fig. 8-6). For the unit-step response, rise time increases as {J)n decreases. as 
demonstrated in Eq. (5-108) and Fig. 5-21. Therefore, BW and rise time are 
inversely proportional to each other. 
4. Bandwidth and Mr are proportional to each other for O ~ ( ~ 0.707. 
The correlations among pole locations, unit-step response, and the magnitude of the 
frequency response for the prototype second-order system are summarized in Fig. 8-7. 
~ 8-3 EFFECTS OF ADDING A ZERO TO THE FORWARD-PATH TRANSFER FUNCTION 
The relationships between the time-domain and the frequency-domain responses arrived at 
in the preceding section apply only to the prototype second-order system described by Eq. 
(8-16). When other second-order or higher-order systems are involved, the relationships 
are different and may be more complex. It is of interest to consider the effects on the 
frequency-domain response when poles and zeros are added to the prototype second-order 
transfer function. It is simpler to study the effects of adding poles and zeros to the closed­
loop transfer function; however, it is more realistic from a design standpoint to modify the 
forward-path transfer function. 
The closed-loop transfer function of Eq. (8-16) may be considered as that of a unity­
feedback control system with the prototype second-order forward-path transfer function 
(J)2 
G(s) - n -s(s + 2?:{J)n) (8-30) 
r(t) 
y(t) 
0.1 --
0 8-3 Effects of Adding a Zero to the Forward-Path Transfer Function .-419 
Pole locations 
Protolype 
second-order system 
oi JI y(t) 
Unit-step response 
I 1-0.4167'(, + 2.917'{,2 
,.__ r, oo m,, As w,, gets larger, 
pole distance from 
origin gets larger. 
As ~ geL~ larger, 
angular distance 
from negarive real 
axis gets smaller. 
IM(jm)I 0<{;.<l 
OdB~-~~-~~----
-3 dB ----------------- ------
Frequency response 
0 jOJ 
1..-----BW -----.<-Plane 
As w,, gets larger, r 7 gets smaller and the system 
responds faster. [ JJ/2 
BW == co11 (] -2'(,2) + V 4'(,4 -4'(,2 + 2 
As /,;gets larger, t,.gets larger and the system 
fCIII)Onds slower. As (1)11 gets larger, BW gets larger. 
As 'C, gets larger, BW gets smaller. 
Bandwidth and rise time are inversely proportional. 
Therefore, the larger the bandwidth is, the faster the system will respond. 
Increasing w,, it1creases BW and decreases r ,. 
Increasing 'C, decreases BW and increases t,. 
Figure 8-7 Correlation among pole locations. unit-step response, and the magnitude 
of frequency response of the prototype second-order system. 
Let us add a zero at s = -I /T to the transfer function so that Eg. (8-30) becomes 
G(s) = w~(l + Ts) 
s(s + 2l;w11) 
The closed-loop transfer function is 
2( ' 
M( ) = w11 l + Ts) 
s 2 ( 2) 2 s + 2l;w 11 + Tw,i s + w11 (8-31) 
(8-32) 
420 IJIJ. Chapter 8. Frequency .. Domain Analysis 
• The general effect of 
adding a zero to the forward­
path transfer function is to 
increase the BW of the 
closed-loop system. In principle, Mr, Wr, and BWofthe system can all be derived using the same steps used 
in the previous section. However, because there are now three parameters in~. Wm and T, 
the exact expression for M,., Wr, and BWare difficult to obtain analytically even though the 
system is still second order. After a length derivation, the bandwidth of the system is found 
to be 
( )I~ 
BW = -b + h/ b2 + 4w~ (8-33) 
where 
b = 4>-2eu2 + 4>-aiT -2w2 -ulT2 
., 11 ., n n n (8-34) 
While it is difficult to see how each of the parameters in Eq. (8-33) affects the 
bandwidth, Fig. 8-8 shows the relationship between BW and Tfor { = 0.707 and Wn = 1. 
Notice that the general effect of adding a zero to the forward-path transfer function is to 
increase the bandwidth of the closed-loop system. 
However, as shown in Fig. 8-8, over a range of small values of T, the bandwidth 
is actually decreased. Figs. 8-9(a) and 8-9(b) give the plots of [M{jw)J of the closed­
loop system that has the G(s) of Eq. (8-31) as its forward-path transfer function: 
w11 = 1; { = 0.707 and 0.2, respectively; and T takes on various values. These curves 
verify that the bandwidth generally increases with the increase ofTby the addition of a 
zero to G(s). except for a range of small values of T, for which BW is actually 
decreased. 
6 
I 
V 5 
/ 
/7 4 
/v 
/ V 2 
~v 
0 2 3 4 5 6 7 
T 
Figure 8~8 Bandwidth of a second-order system with open-loop transfer function 
G(s) = (I + T.Y)/[s(s + 1.414)]. 
l.2 
1.0 
0.8 
0.707 --
'§ 
i 0.6 
0.4 
0.2 
0 
2.8 
2.4 
2.0 
1.6 
i ·~ ! 
1.2 
1.0 
0.8 
0.707 -
0.4 
0 8-3 Effects of Adding a Zero to the Forward-Path Transfer Function ~ 421 
2 
ru (rad/sec) 
(a) 
2 
w(rad/sec) 
(b) G(s)= 1 +Ts s·(s+ 1.414) 
T::.S ------
3 4 
G l+Ts 
{s) = s(s + 0.4) 
r::::s 
3 4 
Figure 8-9 Magnification curves for the second-order syscem with the forward-path transfer 
function G(s) in Eq. (8-32). (a) Wn = lt t = 0.707 (b) Wn = 1. r ::::e 0.2. 
422 ~ Chapter 8. Frequency-Domain Analysis 
Toolbox 8-3-1 
MATI.AB statements for Fig. 8-9(a) 
clear all 
i=l ;T=[S 1. 414 10 .1 O]; zeta=O. 707; 
for w=O: 0. 01: 4 
end t=l; s=j*w; 
M(t, i) = abs((l+(T(t) *s) )/(s"2+(2*zeta+T(t)) *s+l)); t-t+l; 
M(t, i) = abs ( (l+(T(t) *s) )/Cs"2+(2*zeta+T(t)) *s+l)); t=t+l; 
M(t,i) = abs((l+(T(t)*s))/(s"2+(2*zeta+T(t))*s+l)) ;t=t+l; 
M(t ,i) = abs((l+(T(t)*s))/(s"2+(2*zeta+T(t))1~s+1)) ;t=t+l; 
M(t ,i) = abs((l+(T(t)*s))/(s"2+(2*zeta+T(t))*s+l)) ;t=t+l; 
i=i+l; 
W=O : 0 . 01 : 4; 
for i = 1: length(T) 
plot(w,M(i,: )) ; 
hold on; 
end 
xlabel('\omega(rad/sec)');y1abel(' jM(j\omega)I '); 
axis( (0 4 0 1. 2]); 
grid 
MATLAB statements for Fig. 8-9(b) 
clear all 
i=l; 
T= [ 0 0 . 2 5 2 1 0 . 5] ; 
zeta=0.2; 
for w=O: 0. 001: 4 
t=l; 
end s=j*w; 
M(t Ii) -abs( (l+(T(t) ,'ts) )/(s"2+(2*zeta+T(t) )*s+l)); t=t+l; 
M(t, i) = abs((l+(T(t) *s) )/Cs"2+(2*zeta+T(t) )*s+l)); t=t+l; 
M(t ,i) = abs((l+(T(t) *s) )/(s"2+(2*zeta+T(t)) *s+l)); t=t+l; 
M(t, i) = abs((l+(T(t) *s) )/(s"2+(2*zeta+T(t)) *s+l)); t=t+l; 
M(t, i) = abs C (l+(T(t) *s) )/(s"2+(2*zeta+T(t)) *s+l)); t=t+1; 
M(t,i) = abs((l+(T(t)*s))/(s"2+(2*zeta+T(t))*s+1)) ;t=t+1; 
i=i+l; 
w=0:0.001:4; TMP_COLOR= 1; 
for i = 1: length(T) 
plot(w ,M(i, : ) ) ; 
hold on; 
end 
xlabel('\omega(rad/sec)1); 
ylabel(' jM(j\ornega)['); 
axis C [ 0 4 0 2 . 8]) ; 
grid 
Figs. 8-10 and 8-11 show the corresponding unit-step responses of the closed·· 
loop system. These curves show that a high bandwidth corresponds to a faster rise 
time. However, as T become very large, the zero of the closed-loop transfer function, 
which is at s = -1 /T, moves very close to the origin, causing the system to have a largt! 
time constant. Thus, Fig. 8-10 illustrates the situation that the rise time is fast, but the largt~ 
ti.me constant of the zero near the origin of the s-plane causes the time response to drag out 
in reaching the final steady state (i.e., the settling time will be longer). 
8-3 Effects of Adding a Zero to the Forward-Path Transfer Function -Ill 423 
1.2 
1.0 
0.8 
~ 0.6 
G( 1 + Ts s) = s(s + 1.414) 
0.4 
0.2 
0 2 3 4 5 6 7 8 
Time (sec) 
Figure 8-10 Unit-step responses of a second-order system with a forward-path transfer 
function G(s). 
1.2 
T:::;5.0 
1.0 
0.8 
~ 0.6 } r 
f " T= 1.0 
I~ 
0.4 
0.2 
0 ---
2 3 T=2.2 ./ -
G( l + Ts 
s) = s(s +0.4) 
4 
Time(sec) 5 6 7 8 
Figure 8-11 Unit-step responses of a second-order system with a forward-path transfer 
function G(s). 9 
424 ~ Chapter 8. Frequency-Domain Analysis 
Toolbox 8-3-2 
MATLAB statements for Fig. 8-/0 -use clear all, close all, ,md de if necessary 
T==(5 1.414 0 .10 .01 Ol; 
t==0:0.01:9; 
zeta= 0. 70 7; 
for i=l : length CT) 
num=[T(i) 1]; 
den= [1 2*zeta+T(i) 1]; 
M(i,:)=step(num,den,t); 
end 
TMP _COLOR = 1 i 
for i = 1: length(T) 
plot(t ,M(i,: )) i 
hold on; 
end 
xlabel( 1Time'); 
y1abel( 'y(t)'); 
grid 
Toolbox 8-3-3 
MATI.AB statements for Fig. 8-1 I -use clear all. close all, and de if necessat)' 
T=[l 5 0. 2]; 
t==0:0.01:9; 
zeta= 0.2; 
for i=l: length(T) 
num=[T(i) 1]; 
end den= [1 2*zeta+T(i) 1]; 
M(i,:)=step(nwn,den,t); 
for i = 1: length(T) 
plot(t ,M(i,: )) ; 
hold on; 
end 
xlabel ( 'Time' ) ; 
ylabel( 'y(t) '); 
grid 
.-8-4 EFFECTS OF ADDING A POLE TO THE FORWARD-PATH TRANSFER FUNCTION 
Adding a pole at s = -1 /T to the forward-path transfer function of Eq. (8-30) leads to 
• Adding a pole to the 
forward-path transfer (1)2 G(s) = ,, 
s(s + 2{w,z)(l + Ts) (8-35) 
function makes the closed- The derivation of the bandwidth of the closed-loop system with G(s) given in Eq. 
loop system less stable and (8-35) is quite tedious. We can obtain a qualitative indication on the bandwidth properties 
decreases the bandwidth. by referring to Fig. 8-12~ which shows the plots of IM (jw) I versus w for w,, = I. { = 0. 707 t 
Figure 8-12 Magnification 
curves for a third-order 
system with a forward-path 
transfer function G(s). 
Figure 8-13 Unit-step 
response..,:; of a third-order 
system with a forward-path 
transfer function G(s). 3.0 
2.5 
2.0 
i ·-. 1.5 ! 
1.0 
0.707 
0.5 
0 8-4 Effects of Adding a Pole to the Forward-Path Transfer Function ~ 425 
0.5 1.0 
w(rad/sec) 1 
G(s) = s(s + 1.414)( l + Ts) 
1.5 2.0 
and various values of T. Because the system is now of the third order, it can be unstable for a 
certain set of system parameters. It can be shown that, for Wn = 1 and { = 0. 707, the 
system is stable for all positive values of T. The \M (jw) l-versus-w curves of Fig. 8-12 show 
that, for small values of T, the bandwidth of the system is slightly increased by the addition 
of the pole, butMris also increased. When Tbecomes large, the pole added to G(s) has the 
effect of decreasing the bandwidth but increasing Mr. Thus, we can conclude that, in 
general, the effect of adding a pole to the forward-path transfer function is to make the 
closed-loop system less stable while decreasing the bandwidth. 
The unit-step responses of Fig. 8-13 show that, for larger values ofT, T = 1 and T = 5, 
the following relations are observed: 
~ 1. The rise time increases with the decrease of the bandwidth. 
2. The larger values of M,. also correspond to a larger maximum overshoot in the 
unit~step responses. 
1.8 
l.4 
1.0 
0.6 
G(s) = s(s + 1.41~)( 1 + Ts) 
0.2 
0 2 4 6 8 lO 12 14 16 18 
Time (sec) 
426 :,, Chapter 8. Frequency-Domain Analysis 
• When M,. = ,x. the 
closed-loop system is 
marginally stable. When the 
system is unstable, M,. no 
longer has any meaning. 
Toolbox 8-4-1 The correlation between M,. and the maximum overshoot of the step response is 
meaningful only when the system is stable. When G(jw) = -t jM(jw)J is infinite. and 
the closed-loop system is marginally stable. On the other hand, when the system 
is unstable, the value of fM(jw) [ is analytically finite, but it no longer has any 
significance. 
MATI.AB statements for Fig. 8-12 -use clear all, close all, and clc if necessary 
wn;:::;l; 
zeta;:::;Q. 70 7; 
for T= [ 0 0 . 5 1 5 ] ; 
num=[wnA2]; 
den=conv([l O], [1 2*zeta*wn]); 
den=conv(den, [T 1]); 
[nc,dc]=feedback(num,den,1,1,-1); 
t=linspace(0,4,1001); %time vector 
y=step(nc, de, t); %step response for basic system 
plot(t ,y); 
hold on 
end 
xlabel( 'w (rad/s)'); 
ylabel('Amplitude'); 
title (' Step Response' ) ; 
The objective of these last two sections is to demonstrate the simple relationships 
between BW, Mr, and the time-domain response. Typical effects on BW of adding a pole 
and a zero to the forward-path transfer function are investigated. No attempt is made to 
include all general cases . 
. · 8-5 NYQUIST STABILITY CRITERION: FUNDAMENTALS 
• The Nyquist plot of L(jw) 
is done in polar coordinates 
as w varies from O to oc. 
• The Nyquist criterion also 
gives indication on relative 
stability. Thus far we have presented two methods of determining the stability of linear SISO 
systems: the Routh-Hurwitz criterion and the root-locus method of determining stability by 
locating the roots of the characteristic equation in the s-plane. Of course, if the coefficients 
of the characteristic equation are all known, we can solve for the roots of the equation by 
use of MATLAB. 
The Nyquist criterion is a semigraphical method that determines the stability of a closed­
loop system by investigating the properties of the frequency-domain plot, the Nyquist plot, of 
the loop transfer function G(s)H(s)~ or L(s). Specifically7 the Nyquist plot of l..1..s) is a plot of£ 
(jw) in the polar coordinates oflm[L(jw)] versus Re[L(jw)] as w varies from Oto oo. This is 
another example of using the properties of the loop transfer function to find the performance of 
the closed-loop system. The Nyquist criterion has the following features that make it an 
alternative method that is attractive for the analysis and design of control systems. 
1. In addition to providing the absolute stability, like the Routh-Hurwitz criterion, 
the Nyquist criterion also gives information on the relative stability of a stable 
system and the degree of instability of an unstable system. It also gives an 
indication of how the system stability may be improved, if needed. 
8-5 Nyquist Stability Criterion: Fundamentals · 427 
2. The Nyquist plot of G(s)H(s) or of L(s) is very easy to obtain, especially with the 
aid of a computer. 
3. The Nyquist plot of G(s)H(s) gives information on the frequency-domain char­
acteristics such as M,., Wn BW. and others with ease. 
4. The Nyquist plot is useful for systems with pure time delay that cannot be treated 
with the Routh-Hurwitz criterion and are difficult to analyze with the root~locus 
method. 
This subject is also treated in Appendix F for the general case where the loop transfer 
function is of nomninimum-phase type. 
8-5-1 Stability Problem 
The Nyquist criterion represents a method of determining the location of the characteristic 
equation roots with respect to the left half and the right half of the s-plane. Unlike the root­
locus method, the Nyquist criterion does not give the exact location of the characteristic 
equation roots. 
Let us consider that the closed-loop transfer function of a SISO system is 
Ms -G(s) 
( ) -I + G(s)H(s) 
where G(s)H(s) can assume the following form: 
G(s)H(s) = K(l + Tis)(l +Tis)··· (1 + Tins) e-T.,s 
sP(l + Tas)(l +Tbs)··· (1 + Tns) (8-36) 
(8-37) 
where the T's are real or complex-conjugate coefficients, and Tt1 is a real time delay. 
Because the characteristic equation is obtained by setting the denominator polynomial 
of M(s) to zero, the roots of the characteristic equation are also the zeros of 1 + G(s)H(s). 
Or, the characteristic equation roots must satisfy 
6(s) = I + G(s)H(s) = 0 (8-38) 
In general, for a system with multiple number of loops, the denominator of M(s) can be 
written as 
A ( s) = 1 + L( s) = 0 (8-39) 
where L(s) is the loop transfer function and is of the form of Eq. (8-37). 
Before embarking on the details of the Nyquist criterion. it is useful to summarize the 
pole-zero relationships of the various system transfer functions. 
Identification of Poles and Zeros 
Loop transfer function zeros: zeros of L(s) 
Loop transfer function poles: poles of L(s) 
Closed-loop transfer function poles: zeros of I + L(s) = roots of the characteristic 
equation poles of 1 + L(s) = poles of L(s). 
Stability Conditions 
We define two types of stability with respect to the system configuration. 
• Open .. Loop Stability: A system is said to be open-loop stable if the poles of 
the loop transfer function L(s) are all in the left-half s-plane. For a single-loop 
428 ,,. Chapter 8. Frequency-Domain Analysis 
system, this is equivalent to the system being stable when the loop is opened at 
any point. 
• Closed-Loop Stability: A system is said to be closed-loop stable, or simply 
stable, if the poles of the closed-loop transfer function or the zeros of 1 + L(s) are 
all in the left-half s-plane. Exceptions to the above definitions are systems with 
poles or zeros intentionally placed at s = 0. 
8-5-2 Definition of Encircled and Enclosed 
Because the Nyquist criterion is a graphical method, we need to establish the concepts of 
encircled and enclosed, which are used for the interpretation of the Nyquist plots for 
stability. 
Encircled 
A point or region in a complex function plane is said to be encircled by a closed path 
if it is found inside the path. 
For example, point A in Fig. 8-14 is encircled by the closed path r, because A is inside 
the closed path. Point Bis not encircled by the closed path f, because it is outside the path. 
Furthermore, when the closed path r has a direction assigned to it, the encirclement. if 
made, can be in the clockwise (CW) or the counterclockwise (CCW) direction. As shown 
in Fig. 8-14, point A is encircled by r in the CCW direction. We can say that the region 
inside the path is encircled in the prescribed direction, and the region outside the path is not 
encircled. 
Enclosed 
A point or region is said to be enclosed by a closed path if it is encircled in the CCW 
direction or the point or region lies to the left of the path when the path is traversed 
in the prescribed direction. 
The concept of enclosure is particularly useful if only a portion of the closed path is 
shown. For example, the shaded regions in Figs. 8-15(a) and (b) are considered to be 
enclosed by the closed path r. In other words, point A in Fig. 8-15(a) is enclosed by r, but 
point A in Fig. 8-1 S(b) is not. However, point B and all the points in the shaded region 
outside r in Fig. 8-15(b) are enclosed. 
Figure 8-14 Definition of encirclement. 
(a) 
8-5-3 Number of Encirclements and Enclosures 8-5 Nyquist Stability Criterion: Fundamentals 429 
(b) Figure 8-15 Definition of 
enclosed points and regions. (a) 
PointA is enclosed by r. (b) Point 
A is not enclosed, but B is 
enclosed by the locus r. 
When a point is encircled by a closed path r, a number N can be assigned to the number of 
times it is encircled . The magnitude of N can be determined by drawing an arrow from the 
point to any arbitrary point s1 on the closed path f and then letting s1 follow the path in the 
prescribed direction until it returns to the starting point. The total net number of revolutions 
traversed by this arrow is N, or the net angle is 2,rN radians. For example, point A in Fig. 
8-16(a) is encircled once or 2rr radians by r, and point Bis encircled twice or 4Jr radians, all 
in the CW direction. In Fig. 8-16(b ), point A is enclosed once, and point Bis enclosed twice 
by r. By definition, N is positive for CCW encirclement and negative for CW encirclement. 
8-5-4 Principles of the Argument 
The Nyquist criterion was originated as an engineering application of the well-known 
"principle of the argwnent" concept in complex-variable theory. The principle is stated in 
the following in a heuristic manner. 
Let Li(s) be a single-valued function of the form of the right-hand side of Eq. (8-37), 
which has a finite number of poles in the s-plane. Single valued means that, for each point 
in the s-p1ane, there is one and only one corresponding point, including infinity, in the 
complex Li(s)-plane. As defined in Chapter 7, infinity in the complex plane is interpreted as 
a point. 
Suppose that a continuous closed path rs is arbitrarily chosen in the s-plane, as shown 
in Fig. 8-17(a). If rs does not go through any poles of Li(s), then the trajectory r il mapped 
by A(s) into the Li(s)-plane is also a closed one, as shown in Fig. 8-17(b). Starting from a 
point si, the f 5 locus is traversed in the arbitrarily chosen direction (CW in the illustrated 
(a) (b) 
Figure 8-16 Definition of the number of encirclements and enclosures. 
430 Chapter 8. Frequency-Domain Analysis 
• Do not attempt to relate 
il(J) with L(s). They are not 
the same. j(J) s-plane .6.(s)-plane 
a Re.a. 
(a) (b) 
Figure 8-17 (a) Arbitrarily chosen closed path in the s-plane. (b) Corresponding locus f.1: in the 
a(s)-plane. 
case). through the points s2 and s3, and then returning to s I after going through all the points 
on the r.~ locus, as shown in Fig. 8-17(a). The corresponding r a locus will start from the 
point A(s1) and go through points A(s2) and A(s"J}, corresponding to S1, s2, and s3, 
respectively, and finally return to the starting point, A(s1 ). The direction of traverse of r A 
can be either CW or CCW, that is, in the same direction or the opposite direction as that of 
f.t, depending on the function A(s). In Fig. 8-I 7(b ), the direction of r a is arbitrarily 
assigned, for illustration purposes~ to be CCW. 
Although the mapping from the s-plane to the ~(s)-plane is single-valued, the reverse 
process is not a single-valued mapping. For example, consider the function 
K 
A(s) = s(s + l)(s + 2) (8-40) 
which has poles s = 0, -I, and -2 in the s-plane. For each point in the s-plane, there is 
only one corresponding point in the A(s)-plane. However, for each point in the A(s)-plane, 
the function maps into three corresponding points in the s-plane. The simplest way to 
illustrate this is to write Eq. (8-40) as 
K 
s(s + I)(s+2) -A(s) = 0 (8-41) 
If A(s) is a real constant. which represents a point on the real axis in the A(s)-plane. the 
third-order equation in Eq. (8-41) gives three roots in the .\·-plane. The reader should 
recognize the parallel of this situation to the root-locus diagram that essentially represents 
the mapping of A(s) = -1 + jO onto the loci ofroots of the characteristic equation in the s­
plane, for a given value of K. Thus, the root loci of Eq. (8-40) have three individual 
branches in the s-plane. 
The principle of the argument can be stated: 
Let A(s) be a single-valued function that has a finite llumber of poles in the s-plane. 
Suppose that an arbitrary closed path rs is chosen in the s-p/ane so that the path does 
not go through any one of the poles or zeros of A(s); the co"esponding r A locus mapped 
iii the A(s )-plane will encircle the origi.n as many times as the difference between the 
number of zeros and poles of A(s) that are encircled by the s-plane locus [5• 
8-5 Nyquist Stability Criterion: Fundamentals 431 
In equation form, the principle of the argument is stated as 
N=Z-P (8-42) 
where 
N = number of encirclements of the origin made by the A(s)-plane locus r ~. 
Z = number of zeros of ~(s) encircled by the ,\·-plane locus rs in the s-plane. 
P = number of poles of ~(s) encircled by the ,\·-plane locus r.~ in the s-plane. 
In general, N can be positive (Z > P), zero (Z = P), or negative (Z < P). These three 
situations are described in more detail as follows. 
1. N > O(Z > P). If the s-plane locus encircles more zeros than poles of A(s) in a 
certain prescribed direction (CW or CCW), N is a positive integer. In this case, the 
A(s)-plane locus f ~ will encircle the origin of the A(s)-plane N times in the same 
direction as that of r.,. 
2. N = O(Z = P). If the s-plane locus encircles as many poles as zeros, or no poles and 
zeros, of A(s), the A(s)-plane locus r ~ will not encircle the origin of the A(s)-plane. 
3. N < O(Z < P). If the .\·-plane locus encircles more poles than zeros of A(s) in a 
certain direction, N is a negative integer. In this case, the A(s)-plane locus r ~ will 
encircle the origin N times in the opposite direction as that offs. 
A convenient way of determining N with respect to the origin (or any point) of the a(s)­
plane is to draw a line from the point in any direction to a point as far as necessary; the number 
of net intersections of this line with the A(.s) locus gives the magnitude of N. Fig. 8-18 gives 
Figure 8-18 Examples of the 
determination of Nin the 
ii(s)-plane. J1m.6. 
Jlm.6. A(s)-plane 
Re A 
A(s)-plane 
N=-3 
Rel\ N=O jlmA 
jlmA A(s)-plane 
N=O 
Re A 
A(s)-plane 
N=O 
Rea 
432 ~ Chapter 8. Frequency-Dama in Analysis 
• Zand Prefer to only 
the zeros and poles. 
respectively, of ll(s) that 
are encircled by C~ several examples of this method of detennining N. In these illustrated cases, it is assumed that 
the f s locus has a CCW sense. 
Critical Point 
For convenience, we shall designate the origin of the A(s)-plane as the critical point from 
which the value of N is determined. Later, we shall designate other points in the complex­
function plane as critical points, dependent on the way the Nyquist criterion is applied. 
A rigorous proof of the principle of the argument is not given here. The following 
illustrative example may be considered a heuristic explanation of the principle. 
Let us consider the function A(s) is of the form 
As _ K(s+zi) 
() -(s+ Pt)(s+ P2) (8-43) 
where K is a positive real number. The poles and zeros of A(s) are assumed to be as shown 
in Fig. 8-19(a). The function A(s) can be written as 
A(s) = IA(s)JLA(s) 
= I Kls td fC• +zi) -L(s + Pt) -L(s + p2)] s+ Pl s+ P2 (8-44) 
Fig. 8-19(a) shows an arbitrarily chosen trajectory rs in the s-plane, with the arbitrary 
point s1 on the path, and rs does not pass through any of the poles and the zeros of A(s). 
The function .6.(s) evaluated at s = s1 is 
A(sr) = K(s + zi) 
(s1 + Pl )(s + P2) (8-45) 
The term (s1 +zr) can be represented graphically by the vector drawn from -z1 to s1. 
Similar vectors can be drawn for (s1 + p1) and (s + p2). Thus, A(s1) is represented by 
jlmA .6.(s)-plane 
Re A 
(a) (b) 
Figure 8-19 (a) Pole-zero configuration of .1(s) in Eq. (8-44) and the s-plane trajectory f s, 
(b) .c!l(s)-plane locus r a, which corresponds to the rs locus of (a) through the mapping of Eq. (8-44 ). 
8-5-5 Nyquist Path 8-5 Nyquist Stability Criterion: Fundamentals -c 433 
TABLE 8-1 Summary of All Possible Outcomes of the Principle of the Argument 
Direction of A(s)-Plane Locus 
N=Z--P Sense of the Number of Encirclements Direction 
Encirclement s-plane Locus of the Origin of Encirclement 
N>O cw N CW 
ccw N ccw 
N<O cw N ccw 
CCW N CW 
N=O cw 0 No encirclement 
ccw 0 No encirclement 
the vectors drawn from the finite poles and zeros of A(s) to the point si, as shown in 
Fig. 8-l 9(a). Now. if the point St is moved along the locus rs in the prescribed CCW 
direction until it returns to the starting point, the angles generated by the vectors drawn 
from the two poles that are not encircled by rs when St completes one roundtrip are zero, 
whereas the vector (s1 + z1) drawn from the zero at -z1, which is encircled by fs, 
generates a positive angle (CCW) of 2,r radians, which means that the corresponding A(s) 
plot must go around the origin 2n radians, or one revolution, in the CCW direction, as 
shown in Fig. 8-l 9(b ). This is why only the poles and zeros of A(s) that are inside the f s 
trajectory in the s-plane will contribute to the value of N of Eq. (8-42). Because the poles 
of A(s) contribute to a negative phase, and zeros contribute to a positive phase, the value 
of N depends only on the difference between Zand P. For the case illustrated in Fig. 8-19 
(a), Z = 1 and P = 0. 
Thus, 
N=Z-P=l (8-46) 
which means that the A(s)-plane locus r a should encircle the origin once in the same 
direction as that of the s-plane locus rs· It should be kept in mind that Zand P refer only to 
the zeros and poles, respectively, of A(s) that are encircled by rs and not the total number of 
zeros and poles of A(s). 
In general, the net angle traversed by the A(s)-plane locus, as the s-plane locus is 
traversed once in any direction, is equal to 
21r(Z -P) = 2,rN radians (8-47) 
This equation implies that if there are N more zeros than poles of A(s), which are encircled 
by the s-plane locus f s, in a prescribed direction, the A(s)-plane locus will encircle the 
origin N times in the same direction as that of rs· Conversely, if N more poles than zeros are 
encircled by f 5 in a given direction, Nin Eq. (8-47) will be negative, and the A(s)-plane 
locus must encircle the origin N times in the opposite direction to that of rs· 
A summary of all the possible outcomes of the principle of the argument is given in 
Table 8.1. 
Years ago when Nyquist was faced with solving the stability problem, which involves 
determining if the function A(s) = 1 + L(s) has zeros in the right-half s-plane, he 
434 Chapter 8. Frequency-Domain Analysis 
• The Nyquist path is 
dctined to encircle the entire 
right-half .1·-planc. jw . JOO s-plane 
Poles of 
~(s) 
(J 
-Joo Figure 8-20 Nyquist path. 
apparently discovered that the principle of the argument could be applied to solve the 
stability problem if the s-plane locus f5 is taken to be one that encircles the entire right 
half of the s-p1ane. Of course, as an alternative, f., can be chosen to encircle the entire 
left-half s-plane, as the solution is a relative one. Fig. 8-20 illustrates a fs locus with a 
CCW sense that encircles the entire right half of the s-plane. This path is chosen to be the 
s-plane trajectory r.~ for the Nyquist criterion, since in mathematics, CCW is tradition­
ally defined to be the positive sense. The path fs shown in Fig. 8-20 is defined to be the 
Nyquist path. Because the Nyquist path must not pass through any poles and zeros of 
A(s), the small semicircles shown along thejw-axis in Fig. 8-20 are used to indicate that 
the path should go around these poles and zeros if they fall on the jw-axis. It is apparent 
that, if any pole or zero of A(s) lies inside the right-half s-plane, it will be encircled by 
the Nyquist path fs, 
8-5-6 Nyquist Criterion and the L(s) or the G(s)H(s) Plot 
The Nyquist criterion is a direct application of the principle of the argument when the 
.1·-plane locus is the Nyquist path ofFig. 8-20. In principle, once the Nyquist path is specified , 
the stability of a closed-loop system can be determined by plotting the Li(s) = l + L(s) locus 
whens takes on values along the Nyquist path and investigating the behavior of the A(s) plot 
with respect to the critical point, which in this case is the origin of the A(s)-plane. 
Because the function L(s) is generally known, 
it would be simpler to construct the L(s) plot that con-esponds to the Nyquist paJh, and the 
same conclusion on the stability of the closed-loop system can be obtained by observing 
the behamor of the L(s) plot with respect to the (-1, jO) point in the L(s)-p/ane. 
This is because the origin of the Li(s) = l + L(s) plane corresponds to the (-1, jO) point in 
the L(s)-plane . Thus the ( -1, JO) point in the L(s)-plane becomes the critical point for the 
determination of closed-loop stability. 
For single-loop systems, L(s) = G(s)H(s), the previous development leads to the 
detennination of the closed-loop stability by investigating the behavior of the G(s)H(s) plot 
with respect to the (-1, JO) point of the G(s)H(s)-plane. Thus, the Nyquist stability 
8-6 Nyquist Criterion for Systems with Minimum~Phase Transfer Functions 435 
criterion is another example of using the loop transfer function properties to find the 
behavior of closed-loop systems. 
Thus, given a control system that has the characteristic equation given by equating 
the numerator polynomial of 1 + L(s) to zero. where L(s) is the loop transfer function, 
the application of the Nyquist criterion to the stability problem involves the following 
steps. 
1. The Nyquist path fs is defined in the s-plane, as shown in Fig. 8-20. 
2. The L(s) plot corresponding to the Nyquist path is constructed in the L(s)-plane. 
3. The value of N, the number of encirclement of the (-1, jO) point made by the L(s) 
plot, is observed. 
4. The Nyquist criterion follows from Eq. (8-42), 
N=Z-P (8-48) 
where 
N = number of encirclements of the (-1, jO) point made by the L(s) plot. 
Z = number of zeros of 1 + L(s) that are inside the Nyquist path, that is, the right­
half s-plane. 
P = number of poles of 1 + L(s) that are inside the Nyquist path, that is, the 
right-half s-plane. Notice that the poles of I + L(s) are the same as that of 
L(s). 
The stability requirements for the two types of stability defined earlier are interpreted 
in terms of Zand P. 
For closed-loop stability, Z must equal zero. 
For open-loop stability, P must equal zero. 
Thus, the condition of stability according to the Nyquist criterion is stated as 
N=-P 
That is, (8-49) 
fora closed-loop system to be stable, the L(s)plot must encircle the (-1,jO)pointas 
many times as the number of poles of L(s) that are in the right-half s-plane, and the 
encirclement, if any, must be made in the clockwise direction (if f sis defined in the 
CCW sense). 
· 8-6 NYQUIST CRITERION FOR SYSTEMS WITH MINIMUM-PHASE TRANSFER FUNCTIONS 
We shall first apply the Nyquist criterion to systems with L(s) that are minimum-phase 
transfer functions. The properties of the minimum-phase transfer functions are described 
in Chapter 2 and are summarized as follows: 
1. A minimum-phase transfer function does not have poles or zeros in the right-half 
s-plane or on the jw-axis. excluding the origin. 
2. For a minimum-phase transfer function L(s) with m zeros and n poles, excluding 
the poles at s = 0, when s = jw and as w varies from oo to 0, the total phase 
variation of L(jw) is (n -m)n/2 radians. 
436 ._ Chapter 8. Frequency-Domain Analysis 
• A minimum-phase 
transfer function does not 
have poles or zeros in the 
right-half s-plane or on the 
)co-axis, except at s = 0. 
• For l(s) that is minimum­
phm;e type, Nyquist 
criterion can be checked 
by plotting the segment of 
L(jw) from {J) = co to O. 3. The value of a minimum-phase transfer function cannot become zero or infinity at 
any finite nonzero frequency. 
4. A nonminimum-phase transfer function will always have a more positive phase 
shift as w varies from oo to 0. Or, equally true. it will always have a more negative 
phase shift as w varies from O to oo. 
Because a majority of the loop transfer functions encountered in the real world satisfy 
condition 1 and are of the minimum-phase type, it would be prudent to investigate the 
application of the Nyquist criterion to this class of systems. As if turns out, this is quite 
simple. 
Because a minimum-phase L(s) does not have any poles or zeros in the right-half s­
plane or on thejcv-axis (except at s = 0) P = 0, and the poles of a(s) = 1 + L(s) also have 
the same properties. Thus. the Nyquist criterion for a system with L(s) being a minimum­
phase transfer function is simplified to 
N=O (8-50) 
Thus, the Nyquist criterion can be stated: 
For a closed-loop system with loop transfer function L(s) that is of minimum-phase 
type, the system is closed-loop stable if the plot of L(s) that collesponds to the 
Nyquist path does not encircle the critical point ( -1, jO) in the L(s )-plane. 
Furthermore, if the system is unstable, Z-:p O; Nin Eq. (8-50) would be a positive 
integer, which means that the critical point (-1 i jO) is enclosed N times ( correspond­
ing to the direction of the Nyquist path defined here). Thus, the Nyquist criterion of 
stability for systems with minimum-phase loop transfer functions can be further 
simplified: 
For a closed-loop system with loop transfer function L(s) that is of minimum-phase 
type, the system is closed-loop stable if the L(s) plot that co"esponds to the Nyquist 
path does ,rot e11close tlie (-1, jO) point. If the (-I, jO) point is enclosed by the 
Nyquist plot, the system is unstable. 
Because the region that is enclosed by a trajectory is defined as the region that lies to the left 
when the trajectory is traversed in the prescribed direction, the Nyquist criterion can be 
checked simply by plotting the segment of L(jw) from w = oo to 0, or, points on the 
positive j(J)-axis. This simplifies the procedure considerably, since the plot can be made 
easily on a computer. The only drawback to this method is that the Nyquist plot that 
corresponds to the jw-axis tells only whether the critical point is enclosed or not and, if it is, 
not how many times. Thus, if the system is found to be unstable. the enclosure property 
does not give infonnation on how many roots of the characteristic equation are in the right­
half s-plane. However, in practice. this information is not vital. From this point on. we shall 
define the L(jw) plot that corresponds to the positivejw-axis of the s-plane as the Nyquist 
plot of L(s). 
8-6-1 Application of the Nyquist Criterion to Minimum-Phase Tranter Functions 
That Are Not Strictly Proper 
Just as in the case of the root locus, it is often necessary in design to create an 
equivalent loop transfer function Leq(s) so that a variable parameter K will appear as a 
multiplying factor in Leq(s); that is, L(s) = KLeq(s). Because the equivalent loop 
transfer function does not correspond to any physical entity, it may not have more 
8-7 Relation between the Root Loci and the Nyquist Plot ~ 437 
poles than zerns. and the transfer function is not strictly proper. as defined in 
Chapter 2. In principle, there is no difficulty in constructing the Nyquist plot of a 
transfer function that is not strictly proper, and the Nyquist criterion can be applied for 
stability studies without any complications. However, some computer programs may 
not be prepared for handling improper transfer functions, and it may be necessary to 
reformulate the equation for compatibility with the computer program. To examine 
this case, consider that the characteristic equation of a system with a variable 
parameter K is conditioned to 
I + KLeq(s) = 0 (8-51) 
If Leq(s) does not have more poles than zeros, we can rewrite Eq. (8-51) as 
1 I+ =0 KLeq(s) (8-52) 
by dividing both sides of the equation by KLeq(s). Now we can plot the Nyquist plot of 
1 / Leq(s), and the critical point is still ( -1, jO) for K > 0. The variable parameter on 
the Nyquist plot is now 1/ K. Thus. with this minor adjustment, the Nyquist criterion can 
still be applied. 
The Nyquist criterion presented here is cumbersome when the loop transfer function is 
of the nonminimum-phase type, for example. when L(s) has poles or/and zeros in the right­
half s-plane. A generalized Nyquist criterion that will take care of transfer functions of all 
types is presented in Appendix F. 
• 8-7 RELATION BETWEEN THE ROOT LOCI AND THE NYQUIST PLOT 
Because both the root locus analysis and the Nyquist criterion deal with the location of the 
roots of the characteristic equation of a linear SISO system, the two analyses are closely 
related. Exploring the relationship between the two methods will enhance the under­
standing of both methods. Given the characteristic equation 
1 +L(s) = 1 + KG1 (s)H1 (s) = 0 (8-53) 
the Nyquist plot of L(s) in the L(s)-plane is the mapping of the Nyquist path in the s-plane. 
Because the root loci of Eq. (8-53) must satisfy the conditions 
LKG1 (s)H1 (s) = (2j + 1 )n K ~ 0 
!KG1 (s)H1 (s) = 2jrr K $ 0 (8-54) 
(8-55) 
for j = 0, ± 1, ±2, . . . • the root loci simply represent a mapping of the real axis of the 
L(s)-plane or the G(s)H(s)-plane onto the s-plane. In fact. for the RL K 2:: 0, the mapping 
points are on the negative real axis of the L(s)-plane, and, for the RL K::; 0, the mapping 
points are on the positive real axis of the L(s)-plane. It was pointed out earlier that the 
mapping from the s-plane to the function plane for a rational function is single valued. but 
the reverse process is multivalued. As a simple illustration. the Nyquist plot of a type-I 
third-order transfer function G(s)H(s) that corresponds to points on the jw-axis of the 
s-plane is shown in Fig. 8-21. The root loci for the same system are shown in Fig. 8-22 as a 
438 • Chapter 8. Frequency-Domain Analysis 
J1mGH jllJ 
s-plane 
G(s)H(s)-plane 
0 (1 
Figure 8-21 Polar plot of G(s )H ( s) = K J[s(s + a) (s + b)] interpreted as a mapping of the 
jw-axis of the s-plane onto the G(s)H(s)-plane. 
jimGH jm 
G(s)H(s)-plane 
Figure 8-22 Root .. locus diagram of G(s)H(s) == K/[s(s + a)(s + b)] interpreted as a mapping 
of the real axis of the G(s)H(s)-plane onto the s-plane. 
mapping of the real axis of the G(s)H(s)-plane onto the s-plane. Note that, in this case, each 
point of the G(s)H(s)-plane corresponds to three points in the s-plane. The (-1, jO) point of 
the G(s)H(s)-plane corresponds to the two points where the root loci intersect the jw-axis 
and a point on the real ax.is. 
The Nyquist plot and the root loci each represent the mapping of only a very limited 
portion of one domain to the other. In general, it would be useful to consider the mapping of 
points other than those on the jw-axis of the s-plane and on the real axis of the G(s)H(s)­
plane. For instance~ we may use the mapping of the constant-damping-ratio lines in the 
s-plane onto the G(s)H(s)-plane for the purpose of determining relative stability of the 
closed-loop system. Fig. 8-23 illustrates the G(s)H(s) plots that correspond to different 
constant-damping-ratio lines in the s-plane. As shown by curve (3) in Fig. 8-23, when the 
G(s)H(s) curve passes through the ( -1, jO) point, it means that Eq. (8-52) is satisfied, and 
the corresponding trajectory in the s-plane passes through the root of the characteristic 
equation. Similarly, we can construct the root loci that correspond to the straight lines 
H Relation between the Root Loci and the Nyquist Plot • 439 
jlmGH 
G(s)H(s)-plane 
ReGH j(JJ 
0 
Figure 8-23 G(s)H(s) plots that correspond to constant-damping-ratio lines in the s-plane. O' 
rotated at various angles from the real axis in the G(s)H(s)-plane, as shown in Fig. 8-24. 
Notice that these root loci now satisfy the condition of 
LKG1(s)H1(s) = (2j+ I)n-9 K~O 
Or the root loci of Fig. 8-24 must satisfy the equation 
1 + G(s)H(s)ei9 = 0 
for the various values of e indicated. 
(I) jlmGH 
G(s)H(s)~plane 
ReGH 
Figure 8-24 Root loci that correspond to different phase-angle loci in the G(s)H(s)-plane. (8-56) 
(8-57) 
440 Chapter 8. Frequency-Domain Analysis 
8-8 ILLUSTRATIVE EXAMPLES: NYQUIST CRITERION FOR MINIMUM-PHASE 
TRANSFER FUNCTIONS 
The following examples serve to illustrate the application of the Nyquist criterion to 
systems with minimum-phase loop transfer functions. All examples in this chapter may 
also be solved using the ACSYS (see Chapter 9) or MATLAB Toolboxes incorporated in 
this chapter. 
EXAMPLE 8-8-1 Consider that a single-loop feedback control system has the loop transfer function 
K 
l(s) = G(s)H(s) = s(s + 2)(s + JO) (8-58) 
which is of minimum-phase type. The stability of the closed-loop system can be conducted by 
investigating whether the Nyquist plot of L(jw) / K for w = oc to O encloses the (-1, jO) point. The 
Nyquist plot of L(jw)/K may be plotted using freqtool. Fig. 8-25 shows the Nyquist plot of L(jw)/K 
for w = ·X. to 0. However. because we are interested only in whether the critical point is enclosed, in 
general, it is not necessary ~o produce an accurate Nyquist plot. Because the area that is enclosed by 
the Nyquist plot is to the left of the curve, traversed in the direction that corresponds to a> = oo to O on 
the Nyquist path, all that is necessary to determine stability is to find the point or points at which the 
Nyquist plot crosses the real ax.is in the L(jw)/K-plane. ln many cases, information on the 
intersection on the real axis and the properties of L(jw)/K at w = oo and w = 0 would allow 
the sketching of the Nyquist plot without actual plotting. We can use the following steps to obtain a 
sketch of the Nyquist plot of L(jw)/K. 
1. Substitute s = jw in L(s). 
Setting s = jw in Eq. (8-58), we get 
L(jw) / K = . . 1 . JW( JW + 2)( JW + 10) (8-59) 
2. Substituting w = 0 in the last equation, we get the zero-frequency property of L(jw), 
a 
l 
0 JbnL 
m= oo 
0 L(jO)/K = oo/-90° 
L(jm)-plane 
ReL (8-60) 
Figure 8-25 Nyquist plot of 
1 
L(s)/K = .v(s + 2)(s + 10) for 
w = oo to w = 0. 
8-8 lllustrative Examples: Nyquist Criterion for Minimum-Phase Transfer Functions • 441 
Toolbox 8-8-1 
MATLAB statements for Fig. 8-25 
w=0.1:0.1:1000; 
nurn = [11; 
den= conv(conv( [110], [1, 2]). [1 O]); 
[re ,irn,w] = nyquist(num,den,w); 
plot(re,im); 
axis( [-0 .1 O. 01 -0. 6 O. 01]) 
grid 
3. Substituting CtJ = cc in Eq. (8-59). the property of the Nyquist plot at infinite frequency is 
established. 
L(joo)/K = OL -270° 
Apparently, these results are verified by the plot shown in Fig. 8-25. 
4. To find the intersed(s) of the Nyquist plot with the real axis, if any, we rationalize L(jw )/ K 
by multiplying the numerator and the denominator of the equation by the complex 
conjugate of the denominator. Thus, Eq. (8 .. 59) becomes 
. [-12w2 -jw(20 -w2)J L(;w)/K = · [-12w2 + jcv{20 -w2))t-12w2 -jw(20 -w2)] 
[-12CtJ -j(20 -w2)J 
= ru[144w2 + (20 -w2)) 
5. To find the possible intersects on the real ax.is, we set the imaginary part of L(jw)/ K to zero. 
The result is 
. -(20-ui} 
Im[L(Jw)/K] = w[l44w 2 + (20-ai)] = O (8-63) 
The solutions of the last equation are w = oo, which is known to be a solution at L(jw)/ K;:;;;; 0, 
and 
w = ±v'zo rad/sec (8-64) 
Because w is positive, the correct answer is uJ = v'20 rad/sec. Substituting this frequency into 
Eq. (8-62), we have the intersect on the real axis of the L(jw)-plane at 
L( j../20)/K = -z~!o = -0.004167 
The last fl ve steps should lead to an adequate sketch of the Nyquist plot of L(jw) / K short of 
plotting it. Thus, we see that, if K is less than 240, the intersect of the l(jw) locus on the real axis 
would be to the right of the critical point (-1, jO); the latter is not enclosed, and the system is 
stable. If K = 240, the Nyquist plot of L(jw) would intersect the real axis at the -I point, and the 
system would be marginally stable. In this case. the characteristic equation would have two roots 
on the jw-axis in the s-plane at s = ±j.Jw. If the gain is increased to a value beyond 240, the 
intersect would be to the left of the -I point on the real axis, and the system would be unstable. 
When K is negative, we can use the ( + l ~ jO) point in the L(jw)~plane as the critical point. Fig. 8-25 
shows that, under this condition, the + 1 point on the real axis would be enclosed for all negative 
442 .._ Chapter 8. Frequency-Domain Analysis 
s-plane 
Kmm= 0.00 
Kmax = 500.00 
oo-K 
-14.0 K=O 
-I0.0 
K 
Figure 8-26 RL of L(s) = s{s + 2)(s + lO)" 2.0 
values of K, and the system would always be unstable. Thus, the Nyquist criterion leads to the 
conclusion that the system is stable in the range ofO < K < 240. Note that application of the Routh­
Hurwitz stability criterion leads to this same result. 
Fig. 8-26 shows the root loci of the characteristic equation of the system described by the loop 
transfer function in Eq. (8-58). The correlation between the Nyquist criterion and the root loci is 
easily observed. 
Toolbox 8-8-2 
MATIAB statements for Fig. 8-26 
den=conv( [1 2 OJ, [110]); 
mysys=tf(.0001,den); 
rlocus(mysys); 
title(' Root loci of the system'); 
~ EXAMPLE 8-8-2 Consider the characteristic equation 
Ks3 + (2K + 1 )s2 + (2K + S)s + 1 = 0 
Dividing both sides of the last equation by the terms that do not contain K, we have 
Ks(s2 + 2s + 2) 1 + KLeq(s) = 1 + 2 5 = 0 
Thus, s + s+ 1 
() _s(s2+2s+2) 
Leq s -s2 + 5s + 1 (8-66) 
(8-67) 
(8-68) 
Toolbox 8-8-3 8-8 Illustrative Examples: Nyquist Criterion for Minimum-Phase Transfer Functions ~ 443 
which is an improper function. We can obtain the information to manually sketch the Nyquist plot of 
Leq(s) to determine the stability of the system. Setting s = jw in Eq. (8-68), we get 
Leq(jw) w[-2w+ j(2 -w2)1 -K--(I -w2) + 5jw 
From the last equation. we obtain the two end points of the Nyquist plot: 
Leq(iO) = OL90° and Leq(Joo) = ooL90° (8-70) 
Rationalizing Eq. (8-69) by multiplying its numerator and denominator by the complex conjugate of 
the denominator. we get 
Leq(iw) a.i2[5(2- w2) -2(1 -ro2)] + jw[10a>2 + (2-a>2)(1 -ai2)] 
-K-= (I -w2)2+25cv2 (8-71) 
To find the possible intersects of the Leq( jw) / K plot on the real axis, we set the imaginary part of 
Eq. (8-71) to zero. We get w = 0 and 
<1i + 7 ro2 + 2 = 0 (8-72) 
MATLAB statements for Fig. 8-27 
W=0.1;0.1:1000; 
nwn = [ 1 2 2 OJ ; 
den= [151]; 
[re,im,w] =nyquist(nwn,den,w); 
plot(re,im); 
axis ( [ -2 1 -1 5 ]) ; 
grid 
We can show that all the four roots of Eq. (8-72) are imaginary, which indicates that the 
Leq( j(J)) / K locus intersects the real axis only at (J) = 0. Using the information given by Eq. 
(8-70) and the fact that there are no other intersections on the real axis than at w = 0, the 
Nyquist plot of Leq{j(J))/K is sketched as shown in Fig. 8-27. Notice that this plot is 
sketched without any detailed data computed on Leq ( jOJ) / K and, in fact, could be grossly 
inaccurate. However, the sketch is adequate to determine the stability of the system. 
jlmL 
Area enclosed 
-1 0 L(j(.t))-plane 
(JJ:;Q 
1 Rel 
Figure 8-27 Nyquist plot of Le~s) = 
s(s2+2s+2) 
2 5 1 for w = oo to w = 0. s + s+ 
444 ..,.. Chapter 8. Frequency-Domain Analysis 
-I 
0-K jlm!I L 
s-plane K L (jW) -plane 
Area enclosed 
e 
J 
0 
jru Figure 8-28 Nyquist plot of K/Leq(jw) 
ti Leq(s) s(s2 + 2s + 2) i". or-K = ., 5 ,orw = ooto 
(J) = 0. s~ + s + I 
Figure 8-29 RL of 
L(s) == Ks(s2 + 2s + 2). 
s2 + Ss+ 1 
Because the Nyquist plot in Fig. 8-27 does not enclose the ( -1, jO) point as w varies from 
oo to 0, the system is stable for all finite positive values of K. 
Fig. 8-28 shows the Nyquist plot ofEq. (8-66), based on the poles and zeros of Leq(s)/ 
Kin Eq. (8-68). Notice that the RL stays in the left-half s-plane for all positive values of K, 
and the results confirm the Nyquist criterion results on system stability. 
K _ (1 -a>2) + 5jw 
Leq( jw) -[-2w2 + jw(2 -w2)] (8-73) 
for cu = oo to 0. The plot again does not enclose the ( -1, jO) point, and the system is again 
stable for all positive values of K by interpreting the Nyquist plot of K/Leq(jw). 
Fig. 8-29 shows the RL of Eq. (8-67) for K > O. using the pole-zero configuration of 
leq(S) of Eq. (8-68). Because the RL stays in the left-half s-plane for all positive values of 
K, the system is stable for O < K < oo, which agrees with the conclusion obtained with the 
Nyquist criterion. 
~ 8-9 EFFECTS OF ADDING POLES AND ZEROS TO L(s) ON THE SHAPE 
OF THE NYQUIST PLOT 
Because Lhe performance of a control system is often affected by adding and moving poles 
and zeros of the loop transfer function, it is important to investigate how the Nyquist plot is 
affected when poles and zeros are added to L(s). 
8-9 Effects of Adding Potes and Zeros to L(s) on the Shape of the Nyquist Plot 445 
jlm L 
-1 
Critical point 
oo > K> 0 
(not enclosed) 
Closed-h>op ,table 0 l(jOJ)-pl ane 
P ,.= 0, P = 0, 4>11 = 0° for stability. 
(Refer ro Appelldix F.) 
OJ= 00 
Critical point 
-1 >K 
enclosed 
Closed-loop unstable OJ= 0 
K Rel 
Critirnl point 
0 > K > -1 
(not enclosed) 
Closed-loop stable 
Let us begin with a first-order transfer function 
K 
L(s) = _1_+_1-·,-s Figure 8-30 Nyquist plot of 
K 
L(s) = (1 + 1'1s) 
(8-74) 
where T1 is a positive real constant. The Nyquist plot of L(jw) for O :S w :S oo is a 
semicircle, as shown in Fig. 8-30. The figure also shows the interpretation of the closed­
loop stability with respect to the critical point for all values of K between -oo and oo. 
Addition of Poles at s = 0 
Consider that a pole at s = 0 is added to the transfer function of Eq. (8-74); then 
K L(~)---­, -s(l + T1s) (8-75) 
Because adding a pole at s = 0 is equivalent to di.viding L(s) by jw, the phase of L(jw) is 
reduced by 90'° at both zero and infinite frequencies. In addition, the magnitude of L(jw) at 
w = 0 becomes infinite. Fig. 8-31 illustrates the Nyquist plot of L(jw) in Eq. (8-75) and the 
closed-loop stability interpretations with respect to the critical points for -oo < K < oo. In 
jlm l 
L(jOJ)-plane 
P w= I, P = 0, ([JI 1 = -90° for stability 
(Refer fO Appendix F.) 
Critical point 
oo>K>O 
\not enclosed) 
Closed-loop stable 
8 
I 
0 OJ= 00 
0 
Crilical point 
K<O 
(enclosed) Rel 
Closed-loop unstable 
Enclosed 
area Figure 8-31 Nyquist plol of 
K L(f)=---
s(I + Tp) 
446 II>-Chapter 8. Frequency-Domain Analysis 
general, adding a pole of multiplicity p at s = 0 to the transfer function of Eq. (8-7 4) will 
give the following propertie s to the Nyquist plot of L(jw): 
1im LL(jw) = -(p + 1)90° w->oo 
Jim LL(jw) = -p x 90° 
w->O 
lim IL(iw)I = 0 
W->OC 
Jim jL(jw) I = oc 
w->O (8-76) 
(8-77) 
(8-78) 
(8-79) 
The following example illustrates the effects of adding multiple-order poles to L(s). 
· EXAMPLE 8-9-1 Fig. 8-32 shows the Nyquist plot of 
• Adding poles at .1· = 0 to a 
loop transfer function will 
reduce stability of the 
closed-loop system. K L(s) ---=--c--­
-s2(1 + T1s) 
and the critical points, with stability interpretations. Fig. 8-33 illustrates the same for 
K 
l(s) = s~3~(1_+_T-1s-) (8-80) 
(8-81) 
The conclusion from these illustrations is that the addition of poles at s = 0 to a loop transfer 
function will affect the stability of the closed-loop sysLern ac..lversely. A system that has a loop 
transfer function with more than one pole at s = 0 (type 2 or higher) is likely to be unstable or 
difficult to stabilize. 
}Im L 
L(joJ)-plane 
Pw=2,P=O 
cP11 = -180° for stability 
0-(() 
Enclosed 
area -) 
Critical point 
oo>K>O 
(enclosed) 
Closed-loop unstable 0 OJ= 00 (Refer to Appendix F.) 
Critical point 
K<O 
(enclosed) 
Closed-loop unstable 
Figure 8-32 Nyquist plot of L(s) = 2( KT )' 
S 1 + [S 
Addition of Finite Nonzero Poles ReL 
When a pole at s = -I/T2(T2 > 0) is added to the function L(s) of Eq. (8-74), we have 
K 
L(s) = -( l_+_T_1_s )-( l_+_T_2_s) (8-82) 
• Adding nonzero poles to 
the loop transfer function 
also reduces stability of the 
closed-loop system. 8-9 Effects of Adding Poles and Zeros to L(sl on the Shape of the Nyquist Plot 447 
jlmL 
L (j w)-plane 
Pm=3,P=0 
<1>11 = -270° for stability 
(Refer to Appendix F.) 
-1 0 W= 00 ReL 
Critical point 
oo>K>O 
(enclosed) 
Closed-loop unstable Critical point 
K<O 
(enclosed) 
Closed-loop unstable Figure 8-33 Nyquist plot of 
K L(s) = -=--c--­
s3 ( 1 + Tis)° 
The Nyquist plot of L(jw) at w = 0 is not affected by the addition of the pole, since 
Jim L(.iw) = K (8-83) 
w->0 
The value of L(jw) at w = oo is 
lim L(jw)= Jim ;K 2 OL-180° 
w->oo u>->oc T1 2w (8-84) 
Thus, the effect of adding a pole at s = -I /T2 to the transfer function of Eq. (8-75) is 
to shift the phase of the Nyquist plot by -90° at w = oo, as shown in Fig. 8-34. The figure 
also shows the Nyquist plot of 
K 
L(s) = (1 + T1s)(1 + T2s)(l + T3s) (8-85) 
where two nonzero poles have been added to che transfer function of Eq. (8-74) 
(T1, T2, T3, > 0). In this case, the Nyquist plot at w = oo is rotated clockwise by another 
90° from that of Eq. (8-82). These examples show the adverse effects on closed-loop 
stability when poles are added to t!ze loop trans.ferj'unction. The closed-loop systems with 
the loop transfer functions of Eqs. (8-74) and (8-82) are all stable as long as K is positive. 
The system represented by Eq. (8-85) is unstable if the intersect of the Nyquist plot on the 
negative real axis is to the left of the (-1, jO) point when K is positive. 
jJm L 
L{j(tJ)-plane 
Rel 
Figure 8-34 Nyquist plots. Curve (1): 
K 
L(s) = (I +Tr,r)(l +Tis)'Curve(2): 
(2) K 
L(s) = (l + Tis) (L + T2s)(l + i:~s). 
448 Chapter 8. Frequency-Domain Analysis 
Toolbox 8-9-1 
MATLAB statemems for Fig. 8-34 
w=0:0.01:100; 
num = [l]; 
den= conv([l 1], [11]) 
[re,im,w] =nyquist(nurn,den,w); 
plot (re, im, 'b' ) ; 
hold on 
den= conv(conv([l 1], [11]), [11]) 
[re, im, w] = nyquist (nurn, den, w) ; 
plot (re, im, 'r' ) ; 
axis( [-1 2 -11]) 
grid 
Addition of Zeros 
It was demonstrated in Chapter 5 that adding zeros to the loop transfer function has the effect of 
reducing the overshoot and the general effect of stabilization. In terms of the Nyquist criterion, 
this stabilizarion effect is easily demonstrated , since the multiplication of the term ( I + Tr1s) to 
the loop transfer function increases the phase of L(s) by 90° at w = oo. The following example 
illustrates the effect on stability of adding a zero at -1 /Td to a loop transfer function. 
EXAMPLE 8-9-2 Consider that the loop transfer function of a closed-loop control system is 
K 
L(s) = s(I +Tis)(!+ T2s) (8-86) 
• Adding zero, to the loop 
transfer function has the 
effect of stabilizing the 
dosed-loop system. It can be shown that the closed-loop system is stable for 
T1 + T, O<K<----
T1T2 (8-87) 
Suppose that a zero at s = -J /Tc1(Td > 0) is added to the transfer function of Eq. (8-86); then, 
L(s) = K(l + T,1s) (8-88) 
s(l +T,s)(l +T2s) 
The NyquisL plots of the two transfer functions of Eqs. (8-86) and (8-88) aJe shown in Fig. 8-35. The 
effect of the zero in Eq. (8-88) is to add 90° to the phase of lhe L(jw) in Eq. (8-86) at cu = oo while not 
jlmL 
L(jco)-plane 
(J):oo 
ReL 
Figure 8-35 Nyquist plots. Cu1ve (1): 
K L(s) = ( )( . Curve (2): 
.1· 1 +Tis I +T2s) 
K(I + Tas) 
L(s) = (1 T )(l T ); Tc1<T1; h s + ,s + 2s 
8-10 Relative Stability: Gain Margin and Phase Margin ~ 449 
affecting the value at w == 0. The intersect on the negative real axis of the L(jw )-plane is moved from 
-KT1 T2/(T1 + T2) to -K(T1T2 -TdTt -TdT2)/(T1 + Tz). Thus, the system with the loop transfer 
function in Eq. (8-88) is stable for 
O < K < Ti + Ti (8 89) 
T1T2 -Td(T1 + T2) -
which. for positive T:1 and K. has a higher upper bound than that of Eq. (8-87). 
• 8-10 RELATIVE STABILITY: GAIN MARGIN AND PHASE MARGIN 
• Relative stability is used 
to indicate how stable a 
system is. 
Toolbox 8-10-1 We have demonstrated in Sections 8-2 through 8-4 the general relationship between the 
resonance peak Mp of the frequency response and the maximum overshoot of the time 
response. Comparisons and correlations between frequency-domain and time-domain 
parameters such as these are useful in the prediction of the performance of control 
systems. In general, we are interested not only in the absolute stability of a system but also 
how stable it is. The latter is often called relative stability. In the time domain, relative 
stability is measured by paramel~rs such as the maximum overshoot and the damping ratio. 
In the frequency domain, the resonance peak Mp can be used to indicate relative stability. 
Another way of measuring relative stability in the frequency domain is by how close the 
Nyquist plot of L(j(J)) is to the ( -1, jO) point. 
MATIAB statements for Fig. 8-35 
w=0:0.01:100; 
num= [1]; 
den= conv(conv( [11], [11]), [1 OJ) 
[re, im, w] :::: nyquist (num, den, w); 
plot(re, im, 1b'); 
hold on 
num= [11]; 
den= conv(conv( (11], [11]), (1 OJ) 
[re, irn, w] = nyquist (num I den, w) ; 
plot (re, im 1 1 r' ) ; 
axis( [-2 2 -11]) 
grid 
hold on 
den= conv(conv( [1 ll, [11)), (11]) 
[re, im, w] = nyquist (num, den, w) ; 
plot(re, im, 1 r'); 
axis( (-1 2 -11]) 
grid 
To demonstrate the concept of relative stability in the frequency domain, the Nyquist 
plots and the corresponding step responses and frequency responses of a typical third-order 
system are shown in Fig. 8-36 for four different values of loop gain K. It is assumed that the 
function L(j(J)) is of minimum-phase type, so that the enclosure of the (.-1, jO) point is 
sufficient for stability analysis. The four cases are evaluated as follows. 
450 ::.-Chapter 8. Frequency-Domain Analysis 
Figure 8-36 Correlation 
among Nyquist plots, step 
responses. and frequency 
responses. jlml 
L(jw)-plane 
jimL 
L(jw)-plane 
jlmL 
{jm)-plane 
jimL 
L(jw)-plane (d-+oo 
0 ReL 
{1)- DO 
0 Rel 
(1)-oo 
0 ReL 
w-oo 
0 Rel IM(jto)l 
-270° 
,P(jm) 
(a) Stable and well-damped system 
y(t) lM(jw)I 
0 0 
tJ,(jm) 
-270° 
(b) Stable but oscillatory system 
y(I) IM(jm)I 
0 0 
q,(jm) 
-270° 
( c) Marginally unstable system 
y(t) IM(Jm)I 
{) 0 
oc 
tp(jW) 
(d) Unstable system \_ 
(() 
1. Fig. 8~36(a); the loop gain K is low: The Nyquist plot of L(jw) intersects the 
negative real axis at a point that is quite far to the right of the ( -1, jO) point. 
The corresponding step response is quite well damped~ and the value of Mr of 
the frequency response is low. 
• M, ceases to have any 
meaning when the closed­
loop system is unstable. 8-10 Relative Stability: Gain Margin and Phase Margin 451 
2. Fig. 8-36(b); K is increased: The intersect is moved closer to the (-1, jO) point; 
the system is still stable, because the critical point is not enclosed, but the step 
response has a larger maximum overshoot. and Mr is also larger. 
3. Fig. 8-36(c); K is increased further: The Nyquist plot now passes through the 
(-1, jO) point, and the system is marginally stable. The step response becomes 
oscillatory with constant amplitude, and M,. becomes infinite. 
4. Fig. 8-36( d); K is relatively very large: The Nyquist plot now encloses the 
( -1, jO) point, and the system is unstable. The step response becomes unbounded. 
The magnitude curve of IM(jw) 1-versus-w ceases to have any significance. In fact, for 
the unstable system, the value of Mr is still finite! In all the above analysis, the phase 
curve r/J( jw) of the closed-loop frequency response also gives qualitative infonnation 
about stability. Notice that the negative slope of the phase curve becomes steeper as 
the relative stability decreases. When the system is unstable, the slope beyond the 
resonant frequency becomes positive. In practice, the phase characteristics of the 
closed-loop system are seldom used for analysis and design pw-poses. 
8-10-1 Gain Margin (GM) 
• The definition of gain 
margin given here is for 
minimuin-phase loop 
transfer functions. 
• Gain margin is measured 
at the phase crossover. Gain Margin (GM) is one of the most frequently used criteria for measuring relative 
stability of control systems. In the frequency domain, gain margin is used to indicate the 
closeness of the intersection of the negative real axis made by the Nyquist plot of L(jw) to 
the (-11 jO) point. Before giving the definition of gain margin, let us first define the phase 
crossover on the Nyquist plot and the phase-crossover frequency. 
Phase Crossover: A phase-crossover on the L(jw) plot is a point at which the plot 
intersects the negative real axis. 
Phase-Crossover Frequency: The phase-crossover frequency w P is the frequency 
at the phase crossover, or where 
{S-90) 
The Nyquist plot of a loop transfer function L(jw) that is of minimum-phase type is 
shown in Fig. 8-37. The phase-crossover frequency is denoted as w,,, and the magnitude of 
jlml 
Figure 8-37 Definition of the gain margin in 
the polar coordinates. 
452 ;.,~ Chapter 8. Frequency-Domain Analysis 
• Gain margin is the amount 
of gain in dB that can be 
added to the loop before the 
closed-loop system becomes 
unstable. L(jw) at w = Wp is designated as IL(jcvp)I. Then, the gain margin of the closed-loop 
system that has L(s) as its loop transfer function is defined as 
gain margin = GM = 20 log 10 I ("I ) I L )Wp 
= -201og 10jL(jcvp) I dB (8-91) 
On the basis of this definition, we can draw the following conclusions about the gain 
margin of the system shown in Fig. 8-37, depending on the properties of the Nyquist plot. 
1. The L(jw) plot does not intersect the negative real axis (no finite nonzero phase 
crossover). 
IL(jwp) I = 0 GM= oo dB (8-92) 
2. The L(jw) plot intersects the negative real axis between (phase crossover lies 
between) 0 and the -1 point. 
0 < IL(iw,,) I< 1 GM> OdB (8-93) 
3. The L(jw) plot passes through (phase crossover is at) the (-1, jO) point. 
(8-94) 
4. The L(jw) plot encloses (phase crossover is to the left of) the ( -1, jO) point. 
(8-95) 
Based on the foregoing discussions, the physical significance of gain margin can be 
summarized as: 
Gain margin is the amount of gain in decibels (dB) that can be added to the loop 
before the closed-loop system becomes unstable. 
• When the Nyquist plot does not intersect the negative real axis at any finite 
nonzero frequency, the gain margin is infinite in dB; this means that, theoreti­
cally, the value of the loop gain can be increased to infinity before instability 
occurs. 
• When the Nyquist plot of L(jw) passes through the (-1, jO) point, the gain margin 
is O dB. which implies that the loop gain can no longer be increased, as the system is 
at the margin of instability. 
• When the phase-crossover is to the left of the {-1, jO) point, the phase margin is 
negative in dB, and the loop gain must be reduced by the gain margin to achieve 
stability. 
Gain Margin of Nonminimum-Phase Systems 
Care must be taken when attempting to extend gain margin as a measure of relative 
stability to systems with nonminimum-phase loop transfer functions. For such 
systems, a system may be stable even when the phase-crossover point is to the left 
of (-1, jO), and thus a negative gain margin may still correspond to a stable system. 
8~ 10 Relative Stability: Gain Margin and Phase Margin ~ 453 
Nevertheless, the closeness of the phase-crossover to the (-1, jO) point still gives an 
indication of relative stability. 
8-10-2 Phase Margin (PM) 
• The definition of phase 
margin given here is for a 
system with a minimum­
phase loop transfer function. The gain margin is only a one-dimensional representation of the relative stability of a 
closed-loop system. As the name implies, gain margin indicates system stability with 
respect to the variation in loop gain only. In principle, one would believe a system with a 
large gain margin should always be relatively more stable than one with a smaller gain 
margin. Unfortunately, gain margin alone is inadequate to indicate relative stability when 
system parameters other than the loop gain are subject to variation. For instance, the two 
systems represented by the L(j{J)) plots in Fig. 8-38 apparently have the same gain margin. 
However, locus A actually corresponds to a more stable system than locus B. because with 
any change in the system parameters that affect the phase of L{jw ), locus B may easily be 
altered to enclose the (-1, jO) point. Furthermore, we can show that the system B actuaily 
has a larger M,. than system A. 
To include the effect of phase shift on stability, we introduce the phase margin, which 
requires that we first make the following definitions: 
Gain Crossover: The gain crossover is a point on the L(jw) plot at which the 
magnitude of L(j{J)) is equal to 1. 
Gain-Crossover Frequency: The gain-crossover frequency, wg, is the frequency of 
L(jw) at the gain crossover. Or where 
jL(jwg) I = 1 (8-96) 
The definition of phase margin is stated as: 
Phase margin (PM) is defined as the angle in degrees through which the L(j{J)) plot 
must be rotated about the origin so that the gain crossover passes through the ( -1, 
jO) point. 
Fig. 8-39 shows the Nyquist plot of a typical minimum-phase L(jw) plot, and the phase 
margin is shown as the angle between the line that passes through the gain crossover and 
the origin. In contrast to the gain margin, which is determined by loop gain, phase margin 
indicates the effect on system stability due to changes in system parameter, which 
jlmL 
L(jW)·plane 
-1 
0 Rel 
Figure 8-38 Nyquist plots showing systems with 
the same gain margin but different degrees of 
relative stability. 
454 Chapter 8. Frequency-Domain Analysis 
• Phase margin is measured 
at the gain crossover. 
• Phase margin is the 
amount of pure phase delay 
that can be added before the 
system becomes unstable. jlmL 
Figure 8-39 Phase margin 
defined in the L(jw )-plane. 
theoretically alter the phase of L(jw) by an equal amount at all frequencies. Phase margin is 
the amount of pure phase delay that can be added to the loop before the closed-loop system 
becomes unstable. 
When the system is of the minimum-phase type, the analytical expression of the phase 
margin. as seen from Fig. 8-39, can be expressed as 
phase margin(PM) = LL(jw8) -180° (8-97) 
where wg is the gain-crossover frequency. 
Care should be taken when interpreting the phase margin from the Nyquist plot of a 
nonminimum-phase transfer function. When the loop transfer function is of the non­
minimum~phase type, the gain crossover can occur in any quadrant of the L(jw)-plane, and 
the definition of phase margin given in Eq. (8~97) is no longer valid. 
. EXAMPLE 8-10-1 As an illustrative example on gain and phase margins. consider that the loop transfer function of a 
control system is 
Ls _ 2500 
( ) -s(s + 5)(s + 50) (8-98) 
The Nyquist plot of L(jw) is shown in Fig. 8-40. The following results are obtained from the Nyquist 
plot: 
Gain crossover wg = 6.22 rad/sec 
Phase crossoverwp = 15.88 md/sec 
The gain margin is measured at the phase crossover. The magnitude of L(jw11) is 0.182. Thus, the gain 
margin is obtained from Eq. (8-91): 
I 1 
GM= 20log10 JL(jwp)I = 20log100.182 = 14.80dB 
The phase margin is measured at the gain crossover. The phase of L(jwg) is 211. 72°. Thus, the phase 
margin is obtained from Eq. (8-97): 
PM= ll{jw,:) -180° = 211.72° -180° = 31.72° (8-100) 
8-11 Stability Analysis with the Bode Plot 455 
jlmL 
1 Rel 
Figure 8~40 Nyquist plot of l(s) = s(s +~~~:+SO)' 
Before embarking on the Bode plot technique of stability study. it would be beneficial to summarize 
advantages and disadvantages of the Nyquist plot. 
Advantages of the Nyquist Plot 
I. The Nyquist plot can be used for the study of stability of systems with nonminimum-phase 
transfer functions. 
2. The stability analysis of a closed-loop system can be easily investigated by examining the 
Nyquist plot of the loop transfer function with reference to the ( -1, jO) point once the plot 
is made. 
Disadvantage of the Nyquist Plot 
I. Ifs not so easy to cany out the design of the controller by referring to the Nyquist plot. 
· 8-11 STABILITY ANALYSIS WITH THE BODE PLOT 
The Bode plot of a transfer function described in Chapter 2 is a very useful graphical tool 
for the analysis and design of linear control systems in the frequency domain. Before the 
inception of computers, Bode plots were often called the .. asymptotic plots," because the 
magnitude and phase curves can be sketched from their asymptotic properties without 
detailed plotting. Modern applications of the Bode plot for control systems should be 
identified with the following advantages and disadvantages: 
Advantages of the Bode Plot 
1. In the absence of a computer, a Bode diagram can be sketched by approximating 
the magnitude and phase with straightline segments. 
2. Gain crossover. phase crossover, gain margin, and phase margin are more easily 
determined on the Bode plot than from the Nyquist plot. 
3. For design purposes, the effects of adding controllers and their parameters are 
more easily visualized on the Bode plot than on the Nyquist plot. 
456 Chapter 8. Frequency-Domain Analysis 
• Bode plots are useful only 
for stability studies of 
systems with minimum ­
phase loop transfer 
functions. 40 
20 
CQ 0 ~ 
~ . ..., 
:.:s--20 
-40 
-60 
0 
tO -90 s 
~ -l80 
:.:) 
~ -270 -
-360 (lJ/1' gain crossover Unstable region for 
intersect on 111agnitude 
curve at phase crossover; 
negative gain margin 
Stable region for 
intersect 011 magnitude 
curve at phase crossover; 
positive gain margin 
Phase 
margin 
t 
Unstable region for 
intersect on phase curve 
at phase crossover ; 
negative phase margin w (rad/sec) 
Stable region for 
incersect on phase r.:urve 
at phase crossover; 
positive ph~se margin 
WP. phase crossover 
Figure 8-41 Determination of gain margin and phase margin on the Bode plot. 
Disadvantage of the Bode Plot 
1. Absolute and relative stability of only minimum-phase systems can be determined 
from the Bode plot. For instance, there is no way of telling what the stability 
criterion is on the Bode plot. 
With reference to the definitions of gain margin and phase margin given in Figs. 8-37 
and 8-39, respectively, the interpretation of these parameters from the Bode diagram is 
illustrated in Fig. 8-41 for a typical minimum -phase loop transfer function. The follow­
ing observations can be made on system stability with respect to the properties of the 
Bode plot: 
1. The gain margin is positive and the system is stable if the magnitude of L(jw) at 
the phase crossover is negative in dB. That is, the gain margin is measured below 
the 0-dB-axis. If the gain margin is measured above the 0-dB-axis, the gain margin 
is negative, and the system is unstable. 
2. The phase margin is positive and the system is stable if the phase of L(jw) is 
greater than -180° at the gain crossover. That is, the phase margin is measured 
above the -180° -axis. If the phase margin is measured below the -180° -axis, the 
phase margin is negative, and the system is unstable. 
EXAMPLE 8-11-1 Consider the loop transfer function given in Eq. (8-98); the Bode plot of the function is drawn as 
shown in Fig. 8-42. The following results are observed easily from the mag11itude and phase plots. 
The gain crossover is the point where the magnitude curve intersects the 0-dB axis. The gain­
crossover frequency wfi is 6.22 rad/sec. The phase margin is measured at the gain crossover. The phase 
Toolbox 8-11-1 ~ 
i ..... 
~ 
i E 
'§" ..... 
~ 20 
0 
-20 
-40 
-60 
-'30 
-100 
-120 
1 
-90 ---r--i""---
--......... ' -120 
-150 
-180 
-210 
-240 
-270 
I "'~ 
Phase margin r 
31.72° 8-11 Stability Analysis with the Bode Plot ~ 457 
vGain cros~ove; -"'" I ..... r .. i-............._ ~ain margin 
_14.82 dB 
--.......... I", ...... 
...... ..... 
I".... "' ............ 
....... ',~ 
.. 
6.22 10 ts.sg 100 1000 
m (rad/sec) 
·,...., 
..... 
.. ~ IM" v Phase crossover . 'I'..... '-r.. r-....., 
"'p,,i-. .....__ ..._ -
6.22 10 15.88 100 1000 
m (rad/sec) 
2500 
figure 8-42 Bode plot of L(s) = s(s + S)(s +SO). 
margin is measured from the -180°-axis and is 31.72°. Because the phase margin is measured above 
the -180° ~axis. the phase margin is positive. and the system is stable. 
The phase crossover is the point where the phase curve intersects the -180° -axis. The phase­
crossover frequency is wp = 15.88 rad/sec. The gain margin is measured at the phase crossover and is 
14.8 dB. Because the gain margin is measured below the 0-dB-axis, the gain margin is positive, and 
the system is stable. 
MATLAB statements for Fig. 8-42 
G = zpk( [], [O -1 -1], 2500) 
rnargin(G) 
grid 
The reader should compare the Nyquist plot of Fig. 8-40 with the Bode plot of 
Fig. 8-42, and the interpretation of W,:, wp• GM. and PM on these plots. • 
458 ..-Chapter 8. Frequency-Domain Analysis 
8-11-1 Bode Plots of Systems with Pure Time Delays 
The stability analysis of a closed-loop system with a pure time delay in the loop can be 
cuntlm::ted easily with the Bode plot. Example 8-11-2 illustrates the standard procedure. 
~ EXAMPLE 8-11-2 Consider that the loop transfer function of a closed-loop system is 
Ke-Tds L(s)==----s(s + l)(s + 2) (8-101) 
Fig. 8-43 shows the Bode plot of l(jw) with K = I and Td:::: 0. The following results are obtained: 
~ 
~ 
~ 
~ Gain-crossover frequency = 0.446 rad/sec 
Phase margin= 53.4° 
Phase-crossover frequency = I .416 rad/sec 
Gain margin = 15 .57 dB 
Thus, the system with the present parameters is stable. 
40 
30 ....___ 
20 
IO 
() 
-10 
-20 
-30 
-40 
-50 
-{iQ 
0.01 
-90 -..... r-... :--.... 
~ .... .... ~ .. _ 
---.. 
0.1 
~-.. ,.. ~ • j"'-,,,.... ~/ 
.......... 
0.446 
a,(rad/sec) 
--.... J .... 
-..... ......... ... I L(ja,) I; K= I 
+ I 
4.SdB 
I i--. ... + ' ,........_ 
LO 
I .. , 
', ... 
'~ 
10 
I I I 
............... -135 LL(jlt>) 
I ' ~ K"'l,Td=O 53.4° ' ....... 
'-r,, ~ ............ 
-180 
t° + ' ......... /~ 
'S 
§' -22S I\ ~ _,v ....... Ll(jw) ·~ 
~ -270 
-315 
-360 
0.£)1 ,,. 
K= I. T,,= I sec 
0.1 
a>(rad/scc) 
Ke-Tds 
Figure 8-43 Bode plot of L(s) = ( ) { ) . ss+I s+2 \ 
\ I\ 
0.66 1.0 ........ ........ 
r-.. ...... 
IO 
8-12 Relative Stability Related to the Slope of the Magnitude Curve of the Bode Plot ,, 459 
The effect of the pure time delay is to add a phase of -Tdw radians to the phase curve while not 
affecting the magnitude curve. The adverse effect of the time delay on stability is apparent, because 
the negative phase shift caused by the time delay increases rapidly with the increase in w. To find the 
critical value of the time delay for stability, we set 
Tdw,: = 53.4° 1:00 = 0.932 radians (8-102) 
Solving for ~t from the last equation, we get the critical value of Tc1 to be 2.09 seconds. 
Continuing with the example, we set Tdarbitrarily at 1 second and find the critical value of Kfor 
stability. Fig. 8-43 shows the Bode plot of L(jw) with this new time delay. With K still equal to I, the 
magnitude curve is unchanged. The phase curve droops with the increase in (J), and the following 
results are obtained: 
Phase-crossover frequency = 0 .66 rad/sec 
Gain margin = 4.5 dB 
Thus, using the definition of gain margin of Eq. (8-91). the critical value of K for stability is 
104.5/20 :=: 1.68. "'", 
8-12 RELATIVE STABILITY RELATED TO THE SLOPE OF THE MAGNITUDE CURVE 
OF THE BODE PLOT 
In addition to GM, PM, and Mp as relative stability measures, the slope of the magnitude curve 
of the Bode plot of the loop transfer function at the gain crossover also gives a qualitative 
indication on the relative stability of a closed-loop system. For example, in Fig. 8-42, if the 
loop gain of the system is decreased from the nominal value, the magnitude curve is shifted 
downward, while the phase curve is unchanged. This causes the gain-crossover frequency to 
be lower, and the slope of the magnitude curve at this frequency is less negative; the 
corresponding phase margin is increased. On the other hand, if the loop gain is increased, the 
gain-crossover frequency is increased, and the slope of the magnitude curve is more negative. 
This corresponds to a smaller phase margin, and the system is less stable. The reason behind 
these stability evaluations is quite simple. For a minimum-phase transfer function, the relation 
between its magnitude and phase is unique. Because the negative slope of the magnitude curve 
is a result of having more poles than zeros in the transfer function, the corresponding phase is 
also negative. In general. the steeper the slope of the magnitude curve, the more negative the 
phase. Thus, if the gain crossover is at a point where the slope of the magnitude curve is steep. 
it is likely that the phase margin will be small or negative. 
8-12-1 Conditionally Stable System 
The illustrative exarnples given thus far are uncomplicated in the sense that the slopes of 
the magnitude and phase curves are monotonically decreasing as w increases. The 
following example illustrates a conditionally stable system that is capable of going 
through stable/unstable conditions as the loop gain varies. 
'.t. EXAMPLE 8-12-1 Consider that the loop transfer function of a dosed-loop system is 
L(s) = lOOK(s + 5)(s + 40) 
s3(s+ IOO)(s+200) (8-103) 
The Bode plot of L(j(J)) is shown in Fig. 8-44 for K = l. The following results on the system stability 
are obtained: 
Gain-crossover frequency = 1 rad/sec 
Phase margin = -78° 
460 • Chapter 8. Frequency-Domain Analysis 
0 
-28 ' Gain crosso~er
1 [ I J I 
'~ t--..... -60 dB/decade 
.......... 'i-... -40 dB/decade 
/ 
i -56 ""r-,. / ....... r-..... / ~--20 dB/decade 
-69 
i -70 ,,'/ 
r-,....., uv -40 dB/decade ..... 
::s-
ii :s. 
'a ..... 
~ -84 
-85.5 
-112 
-140 
1 
-90 
-120 
-150 
-180 
-210 
-240 /' 
-270 l 5 10 
... ~ ~/ 
i,,'i, 
_..V v 
/' 
5 JO ........ / 
-1o. ~ 
""" I'-...... 
77.7..., 
I I l'-..11, 
25.8 40 JOO 200 
w{rad/sec) 
--r-... 
""'"I~ I r l'" ~ / 
Phase crossovers "' I I 
I I 
77.7, 
I l '1t. 
25.8 40 JOO 200 
a>(rad/sec) 
100K(s + 5)(s + 40) 
Figure 8-44 Bode plot of L(s) = s3(s + lOO)(s + ZOO)' K = 1. -60 dB/decade 
J 
........... r-,... 
r...l"-,. 
i,,.i,. 
1000 
' r-...... 
""i-,.. 
~ ... ,.. 
1000 
There are Lwo phase crossovers: one at 25.8 rad/sec and the other at 77.7 rad/sec, The phase 
characteristics between these two frequencies indicate that. if the gain crossover lies in this range. the 
system would be stable. From the magnitude curve,. the range of K for stable operation is found to be 
between 69 and 85.5 dB. For values of K above and below this range. the phase of L(jw) is less than 
-180°, and the system is unstable. This example serves as a good example of the relation between 
relative stability and the slope of the magnitude curve at the gain crossover. As observed from Fig. 
8-44, at both very low and very high frequencies. the slope of the magnitude curve is -60 dB/decade; 
if the gain crossover falls in either one of these two regions, the phase margin is negative, and the 
system is unstable. In the two sections of the magnitude curve that have a slope of -40 dB/decade, the 
system is stable only if the gain crossover falls in about half of these regions. but even then the phase 
margin is small. If the gain crossover falls in the region in which the magnitude curve has a slope of 
-20 dB/decade. the system is stable. 
Fig. 8-45 shows the Nyquist plot of L(jw). It is of interest to compare the results on stability 
derived from the Bode plot and the Nyquist plot. The root .. locus diagram of the system is shown in 
Fig. 8-46. The root loci give a clear picture on the stability condition of the system with respect to K. 
The number of crossings of the root loci on the jw-axis of the s-plane equals the number of crossings 
8~12 Relative Stability Related to the Slope of the Magnitude Curve of the Bode Plot _. 461 
jlml 
L(jco)-plane 
0 Re£ 
F• B 46 R I . f G( ) lOOK(s + 5)(s + 40) rgure -oot oc1 o s ---=-------. -.r3(.~ + IOO)(s + 200)" Figure 8-45 Nyquist plot of 
L(s) = lOOK(s + 5)(s + 40) • K = 1. 
s3 (s + lOO)(s + 200) 
462 Chapter 8. Frequency -Domain Analysis 
of the phase curve of L(jw) of the -180° axis of the Bode plot and the number of crossings of the 
Nyquist plot of L(jw) with the negative real axis. The reader should check the gain margins obtained 
from the Bode plot and the coordinates of the crossover points on the negative real axis of the Nyquist 
plot with the values of Kat the jw-axis crossings on the root loci. 
8-13 STABILITY ANALYSIS WITH THE MAGNITUDE-PHASE PLOT 
The magnitude-phase plot described in Chapter 2 is another form of the frequency­
domain plot that has certain advantages fot analysis and design in the frequency 
domain. The magnitud e-phase plot of a transfer function L(jw) i.s done in IL(jw)l(dB) 
versus L L(jw) (degrees) . The magnitude-pha se plot of the transfer function in 
Eq. (8-98) is constructed in Fig. 8-47 by use of the data from the Bode plot of 
Fig. 8-42. The gain and phase crossovers and the gain and phase margins are clearly 
indicated on the magnitude -phase plot of L(jw). 
• The critical point is the intersect of the 0-dB-axis and the -180° -axis. 
• The phase crossover is where the locus intersects the -180° -axis. 
20 
0 
-20 Unstable region; 
Cri~cal i negative 
gain margin '°'S{._ 1 Phase 
Gain Stable region: 
positive 
gain 111argin 
60 Unstable region; +--+-. Stable region; 
negative positive 
pha,e margin phase margin 
300 
8 
j 
8 
Pha~e (deg) 
Figure 8-47 . 10 Gam-phase plot of L(s) = ( 0 2 )( ) . s 1 + . s 1 + 0.02s 
8-14 Constant-M Loci in the Magnitude-Phase Plane: The Nichols Chart ~1 463 
• The gain crossover is where the locus intersects the 0-dB-axis. 
• The gain margin is the vertical distance in dB measured from the phase crossover to 
the critical point. 
• The phase margin is the horizontal distance measured in degrees from the gain 
crossover to the critical point. 
The regions in which the gain and phase crossovers should be located for stability are 
also indicated. Because the vertical axis for IL(jru)! is in dB, when the loop gain of L(jw) 
changes,, the locus is simply shifted up and down along the vertical axis. Similarly, when a 
constant phase is added to L(jw), the locus is shifted horizontally without distortion to the 
curve. If L(jw) contains a pure time delay Td .. the effect of the time delay is to add a phase 
equal to -wTd x 180° / 1( along the curve. 
Another advantage of using the magnitude-phase plot is that, for unity{eedback 
systems, closed-loop system parameters such as Mr, Wr, and BW can all be determined 
from the plot with the help of the constant-M loci. These closed-loop performance 
parameters are not represented on the Bode plot of the forward-path transfer function 
of a unity-feedback system. 
>· 8-14 CONSTANT-M LOCI IN THE MAGNITUDE-PHASE PLANE: THE NICHOLS CHART 
It was pointed out earlier that, analytically, the resonant peak M,. and bandwidth BW are 
difficult to obtain for high-order systems, and the Bode plot provides information on the 
closed-loop system only in the form of gain margin and phase margin. It is necessary to 
develop a graphical method for the determination of Mr, OJ,., and BW using the forward­
path transfer function G(jw ). As we shall see in the following development, the method is 
directly applicable only to unity-feedback systems. although with some modification it can 
also be applied to nonunity-feedback systems. 
Consider that G(s) is the forward-path transfer function of a unity-feedback system. 
The closed-loop transfer function is 
G(s) 
M(s) = 1 + G(s) 
For sinusoidal steady state, we replace s with jw; G(s) becomes 
G(j{J)) = ReG(jw) + jlmG(jw) 
=x+jy (8-104) 
(8-105) 
where, for simplicity~ x denotes ReG(jw) and y denotes ImG(jw). The magnitude of the 
closed-loop transfer function is written 
!M(jw)l = I G(jw? I = /x2 + y2 
1 + G(Jw) V(l +x)2+y2 
For simplicity of notation, let M denote lM(jw)\; then Eq. (8-106) leads to 
MV(l +x)2+y2 = Jx2 + y2 
Squaring both sides uf Eq. (8-107) gives 
M2[(1 +x)2+y2] =x2 +y2 (8-106) 
(8-107) 
(8-108) 
464 Chapter B. Frequency-Domain Analysis 
Rearranging Eq. (8-108) yields 
(1 -M2)x2 + (1 -M2)y2 -2M2x = M2 (8-109) 
This equation is conditioned by dividing through by (1 -M2) and adding the term 
[M2 / ( 1 - M2)] 2 on both sides. We have 
2M2 ( M2 ) 2 M2 ( M2 ) 2 
x2 + y2 -1 -M2 x + I -M2 = 1 -M2 + 1 -M2 (8-110) 
which is finally simplified to 
( M2 )2 ( M )2 x -1 -M2 +y2 = l -M2 M/1 (8-111) 
For a given value of M, Eq. (8-111) represents a circle with the center at 
M2 
x = ReG(jw) = 1 _ M2 y=O (8-112) 
The radius of the circle is 
(8-113) 
When Mtakes on different values, Eq. (8-111) describes in the G(jw)-plane a family of 
circles that are called the constant-Mloci, or the constant-M circles. Fig. 8-48 illustrates a 
typical set of constant-M circles in the G(jw)-plane. These circles are symmetrical with 
M= 1.2 
1 -2 jlmG 
Figure 8-48 Constant-M circles in polar coordinates. G(jw)-plane 
M=0.833 
ReG 
8-14 Constant-M Loci in the Magnitude-Phase Plane: The Nichols Chart ~ 465 
respect to the M = 1 line and the real axis. The circles to the left of the M = 1 locus 
correspond to values of M greater than 1~ and those to the right of the M = I line are for M 
less than 1. Eqs. (8-11.1) and (8-112) show that, when M becomes infinite, the circle 
degenerates to a point at ( -1, jO). Graphically, the intersection of the G(jw) curve and the 
constant-M circle gives the value of Mat the corresponding frequency on the G(jw) curve. 
If we want to keep the value of M,. less than a certain value, the G(jw) curve must not 
intersect the corresponding M circle at any point and at the same time must not enclose the 
(-1,jO) point. The constant-M circle with the smallest radius that is tangent to the G(jw) 
curve gives the value of M,., and the resonant frequency Wr is read off at the tangent point on 
the G(jw) curve. 
Fig. 8-49(a) illustrates the Nyquist plot of G(jtv) for a unity-feedback control system 
together with several constant-Mloci. For a given loop gain K = K1, the intersects between 
the G(jw) curve and the constant-M loci give the points on the IM(jw)l-versus-w curve. 
The resonant peak Mr is found by locating the smallest circle that is tangent to the G(jw) 
M(a.>) 
l G(j ro)-plane 
K=K3 K= K2 K= K1 
(a) jlmG 
0.707 1----+--+---t----""',,o:::--~=-----''"'!,,.._ 
0'-------'--'---'---'---__. ______ _._ ____________ __ 
c,1,.1 ror;! Ci>,.~ BW1 BW2 BW3 0) 
(b) 
Figure 8-49 (a) Polar plots of G(s) and constant~M loci. (b) Corresponding magnification curves. 
466 lilt Chapter 8. Frequency-Domain Analysis 
• When the system is 
unstable. the constant-M 
loci and M,-no longer have 
any meaning. 
• BW is the frequency 
where the G(jw) curve 
intersects the M = -3 dB 
locus of the Nichols chart. curve. The resonant frequency is found at the point of tangency and is designated as l.Vrt· If 
the loop gain is increased to K2, and if the system is still stable. a constant-M circle with a 
smaller radius that corresponds to a larger Mis found tangent to the G{jw) curve. and thus 
the resonant peak will be larger. The resonant frequency is shown to be <ur2, which is closer 
to the phase-crossover frequency Wp than Wri. When K is increased to K3• so that the G(jw) 
curve now passes through the ( -1, jO) point, the system is marginally stable, and M,. is 
infinite; wp3 is now the same as the resonant frequency w,.. 
When enough points of intersection between the G(jw) curve and the constant-M loci are 
obtained, the magnification curves of IM (jw) J-versus-w are plotted, as shown in Fig. 8-49(b ). 
The bandwidth of the closed-loop system is found at the intersect of the G(ja,) curve 
and the M = 0.707 locus. For values of K beyond K3, the system is unstable, and the 
constant-M loci and Mr no longer have any meaning. 
A major disadvantage in working in the polar coordinates of the Nyquist plot of G(jw) 
is that the curve no longer retains its original shape when a simple modification such as the 
change of the loop gain is made to the system. Frequently~ in design situations, not only 
must the ]oop gain be altered, but a series controller may have to be added to the system. 
This requires the complete reconstruction of the Nyquist plot of the modified G{jw). For 
design work involving Mr and BW as specifications, it i1i more convenient to work with the 
magnitude-phase plot of G(jw), because when the loop gain is altered, the entire G(jw) 
curve is shifted up or down vertically without distortion. When the phase properties of 
G(j(J)) are changed independently, without affecting the gain, the magnitude-phase plot is 
affected only in the horizontal direction. 
For that reason, the constant-M loci in the polar coordinates are plotted in magnitude­
phase coordinates, and the resulting loci are called the Nichols chart. A typical Nichols 
chart of selected constant-M loci is shown in Fig. 8-50. Once the G(jw) curve of the system 
is constructed in the Nichols chart, the intersects between the constant-M loci and the G 
(jw) trajectory give the value of Mat the corresponding frequencies of G(jw). The resonant 
-315 -270 
Figure 8-50 Nichols chart. -225 -180 
Phuse(deg) -135 -90 -45 0 
8-14 Constant-M Loci in the Magnitude-Phase Plane: The Nichols Chart ... 467 
peak Mr is found by locating the smallest of the constant-M locus (M 2: I) that is tangent to 
the G(jw) curve from above. The resonant frequency is the frequency of G(jw) at the point 
of tangency. The bandwidth of the closed-loop system is the frequency al which tlze GGw) 
curve intersects the M = 0.707 or M = -3 dB locus. 
The following example illustrates the relationship among the analysis methods using 
the Bode plot and the Nichols chart . 
._ EXAMPLE 9 .. 14 .. 1 Consider the position-control system of the control surfaces of the airship analyzed in Section 5-8. 
'Ihe forward-path transfer function of the unity-feedback system is given by Eq. (5-153), and is 
repeated here: 
G( ) 1.5 x 107 K 
s = s(s + 400.26}(s + 3008) (8-114) 
The Bode plots forG(jw) are shown in Fig. 8-51 for K = 7.248, 14.5. 181.2, and 273.57. The gain 
and phase margins of the closed-loop system for these values of Kare determined and shown on 
'§' ..... 70 
60 
40 
20 
0 ~ 
,___ 
r--.. 
?5 -20 
i 
~ 
'§' ·-. 
t5' 
',J -40 
-60 
-80 
1.0 
-90 
-120 
-150 
-180 
-210 
-240 
-270 
1.0 "---
---
c-I 
r-....; ~,... ,-.. ... Tl l 
r""t-~ ~ r--... K~ ~81.2 ,..__ --i-,...::;; ~ ....... K=213.57 --~,.. r-t-, "'~to,,,,._ ,-... ~~ j lo.... r--i-- -_,_ 
r-.. --~--~ t Gain crossovers .... r ,. ~ t-.., ,_,...lo, .... t-,,, ;:; ... ~ 1., \ l I ! K= 14.S --II I ~ i,..._r-,.........._ h~~ GM=OdB _._ 
K=7.248 lit, ---.......... t"-i,... .... -... .:::S::.._GM = · 
I r,,...:--.... 3.61 dB, Gain crossovers '"'""'...._ .. ~' GM =25.55 dB--~ ' ..... .::::, 
oM = j 1.s1 di;;. ~ ' ,~~ 
' l:' .... 
.... ~ ... ' ~ !',,~ 
10 100 1000 10,000 
(J) (rad/sec) 
I~ u 1PM =064.2s0 
......... 
~ 
~ 
"" PM=7.78Q ' / Phase crossover 
I I I i--h 
l 1 I " PM=Og,. 
~ 
'~ 
~i,... 
"'i,.., "'~ V 1107.56 rad/sec 
I I I I I I 
IO 100 IOOO 10,000 
(J)(rad/sec) 
Figure 8-51 Bode diagrams of the system in Example 8-14-1. 
468 llll-Chapter 8. Frequency-Domain Analysis 
6 3 
u "O .a -~ 
el!! 
~ 20 
0 
-20 0 r a 
-80 ....... ..__._.._..._~~~ ...... ~~~ ....... ~~~ ....... ~~~ ....... ~~~ ........ ~~~ ....... ~~~~ 
-270 -225 -180 -135 -90 
Phase (deg) 
Figure 8-52 Gain-phase plots and Nichols chart of the system in Example 8-14-1. 
the Bode plots. The magnitude-phase plots of G(jw) corresponding to the Bode plots are shown 
in Fig. 8-52. These magnitude-phase plots. together with the Nichols chart. give information on 
the resonant peak Mn resonant frequency w, .. and the bandwidth BW. The gain and phase margins 
are also clearly marked on the magnitude-phase plots. Fig. 8-53 shows the closed-loop 
frequency responses. Table 8-2 summarizes the results of the frequency-domain analysis for 
the four different values of K together with the time-domain maximum overshoots determined in 
Section 5-8. 
'§' ..... 
~ 10 
9 
8 
7 
6 
5 
4 
3 
2 
0 1.0 8-15 Nichols Chart Applied to Nonunity-Feedback Systems ~ 469 
I I I 
K=273.57 _ ~--H~ Mr=oo 
K= 181.2 
M,=7.6 n I 
K=1.25_ K= 14.5 I 
Mr= 1.0 M,= 1.0 I \ I J J I 
"/ \\ _ ... ~ ~~ ~-N......._ --..... ~ ~ ......._ -I"'-,. I"-,..__ ~ 
10 100 1000 I0,000 
(o (rnd/sec} 
figure 8-53 Closed-loop frequency response of the system in Example 8-14-1. 
TABLE 8-2 Summary of Frequency-Domain Analysis 
Maximum w,. Gain Phase BW 
K Overshoot(%) Mr (rad/sec) Margin (dB) Margin (deg) (rad/sec) 
7.25 0 1.0 1.0 31.57 75.9 119.0 
14.5 4.3 1.0 43.33 5.55 64.25 270.5 
181.2 15.2 7.6 900.00 3.61 7.78 1402.0 
273.57 100.0 CC· 1000.00 0 0 1661.5 
41! 
• 8-15 NICHOLS CHART APPLIED TO NONUNITY-FEEDBACK SYSTEMS 
The constant-M loci and the Nichols chart presented in the preceding sections are limited to 
dosed-loop systems with unity feedback whose transfer function is given by Eq. (8-104 ). When 
a system has nonunity feedback, the closed-loop transfer function of the system is expressed as 
M( ) G(s) 
s = I + G(s)H(s) (8-115) 
where H(s) =f 1. The constant-M loci and the Nichols chart cannot be applied directly to 
obtain the closed-loop frequency response by plotting G{jw)H(jw). since the numerator of 
M(s) does not contain H(jw). 
By proper modification, the constant-M loci and Nichols chart can still be applied to a 
nonunity-feedback system. Let us consider the function 
G(s)H(s) 
P(s) = H(s)M(s) = 1 + G(s)H(s) (8-116) 
470 ~ Chapter 8. Frequency-Domain Analysis 
Apparently, Eq. (8-116) is of the same form as Eq. (8-104 ). The frequency response of 
P(jw) can be determined by plotting the function G(jw)H(jw) in the amplitude-phase 
coordinates along with the Nichols chart. Once this is done, the frequency-response 
information for M(jw) is obtained as follows. 
or, in terms of dB, . IP(jw)I IM{Jw)I = IH(jw)I (8-117) 
[M(jw)l(dB) = IP(jw)l(dB) -IH(jw)l(dB) 
</Jm(jw) = IM(jw) = LP(jw) -LH(jw) (8-118) 
(8-119) 
...,_ 8-16 SENSITIVITY STUDIES IN THE FREQUENCY DOMAIN 
• Sensitivity study is easily The advantage of using the frequency domain in linear control systems is that higher-order 
carried out in the frequency systems can be handled more easily than in the time domain. Furthermore, the sensitivity of 
domain. the system with respect to parameter variations can be easily interpreted using frequency-
Figure 8-54 JM (jw) I 
and ISM ( jw) I versus w for 
G 2500 
(s) = s(s + 5)(s + 2500) · domain plots. We shall show how the Nyquist plot and the Nichols chart can be utilized for 
the analysis and design of control systems based on sensitivity considerations. 
Consider a linear control system with unity feedback described by the transfer function 
G{s) 
M(s) = 1 + G(s) (8-120) 
The sensitivity of M(s) with respect to the loop gain K, which is a multiplying factor in 
G(s), is defined as 
dM(s) 
sM ( ) = M(s) = dM(s) G(s) 
G s dG(s) dG(s) M(s) (8-121) 
G(s) 
Taking the derivative of M(s) with respect to G(s) and substituting the result into 
Eq. (8-121) and simplifying, we have 
-'§' 
~ 
~I,) 
I;"') -
~ ..... 
~ 3.00 
2.70 
2.40 2.10 
1.80 
1.50 
1.20 
1.00 
0.90 
0.60 
0.30 
0.00 
0.01 M 1 
SG(s) = 1 + G{s) 1/G(s) 
1 + 1/G(s) 
I M(j(J}) I / 
)a -~ 
J 
1stf (j(J)) 1, ~v ~ V 
0.1 
(J) (l'ad/sec) (8-122) 
"' l 
1/, \ ~ j j , I 1 ' I ""~ 
I 
\ ' r-,...__ 
IO 100 
Figure 8-55 Magnitude .. 
phase plots of GU(J)) and 
l/G(jw) for 2500 
G(s} = s(s + 5}(s + 50} · 8-16 Sensitivity Studies in the Frequency Domain '4 471 
Clearly, the sensitivity function StJ (s) is a function of the complex variables. Fig. 8-54 
shows the magnitude plot of S~ (s) when G(s) is the transfer function given in Eq. (8w98). 
It is interesting to note that the sensitivity of the closed-loop system is inferior at 
frequencies greater than 4.8 rad/sec to the open-loop system whose sensitivity to the 
variation of K is always unity. In general, it is desirable to formulate a design criterion on 
sensitivity in the following manner: 
I~ . _ 1 _ f 1/G(jw)[ < 
0 (Jw)l -11 + G(jw)I -JI+ 1/G(jw)J -k 
where k is a positive real number. This sensitivity criterion is in addition to the regular 
performance criteria on the steady-state error and the relative stability. 
Eq. (8~123) is analogous to the magnitude of the closed-loop transfer function, 
JM(jw)J, given in Eq. (8-106), with G(jm) replaced by 1/G(jm). Thus, the sensitivity 
function of Eq. (8-123) can be detennined by plotting 1/G(jw) in the magnitude-phase 
coordinates with the Nichols chart. Fig. 8-55 shows the magnitude-phase plots of G{jw) 
and 1/G(jw) ofEq. (8-98). Notice that G(jw) is tangent to the M = 1.8 ]ocus from below, 
60 
50 
40 
30 
20 
$ 10 
s 
a.I "' 0 .a ·a 
~ 
~ -10 f 0 
I e 
V 
I / G(jro) ) ' 
\ )' /1 
\ / / VJ / 
"' / M=l.8 V V a ~ -M = 2.2-::::::: ~ ~ ,.-M=;4.0""'\ / 
-------::::: ~,. ----:------~ ::::-- -M=l.0..........,,-..., ----:: 
/ M=O.?O'y'" 
-/ V -/ M=0.2 
/ I A / G(jm) 
I I/ ,/ 
a cl \ 
0 -20 
-30 
-40 
-50 
-60 -270 -225 -180 -135 -90 
Phase (deg) 
472 "'~ Chapter 8. Frequency-Domain Analysis 
which means that Mt. of the closed-loop system is 1. 8. The 1 / G(jw) curve is tangent to the 
M = 2.2 curve from above and, according to Fig. 8-54, is the maximum value of IS~ (s) 1· 
Eq. (8-123) shows that, for low sensitivity, the loop gain of G(jw) must be high, but it 
is known that, in general, high gain could cause instability. Thus, the designer is again 
challenged by the task of designing a system with both a high degree of stability and low 
sensitivity. 
The design of robust control systems (low sensitivity) with the frequency-domain 
methods is discussed in Chapter 9. 
~ 8-17 MATLAB TOOLS AND CASE STUDIES 
8-18 SUMMARY Apart from the MATLAB toolboxes in this chapter, this chapter does not contain any 
software. In Chapter 9 we will introduce the Automatic Control Systems MATLAB tools. 
The Automatic Control Systems software (ACSYS) consists of a number of m-files and 
GUis (graphical user interface) for the analysis of simple control engineering transfer 
functions. All the frequency response topics may also be solved utilizing ACSYS. 
The chapter began by describing typical relationships between the open-loop and closed-loop 
frequency responses of linear systems. Performance specifications such as the resonance peak M,., 
resonant frequency ru,.. and bandwidth BW were defined in the frequency domain. The relationships 
among these parameters of a second-order prototype system were derived analytically. The effects of 
adding simple poles and zeros to the loop transfer function on Mr and BW were discussed. 
The Nyquist criterion for stability analysis of linear control systems was developed. The stability 
of a single-loop control system can be investigated by studying the behavior of the Nyquist plot of the 
loop transfer function G(s)H(s) for w = 0 tow= oo with respect to the critical point. If G(s)H(s) is a 
minimum-phase transfer function, the condition of stability is simplified so that the Nyquist plot will 
not enclose the critical point. 
The relationship between the root loci and the Nyquist plot was described in Section 8-7. The 
discussion should add more perspective to the understanding of both subjects. 
Relative stability was defined in terms of gain margin and phase margin. These quantities were 
defined in the polar coordinates as well as on the Bode diagram. The gain-phase plot allows the 
Nichols chart to be constructed for closed-loop analysis. The values of Mr and BW can be easily 
found by plotting the G(jw) locus on the Nichols chart. 
The stability of systems with pure time delay is analyzed by use of the Bode plot. 
Sensitivity function si (jw) was defined as a measure of the variation of M(jw) due to variations 
in G(jw). It was shown that the frequency~response plots of G(jw) and 1/G{jw) can be readily used 
for sensitivity studies. 
Finally, using the MATLAB toolboxes developed in this chapter or the ACSYS software. 
described in detail in Chapter 9, the reader may practice all the concepts discussed here . 
.. REVIEW QUESTIONS 
1. Explain why it is important to conduct frequency-domain analyses of linear control systems. 
2. Define resonance peak Mr of a closed-loop control system. 
3. Define bandwidth BW of a closed~loop system. 
4. List the advantages and disadvantages of studying stability with the Nyquist plot. 
5. List the advantages and disadvantages of carrying out frequency-domain analysis with the Bode 
plot. 
..._ REFERENCES References ~ 473 
6. List the advantages and disadvantages of carrying out frequency-domain analysis with the 
magnitude-phase plot. 
7. The following quantities are de.fined: 
Z =. number of zeros of L(s) that are in the right-half s-plane 
P = number of poles of L(s) that are in the right-half s-plane 
P<,, = number of poles of L(s) that are on the jw-axis 
Give the conditions on these parameters for the system to be (a) open-loop stable and (b) closed­
loop stable. 
8. What condition must be satisfied by the function L(jw) so that the Nyquist criterion is simplified 
to investigating whether the ( -1, jO) point is enclosed by the Nyquist plot? 
9. Give all the properties of a minimum-phase transfer function. 
10. Give the definitions of gain margin and phase margin. 
11. By applying a sinusoidal signal of frequency t.t>o to a linear system, the steady-state 
output of the system will also be of the same frequency. (T) (F) 
12. For a prntotype second-order system, the value of Mr depends solely on the 
damping ratio t. 
13. Adding a zero to the loop transfer function will always increase the bandwidth 
of the closed-loop system. 
14. The general effect of adding a pole to the loop transfer function is to make the 
closed~loop system less stable while decreasing the bandwidth. 
15. For a minimum-phase loop transfer function L(jw), if the phase margin is 
negative. then the closed-loop system is always unstable. 
16. Phase-crossover frequency is the frequency at which the phase of L{jw) is 0°. 
17. Gain-crossover frequency is the frequency at which the gain of L(jw) is O dB. 
18. Gain margin is measured at the phase-crossover frequency. 
19. Phase margin is measured at the gain-crossover frequency. 
20. A closed-loop system with a pure time delay in the loop is usually less stable 
than one without a time delay. 
21. The slope of the magnitude curve of the Bode plot of L(jw) at the gain crossover 
usually gives indication on the relative stability of the closed-loop system. (T) (F) 
(T) (F} 
(T) (F) 
(T) (F) 
(T} (F} 
(T) (F) 
(T) (F) 
(T) (F) 
(T) (F) 
(T) (F) 
22. Nichols chart can be used to find BW and Mr information of a closed-loop system. (T) (F) 
23. Bode plot can be used for stability analysis for minimum- as well as 
nonminimum-phase transfer functions. (T) (F) 
Answers to these review questions can be found on this book's companion Web site: 
www.wiley.com/college/golnaraghi • 
Nyquist Criterion of Continuous-Data Systems 
I. H. Nyquist, "'Regeneration Theory;'Be// System. Tech. J .• Vol 11, pp.126-147. Jan.1932. 
2. R. W. Brockett and J. L. Willems, .. Frequency Domain Stability Criteria-Part I," IEEE Trans. Automatic 
Control, Vol. AC-10, pp. 255-261. July 1965. 
3. R. W. Brockett and J. L. Willems, .. Frequency Domain Stability Criteria-Part 11," IEEE Trans. Automatic 
Control, Vol. AC-10, pp. 407-413, Oct. 1965. 
4. T. R. Natesan, "A Supplement to the Note on the Generalized Nyquist Criterion," IEEE Tmns. Automatic 
Control. Vol. Ac .. 12. pp. 215-216. April 1967. 
5. K. S. Yeung, "A Reformulation of Nyquist's Criterion." IEEE Trans. Educ. Vol. E-28, pp. 59-60. Feb. 1985. 
474 > Chapter 8. Frequency-Domain Analysis 
Sensitivity Function 
PROBLEMS 6. A. Gelb. "Graphical Evaluation of the Sensitivity Function Using the Nichols Chart," IRE Trans. Automatic 
Comrol. Vol. AC-7, pp. 57-58. July 1962. 
8-1. The forward-path transfer function of a unity-feedback control system is 
K G(s)-----s(s + 6.54) 
Analytically, find the resonance peak Mr, resonant frequency w,, and bandwidth BW of the closed­
loop system for the following values of K: 
(a) K = 5 
(b) K = 21.39 
(c)K=100 
Use the formulas for the second-order prototype system given in the text. 
8-2. Use MATLAB to verify your answer to Problem 8-1. 
8-3. The transfer function of a system is 
1 s+x­
G(s) =--/ 
s+ A2 
Determine when the system is a lead-network and lag-network. 
8-4. Use MATLAB to solve the following problems. Do not attempt to obtain the solutions 
analytically. The forward-path transfer functions of unity-feedback control systems are given in the 
following equations. Find the resonance peak Mr, resonant frequency w,, and bandwidth BW of the 
closed-loop systems. (Reminder: Make certain that the system is stable.) 
5 10 
(a) G(s) = s{l + 0.5s)(l + O.ls) (b) G(s) = s(l + 0.5s)(l + 0. Is) 
_ 500 IO(s + 1) 
(c) G(s) -(s + 1.2)(s + 4)(s + 10) (d) G(s) = s(s + 2)(s + 10) 
0.5 Iooe-s 
(e) G(s) = s(s2 + s + 1) (f) G(s) = s(s2 + 10s + 50) 
IOoe-s IO(s + 5) 
(g) G(s} = s(s2 + 10s + 100) (h) G(s) = s(s2 + 5s + 5) 
8-5. The specifications on a second-order unity-feedback control system with the closed-loop 
transfer function 
M(s) = Y(s) = w~ 
R(s) s2 + 2~wns + w~ 
are that the maximum overshoot must not exceed 10% and the rise time must be less than 0.1 sec. 
Find the corresponding limiting values of M,. and BW analytically. 
8-6. Repeat Problem 8-5 for maximum overshoot :5 20% and tr :5 0.2 sec. 
8-7. Repeat Problem 8-5 for maximum overshoot::; 30% and tr~ 0.2 sec. 
s .. s. Consider the forward-path transfer function of a unity-feedback control system given by 
G( ) 0.5K 
s = s(0.25s2 + 0.375.r + 1) 
(a) Analytically lind K such that the closed-loop bandwidth is about 1.5 rad/s (0.24 Hz). 
(b) Use MATLAB to verify your answer to part (a). 
Problems 475 
8-9. Repeat Problem 8-8 with a resonance peak of 2.2. 
8-10. The closed-loop frequency response jM(jw)J-versus-frequency of a second-order prototype 
system is shown in Fig SP-10. Sketch the corresponding unit-st~p response of the system; indicate the 
values of the maximum overshoot, peak time, and the steady-state error due to a unit-step input. 
'§' i 0.9 
0 3 (J) 
rad/sec 
Figure SP-10 
K 8~11. The forward-path transfer function of a system with an integral control H(s) = -is 
l s 
G(s) = lOs + 1 
(a) Find K when the closed-loop resonance peak is 1.4. 
(b) Determine the frequency at resonance, overshoot for step input~ phase margin~ and closed-loop 
BW according to the result of part (a). 
s .. 12. The forward-path transfer function of a unity-feedback control system is 
1 +Ts G(s)------2s( s2 + s + l) 
Use MATLAB to find the values of BWand Mr of the closed-loop system for T = 0.05. l. 2. 3. 
4, und 5. 
s .. 13. The forward-path transfer function of a unity-feedback control system is 
1 G(s) --~------2s(s2 +s+ 1)(1 +n) 
Use MATLAB to find the values of BW and M, of the closed-loop system for T = o. 0.5. I. 2. 3, 4. 
and 5. Use MATLAB to find the solutions, 
8-14. If a loop transfer function of a system is given by 
( ) ( ) 0.5K GsHs= 3 , 0.25s· + 0.375s-+ s + 0.5k 
(a) Use the second-order approximation to find the BW and the damping ratio. 
(b) If BW == l.5rad/s, find Kand the damping ratio. 
(c) Use MATLAB to verify your answer to part (b). 
s .. ts. The loop transfer functions L(s) of single-feedback-loop systems are given below. Sketch the 
Nyquist plot of l(jw) for w = 0 to w = cc. Determine the stability of the closed-loop system. If the 
system is unstable, find the number of poles of the closed-loop transfer function that are in the right­
half s-plane. Solve for the intersect of L(jw) on the negative real ax.is of the L(Jw)-p\ane analytically. 
You may construct the Nyquist plot of L(jw) using MATLAB. 
20 _ 10 
(a) l(s) = (b) L(s) = ------s{ 1 + O. ls){l + O.Ss} s( \ + O. ls){1 + 0.5s) 
(c) l(s) = 100( I + s) (d) L(s) = 2 IO 
s(I +0.ls)(l +0.2s)(l +0.5s) s (l +0.2s)(I +0.5s) 
476 ~ Chapter 8. Frequency-Domain Analysis 
(e) L(s) = 3(s + 2) 
s(s3 + 3s + 1) 
100 
(g) L(s) = s(s + l)(s2 + 2} 0.1 
(t) L(s) = s(s + l}(s2 + s + I) 
IO(s + 10} 
(h) L{s) = s(s + l}(s + 100) 
8-16. The loop transfer functions of single-feedback-loop control systems are given in the following 
equations. Apply the Nyquist criterion and determine the values of K for the system to be stable. 
Sketch the Nyquist plot of L(jw) with K = I for w = 0 tow = oo. You may use a computer program 
to plot the :Kyquist plots. 
K 
(a) L(s) = s(s + 2){s + IO) 
K 
(c) L(s) = s2(s + 2}(s + 10) 
(e) L(s) = K(s + 5)(s + 1) 
(s + 50)(s + 2)3 (b) L(s) . , K(s + 1) 
-s(s + 2)(s + 5)(s + 15) 
K (d) L(s) = ---.........,,,. 
(s + 5}(s + 2)2 
8-17. The forward-path transfer function of a unity-feedback control system is 
K 
G(s) = (s + 5}'1 
Determine by means of the Nyquist criterion, the range of K ( -oo < K < oo) for the closed-loop 
system to be stable. Sketch the Nyquist plot of G(jw) for w = 0 to w = c;,o. 
(a) n = 2 
(b) n = 3 
(C) n = 4 
8-18. Sketch the Nyquist plot for the controlled system shown in Fig. SP-18. 
K 
X s2+2s+2 1--..---y 
s+I 
Figure BP-18 
Determine by means of the Nyquist criterion, the range of K(-oc < K <co) for the closed-loop 
system to be stable. 
8-19. The characteristic equation of a linear control system is given in the following equation. 
s(s3 +2s2+s+ I) +K(s2+s+ I) =0 
(a) Apply the Nyquist criterion to determine the values of K for system stability. 
(b) Check the answers by means of the Routh-Hurwitz criterion. 
8-20. Repeat Problem 8-19 for s3 + 3s2 + 3s + I + K = 0. 
8-21. The forward-path transfer function of a unity-feedback control system with a PD 
(proportional-derivative) controller is 
G(s) = IO(Kp; Kns) 
Select the value of Kp so that the parabolic-error constant Ka is 100. Find the equivalent forward­
path transfer function Geq(s) for w = 0 tow= co. Determine the range of Kv for stability by the 
Nyquist criterion. 
8-22. The block diagram of a feedback control system is shown in Fig. BP-22. 
(a) Apply the Nyquist criterion to determine the range of K for stability. 
(b) Check the answer obtained in part (a) with the Routh-Hurwitz criterion. 
Problems "4 477 
G(s) Y(s) 
~ 
G(s)= (s+4~s+5) 
Figure 8P-22 
8-23. The forward-path transfer function of the liquid-level control system in Problem 5-42 is 
G(s) = KaK;nK1N 
s(Rals + K;Kh)(As + K0) 
The following system parameters are given: Ka= 50, K; = 10, Ki = 50, J = 0.006, Kb = 0.0706, 
n = 0.01, and Ra= 10. The values of A, N, and K0 are variable. 
(a) For A = 50 and K0 = 100, sketch the Nyquist plot of G{j(J)) for w = 0 to oo with N as a variable 
parameter. Find the maximum integer value of N so that the closed-loop system is stable. 
(b) LetN = 10 and K0 = 100. Sketch the Nyquist plot of an equivalent transfer function Geq(Jw) that 
has A as a multiplying factor. Find the critical value of K0 for stability. 
(c) For A= 50 and N = 10, sketch the Nyquist plot of an equivalent transfer function Geq( jw) that 
has K0 as a multiplying factor. Find the critical value of K0 for stability. 
8-24. The block diagram of a de-motor control system is shown in Fig. SP-24. Determin e the range 
of K for stability using the Nyquist criterion when K, has the following values: 
(a) K1 = O 
(b) K, = O.Ql 
(c) K1 = 0.1 
R(s) E(s) 
+ 
Figure BP-24 K 10 
I +O.ls 
KiS 1 
o.01l Y(s) 
8-25. For the system shown in Fig. SP-24, let K = 10. Find the range of K1 for stability with the 
Nyquist criterion. 
8-26. Fig. SP-26 shows the block diagram of a servomotor . 
X 
Figure BP-26 K 
Js+a y 
478 ._ Chapter 8. Frequency-Domain Analysis 
Assume J = I kg-m2 and B = I N-m/rad/sec. Determine the range of K for stability using the 
Nyquist criterion when K1 has the following. values: 
(a) K1 = 0 
(b) Kt= 0.1 
(c) Kt ~0.2 
8-27. For the system shown in Fig. SP-26. let K = 1 O. Find the range of K1 for stability with the 
Nyquist criterion. 
8-28. For the controlled system shown in Fig. SP-28. draw the Nyquist plot and apply the Nyquist 
criterion to determine the range of K for stability and determine the number of roots in the right-half 
s-plane for the values of K where the system is unstable. 
X L......_ ____ Ki_G_(s_)_:_ -~ __ ., Y 
Figure BP-28 
s+l 
(a) G(s) = (s-I)2 
s-1 
(b) G(s) = (s + 1)2 
8-29. The steel-rolling control system shown in Fig. 4P-18 has the forward-path transfer function 
lOOKe-Tds 
G(s) =-.,-----s(:~-+ 10s + 100) 
(a) When K = 1. determine the maximum time delay Tc1 in seconds for the closed-loop system to 
be stable. 
(b) When the time delay Td is I sec, find the maximum value of K for system stability. 
8-30. Repeat Problem 8-29 with the following conditions. 
(a) When K = 0.1, determine the maximum time delay Tt1 in seconds for the closed~loop system 
to be stable. 
(b) When the time delay T,,1 is 0.1 sec. find the maximum value of K for system stability. 
8-31. The open-loop transfer function of a system is given by 
K G(s)H(s) = )( s(r1s+ 1 r2s + l) 
Study the stability of the system for the following: 
(a) K is smaII. 
(b) K is large. 
8~32. The system schematic shown in Fig. 8P-32 is devised to control the concentration of a 
chemical solution by mixing water and concentrated solution in appropriate proportions. The 
transfer function of the system components between the amplifier output ea (V) and the valve 
position x (in.) is 
X(s) K 
Ea(s) = s2 + 10s + 100 
When the sensor is viewing pure water, the amplifier output voltage el, is zero; when it is viewing 
concentrated solution, ea = IO V; and 0.1 in. of the valve motion changes the output concentration 
from zero to maximum. The valve ports can be assumed to be shaped so that the output 
Problems 479 
concentration varies linearly with the valve position. The output tube has a cross-sectional area of 
0.1 in.2, and the rate of flow is 103 in./sec regardless of the valve position. To make sure the sensor 
views a homogeneou s solution, it is desirable to place it at some distance D in. from the valve. 
Water 
Concentrated 
solution 
Figure BP-32 Solenoid 
(a) Derive the loop trnnsfer function of the system. Sen~or 
Ainplitier 
(b) When K = 10, find the maximum distance D (in.) so that the system is stable. Use the Nyquist 
stability criterion. 
(c) Let D = 10 in. Find the maximum value of K for system stability. 
8-33. For the mixing system described in Problem 8-32, the following system parameters are given: 
When the sensor is viewing pure water, the amplifier output voltage es = 0 V; when it is viewing 
concentrated solution, ea = 1 V; and 0. l in. of the valve motion changes the output concentration 
from zero to ma:timum . The rest of the system characteristics are the same as in Problem 8-32. 
Repeat the three parts of Problem 8-32. 
8-34. Figure 8P-34 shows the block diagram of a conn·ol system. 
X 
Figure BP-34 K 
s+J 
s+2 
s2+2s+2 1--~-• y 
(a) Dntw the Nyquist plot and apply the Nyquist criterion to determine the range of K for stability. 
(b) Determine the number of roots in the right-half s-plane for the values of K where the system is 
unstable. 
(c) Use Routh's criterion TO determine the range of K for stability. 
8-35. The forward-path transfer function of a unity-feedback control system is 
G(s) = 1000 
s(s2 + 105.1· + 600) 
(a) Find the values of M,, w,., and BW of the closed-loop system. 
(b) Find the parameters of the second-order system with the open-loop transfer function 
480 r.,. Chapter 8. Frequency-Domain Analysis 
that will give the same values for M,. and Wr as the third-order system. Compare the values ofBW of 
the two systems. 
8-36. Sketch or plot the Bode diagrams of the forward-path transfer functions given in Problem 8-4. 
Find the gain margin, gain-crossover frequency, phase margin, and the phase-crossoverfrequency for 
each system. 
8-37. The loop transfer function of a system is given by 
()H() 25(s+l) 
Gs s =s(s+2)(sZ+2s+16) 
Use MATLAB to plot the Bode diagrams of the system and fmd the phase margin and gain margin 
of the system. 
8-38. Use MATLAB to plot the Bode diagrams of the system shown in Fig. SP-34 when K = 1, and 
determine the stable range of K by using phase margin and gain margin. 
S-39. The forward-path transfer functions of unity-feedback control systems are given in the 
following equations. Plot the Bode diagram of G(jw) / K, and do the following: (1) Find the value of K 
so that the gain margin of the system is 20 dB. (2) Find the value of K so that the phase margin of the 
system is 45°. 
K 
(a) G(s) = s(I + O.ls)(l + 0.5s) 
K (c) G(s) = --3 (s+ 3) 
Ke-s 
(e) G(s) = s(l + O.ls + 0.01s2) b Gs - K(s+l) 
( ) ( ) -s(l + O.ls)(l + 0.2s)(l + 0.5s) 
K (d) G{a) = --4 (s+ 3) 
(f) G(s) = K(l + 0.5s} 
s(s2 +s+ 1) 
s .. 40. The forward .. path transfer functions of unity-feedback control systems are given in the 
following equations. Plot G(j(J)) / K in the gain-phase coordinates of the Nichols chart, and do the 
following; (1) Find the value of K so that the gain margin of the system is 10 dB. (2) Find the value of 
K so that the phase margin of the system is 45°. (3) Find the value of K so that Mr= 1.2. 
a) G(s) _ IOK . ·( ) _ 5K(s + 1) 
( · -s(l + O.ls){l + 0.5s) (b) Gs -s(l + O.ls)(l + 0.2s)(l + 0.5s) 
lOK . lOKe-s 
(c) G(s) = s(l + O.ls + O.Ols2) (d) G(s) = s(l + O.ls + 0.0ls2) 
g .. 41. The forward-path of a unity-feedback system is given by 
(a) Plot the Bode diagram. 
(b) Plot the root locus. G(s)H(s) = K(s + l)(s + 2) 
· s2(s + 3)(s2 + 2s + 25) 
(c) Find the gain and frequency where instability occurs. 
(d) Find the gain at the phase margin of 20°. 
( e) Find the gain margin when the phase margin is 20°. 
8-42. The Bode diagram of the forward-path transfer function of a unity-feedback control 
system is obtained experimentally (as shown in Fig. SP-42) when the forward gain K is set at its 
nominal value. 
(a) Find the gain and phase margins of the system from the diagram as best you can read them. Find 
the gain .. and phase-crossover frequencies. 
(b) Repeat part (a) if the gain is doubled from its nominal value. 
(c) Repeat part (a) if the gain is 10 times its nominal value. 
(d) Find out how much the gainmust be changed from its nominal value if the gain margin is 40 dB. 
(e) Find out how much the loop gain must be changed from its nominal value if the phase margin 
is 45°. 
Problems -till 481 
(f) Find the steady-state error of the system if the reference input to the system is a unit-step function. 
(g) The forward path now has a pure time delay of Tt1 sec, so that the forward-path transfer function is 
multiplied by e-Tds, Find the gain margin and the phase margin for Tt1 = 0.1 sec. The gain is set at 
nominal. 
(h) With the gain set at nominal, find the maximum time delay Td the system can tolerate without 
going into instability. 
co :s 
'§' ..... 
5' 
-~ 
:;E. 60 
40 -........... 
20 
0 
-20 
-40 
-60 
-80 
-100 
-120 
0.01 
0 
--45 
-90 
'§' -135 ...... 
~ -180 
-225 
-270 
0.01 
Figure BP-42 r--,.. ~r-, "" ... ---
0.1 
~ 
0.1 r-,.. r-l'-""t--~ 
-"" "' ~ r,-....... 
r-.... I'._ 
1.0 IQ 
ro(rad/sec) 
--
~ ... .... ~ 1-....... 
i"" -' I\ 
I\ 
f\ 
~I' 
1.0 10 
ru(rad/sec) 
8-43. Repeat Problem 8-42 using Fig. 8P-42 for the foUowing parts. 'r-. '~ " '['. 
' r..~~ 
100 1000 
,~:-,~ 
"r-,........ .._....__ 
100 1000 
(a) Find the gain and phase margins if the gain is four times its nominal value. Find the gain-and 
phase-crossover frequencies. 
(b) Find out how much the gain must be changed from its nominal value if the gain margin is 20 dB. 
(c) Find the marginal value of the forward~path gain for system stability. 
(d) Find out how much the gain must be changed from its nominal value if the phase margin is 60°. 
(e) Find the steady-state error of the system if the reference input is a unit-step function and the gain 
is twice its nominal value. 
(f) Find the steady-state error of the system if the reference input is a unit-step function and the gain 
is 20 times its nominal value. 
482 Chapter B. Frequency-Domain Analysis 
(g) The system now has a pure time delay so that the forward-path transfer function is multiplied by 
e-T"s. Find the gain and phase margins when Tt1 = 0.1 sec. The gain is set at its nominal value. 
(h) With the gain set at 10 times its nominal, find the maximum time delay 1:1 the system can tolerate 
without going into instability. 
8-44. The forward-path transfer function of a unity-feedback control system is 
G(s)H(s) = 80e-o.1s 
s(s + 4)(s + 10) 
(a) Draw the Nyquist plot of the system. 
(b) Plot the Bode diagram of the system. 
(c) Find the phase margin and gain margin of the system. 
8-45. The forward-path transfer function of a unity-feedback control system is 
G(s) = K(l +0.2s)(1 +0.ls) 
s2(1 + s)(l + O.Ols)2 
(a) Construct the Bode and Nyquist plots of G(jw)/K and determine the. range of K for system 
stability. 
(b) Construct the root loci of the system for K ~ 0. Determine the values of Kand w at the points 
where the root loci cross the jw-axis, using the information found from the Bode plot. 
8-46. Repeat Problem 8-45 for the following transfer function: 
G() = K(s + l.5)(s + 2) s 2 ? s (s· + 2s + 2) 
8-47. Repeat Problem 8-45 for the following transfer Function: 
G s)H s = 16000(.s+ l)(s+5) 
( ( ) s(s + 0.l)(s + 8)(s + 20)(s + 50) 
8-48. The forward-path transfer function of the de-motor control syslem described in Fig. 3P-l l is 
G 6.087 x 108 K 
(s) = s(s3 + 423.42s2 + 2.6667 x J06s + 4.2342 x 108) 
Plot the Bode diagram of G(jw) with K = 1, and determine the gain margin and phase margin of the 
system. Find the critical value of K for stability. 
8-49. The transfer function between the output position E>L(s) and the motor current J,i(s) of the 
robot arm modeled in Fig. 4P-53 is 
C ( ) _ 0L(s) _ K;(Bs + K) 
11S-()- A la S u0 
where 
~o(s) = s{ hims'+ [h(B,,, + B) + J,,,(BL + B)Js2 
+[BLBm +(BL+ B,,,)B + (J,,, + h)K)s + K(BL + B,,,)} 
The arm is controlled by a closed-loop system, as shown in Fig. SP-49. The system parameters are 
K,, = 65, K = 100, K; = 0.4, 8 = 0.2,lm = 0.2,BL = 0.01, h = 0.6, and B,,, = 0.25. 
K,, 
~-~ 
Amplifier 
Figure SP-49 l,is) B BL(s) 
GP(s) --~--
Motor-robot-arm 
Problems . 483 
(a) Derive the forward-path transfer function G(s) = E>L(s)/E(s). 
(b) Draw the Bode diagram of G(iw). Find the gain and phase margins of the system. 
(c) Draw IM(jw)I versus w. where M(s) is the closed-loop transfer function. Find M, .• w, .• and BW. 
8-50. For the ball-and-beam system described in Problem 4-11 and shown in Fig. 8P-50, assume the 
following: 
111 = 0.11 kg 
r = 0.015 
d = 0.03m 
g = 9.8 m/s2 
L = I.Om 
Figure BP-50 mass of the ball 
radius of the ball 
lever arm offset 
gravitational acceleration 
length of the beam I = 9.99 x 10-6 kg-m2 
p ball's moment of inertia 
ball position coordinate 
beam angle coordinate 
servo gear angle 
If the system is controlled by a proportional controller in a unity-feedback control system. 
(a) Find the transfer function from the genr angle (9) to the ball position (P). 
(b) Find the closed-loop transfer function. 
(c) Find the range of K for stability. 
(d) Plot the Bode diagram for the system for K = l, and find the gain and phase margins of the 
system. 
(e) Draw JM(jw)J versus (t), where M(s) is the closed-loop transfer function. Find Mr, Wr, and BW. 
8-51. The gain-phase plot of the forward-path transfer function of G(jw) / K of a unity-feedback 
control system is shown in Fig. 8P-51. Find the following performance characteristics of the 
system. 
(a) Gain-crossover frequency (rad/sec) when K = 1. 
(b) Phase-crossover frequency (rad/sec) when K = 1. 
(c) Gain margin (dB) when K = 1. 
(d) Phase margin (deg) when K = 1. 
(e) Resonance peak Mr when K = 1. 
(l) Resonant frequency Wr (rad/sec) when K = I. 
(g) BW of the closed-loop system when K = 1. 
(h) The value of K so that the gain margin is 20 dB. 
(i) The value of K so that the system is marginally stable. Find the frequency of sustained oscillation 
in rad/sec. 
G) Steady-state error when the reference input is a unit-step function. 
484 ._ Chapter 8. Frequency-Domain Analysis 
30.00 ..------.-----.-----.----,----,-----,----...----
0 
4 
10.00 
~ 3 
4) 
'Q a ., 
~ 
~ 
0.00 
-20.00 __ ___._._ ____ __._ _________ ........_ _______ __. 
-270.0 -247.5 -225.0 -202.5 -180.0 -157.5 -135.0 -112.5 -90.0 
Phase (deg) 
Figure BP-51 
8-52. Repeat parts {a) through (g) of Problem 8-51 when K = 10. Repeat part {h) for gain margin = 
40dB. 
8-53. For the system in Problem 8-44, plot the Nichols chart and find magnitudes and phase angles 
of the dosed-loop frequency response. Then plot the Bode diagram of the closed-loop system. 
8-S4. Use ACSYS or MATLAB to analyze the frequency response of the following unity-feedback 
control systems. Plot the Bode diagrams, polar plots, and gain-phase plots. and compute the phase 
margin, gain margin, M,. and BW. 
1 + O.ls 
(a) G(s) = s(s + 1)(1 + O.Ols) 
(s + 1) 
(c) G(s) = s(l + 0.2s){l + 0.5s) 
50 
(e) G(s) = s(s + 1 )(1 + 0.5s2) 
toe-0·ts 
(g) G(s) = s2 + 2s + 2 0.5(s + 1) 
(b) G(s} = s(I +0.2s)(l +s+0.5s 2) 
1 
(d) G(s) := s(l + s)(l + 0.5s) 
. (l + 0.Is)e-O.b 
(f) G(s) == s(s + 1)(1 + O.Ols} 
8-55. For the gain-phase plot of G(jw)/K shown in Fig. 8P·51, the system now has a pure time 
delay of T:1 in the forward path, so that the forward-path transfer function becomes G(.~)e-Tds. 
Problems 485 
(a) With K = I, find T,1 so that the phase margin is 40°. 
(b) With K = I, find the maximum value of T,1 so that the system will remain stable. 
8-56. Repeat Problem 8-55 with K = 10. 
8-57. Repeat Problem 8-55 so that the gain margin is 5 dB when K = I. 
8-58. The block diagram of a furnace-control system is shown in Fig. 8P-58. The transfer function 
of the process is 
l 
Gp(s) = (1 +!Os)(! + 25s) 
The time delay Tt1 is 2 sec. 
R(s) E(s) Y(s) 
+ 
Burner Furnace 
Figure BP-58 
(a) Plot the Bode diagram of G(s) = Y(s)/E(s) , and find the gain-crossover and phase-crossove r 
frequencies. Find the gain margin and the phase margin. 
(b) Approximate the time delay by [Eq. (4-22'.l)l 
r . I e-d·' 
l + Tds + Tds2 /2 
and repeat part (a). Comment on the accuracy of the approximation . What is the maximum frequency 
below which the polynomial approximation is accurate'' 
(c) Repeal part (b) for approximating the time delay term by [Eq. (4-224)] 
e-T.,s '°" 1 -Tds/2 
-1 + T,1s/2 
8-59. Repeat Problem 8-58 wilh T,1 = l sec. 
8-60. Plot the Jst{ ( jw) J-versus-w plot for the system described in Problem 8-49 for K = 1. Find the 
frequency at which the sensitivity is maximum and the value of the maximum sensitivity. 
8-61. Fig. SP-61 shows the pitch controller system for an aircraft, as described in Problem 4-12. 
Drag 
Figure BP-61 
486 Ii'-Chapter 8. Frequency-Domain Analysis 
If the system is controlled by a proportional controller in a unity~feedback control system, 
(a) Find the transfer function between pitch angle and elevator deflection angle. 
{b) Find the closed-loop transfer function. 
(c) Find the range of K for stability. 
(d) Plot the Bode diagram for the system for K = l, and find the gain and phase margins of the 
system. 
(e) Draw IM(jw)I versus w. where M(s) is the closed-loop transfer function. Find M,. w,, and BW. 
CHAPTER 9 
Design of Control Systems 
9-1 INTRODUCTION 
All the foundations of analysis that we have laid in the preceding chapters led to the 
ultimate goal of design of control systems. Starting with the controlled process such as that 
shown by the block diagram in Fig. 9-1, control system design involves the following three 
steps: 
1. Determine what the system should do and how to do it (design. specifications). 
2. Determine the controller or compensator configuration, relative to how it is 
connected to the controlled process. 
3. Determine the parameter values of the controller to achieve the design goals. 
These design tasks are explored further in the following sections. 
9-1-1 Design Specifications 
We often use design specification s to describe what the system should do and how it is 
done. These specifications are unique to each individual application and often include 
specifications about relative stability, steady-state accuracy (error), transient-response 
characteristics , and frequency-response characteristics . In some applications there may 
be additional specifications on sensitivity to parameter variations , that is, robustness , or 
disturbance rejection . 
The design of linear control systems can be carried out in either the time domain or the 
frequency domain. For instance, steady-state accuracy is often specified with respect to a 
step input, a ramp input, or a parabolic input, and the design to meet a certain requirement 
is more conveniently carried out in the time domain. Other specifications such as 
maximum overshoot, rise time, and settling time are all defined for a unit-step input 
and, therefore, are used specifically for tlme-domain design. We have learned that relative 
stability is also measured in terms of gain margin, phase margin, and Mr. These are 
typical frequency -domain specifications, which should be used in conjunction with such 
tools as the Bode plol, polar plul, gain-phase plot, and Nichols chart. 
We have shown that, for a second-order prototype system, there are simple analytical 
relationships between some of these time-domain and frequency -domain specifications . 
However, for higher-order systems, correlation s between time-domain and frequency­
domain specifications are difficult to establish. As pointed out earlier, the analysis and 
~~u-(t)~~ CONTROLLED 
PROCESS Gp Control 
vector y(t) 
Controlled variables 
( output vector) Figure 9-1 Controlled process. 
487 
488 . Chapter 9. Design of Control Systems 
design of control systems is pretty much an exercise of selecting from several alternative 
methods for solving the same problem. 
Thus, the choice of whether the design should be conducted in the time domain or the 
frequency domain depends often on the preference of the designer. We should be quick to 
point out, however, that in most cases, time-domain specifications such as maximum 
overshoot, rise time, and settling time are usually used as the final measure of system 
performance. To an inexperienced designer, it is difficult to comprehend the physical 
connection between frequency-domain specifications such as gain and phase margins and 
resonance peak to actual system performance. For instance, does a gain margin of 20 dB 
guarantee a maximum overshoot of less than 10%? To a designer it makes more sense to 
specify, for example, that the maximum overshoot should be less than 5% and a settling 
time less than 0.01 sec. It is less obvious what, for example, a phase margin of 60° and an 
M, of less than 1.1 may bring in system performance. The following outline will hopefully 
clarify and explain the choices and reasons for using time-domain versus frequency­
domain specifications. 
1. Historically. the design of linear control systems was developed with a wealth of 
graphical tools such as the Bode plot, Nyquist plot, gain-phase plot, and Nichols 
chart, which are all carried out in the frequency domain. The advantage of these 
tools is that they can all be sketched by following approximation methods without 
detailed plotting. Therefore, the designer can carry out designs using frequency­
domain specifications such as gain margin, phase margin, M,, and the like. 
High-order systems do not generally pose any particular problem. For certain 
types of controllers, design procedures in the frequency domain are available to 
reduce the trial-and-error effort to a minimum. 
2. Design in the time domain using such performance specifications as rise time, 
delay time, settling time, maximum overshoot, and the like is possible 
analytically only for second-order systems or for systems that can be approxi­
mated by second-order systems. General design procedures using time-domain 
specifications are difficult to establish for systems with an order higher than the 
second. 
The development and availability of high-powered and user-friendly computer soft­
ware, such as MATLAB, is rapidly changing the practice of control system design, which 
until recently had been dictated by historical development. Now with MATLAB, the 
designer can go through a large numher of design runs using the time-domain specifica­
tions within a matter of minutes. This diminishes considerably the historical edge of the 
frequency-domain design, which is based on the convenience of performing graphical 
design manually. 
Throughout the chapter, we have incorporated small MATLAB toolboxes to help your 
understanding of the examples, and, at the end of the chapter, we present the Automatic 
Control Systems software package (ACSYS)-it is easy to use and fully graphics based to 
eliminate the user's need to write code. 
Finally, it is generally difficult (except for an experienced designer) to select a 
meaningful set of frequency-domain specifications that will correspond to the desired 
time-domain performance requirements. For example, specifying a phase margin of 60° 
would be meaningless unless we know that it cmTesponds to a certain maximum overshoot. 
As it turns out, to control maximum overshoot, usually one has to specify at least phase 
margin and M,.. Eventually .. establishing an intelligent set of frequency-domain specifica­
tions becomes a trial~and-error process that precedes the actual design, which often is also a 
9-1 Introduction 489 
trial-and-error effort. However, frequency-domain methods are still valuable in inter­
preting noise rejection and sensitivity properties of the system, and, most important, they 
offer another perspective to the design process. Therefore, in this chapter the design 
techniques in the time domain and the frequency domain are treated side by side, so that the 
methods can be easily compared. 
9-1-2 Controller Configurations 
In general, the dynamics of a linear controlled process can be represented by the block 
diagram shown in Fig. 9-1. The design objective is to have the controlled variables, 
represented by the output vector y(t), behave in certain desirable ways. The problem 
essentially involves the determination of the control signal u(t) over the prescribed time 
interval so that the design objectives are all satisfied. 
Most of the conventional design methods in control systems rely on the so-called 
fixed-configuration design in that the designer at the outset decides the basic configura­
tion of the overall designed system and decides where the controller is to be positioned 
relative to the controlled process. The problem then involves the design of the elements of 
the controller. Because most control efforts involve the modification or compensation of 
the system-performance characteristics, the general design using fixed configuration is also 
called compensation. 
Fig. 9-2 illustrates several commonly used system configurations with controller 
compensation. These are described briefly as follows. 
• Series (cascade) compensation: Fig. 9-2(a) shows the most commonly used 
system configuration with the controller placed in series with the controlled 
process, and the configuration is referred to as series or cascade compensation. 
• Feedback compensation: In Fig. 9-2(b), the controller is placed in the minor 
feedback path, and the scheme is called feedback compensation. 
• State-feedback compensation: Fig. 9-2(c) shows a system that generates the 
control signal by feeding back the state variables through constant real gains, 
and the scheme is known as state feedback. The problem with state-feedback 
control is that, for high-order systems, the large number of state variables involved 
would require a large number of transducers to sense the state variables for 
feedback. Thus, the actual implementation of the state-feedback control scheme 
may be costly or impractical. Even for low-order systems, often not all the state 
variables are directly accessible, and an observer or estimator may be necessary to 
create the estimated state variables from measurements of the output variables. 
The compensation schemes shown in Figs. 9-2(a), (b), and (c) all have one degree of 
freedom in that there is only one controller in each system, even though the controller may 
have more than one parameter that can be varied. The disadvantage with a one-degree-of­
freedom controller is that the performance criteria that can be realized are limited. For 
example, if a system is to be designed to achieve a certain amount of relative stability, it may 
have poor sensitivity to parameter variations. Or if the roots of the characteristic equation are 
selected to provide a certain amount of relative damping, the maximum overshoot of the step 
response may still be excessive because of the zeros of the closed-loop transfer function. The 
compensation schemes shown in Figs. 9-2(d), (e), and (f) all have two degrees of freedom. 
• Series-feedback compensation: Fig. 9-2( d) shows the series-feedback compensa­
tion for which a series controller and a feedback controller are used. 
490 Chapter 9. Design of Control Systems 
CONTROLLER u(r) 
Gc(s) 
(a) CONTROLLED 
PROCESS Gp(s) y(I) 
State variables ~----~ 
CONTROLLER x(t) 
Gp(s) 
K 
Siate feedback 
(c) 
CONTROLLER 
Gc(s) 
(d) y(t) 
C 
CONTROLLED 
PROCESS Gp(s) 
CONTROLLER 
G1./.s) y(t) 
r(t) CONTROLLER 
ccpl CONTROLLER u(1) 
Gc(s) CONTROLLED 
PROCESS Gp(s) 
(e) 
CONTROLLER ,-----pt ,__~ Gis) 
CONTROLLER 
G/s) 
(t) CONTROLLED 
PROCESS Gp(s) CONTROLLED 
PROCESS Gp(s) 
CONTROLLER 
Gc(s) 
(b) 
y(t) 
y(r) y(r) 
Figure 9-2 Various controller configurations in control-system compensation. (a) Series or cascade 
compensation. (b) Feedback compensation. (c) State-feedback control. (d) Series-feedback 
compensation (two degrees of freedom). (e) F01ward compensation with series compensation 
(two degrees of freedom). (f) Feedforward compensation (two degrees of freedom). 
• Feedforward compensation : Figs. 9-2(e) and (f) show the so-called feedforward 
compensation. In Fig. 9-2(e), the feedforward controller Gc:r (s) is placed in series 
with the closed-loop system, which has a controller Ge (s) in the forward path. In 
Fig. 9-2(f), the feedforward controller Gel (s) is placed in parallel with the forward 
path. The key to the feedforward compensation is that the controller G<f (s) is not in 
9-1 Introduction ...-: 491 
the loop of the system, so it does not affect the roots of the characteristic equation of 
the original system. The poles and zeros of Gcf (s) may be selected to add or cancel 
the poles and zeros of the closed-loop system transfer function. 
One of the commonly used controllers in the compensation schemes just described is a 
PID controller, which applies a signal to the process that is proportional to the actuating 
signal in addition to adding integral and derivative of the actuating signal. Because these 
signal components are easily realized and visualized in the time domain, PID controllers 
are commonly designed using time-domain methods. In addition to the PID-type control­
lers, lead, lag, lead-lag, and notch controllers are also frequently used. The names of these 
controllers come from properties of their respective frequency-domain characteristics. As a 
result, these controllers are often designed using frequency-domain concepts. Despite these 
design tendencies, however, all control system designs will benefit by viewing the resulting 
design from both time-and frequency-domain viewpoints. Thus, both methods will be used 
extensively in this chapter. 
It should be pointed out that these compensation schemes are by no means exhaustive. 
The details of these compensation schemes will be discussed in later sections of this 
chapter. Although the systems illustrated in Fig. 9-2 are all for continuous-data control. the 
same configurations can be applied to discrete-data control, in which case the controllers 
are all digital, with the necessary interfacings and signal converters. 
9-1-3 Fundamental Principles of Design 
After a controller configuration is chosen, the designer must choose a controller type that, 
with proper selection of its element values, will satisfy all the design specifications. The 
types of controllers available for control-system design are bounded only by one's 
imagination. Engineering practice usually dictates that one choose the simplest controller 
that meets all the design specifications. In most cases, the more complex a controller is, the 
more it costs, the less reliable it is, and the more difficult it is to design. Choosing a specific 
controller for a specific application is often based on the designer's past experience and 
sometimes intuition, and it entails as much art as it does science. As a novice, you may 
initially find it difficult to make intelligent choices of controllers with confidence. By 
understanding that confidence comes only through experience~ this chapter provides 
guided experiences that illustrate the basic elements of control system designs. 
After a controller is chosen, the next task is to choose controller parameter values. 
These parameter values are typically the coefficients of one or more transfer functions 
making up the controller. The basic design approach is to use the analysis tools discussed in 
the previous chapters to determine bow individual parameter values influence the design 
specifications and, finally, system performance. Based on this information, controller 
parameters are selected so that an design specifications are met. While this process is 
sometimes straightforward, more often than not it involves many design iterations since 
controller parameters usually interact with each other and influence design specifications in 
conflicting ways. For example, a particular parameter value may be chosen so that the 
maximum overshoot is satisfied, but in the process of varying another parameter value in an 
attempt to meet the rise-time requirement, the maximum overshoot specification may no 
longer be met! Clearly, the more design specifications there are and the more controller 
parameters there are, the more complicated the design process becomes. 
In carrying out the design either in the time domain or the frequency domain, it is 
important to establish some basic guidelines or design rules. Keep in mind that time­
domain design usually relies heavily on the s-plane and the root loci. Frequency-domain 
492 >-Chapter 9. Design of Control Systems 
design is based on manipulating the gain and phase of the loop transfer function so that the 
specifications are met. 
In general. it is useful to summarize the time-domain and frequency-domain character­
istics so that they can be used as guidelines for design purposes. 
1. Complex-conjugate poles of the closed-loop transfer function lead to a step 
response that is underdamped. If all system poles are real. the step response is 
overdamped. However, zeros of the closed-loop transfer function may cause 
overshoot even if the system is overdamped. 
2. The response of a system is dominated by those poles closest to the origin in the s­
plane. Transients due to those poles farther to the left decay faster. 
3. The farther to the left in the s-plane the system's dominant poles are, the faster the 
system will respond and the greater its bandwidth will be. 
4. The farther to the left in the s-plane the system's dominant poles are, the more 
expensive it will be and the larger its internal signals will be. While this can be 
justified analytically, it is obvious that striking a nail harder with a hammer drives 
the nail in faster but requires more energy per strike. Similarly, a sports car can 
accelerate faster, but it uses more fuel than an average car. 
5. When a pole and zero of a system transfer function nearly cancel each other, the 
portion of the system response associated with the pole will have a small 
magnitude. 
6. Time-domain and frequency-domain specifications are loosely assodaletl with 
each other. Rise time and bandwidth are inversely proportional. Larger phase 
margin, larger gain margin, and lower Mr will improve damping. 
\t,>· 9-2 DESIGN WITH THE PD CONTROLLER 
In all the examples of control systems we have discussed thus far, the controller 
has been typically a simple amplifier with a constant gain K. This type of control action 
is formally known as proportional control, because the control signal at the output 
of the controller is simply related to the input of the controller by a proportional 
constant. 
Intuitively, one should also be able to use the derivative or integral of the input 
signal, in addition to the proportional operation. Therefore, we can consider a more 
general continuous .. data controller to be one that contains such components as adders 
(addition or subtraction), amplifiers, attenuators, differentiators, and integrators. The 
designer's task is to determine which of these components should be used, in what 
proportion. and how they are connected. For example, one of the best-known controllers 
used in practice is the PID controller, where the letters stand for proportional, integral~ 
and derivative. The integral and derivative components of the PID controller have 
individual performance implications. and their applications require an understanding of 
the basics of these elements. To gain an understanding of this con troll er, we consider just 
the PD portion of the controller first. 
Fig. 9-3 shows the block diagram of a feedback control system that arbitrarily has a 
second-order prototype process with the transfer function 
'J 
Gp(s) = w; 
s(s + 2?:w,1) (9-1) 
9-2 Design with the PD Controller 493 
E(s) 
+ + 
Figure 9-3 Control system with PD controller. U(s) 
s(s + 2tw,.) 
G"(s) Y(s) 
The series controller is a proportional-derivative (PD) type with the transfer function 
Thus, the conu·ol signal applied to the process is 
de(t) u(t) = Kpe(t) + KD­dt (9-2) 
(9-3) 
where Kp and K0 are the proportional and derivative constants, respectively . Using the 
components given in Table 4-4, two electronic-circu it realizations of the PD controller are 
shown in Fig. 9-4. The transfer function of the circuit in Fig. 9-4(a) is 
R 
(a) 
R,1 
Cd 
(b) R 
T< 
R (9-4) 
Figure 9-4 Op-amp circuit 
realization of the PD 
control !er. 
494 ~ Chapter 9. Design of Control Systems 
• PD control adds a simple 
zero at s = -Kp/KD to the 
forward-path transfer 
function. Comparing Eq. (9-2) with Eq. (9~4), we have 
Kp = R2/R1 Kn= R2C1 (9-5) 
The transfer function of the circuit in Fig. 9-4(b) is 
(9-6) 
Comparing Eq. (9-2) with Eq. (9~6). we have 
(9-7) 
The advantage with the circuit in Fig. 9-4(a) is that only two op-amps are used. However, 
the circuit does not allow the independent selection of Kp and Ko because they are 
commonly dependent on R2• An important concern of the PD controller is that, if the value 
of K0 is large, a large capacitor C1 would be required. The circuit in Fig. 9-4(b) allows Kp 
and Kn to be independently controlled. A large Kn can be compensated by choosing a large 
value for Rd, thus resulting in a realistic value for C,1• Although the scope of this text does 
not include all the practical issues involved in controller transfer function implementation, 
these issues are of the utmost importance in practice. 
The forward-path transfer function of the compensated system is 
G(s) = Y(s) = Gc(s)G (s) = w~(Kp + Kos) 
E(s) P s(s + 2?;wn) (9-8) 
which shows that the PD control is equivalent to adding a simple zero at s = -Kp/ Ko to 
the forward-path transfer function. 
9-2-1 Time-Domain Interpretation of PD Control 
The effect of the PD control on the transient response of a control system can be 
investigated by referring to the time responses shown in Fig. 9-5. Let us assume that 
the unit-step response of a stable system with only proportional control is as shown in Fig. 
9-5(a)~ which has a relatively high maximum overshoot and is rather oscillatory. The 
corresponding error signal, which is the difference between the unit-step input and the 
outputy(t), and its time derivative de(t)/dt are shown in Figs. 9.5(b) and (c), respectively. 
The overshoot and oscillation characteristics are also reflected in e( t) and de( t) / dt. For the 
sake of illustration, we assume that the system contains a motor of some kind with its 
torque proportional to e(t). The performance of the system with proportional control is 
analyzed as follows. 
1~ During the time interval O < t <ti: The error signal e(t) is positive. The motor 
torque is positive and rising rapidly. The large overshoot and subsequent oscilla­
tions in the output y(t) are due to the excessive amount of torque developed by the 
motor and the lack of damping during this time interval. 
2. During the time interval ti < t < t3: The error signal e(t) is negative. and the 
corresponding motor torque is negative. This negative torque tends to slow down 
the output acceleration and eventually causes the direction of the output y(t) to 
reverse and undershoot. 
e(t) 
1 (a) !H Design with the PO Controller ._ 495 
01--~----'\-.L--+---'-~~~~~----'"'-c----,~~...-..-=-~~~-
e(t) 
I 
de(t) dt (b) 
o~~.....J..----.~--'-~.---'-.;-~~~~~__;;:!looc.:==r-~---~-
(C) 
figure 9.5 Waveforms of y(t). e(t), and de(t)ldt, showing the effect of derivative control. (a) Unit• 
step response. (b) Error signal. (c) Time rate of change of the error signal. 
3. Dw·ing the time interval t3 < t < ts: The motor torque is again positive~ thus 
tending to reduce the undershoot in the response caused by the negative torque in 
the previous time interval. Because the system is assumed to be stable, the error 
amplitude is reduced with each oscillation, and the output eventually settles to its 
final value. 
Considering the above analysis of the system time response, we can say that the 
contributing factors to the high overshoot are as follows: 
1. The positive correcting torque in the interval O < t < t1 is too large. 
2. The retarding torque in the time interval ti < t < t2 is inadequate. 
Therefore, to reduce the overshoot in the step response, without significantly increas-
ing the rise time, a logical approach would be to 
1. Decrease the amount of positive correcting torque during O < t < t1• 
2. Increase the retarding torque during t1 < t < t2. 
Similarly, during the time interval, f2 < t < t4, the negative corrective torque in 
t2 < t < t3 should be reducedt and the retarding torque during t3 < t < t4, which is now 
in the positive direction, should be increased to improve the undershoot of y(t). 
The PD control described by Eq. (9·2) gives precisely the compensation effect required. 
Because the control signal of the PD control is given by Eq. (9·3). Fig. 9-S(c) shows the 
following effects provided by the PD controller: 
496 Chapter 9. Design of Control Systems 
• PD is essentially an 
anticipatory control. 
• Derivative or PD control 
will have an effect on a 
steady-state error only if the 
error varies with time. 1. For O < t < t1, de(t)/dt is negative; this will reduce the original torque developed 
due to e(t) alone. 
2. For t1 < t < t2. both e(t) and de(t)/dt are negative, which means that the negative 
retarding torque developed will be greater than that with only proportional 
control. 
3. For t2 < t < t3, e(t) and de(t)/ dt have opposite signs. Thus, the negative torque that 
originally contributes to the undershoot is reduced also. 
Therefore, all these effects will result in smaller overshoots and undershoots in y(t). 
Another way oflooking at the derivative control is that since de(t)/ dt represents the slope 
of e(t), the PD control is essentially an anticipatory control. That is, by knowing the slope, the 
controller can anticipate direction of the error and use it to better control the process. 
Normally, in linear systems, if the slope of e(t) or y(t) due to a step input is large~ a high 
overshoot will subsequently occur. The derivative control measures the instantaneous slope of 
e(t), predicts the large overshoot ahead of time~ and makes a proper corrective effort before the 
excessive overshoot actually occurs. 
Intuitively, derivative control affects the steady-state error of a system only if the 
steady-state error varies with time. If the steady-state error of a system is constant with 
respect to time, the time derivative of this error is zero, and the derivative portion of the 
controller provides no input to the process. But if the steady-state error increases with time, 
a torque is again developed in proportion to de(t)/ dt, which reduces the magnitude of the 
error. Eq. (9-8) also clearly shows that the PD control does not alter the system type that 
govems the steady-state error of a unity-feedback system. 
9-2-2 Frequency-Domain Interpretation of PD Control 
• The PD controller is a 
high-pass filter. 
• The PD controller has the 
disadvantage that it 
accentuates high-frequency 
noise. 
• The PD controller will 
generally increase the BW 
and reduce the rise time of 
the step response. For frequency-domain design, the transfer function of the PD controller is written 
G.(s) = Kp +Kos= Kp( I+;: s) (9-9) 
so that it is more easily interpreted on the Bode plot. The Bode plot of Eq. {9-9) is 
shown in Fig. 9-6 with Kp = 1. In general, the proportional-control gain Kp can be 
combined with a series gain of the system. so that the zero-frequency gain of the 
PD controller can be regarded as unity. The high-pass filter characteristics of the PD 
controller are clearly shown by the Bode plot in Fig. 9-6. The phase-lead property may 
be utilized to improve the phase margin of a control system. Unfortunately, the 
magnitude characteristics of the PD controller push the gain-crossover frequency to a 
higher value. Thus, the de.~ign principle of the PD contrc>ller involves the placing of 
the corner frequency of the controller, w = Kp/Kv, such that an effective improve­
ment of the phase margin is realized at the new gain-crossover frequency. For a given 
system, there is a range of values of Kp/Kv that is optimal for improving the damping 
of the system. Another practical consideration in selecting the values of Kp and Kn is 
in the physical implementation of the PD controller. Other apparent effects of the PD 
control in the frequency domain are that, due to its high-pass characteristics, in inost 
cases it will increase the BW of the system and reduce the rise time of the step 
response. The practical disadvantage of tht: PD controller is that the differentiator 
portion is a high-pass filter, which usually accentuates any high-frequency noise that 
enters at the input. 
9-2 Design with the PD Controller ~ 497 
20 
18 
16 
14 ~~ 
v' // 
/" ~ 12 s 
~ 10 ~v 
~ 
C,'.),:., s 
6 
4 
2 
0 
O.lKp/Ko 
90 
75 -i.--.,..--/ 
_,...,, ,/' 
KplK0 
ro(rad/sec) / /' 
./ V 
'@j 60 
G) 
~ 'a 45 / 
:.::, 
t::),:., 
'1 
30 
15 
-
0 
O.lK,JKn /v 
/ / 
~/ /' 
----~ 
ro(rad/sec) 
Figure 9-6 Bode diagram of 1 + :s , Kp = 1. 
9-2-3 Summary of Effects of PD Control .-----_) ... ..-~ 
/ 
Though it is not effective with lightly damped or initially unstable systems, a properly 
designed PD controller can affect the performance of a control system in the following 
ways: 
1. Improving damping and reducing maximum overshoot. 
2. Reducing rise time and settling time. 
3. Increasing BW. 
4. Improving GM, PM, and M,. 
5. Possibly accentuating noise at higher frequencies. 
6. Possibly requiring a relatively large capacitor in circuit implementation. 
The following example illustrates the effects of the PD controller on the time-domain 
and frequency~domain responses of a second-order system. 
498 ~ Chapter 9. Design of Control Systems 
Toolbox 9-2-1 
The Bode diagram for Fig. 9-6 is obtained by the following sequence of MATLAB functions 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
close all; 
clear all; 
clc; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\ 
KP= 1; 
KD= l; 
num = [KD KP]; 
den =[1]; 
bode(tf(num,den)) 
grid 
.._ EXAMPLE 9-2-1 Let us reconsider the second-order model of the aircraft attitude control system shown in Fig. 5-29. 
The forward~path transfer function of the system is given in Eq. (5-132) and is repeated here: 
G{s) _ 4500K (9-lO) 
-s(s + 361.2) 
Let us set the performance specifications as follows: 
Steady-state error due to unit-ramp input :5 0.000443 
Maximum overshoot :5 5% 
Rise time tr :5 0.005 sec 
Settling time ts :5 0.005 sec 
To satisfy the maximum value of the specified steady-state error requirement. K should be set at 
181.17. However. with this value of K, the damping ratio of the system is 0.2, and the maximum 
overshoot is 52.7%, as shown by the unit-step response in Fig. 5-31 and again in Fig. 9-9. Let us 
consider inserting a PD controller in the forward path of the system so that the damping and the 
maximum overshoot of the system are improved while maintaining the steady~state error due to the 
unit-ramp input at 0.000443. ~ 
Time-Domain Design 
With the PD controller ofEq. (9-9) and K = 181.17, the forward-path transfer function of 
the system becomes 
G(s) = ®y(s) = 815, 265(Kp + Kns) 
E>e (s) s(s + 361.2) (9-11) 
The closed~loop transfer function is 
0v(s) 815, 265(Kp + Kos) 
E),.(s) = s2 + (361.2 + 815, 265Ko)s + 815, 265Kp (9-12) 
The ramp-error constant is 
. 815,265Kp Ki·= bm sG(s) = 6 = 2257.lKp s-0 3 1.2 (9-13) 
9-2 Design with the PD Controller · 499 
The steady-state error due to a unit-ramp input is ess = 1/Kv = 0.000443/Kp. 
Eq. (9Jl2) shows that the effects of the PD controller are as follows: 
1. Adding a zero at.~= -Kp/Ko to the closed-loop transfer function 
2. Increasing the damping term, which is the coefficient of the s term in the 
denominator, from 361.2 to 361.2 + 815, 265Kv 
The characteristic equation is written 
s2 + (361.2 + 815, 265K0)s + 815, 265Kp = 0 (9-14) 
We can set Kp = 1, which is acceptable from the steady-state error requirement. The 
damping ratio of the system is 
= 361.2 + 815, 265Kn::::; O." 451.46K 
' 1805.84 ~ + D (9-15) 
which clearly shows the positive effect of KD on damping. If we wish to have critical 
damping.~= I, Eq. (9-15) gives Kv = 0.001772. We should quickly point out that Eq. 
(9-12) no longer represents a prototype second-order system, since the transient response is 
also affected by the zero of the transfer function at s = -Kp / Kv. It turns out that, for this 
second-order system, as the value of Ko increases. the zero will move very close to the 
origin and effectively cancel the pole of G(s) at s = 0. Thus. as KD increases, the transfer 
function in Eq. (9-12) approaches that of a first-order system with the pole at s = -361.2, 
and the closed-loop system will not have any overshoot. In general, for higher-order 
systems, however. the zero at s = -Kp/Ko may increase the overshoot when KD becomes 
very large. 
We can apply the root-contour method to the characteristic equation in Eq. (9-14) to 
examine the effect of varying Kp and KD· First. by setting Kn to zero, Eq. (9-14) becomes 
_r;'J. + 361.2s + 815, 265Kp = 0 (9-16) 
The root loci of the last equation as Kp varies between O and oo are shown in Fig. 9-7. When 
Ko ::i 0, the characteristic equation in Eq. (9-14) is conditioned as 
8l5,265Kos 1 + Geq(s) = 1 + s2 + 361.2s + 815, 265Kp = O (9-17) 
The root contours of Eq. (9-14) with Kp = constant and Kn varying are constructed based 
on the pole-zero configuration of Gcq(S) and are shown in Fig. 9-8 for Kp = 0.25 and 
Kp = I . We see that, when Kp = I and Kv = O. the characteristic equation roots are at 
-180.6 + j884.67 and -180.6 -j884.67, and the damping ratio of the closed-loop 
system is 0.2. When the value of Kv is increased, the two characteristic equation roots 
move toward the real axis along a circular arc. When Kv is increased to 0.00177, the roots 
are real and equal at -902.92, and the damping is critical. When Kn is increased beyond 
0.00177, the two mots become real and unequal. and the system is overdamped. 
When Kp is 0.25 and Kv = 0, the two characteristic equation roots are at -180.6 + 
j413.76 and -180.6 -j413.76. As Kv increases in value, the root contours again show the 
improved damping due to the PD controller. Fig. 9-9 shows the unit-step responses of the 
closed-loop system without PD control and with Kp = 1 and Ko= 0.00177. With the PD 
500 ., Chapter 9. Design of Control Systems 
8 
t 
Kp= l ll<~ 
Kp=O 
-180.6 jm 
j884.67 
Kp=O 
-j884.67 
Figure 9-7 Root loci of Eq. (9wl6). 
control, the maximum overshoot is 4.2%. In the present case, although Ko is chosen for 
critical damping, the overshoot is due to the zero at s = -Kp/Ko of the closed-loop 
transfer function. Table 9-1 gives the results on maximum overshoot, rise time, and settling 
time for Kp = 1 and Ko= 0, 0.0005, 0.00177, and 0.0025. The results in Table 9-1 show 
that the perfonnance requirements are all satisfied with Ko 2': 0.00177. It should be kept in 
mind that Kn should only be large enough to satisfy the performance requirements. Large 
Kv corresponds to large BW, which may cause high-frequency noise problems, and there is 
also the concern of the capacitor value in the op-amp-circuit implementation. 
TABLE 9-1 Attributes of the Unit-Step Responses of the System in Example 9-2-1 with 
PD Controller 
t,. t., Maximum 
Ko (sec) (sec) Overshoot(%) 
0 0.00125 0.0151 52.2 
0.0005 0.0076 0.0076 25.7 
0.00177 0.00119 0.0049 4.2 
0.0025 0.00103 0.0013 0.7 
s-plane 
Ko=: 0.001772 Kp= I 
K0=0 9-2 Design with the PD Controller • 501 
j884.67 
j413.76 
er 
-j413.76 
-j884.67 
Figure 9-8 Root contours of Eq. (9-14) when Kp = 0.25 and 1.0; K0 varies. 
2.00 
( NoP D co11trol, re= 1s1.o r PD co 111rol.K= 81.17. 
Kp=I Kn;O.OI 177 
I \ / /r 7'C_ r,.... ---, I "--"' -
I , .... /' 1.60 
1.20 
~... 1.00 
0.80 
I 
~ 0.40 
0.00 0.004 0.008 0.012 0.018 0.020 0.024 0.028 0.032 0.036 0.040 
Time (sec) 
Figure 9-9 Unit-step response of the attitude control system in Fig. 5-29 with and without 
PO controller. 
502 Chapter 9. Design of Control Systems 
Toolbox 9-2-2 
Root loci of Eq. (9-16) shown in Fig. 9-7 are obtained by the following sequence of MATLAB functions 
KP= 1; 
den= [l 361. 2 815265*KP]; 
num= [1]; 
rJ.ocus(num,den) 
hold on 
KP= O; 
den= [1 361. 2 815265*KPJ; 
num = [1]; 
rlocus(num,den) 
The general conclusion is that the PD controller decreases the maximum overshoot, 
the rise time, and the settling time. 
Another analytic way of studying the effects of the parameters Kp and Kn is to evaluate 
the performance characteristics in the parameter plane of Kp and K0. From the character­
istic equation of Eq. (9-14), we have 
0.2 + 451.46KD ( = lf7: yKp (9-18) 
Applying the stability requirement to Eq. (9-14), we find that, for system stability, 
Kp > 0 and Kv > -0.000443 
Toolbox 9-2-3 
Root contours of Eq. (9-14) shown in Fig. 9-8 are obtained by the following sequence of MATLAB functions 
KP=l; KD=l; 
den= [1 361. 2+815265.,'KD 815265*KP]; num = [1]; 
rlocus(num,den) 
hold on 
KD = le-6; 
for i = 1:1:260 
den= [1 361. 2+815265*KD 8152651'KP]; 
num = [1]; 
tf(num,den); 
[nurnCL,denCL]=cloop(nurn,den); 
T = tf (numCL, denCL) ; 
PoleData(:,i)=pole(T); 
KD = KD +3e-5; 
end 
i=60; %%% for continuation of graph 
PoleData(l, i+l) = -sqrt( (real(PoleData(l Ii) )"2)+(imag(PoleData(l, i) )/\2)); 
PoleData(2, i+l) = -sqrt((real(PoleData(2, i) )"2)+(irnag(PoleData(2, i) )"2)); 
plot(real(PoleData(l,:)),:i.mag(PoleData(l,:)),real(PoleData(2,:)),jmag(PoleData(2,:))); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\ 
KP= 0. 25; 
KD=l; 
den= (1 361. 2+815265*KD 815265*KP]; 
nurn = [1]; 
rlocus(nurn,den) 
hold on 
KD = le-6; 
for i = 1: 1: 260 
end den= [1 361. 2+815265*KD 815265*KP]; 
num= [1]; 
tf(num,den); 
[nwnCL,denCL]=cloop(num,den); 
T = tf(numCL,denCL); 
PoleData(:,i)=pole(T); 
KD = KD +3e-5; 
i==23; %%% for continuation of graph 9-2 Design with the PD Controller 503 
FoleData(l, i+l) = -sqrt( (real(PoleData(l, i) )"2)+(imag(PoleData(l, i) )"2)); 
PoleData(2, i+1) = -sqrt( (real(PoleData(2, i) )"2)+(imag(PoleData(2, i) )"2)); 
plot(real(PoleData(l,:)),imag(PoleData(1,:)),real(PoleData(2,:)),imag(PoleData(2,:))); 
%"fa%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\ 
axis( [-3000 1000 -1000 1000]) 
xaxisl == -181. 0076 *ones (1,100); yaxisl = -1000: 20: 1000-1 
plot(xaxis1,yaxisl); 
grid 
The boundaries of stability in the Kp-versus-K 0 parameter plane are shown in Fig. 
9-10. The constant-damping-ratio trajectory is described by Eq. (9-18) and is a 
parabola. Fig. 9-10 illustrates the constant-?; trajectories for ~ = 0.5, 0. 707. and 1.0. 
The ramp-error constant Kv is given by Eq. (9-13 ). which describes a horizontal line in 
the parameter plane, as shown in Fig. 9-10. The figure gives a clear picture as to how the 
values of Kp and Kl) affect the various performance criteria of the system. For instance, 
if Kv is set at 2257.1, which corresponds to Kp ~ 1, the constant-t lud show that the 
damping is increased monotonically with the increase in Kn, The intersection between 
the constant-Kv locus and the constant-( locus gives the value of Kn for the desired K~. 
and ?;. 
Toolbox 9-2-4 
Bode plot of Fig. 9-11 is obtained by the following sequence of MATLAB functions 
KD = [O O. 0005 0. 0025 0. 00177); 
for i = 1: length(KD) 
end nurn = [81526S*KD(i) 815265] ; 
den ~[1 361. 2 OJ; 
bode(tf(nurn,den)); 
hold on; 
axis([l 10000 -180 -90]); 
grid 
Frequency-Domain Design 
Now let us carry out the design of the PD controller in the frequency domain. Fig. 9-1 l 
shows the Bode plot of G(s) in Eq. (9-11) with Kp = 1 and Kn = 0. The phase margin of 
504 )Ill,, Chapter 9. Design of Control Systems 
Kp 
C=0.5 
7 
6 
5 
4 
3 
2 
Constant Kv, K..., = 2257. I 1--~-+---+--+-~~--~--~~--~~~~~--~~- -~~~ 
I 
I 
I 
I I K0 = 0.001772 
I Kp= 1 
-0.001 -0.000443 0.001 0.002 0.003 0.004 0.005 K0 
figure 9-10 Krversus-Kn parameter plane for the attitude control system with a PD controller. 
the uncompensated system is 22.68°, and the resonant peak Mr is 2.522. These values 
correspond to a lightly damped system. Let us give the following performance criteria: 
Steady-state error due to a unit-ramp input$ 0.00443 
Phase margin ~ 80° 
Resonant peak Mr $ 1.05 
BW ~ 2000 rad/sec 
The Bode plots of G(s) for Kp = 1 and Kv = 0, 0.005, 0.00177, and 0.0025 are shown 
in Fig. 9 .. 11. The performance measures in the frequency domain for the compensated 
system with these controller parameters are tabulated in Table 9-2, along with the time­
domain attributes for comparison. The Bode plots as well as the performance data were 
easily generated by using MATLAB tools. Use A CSYS component controls to reproduce 
the results in Table 9-2. 
The results in Table 9-2 show that the gain margin is always infinite, and thus the 
relative stability is measured by the phase margin. This is one example where the gain 
margin is not an effective measure of the relative stability of the system. When 
Kv = 0.00177, which corresponds to critical damping, the phase margin is 82.92°, 
the resonant peak Mr is 1.025. andBWis 1669 rad/sec. The performance requirements in 
the frequency domain are all satisfied. Other effects of the PD control are that the BW 
and the gain-crossover frequency are increased. The phase-crossover frequency is 
always infinite in this case. 
9-2 Design with the PD Controller • 505 
80 
70 
~ 
60 
50 
fE s 40 ....... r-... 
"'" "~,.. 
~ 
' 
~ 30 
& ' "'"" 'r-r"'"''--20 
~~ 
~ IO 
0 
-10 
-20 
-90 
-100 
-110 
-120 
-130 
co 
~ -140 
g_ -150 
C 
...J 
-160 
-170 1 
-180 
1 
Figure 9-11 ~~ 
~ ~ 
IO 100 
@(rad/sec) 
r-,..""'~ I"~" r... 
r"" I"' 
""'"' " ... 
' I' 
... ~~ 
\ 
100 
co (rad/sec) 
Bode plot of G(s) = 815, 265(1 + Kos) 
s(s + 361.2) ::::. .... 
~~,:~i.,:Kn=l .00 77 :;:,/·~ ttK ,= o. )( 2' 
~,~ ~ ~ ' K1>::: 0.0005 ~ 
~ 'r,. ~ :~ KD=O 
I 111111 ~ 
IOOO 10000 
I I I I i---
J I I I 11 ! r( i.,.., 
i,...,.__ Kn=0.0025 / 
" i,..t.-... 11'\ I (,/~ 
Ko.:=0.00177 / 
/ 
i/ 
'\ ,v 
~ ~ / 
\ I'\..., v..,r-. 
I\ -~I,, Ko=0.0005 
I 
[\ II I 
j\ PM=82.92° 
11 I 
'I 11 I 
~ ',l.,/ Ko=O 
PM;:22.68~ 
i I 11 I I ~ .... 
"'r-,... r---r-,. i-~ 
1,i,, -
1000 10000 
TABLE 9-2 Frequency-Domain Characteristics of the System in Example 9-2-1 with PD Controller 
GM PM Gain CO BW tr ts Maxhnum Overshoot 
Kv (dB) (deg) (rad/sec) (rad/sec) M, (sec) (sec) (%) 
0 00 22.68 868 1370 2.522 0.00125 0.0151 52..2 
0.0005 00 46.2 913.5 1326 1.381 0.0076 0.0076 25.7 
0.00177 00 82.92 1502 1669 1.025 0.00119 0.0049 4.2 
0.0025 00 88.95 2046 2083 1.000 0.00103 0.0013 0.7 
506 Chapter 9. Design of Control Systems 
EXAMPLE 9-2-2 Consider the third-order aircraft attitude control system discussed in Chapter 5 with the forward-path 
transfer function given in Eq. (5-153), 
Toolbox 9-2-5 G(s) = 2 1.5 x 101 K (9-19) 
s(s + 3408.3s + 1,204,000) 
The same set of time-domain specifications given in Example 9-2-1 is to be used. It was shown in 
Chapter 5 that, when K = 181.17, the maximum overshoot of the system is 78.88%. 
Let us attempt to meet the transient performance requirements by use of a PD controller with the 
transfer function given in Eq. (9-2). The forward-path transfer function of the system with the PD 
controller and K = 181.17 is 
G . 2.718 x 109(Kp + Kvs) 
(s) = s(s2 + 3408.3s + 1,204,000) (9-20) 
You may also use our MATLAB toolbox ACSYS to solve this problem. See Section 9-19. 
Time-Domain Design 
Setting Kp = I arbitrarily, the characteristic equation of the dosed-loop system is written 
s3 + 3408.3s2 + (1,204,000 + 2.718 x 109 Ko)s + 2.718 x 109 = 0 (9-21) 
To apply the root-contour method, we condition Eq. (9-21) as 
2.718 x I09Kos 1 + Gcl1(s) = 1 + s3 + 3408.2s2 + 1,204,000s + 2.718 x 109 = O (9-22) 
where 
2.718 x 109Kvs 
Geq(s) = (s + 3293.3)(s + 57.49 + j906.6)(s + 57.49 -j906.6) (9-23) 
Root contours of Fig. 9-12 are obtained by the following sequence of MATI.AB functions 
You may wish to use clc, close all, or clear all before running the following 
% Root contours 
kd=0.005; 
nurn = [2. 718*10"9*kd O]; 
den= [1 3408. 2 1204000 2. 718*10"9]; 
rlocus(num,den) 
• If a system has very low 
damping or is unstable, 
the PO control may not be 
effective in improving the 
stability of the system. The root contours of Eq. (9-21) are plotted as shown in Fig. 9-12, based on the pole­
zero configuration of Geq(s). The root contours of Fig. 9-12 reveal the effectiveness of the 
PD controller for the improvement on the relative stability of the system. Notice that, as the 
value of Kn increases, one root of the characteristic equation moves from -3293.3 toward 
the origin, while the two complex roots start out toward the left and eventually approach the 
vertical asymptotes that intersect at s = -1704. The immediate assessment of the situation 
is that, if the value of Kn is too large, tlze two complex roots will actual(v have reduced 
9-2 Design with the PD Controller ~ 507 
jw 
KD=0.005 
j3000 
t=0.707 
j2000 
jIOOO 
-57.49 + j906.6 
-3293 -3000 -2000 cr 
-57 .49 -j906.6 
-jlOOO 
-j2000 
KD=0.005 
Figure 9-12 Root contours of 
s3 + 3408.3s2 + (1,204,000 +2.718 x 109 Kn)s + 2.718 x 109 = 0. 
damping while increasing the natural frequency of the system. It appears that the ideal 
location for the two complex characteristic equation roots, from the standpoint of relative 
stability, is near the bend of the root contour, where the relative damping ratio is 
approximately 0.707. The root contours of Fig. 9~12 clearly show that~ if the original 
system has low damping or is unstable, the zero introduced by the PD controller may not be 
able to add sufficient damping or even stabilize the system. 
508 • Chapter 9. Design of Control Systems 
'tABLE 9-3 Time-Domain Attributes of the Third-Order System in Example 9-2-2 
with PD Controller 
%Maximum tr t.~ 
Kn Overshoot (sec) (sec) Characteristic Equation Roots 
0 78.88 0.00125 0.0495 -3293.3, -57.49 ± j906.6 
0.0005 41.31 0.00120 0.0106 -2843.07, -282.62 ± j936.02 
0.00127 17.97 0.00100 0.00398 -1523.11, -942.60 ± j946.58 
0.00157 14.05 0.00091 0.00337 -805.33, -1301.48 ± j1296.59 
0.00200 11.37 0.00080 0.00255 -531.89, -1438.20 ± jl744.00 
0.00500 17.97 0.00042 0.00130 -191.71, -1608.29 ± j3404.52 
0.01000 31.14 0.00026 0.00093 --96.85. -1655.72 ± j5032 
0.05000 61.80 0.00010 0.00144 -19.83, -1694.30 ± jl 1583 
Table 9-3 gives the results of maximum overshoot, rise time, settling time, and the 
roots of the characteristic equation as functions of the parameter Kn. The following 
conclusions are drawn on the effects of the PD controller on the third-order system. 
1. The minimum value of the maximum overshoot, 11.37%, occurs when KD is 
approximately 0.002. 
2. Rise time is improved (reduced) with the increase of KD, 
3. Too high a value of Kn will actually increase the maximum overshoot and the 
settling time substantially. The latter is because the damping is reduced as Kv is 
increased indefinitely. 
Fig. 9-13 shows the unit-step responses of the system with the PD controller for several 
values of Kv. The conclusion is that, while the PD control does improve the damping of the 
system, it does not meet the maximum-overshoot requirement. 
Time (sec) 
Figure 9-13 Unit~step responses of the system in Example 9-2~2 with PD controller. 
9-2 Design with the PD Controller ~ 509 
Frequency-Domain Design 
The Bode plot of Eq. (9-20) is used to conduct the frequency-domain design of the PD 
controller. Fig. 9-14 shows the Bode plot for KP= 1 and Ko= 0. The following 
perfonnance data are obtained for the uncompensated system: 
$ s 
~ 
~ 
S2. Gain margin = 3 .6 dB 
Phase margin= 7.77° 
Resonant Peak Mr= 7.62 
80 
60 "-- .... i,,.. .. 
40 ~-
---.... 
20 
0 
-20 ,.... .. ~ r-..,~ 
'--' ' -.....:-,,. 
~::; y 
i,,....,._ • 
/ N r--.... 
Gain crossovir I I\. 
(Kn=O) I " 
I 
! f 11 
1111111 I 
(K0=0.002) 
Gain crossover 
/ K1)_:...0,05 I 
.I / I l I 
........ 
~~ Gain crossover 
~ / (KD = 0.05) 
l'-,...l'o, '" I\. 
DK l,~ 
~~ r,..i' 
" -40 : Ko""?-002 ~ 
"" ~ I' 
-60 
-80 
-100 
-120 
10" I 
I 
I 
I 
I 
I 
[ 
l 
I 
I 
I 
102 1031621 
ro (rad/sec) [..)''\ 
~ K0::::0 \\ 
' 
-250 1---+-+--++++Hl+--+--+-H~I-H---+-~-l-+iH-1+-+-+-1-H~~-+-l-++-H++l "!'-. -,._llo.l..l...l..l...U 
-300'"---::.... ................... .<....:.:...JU---.L-L.---:....:...i.;'"""-~..__.:...-:.....:....i...L.:.:..:.~......_..:.-:....L...!.~:.____,_--:.....!..,.l..~ 
10° 101 102 1031621 10S 
ru(rad/sec) 
Figure 9-14 Bode diagram of G(s) of the system in Example 9·2-2 with PD controller. 
510 II-Chapter 9. Design of Control Systems 
Toolbox 9-2-6 TABLE 9-4 Frequency-Domain Characteristics of the Third-Order System in Example 9-2-2 
with PD Controller 
GM PM BW Gain CO Phase CO 
Kv (dB) (deg) M,. (rad/sec) (rad/sec) (rad/sec) 
0 3.6 7.77 7.62 1408.83 888.94 1103.69 
0.0005 00 30.94 1.89 1485.98 935.91 00 
0.00127 00 53.32 1.19 1939.21 1210.74 00 
0.00157 00 S6.83 1.12 2198.83 1372.30 00 
0.00200 00 58.42 1.07 2604.99 1620.75 00 
0.00500 00 47.62 1.24 4980.34 3118.83 00 
0.01000 00 35.71 1.63 7565.89 4789.42 00 
0.0500 00 16.69 3.34 17989.03 11521.00 00 
Bandwidth BW = 1408.83 rad/sec 
Gain crossover (GCO) = 888.94rad/sec 
Phase crossover (PCO) = 1103.69 rad/sec 
Let us use the same set of frequency-domain performance requirements listed in 
Example 9-2-1. The logical way to approach this problem is to first examine how much 
additional phase is needed to realize a phase margin of 80°. Because the uncompensated 
system with the gain set to meet the steady-state requirement is only 7.77°, the PD 
controller must provide an additional phase of 72.23°. This additional phase must be 
placed at the gain crossover of the compensated system in order to realize a PM of 80°. 
Ref erring to the Bode plot of the PD controller in Fig. 9-6, we see that the additional 
phase is always accompanied by a gain in the magnitude curve. As a result, the gain 
crossover of the compensated system will be pushed to a higher frequency at which the 
phase of the uncompensated system would correspond to an even smaller PM. Thus, we 
may run into the problem of diminishing returns. This symptom is parallel to the situation 
illustrated by the root-contour plot in Fig. 9-12, in which case the larger Kv would simply 
push the roots to a higher frequency, and the damping would actually be decreased. 
The frequency-domain performance data of the compensated system with the values of 
Kv used in Table 9-3 are obtained from the Bode plots for each case, and the results 
are shown in Table 9-4. The Bode plots of some of these cases are shown in Fig. 9-14. 
Notice that the gain margin becomes infinite when the PD controller is added, and 
the phase margin becomes the dominant measure of relative stability. This is because the 
phase curve of the PD-compensated system stays above the -180°-axis, and the phase 
crossover is at infinity. 
Fig. 9-13 is obtained by the following sequence of MATLAB functions 
KP=l; 
KD= [ 0.0005 0.01270.002]; 
for i cl: length(KD) 
num =[2. 718e9*KD(i) 2. 718e9*KP]; 
den= [13408. 3 O OJ; 
tf(num,den); 
[numCL,denCL]=c1oop(num,den); 
step(numCL,denCL) 9-3 Design with the Pl Controller -4C 511 
hold on 
end 
axis( [O O. 04 O 2]) 
When KD = 0.002, the phase margin is at a maximum of 58.42°, and Mr is also 
minimum at 1.07, which happens to agree with the optimal value obtained in the time­
domain design summarized in Table 9-3. When the value of Kv is increased beyond 0.002, 
the phase margin decreases, which agrees with the findings from the time-domain design 
that large values of Kv actually decrease damping. However, the BW and the gain crossover 
increase continuously with the increase in KD, The frequency-domain design again shows 
that the PD control falls short in meeting the performance requirements imposed on the 
system. Just as in the time-domain design, we have demonstrated that if the original system 
has very low damping, or is unstable, PD control may not be effective in improving the 
stability of the system. Another situation under which PD control may be ineffective is if 
the slope of the phase curve near the gain-crossover frequency is steep, in which case the 
rapid decrease of the phase margin due to the increase of the gain crossover from the added 
gain of the PD controller may render the additional phase ineffective. 
Toolbox 9-2-7 
Bode diagram of G(s) in Example 9-2 in Fig. 9-14 is obtained by the following sequence of MATLAB 
junctions 
KD= [O 0.002 0.05]; 
KP=l; 
for i = 1 : length(KD) 
end num =[2. 718e9*KD(i) 2. 718e9*KP]; 
den= [l 3408. 3 1204000 O]; 
bode(num1den); 
hold on; 
,, 9-3 DESIGN WITH THE Pl CONTROLLER 
We see from Section 9-2 that the PD controller can improve the damping and rise time of a 
control system at the expense of higher bandwidth and resonant frequency, and the steady­
state error is not affected unless it varies with time, which is typically not the case for step­
function inputs. Thus, the PD controller may not fulfill the compensation objectives in 
many situations. 
The integral part of the PID controller produces a signal that is proportional to the time 
integral of the input of the controller. Fig. 9-15 illustrates the block diagram of a prototype 
second-order system with a series PI controller. The transfer function of the PI controller is 
Ki Gc(s) = Kp +­s (9-24) 
512 Chapter 9. Design of Control Systems 
R(.1) E(s) U(s) Q)/12 Y(s) 
+ s(s + 2~co,,) 
GpCs) 
G,.(s) 
Figure 9-15 Control system with PI controller . 
Using the circuit elements given in Table 4-4, two op-amp-circuit realizations of 
Eq. (9-24) are shown in Fig. 9-16. The transfer function of the two-op-amp circuit in 
Fig. 9-16(a) is 
(9-25) 
Comparing Eq. (9-24) with Eq. (9-25), we have 
(9-26) 
The transfer function of the three-op-amp circuit in Fig. 9-l 6(b) is 
R 
(a) 
C, 
(b) R (9-27) 
Figure 9-16 Op-amp-c ircuit 
realization of the PI K, 
controller, G,.(s) = Kp + -. 
(a) Two-op-amp circuit. s 
(b) Three-op-amp circuit. 
9-3 Design with the Pl Controller -~. S13 
Thus, the parameters of the PI controller are related to the circuit parameters as 
(9-28) 
The advantage with the circuit in Fig. 9-l 6(b) is that the values of Kp and K1 are 
independently related to the circuit parameters. However, in either circuit, K1 is inversely 
proportional to the value of the capacitor. Unfortunately, effective PI-control designs 
usually result in small values of Kr, and thus we must again watch out for unrealistically 
large capacitor values. 
The forward-path transfer function of the compensated system is 
G(s) = Gc(s)G (s) = w~(Kps +Ki) 
P s2(s + 2{wn) (9-29) 
Clearly, the immediate effects of the PI rnntroller are as follows: 
1. Adding a zero at s = -K1 / Kp to the forward-path transfer function. 
2. Adding a pole at s ;:::: 0 to the forward-path transfer function. This means that the 
system type is increased by 1 to a type 2 system. Thus, the steady-state error of the 
original system is improved by one order; that is, if the steady-state error to a given 
input is constant, the PI control reduces it to zero (provided that the compensated 
system remains stable). 
The system in Fig. 9-15, with the forward-path transfer function in Eq. (9-29), will 
now have a zero steady-state error when the reference input is a ramp function. However, 
because the system is now of the third order, it may be less stable than the original 
second-order system or even become unstable if the parameters Kp and K1 are not 
properly chosen. 
In the case of a type 1 system with a PD control, the value of Kp is important because 
the ramp-error constant Ki. is directly proportional to Kp. and thus the magnitude of the 
steady-state error is inversely proportional to Kp when the input is a ramp. On the other 
hand, if Kp is too large, the system may become unstable. Similarly, for a type O system, the 
steady-state error due to a step input will be inversely proportional to Kp. 
When a type I system is con¥erted to type 2 by the Pl controller, Kp no longer affects 
the steady-state error, and the latter is always zero for a stable system with a ramp input. 
The problem is then to choose the proper combination of Kp and K1 so that the transient 
response is satisfactory. 
9-3-1 Time-Domain Interpretation and Design of Pl Control 
The pole .... zero configuration of the PI controller in Eq. (9-24) is shown in Fig. 9-17. At 
first glance, it may seem that Pl control will improve the steady-state error at the 
expense of stability. However, we shall show that, if the location of the zero of Gc(s) is 
selected properly, both the damping and the steady-state error can be improved. 
Because the PI controller is essentially a low-pass filter, the compensated system 
usually will have a slower rise time and longer settling time. A viable method of 
designing the Pl control is to select the zero at s = -K[/Kp so that it is relatively close 
to the origin and away from the most significant poles of the process,· the values ofKp 
and K1 should be relatively small. 
514 • Chapter 9. Design of Control Systems 
jw 
s-plane 
0 
9-3-2 Frequency-Domain Interpretation and Design of Pl Control (J' 
Figure 9-17 Pole-zero 
configuration of a Pl 
controller. 
For frequency-domain design, the transfer function of the PI controller is written 
The Bode plot of Gc(jw) is shown in Fig. 9-18. Notice that the magnitude of GcUw) at 
w = oo is 20 log10Kp dB, which represents an attenuation if the value of Kp is less than 1. 
This attenuation may be utilized to improve the stability of the system. The phase of G,Mw) 
is always negative, which is detrimental to stability. Thus, we should place the corner 
frequency of the controller, w = K1 / Kp, as far to the left as the bandwidth requirement 
allows, so the phase-lag properties of Gc(jw) do not degrade the achieved phase margin of 
the system. 
The frequency-domain design procedure for the PI control to realize a given phase 
margin is outlined as foIIows: 
1. The Bode plot of the forward-path transfer function Gp(s) of the uncompensated 
system is made with the loop gain set according to the steady-state performance 
requirement. 
2. The phase margin and the gain margin of the uncompensated system are 
determined from the Bode plot. For a specified phase margin requirement, the 
new gain-crossover frequency w~ corresponding to this phase margin is found on 
the Bode plot. The magnitude plot of the compensated transfer function must pass 
through the 0-dB-axis at this new gain-crossover frequency in order to realize the 
desired phase margin. 
3. To bring the magnitude curve of the uncompensated transfer function down to 0 
dB at the new gain-crossover frequency w~, the PI controller must provide the 
amount of attenuation equal to the gain of the magnitude curve at the new gain­
crossover frequency. In other words, set 
from which we have 
(9-32) 
~ 0 :s 
'§' 
~ 
r.3' .::::::t ~ 
"' "' "' "' "' 
0 
-15 
-30 
-45 
-60 
-75 / 
~ _.,--
-90 9-3 Design with the Pl Controller -Ill 515 
" ... "'I'. ... 
~ ...... r-,...... 
------K/Kp 
w(radlsec) 
1/ / / 
~ ..... 
/ / 
/ / lOK/Kp 
i.-----_.....,,...,.---V 
K/10Kp K/Kp IOK/Kp 
ro (rad/sec) 
Figure 9-18 Bode diagram of the Pl controller. Gc(s) = Kp + Ki_ s 
Once the value of Kp is deterrnined, it is necessary only to select the proper value of 
K1 to complete the design. Up to this point, we have assumed that, although the gain­
crossover frequency is altered by attenuating the magnitude of Gc<jw) at w~. the 
original phase is not affected by the PI controller. This is not possible, however, since, 
as shown in Fig. 9-18, the attenuation property of the PI controller is accompanied 
with a phase lag that is detrimental to the phase margin. It is apparent that, if the 
comer frequency ru = K1 / Kp is placed far below w~. the phase lag of the PI controller 
will have a negligible effect on the phase of the compensated system near ru~. On the 
other hand, the value of K1/Kp should not be too small or the bandwidth of the system 
will be too low, causing the rise time and settling time to be too long. As a general 
guideline, K1/ Kp should correspond to a frequency that is at least one decade, 
sometimes as much as two decades, below w~. That is, we set 
I K1 Wg -= _.::..rad/sec Kp 10 
516 : Chapter 9. Design of Control Systems 
Within the general guideline, the selection of the value of Kif Kp is pretty much at the 
discretion of the designer, who should be mindful of its effect on BW and its practical 
implementation by an op-amp circuit. 
4. The Bode plot of the compensated system is investigated to see if the performance 
specifications are all met. 
S. The values of K1 and Kp are substituted in Eq. (9-30) to give the desired transfer 
function of the PI controller. 
If the controlled process Gp(s) is type 0, the value of K1 may be selected based 
on the ramp-error-constant requirement, and then there would only be one parameter, 
Kp, to determine. By computing the phase margin, gain margin, Mr, and BW of the 
closed-loop system with a range of values of Kp, the best value for Kp can be easily 
selected. 
Based on the preceding discussions, we can summarize the advantages and disadvan-
tages of a properly designed PI controller as the following: 
1. Improving damping and reducing maximum overshoot. 
2. Increasing rise time. 
3. Decreasing BW. 
4. Improving gain margin, phase margin, and Mr. 
5. Filtering out high-frequency noise. 
It should be noted that in the Pl controller design process, selection of a proper 
combination of K1 and Kp, so that the capacitor in the circuit implementation of the 
controller is not excessively large, is more difficult than in the case of the PD 
controller. 
The following examples will illustrate how the PI control is designed and what its 
effects are. 
· EXAMPLE 9-3-1 Consider the second-order attitude~control system discussed in Example 9-2-1. Applying the Pl 
controller of Eq. (9-24), the forward-path transfer function of the system becomes 
G() = G,( )G () = 4500KKp(s+ K,/Kp) 
s c s P s s2(s + 361.2) 
You may use ACSYS to solve this problem. 
Time-Domain Design 
Let the time-domain performance requirements be 
Steady-state error due to parabolic input t2us(t)/2 :$ 0.2 
Maximum overshoot:$ 5% 
Rise time t, :s; 0.01 sec 
Settling time 15 S 0.02 sec 
We have to relax the rise time and settling time requirements from those in Example 9-2-1 
so that we will have a meaningful design for this system. The significance of the 
requirement on the steady-state error due to a parabolic input is that it indirectly places 
a minimum requirement on the speed of the transient response. 
9-3 Design with the Pl Controller ·; 517 
The parabolic-error constant is 
Ka = Jim s2G(s) = lim s2 4500~Kp(s +Ki/ Kp} 
s--o s->O s~(s + 361.2) 
= 4500KK1 = lZ.46KKi 
361.2 
The steady-state error due to the parabolic input t2us(t)/2 is 
_ 1 _ 0.08026 ( O 2) e .... --- < . . ,.. Ka KK1 -(9-35) 
(9-36) 
Let us set K == 181.17. simply because this was the value used in Example 9-2-1. 
Apparently, to satisfy a given steady-state error requirement for a parabolic input, the 
larger the K, the smaller K1can be. Substituting K := 181.17 in Eq. (9-36) and solving K1for 
the minimum steady-state error requirement of 0.2, we get the minimum value of K1 to be 
0.002215. If necessary, the value of K can be adjusted later. 
With K = 181.17, the characteristic equation of the closed-loop system is 
s3 + 361.2s2 + 815, 265Kps + 815, 265K1 = 0 (9-37) 
Applying Routh's test to Eq. (9-37) yields the result that the system is stable for 
0 < K1/Kp < 361.2. This means that the zero of G(s) at s = -K1/Kp cannot be placed 
too far to the left in the left-half s~plane, ot the system will be unstable. Let us place the zero 
at -K1 / Kp relative} y close to the origin. For the present case, the most significant pole of 
Gp(s), besides the pole at s = o. is at -361.2. Thus, KJ/KP should be chosen so that the 
following condition is satisfied: 
:; ~361.2 (9-38) 
The root loci ofEq. (9-37) with K1/Kp:::: 10 are shown in Fig. 9-19. Notice that, other than 
the small loop around the zero at s = -10, these root loci for the most part are very similar 
to those shown in Fig. 9-7, which are for Eq. (9-16). With the condition in Eq. (9-38) 
satisfied, Eq. (9-34) can be approximated by 
G(s) ~ 815, 265Kp 
s(s + 361.2) (9-39) 
where the term Ki/ Kp in the numerator is neglected when compared with the magnitude of 
s, which takes on valu~s along the operating points on the complex portion of the root loci 
that correspond to, say, a relative damping ratio in the range of 0. 7 < t < 1.0. Let us assume 
that we wish to have a relative damping ratio of 0.707. From Eq. (9w39), the required value 
of Kp for this damping ratio is 0.08. This should also be true for the third-order system with 
the PI controller if the value of Kif Kp satisfies Eq. (9-38). Thus, with Kp = 0.08, Kc == 0.8; 
the root loci in Fig. 9-19 show that the relative damping ratio of the two complex roots is 
approximately 0.707. In fact, the three characteristic equation roots are at 
s = -10.605, -175.3 + jl 75.4, and -175.3 -jl 75.4 
518 ~ Chapter 9. Design of Control Systems 
s-plane 
Kp=O 
-361.2 8 jm 
t 
~ 
Kp=0.08 
-175.3 + 
jl75.4 
Kp=0.08 Kp=O 
Kp=O 
0 
Figure 9-19 Root loci of Eq. (9-37) 
with KI/ Kp = 10; Kp varies. 
The reason for this is that when we Hstand,, at the root at -17 5 .3 + jl 7 5 .4 and 
Hlook" toward the neighborhood near the origin, we see that the zero at s = -10 is 
relatively close to the origin and, thus, practically cancels one of the poles at s = 0. 
In fact, we can show that, as long as Kp = 0.08 and the value of K1 is chosen such that 
Eq. (9-38) is satisfied, the relative damping ratio of the complex roots will be very 
close to 0. 707. For example, let us select K1 /Kp = 5; the three characteristic equation 
roots are at 
s = -5.145, -178.03 + j178.03, and -178.03 -j178.03 
and the relative damping ratio is still 0.707. Although the real pole of the closed-loop 
transfer function is moved, it is very close to the zero at s = -Ki/ Kp so that the transient 
due to the real pole is negligible. For example, when Kp = 0.08 and K1 = 0.4, the closed­
loop transfer function of the compensated system is 
@y(s) 65, 221.2(s + 5) 
@,(s) = (s + 5.145)(s + 178.03 + j178.03)(s + 178.03 -j178.03) (9-40) 
Because the pole at s = 5.145 is very close to the zero at s = -5, the transient response due 
to this pole is negligible, and the system dynamics are essentially dominated by the two 
complex poles. 
9-3 Design with the Pl Controller -4 519 
Toolbox 9-3-1 
Root loci of Eq. (9-37) in Fig. 9-19 are obtained by the following sequence of MATIAB functions 
KP= 0. 000001; % start with a very small KP see Figure 9-19 
KI=lO*KP; 
num::: [KP KI]; 
den=-(1 361. 2 815265*KP 815265*KI]; 
G=tf(num,den) 
rlocus(G) 
TABLE 9-5 Attributes of the Unit-Step Responses of the System in Example 9-3·1 
with Pl Conlroller 
Maximum lr ls 
Ki/KP K, Kp Overshoot(%) (sec) (sec) 
0 D 1.00 52.7 0.00135 0.015 
20 1.60 0.08 15.16 0.0074 0.049 
IO 0.80 0.08 9.93 0.0078 0.0294 
5 0.40 0.08 '7.17 0.0080 0.023 
2 0.16 0.08 5.47 0.0083 0.0194 
0.08 0.08 4.89 0.0084 0.0114 
0.5 0.04 0.08 4.61 0.0084 0.0114 
0.1 0.008 0.08 4.38 0.0084 0.0115 
Table 9-5 gives the attributes of the unit~step responses of the system with Pl control 
for various values of K1/ Kp, with Kp = 0.08~ which corresponds to a relative damping ratio 
of 0.707. 
The results in Table 9-5 verify the fact that PI control reduces the overshoot but at the 
expense of longer rise time. For Kr :S 1, the settling times in Table 9-5 actually show a 
sharp reduction, which is misleading. This is because the settling times for these cases are 
measured at the points where the response enters the band between 0.95 and 1.00, since the 
maximum overshoots are less than 5%. 
The maximum overshoot of the system can still be reduced further than those shown in 
Table 9-5 by using smaller values of Kp than 0.08. However, the rise time and settling time 
will be excessive. For example, with Kp = 0.04 and Kr = 0.04, the maximum overshoot is 
1.1 %, but the rise time is increased to 0.0182 seconds, and the settling time is 0.024 
seconds. 
For the system considered, improvement on the maximum overshoot slows down for 
K1 less than 0.08, unless Kp is also reduced. As mentioned earlier, the value of the capacitor 
C2 is inversely proportional to K1• Thus. for practical reasons. there is a lower limit on the 
value of K1• 
Fig. 9-20 shows the unit-step responses of the attitude-control system with PI control, 
with Kp = 0.08 and several values of Kp. The unit-step response of the same system with 
the PD contro11er designed in Example 9-2-1, with Kp = I and Kn= 0.00177, is also 
plotted in the same figure as a comparison. 
520 _. Chapter 9. Design of Control Systems 
2,0 
WitJ PD control~ KP= I. K D = 0.00177 
I I 
J .JK1= 
11.6 1K
11=0.8 
I I ~ t .. 
~:·:·, ---1 .. .. I 
'-I ~. 1.0 f A_~·;, K1=0.08 
0 0 ' 
/ / / -K,=0.008 
/ 
0.01 0.02 
Time (sec) 0.03 0.04 0.05 
Figure 9-20 Unit-step responses of the system in Example 9-3-1 with PI control. Also. unit-step 
response of the system in Example 9-2-1 with PD controller. 
Toolbox 9-3-2 Frequency-Domain Design 
The forward-path transfer function of the uncompensated system is obtained by setting 
Kp = I and K1 = 0 in the G(s) in Eq. (9-34), and the Bode plot is shown in Fig. 9-21. The 
phase margin is 22.68°, and the gain-crossover frequency is 868 rad/sec. 
Fig. 9-20 is obtained by the following sequence of MATLAB functions 
K=lO; 
num =[4500i'K]; 
den= [1 361. 2 OJ; 
tf(nurn,den); 
[numCL,denCL]=cloop(num,den); 
step(num.CL,denCL) 
hold on 
KI = [ 1 . 6 0 . 8 ] ; 
KP=KI/S i 
K=lOO; 
for i = 1: length(KI) 
end num = [4500*K*KP(i) 4500*K*KI(i)/KP(i)]; 
den =[1 361. 2 0 OJ; 
tf(num,den); 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on 
axis( [O O. 05 O 2]) 
ii' ::s 
'§' 
~ \!) 
i ::s 
'§' 
:=:, 
i:., 
" 9-3 Design with the Pl Controller <tJ 521 
200 
150 R ~ K1= l.6 V I ~~ ~ " M K1=0.8 r-... .. ,.h 
~ y 100 
so ~ " ""'r,... """"C:~ " ~ I("' ~~ 
K1=0.008 
0 
-50 
-100 10-2 
0 
-20 
-40 
-60 
-80 
-100 .... ~-
~ ~l' r,,... i,,.~ j',.. 
............ !'--', ... _ 
10-t 
K1::::0 
LI~ 
K1=0.008 V "· ; . 
~"" 
~ V K1=0.0S 
~ ~ 
" :0-,. 
.... 
V '."' ... ....... rs., --.... r-,....., .... ..... ,...,... ... ... 21.5 dB i-.. ~ ~ ~ N..... 
Fe"'• ...... 
I 
I ~· ~-...... 
Gain· I 
crossovers I 
10' 
m(rad/sec) 
LI~ 
I/ I 
I 
I 
I 
102 170 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I ,... 
I :, ........ 
~~ ..... ~ 
"'· 
... ~ "'~ 
868 
-120 
-140 r/ K1=o.os/ V )' ' ·--~~ I/ 
-160 I, 
11"'11 K1=0.8"' / PM=65" "i\ ~ K1;::: l.6 ~ i.,11 
,/ v V ,, ~ ~ K1= l.6 I/ ~v 1../ i--i--"' 
-180 I• 
-200 Gain 
crossover 
ll K1=0 
['... 
t'... 
r--..... r,,.., 
"r-~ r-.... ' ~ ~ 
103 
PM= 22.68° 
j/1==0 
f',..... ...... 
:,..""""~ 
10-2 10-1 10° 101 102 103 1<>4 
m (rad/sec) 
Figure 9-21 Bode plots of the control system in Example 9-3-1 with PI controller. 
G(s) = 815, 265Kp(s + K,/ Kp) 
s2(s + 361.2) 
522 . · Chapter 9. Design of Control Systems 
Toolbox 9.3.3 
Bode plots of the control system in Example 9-3-1. Fig. 9-21 is obtained by the following sequence of 
MATLAB ft.mctions 
KI = [ 0 1 . 6 0 . 8 0 . 0 8 0 . 0 0 8] ; 
KP=0.08; 
K=l; 
for i = 1: length(KI) 
nurn = [815265*KP 81.5265~KI(i)]; 
den =[1 361. 2 O O]; 
bode(num,den) 
hold on 
end 
grid 
Let us specify that the required phase margin should be at least 65°. and this is to be 
achieved with the PI controller of Eq. (9-30). Following the procedure outlined earlier in 
Eqs. (9-31) through (9-33) on the design of the PI controller, we conduct the following 
steps: 
1. Look for the new gain-crossover frequency cv~ at which the phase margin of 65° is 
realized. From Fig. 9-21, cv~ is found to be 170 rad/sec. The magnitude of G(jw) at 
this frequency is 21.5 dB. Thus, the PI controller should provide an attenuation of 
-21.5 dB at cv~ = l 70rad/sec. Substituting la( jw~) I = 21.5 dB into Eq. (9-32), 
and solving for Kp, we get 
Kp = 10-JG(jm~)lda/20 = 10-21.5/20 = 0.084 (9-41) 
Notice that~ in the time-domain design conducted earlier, Kp was selected to be 
0.08 so that the relative damping ratio of the complex characteristic equation roots 
will be approximately 0. 707. (Perhaps we have cheated a little by selecting the 
desired phase margin to be 65°. This could not be just a coincidence. Can you 
believe that we have had no prior knowledge that, in this case~ ~ = 0.707 
corresponds to PM= 65°?) 
2. Let us choose Kp = 0.08, so that we can compare the design results of 
the frequency domain with those of the time-domain design obtained 
earlier. Eq. (9-33) gives the general guideline of finding K1 once Kp is 
determined. Thus, 
K = w~Kp = 170 x 0.08 = 1 36 I 10 10 . (9-42) 
As pointed out earlier, the value of K1 is not rigid~ as long as the ratio KJ/Kp is sufficiently 
smaller than the magnitude of the pole of G(s) at -361.2. As it turns out, the value of K1 
given by Eq. (9-42) is not sufficiently small for this system. 
The Bode plots of the forward-path transfer function with Kp = 0.08 and K1 = 0, 
0.008, 0.08, 0.8, and 1.6 are shown in Fig. 9-21. Table 9-6 shows the frequency-domain 
9-3 Design with the Pl Controller -523 
TABLE 9-6 Frequency-Domain Performance Data of the System in Example 9-3-1 
with Pl Controller 
GM PM BW Gain CO Phase CO 
KtfKp Ki Kp (dB) (deg) M,. (rad/sec) (rad/sec) (rad/sec) 
0 0 1.00 00 22.6 2.55 1390.87 868 00 
20 1.6 0.08 00 58.45 1.12 268.92 165.73 00 
10 0.8 0.08 00 61.98 1.06 262.38 164.96 ex:: 
5 0.4 0.08 00 63.75 1.03 258.95 164.77 ()0 
1 0.08 0.08 00 65.15 1.01 256.13 164.71 00 
0.1 0.008 0.08 oc 65.47 1.00 255.49 164.70 oc 
properties of the uncompensated system and the compensated system with various values 
of K1• Notice that, for values of K1/ Kp that are sufficiently small, the phase margin, M,., BW, 
and gain-crossover frequency all vary little. 
It should be noted that the phase margin of the system can be improved further by 
reducing the value of Kp below 0.08. However, the bandwidth of the system will be further 
reduced. For example, for Kp = 0.04 and K1 = 0.04, the phase margin is increased to 
75.7°, and M'" = l.01~ but BW is reduced to 117.3 rad/sec. 
EXAMPLE 9-3-2 Now let us consider using the PI control for the third-order attitude control system described by 
Eq. (9-19). First, the time-domain design is carried out as follows. You may use ACSYS to solve 
this problem. 
Time-Domain Design 
Let the time-domain specifications be as follows: 
Steady~state error due to the parabolic input t2us(t)/2 :::; 0.2 
Maximum overshoot :s; 5% 
Rise time t,. 5 0.0 l sec 
Settling time ts ~ 0.02 sec 
These are identical to the specifications given for the second-order system in Example 9-3-1. 
Applying the PI controller of Eq. (9-24), the forward-path transfer function of the 
system becomes 
_ 1.5 x 109KKp(s + KJ/Kp) 
G(s) = Gc(s)Gp(s) -s2(s2 + 3408.3s + 1,204,000} 
1.5 x 109 KKp(s + K[/ Kp) 
s2(s + 400.26)(s + 3008) (9-43) 
We can show that the steady-state error of the system due to the parabolic input is again 
given by Eq. (9-36 ), and~ arbitrarily setting K = 181.17, the minimum value of K1 is 
0.002215. 
The characteristic equation of the closed-loop system with K = 181.17 is 
s4 + 3408.3s3 + l,204,000s2 + 2.718 >< 109Kps +2.718 x I09K1 == 0 (9-44) 
524 • Chapter 9. Design of Control Systems 
The Routhts tabulation of the last equation is performed as follows: 
s4 1 1,204,000 2.718 x 109 K, 
s3 3408.3 
s2 1,204,000- 797465Kp 
sl 1, 204, OOOKp -797465K'f, -3408.3K, 
1,204,000- 197465Kp 
so 2.718 x 109 K1 
The stability requirements are 
K1>0 
Kp< 1.5098 2.718 X 109Kp 
2.718 X 109K1 
0 
0 
K1 < 353.255Kp -233.98Kj 0 
0 
(9-45) 
The design of the Pl controller calls for the selection of a small value for KI/ Kp, relative to 
the nearest pole of G(s) to the origint which is at -400.26. The root loci of Eq. (9-44) are 
plotted using the pole-zero configuration ofEq. (9-43). Fig. 9-22(a) shows the root loci as Kp 
s-plane 
-3008 
Figure 9-22 (a) Root loci of the control system in Example 9-3-2 with PI controller 
K1/Kp = 2: 0 :5 Kp < oo. 
9-3 Design with the Pl Controller -1111 525 
$ 50 
s 
'§' 
~ 
S2. 0 
I I 
I I 
I I 
I I -lQ01..-.L.....1~u..L.I..LI.----L......J-JL...L.1..U..U.~ ........... _._.u-u...._---1...__._, ..................... ~...._._._.........._.......___._......_. .................... 
-ff s 
~ ;,::. 
~ 
'..J 10-2 10-1 10° 101 102 163 103 104 
0 
-50 
-100 
-150 
-180 
-200 
-250 
-300 
10-2 K1=0,Kp= 1 
K1= Kp = O.Q7~ 
~ ... 
~ L, 
10-1 {l}(rad/sec) 
-r~~, ~ 
Yiff II' ; ~~ PM =66.15" V K1=0.6 r I"' I 11111 
~~ Kp:::0.04 ~PM=65.74" ' PM::::65.15" 
»i----111 ~ 1~~ 
~ 
lP 11 
l II It l ~~ 
'" K1=0.28 ; 
Kp=0.02 / \ PM=7.788° ' K1=0. Kp= I I\ \, 
101 
co (rad/sec) 
(b) 
Figure 9-22 (b) Bode plots of the control system in Example 9-3-2 with PI control. 
varies for K1 / Kp = 2. The root loci near the origin due to the pole and zero of the PI controller 
again form a small loop, and the root loci at a distance away from the origin will be very similar 
to those of the uncompensated system, which are shown in Fig. 5-34. By selecting the value of 
Kp properly along the root loci, it may be possible to satisfy the perfonnance specifications 
526 IL Chapter 9. Design of Control Systems 
TABLE 9-7 Attributes of the Unit-Step Responses of the System in Example 9-3-2 
with Pl Conlroller 
Maximum tr ls Roots of 
K/Kp K, Kp Overshoot(%) (sec) (sec) Characteristic Equation 
0 0 1 76.2 0.00158 0.0487 -3293.3 -57.5 ±j906.6 
20 1.6 0.08 15.6 0.0077 0.0471 -3035 -22.7 -175.3 ±jl80.3 
20 0.8 0.04 15.7 0.0134 0.0881 -3021.6 -259 -99 -28 
5 0.4 0.08 6.3 0.00883 0.0202 -3035 -5.1 -184 ±j189.2 
2 0.08 0.04 2.1 0.02202 0.01515 -3021.7 -234.6 -149.9 -2 
5 0.2 0.04 4.8 0.01796 0.0202 -3021.7 -240 -141.2 -5.3 
2 0.16 0.08 5.8 0.00787 0.01818 -3035.2 -185.5 ±jl90.8 -2 
0.08 0.08 5.2 0.00792 0.01616 -3035.2 -186 ±jl91.4 -1 
2 0.15 0.075 4.9 0.0085 0.0101 -3033.5 -187.2 ±jl78 -1 
2 0.14 0.070 4.0 0.00917 0.01212 -3031.8 -187.2 ±j164 -1 
given above. To minimize the rise time and settling time, we should select Kp so that the 
dominant roots are complex conjugate. Table 9-7 gives the performance attributes of severa1 
combinations of K1/ Kp and Kp. Notice that, although several combinations of these parameters 
correspond to systems that satisfy the performance specifications, the one with Kp = 0.075 
and K1 = 0.15 gives the best rise and settling times among those shown. 
Frequency-Domain Design 
The Bode plot of Eq. (9-43) for K = 181.17, Kp = 1, and K1 = 0 is shown in Fig. 9-22(b ). 
The performance data of the uncompensated system are as follows: 
Gain margin = 3.578 dB 
Phase margin= 7.788° 
Mr= 6.572 
BW = 1378rad/sec 
Let us require that the compensated system has a phase margin of at least 65°. and this is 
to be achieved with the PI controller of Eq. (9-30). Following the procedure outlined in Eqs. 
(9-31) through (9-33) on the design of the PI controller, we carry out the following steps. 
1. Look for the new gain-crossover frequency a>~ at which the phase margin of 65° is 
realized. From Fig. 9-20, w~ is found to be 163 rad/sec, and the magnitude of 
G(jw) at this frequency is 22.5 dB. Thus, the PI controllyr shouldJprovide an 
attenuation of -22.5 dB at w~ = 163rad/sec. Substituting JG( jw~) = 22.5 dB 
into Eq. (9-32), and solving for Kp. we get 
Kp = 10-IG{iw~)Ls/20 = 10-22.5/20 = 0.075 (9-46) 
This is exactly the same result that was selected for the time-domain design that resulted in 
a system with a maximum overshoot of 4.9% when K1 = 0.15, or KJ/Kp = 2. 
2. The suggested value of K1 is found from Eq. (9-33): 
Ki = w~Kp = 163 x 0.075 = 1 _222 10 10 (9-47) 
9-3 Design with the Pl Controller ~ 527 
Toolbox 9-3-4 
Bode plots of the control system in Example 9-3-2. Fig. 9-22(b) is obtained by the following sequence of 
MATLAB functions 
KI = [ 0 . 6 0 . 2 8 0 . 0 7 5 0 J ; 
KP;::::; [O. 04 0. 02 0. 075 1]; 
K=l; 
for i = 1:length(KI) 
num = [1. 5e9~'rKP(i) 1. 5e9*KI(i) J; 
den =[13408.31204000 o OJ; 
bode(num,den) 
hold on 
end 
grid 
axis ( [O. 0110000 -270 OJ); 
Thust K1 / Kp = 16.3. However. the phase margin of the system with these design 
parameters is only 59.52. 
To realize the desired PM of 65°. we can reduce the value of Kp or K1• Table 9-8 gives 
the results of several designs with various combinations of Kp and K1• Notice that the last 
three designs in the table all satisfy the PM requirements. However. the design ramifica­
tions show the following: 
Reducing Kp would reduce BW and increase M,.. 
Reducing K1 would increase the capacitor value in the implementing circuit. 
In fact, only the K1 = Kp = 0.075 case gives the best all-around performance in both the 
frequency domain and the time domain. In attempting to increase K,, the maximum 
overshoot becomes excessive. This is one example that shows the inadequacy of 
specifying phase margin only. The purpose of this example is to bring out the properties 
of the PI controller and the important considerations in its design. No details are 
explored further. 
Fig. 9-23 shows the unit-step responses of the uncompensated system and several 
systems with PI control. 
TABLE 9-8 Performance Summary of the System in Example 9-3-2 with Pl Controller 
GM PM BW Maximum t,. l.r 
K1/Kp K1 Kr (dB) (deg) M,. (rad/sec) Overshoot(%) (sec) (sec) 
0 0 1 3.578 7.788 6.572 1378 77.2 0.0015 0.0490 
16.3 1.222 0.Q75 25.67 59.52 1.098 264.4 13.1 0.0086 0.0478 
l 0.o75 o.ms 26.06 65.15 1.006 253.4 4.3 0.0085 0.0116 
15 0.600 0.040 31.16 66.15 1.133 134.6 12.4 0.0142 0.0970 
14 0.280 0.020 37.20 65.74 l.209 66.34 17.4 0.0268 0.1616 
528 IJr,-Chapter 9. Design of Control Systems 
1.8 
1.6 i.----K1=0.Kp= 1 
K1.:. Kp=0.015 
~ f K1=J·J,K,=0.04 
K1 = 0.28. KP= 0.02 I .J -t I/ /~ l'vn r-----i 
1/-....... f\1\/\A-.-1.4 
1.2 
I i/ 'ef V \ IV V ""' " 
I ~/ 
IJ 
I I 
I " 0.8 
0.6 
J 
II 
l 0.4 
0.2 
0.05 0.1 0.15 0.2 
Time(sec) 
Figure 9-23 Unit-step response of system with Pl controller in Example 9-3-2 . 
._ 9-4 DESIGN WITH THE PIO CONTROLLER 
From the preceding discussions, we see that the PD controller could add damping to a 
system, but the steady-state response is not affected. The PI controller could improve the 
relative stability and improve the steady-state error at the same time, but the rise time is 
increased. This leads to the motivation of using a PID controller so that the best features of 
each of the PI and PD controllers are utilized. We can outline the following procedure for 
the design of the PIO controller. 
1. Consider that the PID controller consists of a PI portion connected in cascade with 
a PD portion. The transfer function of the PID controller is written as 
Kt ( K11) Gc(s) = Kp + KDs +8 = (1 + Kms) KP2 +7 (9-48) 
The proportional constant of the PD portion is set to unity, since we need only 
three parameters in the PID controller. Equating both sides ofEq. (9-48), we have 
Kp = KP2 + KmK12 
KD = KmKP2 
K1 = Kn (9-49) 
(9-50) 
(9-51) 
Toolbox 9-4-1 9-4 Design with the PID Controller ~ 529 
2. Consider that the PD portion only is in effect. Select the value of Km so that a 
portion of the desired relative stability is achieved. In the time domain, this 
relative stability may be measured by the maximum overshoot, and in the 
frequency domain it is the phase margin. 
3. Select the parameters K12 and Kn so that the total requirement on relative stability 
is satisfied. 
Fig. 9-23 is obtained by the following sequence of MATLAB ji.mctions 
KI= [00.60.280.075]; 
KP= [1 0. 04 0. 02 0. 075]; 
K=l; 
t = 0 : 0 . 0001: 0 . 2 ; 
for i = 1:length(KI) 
num = [1. Se9*KP(i) 1. 5e9*KI(i)]; 
den =[l 3408. 3 1204000 0 O]; 
tf(num,den); 
[numCL,denCL]=cloop(nurn,den); 
step(numCL,denCL,t) 
hold on 
end 
grid 
axis ( [ O O . 2 0 1. 8]) 
As an alternative, the PI portion of the controller can be designed first for a portion of 
the requirement on relative stability, and, finally, the PD portion is designed. 
The following example illustrates how the PID controller is designed in the time 
domain and the frequency domain. 
!"_ ·• EXAMPLE 9-4-1 Consider the third-order attitude control system represented by the forward-path transfer function 
given in Eq. (9-19). With K = 181.17, the transfer function is 
G ( ) 2.718 X 109 (g 52) 
P s = s(s + 400.26) (s + 3008) • 
You may use ACSYS to solve this problem; see Section 9-19. 
Time-Domain Design 
Let the time-domain performance specifications be as follows: 
Steady-state error due to a ramp input t2us(t)/2 ~ 0.2 
Maximum overshoot $ 5% 
Rise time tr~ 0.005 sec 
Settling time ts ~ 0.005 sec 
We realize from the previous examples that these requirements cannot be fulfilled by 
either the Pl or PD control acting alone. Let us apply the PD control with the transfer 
function (1 + Kms). The forward-path transfer function becomes 
G(s) = 2.718 x 109(1 + Ko1s) 
s(s + 400.26)(s + 3008) (9-53) 
530 · Chapter 9. Design of Control Systems 
TABLE 9-9 Time-Domain Performance Characteristics of Third-Order Attitude Control System 
wilh PID Controller Designed in Example 9-4-1 
Maximum t,. l.s Roots of 
KP2 Overshoot (%) (sec) (sec) Characteristic Equation 
1.0 11.1 0.00088 0.0025 -15.1 -533.2 -1430 ± j 1717.5 
0.9 10.8 0.00111 0.00202 -15.1 -538.7 -1427 ± j 1571.8 
0.8 9.3 0.00127 0.00303 -15.1 -546.5 -1423 ± j 1385.6 
0.7 8.2 0.00130 0.00303 -15.1 -558.4 -1417±j 1168.7 
0.6 6.9 0.00155 0.00303 -15.2 -579.3 -1406+ j 897.1 
0.5 5.6 0.00172 0.00404 -15.2 -629 -1382± j 470.9 
0.4 5.1 0.00214 0.00505 -15.3 -1993 -700±j 215.4 
0.3 4.8 0.00271 0.00303 -15.3 -2355 -519 ± j 263.1 
0.2 4.5 0.00400 0.00404 -15.5 -2613 -390±j 221.3 
0.1 5.6 0.00747 0.00747 -16.1 -284 -284±j 94.2 
0.08 6.5 0.00895 0.04545 -16.5 -286.3 -266 ± j 4.1 
Table 9-3 shows that the best PD controller that can be obtained from the maximum 
overshoot standpoint is with Km = 0.002, and the maximum overshoot is 11.37%. The rise 
time and settling time are well within the required values. Next, we add the PI controller, 
and the forward-path transfer function becomes 
G(s) = 5.436 x 106Kn(s + 500)(s + K12/Kn) 
s2(s + 400.26)(s + 3008) (9-54) 
Following the guideline of choosing a relatively small value for Kn/ Kn, we let 
K12/KP2 = 15. Eq. (9-54) becomes 
G(s) = 5.436 x 106Kn(s + 500)(s + 15) 
s2(s + 400.26)(s + 3008) (9-55) 
Table 9-9 gives the time-domain performance characteristics along with the roots of the 
characleristic equation for various values of KP2. Apparently, the optimal value of KP2 is in 
the neighborhood of between 0.2 and 0.4. 
Selecting Kn = 0.3, and with KDI = 0.002 and K12 = ISKn = 4.5, the following 
results are obtained for the parameters of the PID controller using Eqs. (9-49) through (9-51): 
K1 =Kn= 4.5 
Kp = KP2 + KmK12 = 0.3 + 0.002 x 4.5 = 0.309 
Kv = KmKPZ = 0.002 x 0.3 ;;;;: 0.0006 (9-56) 
Notice that the PID design resulted in a smaller K0 and a larger K1, which correspond to 
smaller capacitors in the implementing circuit. 
Fig. 9-24 shows the unit-step responses of the system with the PID controller, as well 
as those with PD and PI controls designed in Examples 9-2-2 and 9-3-2, respectively. 
Notice that the PID control, when designed properly, captures the advantages of both the 
PD and the PI controls. 
9-4 Design with the PlD Controller .,.. 531 
1.2.------------,,---------..-----~------.---------, 
PD control, Kr= I, Ko= 0.002 .I ~ Kp = 0.309, K1 = 4.5; Ko= 0.0006 
1-,.-~ I I PI control, Kp = 0.075. K1 = 0.15 
0.8 I 
0.6 I 
G.4 I 
0.2 y 
00 0.02 0.04 
Time (sec) 0.06 0.08 0.1 
Figure 9-24 Step responses of the system in Example 9-4-1 with PD. Pl, and PID controllers. 
Frequency-Domain Design 
The PD control of the third-order attitude control systems was already carried out in 
Example 9-2-2, and the results were tabulated in Table 9-3. When Kp = 1 and Kn = 0.002, 
the maximum overshoot is 11.37%, but this is the best that the PD control could offer. 
Using this PD controller, the forward-path transfer function of the system is 
G(s) = 2.718 x 109(1 + 0.002s) 
s(s + 400.26)(s + 3008) (9-57) 
and its Bode plot is shown in Fig. 9-25. Let us estimate that the following set offrequency­
domain criteria corresponds to the time-domain specifications given in this problem. 
Phase margin ~ 70° 
Mr~ I.I 
BW 2::: 1.000 rad/sec 
From the Bode diagram in Fig. 9-25, we see that, to achieve a phase margin of 70°, the new 
phase-crossover frequency should be a>~ = 811 rad/sec, at which the magnitude of G(jw) is 
7 dB. Thus, using Eq. (9-32), the value of Kn is calculated to be 
KP2 = 10-7/2o = 0.45 (9-58) 
Notice that the desirable range of KP2 found from the time-domain design with K12/ Kn = 
15 is from 0.2 to 0.4. The result given in Eq. (9-58) is slightly out of the range. Table 9-10 
shows the frequency-domain perfonnance results with Kn= 0.002, Kn/Kn= 15T and 
532 ~ Chapter 9. Design of Control Systems 
iii' 3 
'§ 
;.::, 
t:i 
~ u s 
'a ::;;. 
t.:, 
'-l 150 
--... 
100 -
50 
0 
-50 
-100 10-• 
0 
-50 
-100 
-150 
-180 
-200 
10-l I 11111111 I 111111 l I I - PIO control. Kp = 0.309. K1 = 4.5, K0 = 0.0006 ~ 
~ '---i-. 111 II I i-. --------PD control. Kp = 1. KD = 0.002 I r-----... " Ill -i,. 
~ 1--r-r---7d8 I"--r---1--...., 
""'"' Gain crossover :--._ ri-- I 
I .. -:-::.--~ I I ..... 
I I I ... .. =::::::: I I I 811 ~-
I : ;// ' ~"" --~~ I 
I I 1 
102 
ro (rad/sec) 
I ' I I 
I I I i 
I l I I 
I I I 
I I I . 
I I I 
PD control I I I 
I I I 
I I II I 
II ~ .... _,.. Tt • V PM:70° 
/ v 
PM=7l.45° t~:J PID con\Iol 
111111 __ ...... ~ I 111!1!11 l I I I -......_ 
~ _ .... - --· . I I -----I I I I 
100 IOI 102 103 104 l05 
ro(rad/sec) 
Figure 9-25 Bode plot of the system in Example 9-4-1 with PD and PID controllers. 
TABLE 9-10 Frequency-Domain Performance of System in Example 9-4-1 with PIO Control1er 
GM PM BW lr ls Maximum 
Kn Kn (dB) (deg) Mr (rad/sec) (sec) (sec) Overshoot(%) 
1.00 0 00 58.45 1.07 2607 0.0008 0.00255 11.37 
0.45 6.75 00 68.5 1.03 1180 0.0019 0.0040 5.6 
0.40 6.00 00 69.3 l.027 1061 0.0021 0.0050 5.0 
0.30 4.50 00 71.45 1.024 1024 0.0027 0.00303 4.8 
0.20 3.00 00 73.88 1.031 528.8 0.0040 0.00404 4.5 
0.10 1.5 00 76.91 1.054 269.5 0.0076 0.0303 5.6 
0.08 1.2 00 77.44 1.065 216.9 0.0092 0.00469 6.5 
several values of Kn starting with 0.45. It is interesting to note that, as Kn continues to 
decrease, the phase margin increases monotonically, but below Kn= 0.2, the maximum 
overshoot actually increases. In this case~ the phase margin results are misleading, but the 
resonant peak Mr is a more accurate indication of this . 
.. 9-5 DESIGN WITH PHASE-LEAD CONTROLLER 
The PIO controller and its components in the form of PD and PI controls represent simple 
forms of controllers that utilize derivative and integration operations in the compensation 
of control systems. In general, we can regard the design of controllers of control systems as 
9-5 Design with Phase-Lead Controller 533 
C, 
>----+ 
E,, 
F. 9 26 0 . . . I . f G( ) K s + zi 1gure -p-amp Cll"CUJt imp ementat.Jon o s = c -- . s+P1 
a filter design problem; then there are a large number of possible schemes. From the 
filtering standpoint , the PD controller is a high-pass filter, the PI controller is a low-pass 
filter, and the PIO controller is a band-pass or band-attenuate filter, depending on the values 
of the controller parameter s. The high-pass filter is often referred to as a phase-lead 
controller, because positive phase is introduced to the system over some frequency range. 
The low-pass filter is also known as a phase-lag controller, because the corresponding 
phase introduced is negative. These ideas related to filtering and phase shifts are useful if 
designs are carried out in the frequency domain. 
The transfer function of a simple lead or lag controller is expressed as 
S + ZJ Gc(s) = Kc-­s+ Pl (9-59) 
where the controller is high-pass or phase-lead if Pl > z1, and low-pass or phase-Jag if 
Pl <z1. 
The op-amp circuit implementation of Eq. (9-59) is given in Table 4-4(g) of Chapter 
4 and is repeated in Fig. 9-26 with an inverting amplifier. The transfer function of the 
circuit is 
Comparing the last two equations , we have 
Kc= CJ/C2 
Zt = l/R1 C1 
Pl = l/R2C2 (9-61) 
We can reduce the number of design parameters from four to three by setting 
C = C1 = C2. Then Eq. (9-60) is written as 
(9-62) 
534 .-Chapter 9. Design of Control Systems 
where 
(9-63) 
(9-64) 
9-5-1 Time-Domain Interpretation and Design of Phase-Lead Control 
In this section, we shall first consider that Eqs. {9-60) and (9-62) represent a phase-lead 
controller (z1 < p1 ora > 1). In order that the phase-lead controller will not degrade the 
steady-state error, the factor a in Eq. (9 .. 62) should be absorbed by the forward-path gain K. 
Then, for design purposes, Gc(s) can be written as 
l +aTs Gc(s) = 1 + Ts (a> l} (9-65) 
The pole-zero configuration of Eq. (9-65) is shown in Fig. 9-27. Based on the discussions 
given in Chapter 7 on the effects of adding a pole-zero pair (with the zero closer to the 
origin) to the forward-path transfer function, the phase-lead controller can improve the 
stability of the closed-loop system if its parameters are chosen properly. The design of 
phase-lead control is essentially that of placing the pole and zero of Gc(s) so that the design 
specifications are satisfied. The root-contour method can be used to indicate the proper 
ranges of the parameters. The ACSYS MATLAB tool can be used to speed up the cut-and­
try procedure considerably. The following guidelines can be made with regard to the 
selection of the parameters a and T. 
1. Moving the zero -1 / aT toward the origin should improve rise time and settling 
time. If the zero is moved too close to the origin, the maximum overshoot may again 
increase, because ~ 1 / aT also appears as a zero of the closed-loop transfer function. 
2. Moving the pole at -1 /T farther away from the zero and the origin should reduce 
the maximum overshoot. but if the value of Tis too small, rise time and settling 
time will again increase. 
s-plane 
_..l. 0 
aT jco 
(I 
figure 9-27 Pole-zero 
configuration of the phase­
lead controller. 
9-5 Design with Phase-Lead Controller -<11111 535 
We can make the following general statements with respect to the effects of phase-lead 
control on the time-domain performance of a control system: 
1. When used properly, it can increase damping of the system. 
2. It improves rise time and settling time. 
3. In the form of Eq. (9-65), phase-lead control does not affect the steady-state error, 
because Gc(O) = 1. 
9-5-Z Frequency-Domain Interpretation and Design of Phase-Lead Control 
The Bode plot of the phase-lead controller of Eq. (9-65) is shown in Fig. 9-28. The two 
corner frequencies are at w = 1/aT and w = 1/T. The maximum value of the phase, <Pm, 
and the frequency at which it occurs, Wm, are derived as follows. Because Wm is the 
geometric mean of the two corner frequencies. we write 
Thus, 
1 
Wm= ..ja,T 
To determine the maximum phase <Pm, the phase of Gc(jw) is written 
90 
ff s 
'a 0 :.:::, 
C!, ... 
"1 
-90 
Figure 9-28 l 
aT l r 
I @m 1 
aT T 
ro (rad/sec) 
s + 1/aT Bode plot of phase-lead controller Gc(s) = a s + l/T a> 1. (9-66) 
(9-67) 
(9-68) 
536 · Chapter 9. Design of Control Systems 
from which we get 
waT -wT 
tarnj,(jw) = 1 + (waT)(wT) (9-69) 
Substituting Eq. (9-67) into Eq. (9-69), we have 
or a-1 
tanef,m = Zyla 
a -1 sin¢m =--1 a+ (9-70) 
(9-7 I) 
Thus, by knowing </Jm, the value of a is determined from 
1 + sintPm a=----1 -sinq,111 (9-72) 
The relationship between the phase t/Jm and a and the general properties of the Bode 
plot of the phase-lead controller provide an advantage of designing in the frequency 
domain. The difficulty is, of course, in the correlation between the time-domain and 
frequency-domain specifications. The general outline of phase-lead controller design in the 
frequency domain is given as follows. It is assumed that the design specifications simply 
include steady-state error and phase-margin requirements. 
1. The Bode diagram of the uncompensated process Gp{jw) is constructed with the 
gain constant K set according to the steady-state error requirement. The value of K 
has to be adjusted upward once the value of a is determined. 
2. The phase margin and the gain margin of the uncompensated system are 
determined, and the additional amount of phase lead needed to realize the phase 
margin is determined. From the additional phase lead required, the desired value 
of <Pm is estimated accordingly, and the value of a is calculated from Eq. (9~ 72). 
3. Once a is determined, it is necessary only to determine the value of T, and the 
design is in principle completed. This is accomplished by placing the corner 
frequencies of the phnse-lead controller, 1/aTand 1/T. such that c/Jm is located at 
the new gain-crossover frequency cv~, so the phase margin of the compensated 
system is benefited by 'Pm· It is known that the high-frequency gain of the phase­
lead controller is 20 logwa dB. Thus. to have the new gain crossover at (J)m, which 
is the geometric mean of I/ aT and 1 /T, we need to place Wm at the frequency 
where the magnitude of the uncompensated Gp(jw) is -10 log ma dB so that 
adding the controller gain of IO log10a dB to this makes the magnitude curve go 
through O dB at Wm, 
4. The Bode diagram of the forward-path transfer function of the compensated 
system is investigated to check that all perfonnance specifications are met; if not, a 
new value of <Pm must be chosen and the steps repeated. 
5. If the design specifications are all satisfied, the transfer function of the phase-lead 
controller is established from the values of a and T. 
9-5 Design with Phase-Lead Controller 537 
If the design specifications also include M,. and/or BW, then these must be checked 
using either the Nichols chart or the output data from a computer program. 
We use the following example to illustrate the design of the phase-lead controller in 
the time domain and frequency domain. 
EXAMPLE 9-5-1 The block diagram of the sun-seeker control system described in Section 4-11 is again shown in Fig. 
9-29. The system may be mounted on a space vehicle so that it will track the sun with high accuracy. 
The variable e,. represents the reference angle of the solar ray, and 80 denotes the vehicle axis. The 
objective of the sun-seeker system is to maintain the error a between 8,. and 80 near zero. The 
parameters of the system are as follows: 
RF= 10,000!1 
K; = 0.0125N-m/A 
J = 10-6 kg-m2 
K = to be determined 
n = 800 K1; = 0.0125 V/rad/sec 
Ra= 6.25!1 
Ks= 0.1 Nrad 
B=O 
The forward-pat h transfer function of the uncompensated system is 
( ) _ 00(s) _ K.,RFKK;jn G,,s --- --~~---A(s) Rals-+ K;K1,s (9-73) 
where 0,,(s) and A(s) are the Laplace transforms of 80(1) and a(t), respectively. 
Substituting the numerical values of the system parameters in Eq. (9-73). we get 
00(s) 2500K 
Gp(s) = A(s) = s(s + 25) (9-74) 
You may use A CSYS to solve this problem after reducing the block diagram in Fig. 9-29 to a standard 
form. See Section 9-15. 
Error 
discriminator Operational 
amplifier Servo 
Controller amplifier ----- DC motor---- -
Back emf Gear 
train 
Figure 9-29 Block diagram of sun-seeker control system. 
Time-Domain Design 
The time-domain specifications of the system are as follows: 
1. The steady-state error of a(t) due to a unit-ramp function input for 8,.(t) should be 
:S 0.01 rad per rad/sec of the final steady-state output velocity. In other words, the 
steady-state error due to a ramp input should be :S 1 %. 
2. The maximum overshoot of the step response should be less than 5% or as small as 
possible. 
3. Rise time t,. :S 0.02 sec. 
4. Settling time ts :S 0.02 sec. 
538 .._ Chapter 9. Design of Control Systems 
The minimum value of the amplifier gain, K, is determined initially from the steady-state 
requirement. Applying the final-value theorem to a(t), we have 
lim a(t) = lim sA(s) = lim 1 s@~}'/ ) 
t-+00 S--tO s-o + p S (9-75) 
For a unit-ramp input, @,(s) = 1/s2• By using Eq. (9-74), Eq. (9-75) leads to 
. ( ) 0.01 hmat=--1-00 K (9-76) 
Thus, for the steady-state value of a( t) to be ::; 0.01, K must be ~ 1. Let us set K = l, the 
worst case from the steady-state error standpoint. The characteristic equation of the 
uncompensated system is 
s2 + 25s + 2500 = 0 (9-77) 
We can show that the damping ratio of the uncompensated system with K = I is only 0.25, 
which corresponds to a maximum overshoot of 44.4%. Fig. 9-30 shows the unit-step 
response of the system with K = I. 
I.6----------~--,.---------------r-~------------------------------------------,.---------------------------------, 
o.si---1--~r--~0-.0-0-3~--1--~-==---+---~-1-----~----f----~--1 
a = 16.67 
0.61--1t---------+-------------------------------------
0.4-----,------------~--~-----~~t---~-----~----~----1 
0.2---------------------------t-----------------------
0.05 0.1 0.15 0.2 0.25 0.3 0.35 
Time (sec) 
Figure 9w30 Unit-step response of sun-seeker system in Example 9-5-I. 
9·5 Design with Phase-Lead Controller < 539 
Toolbox 9-5-1 
Unit.step response/or Example 9-6 in Fig. 9-30 is obtained by thefollowingsequenceofMATLABfunctions 
a= (110 12. 5 16. 67] ; 
T= [10.0050.0040.003]; 
for i = 1: length CT) 
num= [2500*a(i)*T(i) 2500]; 
den =[T(i) 25*T(i)+l 25 O]; 
tf(num,den); 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on 
end 
grid 
axis ( [ O O • 3 5 O 1. 8]) 
A space has been reserved in the forward path of the block diagram of Fig. 9-29 for a 
controller with transfer function Gc(s). Let us consider using the phase-lead controller of 
Eq. (9-62), although in the present case, a PD controller or one of the other types of phase­
lead controllers may also be effective in satisfying the performance criteria given. The 
forward-path transfer function of the compensated system is written 
Gs _ 2500K(l +aTs) 
( ) -as(s + 25)(1 + Ts) (9-78) 
For the compensated system to satisfy the steady-state error requirement, K must satisfy 
(9-79) 
Let us set K = a. The characteristic equation of the system is 
(s2 + 25s + 2500) + Ts2(s + 25) + 2500aTs = 0 (9-80) 
We can use the root-contour method to show the effects of varying a and T of the phase-lead 
controller. Let us first set a = 0. The characteristic equation of Eq. (9-80) becomes 
s2 + 25s + 2500 + Ts2(s + 25) = 0 (9-81) 
Dividing both sides of the last equation by the terms that do not contain T~ we get 
_ 1 Ts2(s + 25) _ 1 + Geql (s) -+ s2 + 25s + 2500 -O (9-82) 
Thus, the root contours of Eq. (9-81) when T varies are determined using the pole-zero 
configuration of GeqI (s) in Eq. (9-82). These root contours are drawn as shown in Fig. 9-31. 
Notice that the poles of Gcq1(s) are the roots of the characteristic equation when a = 0 and 
T = 0. The root contours in Fig. 9-31 clearly show that adding the factor (I + T.r) to the 
denominator of Eq. (9-74) alone would not improve the system performance, since the 
characteristic equation roots are pushed toward the right-half plane. In fact, the system 
becomes unstable when Tis greater than 0.0133. To achieve the full effect of the phase-lead 
controller, we must restore the value of a in Eq. (9-80). To prepare for the root contours 
540 IJll> Chapter 9. Design of Control Systems 
j(J) 
s-plane 
0-T 
Figure 9-31 Root contours of the sun-seeker system with a= 0, and T varies from Oto oo. 
with a as the variable parameter, we divide both sides of Eq. (9-80) by the terms that do not 
contain a, and the following equation results: 
2500aTs 
I + aGeq2(s) = 1 + 2 "5 2500 T. 2( 25) = 0 s + .... s+ + s s+ . 
Toolbox 9 .. 5.2 
Root contours for Fig. 9-31 are obtained by the following sequence of MATLAB functions 
for T = 1: 1: 260 
end num == [T 325,'tT O O] i 
den= [1 25 2500]; 
tf(num,den) i 
(nurnCL,denCL]=cloop(num,den); 
P == tf(num, den); 
PoleData(:,T)=pole(F); 
plot(real(PoleData(l,:)),imag(PoleData(l,:)),real(PoleData(2,:)),:i..mag(PoleData(2,:))); (9-83) 
-175 .s-plane 
a= 12.5 
Cl= 16.67 a= 10 
a= ll.45 a=?.03 
-150 -125 -IOO 9-5 Design with Phase-Lead Controller ~ 541 
8 t 
::s 
-25 -12.5 j(JJ 
jl50 
jl25 
jlOO 
j15 
a=O 
O' 
Figure 9-32 Root contours of the sun~seeker system with a phase-lead controller. 
For a given T, the root contours of Eq. (9~80) when a varies are obtained based on 
the poles and zeros of Geq2(s). Notice that the poles of Geq1.(s) are the same as the 
roots of Eq. (9-81 ). Thus, for a given T, the root contours of Eq. (9-80) when a varies 
must start (a= 0) at points on the root contours of Fig. 9-31. These root contours 
end (a = oc) at s = 0, oo~ oo, which are the zeros of Geq2(s). The complete root 
contours of Eq. (9-80) are now shown in Fig. 9-32 for several values of T, and a 
varies from O to oo. 
From the root contours of Fig. 9-32, we see that, for effective phase-lead control, the 
value of T should be sma11. For large values of T, the natural frequency of the system 
increases rapidly as a increases, and very little improvement is made on the damping of the 
system. 
Let us choose T = 0.01 arbitrarily. Table 9-11 shows the attributes of the unit-step 
response when the value of aTis varied from 0.02 to 0.1. The ACSYS MATLAB tool was 
used for the calculations of the time responses. The results show that the smallest 
maximum overshoot is obtained when aT -0.05, although the rise and settling times 
decrease continuously as aT increases. However, the smallest value of the maximum 
overshoot is 16.2%, which exceeds the design specification. 
542 '.,.. Chapter 9. Design of Control Systems 
TABLE 9-11 Attributes of Unit-Step Response of System with 
Phase-Lead Controller in Example 9-5-1: T=0.01 
Maximum tr Is 
aT a Overshoot (%) (sec) (sec) 
0.02 2 26.6 0.0222 0.0830 
O.o3 3 18.9 0.0191 0.0665 
0.04 4 16.3 0.0164 0.0520 
0.05 5 16.2 0.0146 0.0415 
0.06 6 17.3 0.0129 0.0606 
0.08 8 20.5 0.0112 0.0566 
0.10 10 23.9 0.0097 0.0485 
Toolbox 9-5-3 
Root contours for Fig. 9-32 are obtained by the following sequence of MATLAB functions 
T = [O. 003 0. 004 0. 005 0. 05 0 .1 2. S]; 
for j=1: length(T) 
i=1; 
for a= O: O. 005: 30 
end nurn::: [T(j) 25*T(j)+l 25+2500*a*T(j) 2500]; 
den= [T(j) 251'T(j)+125 2500]; [nurnCL,denCLJ=cloop(nurn,den); 
F = tf(numCL,denCL); PoleData(: ,i)=pole(F); 
i=i+l; 
Count ::: i-1; %% for graph continuation 
for i=l: Count 
ifimag(PoleData(l,i))-=O 
break; 
end end 
count = i; %% for graph continuation 
for i=l ~ count 
PoleData(l,i)=PoleData(l,count); 
end 
for i=l:Count if irnag(PoleData(2, i) )-=O 
break; 
end end 
count = i; %% for graph continuation 
fo:r i=l: count 
PoleData(2,i)=PoleData(2,count)j 
end 
FositivePos = o; 
for i=l: Count if imag(PoleData(l, i)) < 0 if Posi tivePos == 0 
PositivePos = i-1; 
end 
PoleData( 1, i) = PoleData( 1, Posi ti vePos) ; 
End end 
Posi ti vePos = O; 
for i=l: Count if imag(PoleData(2, i)) < 0 
if PositivePos == 0 
PositivePos = i-1; 
end 9-5 Design with Phase-Lead Controller <-11 543 
PoleData(2, i) = Po1eData(2, PositivePos); 
End end 
plot(real(PoleData(l,:)),imag(PoleData(l,:)),real(PoleData(2,:)),imag(PoleData(2,~))); 
hold on 
end 
axis( [-175 O O 150]); sgrid 
Next. we set aT = 0.05 and vary T from 0.01 to 0.001, as shown in Table 9-12. Table 
9-12 shows the attributes of the unit-step responses. As the value of T decreases, the maximum 
overshoot decreases. but the rise time and settling time increase. The cases that satisfy the 
design requirements are indicated in Table 9-12 foraT = 0.05. Fig. 9-30 shows the unit-step 
responses of the phase-lead-compensated system with three sets of controller parameters. 
Choosing T = 0.004, a= 12.S, the transfer function of the phase-lead controller is 
Gc(s) =as+ 1/aT = 12.5 s + 20 
s + 1/T s + 250 
The transfer function of the compensated system is 
31250(s + 20) 
G(s) = Gc(s)Gp(s) = s(s + 25)(s + 250) (9-84) 
(9-85) 
To find the op-amp-circuit realization of the phase-lead controller, we arbitrarily set 
C = 0.1 µf, and the resistors of the circuit are found using Eqs. (9-63) and (9-64) as R 1 = 
500, 000 n and R2 = 40, 000 n. 
Frequency-Domain Design 
Let us specify that the steady-state error requirement is the same as that given earlier. For 
frequency-domain design, the phase margin is to be greater than 45°. The following design 
steps are taken: 
1. The Bode diagram of Eq. (9-74) with K = 1 is plotted as shown in Fig. 9-33. 
2. The phase margin of the uncompensated system, read at the gain-crossover 
frequency, We= 47 rad/sec, is 28°. Because the minimum desired phase margin 
TABLE 9-12 Attributes of Unit-Step Responses of System with Phase-Lead 
Controller in Example 9-5-1: aT=0.05 
Maximum t,. t.~ 
T a Overshoot(%) (sec) (sec) 
O.oI 5.0 16.2 O.Q146 0.0415 
0.005 10.0 4.1 0.0133 0.0174 
0.004 12.5 1.1 0.0135 0.0174 
0.003 16.67 0 0.0141 0.0174 
0.002 25.0 0 0.0154 0.0209 
0.001 50.0 0 0.0179 0.0244 
544 ~ Chapter 9. Design of Control Systems 
6 s 
'§' ::::, 
52. 
~ 
OU s 
'§' 
::::, 
t.:, 
" 20 
() 
-20 Lead network a= 2.46 T::. 0.0106 
~ G (s)=l +aTs 
~.........._ c l+Ts 
1------l---+-+--l-+--1-+++-----¥~~~r--...~~-+-+-+++---.trV----t---t-l 7.82dB .-.J 
~~~f',. I _L--~t&-+--t--rt1rTii l'o....'f...2-""' ---1--------1----1----1-"""4--+--+-.j..j.-4--------4---~I~ _:::::l~~~i=::."~~roi::;;~t-...p~~~~~~c--·~-----t--1--+--+--+-+--+-J 
-3.~~dB ~,~;.r--,..~~~ G(s)a= 12.5 1 
Uncompensated ~i....- ~ ..._ '"-..... "-= '-/ T = 0.004 
1---~1-----1r---+--+--+--+--+-+-+--- system G(s) : ''-~ """~ i'.... 
~---.>r:::::: ,, r,...... 'r,,,. 1-------1---1--+--+--+-+-+-+-+-- G(s) a= 2.46 T= 0.0106 "'-. "'-. , , : I ~K~<::~~ i 
1-----1----11---+--+--+--+-++-+-----t----r----1~11 G(s} a:. 5.82& --~c;;....:""rl--w--+-+""'~od--1 
: T=0.00588 ..,~ 'i'-. ~~~ 
: I I I I I "-'~ I -40L-----L---'--......L........L.........L...-L-...L...J.....L...---....L...-......L...-L.......:., ........ L.......i......i......i......&--------'-- ..................................... .........._, 
I 10 47 60 100 1000 
m(rad/sec) 
0 
-30 
I 
Lead network a = 2.46 
-60 
oo 
-90 
-120 
-150 / T=0.0106 
1----+--+---t---+---+-+-+-+-+----+---+---+-t <jl = 25° I I -~-i ----/ _[ 
,_i,..,,,..,. ~L------ Compensated system PM = 68.12° 
0 rr~--,.-+-........... _:~ - a= 12.5 PM= 62.4 ·--..... ---·· ·--i--. ~ r-i-""" ----r----r-~ T-O 004 a = 5.828 j 
r--~ ~ :t----._ r--r---:~ ---: . T = 0.00588 ; ~~ r-,..'"'.... .~ 'r1/-;;,,---,---;::=::::Ll........L...Jl.......1....l 
Compensatedsystem- ........., .... r--,...... r,,,t> PM =47.6° 1-
a=2.46 "' i.......t-.... ~v a=2.46 T= 0.0106 1 r,....,._ ,1. ~ "t,!< r'-.. T= 0.0106 
0 .. al -~~ , 1-----+-----1--t--+--t--+--t-t- ngm system I ....... ~ i..- ............._ ---.. 1' 
I'--. I> I., ........ r---.. ....... I'-,. !""-,. 
PM= 32° I* i,...."""~r-......_ I ---..t--. t-,...r-,,.1"-,.r-,.,-... 
-1801 I Ii I .. . .~ ---r----i--.t--_r-~:: 
10 47 60 100 1000 
t» (rad/sec) 
Figure 9-33 Bode diagram of the phase-lead compensation and uncompensated systems in 
2500( I + aTs) 
Example 9-5-1, G(s) = s(s + ZS}(s + Ts)" 
is 45c, at least I 7° more phase lead should be added to the loop at the gain­
crossover frequency. 
3. The phase-lead controller of Eq. (9-65) must provide the additional 17° at the gain­
crossover frequency of the compensated system. However, by applying the phase­
lead controller, the magnitude curve of the Bode plot is also affected in such a way 
that the gain-crossover frequency is shifted to a higher frequency. Although it is a 
9-5 Design with Phase-Lead Controller ~ 545 
simple matter to adjust the corner frequencies, 1/aTand 1/T, of the controller so 
that the maximum phase of the controller rf>m falls exactly at the new gain-crossover 
frequency, the original phase curve at this point is no longer 28° (and could be 
considerably less) because the phase of most control processes decreases with the 
increase in frequency. In fact, if the phase of the uncompensated process decreases 
rapidly with increasing frequency near the gain-crossover frequency, the single­
stage phase-lead controller will no longer be effective. 
In view of the difficulty estimating the necessary amount of phase lead, it is 
essential to include some safety margin to account for the inevitable phase drop­
off. Therefore. in the present case, instead of selecting a <l>m of a mere 17°, let q,111 
be 25°. Using Eq. (9-72), we have 
a= 1 + s~n25° = 2.46 1 -sm25° (9-86) 
4. To detennine the proper location of the two corner frequencies ( 1 / aT and I /T) of 
the controller, it is known from Eq. (9-67) that the maximum phase lead r/Jm occurs 
at the geometric mean of the two corner frequencies. To achieve the maximum 
phase margin with the value of a determined, <Pm should occur at the new gain­
crossover frequency a>~~ which is not known. The following steps are taken to 
ensure that <Pm occurs at a>~. 
a. The high-frequency gain of the phase-lead controller of Eq. (9-65) is 
20 log10 a = 20 log10 2.46 = 7 .82 dB (9-87) 
b. The geometric mean a>m of the two corner frequencies, 1 / aT and 1 /T, should 
be located at the frequency at which the magnitude of the uncompensated 
process transfer function Gp(jw) in dB is equal to the negative value in dB of 
one-half of this gain. This way, the magnitude curve of the compensated 
transfer function will pass through the 0-dB-axis at w = w,,,. Thus, Wm should 
be located at the frequency where 
\Gp(jw)\dB= -10log102.46 = -3.91 dB (9-88) 
Toolbox 9-5-4 
Bode diagram for Fig. 9-33 is obtained by the following sequence of MATLAB functions 
a = [ 2 . 46 12 • 5 5 . 8 2 8 J ; 
T= [0.0106 0.004 0.00588]; 
for i = 1: length(T) 
end num = [2500*a(i)*T(i) 2500]; 
den =(T(i) 1+25*T(i) 25 OJ; 
bode(num,den); 
hold on; 
% axis( [110000 -180 -90]); 
grid 
546 ~ Chapter 9. Design of Control Systems 
Toolbox 9-5-5 
Plot of G(s) for Fig. 9-34 is obtained by the following sequence of MATLAB functions 
a = [ 2 . 46 12 . 5 5 . 8 2 8] ; 
T= [0.0106 0.004 0.00588); 
for i = 1: length CT) 
end nurn = [ 2500-l'a(i) *T(i) 2500] ; 
den =[T(i) 1+25*T(i) 25 OJ; 
t = tf(num, den) 
nichols(t); ngridi 
hold on; 
From Fig. 9-33, this frequency is found to be Wm = 60 rad/sec. Now using Eq. (9-67), 
we have 
1 T = vawm = 'V2A6 x 60 = 94.1 rad/sec (9-89) 
Then, I/aT = 94.1/2.46 = 38.21 rad/sec. The transfer function of the phase-lead 
controller is 
Gc(s) =as+ 1/aT = 2.46 s + 38.21 
s + l /T s + 94.1 
The forward-path transfer function of the compensated system is 
6150(s + 38.21) 
G(s) = Gc(s)G p(s) = s(s + 25)(s + 94. I) (9-90) 
(9-91) 
Fig. 9-33 shows that the phase margin of the compensated system is actually 47.6°. 
In Fig. 9-34, the magnitude and phase of the original and the compensated systems are 
plotted on the Nichols chart for display only. These plots can be made by tal<lng the data 
directly from the Bode plots of Fig. 9-33. The values of M,, w,, and BW can all be 
determined from the Nichols chart. However, the performance data are more easily 
obtained with ACSYS. 
Checking the time-domain performance of the compensated system, we have the 
following results: 
Maximum overshoot = 22.3% t,. = 0.02045 sec t.~ = 0.07439 sec 
which fall short of the time-domain specifications listed earlier. Fig. 9-33 also shows the 
Bode plot of the system compensated with a phase-lead controller with a= 5.828 and 
T = 0.00588. The phase margin is improved to 62.4°. Using Eq. (9-71), we can show that 
the result of a = 12.5 obtained in the time-domain design actually corresponds to 
¢m = 58.41. Adding this to the original phase of 28°, the corresponding phase margin 
would be 86.41 °. The time-domain and frequency-domain attributes of the system with the 
three phase-lead controllers are summarized in Table 9-13. The results show that, with 
i£' s 9-5 Design with Phase-Lead Controller 4' 547 
i 01--c:-~~~...-.,~~-'lc,---~--+--r--~--~--1--1---~~~~~7',f--...-f--~~ 
·~ 
i 
M =0,707 
-10 1-----1-----+-=::::===t=--- M = 0,500 
I 
G(s) ll = 2.46 T = 0.0106 
G(s) a= 5,828 T= 0.00588 rad/sec 
-40..._ __ ___. ___ __._ ___ __,_ ___ __,_..___,..._.__....._ ___ ...._ ___ ...._ __ __, 
-270.0 -247.5 -225.0 -202.5 -180.0 -157.5 -135.0 -112.5 
Phase (deg) 
Figure 9-34 Plots of G(s) in the Nichols chart for the system in Example 9-5-1. 
G(s) = 2500(1 + aTs) . 
s(s + 25)(1 + Ts) 
TABLE 9-13 Attributes of System with Phase-Lead Controller in Example 9-5-1 
PM Gain CO BW Maximum 
{I T (deg) M1· (rad/sec) (rad/sec) Overshoot (%) 
1 l 28.03 2.06 47.0 74.3 44.4 
2.46 0.0106 47.53 1.26 60.2 98.2 22.3 
5.828 0.00588 62.36 1.03 79.1 124.7 7.7 
12.5 0.0040 68.12 1.00 113.1 172.5 1.1 t,. 
(sec) 
0.0255 
0.0204 
0.0169 
0.0135 -90.0 
t,\ 
(sec) 
0.2133 
0.0744 
0.0474 
0.0174 
548 > Chapter 9. Design of Control Systems 
a= 12.5 and T = 0.004, even the projected phase margin is 86.41 °; the actual value is 
68.12 due to the fall-off of the phase curve at the new gain crossover. 
-EXAMPLE 9-5-2 In this example we illustrate the application of a phase-lead controller to a third-order system with 
relatively high loop gain. 
Let us consider that the inductance of the de motor of the sun-seeker system described in Fig. 
9-29 is not zero. The following set of system parameters is given: 
RF = 10, 000 f! Kb = 0.0125 V/rad/sec 
Ra= 6.250 K; = 0.012SN-m/A 
J = 1 o-6 kg-m2 Ks = 0.3 A/rad 
K = to be determined 
n= 800 B=O 
La= 10-3H 
The transfer function of the de motor is written 
.O,,i(s) Ki 
Ea(s) = s(LaJs2 + JRas + K;Kb) 
The forward-path transfer function of the system is 
G ( ) _ E>o(s) _ KsRpKKt 
pS ---- 2 A(s) s(Lc,ls + JRas + K,K1,} 
Substituting the values of the system parameters in Eq. (9-92), we get 
G (s) _ 8o(s) _ 4.6875 x 107 K 
P -A(s) -s(s2 + 625s + 156,250) 
You may use ACSYS to solve this problem. 
Time-Domain Design 
The time-domain specifications of the system are given as follows: (9-92) 
(9-93) 
(9-94) 
1. The steady-state error of a(t) due to a unit-ramp function input for B,.(t) should be 
:5 1 /300 rad/rad/sec of the final steady-state output velocity. 
2. The maximum overshoot of the step response should be less than 5 % or as small as 
possible. 
3. Rise time t,. s 0.004 sec. 
4. Settling time ts ::; 0.02 sec. 
The minimum value of the amplifier gain K is determined initially from the steady-state 
requirement. Applying the final-value theorem to a(t). we get 
liin a(t) = lim sA(s) = lim 1 •9;(•; ) 
t-+oo s-+O s--+O + p s 
Substituting Eq. (9-94) into Eq. (9-95), and @,.(s) = 1/s2, we have 
lim a(t) = -1-, -oo 300 K (9-95) 
(9-96) 
Thus, for the steady-state value of a(t) to be::; 1/300, Kmust be ~ 1. Let us set K == 1; the 
forward-path transfer function in Eq. (9-94) becomes 
G s _ 4.6875 x 107 
p( ) -s(s2 + 625s + 156,250) (9-97) 
9-5 Design with Phase-Lead Controller , 549 
We can show that the closed-loop sun-seeker system with K = 1 has the following 
attributes for the unit-step response. 
Maximum overshoot= 43% Rise time tr= 0.004 797 sec Settling time ts= 0.04587 sec 
To improve the system response, let us select the phase-lead controller described by Eq. 
(9-62). The forward-path transfer function of the compensated system is 
4.6875 x 107 K(l + aTs) 
G(s) = Gc(s)G p(s) = as(s2 + 625s + 156, 250)( 1 + Ts) (9-98) 
Now to satisfy the steady-state requirement. K must be readjusted so that K ~a.Let us set 
K = a. The characteristic equation of the phase-lead compensated system becomes 
(s3 + 625s2 + 156, 250s + 4.6875 x 107) + T.s2 (s2 + 625s + 156,250) 
+ 4.6875 x 107 aT.v = 0 (9-99) 
We can use the root-contour method to examine the effects of varying a and T of the phase­
lead controller. Let us first set a to zero. The characteristic equation ofEq. (9-99) becomes 
(s3 + 625s2 + 156,250s +4.6875 x 107) + Ts2(s2 +625s+ 156,250) = 0 (9-100) 
Dividing both sides of the last equation by the terms that do not contain T, we get 
Ts2(s2 + 625s+ 156,250) 1 + Geql (s) = 1 + s3 + 625s2 + 156, 250s + 4.6875 x 107 = O (9-101) 
The root contours of Eq. (9-100) when T varies are determined from the pole-zero 
configuration of Geq1(s) in Eq. (9-101) and are drawn as shown in Fig. 9-35. When a varies 
from Oto oo, we divide both sides of Eq. (9-99) by the terms that do not contain a, and we have 
4.6875 x I 07 aTs 1 + Geq2(s) = 1 + s3 + 625s2 + 156, 250s + 4.6875 x IQ7 + Ts2(s2 + 625s + 156,250) 
=0 
(9-102) 
For a given T, the root contours ofEq. (9-99) when a varies are obtained based on the poles 
and zeros of Geq2(s). The poles of Geq2(s) are the same as the roots of Eq. (9-100). Thus, the 
root contours when a varies start (a = 0) at the root contours for variable T. Fig. 9-34 shows 
the dominant portions of the root contours when a varies for T = 0.01, 0.0045, 0.001, 
0.0005, 0.0001, and 0.00001. Notice that, because the uncompensated system is lightly 
damped, for the phase-lead controller to be effective, the value of T should be very small. 
Even for very small values of T, there is only a small range of a that could bring increased 
damping, but the natural frequency of the system increases with the increase in a. The root 
contours in Fig. 9-35 show the approximate locations of the dominant characteristic 
equation roots where maximum damping occurs. Table 9-14 gives the roots of the 
characteristic equation and the unit-step-response attributes for the cases that correspond 
tu near-smallest maximum overshoot for the T selected. Fig. 9-36 shows the unit-step 
response when a = 500 and T = 0.00001. Although the maximum overshoot is only 3.8%, 
the undershoot in this case is greater than the overshoot. 
550 Chapter 9. Design of Control Systems 
o-r T=0.001 
-1000 -900 -800 -700 -600 .r-plane 
-500 --400 -300 -200 -100 0 jlOO 
T=0.08 
T=I 
T=:>0 
Figure 9-35 Root contours of sunftseeker system in Example 9-5-2 with phase-lead controller. 
1 +aTs Gc(s) =---. 1 + Ts 
Toolbox 9-5-6 
Step responses for Fig. 9-36 are obtained by the following sequence of MATLAB functions 
a= [SO 100 500]; 
T = [O. 0001 0. 00005 0. 00001]; 
for i = 1: length(T) 
end num = 4. 6875e7 * [a(i) *T(i) 1]; 
den== conv( [1625156250 OJ, [T(i) 1]); 
tf(num,den); 
[nurnCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on 
axis( [O O. 04 O 1. 2]) 
grid 
9-5 Design with Phase-Lead Controller • 551 
TABLE 9-14 Roots of Characteristic Equation and Time Response Attributes of System with 
Phase-Lead Controller in Example 9-5-2 
Maximum ,,. ti-
T a Roots of Characteristic Equation Overshoot (%) (sec) (sec) 
0.001 4 -189.6 -1181.6 -126.9 ± j439.S 21.7 0.0037 0.0184 
0.0005 9 -164.6 -2114.2 -173.1 ± j489.3 13.2 0.00345 0.0162 
0.0001 50 -147 -10024 -227 ± j517 5.4 0.00348 0.0150 
0.00005 100 -147 -20012 -233 ± j515 4.5 0.00353 0.0150 
0.00001 500 -146.3 -105 -238 ± j513.55 3.8 0.00357 0.0146 
Frequency-Domain Design 
The Bode plot of Gp(S) in Eq. (9-97) is shown in Fig. 9-37. The performance attributes of 
the uncompensated system are 
PM= 29.74° 
M,. = 2.156 
BW = 426.5 rad/sec 
We would like to show that the frequency-domain design procedure outlined earlier does 
not work effectively here, because the phase curve of Gp(jw) shown in Fig. 9.37 has a 
very steep slope near the gain crossover. For example, if we wish to realize a phase margin 
1.2 
a=50 I T=0.00011 A:a" 100 T=0.00005 
f \ I' ,.--a:=500 ~ I T=0.00001 
I I 0.8 
0.6 
0.4 
J j 0.2 
0.005 O.OI O.ot5 0.02 0.025 0.03 0.035 
Time (sec) 
Figure 9-36 Unit-step responses of sun-seeker system in Example 9-5-2 with phase-lead 
I +aTs controller. Gc(s) = -~T.-. 1 + s O.Q4 
552 ; · Chapter 9. Design of Control Systems 
~ 
~ 
~ "O B ;g_ 
E < 
"' Ct) 50 
0 
-50 
-100 
-150 
-200 
-250 10-l 101 -6dB 
I I 
I I I 
I I 
I I 
I I 
I I 
l I 
I I 
I I 
l I 
I I 
I I 
I I 
I I 
102 380 103 104 
m (rad/sec) 
~ -50i-------+----+----+---,t-+--+------+----I-----I 
8 
-150t------+----+-----+--+:-__,~ _ _;,_ __ ..;..;._~-'-'-'--+--'_;_;,.~"'--I 
-180t------;----+----+---,~..----t--~..::=--...=-----+------I 
-2001-----1----+------+-1--114--+---~-___:,,...,_ 
-250 _______ LG (jro) _ Uncompensated--+- .......... ---+----...-f--~--1 
system 
-300,___ __ __,__ ___ ....._ __ __._ ___ ......._ __ ___. ___ ....._ __ ___, 
10-1 10° 101 102 103 104 105 106 
m (rad/sec) 
Figure 9-37 Bode plots of phase-lead controller and forward-path transfer function of 
. l+aTh sun-seeker system m Example 9-5-2. Gc(s) = -1--. +Ts 
of 65°, we need at least 65 -29.74 = 35.26° of phase lead. Or, <Pm= 35.26°. Using Eq. 
(9-72), the value of a is calculated to be 
a= 1 + sin 'Pm = 1 + sin 35.26° = 3_732 1 -sin 'Pm 1 -sin 35.26° (9-103) 
9~5 Design with Phase~Lead Controller -· S53 
Toolbox 9-5-7 
Bode plots shown in Fig. 9-37 are obtained by the following sequence of MATLAB functions 
a= [100 500]; 
T-= [O. 00005 0. 00001]; 
for i -= 1: length(T) 
end num == [a(i)*T(i) lJ; 
den== [T(i) 1] ; 
bode(num,den); 
hold on; 
for i = 1: length(T) 
end num = 4. 6875e7 * [a(i)":T(i) 1]; 
den= conv( [1625156250 OJ, (T(i) l]); 
bode(num,den); 
hold on; 
axis( [1 le6 -300 90]); 
grid 
Let us choose a= 4. Theoretically, to maximize the utilization of fPm, Wm should be placed 
at the new gain crossover, which is located at the frequency where the magnitude of GpUw) 
is -10 log10a dB = -10 log104 = -6 dB. From the Bode plot in Fig. 9-37, this frequency 
is found to be 380 rad/sec. Thus, we let Wm = 380 rad/sec. The value of Tis found by using 
Eq. (9-67): 
1 1 T=--=--=0.0013 
Wm,Ja 38Qy'4 
However, checking the frequency response of the phase~lead compensated system with 
a= 4 and T = 0.0013, we found that the phase margin is only improved to 38.27°, and 
M, = 1.69. The reason is the steep negative slope of the phase curve of Gp(iw). The fact is 
that~ at the new gain-crossover frequency of 380 rad/sec, the phase of Gp(iw) is -170°. as 
against -150.26° at the original gain crossover-a drop of almost 20° ! From the time­
domain design, the first line in Table 9-14 shows that, when a= 4 and T = 0.001, the 
maximum overshoot is 21.7%. 
Checking the frequency response of the phase-lead compensated system with a = 500 
and T = 0.0000 I , the following performance data are obtained: 
PM = 60.55 degrees M,. = I B W = 664.2 rad/sec 
This shows that the value of a has to be increased substantially just to overcome the steep 
drop of the phase characteristics when the gain crossover is moved upward. 
Fig. 9-37 shows the Bode plots of the phase-lead controller and the forward-path 
transfer functions of the compensated system with a= 100, T = 0.0005 and 
a= 500, T = 0.00001. A summary of performance data is given in Table 9~15. 
554, Chapter 9. Design of Control Systems 
TABLE 9-15 Attributes of System with Phase-Lead Controller in Example 9-5-2 
PM GM BW Maximum t, t,. 
T (l (deg) (dB) M,. (rad/sec) Overshoot ( % ) (sec) (sec) 
I I 29.74 6.39 2.16 430.4 43.0 0.00478 0.0459 
0.00005 100 59.61 31.41 1.009 670.6 4.5 0.00353 0,015 
0.00001 500 60.55 45.21 1.000 664.2 3.8 0.00357 0.0146 
Selecting a = I 00 and T = 0.00005, the phase-lead controller is described by the 
transfer function 
G 1 1 + aTs 1 1 + 0.005s 
c(s) = a I + n· = JOO I + 0.00005s (9-105) 
Using Eqs. (9-63) and (9-64), and letting C;;;: 0.01 µ,F, the circuit parameters of the phase­
lead controller are found to be 
R = T = 5 x rn-s = sooon 
2 C 10-s (9-106) 
Rt= aR2 = 500,000!l (9-107) 
The forward-path transfer function of the compensated system is 
0,,(s) 4.6875 x 107 (1 + 0.005s) 
A(s) = s(s2 + 625s + 1561250)(1 + 0.00005s) (9-108) 
where the amplifier gain K has been set to I 00 to satisfy the steady-state requirement. 
From the results of the last two illustrative examples, we can summarize the effects 
and limitations of the single-stage phase-lead controller as follows. 
9-5-3 Effects of Phase-Lead Compensation 
1. The phase-lead controller adds a zero and a pole, with the zero to the right of the 
pole, to the forward-path transfer function. The general effect is to add more 
damping to the closed-loop system. The rise time and settling time are reduced in 
general. 
2. The phase of the forward~path transfer function in the vicinity of the gain­
crossover frequency is increased. This improves the phase margin of the closed­
loop system. 
3. The slope of the magnitude curve of the Bode plot of the forward-path transfer 
function is reduced at the gain-crossover frequency. This usually corresponds to 
an improvement in the relative stability of the system in the form of improved gain 
and phase margins. 
4. The bandwidth of the closed-loop system is increased. This corresponds to faster 
time response. 
5. The steady-state error of the system is not affected. 
9-5 Design with Phase-Lead Controller '-i 555 
9-5-4 Limitations of Single-Stage Phase-Lead Control 
In general, phase-lead control is not suitable for all systems. Successful application of 
single~stage phase-lead compensation to improve the stability of a control system is hinged 
on the following conditions: 
1. Bandwidth considerations: If the original system is unstable or with a low stability 
margin, the additional phase lead required to realize a certain desired phase 
margin may be exce.c;sive. This may require a relatively large value of a for the 
controller, which, as a result, wilI give rise to a large bandwidth for the 
compensated system, and the transmission of high-frequency noise entering 
the system at the input may become objectionable. However, if the noise enters 
the system near the output, then the increased bandwidth may be beneficial to 
noise rejection. The larger bandwidth also has the advantage of robustness; that is, 
the system is insensitive to parameter variations and noise rejection as described 
before. 
2. If the original system is unstable, or with low stability margin, the phase curve of the 
Bode plot of the forward~path transfer function has a steep negative slope near the 
gain-crossover frequency. Under this condition, the single~stage phase-lead con~ 
troller may not be effective because the additional phase lead at the new gain 
crossover is added to a much smaller phase angle than that at the old gain crossover. 
The desired phase margin can be realized only by using a very large value of a for 
the controller. The amplifier gain K must be set to compensate a, so a large value for 
a requires a high-gain amplifier, which could be costly. 
As shown in Example 9-5-2, the compensated system may have a larger 
undershoot than overshoot. Often, a portion of the phase curve may still dip below 
the 180° -axis, resulting in a conditionally stable system, even though the desired 
phase margin is satisfied. 
3. The maximum phase lead available from a single~stage phase-lead controller is 
less than 90°. Thus, if a phase lead of more than 90° is required, a multistage 
controller should be used. 
9-5-5 Multistage Phase-Lead Controller 
When the design with a phase-lead controller requires an additional phase of more than 
90°, a multistage controller should be used. Fig. 9.-38 shows an op-amp-circuit 
C 
C C C 
Figure 9-38 1\vo­
stage phase-lead 
(phase-lag) 
controller. 
556 tt= Chapter 9. Design of Control Systems 
realization of a two-stage phase-lead controller. The input-output transfer function of 
the circuit is 
(9-109) 
or 
(9-110) 
where a1 = Ri/R2, a2 = R3/R4, T1 = R2C, and T2 = R4C. 
The design of a multistage phase-lead controller in the time domain becomes more 
cumbersome, since now there are more poles and zeros to be placed. The root-contour 
method also becomes impractical, since there are more variable parameters. The fre­
quency-domain design in this case does represent a better choice of the design method. For 
example, for a two-stage controller, we can choose the parameters of the first stage of a 
two-stage controller so that a portion of the phase margin requirement is satisfied, and then 
the second stage fulfills the remaining requirement. In general, there is no reason why the 
two stages cannot be identical. The following example illustrates the design of a system 
with a two-stage phase-lead controller. 
~ EXAMPLE 9-5-3 For the sun-seeker system designed in Example 9-5-2, let us alter the rise time and settling time 
requirements to be 
Toolbox 9.5 .. s Risetimetr $ 0.001 sec 
Settling time ts :5 0.005 sec 
The other requirements are not altered. One way to meet faster rise time and settling time requirements 
is to increase the foiward-path gain of the system. Let us consider that the forward-path transfer 
function is 
G s _ ®0(s) _ 156,250,000 
p( ) -A(s) -s(s2 + 625s + 156,250) (9-111) 
Another way of interpreting the change in the forward-path gain is that the ramp-error constant is 
increased to 1000 (up from 300 in Example 9-5-1). The Bode plot of Gµ(s) is shown in Fig. 9-39. The 
closed-loop system is unstable. with a phase margin of -15.43°. ~ 
Bode plots shown in Fig. 9-39 are obtained by the following sequence of MATLAB junctions 
nu.m-156250000 * [O. 0087 l]; 
den= conv( [O .000087 l], [1625156250]); 
bode(num,den); 
,r. 
Gl 
I!:! f 0 9-5 Design with Phase-Lead Controller ~ 557 
80 1, 
60 
40 
20 
-40 
-60 
-80 
-100 1 10-I' "r-"'~~ 
........... i',. 
... I"-,~!', 
~ 
-........... 
r-..... r,.~ 
~~~ .......__ 
' -.... ~ ~ 
~ ~ I", ~to,~ 
I\ ~ r-.... •, :, 1" r,."' 
~~~ I II\ [\ (i~ I I ~~ 
I ~ I ~ I i\,.I 
I n\ I ~ "I~ I ~i,, 
IA}, I I I'~ 
"j\ {I) U ncompensate d : N. I ~ 
system I I j\ll !)I~ I', 
I I I I 
I l I 
~ ~ 
I I I i\ I I I I ' t 1 I I ' \ l I I I 
I l l l I\. ~ 
l . \ ' I J I I ' J I I I ~ 
I I I I 
~ ' I II ~ 
102 
m (rad/sec) 
O.---.--.--r-r~~-r-TTT-m--~~l\~\\~l\\\-.--\~\l~~J\~\\\\.-----r-\~:\~\~\~\\l\~\l~TT"TM 
(3) With G (s) = ( 1 + 0.0087s)( I + 0.002778s) 
c (I+ 0.000087s)(I + 0.00002778s) 
-50 l---+-+-+-l-l1+1+1---+-1--1--H1+1+4---+--+--1--H-+H·l!._-!--~j~f-L~H+I G(s) = G (s)G (s) ----ili--t---+-iH-+-llt-f ,r "J C /I I 
-100 
-150 
-180 
-200 1"11..., ,4) With G (s) = (1 -t-0,003872.)Y 
~ ~i-i' C (I+ 0.0000484s}2 
'r\ : ~~ 1: I I I l l 
K!)Uncompensa~; ~ i'I t rr-;;;; KPMU9!3tl 
system I \ 1 PM = 80° 
11 111 1 1 , 1 r I I\. -I'.,, 1 , 1 1~ ~~ 
(Z) With G (s)= (\ +O.OOS7s)" 1 11~ \, 
c (1 + 0.000087s) \ J PM'.1;~ \~~-20.360 '",, , J..--+-+-++-H+H----1-+-+-lr+Hl+t--t--t-+-tt++tt--+-I·- . mir·; 'I, 
\PM= -15.43~ 
~ 
~I'll'\ \"' ~~ 
-2SQ1----1--1--1-1-+++H-----1--+.......,H+1++-~~'--1-++++1+-~+--1-++HH+l-"-.-...,.~+,-......-+--+-++ttt1--+r'-..-i'o~~~~~+~H+-1: 
:,,.. r-, -, , Tiir"""-+"""T-,1,,,,.1-:~ 
-300,_,_1___.___._ ................... .....,,..___.__.. ................... ........,.t~.._........._ ........ ........,,~,--...................................... ~~__..._.._ ................ ......,...__.__._ ......... ~s 
IO- 10° IO 10'" IO" lff' to· 
OJ (rad/sec) 
figure 9-39 Bode plots of uncompensated and compensated sun-seeker systems in Example 9-5-2 
. 156,250,000 
with two-state phase-lead controller. G,,(s) = s(sl + 625s + 156. ZSO)" 
558 r-, Chapter 9. Design of Control Systems 
hold on; 
num = 156250000 * conv( [O. 0087 1], [O. 002778 1]); 
den =conv(conv( [O. 000087 l], (0. 00002778 1]), [1625156250 O]); 
bode(nwn,den); 
hold on; 
num = 156250000 ,., conv( [ 0. 0038 72 1] , (0. 0038 72 1]); 
den =conv(conv( [O. 0000484 1], [O. 0000484 1]), [l 625 156250 O]); 
bode(num,den); 
axis( [11e5 -300 20]); 
grid 
Because the compensated system in Example 9-5-2 had a phase margin of 60.55°, we 
would expect that, to satisfy the more stringent time response requirements in this example, 
the corresponding phase margin would have to be greater. Apparently, this increased phase 
margin cannot be realized with a single-stage phase-lead controller. It appears that a two­
stage controller would be adequate. 
The design involves some trial-and-error steps in arriving at a satisfied controller. 
Because we have two stages of controllers at our disposal, the design has a multitude of 
Hexibility. We can set out by arbitrarily setting a1 = 100 for the first stage of the phase-lead 
controller. The phase lead provided by the controller is obtained from Eq. (9-71 ), 
. l (a 1 -1) . 1 ( 99 ) 0 <Pm= sm-ai + 1 = sm-101 = 78.58 (9-112) 
To maximize the effect of </Jm, the new gain crossover should be at 
(9-113) 
From Fig. 9-39 the frequency that corresponds to this gain on the amplitude curve is 
approximately 1150 rad/sec. Substituting wm1 = l 150rad/sec and a1 = 100 in Eq. (9-67), 
we get 
1 1 Ti = = = 0.000087 
Wml J"iii l 150v'Ioo (9-114) 
The forward-path transfer function with the one-stage phase-lead controller is 
G s _ 156, 250, 000( I + 0.0087 s) 
( ) -s(s2 + 625s + 156, 250)(1 + 0.000087s) (9-115) 
The Bode plot of the last equation is drawn as curve (2) in Fig. 9-39. We see that the phase 
margin of the interim design is only 20.36°. Next, we arbitrarily set the value of a2 of the 
second stage at 100. From the Bode plot of the transfer function ofEq. (9-115) in Fig. 9-39, 
we find that the frequency at which the magnitude of G(jw) is -20 dB is approximately 
3600 rad/sec. Thus, 
1 1 
T2 = ../iii. = . 11M = 0.00002778 
Wm2 a2 3600v 100 (9-116) 
Toolbox 9-5-9 9-5 Design with Phase-Lead Controller ·"i 559 
TABLE 9-16 Attributes of Sun-Seeker System in Example 9-5-3 with Two-Stage 
Phase-Lead Controller 
PM BW Maximum tr ts 
a,= a2 Ti T2 (deg) Mr (rad/sec) Overshoot (%) (sec) (sec) 
80 0.0000484 0.0000484 80 5686 0 0.00095 0.00475 
100 0.000087 0.0000278 69.34 5686 0 0.000597 0.00404 
70 0.0001117 0.000039 66.13 5198 0 0.00063 0.00404 
The forward-path transfer function of the sun-seeker system with the two-stage phase-lead 
controller is (al = a2 = 100) 
156,250, 000(1 + 0.0087s)(l + 0.002778s) 
G(s) = s(s2 + 625s + 156, 250)( 1 + 0.000087s)( I + 0.00002778s) 
Fig. 9-39 shows the Bode plot of the sun-seeker system with the two-stage phase-lead 
controller designed above [curve (3)). As seen from Fig. 9-39, the phase margin of the 
system with G(s) given in Eq. (9-117) is 69.34°. As shown by the system attributes in 
Table 9-16, the system satisfies all the time-domain specifications. In fact. the selection 
of a1 = a2 = 100 appears to be overly stringent. To show that the design is not critical, 
we can select a1 = a2 = 80. and then 70 and the time-domain specifications are still 
satisfied. Following similar design steps, we arrived at Ti = 0.0001117 and T2 = 
0.000039 for a1 = a2 = 70. and T1 = T2 = 0.0000484 for a1 = a2 = 80. Curve (4) of 
Fig. 9-39 shows the Bode plot of the compensated system with a1 = a2 = 80. Table 
9-16 summarizes all the attributes of the system performance with these three 
controllers. 
The unit-step responses of the system with the two-stage phase-lead controller for 
a1 = a2 = 80 and 100 are shown in Fig. 9-40. 
Fig. 9~40 is obtained by the following sequence of MATI.AB functions 
num = 156250000 * conv( (100*0. 000087 1], [80*0. 00002778 1]); 
den =conv(conv( [O. 000087 1], [O. 00002778 1]), [l 625 156250 OJ); 
[numCL,denCLJ=cloop(num,den); 
step(numCL,denCL) 
hold on 
num = 156250000 * conv( [80*0 .00004841), [80*0. 0000484 1]); 
den =conv(conv( [O. 0000484 1], [O. 0000484 1]), [1625156250 OJ); 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
g:rid 
9-5-6 Sensitivity Considerations 
The sensitivity function defined in Section 8-16, Eq. (8-122), can be used as a design 
specification to indicate the robustness of the system. [n Eq. (9-122), the sensitivity of the 
560 1111-Ch apter 9. Design of Control Systems 
s 
q:,'.: 0.9 
0.8 
0.7 
0.6 
0.5 
0.4 
0.3 
0.2 
0.1 
0 
0 l - I T-----. a1 =a-,= 100 I I 1 
T1 = 0.000087 T2 = 0.00002778 ~ a1 =a:= 80 T1 = T2 = 0.0000484 
0.005 0.01 0.015 0.02 0.025 0,03 0.035 0.04 
Time (sec) 
Figure 9-40 Unit-step responses of sun-seeker system in Example 9-5-2 with two-stage phase-lead 
11 G ( ) (1 + a1 Tis) (1 + a2T2s) ( ) 1561 250,000 contro er. c· s = 1 + Tis 1 + T2s Gp s = s(s2 + 625s + 156,250) · 
closed-loop transfer function with respect to the variations of the forwardwpath transfer 
function is defined as 
SM 8M(s)/M(s) G-1 (s) 1 
G (s) = 8G(s)/G(s) = I + G-1 (s) = I + G(s) (9-118) 
The plot of IS~ ( jw) I versus frequency gives an indication of the sensitivity of the system 
as a function of frequency. The ideal robust situation is for ISM(jw)] to assume a small 
value ( « I) over a wide range of frequencies. As an example, the sensitivity function of 
the sun-seeker system designed in Example 9-5-2 with the one-stage phase-lead controller 
with a= 100 and T = 0.00005 is plotted as shown in Fig. 9-41. Note that the sensitivity 
function is low at low frequencies and is less than unity for w < 400rad/sec. Although the 
sun-seeker system in Example 9-5-2 does not need a multistage phase-lead controller. we 
shall show that, if a two-stage pha'ie-1ead controller is used, not only the value of a will be 
substantially reduced, resulting in lower gains for the op-amps, but the system will be more 
robust. Following the design procedure outlined in Example 9-5-3, a two-stage phase-Jead 
controller is designed for the sun-seeker system with the process transfer function 
described by Eq. (9-96). 
2.00 
0 
0.l ----9-6 Design with Phase-Lag Controller • 561 
Two-stage phase-lead control . / 
'" IV 
J ~i',,.' 
Onewstage phase-lead control ..._ J j ......_"'....._ 
j'lt,,,, ' 
.,,~1.1 ~' ~.,,,, 
-i::::;.-
10 100 
w (rad/sec) 
Figure 9-41 Sensitivity functions of sun-seeker system in Example 9-5-2. 
The parameters of the controller are a1 = a2 = 5.83 and Ti = T2 = 0.000673. The 
forward-path transfer function of the compensated system is 
Gs _ 4.6875 X 107(1 + 0.0039236s)2 
( ) -s(s2 + 625s + 156, 250)(1 + 0.000673s)2 (9-119) 
Fig. 9-41 shows that the sensitivity function of the system with the two-stage phase-lead 
controller is less than unity for w < 600 rad/sec. Thus, the system with the two-stage phase-lead 
controller is more robust than the system with the single-stage controller. The reason for this is 
that the more robust system has a higher bandwidth. In general, systems with phase-lead 
control will be more robust due to the higher bandwidth. However, Fig. 9-41 shows that the 
system with the two-stage phase-lead controller has a higher sensitivity at high frequencies. 
,... 9-6 DESIGN WITH PHASE-LAG CONTROLLER 
The transfer function in Eq. (9-62) represents a phase-lag controller or low-pass filter when 
a< 1. The transfer function is repeated as follows. 
G,.(s) = !(1 + aTs) a< 1 
a l+T.i 
9-6-1 Time-Domain Interpretation and Design of Phase-Lag Control (9-120) 
The pole-zero configuration of Gc(s) is shown in Fig. 9-42. Unlike the PI controller, which 
provides a pole at s = 0, the phase-lag controller affects the steady-state error only in the 
I 
-aT j(J) 
C1 
Figure 9-42 Pole-zero 
configuration of phase-lag 
contro Iler. 
562 !Er· Chapter 9. Design of Control Systems 
sense that the zero-frequency gain of Gc(s) is greater than unity. Thus, any error constant 
that is finite and nonzero wi11 be increased by the factor Ua from the phase-lag controller. 
Because the pole at s = -1 /T is to the right of the zero at -1 / aT, effective use of the 
phase-lag controller to improve damping would have to follow the same design principle of the 
PI control presented in Section 9-3. Thus, the proper way of applying the phase-lag control is to 
place the pole and zero close together. For type O and type 1 systems, the combination should 
be located near the origin in the s-plane. Fig. 9-43 illustrates the design strategies in the s-plane 
for type O and type 1 systems. Phase-lag control should not be applied to a type 2 system. 
s-plane 
(a) Type O S)'stem 
s-plane X-P1 /' Poles of controlled 
process 
(b) Type O system 
s-plane X-P1 
! 
Poles of controlled 
process 
(c) Type l system X-fi"1 jru 
jm 
0 
jw 
Figure 9-43 Design 
strategies for phase-lag 
control for type O and type l 
systems. 
9-6 Design with Phase-Lag Controller 41 S63 
The design principle described above can be explained by considering that the 
controlled process of a type O control system is 
K G (s)=-------P (s + PI )(s + pi)(s + p3) (9-121) 
where p1 and p1 are complex-conjugate poles, such as the situation shown in Fig. 9-43. 
Just as in the case of the phase-lead controller, we can drop the gain factor 1 / a in Eq. 
(9-121), because whatever the value of a is, the value of K can be adjusted to compensate 
for it. Applying the phase-lag controller of (9-121), without the factor 1/a, to the system, 
the forward-path transfer function becomes 
G(s) = Gt·(s)G (s) = K(l + aTs) (a< 1) 
P (s + Pl )(s + pi) (s + p3)(l + Ts) (9-122) 
Let us assume that the value of K is set to meet the steady-state-error requirement. Also 
assume that, with the selected value of K, the system damping is low or even unstable. Now 
let 1 /T ~ I/ aT, and place the pole-zero pair near the pole at -1 / p3, as shown in Fig. 9-43. 
Fig. 9-44 shows the root loci of the system with and without the phase-lag controller. 
Because the pole-zero combination of the controller is very close to the pole at - l / p3, the 
shape of the loci of the dominant roots with and without the phase-lag control will be very 
similar. This is easily explained by writing Eq. (9-122) as 
G(s) = Ka(s + 1/aT) 
(s + Pt )(s + Pi )(s + p3)(s + 1/T) 
Ka (9-123) 
= (s + pi)(s + iJi)(s + p3) 
Because a is less than I, the application of phase-lag control is equivalent to reducing the 
forward-path gain from K to Ka, while not affecting the steady-state peiformance of the 
system. Fig. 9-44 shows that the value of a can be chosen so that the damping of the 
compensated system is satisfactory. Apparently, the amount of damping that can be added 
is limited if the poles -P1 and -Jii are very close to the imaginary axis. Thus, we can select 
a using the following equation: 
K to realize the desired damping a=--------------K to realize the steady-state performance (9-124) 
The value of T should be so chosen that the pole and zero of the controller are very close 
together and close to -1 J p3. 
In the time domain, phase-lag control generally has the effect of increasing the rise 
time and settling time. 
9-6-2 frequency-Domain Interpretation and Design of Phase-Lag Control 
The transfer function of the phase-lag controller can again be written as 
G ( ) = I + a Ts ( 1) cs I+ Ts a< (9-125) 
by assuming that the gain factor -l / a is eventually absorbed by the forward gain K. The 
Bode diagram of Eq. (9-125) is shown in Fig. 9-45. The magnitude curve has corner 
frequencies at w = I/ aT and l/T. Because the transfer functions of the phase-lead and 
564 f · Chapter 9. Design of Control Systems 
jro 
s-plane 
Uncompensated ·~\ 
K=O 
K=O 
0 O' 
K=O 
Figure 9-44 Root loci of uncompensated and phase-lag-compensated systems. 
phase-lag controllers are identical in form, except for the value of a, the maximum phase 
lag <l>m of the phase curve of Fig. 9-45 is given by 
. -1 (a -1) <Pm= sm --a+ I (a< I) (9-126) 
00 iU 
~ 
'§' 
:=:, 
t::,"' 
',j 90 
() 
-90 I r 
I r 9·6 Design with Phase-Lag Controller 565 
Win 
w (rad/sec) 1 
aT 
I 
aT ' LI +jOJaT 
(1 + aTs) Figure 9-45 Bode diagram of the phase-lag controller. Gc(s) = { 1 + Ts) a< J. 
Fig. 9-45 shows that the phase-lag controller essentially provides an attenuation of 20 
log10 a at high frequencies. Thus, unlike the phase-lead control that utilizes the maximum 
phase lead of the controller, phase-lag control utilizes the attenuation of the control1er at 
high frequencies. This is parallel to the situation of introducing an attenuation of a to the 
forward-path gain in the root-locus design. For phase-lead control, the objective of the 
controller is to increase the phase of the open-loop system in the vicinity of the gain 
crossover while attempting to locate the maximum phase lead at the new gain crossover. In 
phase-lag control, the objective is to move the gain crossover to a lower frequency where 
the desired phase margin is realized, while keeping the phase curve of the Bode plot 
relatively unchanged at the new gain crossover. 
The design procedure for phase-lag control using the Bode plot is outlined as follows: 
1. The Bode plot of the forward .. path transfer function of the uncompensated system 
is drawn. The forward-path gain K is set according to the steady-state performance 
requirement. 
2. The phase and gain margins of the uncompensated system are determined from 
the Bode plot. 
3. Assuming that the phase margin is to be increased, the frequency at which the 
desired phase margin is obtained is located on the Bode plot. This frequency is 
also the new gain crossover frequency w~, where the compensated magnitude 
curve crosses the 0-dB-axis. 
4. To bring the magnitude curve down to O dB at the new gain-crossover frequency 
w~r:' the phase-lag controller must provide the amount of attenuation equal to the 
value of the magnitude curve at c:v~. In other words, 
(9-127) 
566 ~ Chapter 9. Design of Control Systems 
Solving for a from the last equation, we get 
(9-128) 
Once the value of a is determined, it is necessary only to select the proper value of T to 
complete the design. Using the phase characteristics shown in Fig. 9-45, if the corner 
frequency 1/aT is placed far below the new gain-crossover frequency w~. the phase lag of 
the controller will not appreciably affect the phase of the compensated system near w~. 
On the other hand, the value of llaT should not be too small because the bandwidth of 
the system will be too low, causing the system to be too sluggish and less robust. Usually, 
as a general guideline, the frequency 1 laT should be approximately one decade below 
w~; that is, 
Then, 1 ul -=Jrad/sec aT 10 
1 aw' -=_grad/sec T 10 (9-129) 
(9-130) 
S. The Bode plot of the compensated system is investigated to see if the phase margin 
requirement is met; if not, the values of a and Tare readjusted, and the procedure is 
repeated. If design specifications involve gain margin, Mr, or BW, then these 
values should be checked and satisfied. 
Because the phase-lag control brings in more attenuation to a system, then if the design 
is proper, the stability margins will be improved but at the expense oflower bandwidth. The 
only benefit of lower bandwidth is reduced sensitivity to high-frequency noise and 
disturbances. 
The following example illustrates the design of the phase-lag controller and all its 
ramifications. 
~ EXAMPLE 9-6-1 In this example, we shall use the second-order sun-seeker system described in Example 9-5-1 to 
illustrate the principle of design of phase-lag control. The forward-path transfer function of the 
uncompensated system is 
G s _ 00(s) _ 2500K 
P ( ) -A ( s) -s( s + 25) 
You may use ACSYS to solve this problem. 
Time-Domain Design 
The time-domain specifications of the system are as follows: (9-131) 
1. The steady-state error of a(t) due to a unit-ramp function input for 8r(t) should 
be~ 1%. 
2. The maximum overshoot of the step response should be less than 5 % or as small as 
possible. 
3. Rise time tr:::; 0.5 sec. 
9-6 Design with Phase-Lag Controller _. 567 
jOJ 
s-plane 
j48.4 
j12.5 
K=O 
a a 
~ ~ 
' i 8 8 
(a) Uncompensated system (b) Phase .. Jag-compensated system 
Figure 9-46 Root loci of sun-seeker system in Example 9-6-1. 
2500K 1 +aTs 
Gp(s) = s(s + 25) Gc(s) == 1 + Ts a= 0.125 T = 100. 
4. Settling time t8 s 0.5 sec. 
5. Due to noise problems, the bandwidth of the system must be < 50 rad/sec. 
Notice that the rise-time and settling-time requirements have been relaxed considerably 
from the phase-lead design in Example 9-5-1. The root loci of the uncompensated system 
are shown in Fig. 9-46(a). 
As in Example 9-5-1, we set K = 1 initially. The damping ratio of the uncompensated 
system is 0.25, and the maximum overshoot is 44.4%. Fig. 9-47 shows the unit-step 
response of the system with K = 1. 
Let us select the phase-lag controller with the transfer function given in Eq. (9-121). 
The forward-path transfer function of the compensated system is 
G(s) = G (s)G (s) = 2500K(s + 1/aT) 
c P s(s + 25)(s + 1/T) (9-132) 
If the value of K is maintained at 1, the steady-state error will be a percent, which is 
better than that of the uncompensated system, since a< 1. For effective phase~lag 
control, the pole and zero of the controller transfer function should be placed close 
together, and then for the type I system, the combination should be located relatively 
close to the origin of the s-plane. From the root loci of the uncompensated system in 
Fig. 9-46(a), we see that, if K could be set to 0.125, the damping ratio would be 0.707, 
and the maximum overshoot of the system would be 4.32%. By setting the pole and zero 
of the controller close to s = 0, the shape of the loci of the dominant roots of the 
568 1111> Chapter 9. Design of Control Systems 
-::-
~ 0.8 
0.6 
0.4 
0.2 
0 
0 --- -
0.1 0.2 0.3 0.4 0.5 
Time (sec) 
Figure 9-47 Unit-step responses of uncompensated and compensated sun-seeker systems with 
. 2500K 1 + aTs phase-lag controller m Example 9-6-1. Gp(s) = s(s + 25) G<.(s) == 1 + Ts a = 0.09 T = 30. 
compensated system will be very similar to those of the uncompensated system. We can 
find the value of a using Eq. (9-124); that is, 
a= Kto_realizethedesireddamping = 0.125 = 0.125 K to reahze the steady-state performance 1 
Thus, if the value of T is sufficiently large, when K = 1, the dominant roots of the 
characteristic equation will correspond to a damping ratio of approximately 0.707. Let us 
arbitrarily select T = 100. The root loci of the compensated system are shown in Fig. 9-46(b ). 
The roots of the characteristic equation when K = 1, a = 0.125, and T = JOO are 
s = -0.0805, -12.465 + j12.465, and -12.465 -j12.465 
which corresponds to a damping ratio of exactly 0.707. Ifwe had chosen a smaller value for 
T, then the damping ratio would be slightly off 0.707. From a practical standpoint, the value 
of T cannot be too large, since from Eq. (9-64), T = R2C, a large Twould correspond to 
either a large capacitor or an unrealistically large resistor. To reduce the value of T and 
simultaneously satisfy the maximum overshoot requirement, a should also be reduced. 
However, a cannot be reduced indefinitely, or the zero of the controller at -1 / aT would be 
too far to the left on the real axis. Table 9-17 gives the attributes of the time-domain 
9-6 Design with Phase-Lag Controller ,iciQ 569 
TABLE 9 .. 17 Attributes of Performance of Sun-Seeker System in Example 9-6-1 with 
Phase-Lag Controller 
Maximum tr t.~ BW Roots of 
a T Overshoot (%) (sec) (sec) (rad/sec) Characteristic Equation 
1.000 44.4 0.0255 0.2133 75.00 -12.500 ± j48.412 
0.125 100 4.9 0.1302 0.1515 17.67 -0.0805 -12.465 ± j12.465 
0.100 100 2.5 0.1517 0.2020 13.97 -0.1009 -12.455 ± }9.624 
0.100 50 3.4 0.1618 0.2020 14.06 -0.2037 -12.408 ± j9 .565 
0.100 30 4.5 0.1594 0.1515 14.19 -0.3439 -l2.345 ± j9.484 
0.100 20 5.9 0.1565 0.4040 14.33 -0.5244 -12.263 ± j9.382 
0.090 50 3.0 0.1746 0.2020 12.53 -0.2274 -12.396 ± jS.136 
0.090 30 4.4 0.1719 0.2020 12.68 -0.3852 -12.324 ± jS.029 
0.090 20 6.1 0.1686 0.5560 12.84 -0.5901 -12.230 ± )7.890 
performance of the phase-lag compensated sun-seeker system with various values for a and 
T. The ramifications of the various design parameters are clearly displayed. 
Thus~ a suitable set of controller parameters would be a= 0.09 and T = 30. With 
T = 30, selecting C = 1 µF would require R2 to be 30 MO. A smaller value for T can be 
realized by using a two-stage phase~Iag controller. The unit-step response of the 
compensated system with a= 0.09 and T = 30 is shown in Fig. 9-47. Notice that 
the maximum overshoot is reduced at the expense of rise time and settling time. 
Although the settling time of the compensated system is shorter than that of the 
uncompensated system, it actually takes much longer for the phase-lag-compensated 
system to reach steady state. 
It would be enlightening to explain the design of the phase-lag controUer by means of 
the root contours. The root-contour design conducted earlier in Example 9-5-1 using Eqs. 
(9-80) through (9-83) for phase-lead control and Figs. 9-31 and 9-32 is still valid for phase­
lag control, except that in the present case, a < 1. Thus, in Fig. 9-32 only the portions of the 
root contours that correspond to a< 1 are applicable for phase-lag control. These root 
contours clearly show that, for effective phase-lag control, the value of T should be 
relatively large. In Fig. 9-48 we illustrate further that the complex poles of the closed-loop 
transfer function are rather insensitive to the value of T when the latter is relatively large. 
Frequency-Domain Design 
The Bode plot of Gp(jw) of Eq. (9-131) is shown in Fig. 9-49 for K = 1. The Bode plot 
shows that the phase margin of the uncompensated system is only 28°. Not knowing what 
phase margin will correspond to a maximum overshoot of less than 5%. we conduct the 
following series of designs using the Bode plot in Fig. 9-49. Starting with a phase margin of 
45°. we observe that this phase margin can be realized if the gain-crossover frequency w~ is 
at 25 rad/sec. This means that the phase-lag controller must reduce the magnitude curve of 
GPUw) to O dB at w = 25 rad/sec while it does not appreciably affect the phase curve near 
this frequency. Because the phase-lag controller still contributes a smatl negative phase 
when the comer frequency 1/aTis placed at 1/10 of the value of w~. it is a safe measure to 
choose w~ at somewhat less than 25 rad/sec, say, 20 rad/sec. 
From the Bode plot, the value of I Gp ( jw~) / at w~ = 20 rad/sec is 11. 7 dB. Thus, 
using Eq. (9-128), we have dB 
a= 10-JGp{jw;)l/20 = 10-Il.7/20 = O.Z6 (9-134) 
570 >-Chapter 9. Design of Control Systems 
s -plane 
a =0.125 
T= 100 
(-12.465 + jl2.465) 
ci=O.l 
T=50 
(-12.408 + )9.965) 
T=30 
a=0.09 
{-12.324 + j8.029) jro 
K=l 
j48.4 
a<l 
i a 
T= 30 (0.0476 + jl.8204) 
T= 50 (0.0278 + jl.4118) 
T= JOO (0.0125 + j0.9992) 
/*r**~~1
-25~~--12-.5-+-----,~*~~: 
T :=. 100, a= 0.125 (-0.0805) 
T;;;;; 50. a= 0.1 (-0.2037) 
T = 30. a= 0.09 (-0.3852) 
T= 30 T;:;;;50 T= 100 
-25.129 -25.076 -25.035 
-j48.4 (T 
Figure 9-48 Root contours of sun-seeker system in Example 9-6-1 with phase-lag controller. 
The value of 1 / aT is chosen to be at 1/10 the value of c.v~ = 20 rad/sec. Thus, 
and 1 w' 20 -= 2 =-== 2rad/sec aT 10 10 
1 1 T=-=-= 1.923 2a 0.52 (9-135) 
(9-136) 
i 
"W 
~ 
S?. 
-f 
~ 
a' 
~ 
t:> 
....J 9·6 Design with Phase-Lag Controller ~ 571 
80 
60 
40 
20 
0 
-20 
-40 
-60 ~ ~ r,..r,.. 
! I"',."' "'~~ 
~ ~-...... j-...., 
~ :-,..r-,."' 
~ 
V ' ........... V Uncompensated system G,.(s)GpCs)· r-...... 
l I 1111 V ~r-. ""~ r-,..r-, l I I 111~1 2500 I ._ Compensated system "" Gis) -s(s + 25) -1-............ r..... 'm:tr·rr · f"-.r-,. 
r-~~ ---,"' -r· "' ,,I I I 
I r-}, I ~ 
l I "'-I ... , 
I I r-, .... ' I I I ~~ I I ' '~ ! l ! 
I I I .... 
I'\ \, 
t I I ~~ 
1 I I ',..,, l l I 
I l I I",~~ 1 L I 
I t I 
! I I . I 
ro-1 J01 25 
w (rad/sec) 
-90 
~ ~ 
-HK} "'~ ! l ! I Ii 11111 I 
1----+--++++.1-1,-M--~~-+-~+-1+--+-+-i"--Nl',+HJ-.+1 .,,,,. Unc~mpe~sated systcm--+-1-H--t-Hi 
Vi..,-r---._r,: I I I 
-llO ~ .._ Compem;atcd system 
-120 \ 
\ 
\ -130 V \ 
I\ I -140 ' V 
~ J 
-150 
-160 
-170 
-180 
10-.2 10-l r,..I',. 
1:i1/ 
~ 
I/ 
I ,-I I I 
I I 
I 
I 
! 
PM=67.W \ J 
I [\l 
101 25 
w (rad/sec) 
Figure 9.49 Bode plot of uncompensated and compensated systems with phase~lag controllel' in 
1 + 3s 2500 Example 9·6-1. Ge.(.~)= -30 Gp(s) = ( 25) I+ ~ ss+ 
Checking out the unit-step response of the system with the designed phase-lag control, we found 
that the maximum overshoot is 24.5%. The next step is to try aiming at a higher phase margin. 
Table 9-18 gives the various design results by using various desired phase margins up to 80°. 
Examining the results in Table 9--18, we see that none of the cases satisfies the maximum 
overshoot requirement of~ 5%. The a= 0.044 and T = 52.5 case yieldc; the best maximum 
overshoot, but the value of T is too large to be practical. Thus. we single out the case with 
a = 0.1 and T = 10 and refine the design by increasing the value of T. As shown in Table 9-17. 
572 ~ Chapter 9. Design of Control Systems 
TABLE 9-18 Performance Attributes ot Sun-Seeker System in Example 9-6-1 with 
Phase-Lag Controller 
Desired Actual BW Maximum Ir l.r 
PM(deg) a T PM (deg) Mr (rad/sec) Overshoot(%) (sec) (sec) 
45 0.26 1.923 46.78 1.27 33.37 24.5 0.0605 0.2222 
60 0.178 3.75 54.0 1.19 25.07 17.5 0.0823 0.303 
70 0.1 10 63.87 1.08 14.72 10.0 0.1369 0.7778 
80 0.044 52.5 74.68 1.07 5.7 7.1 0.3635 1.933 
when a= 0.1 and T = 30, the maximum overshoot is reduced to 4.5%. The Bode plot of the 
compensated system is shown in Fig. 9-49. The phase margin is 67 .61 °. 
The unit-step response of the phase-lag-compensated system shown in Fig. 9-47 points 
out a major disadvantage of the phase-lag control. Because the phase-lag controller is 
essentially a low-pass filter, the rise time and settling time of the compensated system are 
usually increased. However, we shall show by the following example that phase-lag control 
can be more versatile and has a wider range of effectiveness in improving stability than the 
single-stage phase-lead controller, especially if the system has low or negative damping. 
~-EXAMPLE 9-6-2 Consider the sun-seeker system designed in Example 9-5-3, with the forward-path transfer function 
given in Eq. (9-111). Let us restore the gain K, so that a root-locus plot can be made for the system. 
Then, Eq. (9-111) is written 
G (s) _ 156, 250,000K 
P -s(s2 + 625s + 156,250) (9-137) 
The root loci of the closed-loop system are shown in Fig. 9-50. When K = 1, the system is unstable, 
and the characteristic equation roots are at -713.14, 44.07 + j466.01, and 44.07 -j466.0l. 
Example 9-5-3 shows that the performance specification on stability cannot be achieved with a 
single-stage phase-lead controller. Let the performance criteria be as follows: 
Maximum overshoot ~ 5% 
Rise time tr $ 0.02 sec 
Settling time ts $ 0.02 sec 
Let us assume that the desired relative damping ratio is 0.707. Fig. 9-50 shows that, when 
K = 0.10675, the dominant characteristic equation roots of the uncompensated system are at 
-172. 77 ± jl 72. 73, which correspond to a damping ratio ofO. 707. Thus, the value of a is determined 
from Eq. (9-124). 
a = K to.realize the desired damping = 0.10675 = O. l0675 K to reahze the steady-state performance 1 
Let a = 0.1. Because the loci of the dominant roots are far away from the origin in the s-plane, the 
value of T has a wide range of flexibility. Table 9-19 shows the performance results when a = 0.1 and 
for various values of T. 
TABLE 9-19 Performance Attributes of Sun-Seeker System in Example 9-6-2 with 
Phase-Lag Controller 
BW PM %Max t, ls 
a T (rad/sec) (deg) Overshoot (sec) (sec) 
0.1 20 173.5 66.94 1.2 0.01273 0.01616 
0.1 10 174 66.68 1.6 0.01262 0.01616 
0.1 5 174.8 66.15 2.5 0.01241 0.01616 
0.1 2 177.2 64.56 4.9 0.01601 0.0101 
s-plane 
K=l K=0.2 
-800 -700 -600 -500 -400 9-6 Design with Phase .. Lag Controller ~ 573 
jru! ! 
j600 
j500 
K=l 
}200 
K=0.10675 
K= 0.1', I',, jlOO 
K = 0.10675 45° ', K = O 
-200 -100 0 
-jlOO 
K=0.1 
Figure 9-50 Root loci of uncompensated system in Example 9-6-2. 
G ) 156,250,000K 
p(s = s(s2 + 625s + 156, 250)" 
Therefore, the conclusion is that only one stage of the phase-lag controller is needed to satisfy 
the stability requirement, whereas two stages of the phase-lead controller are needed, as shown in 
Example 9-5-3. ~ 
Sensitivity Function 
The sensitivity function 1s~ ( jw) r of the phase-lag compensated system with a = 0.1 and 
T = 20 is shown in Fig. 9-51. Notice that the sensitivity function is less than unity for 
frequencies up to only 102 rad/sec. This is due to the low bandwidth of the system as a 
result of phase-lag control. 
574 ... Chapter 9. Design of Control Systems 
2.00 
/ ......... 
'§' 
~ 1.00 
~c:: I/ ,... ... 
{I) -
0 
O.l -
IO I~~ 
.,,~ 
__.,~ 
100 1000 
w (rad/sec) 
Figure 9-51 Sensitivity function of phase-lag-compensated system in Example 9-6-2. 
9-6-3 Effects and Limitations of Phase-Lag Control 
From the results of the preceding illustrative examples, the effects and limitations of phase­
lag control on the performance of linear control systems can be summarized as follows. 
1. For a given forward-path gain K, the magnitude of the forward .. path transfer 
function is attenuated near the gain-crossover frequency, thus improving the 
relative stability of the system. 
2. The gain-crossover frequency is decreased, and thus the bandwidth of the system 
is reduced. 
3. The rise time and settling time of the system are usually longer, because the 
bandwidth is usually decreased. 
4. The system is more sensitive to parameter variations because the sensitivity 
function is greater than unity for all frequencies approximately greater than the 
bandwidth of the system . 
.,._ 9-7 DESIGN WITH LEAD-LAG CONTROLLER 
We have learned from preceding sections that phase-lead control generally improves rise time 
and damping but increases the natural frequency of the closed-loop system. However, phase­
lag control when applied properly improves damping but usually result~ in a longer rise time 
and settling time. Therefore, each of these control schemes has its advantages, disadvantages, 
and limitations. and there are many systems that cannot be satisfactorily compensated by either 
scheme acting alone. It is natural, therefore, whenever necessary, to consider using a 
combination of the lead and lag controllers, so that the advantages of both schemes are utilized. 
The transfer function of a simple lag-lead (or lead-lag) controller can be written 
(9-139) 
The gain factors of the lead and lag controllers are not included because, as shown previously, 
these gain and attenuation are compensated eventually by the adjustment of the forward gain K. 
Because the lead-lag controller transfer function in Eq. (9-139) now has four unknown 
parameters, its design is not as straightforward as the single-stage phase-lead or phase-lag 
controller. ln general, the phase-lead portion uf the cuntru/ler is used mainly to achieve a 
shorter rise time and higher bandwidth. and the phase-lag portion is brought in to provide 
major damping of the system. Either the phase-lead or the phase-lag control can be 
designed first. We shall use Example 9-7-1 to illustrate the design steps. 
9-7 Design with lead-Lag Controller • 575 
)IJ,, EXAMPLE 9-7-1 As an illustrative example of designing a lead-lag controller, let us consider the sun-seeker system of 
Example 9-5-3. The uncompensated system with K = 1 was shown to be unstable. A two-stage 
phase-lead controller was designed in Example 9-6-1, and a single-stage pha<,e-lag controller was 
designed in Example 9-6-2. 
Based on the design in Example 9-5-3, we can first select a phase-lead control with a = 70 and 
Ti = 0.00004. The remaining phase-lag control can be designed using either the root-locus method 
or the Bode plot method. Table 9-20 gives the results by letting T2 = 2, which is an insensitive 
parameter, and various values of a. The results in Table 9-20 show that the optimal value of a2, from 
the standpoint of minimizing the maximum overshoot, for a1 = 70 and T2 = 0.00004, is approxi­
mately 0.2. Compared with the single-stage phase-lag control designed in Example 9-6-1, the BW is 
increased to 351.4 rad/sec from 66.94 rad/sec, and the rise time is reduced to 0.00668 sec from 
0.01273 sec. The system with the lead-lag controller should be more robust, because the magnitude 
of the sensitivity function should not increase to unity until near the BW of 351.4 rad/sec. As a 
comparison, the unit-step responses of the system with the Lwo-stage phaseMlead control, the single­
stage phase-lag control,. and the lead-lag control are shown in Fig. 9-52. 
TABLE 9-20 Performance Attributes of Sun-Seeker System in Example 9-7-1 with 
Lead-Lag Controller; a1 == 70, T1 = 0.00004 
PM BW Maximum lr 
Gz T2 (deg) M,. (rad/sec) Overshoot ( % ) (sec) 
0.1 20 81.81 1.004 122.2 0.4 0.01843 
0.15 20 76.62 1.002 225.5 0.2 0.00985 
0.20 20 70.39 1.001 351.4 0.1 0.00668 
0.25 20 63.87 1.001 443.0 4.9 0.00530 
Two-staie phase-lead control 
,/ Lead-Ia~-~otol I srg,e-stage phase-lag control 
0.01 0.02 0,03 0,04 
Time (sec) 
Figure 9-52 Sun-seeker system in Example 9-7-l with single-stage phase-lag controller. 
lead-lag controller. and two-stage phase-lead controller. t.~ 
(sec) 
0.02626 
0.01515 
0.00909 
0.00707 
0.05 
576 ..,_ Chapter 9. Design of Control Systems 
It should be noted that the bandwidth and rise time of the sun-seeker system can be further 
increased and reducedt respectively, by using a larger value of a1 for the phase-lead portion of the 
controller. However. the resulting step response will have a large undershoot, although the maximum 
overshoot can be kept small. -4C 
.. 9-8 POLE-ZERO-CANCELLATION DESIGN: NOTCH FILTER 
The transfer functions of many controlled processes contain one or more pairs 
of complex-conjugate poles that are very close to the imaginary axis of the s-plane. 
These complex pules usually cause the closed-loop system to be lightly damped or 
unstable. One immediate solution is to use a controller that has a transfer function with 
zeros selected, which would cancel the undesirable poles of the controlled process, 
and to place the poles of the controller at more desirable locations in the s-plane to 
achieve the desired dynamic performance. For example, if the transfer function of a 
process is 
K G (s)---=----
P -s(s2 + s + 10) (9~140) 
in which the complex-conjugate poles may cause stability problems in the closed-loop 
system when the value of K is large, the suggested series controller may be of the form 
(9-141) 
The constants a and h may be selected according to the performance specifications of the 
closed-loop system. 
There are practical difficulties with the pole-zero-cancellation design scheme that 
should prevent the method from being used indiscriminately. The problem is that in 
practice exact cancellation of poles and zeros of transfer functions is rarely possible. In 
practice, the transfer function of the process, Gp(s), is usually determined through 
testing and physical modeling~ lineariz.ation of a nonlinear process and approximation 
of a complex process are unavoidable. Thus, the true poles and zeros of the transfer 
function of the process may not be accurately modeled. In fact, the true order of the 
system may even be higher than that represented by the transfer function used for 
modeling purposes. Another difficulty is that the dynamic properties of the process may 
vary, even very slowly, due to aging of the system components or changes in the 
operating environment, so the poles and zeros of the transfer function may move during 
the operation of the system. The parameters of the controller are constrained by the 
actual physical components available and cannot be assigned arbitrarily. For these and 
other reasonst even if we could precisely design the poles and zeros of the transfer 
function of the controller, exact pole-zero cancellation is almost never possible in 
practice. We will now show that, in most cases, exact cancellation is not really necessary 
to effectively negate the influence of the undesirable poles using pole-zero~cancellation 
compensation schemes. 
Let us assume that a controlled process is represented by 
K 
G p(s) = -s(-s _+_p_i),__(_s +-p-i) (9-142) 
9-8 Pole-Zero-Cancellation Design: Notch Filter <a 577 
where p1 and p1 are the two complex-conjugate poles that are to be canceled. Let the 
transfer function of the series controller be 
Gc(s) = (s+ PI +e1)(s+p1 +e1) 
s2+as+b (9-143) 
where s1 is a complex number whose magnitude is very small and "et is its complex 
conjugate. The open-loop transfer function of the compensated system is_ 
G(s) = Gc(s)G (s) = K(s + Pl -e1 )(s + Pt + et) 
P s(s+ p1)(s+p1)(s2+as+b) (9-144) 
Because of inexact cancellation, we cannot discard the terms (s + Pl )(s + p1) in the 
denominator of Eq. (9-144). The closed-loop transfer function is 
Y(s) K(s +Pl+ er)(s +Pl+ e1) 
R(s) = s(s + pi)(s + pi)(s2 +as+ b) + K(s -Pt+ ei)(s +Pi+ ei) (9-145) 
The root-locus diagram in Fig. 9-53 explains the effect of inexact pole-zero cancel­
lation. Notice that the two closed-loop poles as a result of inexact cancellation lie between 
the pairs of poles and zeros at s = -PI, -p1 and -Pt -t:1, -]51 -s1, respectively. Thus, 
s-plane j{I) 
Root 
locus 
Poleof ~ 
process --..ro 
-pl 
X 
Pole of 
controller 
X Zero 
controller 
-<Pi +e1) 
Pole of 
process 
/ 
Figure 9-53 Pole-zero configuration and root loci of inexact cancellation. 
578 ,.._ Chapter 9. Design of Control Systems 
these closed-loop poles are very close to the open-loop poles and zeros that are meant to be 
canceled. Eq. (9-145) can be approximated as 
Y(s) ~ K(s+ PI +e1)(s+Ji1 +s2) 
R(s) ;;;: (s +Pl+ 81 )(s + p1 + 81 )(s3 +as+ b + K) (9-146) 
where 81 and 81 are a pair of very small complex-conjugate numbers that depend on e1, e1• 
and all the other parameters. The partiaJ .. fraction expansion of Eq. (9-146) is 
Y(s) Ki K2 d , , 
R( ) f:!!. t-+ _ t-+ terms ue to the remammg poles 
S S + PI + Of S + Pt + 01 (9-147) 
We can show that K1 is proportional to e1 -81, which is a very small number. Similarly, K2 
is also very small. This exercise simply shows that, although the poles at -p1 and -p2 
cannot be canceled preCZ:vely, the resulting transient-response terms due to inexact 
cancellation will have insignificant amplitudes, so unless the controller zeros earmarked 
for cancellation are too far off target, the effect can be neglected for all practical purposes. 
Another way of viewing this problem is that the zeros of G(s) are retained as the zeros of 
closed-loop transfer function Y(s)/R(s), so fromEq. (9-146). we see that the two pairs of 
poles and zeros are close enough to be canceled from the transienHesponse standpoint. 
Keep in mind that we should never attempt to cancel po/es that are in the right-half 
s-p/ane, because any inexact cancellation will result in an unstable system. Inexact 
cancellation of poles could cause difficulties if the unwanted poles of the process transfer 
function are very close to or right on the imaginary axis of the s-plane. In this case, inexact 
cancellation may also result in an unstable system. Fig. 9 .. 54(a) illustrates a situation in which 
j(I) 
j(I) 
K=O 
s•plane s-plane 
K=O 
0 
(a) (b) 
Figure 9-54 Root loci showing the effects of inexact pole-zero cancellations. 
9-8 Pole-Zero-Cancellation Design: Notch Filter ~ 579 
the relative positions of the poles and zeros intended for cancellation result in a stable system, 
whereas in Fig. 9-54(b), the inexact cancellation is unacceptable. The relative distance 
between the poles and zeros intended for cancellation is small. which results in residua] terms 
in the time response solution. Although these terms have very small amplitudes, they tend to 
grow without bound as time increases. Hence the system response becomes unstable. 
9-8-1 Second-Order Active Filter 
E1 Transfer functions with complex poles and/or zeros can be realized by electric circuits with 
op-amps. Consider the transfer function 
(9-148) 
where a1, a2~ b1, and b2 are real constants. The active-filter realization ofEq. (9-148) can be 
accomplished by using the direct decomposition scheme of state variables discussed in 
Section 10-10. A typical op-amp circuit is shown in Fig. 9-55. The parameters of the 
transfer function in Eq. (9~ 148) are related to the circuit parameters as follows: 
R6 K=--R1 
1 
(lJ =--R1C1 
I 
a2 = R2R4C1C2 
R1 
C2 
c, r-J R5 
Figure 9-55 Op~amp circuit realization of the second-order transfer function. 
E2(s) s2 +bis+ b2 --=K"> . Ei(s) s~ +a1s+a2 (9-149) 
(9~150) 
(9-151) 
580 • Chapter 9. Design of Control Systems 
(9-152) 
(9-153) 
Because h1 < a1, the zeros of GAs) in Eq. (9-148) are less damped and are closer to the 
origin in the s-plane than the poles. By setting various combinations of R1 and R8, and R9 to 
infinity, a variety of second-order transfer functions can be realized. Note that all the 
parameters can be adjusted independently of one another. For example~ R 1 can be adjusted 
to set a1; R4 can be adjusted to set a2; and b1 and b2 are set by adjusting R8 and R9, 
respectively. The gain factor K is controlled independently by R6• 
9-8-2 Frequency-Domain Interpretation and Design 
While it is simple to grasp the idea of pole-zero-cancellation design in the s-domain, 
the frequency-domain provides added perspective to the design principles. Fig. 9-56 
j 
'a' :.:::, 
c"' 
bO u :s 
'a :.:::, 
~ ... 
-.J 0 
-8 
~16 
-24 
-32 
-40 
O.ot 
90 
60 
30 
0 
-30 
-60 
-90 
O.Dl -~ i',. 
0.1 
-.... P,,,i,."' ~ I'... 
... , 
0.1 l.,,-"" 
i'I' 
I\. i.,"" 
\ vv \ -·· 
\ I \I 
1.0 w,. 10 
co(rad/sec) 
-~ 
I I"""'" ~ 
I 
' ~ .... 
'"" 7 
1.0 10 
w (rad/sec) 
Figure 9-56 Bode plot of a notch controller with the transfer function. 
(s2 + 0.8s + 4) 
G(s) = (s+0.384)(s + 10.42r --
100 
1, r-,.... 
r-,..""' 1"-r-~ 
100 
9-8 Pole-Zero-Cancellation Design: Notch Filter 581 
illustrates the Bode plot of the transfer function of a typical second-order controller 
with complex zeros. The magnitude plot of the controller typically has a "notch" at the 
resonant frequency w,,. The phase plot is negative below and positive above the resonant 
frequency , while passing through zero degrees at the resonant frequency . The attenua­
tion of the magnitude curve and the positive-phase characteristics can be used 
effectively to improve the stability of a linear system. Because of the "notch" 
characteristic in the magnitude curve, the controller is also referred to in the industry 
as a notch filter or notch controller. 
From the frequency -domain standpoint, the notch controller has advantages over the 
phase-lead and phase-lag controllers in certain design conditions, because the magnitude 
and phase characteristics do not affect the high-and low-frequency properties of the 
system. Without using the pole-zero-cancellation principle, the design of the notch 
controller for compensation in the frequency domain involves the determination of the 
amount of attenuation required and the resonant frequency of the controller. 
Let us express the transfer function of the notch controller in Eq. (9-148) as 
(9-154) 
where we have made the simplification by assuming that a2 = b2. 
The attenuation provided by the magnitude of GJjw) at the resonant frequency w,, is 
(9-155) 
Thus, knowing the maximum attenuation required at w11, the ratio of t/(p is known. 
The following example illustrates the design of the notch controller based on pole­
zero cancellation and required attenuation at the resonant frequency. 
EXAMPLE 9-8-1 Complex-conjugate poles in system transfer functions are often due to compliances in the 
coupling between mechanical elements. For instance, if the shaft between the motor and load is 
nonrigid, the shaft is modeled as a torsional spring, which could lead to complex-conjugate 
poles in the process transfer function. Fig. 9.57 shows a speed-control system in which the 
coupling between the motor and the load is modeled as a torsional spring. The system equations 
are 
dw,,,(t) dcvL(t) T111(t) = }111-d--+B,,.wm(t) +Ji-d-t 1 (9-156) 
ll,,, 
KL IJL 
K MOTOR LOAD 
B1. 
H111• T11J Bv 11. 
s 
Tachometer 
Figure 9-57 Block diagram of speed-control system in Example 9-8-1. 
582 ~ Chapter 9. Design of Control Systems 
dWL(t) KL{Om(t) -lh(t)] + Bdwm(t) -wi(t)] = h---;j," 
Tm(t) = Kwe(t) 
We(t) = Wr(t) -WL(t) 
T,11(1) = motor torque 
Wm (t) = motor angular velocity 
WL ( t) = load angular velocity 
BL(t) = load angular displacement 
9m (t) = motor angular displacement 
lm = motor inertia= 0.0001 oz-in.-sec2 
h = load inertia = 0.0005 oz-in.-sec2 
Bm = viscous-friction coefficient of motor= 0.01 oz-in.-sec 
BL= viscous-friction coefficient of shaft= 0.001 oz-in.-sec 
KL = spring constant of shaft = 100 on-in./rad 
K = amplifier gain = I 
The loop transfer function of the system is 
By substituting the system parameters in the last equation, Gp(s) becomes 
20, OOO(s + 100,000) 
Gp(s} = s3 + 112s2 + 1,200, 200s + 20,000,000 
20, OOO(s + 100,000) 
(s + 16.69}(s + 47.66 + j1094)(s + 47.66 -}1094) (9-157) 
(9-158) 
(9-159) 
(9-160) 
(9-161) 
Thus. th~ shaft compliance between the motor and the load creates two complex-conjugate poles in 
Gp(s) that are lightly damped. The resonant frequency is approximately 1095 rad/sec, and the closed­
loop system is unstable. The complex poles of Gp(s) would cause the speed response to oscillate even 
if the system were stable. 
Pofe .. zero .. Cancellation Design with Notch Controller 
The following are the performance specifications of the system: 
The steady-state speed of the load due to a unit-step input should have an error of not 
more than 1 %. 
Maximum overshoot of output speed ~ 5%. 
Rise time tr< 0.5 sec. 
Settling time t9 < 0.5 sec. 
To compensate the system, we need to get rid, or~ perhaps more realistically, minimize 
the effect, of the complex poles of Gp(s) at s = -47 .66 + jl094 and -47 .66 -jl094. Let 
9-8 Pole-Zero-Cancellation Design: Notch Filter ... 583 
us select a notch controller with the transfer function given in Eq. (9-154) to improve the 
performance of the system. The complex-conjugate zeros of the controller should be so 
placed that they will cancel the undesirable poles of the process. Therefore, the transfer 
function of the notch controller should be 
G ( ) _ s2 + 95.3s + 1,198,606.6 
CS -2 2 s + 2?;' pWnS + Wn 
The forward-path transfer function of the compensated system is 
G(s) = Gc(s)G (s) = 20, OOO{s + 100,000) 
P (s + 16.69) (s2 + 2?;'pWnS + wi) 
Because the system is type 0, the step-error constant is 
Kp = lim G(s) = 2 x 109 = 1.198 x 108 
s-O 16.69 X W~ ~ 
For a unit-step input, the steady-state error of the system is written 
ess = lim We(t) = lim s!le(s) =-1 IK r-oo s-o + p (9-162) 
(9-163) 
(9-164) 
(9-165) 
Thus, for the steady-state error to be less than or equal to 1 %, Kp ~ 99. The corresponding 
requirement on Wn is found from Eq. {9-164), 
Wn ~ 1210 (9-166) 
We can show that, from the stability standpoint~ it is better to select a large value for wn. 
Thus, let wll = 1200 rad/sec, which is at the high end of the allowable range from the 
steady-state error standpoint. However, the design specifications given above can only be 
achieved by using a very large value for t p· For example, when s P = 15, 000, the time 
response has the following performance attributes: 
Maximum overshoot= 3.7% 
Risetimet, = 0.1897sec 
Settling time ts = 0.256 sec 
Although the performance requirements are satisfied, the solution is unrealistic, because 
the extremely large value for t P cannot be realized by physically available controller 
components. 
Let us choose { P = IO and Wn = 1000 rad/sec. The forward-path transfer function of 
the system with the notch controller is 
20, OOO(s + 100, 000) 
G(s) = Gc(s)G p(s) = (s + 16.69)(s + 50)(s + 19,950) (9-167) 
We can show that the system is stablet but the maximum overshoot is 71.6%. Now we can 
regard the transfer function in Eq. (9-167) as a new design problem. There are a number of 
584 .,. Chapter 9. Design of Control Systems 
TABLE 9-21 Time-Domain Performance Attributes of System in Example 9-8-1 
with Notch-Phase-Lag Controller 
Maximum t,. (5 
Cl T aT Overshoot ( % ) (sec) (sec) 
0.001 10 0.01 14.8 0.1244 0.3836 
0.002 lO 0.02 10.0 0.1290 0.3655 
0.004 10 0.04 3.2 0.1348 0.1785 
0.005 lO 0.05 1.0 0.1375 0.1818 
0.0055 IO 0.055 0.3 0.1386 0.1889 
0.006 10 0.06 0 0.1400 0.1948 
possible solutions to the problem of meeting the design specifications given. We can 
introduce a phase-lag controller or a PI controller, among other possibilities. 
Second-Stage Phase-Lag Controller Design 
Let us design a phase-lag controller as the second-stage controller for the system. The roots 
of the characteristic equation of the system with the notch controller are at 
s = -19954, -31.328 + j316.36t and -31.328 -}316.36. The transfer function of the 
phase-lag controiler is 
1 +aTs 
Gc1 (s) = 1 + Ts (a< l) (9-168) 
where for design purposes we have omitted the gain factor 1/a in Eq. (9-168). 
Let us select T = 10 for the phase-lag controller. Table 9-21 gives time-domain 
performance attributes for various values of a. The best value of a from the overall 
performance standpoint appears to be 0.005. Thus, the transfer function of the phase-lag 
controller is 
G. (s) = 1 + aTs = I + 0.05s 
' 1 1 + Ts 1 + 1 Os (9-169) 
The forward-path transfer function of the compensated system with the notch-phase-lag 
controller is 
20, OOO(s + 100, 000)(1 + 0.05s) 
G(s) = Gt.(s)Gc:l (s)Gp(s) = (s + 16.69)(.v + 50)(s + 19, 950)(1 + 10s) (9~170) 
The unit-step response of the system is shown in Fig. 9-58. Because the step-error constant 
is 120.13, the steady-state speed error due to a step input is 1/120.13, or 0.83%. 
Second-Stage PI Controller Design 
A PI controller can be applied to the system to improve the steady-state e1Tor and the 
stability simultaneously. The transfer function of the PI control is written 
K1 (s + KJ/Kp) Gc2(s) = Kp +--= Kp s s (9-171) 
9-8 Pole-Zero-Cancellation Design: Notch Filter ~ 585 
t.2..------------r----------....,....----------~,----------~--------~ 
1--------System with exact pole-zero cancellation and 
notch-Pl control 
~ 
System with exact pole-zero cancellution and 
notch-phase-lag control 
- '\ System with inexact pole-zero cancellation and 
} 0.6 1----~1'--- notch-PI control 
0-------------'---~------ ........ --------~ ........ -----------'--------------' 0 0.2 0.4 0.6 0.8 
Time (sec) 
Figure 9-58 Unit-step responses of speed-control system in Example 9-8~1. 
We can design the PI controller based on the phase-lag controller by writing Eq. (9-169) as 
(s + 20) Gc1(s) =0.005 s+O.l (9-172) 
Thus, we can set Kp = 0.005 and K1/Kp = 20. Then, Ki= 0.1. Fig. 9-58 shows the unit­
step response of the system with the notch-PI controller. The attributes of the step response 
are as follows: 
% Maximum overshoot = 1 % 
Rise time tr = 0.1380 sec 
Settling time ts = 0.1818 sec 
which are extremely close to those with the notch-phase-lag controller, except that in the 
notch-PI case the steady-state velocity error is zero when the input is a step function. 
Sensitivity Due to Imperfect Pole-Zero Cancellation 
As mentioned earlier, exact cancellation of poles and zeros is almost never possible in real 
life. Let us consider that the numerator polynomial of the notch controller in Eq. (9-162) 
cannot be exactly realized by physical resistor and capacitor components. Rather, the 
transfer function of the notch controller is more realistically chosen as 
s2 + 100s + 1, 000, 000 
Gc(s) = s2 + 20, OOOs + 1,000,000 (9-173) 
586 ,._ Chapter 9. Design of Control Systems 
Fig. 9-58 shows the unit-step response of the sy~tem with the notch controller in Eq. 
(9-173). The attributes of the unit-step response are as follows: 
% Maximum overshoot = 0.4% 
Risetimetr = 0.17 sec 
Settling time ts= 0.2323 sec 
Frequency~Domain Design 
To carry out the design of the notch controller~ we refer to the Bode plot of Eq. (9-161) shown in 
Fig. 9-59. Due to the complex-conjugate poles of Gp(s), the magnitude plot has a peak of 24.86 
dB at 1095 rad/sec. From the Bode plot in Fig. 9-59, we see that we may want to bring the 
magnitude plot down to -20 dB at the resonant frequency of 1095 rad/sec so that the resonance 
is smoothed out. This requires an attenuation of -44.86dB. Thus, from Eq. (9-155), 
I )I {~ 0.0435 Ge( jwc = -44.86 dB = ~ = --
{ p {p (9-174) 
where ?:z is found from Eq. (9-62). Solving for t P from the last equation, we get s P = 7 .612. The attenuation should be placed at the resonant frequency of 1095 rad/ 
sec; thus, wn = 1095 rad/sec. The notch controller of Eq. (9-162) becomes 
( ) s2 + 95.3s + 1,198,606.6 
Ge s = s2 + 16, 670.28s + 1,199,025 (9-175) 
The Bode plot of the system with the notch controller in Eq. (9-175) is shown in Fig. 9-59. 
We can see that the system with the notch controller has a phase margin of only 13. 7°, and 
Mr is 3.92. 
To complete the design, we can use a PI controller as a second-stage controller. 
Following the guideline given in Section 9-3 on the design of a PI controller, we assume 
that the desired phase margin is 80°. From the Bode plot in Fig. 9-59, we see that, to realize 
a phase margin of 80°, the new gain-crossover frequency should be w~ = 43 rad/sec, and 
the magnitude of G( jw~) is 30 dB. Thus, from Eq. (9-32), 
Kp = 10-IG(jw~)l~:o = 10-3o/2o = 0.0316 (9-176) 
The value of K1 is determined using the guideline given by Eq. (9-25), 
'K K = {J)g p = 43 X 0.0316 = O 135 I 10 10 . (9-177) 
Because the original system is type 0, the final design needs to be refined by adjusting the 
value of K1• Table 9-22 gives the performance attributes when Kp = 0.0316 and K1 is varied 
from 0.135. From the best maximum overshoot, rise time, and settling time measures. the 
best value of K1 appears to be 0.35. The forward-path transfer function of the compensated 
system with the notch-PI controller is 
Gs ~ 20, OOO(s + 100, 000)(0.0316s + 0.35) 
( ) -s(s + 16.69)(s2 + 16, 670.28s + 1, 199,025) (9-178) 
20 
0 
-50 
-100 
? ._, -150 
! 
~ -180 
-200 
-250 r--
-300 
IQ-I 11111111 ~ r-,.; r-"' r... "'~ 
With notch i.,..--.,..D I"~ 
,_ controller 
With notch-Pl 
controller 9-8 Pole~Zero-Cancellation Design: Notch Filter -441 587 
43 102 1031095 ta4 
w (rad/sec·) 
II 
Ill I ll 1111111 I 11 
["\~ ll ll ~ Uncompensated system 
I 
\ '~ • I 
I I 
~ I \I I~~ I .:»,... II ...._ I 
~~ i !, I 
I 
I 
PM=70° I . 
PM=65.53° ~ I 
1 i~M-13.7°~ ll=:11 
1 ,... .... 
" \ r.... ... -
' ' \ --~:., 
1(,2 
w {rad/sec) 
Figure 9-59 Bode plots of the uncompensated speed-control system in Example 9-8-lt with 
notch controller and with notch-PI controller. 
Figure 9-59 shows the Bode plot of the system with the notch-PI controller, 
with Kp = 0.0316 and Ki= 0.35. The unit-step responses of the compensated system 
with Kp = 0.0316 and K1 = 0.135, 0.35, and 0.40 are shown in Fig. 9-60. 
588 • Chapter 9. Design of Control Systems 
TABLE 9-22 Performance Attributes of System in Example 9-8-1 with Notch-Pl Controller 
Designed in Frequency Domain 
Kp 
0.0316 
0.0316 
0.0316 
0.0316 
0.0316 
0.0316 
1.2 
0.8 
~ 06 Q • 
0.4-
0.2 
0 
0 PM 
K1 (deg) M,. 
0.1 76.71 1.00 
0.135 75.15 1.00 
0.200 72.22 1.00 
0.300 67.74 1.00 
0.350 65.53 1.00 
0.400 63.36 1.00 
/Ki= 0.4 
d -- r ~, ~ 
~ K1=0.35 ~ v--K1=0.l35 
0.1 0.2 0.3 Maximum t,. 
Overshoot(%) (sec) 
0 0.2986 
0 0.2036 
0 0.0430 
0 0.0350 
1.6 0.0337 
4.3 0.0323 
0.4 0.5 0.6 0.7 
Time (sec) l.s 
(sec) 
0.5758 
0.4061 
0.2403 
0.1361 
0.0401 
0.0398 
0.8 
Figure 9-60 Unit-step responses of speed-control system in Example 9-8-l with notch-PI controller, 
G ( )= s2+95.3s+l,198,606.6 G-( )=00316 0.35_ 
c s s2 + 16, 670.28s + 1,199,025 '2 s · · + s 
• 9-9 FORWARD AND FEEDFORWARD CONTROLLERS 
The compensation schemes discussed in the preceding sections all have one degree of 
freedom in that there is essentially one controller in the system, although the controller can 
contain several stages connected in series or in parallel. The limitations of a one-degree-of­
freedom controller were discussed in Section 9-1. The two-degree-of-freedom compensa­
tion scheme shown in Fig. 9-2(d) through Fig. 9-2(f) offers design flexibility when a 
multiple number of design criteria have to be satisfied simultaneously. 
9.9 Forward and Feedforward Controllers 589 
From Fig. 9-2(e), the closed-loop transfer function of the system is 
Y(s) Gc1(s)Gc(s)Gp(s) 
R(s) = 1 + Gc(s)Gp(s) (9-179) 
and the error transfer function is 
E(s) 1 
R(s) 1 + Gc(s)Gp(s) (9-180) 
Thus, the controller Gc(s) can be designed so that the error transfer function will have 
certain desirable characteristics, and the controller Gc1(s) can be selected to satisfy 
performance requirements with reference to the input-output relationship. Another way 
of describing the flexibility of a two-degree-of-freedom design is that the controller Gc(s) is 
usually designed to provide a certain degree of system stability and performance, but 
because the zeros of Gc .. (s) always become the zeros of the closed-loop transfer function, 
unless some of the zeros are canceled by the poles of the process transfer function, Gp(s), 
these zeros may cause a large overshoot in the system output even when the relative 
damping as determined by the characteristic equation is satisfactory. In this case and for 
other reasons, the transfer function G,t"(s) may be used for the control or cancellation of the 
undesirable zeros of the closed-loop transfer function, while keeping the characteristic 
equation intact. Of course, we can also introduce zeros in G,1(s) to cancel some of the 
undesirable poles of the closed-loop transfor funclion thal could nut be otherwise affected 
by the controller GJs). The feedforward compensation scheme shown in Fig. 9-2(f) serves 
the same purpose as the forward compensation, and the difference between the two 
configurations depends on system and hardware implementation considerations. 
It should be kept in mind that, while the forward and feedforward compensations may 
seem powerful because they can be used directly for the addition or deletion of poles and zeros 
of the closed-loop transfer function, there is a fundamental question involving the basic 
characteristics offeedback. If the forward or feedfonvard controller is so powerful, then why do 
we need feedback at all? Because G,1(s) in the systems of Figs. 9-2(e) and 9~2(f) are outside the 
feedback loop, the system is susceptible to parameter variations in Gef(s). Therefore, in reality, 
these types of compensation cannot be satisfactorily applied to all situations. 
EXAMPLE 9-9-1 As an illustration of the design of the forward and feedforward compensators, consider the second­
order sun-seeker system with phase-lag control designed in Example 9-6-1. One of the disadvantages 
of phase-lag compensation is that the rise time is usually quite long. Let us consider that the phase­
lag-compensated sun-seeker system has the forward-path transfer function 
2500(1 + !Os) 
G(s) = Gc(s)G 11(s) = s(s + 25)(1 + lOOs) (9-181) 
The time-response attributes are as follows: 
Maximum overshoot = 2.5% 
t,. = 0.1637 sec 
ts = 0.2020 sec 
We can improve the rise time and the settling time while not appreciably increasing the overshoot by 
adding a PD conlroller Gii(s) to the system, as shown in Fig. 9-6l(a). This effectively adds a zero to 
the closed-loop transfer function while not affecting the characteristic equation. Selecting the PD 
controller as 
G,.f(s) = I + ().05s (9-182) 
590 Chapter 9. Design of Control Systems 
CONTROU.ER 
Gc/,s) 
r(f) CONTROLLER 
Gcf1(s) 
CONTROLLER 
Gc(s) CONTROLLED y(r) 
PROCESS Gp(s) 
(a) 
CONTROLLED y(t) 
PROCESS Gp<s) 
(b) 
Figure 9-61 (a) Forward compensation with series compensation. (b) Feedforward compensation 
with series compensations . 
the time-domain performance auril>utes an: as follows: 
Maximum overshoot = 4.3% 
t,. = 0.1069sec 
t5=0.1313sec 
If instead the feedforward configuration of Fig. 9-6l(b) is chosen, the transfer function of G,fl (s) is 
directly related to G,f(s); that is, equating the closed-loop transfer functions of the two systems in 
Figs. 9-6l(a) and 9-6l(b), we have 
[Gcjt(s) + Gc(s)]Gp(s) GcfGc(s)Gµ(s) 
J + Gc(s)Gµ(s) 1 + Gc(s)G1,(s) (9-183) 
Solving for Gc:11(s) from Eq. (9-183) yields 
Gcf1(s) = [Gcj(s) -l]Gc(s) (9-184) 
Thus, with Gc1(s) as given in Eq. (9-179), we have the transfer function of the feedforward controller: 
( 1 + 10s) Gcf! (s) = 0.05s 1 + lOOs (9-185) 
9-10 DESIGN OF ROBUST CONTROL SYSTEMS 
In many control-system applications, not only must the system satisfy the damping and 
accuracy specifications, but the control must also yield perfom1ance that is robust 
(insensitive) to external disturbance and parameter variations. We have shown that 
feedback in conventional control systems has the inherent ability to reduce the effects 
of external disturbance and parameter variations. Unfortunately, robustness with the 
conventional feedback configuration is achieved only with a high loop gain, which is 
normally detrimental to stability. Let us consider the control system shown in Fig. 9-62. 
D(s) 
Y(s) 
K GpCs) 
Figure 9-62 Control system with disturbance. 
9-10 Design of Robust Control Systems ·< 591 
The external disturbance is denoted by the signal d(t). and we assume that the amplifier 
gain K is subject to variation during operation. The input-output transfer function of the 
system when d(t) = 0 is 
M(s) = Y(s) = KGcJ(s)Gc(s)Gp(s) 
R(s) 1 + KGc(s)Gp(s) (9-186) 
and the disturbance-output transfer function when r( t) = 0 is 
T(s) _ Y(s) _ 1 
-D(s) -1 -1-KGc(s)Gµ(s) (9-187) 
In general, the design strategy is to select the controller Gc(s) so that the output y(t) is 
insensitive to the disturbance over the frequency range in which the latter is dominant and 
to design the feedforward controller G,1(s) to achieve the desired transfer function between 
the input r(t) and the output y(t). 
Let us define the sensitivity of M(s) due to the variation of K as 
sM = percentchangeinM(s) = dM(s)/M(s) 
K percent change in K dK / K (9-188) 
Then, for the system in Fig. 9-62. 
1 ~=-----1 + KGc(s)Gp(s) (9-189) 
which is identical to Eq. (9-187). Thus, the sensitivity function and the disturbance-output 
transfer function are identical, which means that disturbance suppression and robustness 
with respect to variations of K can be designed with the same control schemes. 
The following example shows how the two-degree-of-freedom control system of Fig. 
9-62 can be used to achieve a high-gain system that will satisfy the performance and 
robustness requirements, as well as noise rejection. 
?l--EXAMPLE 9-10-1 Let us consider the second-order sun-seeker system in Example 9-6-1, which is compensated with 
phase-lag control. The forward-path transfer function is 
G (s) -2500K (9-190) 
P -s(s+25) 
where K = l. The forwardftpath transfer function of the phase-lag-compensated system with a = 0.1 
and T = 100 is 
2500K(l + 10s) 
G(s) = G,:(s)G p(s) = s(s + 25)(1 + 100s) (K = I) (9-191) 
Because the phase-lag controller is a low-pass filter, the sensitivity of the closed-loop transfer 
function M(s) with respect to K is poor. The bandwidth of the system is only 13.97 rad/sec, but it is 
expected that IS1/(Jw)I will be greater than unity at frequencies beyond 13.97 rad/sec. Fig. 9-63 
shows the unit-step responses of the system when K = 1, the nominal value. and K = 0.5 and 2.0. 
Notice that, if for some reac;on, the forward gain K is changed from its nominal value, the system 
response of the phase-lag-compensated system would vary substantially. The attributes of the step 
responses and the characteristic equation roots are shown in Table 9M23 for the three values of K. 
Fig. 9-64 shows the root loci of the system with the phase-lag controller. The two complex roots of the 
characteristic equation vary substantially as K varies from 0.5 to 2.0. 
592 ,. Chapter 9. Design of Control Systems 
s ~e, 0.6 
0.2 0.4 0.6 0.8 
Time (sec) 
Figure 9-63 Unit-step responses of the second-order sun-seeker system with phase-lag controller, 
G 2500( 1 + 10s) 
(s) = s(s + 25)(1 + lOOs)' 
TABLE 9-23 Attributes of Unit-Step Response of Second-Order Sun~Seeker System with 
Phase-Lag Controller in Example 9-10-1 
K Maximum Overshoot(%) tr (sec) 
2.0 12.6 0.07854 
l.O 2.6 0.1519 
0.5 1.5 0.3383 
Toolbox 9-10-1 
Fig. 9~63 is obtained by the following sequence of MATLAB functions 
K= l; 
num = K ""2500 * [10 1] 
den= conv( [1 25 OJ, (100 1]); 
[numCL,denCL]=cloop(nurn,den); 
step(numCL,denCL) 
hold on; 
K=2; 
nurn = K .,, 2 5 0 0 * [ 10 1] 15 (sec) Roots of Characteristic Equation 
0.2323 -0.1005 -12.4548 ± jl8.51 
0.2020 -0.1009 -12.4545 ± j9.624 
0.4646 -0.1019 -6.7628 -18.1454 
den= conv( [1 25 OJ, [100 1]); 
[numCL,denCL]=cloop(nurn,den); 
step(numCL,denCL) 
hold on; 
K = 0.5; 
num = K*2500 * [10 1] 
den= conv( [ 1 25 O], [100 1]); 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on; 
axis([O 101. 2)); 
grid 
s~plane 
K=O 
-25 1 
K=0.5 
-18.1454 9-10 Design of Robust Control Systems ~ 593 
-12.5 K=2 
-12.4548 + jl8.51 
K= I 
-12.4545 + j9.624 
K=0.5 
--6.7628 j(J) 
-0.01 K=O 
Figure 9 .. 54 Root loci of the second-order sun-seeker system with phase-lag controller. 
G 2500(1 + 10s) 
(s) = s(s + 25)(1 + lOOsf 
594 ..,. Chapter 9. Design of Control Systems 
The design strategy of the robust controller is to place two zeros of the controller near the desired 
closed-loop poles, which according to the phase4lag-compensated system are at s = -12.455 ±j9.624. 
Thus, we let the contmller transfer function be 
( ) _ (s + 13 + jlO)(s + 13 -jlO) _ (s2 + 26s + 269) 
Ge s - 269 -269 
The forward-path transfer function of the system with the robust controller is 
G(s) = _9._29_3_7 K_(_;_s2_+_26_s_+_2_69 __ ) 
s(s + 25) 
Toolbox 9-10-2 
Fig. 9-64 is obtained by the following sequence of MATLAB functions 
K= 1; 
num = K *2500 * [10 1] 
den= conv( [1 25 OJ, [100 1]); 
[numCL, denCL] "" cloop (num, den) 
rlocus(numCL,denCL); 
hold on 
K= 2; 
num = K *2500 * [10 1] 
den=conv([1250], [1001]); 
[numCL, denCLJ = cloop(num, den) 
rlocus(numCL,denCL); 
hold on 
K= 1; 
num = K *2500 * [10 1] 
den= conv( [125 O], [100 1]); 
rlocus(num,den); 
hold on 
K=2; 
num = K *2500 * [10 1] 
den= conv( [1 25 O], [100 1]); 
rlocus(num,den); 
hol.don 
Toolbox 9-10-3 Fig. 9-65 shows the root loci of the system with the robust·controller. By placing the two zeros of Gc.(s) 
near the desired characteristic equation roots, the sensitivity of the system is greatly improved, In fact. 
the root sensitivity near the two complex zeros at which the root loci terminate is very low. Fig. 9-65 
shows that, when K approaches infinity, the two characteristic equation roots approach -13 ± jlO. 
Fig. 9-65 is obtained by the following sequence of MATI.AB functions 
K;:::; 1; 
num == 9. 2937.,.'K * [1 26 269] 
den= [125 O]: 
[numCL, denCL] = cloop(num, den) 
rlocus(numCL,denCL); 
9-10 Design of Robust Control Systems 595 
hold on 
K=2; 
num = 9. 2937'"K * [1 26 269] 
den = [ 1 2 5 0 J ; 
[numCL, denCL] = cloop(num, den) 
rlocus(numCL,denCL); 
hold on 
K= 1; 
num = 9. 2937*K "* (1 26 269] 
den = [ 1 2 5 O J ; 
rlocus(num1den); 
hold on 
K=2; 
num = 9 . 2 9 3 7 * K "~ ( 1 2 6 2 6 9] 
den = [ 1 2 5 O J ; 
rlocus(num,den); 
axis( [-35 2 -15 151) 
%grid 
s-plane 
K=2 K;;x -12.9745+j9.3236~ -13+jl0 
K = l ________. K = 0.5 
-12.9514 + j8.6676 -12.9115 + j7.393 
-25 -13 -12.5 
-13-jto jro 
K=O 
0 
Figure 9-65 Root loci of the second-order sun-seeker system with robust controller. 
G(s) = 9.2931K(s2 + 26s + 269). 
s(s + 25) (T 
596 Chapter 9. Design of Control Systems 
269 
s2+ 26s+ 269 
GcJ,s) s2+ 26s + 269 
269 
G,.(s) 2500K 
s (s + 25) 
G1,(s) D(s) 
0,.(s) 
Figure 9-66 Second-order sun-seeker system with robust controller and forward controller. 
Because the zeros of the forward-path transfer function are identical to the zeros of the closed­
loop transfer function, the design is not complete by using only the series controller Gc(s), because the 
closed-loo p zeros will essentially cancel the closed-loop poles. This means we must add the forward 
controller, as shown in Fig. 9-62, where G,1(s) should contain poles to cancel the zeros of s2 + 
26s + 269 of the closed-loop transfer function. Thus, the transfer function of the forward controller is 
269 
G,:r(s) = .1"2 + 26s + 269 (9-194) 
The block diagram of the overall system is shown in Fig. 9-66. The closed-loop transfer function of 
the compensated system with K = I is 
00(s) 242.88 
0,(s) = s2 + 25.903s + 242.88 (9-195) 
The unit-step responses of the system for K = 0.5, 1.0, and 2.0 are shown in Fig. 9-67, and their 
attributes are given in Table 9-24. As shown, the system is now very insensitive to the variation of K. 
Because the system in Fig. 9-66 is now more robust, it is expected that the disturbance effect will 
be reduced. However, we cannot evaluate the effect of the controllers in the system of Fig. 9-66 by 
~ 
~ 0.61--~~-ff-1-~--1-~~~ ~~~+-~~~~ ~-+~~~~~ ~-1--~~~~~-; 
0.2 0.4 0.6 0.8 
Time (sec) 
Figure 9-67 Unit-step responses of the second-order sun-seeker system with robust controller 
and forward controller. 
9-10 Design of Robust Control Systems ~ 597 
TABLE 9-24 Attributes of Unit-Step Response of Second-Order Sun-Seeker System with 
Robust Controller in Example 9-10·1 
K 
2.0 
1.0 
0.5 
! 
'§' g 
i 
~ 
Q:)c:,, 10 
0 
-10 
-20 
-30 
-40 I 
I 
-50 
I/ -60 10-I Maximum 
Overshoot (%) 
1.3 
0.9 
0.5 
System with II 
phase-lag control 11 II 
I\. I 
"' V / 
~ )I/ II 
II 
IF V V I/ 
; 
; 
I 
~ 
V Lr ls Roots of 
(sec) (sec) Characteristic Equation 
0.1576 0.2121 -12.9745 ± j9.3236 
0.1664 0.2222 -12.9514 ± j8.6676 
0.1846 0.2525 -12.9115 ± ]7.3930 
/\ I I 1111111 I 11 
~ Uncompensated system 
,.--:: ~ -, _ '-I 
/ 
~ i----
I"" \ 
System with robust 
and forward controllers 
I 
10• IO! 
W(rad/sec) 
Figure 9-68 Amplitude Bode plot of response due to noise of second-order sun-seeker system. 
applying a unit-step function as d(t). The true improvement on the noise rejection properties is more 
appropriately analyzed by investigating the frequency response of 80(s)/D(s). The noise-to-output 
transfer function, written from Fig. 9-66, is 
E>o(s) 1 s(s + 25) 
D(s) = 1 + Gc{s)Gp(s)-= 10.2937s2 + 266.636s + 2500 (9-196) 
The amplitude Bode plotofEq. (9-196) is shown in Fig. 9-68. along with those of the uncompensated 
system and the system with phase-lag control. Notice that the magnitude of the frequency response 
between D(s) and E>o(s) is much smaller than those of the system without compensation and with 
phase-lag comrol. The phase-lag control also accentuates the noise for frequencies up to approxi­
mately 40 rad/sec, adding more stability to the system. -4 
._ EXAMPLE 9-10-2 In this ex.ample, a robust controller with forward compensation is designed for the third-order sun­
seeker system in Example 9-6-2 with phase-lag control. The forward-path transfer function of the 
uncompensated system is 
G (s) _ 156,250,000K 
P -s(s2 + 625s + 156,250) (9-197) 
598 1111> Chapter 9. Design of Control Systems 
jru 
s-plane 
K=O j242 
~-------1- K = 10 -180 + jl64 
K = 0.5 -184.5 + jl26.9 
-312.5 
~K=~ I -,ou-,166.13 
K=O K = 2 -180.4 + jl56.8 
K= I -181.3 + jl47.l 
K=O 
0 
-1242 (1 
Figure 9-69 Root loci of the third-order sun-seeker system with robust and forward controllers. 
where K = 1. The root loci of the closed-loop system are shown in Fig. 9-50, which lead to the phase­
lag control with results shown in Table 9-19. Let us select the parameters of the phase-lag controller as 
a::::: 0.1 and T = 20. The dominant roots of the characteristic equation ares= -187.73 ± jl64.93. 
Let us place the two zeros of the second-order robust controller at -180 ± j 166.13, so that the 
controller transfer function is 
G.() = s2 + 360s +60,000 
CS 60,QQQ (9-198) 
To ease the high-frequency realization problem of the controller, we may add two nondomimmt poles 
to Gc(s). The following analysis is carried out with Gis) given in Eq. (9-198), however. The root loci 
of the compensated system are shown in Fig. 9-69. Thus, by placing the zeros of the controIIer very 
TABLE 9-25 Attributes of Unit-Step Response and Characteristic Equation Roots of Third-Order 
Sun-Seeker System with Robust and Forward Controllers in Example 9-10-2 
Maximum Characteristic 
K Overshoot(%) tr (sec) t!, (sec) Equation Roots 
0.5 1.0 0.01115 0.01616 -1558.l -184.5 ± jl26.9 
LO 2.1 0.01023 0.01414 -2866.6 -181.3 ± j147.l 
2.0 2.7 0.00966 0.01313 -5472.6 -180.4 ± jl56.8 
10.0 3.2 0.00924 0.01263 -26307 -180.0 ± jl64.0 
9-10 Design of Robust Control Systems .. -. 599 
close to the desired dominant roots. the system is very insensitive to changing values of K near and 
beyond the nominal value of K. The forward controller has the transfer function 
G () 60,000 
,.f s = s2 + 360s + 60, 000 <9-t 99> 
The attributes of the unit-step response for K = 0.5. 1.0. 2.0, and I 0.0 and the corresponding 
characteristic equation roots are given in Table 9-25. 
EXAMPLE 9-10-3 In this example, we consider the design of a position"control system that has a variable load inertia. 
This type of situation is quite common in control systems. For example, the load inertia seen by the 
motor in an electronic printer will change when different printwheels are used. The system should 
have satisfactory performance for all the printwheels intended to be used with the system. 
To illustrate the design of a robust system that is insensitive to the variation of load inertia, 
consider that the forward-path transfer function of a unity-feedback control system is 
KKt Gp(s) = (9-200) s[(Js + B)(Ls + B) + K;K1,] 
The system parameters are as follows: 
Ki = motor torque constant = I N-m/ A 
Kh;; motor back-emf constant:;:;;; 1 V/rad/sec 
R = motor resistance = 1 11 
L = motor inductance= 0.01 H 
B == motor and load viscous-friction coefficient 95 0 
J = motor and load inertia. varies between O.Ql and 0.02 N-m/rad/sec2 
K = amplifier again 
Substituting these system parameters into Eq. (9-200). we get 
10.000K For J = 0.01 G (s) ----,,,----· ---­P · -s(s2 + 100.r + 10,000) 
5000K 
For J = 0·02 Gp(s) = s(s2 + 100s + 5000) 
The performance specifications are as follows: 
Ramp error constant Kv ~ 200 
Maximum overshoot ~ 5% 01· as small as possible 
Rise time t,. < 0.05 sec 
SettJing time t,5 :5 0.05 sec 
These specifications are to be maintained for 0.01 :5 J :5 0.02 (9-201) 
To satisfy the ramp-error constant requirement, the value of K must be at least 200. Fig. 9-70 
shows the root loci of the uncompensated system for J = 0.01 and J = 0.02. We see that, regardless 
of the value of J, the uncompensated system is unstable for K > 100. 
To achieve robust control. let us choose the system configuration of Fig. 9-61(a). We introduce a 
second-order series controller with the zeros placed near the desired dominant characteristic equation 
of the compensated system. The zeros should be so placed that the dominant characteristic equation 
roots would be insensitive to the variation in J. This is done by placing the two zeros at -55 ± )45. 
although the exact location is unimportant. By choosing the two controller zeros as designated, the 
root loci of the compensated system show that the two complex roots of the charactelistic equation 
will be very close to these zeros for various values of J, especin1ly when the value of K is large. The 
transfer function of the robust controller is 
Gc(s) = (s2 + l ~~~; 5050) (9_203) 
600 ~-Chapter 9. Design of Control Systems 
s-plane 
Compensated 
K= 1000 J= 0.01 
-56.6 + j43.3 
K= 1000 J=0.02 
-55.57 + j44.94 jw 
j50 
K=O 
-50 0 
Figure 9-70 Root loci of the position-control system in Example 9-10-3 with robust and 
forward controllers. 
As in the last example, we may add two nondominant poles to Gc(s) to ease the high-frequency 
realization problem of the controller. The analysis is carried out with Gr(s) given in Eq. (9-203). 
Let K = 1000, although 200 would have been adequate to satisfy the Kv requirement. Then, for 
J = 0.01. the forward-path transfer function of the compensated system is 
and for J = 0.02, 1980.198(s2 + 110s + 5050) 
G(s) = Gc(s)Gp(s) = s(sZ + lOOs + lO, OOO) (9-204) 
G(s) = 990.99(s2 + 110s + 5050) 
s(s2 + 100s + 5000) 
9-11 Minor-Loop Feedback Control 601 
TABLE 9-26 Attributes of Unit-Step Response and Characteristic Equation Roots of System with 
Robust and Forward Controllers in Example 9-10-3 
Maximum Roots of 
J N-m/rad/sec2 Overshoot(%) 1,. (sec) t., (sec) Characteristic Equation 
0.01 1.6 0.03453 0.04444 -1967 -56.60 ± j43.3 
O.G2 2.0 0.03357 0.04444 -978.96 -55.57 ± j44.94 
To cancel the two zeros of the closed-loop transfer function, the transfer function of the forward 
controller is 
5050 
G,f(s) = s2 + I !Os+ 5050 (9-206) 
The attributes of the unit-step response and the character istic equation roots of the compensated 
system with K = 1000, J = 0.01, and J = 0.02 are given in Table 9-26. 
9-11 MINOR-LOOP FEEDBACK CONTROL 
The control schemes discussed in the preceding sections have all utilized series controllers 
in the forward path of the main loop or feedforward path of the control system. Although 
series controllers are the most common because of their simplicity in implementation, 
depending on the nature of the system, sometimes there are advantages in placing the 
controller in a minor feedback loop, as shown in Fig. 9-2(b). For example, a tachometer 
may be coupled directly to a de motor not only for the purpose of speed indication but more 
often for improving the stability of the closed-loop system by feeding back the output 
signal of the tachometer . The motor speed can also be generated by processing the back 
emf of the motor electronically. In principle, the PID controller or phase-lead and phase-lag 
controllers can all, with vaiying degrees of effectiveness, be applied as minor-loop 
feedback controller s. Under certain conditions, minor-loop control can yield systems 
that are more robust, that is, less sensitive to external disturbance or internal parameter 
variations. 
9-11-1 Rate-Feedback or Tachometer-Feedback Control 
The principle of using the derivative of the actuating signal to improve the damping of a 
closed-loop system can be applied to the output signal to achieve a similar effect. In other 
words, the derivative of the input signal is fed back and added algebraically to the actuating 
signal of the system. In practice, if the output variable is mechanical displacement, a 
tachometer may be used to convert mechanical displacement into an electrical signal that is 
proportional to the derivative of the displacement. Fig. 9-71 shows the block diagram of a 
control system with a secondary path that feeds back the derivative of the output. The 
R(s) 0 -+ I I~ E(s) Y(s) 
-r.___ __ ---1~-K-,1·~------1 
Figure 9-71 Control system with tachometer feedback. 
602 ,.._ Chapter 9. Design of Control Systems 
transfer function of the tachometer is denoted by K1s, where K, is the tachometer constant, 
usually expressed in volts per radian per second for analytical purposes. Commercially, K1 
is given in the data sheet of the tachometer, typically in volts per 1000 rpm. The effects of 
rate or tachometer feedback can be illustrated by applying it to a second-order prototype 
system. Consider that the controlled process of the system shown in Fig. 9-71 has the 
transfer function 
w2 
G (s) -11 
P -s(s + 2swn) (9-207) 
The closed-loop transfer function of the system is 
Y(s) w~ 
R(s) = s2 + (2{w,, + K1w;i)s + w~ (9-208) 
and the characteristic equation is 
(9-209) 
From the characteristic equation, it is apparent that the effect of the tachometer feedback 
is the increase of the damping of the system, since Kt appears in the same term as the 
damping ratio ~-
In this respect, tachometer-feedback control has exactly the same effect as the PD 
control. However, the closed-loop transfer function of the system with PD control in 
Fig. 9-3 is 
Y(s) w~(Kp + Kvs) 
R(s) = s2 + (2sw + Kow~)s + w~Kp (9-210) 
Comparing the two transfer functions in Eqs. (9-208) and (9-210)T we see that the two 
characteristic equations are identical if Kp = 1 and Kn = Kt. However, Eq. (9-210) has 
a zero at s = -Kp/Kv, whereas Eq. (9-208) does not. Thus, the response of the system 
with tachometer feedback is uniquely defined by the characteristic equation, whereas 
the response of the system with the PD control also depends on the zero at 
s = -Kp/KD, which could have a significant effect on the overshoot of the step 
response. 
With reference to the steady-state analysis, the forward-path transfer function of the 
system with tachometer feedback is 
Y(s) 
E(s) s(s + 2?;@n + K,{u~) (9-211) 
Because the system is still type l, the basic characteristics of the steady-state error are not 
altered by the tachometer feedback~ that is, when the input is a step function, the steady­
state error is zero. For a unit-ramp function input, the :steady-state error of the system i:s 
(2~ + K1w11)/wm whereas that of the system with PD control in Fig. 9-3 is 2t/w11• Thus.for 
a type 1 system, tachometer feedback decreases the ramp~error constant Kl. but does not 
affect the step~error constant Kp. 
9-11 Minor-Loop Feedback Control 603 
9-11-2 Minor-Loop Feedback Control with Active Filter 
Instead of using a tachometer, an active filter with RC elements and op-amps can be used to 
reduce cost and save space in the minor feedback loop for compensation . We illustrate this 
approach with the following example. 
EXAMPLE 9-11-1 Consider that, for the second-order sun-seeker system in Example 9-6-1, instead of using a series 
controller in the forward path, we adopt the minor-loop feedback control, as shown in Fig. 9-72(a), with 
2500 
Gp(s) = ( ) (9-212) 
and s s+ 25 
() K1s 
Hs =--1 + Tv (9-213) 
To maintain the system as type I, it is necessary that H(s) contain a zero at s = 0. Eq. (9-213) can be 
realized by the op-:unp circuit shown in Fig. 9-72(b). This circuit cannot be applied as a series controller 
in the forward path, because it acts as an open circuit in the steady state when the frequency is zero. As a 
minor-loop controller, tht: zero-transmission prope11y to de signals does not pose any problems . 
The forward-path transfer function of the system in Fig. 9-72(a) is 
0,,(s) Gp(s) 
0e(s) = G(s) = 1 + Gp(s)H(s) 
2500(1 + Ts) (9-214) 
s!(s + 25)( l +Ts)+ 2500K 1] 
The characteristic equation of the system is 
Ts3 + (2ST + 1 )s2 + (25 + 2S00T + 2500K1 )s + 2500 = 0 (9-215) 
To show the effects of the parameters K, and T, we construct the root contours of Eq. (9-215) by first 
considering that K1 is fixed and Tis variable. Dividing both sides of Eq. (9-215) by the terms that do 
not contain T, we get 
Ts(s2 + 25s + 2500) l+ =0 
s2 + (25 + 2500K, )s + 5000 (9-216) 
When the value of K1 is relatively large, the two poles of the last equation are real with one very close 
to the 01igin. ft is more effective to choose K, so that the poles of Eq. (9-216) are complex. 
+01-+ G,,(s) 
-t~ __ ___,~-H(-s)--,-----< 
(a) 
(b) Figure 9-72 (a) 
Sun-seeker control 
system with minor­
loop control. (b) Op­
amp circuit 
realization of 
KtS 
1 +Ts· 
604 ~ Chapter 9. Design of Control Systems 
jm 
j70 
s-plane 
j60 
j48.4 
j40 
)33.07 
j30 
j20 
jIO 
o-r T=0.006 T=oo 
-70 -56.7 -37.5 -20 -12.5 0 
-j33.07 
-j48.4 
0.01 
Figure 9-73 Root contours of Ts3 + (25T + l)s2 + (25 + 2500Kt + 2500T)s + 2500 = 0, 
K, = 0.02. a 
Fig. 9-73 shows the root contours of Eq. (9-215) with Ki= 0.02. and T varies from Oto oo. 
When T = 0.006, the characteristic equation roots are at -56.72, -67.47 + j52.85, and 
-67.47 -j52.85. The attributes of the unit-step response are as follows: 
Maximum overshoot = 0 
tr = 0.04485 sec 
ts= 0.06061 sec 
!max = 0.4 sec 
The ramp-error constant of the system is 
Kv = }~o sG(s) = I +1~gOK, (9-217) 
Thus.just as with tachometer feedback. the minor-loop feedback controller ofEq. (9-213) reduces the 
ramp-error constant K11, although the system is still type 1. "'I 
9-12 A Hydraulic Control System .,.. 605 
.._ 9-12 A HYDRAULIC CONTROL SYSTEM 
In this case study, we model a four-way electro-hydraulic-valve control of a linear actuator. 
After deriving the mathematical model for the system, we apply the model to do position 
control for three different applications: 1) robot ann joint (translational system), 2) 
dropping a disk into a hole (rotational system), and 3) variable load. At the end, we 
design P, PD, PI, and PID controllers for the robot-arm-joint system. 
A schematic diagram of the system for the first application (robot arm joint) is shown 
in Fig. 9-74. The diagram is the same for all the applications except for the load. This 
system consists of a double-acting single rod linear actuator, a two-stage electro-hydraulic 
valve, controller circuitry, and potentiometer. The input to the system is the voltage 
corresponding to the desired output position of the load. The output position is fed back 
through the potentiometer. The output voltage of the potentiometer gets subtracted from 
the input voltage to produce the error signal. This error signal is used to control the position 
of the main valve displacement, which controls the pressure level and flow rate entering and 
leaving the linear actuator. The output force exerted by the linear actuator rod is directly 
proportional to the pressure differ~nce between two sides of the piston. 
9-12-1 Modeling Linear Actuator 
A double-acting single rod actuator is shown in Fig. 9*75. We call it double acting since its 
piston can be forced in both right and left directions. The direction of the piston movement 
depends on the pressure difference on the two sides of the piston: port A and port B. We call 
this actuator single rod since the piston is connected to only one rod. 
Linear Actuator 
Two stage electro~hydraulic valve 
Figure 9-74 Schematic diagram of the system for the robot arm joint. 
606 t-Chapter 9. Design of Control Systems 
PortB 
Port A F 
Figure 9-75 Schematic of 
double-acting single rod 
actuator. 
The hydraulic fluid can enter and exit the actuator from either port A or port B. The 
magnitude of the flow and pressure of ports A and B are controlled by the four-way valve 
explained in the following section. For now, we want to develop a relationship between 
the fluid pressures in port A and port B, the area of the piston (A), and the displacement of 
the piston rod. 
We can take sides A and B of the piston to have the same area A. Ignoring the pressure 
transient effect of the actuator, we can express the applied force F to the actuator as 
F = (APA -APB)TJJ (9-218) 
Note that in Eq. (9-218) 11is the force efficiency of the actuator, which is due to the friction 
of the piston and the viscous shear of the hydraulic fluid. The force efficiency is al ways less 
than one. For ideal actuators, we can consider the force efficiency to be one. 
Volumetric efficiency, "1/v, is another source of non-ideality in linear actuators. The 
volumetric efficiency will always be less than one due to hydraulic fluid compression and 
leakage past the piston. We can express volumetric efficiency as 
Av 
T/v =-QA (9-219) 
where A is the area of the piston, and v is the velocity of the piston. For an ideal case, we can 
neglect the leakage and consider the hydraulic fluid to be incompressible. For an ideal case, 
we can write 
QA =Av =Az (9-220) 
This equation is based on the law of conservation of mass in fluid mechanics shown in Eq. 
4-124. 
9-12-2 Four-Way Electro-Hydraulic Valve 
The four-way electro-hydraulic valve is a two-stage control valve that takes voltage as 
input and provides the required fluid flow and pressure to the actuator. The first stage of 
the valve is an electrically actuated hydraulic valve, which controls the displacement of 
the spool of the second stage of the valve. The second stage is a four-way spool valve, 
which controls the fluid flow and pressure into and out of ports A and B of the actuator. 
The first stage itself is not capable of overcoming opposing spring and flow forces; 
therefore, the second stage is required. Fig. 9-76 shows the schematic of the electro­
hydraulic valve. 
From Figs. 9-75 and 9-76, we can see that the displacement of the main spool is 
controlled by the left and right flow rates, which are controlled by the displacement of the 
P, x,,lL 
Qs,Ps 
----+ ---..-..-------. 
l ~i r···········~---·,j 
---<!3----¢.. __ V "'""" 9--12 A Hydraulic Control System ~ 607 
Figure 9-76 Electro~hydraulic 
two-stage four-way valve. 
pilot spool. The control valve consists of a two-way critically centered valve, which has a 
pilot spool attached to a torque motor. The output from the servo amplifier actuates the 
torque motor and controls the displacement of the pilot spool. 
The displacement of the pilot spool Xe is directly proportional to the output voltage of 
the servo amplifier. When the main spool is centered, there are no flow rates and both sides 
of the main spool are zero. We look at the operation of the valve around an operating point 
to be able to use the linearized flow equations derived in the following sections. At the 
nominal operating conditions, 
1 
Xm =Xe= 0, Po= Pso -Pno = Pso -P.4.0 = zPso, and Pr= 0 
where x111 is the displacement of the main valve, xl. is the displacement of the pilot spool, 
PAO and Pno are pressure in the lines going from the main valve to the actuator. and Pr is the 
pressure of the return line to the reservoir. Note that~ during the valve operation, the supply 
pressure coming from the pump is kept constant and equal for both the main valve and the 
control valve. 
Orifice Equation 
First, lefs see what happens as the fluid passes through an orifice. Consider Fig. 9-77, 
which shows a flow passage with a sharp-edged orifice separating two sides of the flow 
passage. The classic orifice equation for the fluid flow can be written as 
(9-221) 
608 Chapter 9. Design of Control Systems 
Figure 9-77 Fluid passing through an orifice. 
where Q is the volumeuic flow rate through the orifice, Ao is the cross-sectional area of the 
01ifice, p js the fluid densjty, P., is the fluid pressure before passing through the orifice, P,1 is the 
fluid pressure after passing through the orifice, and Cc1 is the discharge coefficient and is given by 
A2 
(9-222) 
where A0, A1 and A2 are shown in Fig. 9-77. 
Liberalized Flow Equations for the Four-Way Valve 
In the orifice equation, we note that A0 and Pa are both variables. A, the opening area of the 
valve, is a function of the displacement of the spool. Using Taylor series, we can write Eq. 
(9-221) as 
(9-223) 
For Eq. (9-223) to be valid, the operating conditions of the valve should not deviate too 
much from the nominal operating conditions. ff we take xo = 0 and Po = Pso -P130 = 
I . Pso -PAO= 2Pso, we can wnte Eq. (9-223) as 
(9-224) 
Q,,P,. Qs.Ps 
Q,. 
Figure 9-78 Main valve schematic. 
9-12 A Hydraulic Control System ~ 609 
T 
h 
I----+ J +--I figure 9R79 Rectangular valve-port geometry. 
where Kq is ca1led flow gain and is given by 
(9-225) 
and Kc is the pressure-flow coefficient and is given by 
Kc_.= ACJ 
J2p(Pso -P.40) {9-226) 
The term !~ I can be evaluated based on the valve-porting geometry. For the rectangular 
xo 
geometry shown in Fig. 9-79, we can write 
A =h; (9-227) 
where~ is the open distance of the valve port and his the width of the valve port. For the 
open-centered valve shown in Fig. 9-79, 
~=x+u. (9-228) 
where x is the displacement of the spool and u is the fixed underlapped dimension. 
Therefore, 
Now we can write the following: 
where 8A=h 
8x (9-229) 
(9-230) 
(9-231) 
(9-232) 
Let's now apply the linearized flow equation to the open-centered four-way valve shown 
in Fig. 9-76. For the four-way valve, ports A and B are used for directing flow to and 
610 ~ Chapter 9. Design of Control Systems 
from the linear actuator. To direct flow into port A and receive flow from port B, the main 
spool moves to the right, thus allowing fluid flow from the supply line to port A and, at the 
same time, allowing fluid flow from port B to the return line. The flow rate and pressure 
levels at ports A and Bare the function of the valve displacement Xm, When modeling the 
whole system, we can neglect the pressure drop in the pipelines connecting ports A and B 
of the linear actuator to ports A and B of the four-way valve. Hence, we can assume 
pressure levels and flow rates at ports A and B of the four-way valve are the same as 
pressure levels and flow rates at ports A and B of the linear actuator. 
Now consider the main spool is moved to the right by a displacement Xnz. Using 
Eq. (9-232), we can write 
(9-233) 
1 
Q2 = 2Qo + KqXm + Kc(Ps -PA) (9-234) 
(9-235) 
(9-236) 
Note that, in the above equations, we can use the same flow gain, Kq, and the same pressure­
flow coefficient, Kc, for all the metering lands because the nominal pressure across each 
metering land is equal to half the supply pressure Ps/2 and Pr= 0. 
The volumetric flow rates into and out of the actuator can now be expressed as 
QA= Q2 -Qi = 2KqXm -2Kc(PA -P.,;/2) 
Qs = Q4 -Q3 = 2KqXm + 2Kc(Ps -Ps/2) (9-237) 
(9-238) 
Note that the above flow equations are valid for open-centered four-way valves. For other 
valve designs such as critically centered or closed-centered designs, the flow equations are 
different. For critically centered valves, such as the control valve in Fig. 9-76, the flow 
equation can be expressed as 
(9-239) 
The flow-rate equations into and out of the actuator are very important in control analysis, 
which will follow. The reason is that these equations enable us to relate the flow rate and the 
pressure level, which delivers power to the actuator. Using these equations, we are able to control 
the displacement and velocity of the linear actuator (which depends on pressure level and the 
flow rate delivered to ports A and B of the actuator) based on the main spool displacement Xm-In 
other words, for this open-centered four-way valve control, we can change flow rate and pressure 
level simultaneously using a single variable of the main spool displacement x,n-
Relationship between Input Voltage and Main Spool Displacement Xm 
Because the control valve is critically centered, the flow equation of the pilot spool can be 
expressed as 
Qp = KqXc (9-240) 
9-12 A Hydraulic Control System • 611 
Proportional 
controller K,. 
Control valve 
Figure 9-80 Two-stage valve block diagram. Main valve 
Assuming an incompressible fluid, the interaction between the two stages can be 
described by 
dxm 
Q,, =Am dt (9-241) 
where Am is the area of the main spool. The displacement of the pilot spool can be 
expressed as 
Equating Eq. (9-241) and (9-242), we get 
Am dxm KaKrVin=-­Kq dt (9-242) 
(9-243) 
For the two-stage valve alone (ignoring the output position feedback for the moment)~ 
using Laplace transforms and assuming zero initial conditions, we have 
X ( ) _ KaKrKq V· ( ) mS- A ,nS 
mS 
and 
Vi,,(s) = Vdesired -KfXm(s) 
where Xm is the Laplace transform of Xm-
The transfer function of the two-stage valve can be expressed as 
where Xm(s) ---=----
Vde.vired Kt(I + Tes} 
Am Tc==---­KqKaKJKr (9-244) 
(9-245) 
(9-246) 
(9-247) 
We can represent the two-stage valve with the block diagrams in Figs. 9-80 and 9-8 I. 
Two-stage valve characteristics 
Figure 9-81 Two-stage valve block diagram incorporating Eq. (9-247). 
612 ..,. Chapter 9. Design of Control Systems 
9-12-3 Modeling the Hydraulic System 
Fig. 9-82 shows the schematic diagram of the whole system. In the following sections, let 
us rewrite the mathematical equations we derived for each component. 
Linear Actuator 
X,nL 
B 
Two-siage electtu•hydraulic valve I 
i --[~}-'. __ _ 
~ ~ K, . ~--¢· -·----1--__ h __ _::-:::~___J 
VaesLd-0·--Zdesired 
Figure 9-82 Schematic diagram of the whole translational system. 
Force Balance Equation for an Ideal Linear Actuator 
If the rod of the linear actuator is used for opposing a load force FL in the z direction. using 
Eq. (9-247), we can express the force balance equation for the rod as 
Fi= A(PA -Ps) (9-248) 
where we assume the force efficiency to be one. 
Expressing the Pressure Level PA and the Pressure Level PB 
Substituting Eq. (9-220) into Eq. (9-237) and rearranging the terms. we can express PA as 
Kq A . p 
PA = Kc Xm -ZKc Zour + s/2 (9-249) 
9-12-4 Applications 9-12 A Hydraulic Control System 613 
Substituting Eq. (9-220) into Eq. (9-239) and rearranging the terms. we can express P8 as 
P Kq A. P 
B = --K Xm + 2K Zout + s/2 
C: C (9-250) 
Expressing the Pressure Difference Between Two Sides of the Linear Actuator 
We can express the pressure difference, PA -Po, by subtracting Eq. (9-249) from Eq. (9-250): 
P 2Kq A . 
A -Pa = -Xm --Zour Kc Kc (9-251) 
General Equation 
Assuming an ideal actuator where force and volume efficiencies are one, and by 
substituting Bq. (9-248) into Eq. (9-251), we get 
(9-252) 
Eq. {9-252) is the general equation that will be used to find the transfer functions for 
different applications in the following section. 
In this section we apply the system model in three different applications: translational 
motion, rotational system, and variable load. 
Position Control of a Hydraulic System (Translational Motion) 
In this application, the linear actuator rod is used to move a mass, M; a spring, kL; and a 
damper, DL in the z direction, as shown in Figure 9-82. 
For the two-stage valve alone, 
(9-253) 
(9-254) 
The transfer function of the two-stage valve can be expressed as 
X,,,(s) I ---=----v desired R;"r(l + Tc.<t) (9-255) 
where 
(9-256) 
We can represent the two-stage valve with the block diagram in Fig. 9-81. 
614 • Chapter 9. Design of Control Systems 
To maintain position control of the actuator, a voltage VO is fed back from the actuator 
displacement z: 
Vo= hZ.mt (9-257) 
where h is the gain of the transducer. The input voltage to the two-stage valve Vermr can be 
expressed as 
Verror = Vdesired -Vo= Vdesired -hzout (9-258) 
It is desired to have position as input instead of voltage. As a result. a potentiometer is used 
to convert the desired input Zdesired to the desired voltage Vc1esired• The relationship can be 
expressed as 
V desired = hZdesired 
Using general Eq. (9-252)~ the equation-relating input (main valve displacement Xm) and 
output (actuator displacement Zout) can be expressed as 
(9-260) 
From the valve equation derived above, we know that main valve displacement Xm can be 
expressed as 
So the transfer function is 
where Tc = KqKaKJ K," 
In the above equation, 
Kq = Flow gain of the control valve 
Kc = Pressure-flow coefficient 
Ka = Gain of the proportional controller 
K1 = Gain of the main spool feedback transducer (9-261) 
(9-262) 
K, = Ratio between the input voltage and displacement of the control spool 
Am= Area of the main spool 
M = Mass of the load 
D = Damping of the load 
k,. = Load spring stiffness 
h = Transducer gain 
A = Area of the actuator piston 
9-12 A Hydraulic Control System -1( 615 
h Kq 
Ams 
Main valve 
Figure 9-83 Translational system block diagram. Znut 
System chttracteristics 
We can represent the system with the block diagrams in Figs. 9-83 and 9-84. 
Position Control (Rotational System) 
In this application we refer to Fig. 9-85, where the linear actuator rod is used to move a 
mass, M, 8 radians. We start by writing the translational displacement of the rod in terms of 
the angular displacement e: 
(9-263) 
From the valve equation derived in the previous section, we know that main valve 
displacement Xm can be expressed as 
( I ) Xm 
AtO + TcS) 
Valve characteristics 
h 
(a) System characteristics 
System characteristics 
(b) 
Figure 9-84 Translational reduced system block diagram. (9-264) 
Zout 
616 1111-Chapter 9. Design of Control Systems 
Two-stage electro-hydraulic valve 
r--[I] 
K,--····· .. ··---~---·--········¢··-···-···· 
vd ... si't~-ITJ----
od(!sir('d Linear Actuator 
h 
Figure 9-85 Schematic diagram of a linear actuator rod used for rotational motion. 
Using Eq. (9-260) and Eq. (9-263) for the system shown, the equation-relating 
input (main valve displacement Xm) and output (actuator displacement Bour) can be 
expressed as 
2 2A"' _ AKq ( ') ) Bout ls + Kc Ls -2 Ke Xm (9-265) 
where J is the moment of inertia. Substituting Eq. (9-264) into Eq. (9-265), we can express 
the system transfer function as 
(9-266) 
Variable Load 
In this application, as shown in Figure 9-86, the linear actuator rod is used to exert force on 
a variable load. From the valve equation derived in the previous section. we know that main 
valve displacement Xm can be expressed in Laplace domain as 
(9-267) 
9-13 Controller Design ~ 617 
Linear Actuator 
Pr xmL QA 
Qs,P., -------+ 
Q:J 
~ 
QB 
Two-stage electro-hydraulic valve 
Figure 9-86 Schematic diagram of a variable load application. 
Using general Eq. (9-252), the general equation for the system shown in Fig. 9-88 can be 
expressed as 
I> 9-13 CONTROLLER DESIGN 
9-13-1 P Control (9-268) 
Consider the model of the hydraulic system shown in Fig. 9-88, where we added a 
proportional controller in the forward path. The new system block diagram is shown in 
Figure 9-87. 
( ) Zout 
P controller 
Valve characteristics Sysrem characteristics 
h 
Figure 9-87 Block diagram of the hydraulic system with a proportional controller. 
618 · Chapter 9. Design of Control Systems 
:r. 0.8 
0.6 
0.4 
~ 0.2 Pole~Zero Map 
i O ··~········································································ 
"@i 
.§ -0.2 
-0.4 
-0.6 
-0.8 
-1'----~~~~..__~~--~~-'-~~~~------' 
-15 -IO -5 0 Figure 9-88 Pole-zero 
Real Axis x1Q4 map of Eq. (9~269). 
This system assumes an ideal actuator where force and volume efficiencies are one. 
Kl/= 0.359 m2!s Flow gain of the control valve 
Kc = 1. 70* 10-11 m3 /Pa/s Pressure-flow coefficient 
Ka= 1 Gain of the proportional controller 
K1 = 1 Gain of the main spool feedback transducer 
Kr= 1 Ratio between the input voltage wid displacement of the control spool 
A,,, = 550 x I o-6 m2 Area of the main spool 
M = 4 kg Mass of the load 
D = 1 N-s/m Damping of the load 
kL = 2 Nim Load spring stiffness 
h = 1 Transducer gain 
A = 1.1 x 10-3 m2 Area of the actuator piston 
Substituting the preceding values into the hydraulic system transfer function [Eq. (9-262)], 
we get 
3.033*1010 
G(s) = (s + I.4235*105)(s + 653)(s + 7.02*10- 6) (9-269) 
The poles of Eq. (9-269) are shown in Fig. 9-88. Poles are at -142350, -653, and 
-7.02*10-6• 
We simplify the forward-path transfer function in Eq. (9-269) by neglecting the pole at 
-142350. The simplified hydraulic system transfer function is 
Gs _ 213041 
( ) -s2 + 653s + 0.0045 84 (9~270) 
We note that one of the dominant poles is very close to the origin; therefore, we can write 
the forward-path transfer function as 
Gs _ 213041 
()-s(s+653) (9~271) 
9-13 Controller Design -<11 619 
150 
100 sMplanc 
50 
0 
-653 
-326.5 
-50 
-100 
-150'---~--'-~~-'--~~....,_~~-'--~--'~~-L.~~~ Figure 9-89 Root loci of 
-700 -600 -500 -400 -300 -200 -100 0 Eq. (9-274). 
Applying a proportional controller, the forward-path transfer function becomes 
G(s) = 21!041 (Kp) 
S"' + 653s 
The closed-loop transfer function is 
Ts _ 21304l(Kp) 
( ) -s2 + 653s + 213041Kp 
The characteristic equation is written 
s2 + 653s + 213041Kp = 0 
The root loci of Eq. (9-274) are shown in Fig. 9-89. (9-272) 
(9-273) 
(9-274) 
By looking at the root loci in Fig. 9-90, we see that, depending on the value of Kp, we 
can get two real or two complex-conjugate poles. When KP = 0.500, we get a damping 
Step Response 
1.2 
QJ 0.8 -::::, 
t:::I 
~ 8 0.6 < 
0.4 
0.2 
0.005 0.01 0.015 0.02 0.025 0.03 0-035 O.o4 0.045 0.05 Figure 9-90 UnitMstep 
Time (sec) responses with P control. 
620 ~ Chapter 9. Design of Control Systems 
PD controller 
Valve charactcrisLics 
h 
Figure 9-91 System block diagram. System characteristics .. 
"OUI 
ratio of 1, and the system is critically damped. For values of Kp greater than 0.500, the 
system is underdamped, and for values of Kp less than 0.500, the system is overdamped. We 
also note that the system is stable for all the values of K p > 0. The step responses of the 
system for three different values of Kp are shown in Fig. 9-91. 
Toolbox 9-13-1 
Fig. 9-89 is obtained by the following sequence of MATLAB functions 
num = [3. 0333e+10]; 
den= conv(conv( [11. 4235e5] , [1 653]), [1 7. 02e-6]) 
pzmap(nunt,den); 
Fig. 9-90 is obtained by the following sequence of MATI.AB functions 
KP=l; 
KD=O; 
num = [1 653+213041*KD 213041*KP]; 
den= [1 653 213041*KP]; 
tf(num,den) 
rlocus(num,den) 
axis( [-700 O -11]) 
Fig. 9-91 is obtained by the following sequence of MATLAB functions 
KP=0.3; 
num = [O 213041 *KP] ; 
den= [1 653 213041*KP]; 
step(num,den) 
hold on; 
KP=0.5; 
num = [ O 213041 *KP] ; 
den= [1 653 213041*KP]; 
step(num,den) 
hold on; 
KP=2; 
num = [O 213041*KP]; 
den= [1 653 213041*KP]; 
step(num,den) 
hold on; 
9-13·2 PD Control 9-13 Controller Design '4 621 
TABLE 9-27 Attributes of the Unit-Step Response with P control 
Maximum Steady-State Error 
Kp Overshoot (%) zs(sec) t,(sec) Due to Unit Step 
2 16.3 0.0124 0.00253 0 
0.5 0.0179 0.0103 0 
0.3 0.0348 0.0191 0 
Table 9-27 summarizes the attributes of the system's unitwstep response for three 
different values of Kp, 
When poles are complex conjugates, as we increase Kp, the overshoot of the system 
increases; but the settling time and rise time of the system remain unchanged. Also note 
that steady-state error due to unit-step input decreases as KP increases. 
Consider the second-order forward-.path transfer function of the hydraulic system dis­
cussed in Section 9-13-1. Applying a PD controller, the forward-path transfer function 
becomes 
G(s) == 213041(Kp +Kvs) 
s(s + 653) 
The system block diagram is shown in Fig. 9-91. 
Now, let us set the performance specifications as follows: 
Settling time ts :5 0.005 sec 
Ma~iinum overshoot:$ 5% 
Steady-state error due to unit-ramp input :5 0.00061 
The closed-loop transfer function is 
21304l(Kp +Kos) 
T(s) = s2 + (653 + 213041Kv)s + 213041Kp 
The characteristic equation is written 
s2 + (653 + 213041Kv)s + 213041Kp = 0 
We start by finding the steady-state error for a unit-ramp input: 
I 1. 1 I 
ess ramp= lffis-+O 1 G( ) = 213041Kp +s s 1 + 653 (9-275) 
(9-276) 
(9-277) 
(9-278) 
Therefore, for the system to have steady-state error due to unit ramp~ 0.00061, we need 
Kp '?: 5. The damping ratio of the system for Kp = 5 can be expressed as 
{ = 653 ~::~3
04
l = 0.316 + 103.209Kv (9-279) 
622 "'° Chapter 9. Design of Control Systems 
If we wish to have critical damping, { = 1, the above equation gives KD = 0.0066. One 
thing we need to check is that this value satisfies the settling-time requirement. Settling 
time can be expressed as 
8 (9-280) ls= (653 + 213041Kv) 
We see that, for Kn~ 0.0044, we have lsS 0.005 sec. Therefore, with Kv = 0.006624, we 
can satisfy the settling-time requirement. We note that Eq. (9-280) is an approximation and, 
as damping ratio comes closer to one, the actual settling time will be higher; therefore. Ko 
must be higher than 0.0044 to satisfy the settling time for damping ratio of one. Never­
theless, we can still use the approximation and verify our answer by simulation once a 
value for Kv is found. Also, we need to make sure that, for the values found for Kp and Kn, 
the system is stable. Applying the stability requirement, we find that for system stability 
Kp > 0 and Ko > -0.00307 
Alternatively, we can use the system's root contours to find Kp and Kv. We can apply the 
root-contour method to the characteristic equation in Eq. (9-277) to examine the effect of 
varying Kp and K0. First, by setting K0 to zero, Eq. (9-277) becomes 
s2 + 653s + 213041Kp = 0 (9-281) 
The root loci of Eq. (9-281) are shown in Fig. 9-92. 
The code used to plot the root locus is given in Toolbox 9-13-2 for KD = 0. 
Alternatively you can use Toolbox 5-8-1. When Ko =f 0, the characteristic equation in 
Eq. (9-281) becomes 
213041Kvs 1 + Geq(s) = 1 + s2 + 653s + 213041Kp = O (9-282) 
The root contours for Kp = 1 and Kp = 5 based on the pole-zero configuration of Geq(s) 
are shown in Fig. 9-94. Note that we chose Kp = 5 to satisfy the steady-state en-or 
150 
100 s-plane 
50 
() 
-653 
'-326.5 0 
-50 
-100 
Figure 9-92 Root loci of -1501--~-'-~~-'-~~........._~~-'--~--'"--~-'-~~-' 
-700 -600 -500 --400 -300 -200 -100 0 Eq. (9-281), 
1500...-~-r--~...-~.....-~-r-~-.-~----..~----.~--r------. 
0.69"···· 
·-.... llr ....... 11 
s-plane •••••• 
·K~·· 1000 
500 
0 ········ ..... 
-500 
-1000 ••. -·········· .. 
....... "' .. 
0.69 •••• -·· 
-1500 •• 
-1800 -1600 -1400 -1200 -1000 -800 -600 -400 -20() 0 9-13 Controller Design 4 623 
Figure 9-93 The root 
contours of Eq. (9-281) or 
Eq. (9-277) when Kv = 0. 
requirement. For Kp:::::; 5 and Kn= 0, the characteristic equation roots are at -326.5 ± 
j919.08 and the damping ratio of the closed-loop system is 0.316. When the value of Kn is 
increased, the two characteristic equation roots move toward the real axis along a circular 
arc. The dashed line shows the points on the s-plane with the constant damping ratio of 
0.69, which corresponds to 5% overshoot. We see that this line intersects the root contour 
for Kp ::::: 5 at Ko = 0.00362. Because this value of K0 is not big enough to satisfy the 
settling-time requirement of less than 0.002 sec, we need a larger Kn, When K0is increased 
to 0.006624. the roots are real and equal at -1032.09t and the damping is critical. At this 
point Kv ~ 0.0044; therefore, our settling-time requirement is met. When Kp = 1 and 
KD ::::: Qt the two characteristic equation roots are at -326.5 ± j326.3. As Kn increases in 
value, the root contours again show the improved damping due to the PD controllel'. 
Fig. 9-95 shows the unit-step responses of the closed-loop system without PD control and 
with K,, = 5 and Ko= 0.006624. With the PD control, although K0 is chosen for critical 
damping, the maximum overshoot is 0.888%. This is because of the zero at s = -:: for the 
Step Response 
1.4 ...--.......---.----.......--""T"""""---.-----r---.----r---, 
1.2 
-8 0.8 .s 1 < 0.6 
0.4 
0.2 PD control 
Kp = 5, Kn= 0.0066 I No PD control 
I 
figure 9-94 Unit-step 
responses with and without 
O.OOZ 0.004 0.006 0.008 0.01 0.012 0.014 0.016 0.018 PD control using Toolbox 
Time (sec) 9-13-3. 
624 -. Chapter 9. Design of Control Systems 
Zout 
PI controller 
Valve characteristics System characteristics 
"---------1 h 
Figure 9-95 System block diagram with PI controller. 
closed-loop transfer function. WhenKp = 5 and Ko= 0.0066, the zero is at-754.5, which is 
close to the dominant poles of the system at-1032.09; therefore, it has a significant effect on 
the transient response of the system. Note that the zero makes the response faster by lowering 
the rise time and the settling time of the system. 
Toolbox 9-13-2 
Fig. 9-94 is obtained by the following sequence of MATLAB functions 
%Closed loop transfer function for Kp=S 
sgrid(0.69); 
Kp = 5 ;Kd = le-6; 
for i = 1: 1 : 260 if (i == 222) 
Kd = CC (Kp*213041)A{O. 5) * 2)-653) /213041; % if this statement is not used 
then the graph will not continuous 
end 
num=[213041*Kd 21304l*Kp] ;den= [1653 O]; 
tf(num,den); 
[numCL,denCL]=cloop(num,den); 
T = tf(numCL, denCL) ; 
PoleData(:,i)=pole(T); 
Kd = Kd +3e-5; 
end 
plot(real(PoleData(l,:)),imag(PoleData(l,:)),real(PoleData(2,:)),imag(PoleDa.ta(2,:))); 
%Closed loop transfer function for Kp=l 
Kp=1; Kd=le-6; 
for i = 1: 1: 260 
end if Ci== 44) 
Kd = ( ( (Kp*213041)A(O. 5) *2)-653)/213041; 
end 
nurn=[213041*Kd 213041*Kp] ;den= [1653 O]; 
tf(num,den); 
[nurnCL,denCLJ=cloop(num,den); 
T = tf(numCL, denCL); 
PoleData(:,i)=pole(T); 
Kd = Kd +3e-5; 
hold on 
plot(real(PoleData(l,:)),imag(PoleData(l,:)),real(PoleData(2,:)),:i..mag(PoleData(2,:))); 
%open loop transfer function 
Kp = 1; Kd = 0 ; 
num =[21304l*Kd 213041*Kp]; 
den = [ 1 6 5 3 0] ; 
hold on 
rlocus(num,den); 
axis([-1800 0 -1500 1500]) 
step(nwn,den) 
hold on; 
KP=2 ;num = [O 213041*KP]; den= [1653 213041*KP); 
step(nwn,den) 
hold on; 9-13 Controller Design "4 625 
Table 9-28 summarizes the attributes of the unit~step response for K1, = 5 and different 
values of Kv, 
TABLE 9-28 Attributes of the Unit-Step Response with PD Control 
Ko Maximum Overshoot (%) 
0.001 23.9 
0.006624 0.888 
0.01 
Toolbox 9-13-3 
Fig. 9-94 is obtained by the following sequence of MATLAB functions 
Kp= 5;Kd= 0.0066; 
nwn =[21304l*Kd 213041*Kp]; 
den= [1 653 OJ; 
tf(num,den); 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on 
Kp = l;Kd= O; 
num =[21304l*Xd 213041*Kp]; 
den= [1 653 0]; 
tf(num,den); 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) ts(sec) 
0.00794 
0.00215 
0.00363 tr(sec) 
0.00141 
0.00138 
0.00126 
At this point we need to go back to the original hydraulic transfer function expressed in 
Eq. (9-269), which has three poles. We need to make sure that the third pole is still far away 
from the origin so that the second-order approximation is valid. In the root locus of the pure 
proportional control system, the third pole moves to the left as K increases; therefore, the 
second-order approximation is valid for any value of K ~ 0. For the PD control design system, 
we introduce a zero in the forward path, which changes the behavior of the third pole. In thi~ 
case, the third pole starts to move toward the origin as we increase Kv. For KP = 5 and 
Ko= 0.0066~ the poles of the closed-loop third-order system are at-14093,-1090, and-980. 
626 · Chapter 9. Design of Control Systems 
9-13-3 Pl Control Because the third pole is still far away from the origin relative to the other poles, it can be 
safely neglected, and OW' second-order approximation holds. 
Consider the second-order forward-path transfer function of the hydraulic system discussed 
in Section 9-13-1. Applying a PI controller, the forward-path transfer function becomes 
G(s) = 21304lKp(s + K[/Kp) 
s2(s + 653) 
The system's block diagram is shown in Fig. 9-95. 
Let the time-domain performance requirement be as follows: 
Settling time ts ~ 0.06 sec 
Rise time t,. :::; 0.01 sec 
Maximum overshoot:::; 1.52% 
Steady-state error due to parabolic input ~ 0.2 
We start by finding the steady-state error for a ramp input: 
I r 1 1 
ess parabolic= Ims-o s2G(s) = 213041KJ/653 (9-283) 
(9-284) 
Therefore, for the system to have steady-state error due to parabolic input$ 0.2, we need 
K1 ~ 0.015. Later we need to make sure that the value of K1 used is above 0.015. 
The characteristic equation of the closed-loop system is 
s3 + 653s2 + 213041Kps + 21304IK1 = 0 (9-285) 
Applying Routh's test to Eq. (9-277) yields the result that the system is stable for 
0 < :; < 653. This means that, if the zero of G(s) be placed too far to the left in the 
left-half s-plane, the system will be unstable. 
Let us place the zero at -K1 /KP relatively close to the origin. For this case~ the most 
significant poles of the forward-path transfer function without the PI controller are at -653 
and 0. Thus K1 / K11 should be chosen so that the following condition is satisfied 
:: ~653 
The root loci of Eq. (9-283) with Ki/ Kp = 5 are shown in Fig. 9-96. Notice that one of the 
poles always has a value close to zero while the other two poles behave the same as those 
shown in Fig. 9-93, which is for Eq. (9 .. 281). 
With the condition in Eq. (9-286) satisfied, the pole near zero is effectively cancelled 
by the zero at -K, /KP~ and we are left with the poles of Eq. (9-283). Therefore, Eq. (9-284) 
can be approximated by 
213041Kp 
G(s) ~ (s2 + 653s + 213041) (9-287) 
9-13 Controller Design • 627 
IO s-plane 
5 
Kp 
0 -323.9 
-5 
-10 
-15~~_,_~~~~~~--~~~~~~~~~ Figure 9-96 Root loci of 
-700 -600 -500 -400 -300 -200 -100 o Eq. (9-283). 
Let us assume we wish to have a relative damping ratio of 0.9. From Eq. (9-287). the 
required value of Kp for this damping ratio is 0.62. Thus with Kp = 0.62 and Ki = 3.09, we 
find the roots of the characteristic equation of Eq. (9-285): 
s = -5.13 -323.94 + j152.8 and -323.9.3 -jl52.8 
In this case we see that the real pole of the closed-loop system is very close to the 
zero at -K1 / Kp so that the transient due to the real pole is negligible. and the system 
dynamics are essentially dominated by the two complex poles; therefore, Kp = 0.62 will 
give us a damping ratio that is close to 0.9. In general, whens takes on values along the 
operating points on the complex portion of the root loci, we can neglectthe effect of the 
real pole of the closed-loop system and use Eq. (9-287) to find the system 
characteristics. 
Table 9-29 summarizes the attributes of the unit-step response for various values of 
Kr/ Kp with Kp = 0.62. which corresponds to a relative damping ratio of 0.9. The results 
verify that PI control reduces overshoot at the expense of longer rise time. 
Fig. 9-97 shows the unit-step response of the hydraulic system with PI control with 
Kp = 0.62 and Kr = 3.09. The unit-step response is the same for system with P control 
designed in Section 9-13-1. 
TABLE 9-29 Attributes of the Unit-Step Response with PD Control 
Maximum 
Kr/Kp Ki Kp Overshoot(%) (s(Sec) !,(sec) 
0 0 5 35.l 0.0108 0.00131 
20 12.4 0.62 8.78 0.0856 0.00688 
12 7.44 0.62 5.59 0.099 0.00723 
5 3.09 0.62 2.52 0.0555 0.00778 
3 1.86 0.62 1.6 0.0121 0.0078 
l 0.62 0.62 0.0126 0.00787 
0.5 0.31 0.62 0.0128 0.00791 
628 ~ Chapter 9. Design of Control Systems 
Step Response 
I.4 I 
PI control 
1.2 - K1 = 3.09, Kr= 0.62 
/ 
u ( ] 0.8 
:a \PD control 
Kp = 5, KD = 0.0066 
~ 0.6 
0.4 
0.2 Figure 9-97 Unit-step 
responses of the system with 
0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 PD and Pl control using 
Time (sec) Toolbox 9-13-1. 
Toolbox 9-13·4 
Fig. 9-97 is obtained by the following sequence of MATLAB functions 
Ki=3.09 
Kp = 0.62 
num = [ 213041 *Kp 213041 *Ki/Kp] 
den :: [ 1 6 5 3 O O] ; 
tf(num,den); 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on 
Kp = 5; 
Kd= 0.0066; 
num = [ 213041 *Kd 213041 *Kp] ; 
den = [ 1 6 5 3 0] ; 
tf(num,den); 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on 
9-13-4 PID Control 
Consider the second-order forward-path transfer function of the hydraulic system discussed 
previously. Applying a PIO control, the forward-path transfer function of the plant is 
G(s) = 213041(KPI + KDis)(Kn + K12/s) 
s(s + 653) 
The system's block diagram is shown in Fig. 9-98. 
Let the time-domain performance requirements be as follows: 
Rise time tr ~ 0.003 sec 
Settling time ts ~ 0.004 sec (9-288) 
9-13 Controller Design -. 629 
Zout 
., 2A2 Ms~+(D+-)s+ki 
Kc 
PID controller 
Valve characteristics System characteristics 
h 
Figure 9-98 System block diagram with PID controller. 
Maximum overshoot ~ 1.2% 
Steady-state error due to parabolic input ~ 0.2 
We realize that we need a PID controller to fulfill the above requirements. First, we apply 
the PD control with the transfer function KP1 + km s. The forward-path transfer function 
becomes 
G(s) = 213041 (KPI + Kms) 
s(s + 653) (9-289) 
Table 9-28 shows that the PD controller that can be obtained from the settling time 
standpoint is with Km = 0.0066 and Kp1 = 57 and the maximum overshoot is 0.888%. The 
rise time and settling time are well within required values. Next we add the PI controller, 
and the forward-path transfer function becomes 
G(s) =: 1406.01KP2(S + 757.58)(s + K12/Kn) 
s(s2 + 653s) (9-290) 
Following the guidelines of choosing a relatively small value for Kn/ Kn, we let 
K12/KP2 = 5. Eq. (9-290) becomes 
G(s) = 1406.0?Kn(s + 757.58)(s + 5) 
s(s2 + 653s) (9-291) 
Table 9-30 gives the time domain performance characteristics along with the roots of the 
characteristic equation for various values of Kn, 
TABLE 9-30 Attributes of the Unit-Step Response with PIO Control 
Maximum Roots of 
Kn Overshoot (%) ts(sec) t,.(sec) Characteristic Equation 
2 1.23 0.00113 0.000718 -5 -799.5-2660.6 
1.2 1.27 0.00178 0.00116 -5.0 -14464.5 -870.3 
0.9 1.2 0.00232 0.00151 -5.02 -956.7 ±j200.2 
0.62 1.05 0.00327 0.00213 -5.02 -759.9 ±j282.4 
0.40 0.91 0.00505 0.00321 -5.04 --605.9 ±j237 .8 
0.20 0.00983 0.00622 -5.08 -542.6 -386.5 
630 ._ Chapter 9. Design of Control Systems 
Step Response 
PD control 
Kp = 5 Kn= 0.0066 1.1 
PID conttol 
1.05 / Kp=3.12K 1= 15.5 K0=0.0041 
-g 
i= 0.95 t 
0.9 ~ Picontrol 
0.85 Kp = 0.62 K1= 3.09 
0.8 Figure 9-99 Unit­
step responses with 
PD, PI, and PIO 
O 0.005 0.01 O.ot5 0.02 0.025 0.03 0.035 0.04 0.045 control using 
Time (sec) Toolbox 9-13-5. 
Setting Kp1 = 5, Km = 0.0.0066, KP2 = 0.62, and K12 = 5Kn = 3.09, the following 
results are obtained for the parameters of the PID controller. 
Kp;;;:;;: 3.12 
K1 = 15.5 
Ko= 0.0041 
Fig. 9-99 shows the unit-step responses of the system with the PID controller, as well as 
those with PD and PI controls designed before. 
Toolbox 9-13-5 
Fig. 9-99 is obtained by the following sequence of MATLAB functions 
Kpl=S;kdl=0.0066; 
num= [21304*kdl 21304*Kpl] ;den= conv([1 O), [16531); 
tf(num,den) 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on 
Kp2=0,62;KI2~S*Kp2; 
num = conv(conv( [O 1406. 07*Kp2], [1757. 58]), [1 KI2/Kp2]) 
den= conv( [l OJ, [1 653 OJ); 
tf(num,den) 
[numCL,denCL]=cloop(num,den); 
step(numCL,denCL) 
hold on 
Kp2=2 ;num :=: conv(conv( [O 1406. 07*Kp2], [1 755. 58]), [1 5]); 
den= [1 653 O OJ; 
tf(nurn,den) 
(numCL,denCL]=cloop(num,den); 
tf(nuntCL,denCL) 
step(numCL,denCL) 
9-14 MATLAB Tools and Case Studies < 631 
9-14 MATLAB TOOLS AND CASE STUDIES 
In this section we will go through the steps involved in finding some of the results and 
displaying many of the graphics from the examples in this chapter using the ACSYS 
software. The tools involved are all contained in the Controller Design Tool. This tool 
allows the user to conduct the following tasks: 
• Enter the transfer function values in polynomial form. (User must use the tftool as 
discussed in Chapter 2 to convert the transfer function from pole-zero-gain form 
into polynomial form.) 
• Obtain the step, impulse, parabolic , ramp, or other type input time responses . 
• Obtain the closed-loop frequency plots. 
• Obtain the phase and gain margin Bode plots and the polar plot of the loop transfer 
functions (in a single feedback loop configuration). 
• Understand the effect of adding zeros and poles to the closed-loop or open-loop 
transfer functions. 
• Design and compare various controllers including PIO, lead, and lag 
compensators . 
To run the Controller Design Tool, type "Acsys" at the MATLAB command line and click 
the appropriate button on the menu. Fig. 9-100 will appear on the screen. 
IIE!lm!Zll:ll!llllmllil:m:lllCl!l! !l!!Zl! ........ .... r::::::a::;::::=== =:::====-:-----, ,;;.fgJ& -~-_ .. _ °"'""I'"'(--.. ~-.... -~~·-====--,..._ 
'r 
I 
Tlill\Sf1tfcronil:l'lt 1 
jC!lcl(ontffl.-_.todl.t1191!'!'1;r1~1J Jll(ICMj I 
F I I 
U(,) -t IJ 
I 
01!pla1 o~ Co,m,¥..r:t LN ( 
R~:.et I 
Figure 9-100 Main Controller Desigo Tool window. J 
632 Chapter 9. Design of Control Systems 
EXAMPLE 9-2-1 Recall from Example 9-2-1 the forward-path transfer function for the altitude-control system was 
Revisited G(s) __ 4500K (9-292) s(s + 361.2) 
The design constraints for this problem were as follows: 
Steady-state error due to unit-ramp input = 0.000443 
Maximum overshoot :S 5% 
Rise time t,. :S 0.005 sec 
Settling time t5 :S: 0.005 sec 
To enter the transfer function into the CONTROLS tool, click on the G(s) box in the 
transfer function input panel. For the moment we will leave the value of K as 1, so in the 
numerator text box, enter [4500], and in the denominator text box, enter ll.361.2,0], as is 
pictured in Fig. 9-101. 
Pressing the enter button will display the current closed-loop transfer function. For a 
more accurate representation of the transfer function, press the "Display on Command 
Line" button and refer to the MATLAB command window. 
Now click on the C(s) box and enter the value [18 l .2]. Click on che "Step Response " 
option from the "Time Response" menu to see the step response of this system. The main 
window should now look like Fig. 9-102. 
Press the "Print To Figure" button, ~, and right-click on the resulting plot to see 
more information about the response. 
As in Example 9-2-1, we shall use a PD controller to improve the response of the 
system. We will use the root contour tool to see the effect that the PD controller has on the 
poles of the system. From the "Controller Design Tool" menu, choose the "PD design 
option." 
The Root Contour tool plots the poles of a system as functions of certain varying 
controller parameters. With the PD controller, the closed-loop transfer function is 
G(s) = E>y(s) = 815, ~65(Kp + Kos) 
E>e(s) s(s + 361.2) (9-293) 
Kp is held at l, and Ko will vary between the limits that we specify. Choose KD min to be 
0.001, choose K0 max to be 0.005, and choose 2000 steps. Press enter and you will see the 
4500 
G(s)= i========-
r1 ,361 .2,011 
Enter Cancel 
Enter coeficients of the polynomial s 
eg. for s3 + 3s -7 
enter 1 0 3 -7 Figure 9-101 Transfer function input 
module. 
Figure 9-102 Controller 
Design window showing 
closed-loop transfer function, 
step response, and poles of the 
system. 
Figure 9-103 Root contours 
of PD-controlled system from 
Example 9-2-1. 9-14 MATLAB Tools and Case Studies 633 
-- r---...... ----····-
ck,..-.,1 Lvo,, l\.•;.mi,:6:•1: Fuudluu: 
l__ H.1.·, 10:;. ll-... J+:tul.~+Kir~ In· 
r•lftl!\$1~r\llClll:N I~-~-----~ 10, .. 0,t: 
·1·.F z, . .-Lv)l 1o.1.,,: 
~ll'iU.G+H~-l.:?.1181 
/l[ii.l 
0 = zero, X = pole 
1000 
800 
600 
400 
(/) 200 ·x ., 
t' 0 ., 
C: ·5, ., 
.§ -200 
-400 
-600 
-800 
-1000 
-5000 -4000 -3000 -2000 
Real axis o, 
,rm 
Ill) 
600 
,00 X 
X 
·1~,--...,_,~'°,---...,_ ,00~---=.so;:------! ....... 
X 
X 
-1000 0 
634 Chapter 9. Design of Control Systems 
·.' SJSO Design Tool 
E.ile ~t '.;'.jew (;omperisatOfS ~nalysi> !ocils W.indow t!elp 
~ Current Cefl'4:)ensator 
~Ls)_-~ -----~li~J 
R I L,:~tJ I:, ic: (CJ 
150 
100 
50 
0 ···---·*-111------- -----if------- -----ll-ll. 
-100 
-150 
-~oo~---~~~o---~~~~---~:,.o~----:~~~~---,!~o~-_~,o-J-~-~~--~o 
R£ 1
""' I .. 
I Ri9111-cliek o~ the ptols for more design options 
Figure 9-104 Root loci of the system from Example 9-2-1. 
contour plot pictured in Fig. 9-104 in the axis in the top right of the window. Notice that this 
plot is similar to that in Fig. 9-8. The two X's correspond to the poles of the system with 
Ko = 0. You will notice that they are the same as the poles displayed in the lower right axis, 
which are the poles of the proportionally controlled system we entered earlier. Pressing the 
:+-1 ~) button below the axis will enable you to scroll through the different values of K0 with the 
arrow keys and see the corresponding poles. As Ko increases , the two poles of the system 
move together until their imaginary parts disappear. They then move apart on the real axis. We 
know that, for a second-order system such as this, two real and equal poles is a characteristic of 
a critically damped system. To find the va1ue of Ko that corresponds to a criti.ca1ly damped 
system, zoom in on the point where the two root contour lines meet on the real axis. To do this, 
click on the zoom-in button, ~. and then click and drag a box on the area you would like to 
enlarge. By scrolling through the values of K0, we can see that the two poles are real and equal 
for some value of K0 between 0.0017712 and 0.0017726. If we choose KD = 0.001772, then 
we have found exactly what was found analytically in Example 9-2-1. 
Now enter the PD controller values in the C(s) box by clicking on the box and entering 
181.2*[0.001772,l] in the numerator text box. After pressing enter, the new closed-loop 
transfer function will be displayed in the middle of the window and the poles of the new system 
will be plotted in the bottom axis. Notice that while the poles are not equal they are relatively 
close. To check whether we have met our design constmints, open the SISO tool by clicking on 
the Root Locus option in the Controller Design menu. Now from the Other Responses option 
from the Analysis menu, choose Step and press OK. You will now see the step response of the 
system plotted versus time. Right-click on the plot and choose charact~rislil:s frum the pop-up 
menu. Choose Peak Response to see the overshoot of the step response. A dot will appear at the 
maximum point on the response plot; holding the mouse over it will display the percentage 
9-14 MATLAB Tools and Case Studies · 635 
overshoot as 4.17%, which is within our constraint. Checking the other characteristics will 
show you that all the design constraints have been met. 
You wi11 notice that there are many examples in this book where multiple time­
responses are plotted on the same axes as in Fig. 9-107. The capability to do this is not built 
into the A CSYS software. However, there is a short tutorial in Section 9-11 that shows you 
the steps involved in plotting multiple responses on the same axes. 
Now let us repeat this same analysis using the SISO design tool, which is built into the 
Control System Toolbox, which is a component of MATLAB. Click on the C(s) block and 
change the value in the numerator text box back to [1]. 
To examine the performance of the proportional controller, we need to find the system 
root locus. The root locus of the system may be obtained by clicking the "Root Locus" 
option from the "Controll er Design Tool" menu, which will activate the MATLAB SISO 
design tool. Fig. 9-104 shows the root locus of system. To see the poles and zeros of G and 
H, go to the View menu and select System Data or, alternatively, double-click the blocks G 
or H in the top right corner of the block diagram in the top right corner of the figure. 
The squares in Fig. 9-104 correspond to the closed-loop system poles for K = 1. To see 
the closed-loop system time response to a unit-step input, select the Closed-Loop Step 
option from the Other Loop Responses category within the Analysis menu, which is 
located at the top of the screen shown in Fig. 9-105. Fig. 9-106 shows the unit-step response 
of the closed-loop system for K = l. You may also obtain the closed-loop system poles by 
selecting Closed-Loop Poles from the View menu in the SISO Design Tool window. Recall 
the poles of the closed-loop system are 
SJ ,2 = -180.6 ± v'32616 -4500K 
} l Tl Viewer for 5150 Design Tool -
0.9 ------• -· -· ---
0.6 J 
0.1 l 
06 
1 ~ 0.5 
£ 0.4 I 
nos Ill 015 , System: CIOsed Loop: r to y • 
I 1.0:rtoy 
, Rise Time (sec): 0.17 
I 
u~ n25 
rome (sec) n::5 04 0.45 
I LTI Viewer P Real. Time Update 
Figure 9-105 Unit-step response of the system from Example 9-2-1. (9-294) 
636 Chapter 9. Design of Control Systems 
) 5150 Desigr, Tool --• 
Eile ~t YJew ,ompensat:"ors Analysi~ IoDB ~indow t!elp 
~ Current Compensator 
'~~ q_s)=-~ _________ __,\ \~SJ 
RO'Jllc:u,Eo 1C) 
150 
100 
50 
!<! 
~ 0 ~ 
E 
-50 
Design constraint: settling lime., 0.005 sec. 
Lett-crick and drag to change se!Ung lime value. 
Figure 9-106 The root-locus diagram for Example 9-2-1, after incorporating the percent overshoot 
and the settling time as design constraints . 
Changing K, therefore, affects the pole locations . In the Root Locus windows , "C(s)" 
represents the controller transfer function; in this case, C(s) = K = 1. Hence, if C(s) is 
increased , the effective value of K increases , forcing the closed-loop poles to move together 
on the real axis and then ultimately to move apart to become complex. 
Incorporation of the Design Criteria: As a first step to design a controller, we use the 
built-in design criteria option within the SISO Design Tool to establish the desired pole 
regions on the root locus. To add the design constraints, choose the Root Locus option from 
the Edit menu. "New" must then be selected within the Design Constraint s option. The 
Design Constraints option allows the user to investigate the effect of the following: 
• Settling time 
• Percent overshoot 
• Damping ratio 
• Natural frequency 
In this case we have included settling time and percent overshoot as design constraints . Enter the 
two constraints as they are listed at the beginning of this example, one at a time. In order also to 
enter the rise time as a constraint, the user must first establish a relation between the dmnping ratio 
and the natural frequency using an equation for rise time. Recall that the approximate equations for 
rise time for a second-order prototype system were provided in Chapter 5. Because the settling 
time and the percent overshoot are more important criteria in this example, we will use them as 
primary constraints . After designing a controller based on these constraints, we will determine 
whether the system complies with the rise-time constraint. 
Fig. 9-106 shows the desired closed-loop system pole locations on the root locus after 
inclusion of the design constraints. Obviously, the poles of the system for K = 1 are not in 
9-14 MATLAB Tools and Case Studies 637 
·} Ed,t Compensator C · -· .,J.gJ~ 
Format: lzero!Pole Location 
Zeros: Polee 
Delete Real Imaginary Delete Reel Imaginary 
r 1-1/0001112 
Add Real Zero I Adcf Complex Zero I Add Reel Pole I Add Complex Pole I Figure 9-107 Addition of a 
zero to the controller C(s) to 
create a PD controller. OK Q.ncel He~ Apply 
the desired area. The desired poles of the system must lie to the left of the boundary imposed 
by the settling time between-700 and-800 markers in Fig. 9-106. Obviously, it is impossible 
to use the proportional controller (for any value of K) to move the poles of the closed-loop 
system farther to the left-half plane. However, a PD controller may be used to accomplish this 
task. As proposed earlier in the solution to Example 9-2-1, a PD controller with a zero at 
z = -I /0.001772 may be used for this purpose. Recall from the solution of Example 9-2-1 
that this number was obtained from the steady-state error criterion by ex.amining Eq. (9-13). 
In this case, if the propo1tional componen t of a PD controller is set to Kp = l, the steady­
state error due to a unit-ramp input is e,s = 0.000443 for Ko = 0.001772. 
To enter a zero to the controller , click the C(s) block in the block diagram in the top 
right corner of Fig. 9-106, or simply follow the instruction s on the bottom of the screen 
shown in Fig. 9-106 and right-click the mouse to edit the controller transfer function. Fig. 
9-107 shows the Edit Compensator window and how the PD controller is added. 
The new root-locus diagram for the system appears in Fig. 9-108. lt is now very easy to 
establish the required gain to push the poles to the desired region. Using the value of 
K = 181.2, which was proposed in the original solution of Example 9-2-1, would force the 
·) 5150 Design Tool · 1" 
Eile ~d~ 'f.lew i:,Oll'l)ensators ~nalys1s Iools '1!'.lndow t!elp 
rK"' )( 0 .:.. .£. "' It· i .,~ "' XI i.,-,-q--~--------- 1 1 i,,s • °' ~ :-+ • I 't. 
Rceil ~ ... ,s 
I The compens,itor C h!is been updoted. 
Figure 9-108 The root-locus diagram for Example 9-2-1, after incorporating a zero in the PD 
controller at -1 /0.001772. 
638 Chapter 9. Design at Control Systems 
) SISO Design Tool -_ _ftJj,~ 
E~e [dit YJew ~ompensators linalysis Iools !llildow f:!elp 
400 
-400 
-600 '---~---- ......... -----=------- ---------' -1000 -900 -BOO -TCO -600 ,500 400 -~.JO .:;c,o -11)0 D 
R-.·.t.._ ,_ 
Loop gs:n changed to 181 
Rigl't-cick on plots tor more design oJ:tions. 
Figure 9-109 The root-locus diagram for Example 9-2-1 after incorporating a zero in the PD 
controller at -1 /0.001772 and using a gain of 181. 
closed-loop poles to the right region, as shown in Fig. 9-109. After dragging the poles, you can 
view their current location from the View menu. The step response of the controlled system in 
Fig. 9-110 shows the system has now complied with all design criteria. The 2% settling time is 
now 0.0488 sec, while the percent overshoot is 4.17. It is interesting that, although the closed­
Joop poles are both real, the system has a non-oscillatory response with an overshoot. This is 
because of the effect of zero on the response. Review the effect of adding a zero to a closed­
loop transfer function, which was discussed in Section 5-11, to further appreciate this behavior. 
Finally, in practice, always verify that the actuator used has enough torque or load to 
create such response . The actuator limitations must always be included because they are 
some of the most important design constraints. 
Frequency-Domain Design 
Now let us carry out the design of the PD controller in the frequency domain using the 
following performance criteria: 
Steady-state error due to a unit-ramp input :S 0.00443 
Phase margin :2: 80° 
Resonant peakM,. :S 1.05 
BW :S 2000 rad/sec 
To start the frequency -domain design process, click the Bode button in the Contro11er Design 
main window (Fig. 9-100) to get the MA1LAB SISO Design Tool, as shown in Fig. 9-112. 
As in the root-locus design approach, a PD controllt:r with a zero at z = -l /0.001772 
may be used for this purpose. Recall that this number was obtained from the steady-state 
error criterion. Similar to the root-locus approach , in order to enter zero for the controller , 
9-14 MATLAB Tools and Case Studies 639 
·) L Tl Viewer for 5150 Design Tool 
Ei!e ~cit Yi:indow t:!elp 
step esrul[lSe 
1.4 ~--~---~--- -System: Closed Loop: r toy : 
1/0: rtoy 
1 2 
-8 0.6 
:,. = ~ ct 0.6 I Peak arnplitUde. 1 .04 
Overshoot(%): 4.17 
At time (sec): 0.00294 
;..=;.--:--:-..-: _:-c_=-::_-::_:c-,-_ -:_,-.....___ --------
System: Closed Loop'. r lo y , 
1/0: rto y 1 
Rise Time (sec): o.ooj 19 
2 3 
Th)le {sec) '. System. Closed Loop: r to y 
I 1/0: rloy 
; , Settling ~'.'.'~ ~~~c): o:~~B~ 
5 6 
I LTIVlevver P Real-Time Updale I 
Figure 9-110 Step response of Lhe system in Example 9-2-1 with a PD controller , 
C(s) = 18l(s+ 1/0.001772). 
-) 5150 Design for System lptf 
Ele ~dt l[iew <;;,ompensators 8,nalysis Iools l!l/.indow tielp 
I 
-g 
E 
:ii' -SO G.M: Int 
::: Freq: Inf 
Stable loop 01'""·Luop 8,ae ErUr,t \'-) -DJil 
-100 ..._ ___ _,_.......__,__,_......_.w,. __ _,__...__,_....._.._.,_...._...._ __ ...._~_...._...._.._,_.._.... 
_gor=,,==::::,:=:=:: :::::::=:--~,..,..,.~~~~~~~~.,.,-~~~~~~ ~........, 
P.M.: 88 deg 
_13,.!)b~Fr~e~q:21~2~.5~re~d~~~ec:,__.L.a~=--J...=~~ L=,.___.___...,~~_..__,_ a,L..i.~~==-==::;;;;:;:::;;:;:;;.;c:.:,J 
10' 10' 10' 
I Ri!tlt-click on the ptcts for more design options 
Figure 9-111 The loop magnitude and phase diagrams in the frequency-domain SISO Design 
Tool for Example 9-2-1. 
640 Chapter 9. Design of Control Systems 
• } 5150 Design for Syst~m lptr -: _ 
!1e t;:dit l!iew (ompensators l!_ooly~s Iools l!/indow t:!elp 
fr--. X O -4-..2.. "'°' I ;"1 H;_':!:_X_I_ .... ? _______ ____ , 
L'\S • ~ ~ ....... .. \:: "t. 
co 40 
::!, ! :o 
~ :E (I G.M; Inf 
Freq: NaN 
Stobie loop 
P.M: 82.9 deg (.•p.,n-L p Eiod~ E111c, \ CJ 
Freq: 1.Se+003 rad/sec -105 '-------~~~---'--~~~~~-~~~~~~~ 
101 10! 10' 10' 
I The compensator Chas bee~ updeted. 
Figure 9-112 The loop magnitude and phase diagrams for Example 9-2-1, after incorpora ting a zero 
in the PD controller at -1/0.001772 and a gain of K = 181.2. 
click the C(s) block in the block diagram in the top right corner of the screen shown in Fig. 
9-112. The new open-loop Bode diagram of the system appears in Fig. 9-113 for the system 
with a PD controller Gc(s) = C(s) = 181.2(1 + 0.001772s) . The gain margin in this case 
is infinity, while the phase margin is 83°. As a result, the system has also fully complied 
with all the design criteria in the frequency domain. Review the effect of adding a zero to a 
·! (•;,st,\lol~~, .!J 
Kd = 0.0020007 
Current Potes Are: 
-1436 3375+1744 4097i 
-1438.3375-174 4.4097i 
-531 .62499,0I 0 = zero, X= pole 
·i 0 ··,~-------------
§ -1000 
-2000 
-3000 
·40~000 -3500 -3000 -2500 -2000 -1!i00 -1000 -500 
Real axis 0 
Figure 9-113 Root contours 
of the PD-controlled systems 
from Example 9-2-2. 
9-14 MATLAB Tools and Case Studies 641 
closed-loop transfer function, which was discussed in Section 9-3 (see also Section 9-4 for 
addition of a pole) to appreciate this behavior. Alternatively, you may select the Open-Loop 
Bode option from the View menu in the root-locus diagram in Fig. 9-l 08 to obtain the root­
locus and frequency-response representations of the system together on the same figure . 
.._ EXAMPLE 9-2-2 We will now use the ACSYS tool to solve the problem from Example 9-2-2. Rernll that the forward­
Revisited path transfer function for the system was 
l.Sx 107K G(1') - (9-295) · -s(s2 + 3408.3s + l, 204,000) 
And the design contraints remain the same as in Example 9-2-2. 
Click on the G(s) block to enter the plant transfer function. In the numerator text box, enter 
[l.5e7], and in the denominator text box, enter [1,3408.3, 1204000,0). K will be chosen to be 181.17, 
which we will enter in the C(s) block. Click on the C(s) block and enter [ 181.17) in the numerator text 
box. Let us again use the Root Contour tool. Choose the "PD design: Root Contour" option from the 
Controller Design menu. Choose Ko min to be 0.00001, choose K0 max to be 0.005, and choose 3000 
steps. Pressing enter will display the plot shown in Fig. 9-113, which is similar to Fig. 9-12. Press the 
"arrow cursor" button and scroll through the values of P0. You will see the behavior described in 
Example 9-2-2; as the value of Ko increases, the real pole moves toward the origin and the two 
complell poles approach asymptotical ly to the line at s = -1704. 
In Example 9-2-2 the value of 0.002 is chosen for K0; let us apply a PD controller with KD = 
0.002 to see its effect. KP will be left at l. Click on the C(s) block and enter 181.17*[.002, I] in the 
numerator text box. After pressing enter, click on the Step Response option from the Time Response 
menu and then press the Print to Figure button. Right-click on the resulting plot and choose 
"Characteri stics" and "Peak Response" from the pop-up menu. Holding the pointer over the marker 
that appears at the point of maximum amplitude will display the value of the overshoot for this system. 
Repeating this for the rise time and the settling time will show you all the data listed in Table 9-3. 
To see the Bode plots of this PD-controll ed system, choose the Bode option from the Controller 
Design menu and you will see the window shown in Fig. 9-114. 
·) s1so Oes,gn for S)stem Jptr ' · . 
~ Current Corr\penoator 
r~_s)_= F __________ ~!I~J 
lil' -SO GM. Int ::; Freq: Inf 
stable loop -100 '-----'-~,,..,.,..._-~.._.__,_~..,,....-~~~_,_,, ........ _~_._~~......,__. 
.·,o,---==~==::-----..........,,--~-~~..,--~~~, 
I 
'.;' -13: 
f 
"' PJyL 58.S(Jeg 
_
180 Freq: 1.62e-003 rad/sec 
101 10- 10' rn' 10 
t-ri,qi.Jt::r ..... ., (r '... -J 
\ Right-cick on the plots for more design cptions. 
Figure 9-114 Bode plots of the PD-controlled system from Example 9-2-2. 
642 · Chapter 9. Design of Control Systems 
EXAMPLE 9-3 We will now go through the steps involved in finding ~ome of the results of Example 9-3-l. First input 
Revisited the plant for the system. Click on the G(s) block and enter (4500) in the numerator text box and 
[ 1,361.2,01 in the denominator text box. Adding the PI controUer is accomplished by setting C(s) 
equal to a function of rhe form 
KKp(s+ ;;,) 
C(s)=-_____.,__-~ 
.I (9-296) 
Adding the Pl controller effectively adds a zero at s = Ki/ K,, and a pole at s = 0. We can 
use MATLAB 's SISO tool to do this. As is done in Example 9-3-1 let's have K = 181.17. Click 
on the C(s) block and enter l l8 l. l 7l in the numerator tcKt box. From the Controller Design menu, 
choose the Root Locus option. This wiU open the SISO Design Tool pictured in Fig. 9-115. The plot 
shows the effect on the poles of the system of varying the value of a constant multiplied by C(s). 
Now to add the Pl controller , we need to add in the pole and zero. Click on the C block in the 
block diagram located in the top right of the SISO window. Now, add a pole ats = 0, and as is done in 
Example 9-3-1, add a zero at s = -10. Click OK and you will see the plot pictured in Fig. 9-116. 
Notice that this plot is similar to that in Fig. 9-19. As it is now, the value of C(s) is equal to 181. 17 
times the function pictured just above the Root Locus plot. Let us set the controller parameters equal 
to those in the third row of Table 9-5. We already have the ratio of KF/ Kp that we want. To change the 
value of Kp, grab one of the complex poles and drag it toward the real te<is. You will see that the value 
of the gain in front of the controller function starts to decrease. Move the pole until the gain is equal to 
0.8. Now from the Analysis menu, choose the Step option from the Other Loop Responses menu. 
Right-click on the resulting graph and choose "Characteristics" and "Peak Response ." Hold the 
pointer over the dot marking the maximum response to see the percentage overshoot, as pictured in 
Fig. 9-ll7. Repeat this for the rise time and the settling time and you will see values close to those 
listed in Table 9-5. Note that the settling time referred to in Table 9-5 is the 5% settling time, so you 
may need to change the definition of settling time in the Properties menu, located in the same pop-up 
menu as the characteristics option. lf you put both the main SfSO window and the Step Response 
·) 5150 Design Tool --
fife !;dit l(iew f;.ompensators f!.nafysis Iools ~ndow !:!eiP 
Ed11c, (C) 
10,:)() .-----,- ---.-----.-- -~-.---.---,-----, ,-----, 
I~ 
500 
0 ·······)<----- ---------11------ -------
-500 
-1000 ~--~--~--~---~~----~-- ~--~ 
-400 .350 -250 -150 -100 -50 
I Rlghl-cick Oil the pleb for more cl~lgn opliorlS, 
Figure 9-115 Root loci of the system from Example 9-3-1. 
9-14 MATLAB Tools and Case Studies 643 
·) SISO Design Tool . '. -fCII~ 
-~i!e !;.dit Y)ew (cmpensators ~naiysis j Iools ~indow !:J.elp 
~XO+, ~!t."PH J X(lt? 
~ Current Compensator 
(1 + O.ts) 11---{D-t©---@h--j 
'---C(-s)_· ~ ___ x_---_-·;_------------~ ~ -L@--l FS 
200 
1CO 
0 . ····· ··------------ --le-------------€3Bf 
-100 
-200 
-300'-----'---- -~---~--~-~-~--~---~--~ -400 .;50 -JCO -c~O -200 -150 -100 -SO 0 
Re ... l A IC 
I The compensator Chas been updated. 
Figure 9-116 Root loci of the PI-controlled system from Example 9-3-1. 
-} l Tl Viewer for S150 Design Tool · _ ~ 
Eile Edit )!'i'.indow !:!elp 
Slep Response 14.----~-,------.------,-----.-----, 
1.2 
1 · · • · l--· ---• · · · · · ----• • · • • · · · --· • · · • · · • • ---· .• --.• ------· •. ---.•.•• 
., 0 3 
"' i 
~ 0.6 
04 
o.~ 
I LTI Viewer I 
005 01 0.25 
Tillie (sec) 
P' Real-Time Upd,,te 
figure 9-117 Step response of the PI-controlled system from Example 9-3-1. 
644 Chapter 9. Design of Control Systems 
·) 5150 Design for System lptr --
~ i;:ot YJew ~ompensators 8,naly~ !ools l(iindow !:!eP = Current Compensator 
~~-=~~~~~~___.l~J 
i 50 
"' 1 0 
"' ::;; -50 G.M_ Inf 
Freq; Inf 
stable loop 
P.M; 58.5 deg 
~ Freq: 165 rad/sec E -120 .. 
" .f -150 
<>-
-1 so k::;:;;::;::;;;,........,"-"'-'=-"'""'-''-=-"-=""'-'"'-'--""'-'u:L....d~=-<... ........ .="--"'.-'"--c..-,.~::;;:=:d 
10° 101 1(( 10' 10' 
I Riglt-cf.ci< on the ptot.s for more design 01111ons. 
Figure 9-118 Bode plots of the PI-controlled system from Example 9-3-1. 
window in view at the same time, you can see the effect that moving the poles has on the response in 
real time. 
Now return to the Controller Design Tool window. To obtain the Bode plots shown at the end of 
Example 9-3-1, using the parameters from the second row in Table 9-6, enter 181.17*[0.08, 1.6] into 
the C(s) numerator , and enter [l ,Q] into the C(s) denominator. Then choose the Bode option from the 
Controller Design Tool menu. You will then see the window pictured in Fig. 9-118. 
EXAMPLE 9-3-2 We will now go through the steps involved in finding some of the results of Example 9-3-2 using the 
Revisited A CSYS software. First enter the plant transfer function. Click on the C(s) block, and in the numerator 
text box, enter [l.5e71. In the denominator text box, enter [1,3408.3, 1.204e6,0]. Press enter, and then 
click the C(s) block, and enter 181.17. From the Time Response menu, choose the Step option. You 
will obtain one of the plots shown in Fig. 9-23. 
To improve the system, we will apply a PI controller. Let us use the parameter values from the 
fourth row in Table 9-8. Click on the C(s) block. In the numerator text box, enter 
181.17*0.075*[1, I], and in the denominator text box, enter (1,0). Again plot the step response 
and you will see one of the other plots shown in Fig. 9-23. To see the frequency response, choose 
the Bode option from the Controller Design Tool menu and you will see some of the information 
shown in Figure 9-22. 
EXAMPLE 9-4-1 We will now go through the steps involved in inputting the parameters that correspond to the PlD 
Revisited controller of Example 9-4-1. First enter the plant transfer function. Click on the G(s) block, and enter 
[2.7 l 8e9] in the numerator text box and [ l ,3408.3,1204000 ,0] in the denominator text box. To enter 
the PID controller in the C(s) text boxes, it needs to be written in the form of the left side ofEq. (9-48). 
We will choose Kn = 0.0006, Kp = 0.309, and Ki = 4.5. In the C(s) numerator text box, enter 
L0.0006,0.309,4.5), and in the denominator text box, enter (1,0]. Press enter, and then choose the Step 
Response option from the Time Response menu; you will obtain one of the plots shown in Fig. 9-24. 
From the Controller Design Tool menu, choose the Bode option, and you will see the Bode plot 
shown in Fig. 9-25. 
9-14 MATLAB Tools and Case Studies 645 
EXAMPLE 9-5-1 We will now use A CSYS to obtain some of the results from Example 9-5-1. First, enter the plant 
Revisited of the system. In the C(s) numerator text box, enter (2500], and in the denominator text box, 
enter [1,25,0). We are going to use a phase-1ead controller to improve the performance of the 
system. Let us use the root contour Luu! LU examine the effect that varying Thas on the poles of 
the system. From the Controller Design Tool menu, choose the "Lead Lag Design: Root 
Contour" option. Set a to be 0. Set Tmin to be 0.0001, set Tmax to be 100, and choose 400 steps. 
After pressing enter, you will notice that the x scale on the resulting plot is much wider than that 
in Fig. 9-31. To get a better view, click on the zoom-in button below the plot. Then click and drag 
the box around the area you would like to be displayed . You should be able to generate 
something that looks similar to Fig. 9-119. 
Now we will apply the Phase-Lead controller lo see its effect on the response. Choosing the 
parameter values from the fourth row in Table 9-12, we will have a= 16.67 and T = 0.003. Click on 
the C(s) block, and in the numerator text box, enter (0.05,J]; in the denominat or text box, enter 
[0.003, 1]. Press enter, and then plot the step response from the Time Response menu. Press the Print 
to Figure button, and right-click on the plot to see details about the response. 
50 
40 
30 
20 
.l!l 
~ 10 
1: 0 -~ ., 
..[ -10 
-20 
-30 
-40 
-50 -40 0 = zero, X= pole 
-30 -20 -10 
Real axis 0 10 20 
Figure 9-119 Root contours 
of the lead-lag controlled 
system from Example 9-5-1. 
EXAMPLE 9-5-2 Now we wi1l use some of the A CSYS tools to examine the application of a phase-lead controller 
Revisited to the third-order system of Example 9-5-2. First input the plant transfer function. In the G(s) 
numerator text box, enter [4.6875e71 , and in the denominator text box, enter [l,625,156250,0]. 
As in Example 9-5-2, we will use a phase-lead controller to improve the performance of the 
system. First Jet's use the root contour tool to examine the effect that the controller has on the 
poles of the system. From the Controller Design Tool menu, choose the "Lead Lag Design: Root 
Contour" option. Choose a= 0, Tmin = 0.0005, and Tmax = l, and choose 500 steps. After 
pressing enter, you will see the plot shown in Fig. 9-121, which is similar to one of the lines 
plotted in Fig. 9-35. 
Now implement the phase-lead controller with the parameters from the last row in Table 9-14. 
In the C(s) numerator text box, enter [0.005,1), and in the denominator text box, enter [0.00001 ,l]. 
From the Time Response menu, choose the Step Response option, press the Print to Figure button, 
and right-click on the resulting plot to see the characteristics of the system, which are listed in 
Table 9-14. From the Controller Design menu, choose the Bode option to see the Bode plots for 
646 Chapter 9. Design of Control Systems 
300 
200 
100 
!a 
1ij 
~ 0 a, ·"' Ol ., 
.§ 
-100 
-200 
-300 -2000 -1500 
P+IC}-HBI 
8 
6 
4 
2 
Q) 0 ,, 
.~ a. 
E <( -2 
-4 
-6 
-8 
-10 0 0.01 0 = zero, X = pole r . . . . 
. -x· 
. • • 'v 
-1000 -500 
Real axis 
Closed-Loop Step Response 
0.02 O.D3 0.04 
Time (s) :x 
J 
0 
r 
005 500 
0.06 Figure 9-120 Root contours 
of the system from Example 
9-5-2. 
Figure 9-121 Step Response 
of the uncompensated system 
from Example 9-5-3. 
this system. Right-click on the plot and change the properties to see the full range of frequencies 
shown in Fig. 9-37. 
EXAMPLE 9-5-3 We will now go through some of the steps of Example 9-5-3 using the ACSYS tools. First input the 
Revisited plant transfer function. Click on the G(s) block, and in the numerator text box, enter [l.5625e8]. In 
the denominator text box, enter [J,625,156250,0]. After pressing enter, click the Bode option from 
the Controller Design Tool menu to see the Bode plot of the uncompensa ted system, which is shown 
in Fig. 9-39. From the Time Response menu, choose the Step command and you will see that the 
system is indeed unstable. The step response of the uncompensated system is shown in Fig. 9-121. 
9 .. 15 Plotting Tutorial 647 
To improve the performance we will use a two-stage phase-lead controller. Let us use the 
parameter values from the first row of Table 9·16. To input the controller transfer function, we need to 
rewrite the numerator and denominator in polynomial form. In the C(s) numerator text box, enter 
[l.499e-5,7.744e-3,1], and in the denominator text box, enter f2.343e-9,9.68e-5,l]. Press enter and plot 
the step response from the Time Response menu to see one of the plots shown in Fig. 9-40. 
EXAMPLE 9-6-1 Now we will go through some of the steps involved in applying the phase-lag controller to a second-
Revisited order system, as in Example 9-6-1. Input the plant transfer function. Click on the G(s) block. K will be 
set equal to l, so in the G(s) denominator text box. enter [2500]; in the numerator text box. enter 
[ 1,25,0). Choose the Step option from the Time Response menu to see the step response of the 
uncompensated system, which is shown in Fig. 9-47. 
Let us use the controller parameters from the second-to-last row in Table 9-17. Click on the C(s) block. 
and in the numerator text box, enter [2.7.lJ. In the denominator text box, enter [30,l]. Press enter, and again 
plot the step response. Press the Print to Figure button. and right-click on the resulting plot. By clicking 
the Properties option. you can set the x-limits of the response plot to get a better view of the respo11se. 
EXAMPLE 9-6-2 We will now go through some of the steps involved in Example 9-6-2 with the ACSYS tools. Fir$t 
Revisited input the plant transfer [unction. Click on the G(s) block, and enter [1.5625e81 in the numerator tex.t 
box, and enter II,625,156250,0J in the denominator text box. After pressing enter, select the Root 
Locus option from the Controller Design menu. You will see the root loci plot pictured in Fig. 9-50. 
We will implement a phase-lag controller to improve the performance of the system. Let's use 
the parameter values from the second row of Table 9-19. Click on the C(s) block, enter [ l, 11 in 
the numerator text box, and enter [10,1] in the denominator text box. Click the enter button, and 
choose the Step option from the Time Response menu. Right-click on the resulting plot to check the 
characteristics of the current system. 
9-15 PLOTTING TUTORIAL 
You will notice that in many of the examples in this book there are figures containing 
multiple response plots, each corresponding to a certain parameter value. Arranging plots 
in this way is obviously very helpful in discovering the effect that a certain parameter has 
on a system. The functionality to overlay the response plots on the same figure is not built 
into the ACSYS software. This short tutorial will go through the steps involved. This 
tutorial can a]so serve as an introduction to manipulating graphics and data at the 
MATLAB command line. 
The plots we wish to display are the step responses of the system in Example 9-2-1. 
One plot will be the response of the system with a proportional controller, and the other will 
be the system with a PD controller. What we will do is generate the step response plots for 
each system and then plot the data from each on another figure; this wi11 leave us with a 
graph similar to that in Fig. 9-110. 
Press the G(s) block, enter [4500] in the numerator text box, and enter [l,361.2,0] in 
the denominator text hox. Press the C{s) block, and enter [181.17] in the numerator text 
box. After pressing enter .. choose the Step Response option from the Time Response menu, 
and press the Print to Figure button under the resulting plot. Now change the value in the C 
(s) numerator to 181.17*[,00177,1]. Repeat the procedure to generate a second figure. We 
now have two separate figures, each with its own set of axes and its own set of data plotted. 
We now want to extract the plotted data from each figure so we can plot them again on 
new ax.es on a new figure. Choose "Data Cursor" from the toolbar on one of the figures, 
and click somewhere on the line so a marker appears on it. Now, at the MATLAB command 
line, type the following: 
ti = get(gco, 'xdata'); yl = get(gco, 'ydata'); 
648 Chapter 9. Design of Control Systems 
Now repeat the procedure for the second figure, this time using the variable names "t2" 
and "y2." 
The line is a graphics object that has a list of properties that define it. GCO stands for 
"get current object." We make the line the cmTent object by clicking on it with the cursor 
tool; the "get" command puts the value of the specified property in a variable of our choice. 
Xdata is a property of the line, which is a row vector of values. We now have two vectors, a 
time vector t 1 and an amplitude vector y I. When we plot, we will be plotting each y 1 value 
versus its con-esponding tl value. Repeat the procedure for the second figure and place the 
xdata and ydata in the variables t2 and y2, respectively . 
Now we are ready to plot the data on a single axis. At the command line, type the 
following: 
figure; axes; plot( tl, y 1); hold on; plot( t2, y2); 
plot([O, 0.05], [1, 1], 'color' , [O, 0, OJ, 'linestyle' , ' : ' ) ; 
The "hold on" command stops MATLAB from erasing the first plot when the second plot 
command is given. The third plot command just draws a black dotted line between the 
points (0,1) and (.05,l). 
There is one final adjustment to make the new graph complete. It would be much better 
to display the two plots in different colors. Again, choose "Data Cursor" from the toolbar, 
and click on one of the lines. Now type the following: 
set(gco, 'color' , [l, 0, OJ); 
The "set" command gives the specified value to the specified property of the specified 
object. You should now have a window that looks like Fig. 9-122. 
·} figure 4 ~ 
File Ed.t Vi~w Insert Tools Desktop Window Help .,. 
o~g~J ~ I (tl El. fl~ l~I D ~ I liJ 
1.6 
1 4 
1.2 
·······-~ 
08 
0.6 
0.4 
0.2 
00 0.01 0.02 0,09 0.04 0.05 0.06 
Figure 9-122 Step responses of system. 
~ 9-16 SUMMARY Review Questions ,-€ 649 
This chapter was devoted to the design of linear continuous-data conlrol systems. It began by giving some 
fundamental considerations on system design and then reviewed the specifications in the time domain and 
frequency domain. Fixed configurations of compensation schemes used in practice, such as series, 
forward and feedforward, feedback and minor loop. and state feedback were illustrated. The types of 
controllers considered were the PD, PI. Pill, phase-lead. phase-lag, lead-lag, pole-zero cancellation, and 
notch filters. Designs were canied out in the time-domain (s-domain) as well as the frequency domain. 
The time-domain design was characterized by specifications such as the relative damping ratio, maximum 
overshoot, rise time, delay time, settling time, or simply the location of the characteristic-equation roots, 
keeping in mind that the zeros of the system transfer function also affect the transient response. The 
performance was generally measured by the step response and the steady-state error. Frequency-domain 
designs were generally carried out using Bode diagrams or gain-phase plots. The petfoimance 
specifications in the frequency domain were the phase margin, gain margin. Mr, BW, and the like. 
The effect of feedforward control on noise and disturbance reduction was demonstrated. A 
section was devoted to the design of robust control systems. 
While the design techniques covered in this chapter were outlined with analytical procedures, 
the text promotes the use of MATLAB Toolboxes and specifically ACSYS. The Conl.roller Design 
Tool has been developed by the authors for this purpose. Through the GUI approach, ACSYS creates 
a user-friendly environment to reduce the complexity of control systems design. 
,._. REVIEW QUESTIONS 
1. What is a PD controller? Write its input-output transfer function. 
2. A PD controiler has the constants Kv and Kp. Give the effects of these constants on the steady-
state error of the system. Does the PD control change the type of a system? 
3. Give the effects of the PD control on rise time and settling time of a control system. 
4. How does the PD controller affect the bandwidth of a control system? 
S. Once the value of Ko of a PD controller is fixed, increa~1ng the value of Kp will 
increase the phase margin monotonically. (T) (F) 
6. If a PD controller is designed so that the characteristic-equation roots have better 
damping than the original system, then the maximum overshoot of the system 
is always reduced. (TJ {F) 
7. What does it mean when a control system is described as being robust? 
8. A system compensated with a PD controller is usually more robust than the 
system compensated with a Pl controller. 
9. What is a Pl controller'? Write its input-output transfer function. (T) (F) 
10. A PI controller has the constants Kp and K1• Give the effects of the Pl controller on the 
steady-state error of the system. Does the PI control change the system type? 
11. Give the effects of the PI control on the rise time and settling time of a control system. 
12. How does the Pf controIIer affect the bandwidth of a control system? 
13. What is a PID controller? Write its input-output transfer function. 
14. Give the limitations of the phase-lead controller. 
15. How does the phase-lead controller affect the bandwidth of a control system? 
16. Give the general effects of the phase-lead controller on rise time and settling time. 
17. For the phase-lead controller. Gc(s) = {1 + aTs)/(1 + Ts)t a> I. what is the effect 
of the controller on the steady-state performance of the system? 
18. The phase .. Jead controller is generally less effective if the uncompensated 
system is very unstable to begin with. (T) (F) 
650 ~ Chapter 9. Design of Control Systems 
,. REFERENCES 
> PROBLEMS 19. The maximum phase that is available from a single-stage phase-lead controller is 90°. (T) (F} 
20. The design objective of the phase-lead controller is to place the maximum phase 
lead at the new gain-crossover frequency. (T) (F) 
21. The design objective of the phase-lead controller is to place the maximum phase 
lead at the frequency where the magnitude of the uncompensated Gp(jw) is -10 log10a, 
where a is the gain of the phase-lead controller. (T) (F) 
22. The phase-]ead controller may not be effective if the negative slope of the 
un-compensated process transfer function is too steep near the gain-crossover frequency. (T) (F) 
23_ For the phase-lag controller. G,.(s) -(l + aTs)/(1 + Ts), a< I. what is the effect of the 
controller on the steady-state performance of the system? 
24. Give the general effects of the phase-lag controller on tise time and settling time. 
25. How does the pha'le~lag controller affect the bandwidth? 
26. For a pha~-lag conlroller, if the value of T is large and the value of a is small. it is 
equivalent to adding a pure attenuation of a to the original uncompensated system 
at low frequencies. ff) (F) 
27. The principle of design of the phase-lag controlier is to utilize the zero-frequency 
attenuation property of the controller. (T) (F) 
28. The corner frequencies of the phase-lag controller should not be too low or else the 
bandwidth of the system will be too low. (T) (F) 
29. Give the limitations of the pole~zero..cancellation control scheme. 
30. How does the sensitivity function relate to the bandwidth of a system? 
Answers to these review questions can be fomtd on this book's companion Web site: 
www.wiley.com/college/golnaraghi. 
1. N. D. Manring, Hydraulic Comrol S.vstems, John Wiley & Sons, New York. 2005. 
2. D. McCloy and H. R. Martin. The Cont1·0/ af Fluid Power. Longman Group Limited, London. 1973. 
3. B. C. Kuo and F. Golnaraghi. Automatic Control Systems. John Wiley & Sons, New York. 2003. 
4. R. L. Woods and K. L. Lawrence, Modeling and Simulation of D:·mamic S.vstems. Prentice.Hall. New Jersey. 1997. 
5. A. Kleman, /J11e1fating Microprocessors ill Hydraulic Systems. Marcel Dekker, New York. 1989. 
6. K. Ogata, Modem Omtrol Engineering. Prentice•Hall, New Jersey. 1997. 
7. W. P. Graebel. E11.r:i11eering Fluid Mechanies. Taylor & Francis. New York. 2001. 
8. J. C. Willems and S. K. Mitter. "Controllability. Observability, Pole Allocation, and State Reconstruction," 
IEEE Tmns. Automatic Control, Vol. AC-16, pp. 582-595, Dec. 1971. 
9. H. W. Smith and E. J. Davison, .. Design of Industrial Regulators," Pnn·. IEE (Lcmdon). Vol. 119, pp. 1210-
1216, Aug. 1972. 
IO. F. N. Bailey and S. Meshkat, .. Root Locus Design of a Robust Speed Control." Prm·. lnCl'emental Motion 
Control Symposium. pp. 49-54, June 1983. 
Most of the following problems can he solved using a computer program. This is highly recommentled 
if the reader has access to such a prog,-am. 
9-1. The block diagram of a control system with a series controller is shown in Fig. 9P~l. Find the 
transfer function of the controller Gc(s) so that the following specification.Ii are satisfied: 
The ramp.error constant Kv is 5. 
The closed-loop transfer function is of the f onn 
Ms _ Y(s) _ K 
( ) -R(s) -(s2 + 20s + 200)(s + a) 
where K and a are real constants. Find the values of K and a. 
Problems 651 
100 G,,(s) = ----,~=--~---
s(s-+ !Os+ 100) Y(s) 
figure 9P-1 
The design mategy is to place the closed-loop poles at -10 + jlO and -10 -JlO, and then adjust 
the values of Kand a to satbfy the steady-state requirement. The value of a is large so that it will 
not affect the transient response appreciably . Find the maximum overshoot of the designed 
system. 
9-2. Repeat Problem 9-1 if the ramp-error constant is to be 9. What is the maximum value of K,. 
that can be realized? Comment on the difficulties that may arise in attempting to realize a very 
large K,. 
9-3. The forward-path transfer !'unction of a unity-feedback control system is 
K G(s)-----s( TS -t J) 
Find the value of Kand r so that the overshoot of the system is 25.4% at the t = 0.4. 
9-4. The forwaJd-path transfer function of a system is 
24 
G(s)H(s) = ( )( 6) ss+l s+ 
Design a PD controller that satisfies the following factors: 
(a) The steady-state error is less than 'TT/10 when the input is a ramp with a slope of2'lT rad/sec. 
(b) The phase margin is between 40 and 50 degrees. 
(c) Gain-crossover frequency is greater than I rad/sec. 
9-5. A control system with a PD controller is shown in Fig. 9P-5. 
E(s) 
Kp+ Kas 
Figure 9P-5 JOOO 
s(s + 10) Y(s) 
(a) Find the values of Kp and K0 so that the ramp-error constant K, is 1000 and the damping ratio is 
0.5. 
(b) Find the values of Kp and K0 so that the ramp-error constant K,. is 1000 and the damping ratio is 
0.707. 
(c) Find the values of Kp and KD so that the ramp-error constant K,, is 1000 and the damping ratio is 
1.0. 
9-6. For the comrol system shown in Fig. 9P-5, set the value of Kp so that the ramp-error constant is 
1000. 
(a) Vary the value of K0 from 0.2 to 1.0 in increments of 0.2 and determine the values of phase 
margin, gain margin, M,., and BW of the system. Find the value of K0 so that the phase margin is 
ma;,.imum. 
(b) Vary the value of K0 from 0.2 to 1.0 in increments of 0.2 and find the value of K0 so that the 
maximum overshoot is minimum. 
652 Chapter 9. Design of Control Systems 
9-7. Theloop transfer function of a system is 
1 
G(s)H(s) = (2s+ l)(s+ 1)(0.5s+ 1) 
Design a PD controller such that the Kp = 9 and the phase margin is greater than 25 degrees. 
9-8. The loop transfer function of a system is 
. ) 60 
G(s)H(s = s(0.4s+ l)(s+ I)(s+6) 
(a) Design a PD controller to statisfy the following specifications: 
(i) K,. = 10. 
(ii) The phase margin is 45 degrees. 
(b) Use MATLAB to plot the Bode diagram of the compensated system. 
9-9. Consider the second-order model of the aircraft attitude control system shown in Fig. 5-31. The 
transfer function of the process is 
G s _ 4500K 
p( ) -s(s + 361.2) 
(a) Design a series PD controller with the transfer function Ge (s) = KD + Kps so that the following 
performance specifications are satisfied: 
Steady-state error due to a unit-ramp input ::S 0.001 
Maximumovershoot ::S 5% 
Rise timer,. ::S 0.005sec 
Settling time ts ~ 0.005 sec 
(b) Repeat part (a) for all the specifications listed, and, in addition, the bandwidth of the system 
must be less than 850 rad/sec. 
9-10. Fig. 9P-l O shows the block diagram of the liquid-level control system described in Problem 5-
42. The number of inlets is denoted by N. Set N = 20. Design the PD controller so that with a unit-step 
input the tank is filled to within 5% of the reference level in less than 3 sec without overshoot. 
+ R(s) E(s) 
Kp+ K[JS ION Y(s) 
s(s + l)(s + 10) 
Figure 9P-10 
9-11. For the liquid-level control system described in Problem 9-10, 
(a) Set Kp so !hat the ramp-error constant is l. Vary K0 from Oto 0.5 and find the value of KD that 
gives the maximum phase margin. Record the gain margin, M,.. and BW. 
(b) Plot the sensitivity functions IS~ ( jw) I of the uncompensated system and the compensated system 
with the values of K0 and Kp determined in part (a). How does the PD controller affect the sensitivity? 
9-12. The block diagram of a servo system is shown in Fig. 9P-12. 
R"(,) y---j\11 K +KD5 
Figure 9P-12 1---- .. -.1s(O.ls+ 1\~~.02s+ I)\--~--j\l C(s) 
Problems 653 
Design the PD controller so that the phase margin is greater than 50 degrees and the BW is greater 
than 20 rad/sec. Use MATLAB to verify your answer. 
9-13. The loop transfer functiolll of a unity-feedback system is 
G(s)H(s) = lOOOK 
s(0.2s + l)(0.005s + l) 
Design a compensator such that the steady-state e1Tor to the unit-step input isles~ than 0.01 and the 
c.loscd-loop damping ratio ( > 0.4. 
Use MATLAB to plot the Bode diagram of the compensated system. 
9-14. The open-loop transfer function of a de motor is 
250 G(s)=---s(0.2s + I) 
Design a PD controller so that the steady-state error to the input ramp is less than 0.005, the maximum 
overshoot is 20%for the unit-step input, and the BW must be maintained at a value approximalely the 
same as that of the uncompensated system. 
9-15. The open-loop plant model of a plastic extrusion is given by 
G(s) - 40 
· -(s + I)(0.25s + 1) 
Design a series of lead compensator , which is described by 
Gc(s) = r(rs + I) 
(r,s + 1) 
so that the phase margin i~ 45 degrees and the BW must be maintained at a value approximate ly the 
same as that of tbe uncompensated system. 
9-16. Repeat Problem 9-15 assuming that the r < 0.1. 
9-17. Theloop transfer function of a unity-feedback conlrol system is 
IOOOK G(s)H(s) ""'-----­s(0.2s + 1 )(0.05s +I) 
(a) Design a compensator such that 
(i) The steady-state error is less than 0.0 I for a unic-ramp input. 
(ii) The phase margin is greater than 45 degrees. 
(iii) The steady-state error is less than 0.004 for a sinusoida l input with w < 0.2. 
(iv) The noise for the frequencies greater than 200 rad/sec reduced to 100 at the output. 
(b) Use MATLAB to plot the Bode diagram of the compensated system and verify or refine your 
design in part (a). 
9-18. A conlrol system with a type O process G"(s) and a PI controller is shown in Fig. 9P-I 8. 
G(s)= 100 
P s2+ 10, + 100 Y(s) 
Figure 9P-18 
(a) Find the value of Kr so that the ramp-error constant K,. is I 0. 
(b) Find the value of Kr, so that the magnitude of the imaginary parts of the complex roots of the 
characteristic equation of the system is 15 rad/sec. Find the roots of the characteristic equation. 
654 ~-Chapter 9. Design of Control Systems 
(c) Sketch the root contours of the characteristic equation with the value of K, as detennined in part 
(a) and for O :5; Kp < oo. 
9-19. For the control system described in Problem 9-18. 
(a) Set K1 so that the ramp-error constant is 10. Find the value of Kp so that the phase margin is 
minimum. Record the values of the phase margin, gain margin. M,. and BW. 
(b) Plot the sensitivity functions js~ (jw)I of the uncompensated and the compensated systems 
with the values of K1 and Kp selected in part (a). Conunent on the effect of the PI control on 
sensi ti vi ty. 
9-20. For the control system shown in Fig. 9P~ I 8. perform the following: 
(a) Find the value of K1 so that the ramp-error constant K,. is 100. 
(b) With the value of K1 found in part (a), find the critical value of Kp so that the system is stable. 
Sketch the root contours of the characteristic equation for O ::; Kp < oo. 
(c) Show that the maximum overshoot is high for both large and small values of Kp. Use the value of 
K1 found in part (a). Find the value of Kp when the maximum overshoot is a minimum. What is the 
value of this maximum overshoot? 
9-21. Repeat Problem 9-20 for Kv = 10. 
9-22. The transfer function of a system with unity feedback is 
G(s) -24 
-s(s+ l)(s+6) 
(a) Design a Pl controller that satisfies the following factors: 
(i) The ramp error constant Kv > 20. 
(ii) The phase margin is between 40 and 50 degrees. 
(iii) Gain-crossover frequency is greater than 1 rad/sec. 
(b) Use MATLAB to plot the Bode diagram of the closed-loop system. 
9-23. The transfer function of a robot ann-positioning system with unity feedback 
is represented by 
40 
G(s) = s(s + 2)(s + 20) 
(a) Design a PI controller such that: 
(i) The steady-state error is less than 5% of the slope· for a ramp input. 
(ii) The phase margin is between 32.5 and 37 .5 degrees. 
(iii) Gain-crossover frequency is I rad/sec. 
(b) Use MATLAB to plot the Bode diagram of the closed-loop system and verify your design in part 
(a). 
9-24. The transfer function of a system with unity feedback is 
G(s) - 210 
-s(5s + 1)(s + 3) 
Design a PI controller with a unity de gain so that the phase margin of the system is greater than 40 
degrees, and then find the BW of the system. 
9-25. The transfer function of the steering of a ship is given by 
2353K(71 -500s) 
G(s) = 11s(40s + 13)(5000s + 181) 
Design a PI controller such that: 
(a} The ramp error constant Kv = 2. 
(b) The phase margin is greater than 50 degrees. 
Problems 655 
(c) For all frequencies greater than crossover frequency, PM> 0. This means the system is always 
stable without any condition . 
(d) Show the closed-loop poles in the root locus with respect to values of K. 
9-26. The transfer function of a unity-feedback system is 
G 2 x 105 
(s) = s(s+20)(s2 +sos+ 10000) 
(a) A PD controller with the transfer function of H(s) = ts+ 1 \ is designed with r = 0.2 and rrs+ 1 
r = 0.05. It is desired to find the gain so that the crossover frequency is 31.6 rad/sec. 
(b) Find the ramp error constant Kv by applying the controller designed in part (a). 
(c) Consider lhe PD controller designed in part (a) is applied to the system. Find the value of K for a 
PI controller so that the ramp error constant K,. = 100. 
(d) If the PI controller pole is at 3.16 rad/sec and the crossover frequency maintains at 31.6 rad/sec, 
what is the zero of the PI controller'? [Consider the transfer function of the Pl controller is 
H(s) = r(rs + l).J 
(rrs + I) 
(e) Use MATLAB to plot the Bode diagram of the compensated system and find the phase margin. 
9-27. A control system with a type O process and a PID controller is shown in Fig. 9P-27. Design the 
controller parameters so that the following specifications are satisfied: 
Ramp-error constant K,. = 100 
Rise time t,. < 0.01 sec 
Maximum overshoot < 2% 
Plot the unit-step response of the designed system. 
G (s) = ' 100 
P s-+lOs+IOO 
Figure 9P-27 Y(s) 
9-28. A considerable amount of effort is being spent by automobile manufactu rers to meet the exhaust­
emission-petformance standards set by the government. Modern automotive-power-plant systems 
consist of an internal combustion engine that has an internal cleanup device called the catalytic 
converter. Such a system requires control of the engine air-fuel ratio (A/F), the ignition-spark timing, 
exhaust-gas recirculation, and injection air. The control system problem considered in this exercise deals 
with the control of t11e air-fuel ratio. In general, depending on fuel composition and other factors, a 
typical stoichiometric NF is 14. 7: 1, that is, 14.7 grams of airto each gram offuel. An NF greater or less 
than stoichiometry will cause high hydrocarbons, carbon monoxide , and nitrous oxide in the tailpipe 
emission. The comrol system whose block diagram is shown in Fig. 9P-28 is devised to control the air­
fuel ratio so that a desired output variable is maintained for a given command signal. Fig. 9P-28 shows 
that the sensor senses the composition of the exhaust-gas mixture entering the catalytic converter . The 
electronic controller detect<; the difference or the error between the command :md the sensor signals and 
computes the control signal necessary to achieve the desired exhaust-gas composition. The output 
variable y(t) denotes the effective air-fuel ratio. The transfer function of the engine is given by 
Y(s) e-h, 
U(s) = Gp(s) = 1 + rs 
where T,1 is the time delay and is 0.2 sec. The time constanL Tis 0.25 sec. Approximate the time delay 
by a power series: 
e -T,J.f CY 1 
-I + T<is + Tjs2 j2 
656 Chapter 9. Design of Control Systems 
Reference 
input r(I) 
+ 
Figure 9P-28 u(f) CONTROLLER 
SENSOR ENGINE A/F 
y(l) 
(a) Let the controller be a PI controller so that 
U(s) K1 Gc(s) =-=Kp +-E(s) s Exhaust ----~ e1nission CATALYST,-..~~• 
Find the value of K1 so that the ramp-en"or constant K,. is 2. Determine the value of Kp so that the 
maximum overshoot of the unit-step re,ponse is a minimum and the settling time is a minimum. Give 
the values of the max.imum overshoot and the settling time. Plot the unit-step response of y(t). Find 
the marginal value of Kp for system stability. 
(b) Can the system performance be further improved by using a PIO controller? 
U(s) K1 
Gc(s) = E(s) = Kp + KDs +-; 
9-29. One of the advantages of the frequency-doma in analysis and design methods is that systems 
with pure time delays can be treated without approximation . Consider the automobile-engine control 
system treated in Problem 9-28. 
The process has the transfer function 
e-0.2, 
Gp(s) = 1 + 0.25s 
Let the controller be of the PI type so that Gc(s) = Kp + K1 / s. Set the value of K1 so that the ramp-error 
constant Kv is 2. Find the value of Kp so that the phase margin is a maximum . How does this "optimal" 
Kp compare with the value of Kp found in Problem 9-28(a)? Find the critical value of Kp for system 
stability. How does this value of Kp compare with the critical value of Kp found in Problem 9-28? 
9-30. Fig. 9P-30 shows a simplified design of an airplane attitude controller . 
D 
X(s) 1.011troller 0.9 1----.-- Y(s) 
O.Ss+ I 
Figure 9P-30 
where D is the disturbance torque. Design a PID controller with the following satisfactions: 
(a) Zero steady-state error 
(b) PM= 65° 
(c) High bandwidth (as high as possible) 
9-31. Consider the open-loop plant model of a plastic extrusion given in Problem 9-15. 
Design a series of lead-lag compensator that is described by 
Problems 657 
and satisfies the following : 
(a) The phase margin is 45 degrees. 
(b) The steady-stute error of a closed-loop system to the unit-step input is less than 1 %. 
(c) The gain-crossover frequency is 5 rad/sec. 
9-32. A telescope for tracking stars and asteroids on a space shuttle may be modeled as a pure 
mass M. It is suspended by magnetic bearings so that there is no friction, and its attitude is 
controlled by magnetic actuators located at the base of the payload. The dynamic model for the 
control of the :--axis motion is shown in Fig. 9P-32(a). Because there are electrical components on 
the telescope, electric power must be brought to the telescope through a cable. The spring shown is 
used to model the wire-cable attachment, which exerts a spring force on the mass. The force 
produced by the magnetic actuators is denoted by .f(t). The force equation of motion in the z 
direction is 
M 
(a) 
figure SP-32 Z(s) 
(b) 
d2z(r) f(1) -K,z{i) = M d('2 
where Ks = J lb/ft, and M = 150 lb (mass); flt) is in pounds, and z(t) is measured in feet. 
(a) Show that the natural response of the system output :(t) is oscillatory without damping. Find the 
natural undamped frequency of the open-loop space-shutt le system. 
(b) Design the PID controller 
Kr G,.(s) = Kp + KDs +­s 
shown in Fig. 9P-32(b) so that the following performance specifications are satisfied: 
Ramp-error constant Kv = I 00. 
The complex charactreris tic equation roots correspond to a relative damping ratio of 0.707 and a 
natural undamped frequency of I rad/sec. 
Compute and plot the unit-step response of the designed system. Find the maximum overshoot . 
Comment on the design results. 
(c) Design the PTD controller so that the following specifications are satisfied: 
Ramp-error constant K,. = l 00 
Maximum overshoot < 5% 
Compute and plot the unit-step response of the designed system, Find the roots of the characteristic 
equation of the designed system. 
658 Chapter 9. Design of Control Systems 
9-33. Repeat Problem 9-32(b) with the following specifications: 
Ramp-errorconstantK ,. = 100. 
The complex charactreristic equation roots correspond to a relative damping ratio of 1.0 and a 
natural undamped frequency of I rad/sec. 
9-34. Consider a cruise control system shown in Fig. 9P-34. 
------v 
11----, 
M 
1-----f 
Figure 9P-34 
where f is the engine force, v is the velocity, u is the friction force, and u = µ v. 
Assuming M = 1000kg, µ = 50Nsec/m, and f = 500N: 
(a) Find the transfer function of the system. 
(b) Design a PID controller that satisfies the following : 
(i) Rise time is less than 5 sec. 
(ii) Maximum overshoot is less than 10%. 
(iii) Steady-state error is less than 2%. 
9-35. An inventory control system is modeled by the following state equations: 
d.x1 (t) --= -2x2(t) dt 
dx2 (t) = _2u(t) 
dt 
where x1 (t) = level of inventory, x2(t) = rate of sales of product, and u(t) = production rate. The 
output equation is y(t) = x1 (t). One unit of time is one day. Fig. 9P-35 shows the block diagram of the 
closed-loop inventory control system with a series controller. Let the controller be a PD controller, 
Gc(s) = Kp + Kns. 
Y{s) 
Figure 9P-35 
(a) Find the parameter s of the PD controller, Kp and K0, so that the roots of the characteristic 
equation correspond to a relative damping ratio of 0.707 and w11 = 1 rad/sec. Plot the unit-step 
response of y(t) and find the maximum overshoot. 
(b) Find the values of Kp and K0 so that the overshoot is zero and the rise time is .less than 0.06 sec. 
(c) Design the PD controller so that Mr = I and BW ::::; 40 rad/sec. 
9-36. The block diagram of a type 2 control system with a series controller Gc(s) is shown in Fig. 9P-36. 
E(s) 
Gc(s) = Kp + KoS 
Figure 9P-36 U(s) 10000 
s2(s + 10) Y(s) 
Problems 659 
The objective is to design a PD controller so that the following specifications are satisfied: 
Maximum overshoot < l 0% 
Rise time < 0.5 sec 
(a) Obtain the characteristic equation of lhe closed-loop system, and determine the ranges of the 
values of Kp and Ko for stability. Show the region of stability in the K0-versus-Kp plane. 
(b) Construct the root loci of the characteristic equatio11 with Ko = 0 and O :S Kp < oo. The11 
construct the root contours for O :S Ko < oo and several fixed values of KP ranging from 0.001 to 0.01. 
(c) Design the PD controller to satisfy the perfonnance specifications given. Use the information on 
the root contours to help your design. Plot the unit-step response of y(t). 
(d) Check the design results obtained in part (c) in the frequency domain. Determine the phase 
margin, gain margin, M,., and BW of the designed system. 
9-37. Consider a de motor shown in Fig. 9P-37 and described in Section 4-7-3. 
Figure 9P-37 
Assuming the following: 
The rotor inertia (J) = 0.01 kg.m2/s2 1¢ Magnetic 
flux 
Damping ratio of the mechanical system (~) = 0.1 Nms 
Back-emf constant (Kb)= 0.01 Nm/Amp 
Torque constant (K,) = 0.01 Nm/Amp 
Armature resistance (Ra) = 1 D, 
Armature inductance (La)= 0.5H 
Design a PID controller that satisfies the following: 
(a) Settling time is less than 2 sec. 
(b) Maximum overshoot is less than 5%. 
(c) Steady-state error is less than I%. 
9-38. For the de motor described in Prnblem 9-37, assuming the following: 
The rotor inertia (J) = 3.2284E-6kg .m2/s2 
Damping ratio of the mechanical system (I;) = 3.5077E-6 Nms 
Back-emf constant (K1,) = 0.0274 Nm/ Amp 
Torque constant (K1) = 0.0274Nm/Amp 
Armature resistance (Ra) = 4 n 
Armature inductance (La)= 2.75E-6H 
Design a PID controller that satisfies the following: 
(a) Settling time is less than 40 milliseconds . 
(b) Maximum overshoot is less than 16%. 
(c} Zero steady-state error is less than l %. 
(d) Zero steady-state error due to a disturbance. 
660 Chapter 9. Design of Control Systems 
9-39. Consider the broom-balancing conu·ol system described in Problems 4-21 and 10-51. The A* 
and B* ma1rices are given in Problem 10-51 for the small-signal linearized model. 
6.x(t) = A* 6.x(r) + B* 6.r(t) 
~y(t) = CAx(t) 
D* = [O O O J 
Fig. 9P-39 shows the block diagram of the system with a series PD conLroller. Determine if the PD 
controller can stabilize the system; if so, find the values of Kp and K0. If the PD controller cannot 
stabilize the system, explain why not. 
r~-K_p_+_K_oS_~M A ....... ,~ 
Figure 9P-39 
9-40. The process of a unity-feedback control system has the transfer function 
100 
c,,(s) = s2 + 10s + 100 
Design a series controller (PD, PI, or PID) so that the following performance specifications arc 
satisfied: 
Steady-state error due to a step input = 0 
Maximum overshoot< 2% 
Rise time < 0.02 sec 
Ca1Ty out the design in the frequency domain and check the design in the time domain. 
9-41. The forward path of a unity-feedback control ~ystem that includes a disturbance signal D(s) is 
given by 
I 
G(s) = (s2 + 3.6s + 9) 
K(T1.1+l)(r,s+ 1) (a) Design a PID controller with the transfer function of H(s) = • so that the s 
response to any step disturbance is damped in less than 3 sec at the 2% settling time. 
(b) Use MATLAB to plot the response of the closed-loop system to various step disturbance inputs 
and verify your design in part (a). 
9-42. For the inventory control system shown in Fig. 9P-35, let the controller be of the phase-lead 
type: 
I +aTs Gc(.r) = --T.-a> 1 
1 + s 
Determine the values of a and Tso that the following perfonnance specifications are satisfied: 
Steady-state error due to a step input = 0 
Maximum overshoot < 5% 
(a) Design the controller using the root contours with Tand a as variable parameters. Plot the unit­
step response of the designed system. Plot the Bode diagram of G(s) = Gc(s)Gp(s), and find PM, 
GM. M,. and BW of the designed system. 
(b) Design the phase-lead controller so that the following performance specifications are satisfied: 
Steady-state error due to a step input = 0 
Phase margin> 75° 
M, <I.I 
Problems · , 661 
Construct the Bode diagram of G(s) and carry out the design in the frequency domain. Find the 
attributes of the time response of the designed system. 
9-43. Consider that the process of a unity-feedback control system is 
G (s) -1000 
P -s(s + 10) 
Let the series controller be a single-stage phase-lead controller: 
1 +aTs 
Gc(s) = 1 +Ts a> 1 
(a) Determine the values of a and Tso that the zero of Gh) cancels the pole of Gp(s) at s = -10. 
The damping ratio of the designed system should be unity. Find the attributes of the unit-step response 
of the designed system. 
(b) Carry out the design in the frequency domain using the Bode plot. The design specifications are 
as follows: 
Phase margin > 75° 
M,. < 1.1 
Find the attributes of the unit-step response of the designed system. 
9-44. Fig. 9P-44 shows the quarter-car model realization with 2 degrees of freedom. 
m,. _!_x,. 
ks (' s 
m.,. _!_xiv 
Figure 9P-44 
Assuming: 
Body mass (me} = 2500 kg 
Suspension mass (mw) = 320 kg 
Spring constant of suspension system (kc) = 801 000 Nim 
Spring constant of wheel and tire (kw) = 500,000 Nim 
Damping constant of suspension system (c1) = 350 Ns/m 
Damping constant of wheel and tire (Cw) = 15, 020 Ns/m 
When the vehicle is experiencing any road disturbance, the vehicle body should not have large 
oscillations. and the oscillations should be damped quickly. If the deformation tire is negligible. and 
the road disturbance (D) is considered a step input, 
(a) Design a PID contro11er that satisfies the following requirements: 
(i) Overshoot less than 5% 
(ii) Settling time shorter than 5 seconds 
662 ;:."' Chapter 9. Design of Control Systems 
(b) Use MATLAB to plot the response of the closed-loop system to various step disturbance inputs 
and verify your design in part (a). 
9-45. Consider that the controller in the liquid-level control system shown in Fig. 9P-10 is a phase­
lead controller: 
1 +aTs 
Gc(s) = 1 + Ts a > l 
(a) For N = 20, select the values of a and Tso that the maximum overshoot is barely 0%. The value 
of a must not exceed 1000. Find the attributes of the unit-step response of the designed system. Plot 
the unit-step response. 
(b) For N = 20, design the phase-lead controller in the frequency domain. Find the values of a and T 
so that the phase margin is maximized subject to the condition that BW > 100. The value of a must 
not exceed 1000. 
9-46. The transfer function of the process of a unity-feedback control system is 
6 
Gp(s) = s(l + 0.2s){I + 0.5s) 
(a) Construct the Bode diagram of Gp(jw) and determine the PM, GM,Mr, and BWof the system. 
(b) Design a series single-stage series phase-lead controller with the transfer function 
Gc(s) = (\ :a;:) a> 1 
so that the phase margin is maximum. The value of a must not be greater than 1000. Determine PM 
and Mr of the designed system. Detennine the attributes of the unit-step response. 
(c) Using the system designed in part (b) as a basis, design a two-stage phase-lead controller so that 
the phase margin is at least 85°. The transfer function of the two-stage phase-lead controller is 
Gc{s) = (1 + aT1s) (I+ bT2s) a> I b > I 
1 + Tis 1 +T2s 
where a and T1 are determined in part (b). The value of T2 should not exceed 1000. Find the values of 
PM and M, of the designed system. Find the attributes of the unit-step response. 
(d) Plot the unit-step responses of the output in parts (a), (b), and (c), 
9-47. Fig. 9P-47 shows an inverted pendulum on a cart. 
M 
f Motor 
Figure 9P-47 
Problems 663 
Assumin g: 
M mass of the cart 0.5 kg 
m mass of the pendulum 0.2 kg 
µ. friction of the cart 0.1 N/m/sec 
I length to pendulum center of mass 0.3 m 
I inertia of the pendulum 0.006 kg*m2 
(a) Design a PID controller so that the settling time is less than 5 seconds and the pendulum angle is 
never more than 0.05 radians from the vertical position. 
(b) If the step input is applied to the cart, design a PID controller so that the settling ti rne for x and e 
is less than 5 seconds, the rise time for xis less than 0.5 seconds, and the overshoot of theta is less than 
20 degrees (0.35 radians). 
9-48. A phase-lock-loop, de-motor-speed-control system is described in Problem 4-46. The block 
diagram of the system is shown in Fig. 9P-48. The system parameters and transfer functions are given 
as follows: 
Reference speed command, w, = 120 pulse/sec 
Phase-detector gain, KP = 0.06 V /pulse/sec 
Amplifier gain, K(I = 20 
Encoder gain, Ke = 5 .73 pulse/rad 
Counter gain, N = 1 
Motor transfer function, 
D,,,(s) 10 
Ea(s) s(l + 0.05s) 
Q"'(s) 
1------.t MOTOR .----r--• Motor speed 
Filler Amplifier 
Motor speed 
Figure 9P-48 (pulses/sec) Counter Encoder 
(a) Let the filter (controller) transfer function be of ilie form 
Gc(s) = E0(s) = 1 +R2Cs 
E;(s) R1 Cs (rad/sec) 
where R1 = 2 x 106 n and C = 1 µF. Determine the value of R2 so that the complex.. roots of the 
closed-loop characteristic equation have a maltimum relative damping ratio. Sketch the root loci of 
the characteristic equatjon for O S R2 < oo. Compute and plot the unit-step responses of the motor 
speed J,v(t) (pulse/sec) with the values of R2 found, when the input is 120 pulse/sec. Convert the 
speed in pulse/sec to rpm. 
(b) Let the filter transfer function be 
G (s) = 1 + aTs a > 1 
c 1 + Ts 
where T = 0.01. Find a so that the complex roots of the characteristic equation have a maximum 
relative damping ratio. Compute and plot the unit-step response of the motor speed /;0(1) (pulse/sec) 
when the input is 120 pulse/sec . 
(c) Design the phase-lea d controller in the frequency domain so that the phase margin is at least 60°. 
664 • Chapter 9. Design of Control Systems 
9-49. Consider that the controller in the liquid-level control system shown in Fig. 9P-IO is a single­
stage phase-lag controller: 
G ( ) ~ 1 + aTs cs ---- a<I 1+n 
(a) For N = 20, select the values of a and T so that the two complex roots of the characteristic 
equation correspond to a relative damping ratio of approximately 0. 707. Plot the unit-step response of 
the output y(t). Find the attributes of the unit-step response. Plot the Bode plot of Gc(s)Gp(s) and 
determine the phase margin of the designed system. 
(b) For N = 20, design the phase-lag controller in the frequency domain so that the phase margin is 
approximately 60°. Plot the unit-step response of the output y(t). and find the attributes of the unit­
step response. 
9-50. The controlled process of a unity-feedback control system is 
K Gp(s) = 2 s(s + 5) 
The series controller has the transfer function 
Gh) = 1 +aTs I+n 
(a) Design a phase-Jead controller (a> 1) so that the following performance specifications arc 
satisfied: 
Ramp-error constant Kv = IO 
Maximum overshoot is near minimum 
The value of a must not exceed 1000. Plot the unit-step response and give its attributes. 
{b) Design a phase-lead controller in the frequency domain so that the following performance 
specifications are satisfied: 
Ramp-error constant Ki· = 10 
Phase margin is near maximum 
The value of a must not exceed 1000 
(c) Design a phase-lag controller (a< 1) so that the following performance specifications are 
satisfied: 
Ramp.error constant Ki·= 10 
Maximum overshoot < l % 
Rise lime t, < 2 sec 
Settling time ts < 2.5 sec 
Find the PM. GM. M,, and BW of the designed system. 
(d) Design the phase-lag controlJer in the frequency domain so that the following performance 
specifications are satisfied: 
Ramp-error constant Kv = 10 
Phase margin 2: 70° 
Check the unit-step response attributes of the designed system and compare with those obtained in 
part (c). 
Problems ~ 665 
9-51. Fig. 9P-51 shows the "beam and ball" system that is described in Problem 4-11. 
figure 9P-51 
Assuming: 
m = 0.11 kg 
r = 0.015 
d=0.03m 
g == 9.8m/s2 
L= 1.0m mass of the ball 
radius of the ball 
lever arm offset 
gravitational 
acceleration 
length of the beam I= 9.99e-6kgm2 
p 
a 
(J hairs moment of inertia 
ball position coordinate 
beam angle coordinate 
servo gear angle 
Design a PID controller so that the settling time is less than 3 seconds and the maximum overshoot 
is no more than 5%. 
9-52. The controlled process of a de-motor control system with unity feedback has the transfer 
function 
6.087 X t0IO 
Gp(s) = s(s3 + 423.42s2 + 2.6667 x 106 s + 4.2342 x 108) 
Due to the compliance in the motor shaft, the process transfer function contains two lightly damped 
poles, which will cause oscillations in the output response. The foIIowing performance criteria are 
to be satisfied: 
Maximum overshoot< 1 % 
Rise time tr < 0.15 sec 
Settling time(~ < 0.15 sec 
Output response should not have osciitations 
Ramp-error constant is not affected 
(a) Design a series phase-lead controUer, 
G () _ 1 +aTs cS-l+Ts a>1 
so that all the step-response attributes (except for the oscillations) are satisfied. 
(b) To eliminate the oscillations due to the motor shaft compliance, add another stage to the 
controller with the transfer function 
G ( ) _ s2 + 2{zWnS + w~ c1s-., 2 2 s~ + {pw,,s+wn 
so that the zeros of G,.1(s) will cancel the two complex. poles of Gp(s). Set the value of { P so that the 
two poles of Gc1(s) wiII not have an appreciable affect on the system response. Determine the 
666 Chapter 9. Design of Control Systems 
attributes of the unit-step response to see if all the requirements are satisfied. Plot the unit-step 
responses of the uncompensated system and the compensated system with the pha~e-lead controller 
designed in part (b). 
9-53. A computer-rape-drive system utilizing a pennanent -magnet de-motor is shown in Fig. 9P-53(a). 
The closed-loop system is modeled by the block diagram in Fig. 9P-53(b). The constant KL represents the 
spring constant of the elastic tape, and 81. denotes the viscous-friction coefficient between the tape and 
the capstans. The system parameters are as follows: 
Capstan 
(a) 
+ 
G,.(s) 
Controller 
Speed transduccr 
(b) 
Figure 9P-53 
K; = motor torque constant = 10 oz-in./ A 
K1, = motor back-emf constant = 0.0706 V /rad/sec 
8111 = motor friction coefficent = 3 oz-in./rad/sec 
Ra= 0.25!l La ~OH 
K1, = 3000 oz-in./rad BL = 10 oz-in./rad/sec 
Ji = 6 oz-in./rad/sec2 KJ = l Y/rad/sec 
J,,, = 0.05 oz-in./rad/sec2 Load 
Load 
(a) Write the state equations of the system between e0 and el using el, WL, em, and w111 as state 
variables and ea as input. Draw a state diagram using the state equations. Derive the transfer functions: 
O,,,(s) and OL(s) 
Ea(s) Ea(s) 
(b) The objective of the system is to control the speed of the tape, WL, accurately. Consider that a PJ 
controller with the transfer function Gc(s) = Kp + K, /sis to be used. Find the values of K" and K1 so 
that the following specifications are satisfied: 
Ramp-error constant Kv = 100 
Rise time< 0.02 sec 
Settling time < 0.02 sec 
Maximum overshoot< 1 % orat minimum 
Plot the unit-step response of wL(t) of the system. 
Problems 667 
(c) Design the Pl controller in the frequency domain. The value of K1 is to be selected as in part (b). 
Vary the value of Kp and compute the values of PM, GM, M,., and BW. Find the value of Kp so that PM 
is mttximum. How does this value of Kp compare with the result obtained in part (b)? 
9-54. Fig. 9P-54 shows the block diagram of a motor-contro l system that has a flexible shaft 
between the motor and the load. The transfer function between the motor torque and motor 
displacement is 
Figure 9P-54 
G ( ) _ 0,,,(s) _ hs2 + BLs + K,. 
pS--[ 3 1 ] Tm(s) S Jmhs· + (8111h + 81.lm)s-+ (KLlm + KLh + BmBL)s + BmKL 
where Ji= 0.01, BL= 0.1, KL= 10, ]111 = 0.01, 8111 = 0.1, and K = 100. 
(a) Compute and plot the unit-step response of em(t). Find the attributes of the unit-step response. 
(b) Design a second-order notch controller with the transfer function 
G ( ) _ s2 + 2{;:lu,1S + ct>~ 
CS -1 2 s~ + 2t f'w,,s + (V11 
so that its zeros cancel the complex poles of Gp(s). The two poles of G,.(s) should be selected so that 
they do nut affect the steady-state response of the system, and the maximum overshoot is a minimum. 
Compute the att1.'1butes of the unit-step response and plot the response . 
(c) Carry out design of the second-order controller in the frequency domain. Plot the Bode diagram 
of the uncompensated G"(s), and find the values of PM, GM,Mn and BW. Set the two zeros of GJs) to 
cancel the two complex poles of G1,(s). Determine the value of i; fl by determining the amount of 
attenuation required from the second-order nocch controller and using Eq. (9-155). Find the PM, GM, 
M,., and BW of the compensated system. How do the frequency -domain design results compare with 
the results in pan (b)? 
9-55. The transfer function of the process of a unity-feedback control system is 
500(s + I 0) 
G,,(s) = s(s2 + I Os+ 1000) 
(a) Plot the Bode diagram of Gµ(s) and determine the PM, GM, M,., and BW of the uncompensated 
system. Compute and plot the un.it-step response of the system. 
(b) Design a series second-order notch controller with the transfer function 
G ( ) _ s2 + 2szWnS + (t>~ 
t' ~ -~-~~-- "':' 
· s2 + 21; flw,,s + (V1~ 
so that its zeros cancel the complex poles of Gp(s). Determine the value of tp using the method 
outlined in Section 9-8-2. Find the PM, GM, M .. , and BW of the designed system. Compute and plot 
the uniH;tep response. 
(c) Design the series second-order notch controller so that its zeros cancel the complex poles of 
G1,(s). Determine the value oft" so that the following specifications are satisfied: 
Maximum overshoot < I% 
Rise time< 0.4 sec 
Settling time< 0.5 sec 
668 Chapter 9. Design of Control Systems 
9-56. Design the controllers G,1(s) and G,.(s) for the system shown in Fig. 9P-56 so that the 
following specifications are satisfied: 
K Y(s) 
s(s1 + lOs + 100) 
G1,(s) 
Figure 9P-56 
Ramp-enor constant Kv = 50 
Dominant roots of the characteristic equation at -5 ± j5 approximat ely 
Rise time< 0.1 sec 
System must be robust when K varies ±20% from the nominal value, with the rise time and 
overshoot staying within specification s 
Compute and plot the unit-step responses to check the design. 
9-57. Fig. 9P-57 shows the block diagram of a motor-control system. The transfer function of the 
controlled process is 
G ,(s) = lOOOK 
1 s(s+a) 
Y(s) 
Figure 9P-57 
where K denotes the aggregate of the amplifier gain and motor torque constant, and a is the inverse of 
the motor time constant. Design the controllers G,1(s) and Gc(s) so that the following performance 
specification s are satisfied. 
Ramp-enor constant Kv = I 00 when a = IO 
Rise time< 0.3 sec 
Maximum overshoot < 8% 
Dominant characteristic equation roots = -5 ± )5 
System must be robust when a varies between 8 and 12 
Compute and plot the unit-step responses to verify the design. 
9-58. Fig. 9P-58 shows the block diagram of a de-motor control system with tachometer feedback . 
Find the values of Kand K, so that the following specificatio ns are satisfied: 
Ramp-error constant K,. = 1 
Dominant characteristic equation roots correspond to a damping ratio of approximately 0. 707; if 
there are two solutions, select the larger value of K 
K Y(s) 
s(s + l)(s + 10) 
Figure 9P-58 
Problems 669 
9-59. Carry out the design with the specifications given in Problem 9-58 for the system shown in 
Fig. 9P-59. 
10 Y(s) 
s(s + l)(s + IO) 
Figure 9P-59 
9-60. The block diagram of a control system with a type 2 process is shown in Fig. 9P-60. The 
system is to be compensated by tachometer feedback and a series controller. Find the values of a, T, K, 
and K, so that the following performance specifications are satisfied: 
Figure 9P-60 I +aTs 
I +Ts 
Ramp-error constant K,. = 100 K 
s2(s + 10) Y(s) 
Dominant characteristic equation roots correspond to a damping ratio of 0.707 
9-61. The aircraft-attitude control system described in Section 5-8 is modeled by the block diagram 
shown in Fig. 9P-61. The system parameters are as follows: 
K = variable Ks= 1 K1 = 10 K2 = 0.5 K1 = variable Ra= 5 
La= 0.003 K; =9.0 Kb= 0.0636 J,,, = 0.0001 h = 0.01 
8111 = 0.005 BL= 1.0 N=O.l 
I I ~ T,s+ii; 
Figure 9P-61 
670 t,,,-Chapter 9. Design of Control Systems 
Find the values of K and K, so that the following specifications are satisfied: 
Ramp-error const,U1t Kv = 100 
Relative damping ratio of the complex roots of the characteristic equation is approximately 0.707 
Plot the unit-step response of the designed system. Show that the system performance is extremely 
insensitive to the value of K. Explain why this is so. 
9-62. Fig. 9P-62 shows the block diagram of a position-control system with a series controller 
G,.(s). 
Figure 9P-62 _1_0_ 
1 +O.ls 2 Y(s) 
s(I + O.Ols) 
(a) Detennine the minimum value of the amplifier gain K so that the steady-state value of the output 
y(t) due to a unit-step torque disturbance is :S 0.01. 
(b) Show that the uncompensated system is unstable with the minimum value of K determined in 
part (a). Construct the Bode diagram for the open-loop transfer function G(s) == Y(s)/ E(s), and find 
the values of PM and GM. 
(c) Design a single-stage phase-lead controller with the transfer function 
1 +aTs Gc(s) =---a> l 1 +Ts 
so that the phase margin is 30°. Show that this is nearly the highest phase margin that can be achieved 
with a single-stage phase-lead controller. Find GM, M,, and BW of Lhe compensated system. 
(d) Design a two-stage phase-lead controJler using the system arrived at in part (c) as a basis so that 
the phase margin is 55°. Show that this is the best PM that can be obtained for this system with a two­
stage phase-lead controller. Find GM. Mr, and BW of the compensated system. 
9-63. The transfer function of the process of a unity-feedback control system is 
60 Gc(s) = -----­s(l +0.2s)(l +0.5s) 
Show that. due to the relative high gain, the uncompensated system is unstable. 
(a) Design a two-stage phase-lead controller with 
G,(s) = (1 + aT1s) (1 + bT2s) 0 > l, /J > 1 I+ Tis l + h, 
so that the phase margin is greater than 60°. Conduct the design by first detemlining the values of a 
and T1 to realize a rnaximum phase margin that. can be achieved with a single-stage phase-lead 
controller. The second stage of the controller is then designed lo realize the balance of the 60° phase 
margin. Determine GM. M,., and BW of the compensated system. Compute and plot the unit-step 
response of the compensated system. 
(b) Design a single-stage phase-lag controller with 
() I +aTi Ge s =---a<l 1 + Ts 
so that the phase margin of the compe.nsated system is greater than 60°. Determine GM, M,., and BW 
of the compensated system. Compute and plot the unit-step response of the compensated system. 
(c) Design a lag-lead controller with G"(s) as in the equation in part (a). Design the phase-lag 
portion first by setting the phase margin at 40°. The resulting system is then compensated by the 
Problems 671 
phase-lead portion to achieve a total of 60° of phase margin. Determine GM, M,, and BW of the 
compensated system. Compute and plot the unit-step response of the compensated system. 
9-64. The block diagram of the steel-rolling system described in Problem 4-18 is shown in 
Fig. 9P-64. The transfer function of the process is 
Figure 9P-64 Y(s) se-O. ls 
G,,(s) = -= -----,---,-----,­E(s) s(l +0.ls)(l +0.Ss) 
Y(s) 
(a) Approximate the time delay by 
e-o 1., ~ l -0.05s 
l + 0.05s K., = l 
Design a series controller of your choice so that the phase margin of the compensated system is at 
least 60°. Determine GM, Mr, and BW of the compensated system. Compute and plot the unit-step 
responses of the compensated and the uncompensated systems. 
(b) Repeat part (a) without using the approximation of 1he time delay. 
9-65. Human beings breathe in order to provide for gas exchange for the entire body. A respiratory 
control system is needed to ensure that the body's needs for 1his gas exchange are adequately met. The 
criterion of control is adequate ventilation, which ensures satisfactory levels of both oxygen and 
carbon dioxide in the arterial blood. Respiration is cont.rolled by neural impulses that originate within 
the lower brain and are transmitted to the chest cavity and diaphragm to govern the rate and tidal 
volume. One source of signals consists of the chemoreceptor s located near the respiratory center, 
which are sensitive to carbon dioxide and oxygen concentra tions. Fig. 9P-65 shows the block diagram 
of a simplified model of the human respiratory control system. The objective is to control the effective 
ventilation of the lungs so that a satisfactory balance of concentrations of carbon dioxide and oxygen 
is maintained in the blood circulated at the chemoreceptor. 
0.1 Y(s) 
(s + 05)(s + 0.1 )(s + 0.2) Concentration 
Lungs Circulating system 
Chemorcceptor 
Figure SP-65 
(a) Plot the Bode diagram of the transfer function G(s) = Y(s)/ E(s) when Gc(s) = I. Find the PM 
and GM. Determine the stability of the system. 
(b) Design a PI controller, Gc(s) = Kp + K1/.1·, so that the following specifications are satisfied: 
Ramp-error constant K,. = I 
Phase margin is maximized 
Plot the unit-step response of the system. Find the attributes of the unit-slep response. 
(c) Design a Pl controller so that the following specifications are satisfied: 
Ramp-error constant K,. = I 
Maximum overshoot is minimized 
672 ~ Chapter 9. Design of Control Systems 
Plot the unit-step response of the system. Find the attributes of the unit-step response. Compare the 
design results in parts (b) and (c). 
9-66. The block diagram of a control system with state feedback is shown in Fig. 9P-66. Find the 
real feedback gains k1, k2, and k3 so that: 
Figure 9P-66 
The steady-state error ess [e(t) is the error signal] due to a step input is zero. 
The complex roots of the characteristic equation are at -1 + j and -1 -j. 
Find the third root. Can all three roots be arbitrarily assigned while still meeting the steady-sta te 
requirement? 
9-67. The block diagram of a control system with state feedback is shown in Fig. 9P-67(a). The 
feeubai;k gairu; k1, k2, and k3 are real constants . 
(a) 
(b) 
Figure 9P-67 
(a) Find the values of the feedback gains so that: 
The steady-state error e.,_. [e(t) is the error signal] due to a step input is zero. 
The characteristic equation roots are at -1 + j, -1 -j, and -10. 
(b) Instead of using state feedback, a series controller is implemented, as shown in Fig. 9P-67(b). 
Find the transfer function of the controller Gc(s) in terms of ki, k2, and k3 found in part (a) and the 
other system parameters . 
:CHAPTER 10 
State Variable Analysis 
10-1 INTRODUCTION 
In Chapter 2 we presented the concept and definition of state variables and state equations for 
linear continuous-data and discrete-data dynamic systems. In Chapter 3 we used block­
diagram and signal-flow-graph (SFG) methods to obtain the transfer function of linear 
systems. In this chapter, the SFG concept is extended to the modeling of the state equations, 
and the result is rhe state diagram. In contrast to the transfer-function approach to the analysis 
and design oflinear control systems, the state-variable method is regarded as modem, since it 
uses underlying force for optimal control. The basic characteristic of the state-variable 
formulation is that linear and nonlinear systems, time-invariant and time-varying systems, and 
single-variable and multivariable systems can all be modeled in a unified manner. Transfer 
functions, on the other hand, are defined only for linear time-invariant systems. 
The objective of this chapter is to introduce the basic methods of state variables and state 
equations so that the reader can gain a working knowledge of the subject for further studies 
when the state-space approach is used for modem and optimal control design. Specifically, 
the closed-fonn solutions of linear time-invariant state equations are presented. Various 
transfonnations that may be used to facilitate the analysis and design oflinear control systems 
in the state-variable domain are introduced . The relationship between the conventional 
transfer-function approach and the state-variable approach is established so that the analyst 
will be able to investigate a system problem with various alternative methods. Finally, the 
controllability and observability of linear systems are defined and their applications 
investigated. Some state-space controller design problems appear in the end. At the end 
of the chapter, we also present MATLAB tools to solve most state-space problems . 
10-2 BLOCK DIAGRAMS, TRANSFER FUNCTIONS, AND STATE DIAGRAMS 
10-2-1 Transfer Functions (Multivariable Systems) 
The definition of a transfer function is easily extended to a system with multiple inputs and 
outputs. A system of this type is often referred to as a multivariable system. In a 
multivadable system, a differential equation of the form of Eq. (2-217) may be used to 
describe the relationship between a pair of input and output variables, when all other inputs 
are set to zero. This equation is restated as 
d11y(t) d11-1y(t) dy(t) 
~+a,,_, dt'i-1 + ... + a1 dt+aoy(t) 
dmu(t) dm-l u(t) du(t) 
= bm -d-. -+ bm-1 d 1 + · · · + bi --+bou(t) ~ ~- & (10-1) 
673 
674 Chapter 10. State Variable Analysis 
The coefficients aotal, ... ,a11_1 and bo,b1, ... ,bm are real constants. Because the 
principle of superposition is valid for linear systems, the total effect on any output due 
to all the inputs acting simultaneously is obtained by adding up the outputs due to each 
input acting alone. 
In general, if a linear system hasp inputs and q outputs, the transfer function between 
the jth input and the ith output is defined as 
Y;(s) 
Gu(s) =-() Rj s (10-2) 
with Rk(s) = 0, k = l, 2, ... , p, k / j. Note that Eq. (10-2) is defined with only the jth 
input in effect, whereas the other inputs are set to zero. When all the p inputs are in action, 
the ith output transform is written 
It is convenient to express Eq. (10~3) in matrix-vector form: 
Y(s) = G(s)R(s) 
where 
[Y1(s)l 
Y2(s) 
Y(s) = . 
Yq(s) 
is the q x I transformed output vector, 
is the p x 1 transformed input vector, and 
[Gu (s) 
G(s) = G2~ (s) 
Gqt (s) 
is the q x p trnnsfer-function matrix. 
10-2-2 Block Diagrams and Transfer Functions of Multivariable Systems G1p(s)l 
G2p(s) 
Gqp(s) (10-4) 
(10-5) 
(10-6) 
(10-7) 
In this section, we shall illustrate the block diagram and matrix representations of 
multivariable systems. Two block-diagram representations of a multivariable system 
with p inputs and q outputs are shown in Fig. IQ ... l(a) and (b). In Fig. lOwl(a), the 
r 
r . . . 
'i,(I) 
r(I) 10-2 Block Diagrams, Transfer Functions, and State Diagrams 675 
r 
MULTIVARIABLE 
SYSTEM . . . 
~ yq(t) 
(a) 
MUL TIVARIABLE 1----• · y(I) 
SYSTEM 
(b) Figure 10-1 Block diagram representations 
of a multivariable system. 
individual input and output signals are designated , whereas in the block diagram of 
Fig. 10-l(b), the multiplicity of the inputs and outputs is denoted by vectors. The case of 
Fig. 10-1 (b) is preferable in practice because of its simplicity . 
Fig. I 0-2 shows the block diagram of a multi variable feedback control system. The 
transfer function relationships of the system are ex.pressed in vector-matrix form (see 
Section 10-3 for more detail): 
Y(s) = G(s)U(s) 
U(s) = R(s) -B(s) 
.B(s) = H(s)Y(s) (10-8) 
(10-9) 
(10-10) 
where Y(s) is the q x I output vector; U(s), R(s), and B(s) are all p x 1 vectors; and 
G(s) and H(s) are q x p and p x q transfer-function matrices, respectively. Substituting 
Eq. (10-9) into Eq. (10-8) and then from Eq. (10-8) to Eq. (10-10), we get 
Y(s) = G(s)R(s) -G(s)H(s)Y(s ) (10-11) 
Solving for Y(s) from Eq. (10-11) gives 
R(s) U(s) 
+ 
B(s) Y(s) =[I+ G(s)H(s)r1 G(s)R(s) (10-12) 
G(s) 
H(s) Y(s) 
Figure 10-2 Block diagram of a multivariablc 
feedback control system. 
676 .. Chapter 10. State Variable Analysis 
provided that I+ G(s)H(s) is nonsingular. The closed-loop transfer matrix is defined as 
M(s) ={I+ G(s)H(s)r1 G(s) (10-13) 
Then Eq. (10-12) is written 
Y(s) = M(s)R(s) (10-14) 
~ EXAMPLE 10 .. 2 .. 1 Consider that the forward-path transfer function matrix and the feedback-path transfer function 
matrix of the system shown in Fig. 10-2 are 
10-2-3 State Diagram G(s) = [+ -I~] H(s) = [~ ~] 
s+2 (10-15) 
respectively. The closed-loop transfer function matrix of the system is given by Eq. (10-14) and is 
evaluated as follows: 
l+G(s)H(s) = [l +
2s~ 1 -1 ] = r::~ -} ] 
1 I __ l_ 2 s+ 3 
s+2 s+2 
The closed-loop transfer function matrix is 
M(s) =[I+ G(s)H(s)r1 G(s) = i [;~} s L] [+ -} ] 
s+l s+2 (10-17) 
where 
A = s + 2 s + 3 + ~ = s2 + Ss + 2 
s + 1 s + 2 s s(s + 1) (10-18) 
Thus, 
[ 3s2 + 9s + 4 1 l 
M(s) = s(s + 1) s(s + l){s + 2) -; 
s2 + 5s + 2 2 3s + 2 
s(s + 1) (10-19) 
In this section, we introduce the state diagram, which is an extension of the SFG to portray 
state equations and differential equations. The significance of the state diagram is that it 
forms a close relationship amo11g the state equations, t:omputer simulation, and transfer 
functions. A state diagram is constructed following all the rules of the SFG using the 
Laplace-transfonned state equations. 
10-2 Block Diagrams, Transfer Functions, and State Diagrams .-677 
The basic elements of a state diagram are similar to the conventional SFG, except for 
the integration operation. Let the variables x1(t) and x2(t) be related by the first-order 
differentiation: 
(10-20) 
Integrating both sides of the last equation with respect to t from the initial time t0, we get 
(10-21) 
Because the SFG algebra does not handle integration in the time domain, we must take the 
Laplace transform on both sides of Eq. (10-20). We have 
(10-22) 
Because the past history of the integrator is represented by x 1 ( t0), and the state transition is 
assumed to start at r = t0, x2(r) = 0 for O < r < t0• Thus, Eq. (10-22) becomes 
X ( ) X2(s) x1 (to) 
1 s = ----+ --r~to s s (10-23) 
Eq. (10-23) is now algebraic and can be represented by an SFG, as shown in Fig. 10-3. 
Fig. 10-3 shows that the output of the integrator is equal to s-1 times the input. plus the 
initial condition x1(t0)/s. An alternative SFG with fewer elements for Eq. (10-23) is shown 
in Fig. 10-4. 
Before embarking on several illustrative examples on the construction of state 
diagrams, let us point out the important uses of the state diagram. 
-I s -I s Figure 10-3 Signal-flow graph representation of 
X1(s) X1(s) == [X2(s)/s] + [xt (to)/s}. 
Figure 10-4 Signal-flow graph representation of 
X1(s) X1 (s) = [X2(s)/s) + [x1 (to}/s]. 
678 ..,. Chapter 10. State Variable Analysis 
1. A state diagram can be constructed directly from the system's differential equation. 
This allows the determination of the state variables and the state equations. 
2. A state diagram can be constructed from the system's transfer function. This step 
is defined as the decomposition of transfer functions (Section 10-10). 
3. The state diagram can be used to program the system on an analog computer or for 
simulation on a digital computer. 
4. The state-transition equation in the Laplace transform domain may be obtained 
from the state diagram by using the SFG gain formula. 
5. The transfer functions of a system can be determined from the state diagram. 
6. The state equations and the output equations can be determined from the state 
diagram. 
The details of these techniques will follow. 
10-2-4 From Differential Equations to State Diagrams 
When a linear system is described by a high~order differential equation, a state diagram can 
be constructed from these equations, although a direct approach is not always the most 
convenient. Consider the following differential equation: 
0 
R 
R 
R dny(t) dn-l y(t) dy(t) --+a +· .. +a --+a y(t) = r(t) dtn n drn-1 2 dt 1 
(a) 
-a1 
(b) 
--al 
(c) 0 
sY 0 y 
y(to) -s-
Figure 10-5 State-diagram representation of the differential equation of Eq. (10-24). (10-24) 
y 
10-2 Block Diagrams, Transfer Functions, and State Diagrams ~ 679 
To construct a state diagram using this equation. we rearrange the equation as 
d1'y(t) d11-1y(t) dy(t) ----an -· · · -az---a1y(t) + r(t) dtn dtn-l dt (10-25) 
As a first step, the nodes representing R(s),snY(s),s11-1Y(s), ... ,sY(s), and Y(s) are 
arranged from left to right, as shown in Fig. 10-5(a). Because iY(s) corresponds to d;y(t)/ 
dt'. i = 0, I, 2, ... , n, in the Laplace domain, as the next step, the nodes in Fig. 10-5(a) are 
connected by branches to portray Eq. (10-25), resulting in Fig. 10-5(b). Finally, the 
integrator branches with gains of s-1 are inserted, and the initial conditions are added to 
the outputs of the integrators, according to the basic scheme in Fig. 10-3. The complete 
state diagram is drawn as shown in Fig. 10-S(c). The outputs of the integrators are de.fined 
as the state variables, Xi, x2, ••• , Xn, This is usuaUy the natural choice of state variables 
once the state diagram is drawn. 
When the differential equation has derivatives of the input on the right side, the 
problem of drawing the state diagram directly is not as straightforward as just illustrated. 
We will show that, in general, it is more convenient to obtain the transfer function from the 
differential equation first and then arrive at the state diagram through decomposition 
(Section 10-10). 
>· EXAMPLE 10-2-2 Consider the differential equation 
d2y(t) + 3 dy(t) + 2y(t) = r(t) 
dt2 dt (10-26) 
Equating the highest-ordered term of the last equation to the rest of the terms, we have 
d2y(t) = -3 dy(t) -2y(t) + r(t) 
dt2 dt (10-27) 
Following the procedure just outlined, the state diagram of the system is drawn as shown in 
Fig. 10-6. The state variables x1 and x2 are assigned as shown. 
R 
-2 
Figure 10-6 State diagram for Eq. (10-26). 
10-2-5 From State Diagrams to Transfer Functions y(to) -s-
y 
The transfer fllllction between an input and an output is obtained from the state diagram by 
using the gain formula and setting all other inputs and initial states to zero. The following 
example shows how the transfer function is obtained directly from a state diagram. 
680 · · Chapter 10. State Variable Analysis 
EXAMPLE 10-2-3 Consider the state diagram of Fig. 10-6. The transfer function between R(s) and Y(s) is obtained by 
applying the gain formula between these two nodes and setting the initial states to zero. We have 
Y(s) 
R(s) = s2 + 3s + 2 (10-28) 
10-2-6 From State Diagrams to State and Output Equations 
The state equations and the output equations can be obtained directly from the state 
diagram by using the SFG gain formula. The general form of a state equation and the output 
equation for a linear system is described in Chapter 2 and presented here. 
State equation: 
~~) = a.x(t) + br(t) (10-29) 
Output equation: 
Y(t) = cx(t) + dr(t) (10-30) 
where x(t) is the state variable; r(t) is the input; y(t) is the output; and a, b, c, and dare 
constant coefficients. Based on the general form of the state and output equations, the 
following procedure of deriving the state and output equations from the state diagram are 
outlined; 
l. Delete the initial states and the integrator branches with gains s-1 from the state 
diagram, since the state and output equations do not contain the Laplace operator s 
or the initial states. 
2. For the state equations, regard the nodes that represent the derivatives of the state 
variables as output nodes, since these variables appear on the left-hand side of the 
state equations. The output y(t) in the output equation is naturally an output node 
variable. 
3. Regard the state variables and the inputs as input variables on the state diagram, since 
these variables are found on the right-hand side of the state and output equations. 
4. Apply the SFG gain formula to the state diagram. 
EXAMPLE 10-2-4 Fig. 10-7 shows the state diagram of Fig. 10·6 with the integrator branches and the initial states 
eliminated. Using dx1(t)/dt and dx2(t)/dt as the output nodes and x1(t), x2(t). and t(t) as input nodes, 
and applying the gain formula between these nodes, the state equations are obtained as 
dxi(t) () --=x2 t dt I ( 10-31) 
dx2(t) ---;fr = -2x1 (t) -3.ti(t) + r(t) (10-32) 
r 
-2 
Figure 10-7 State diagram of Fig. 10-6 with the initial states and the integrator branches left out. 
10-2 Block Diagrams, Transfer Functions, and State Diagrams < 681 
Applying the gain formula with x1(t). x2(t). and r(t) as input nodes and y(t) as the 
output node, the output equation is written 
y(t) = Xt (t) 
EXAMPLE 10-2-5 As another example on the determination of the state equations from the state diagram, consider the state 
diagram shown in Fig. 10-8(a). This example will also emphasize the importance of applying the gain 
formula. Fig. 10-8(b) shows the state diagram with the initial states and the integrator branches deleted. 
Notice that, in this case, the state diagram in Fig. 10-S(b) still contains a loop. By applying the gain 
formula to the state diagram in Fig. 10-S(b) with it ( t), .tz ( t), and .tJ ( t) as output-node variables and r(t), 
X1 (t). x2(t), and x;\(t) as input nodes, the state equations are obtained as follows in vector-matrix fonn: 
dx1 (t) 
dt 
d.t2(t) 
dt 
d.t'3 (t) 
dt 
The output equation is 
-1 s = [-( az 0
+ a3) 
1 + aoa3 
0 0 l [x1(t)l [OJ l -aoa2 
1 + aoa3 x2(t) + 0 r(t) 
0 x3(t) 1 (10-34) 1 
-a1 
0 
1 ao y(t) = l -tl (1) + l X3(t) +aoa3 +aoa3 (10-35) 
(a) 
(b) 
Figure 10-8 (a)Statediagram. (b) State diagram in part(a) with all initial states and integrators left out. 
682 ~ Chapter 10. State Variable Analysis 
.. 10-3 VECTOR-MATRIX REPRESENTATION OF STATE EQUATIONS 
Let then state equations of an nth-order dynamic system be represented as 
dx1 (t) dt = ..fi[x1 (t), x2(t), . , , , .x,r(t), u1 (t), u2(t), ... , up(t), Wt (t), w2(t), ... , Wv(t)] 
(10~36) 
where i = l, 2, ... , n. The ith state variable is represented by x1(t); u;(t) denotes the jth 
input for j = 1, 2, ..• , p; and wk( t) denotes the kth disturbance input, with k = l, 2, ... , v. 
Let the variables y1 (t),y2(t), ..• ,yq(t) be the q output variables uf the system. In 
general, the output variables are functions of the state variables and the input variables. The 
output equations can be expressed as 
Yj(t) = 8i[x1 (t), x2(t), ... , X,i(t), ui (t), u2(t), ... , up(t), w1 (t), w2(t), ... , Wv(t)] 
(10-37) 
where j = 1, 2, ... , q. 
The set of n state equations in Eq. (I 0-36) and q output equations in Eq. (10-37) together 
form the dynamic equations. For ease of expression and manipulation, it is convenient to 
represent the dynamic equations in vector~matrix form. Let us define the following vectors: 
State vector: 
[XI (t) l x2(t) 
(n X 1) x{t) = . 
Xn(t) (10-38) 
Input vector: 
[u,(r)l u2(t) 
( p X 1) u(t) = : 
Up(t) (10-39) 
Output vector: 
[YI (t) l 
y(t) = Y2t (q X 1) 
Yq(t) (10-40) 
Disturbance vector: 
[ w, (t) l w2(t) 
(v X 1) w(t) = . 
Wv(t) (10-41) 
10-3 Vector-Matrix Representation of State Equations <Ill 683 
By using these vectors, then state equations of Eq. (10-36) can be written 
dx(t) ~ = f[x(t), u(t), w(t)] (10-42) 
where f denotes an n x 1 column matrix that contains the functions /1, h, ... , fn as 
elements. Similarly, the q output equations in Eq. (10-37) become 
y(t) = g[x(t), u(t), w(t)] {10-43} 
where g denotes a q x 1 column matrix that contains the functions gh g2, ... , gq as 
elements. 
For a linear time-invariant system, the dynamic equations are written as 
State equations: 
dx(t) tit= Ax(t) + Bu(t) + Ew(t) (10-44) 
Output equations: 
y(t) = Cx(t) + Du(t) + Hw(t) (10-45} 
where 
[ au a12 
llln l a21 a22 a2n (n x n) (10-46} A= . 
llnI an2 llnn 
[bu b12 
htp l b21 hz2 b2p B= . (n X p) (10-47) 
bnl bn2 b,:p 
[ cu c12 
Cin l c21 Cz2 Czn 
(q X n) C= . (10-48) 
Cql Cq2 Cqn 
[d11 d12 
d1p l d21 d22 d2p 
D= . (q X p) (10-49) 
dqt dq2 dqp 
[e11 e12 
e1v l e21 e22 er E= . (n xv) {10-50) 
en1 e,,2 env 
684 ;.. Chapter 10. State Variable Analysis 
10-4 STATE-TRANSITION MATRIX [h11 
h12 H= . 
hq1 hivl h2v 
h~i• (q Xv) 
Once the state equations of a linear time-invariant system are expressed in the form of 
Eq. (l 0-44 ), the next step often involves the solutions of these equations given the initial 
state vectorx(t 0), the input vector u(t), and the disturbance vector w(t), fort 2::: t0• The first 
term on the right-hand side of Eq. (10-44) is known as the homogeneous part of the state 
equation, and the last two terms represent the forcing functions u(t) and w(t). 
The state-transition matrix is defined as a matrix that satisfies the linear homoge­
neous state equation: 
dx(t) = Ax(t) 
dt (10-52) 
Let tf,(t) be then x n matrix that represents the state-transition matrix; then it must satisfy 
the equation 
dtf,(t) = A,t,(t) 
dt 
Furthermore, let x(O) denote the initial state at t = O; then q,(t) is also defined by the matrix 
equation 
x(t) = tf,(t)x(O) (10-54) 
which is the solution of the homogeneous state equation fort 2: 0. 
One way of detennining ,J,(t) is by taking the Laplace transform on both sides of 
Eq. (10-52); we have 
sX(s) -x(O) = AX(s) (10-55) 
Solving for X(s) from Eq. (10-55), we get 
X(s) = (sl -A)-1x(O) (10-56) 
where it is assumed that the matrix (sl -A) is nonsingular. Taking the inverse Laplace 
transform on both sides of Eq. (10-56) yields 
x(t) = e,-I [(sl -A)-1] x(O) t ~ 0 (10-57) 
By comparing Eq. (10-54) with Eq. (10-57), the state-transition matrix is identified to be 
tf,(t) = £-1 [ (sl -A)-1] (10-58) 
10·4 State .. Transition Matrix . 685 
An alternative way of solving the homogeneous state equation is to assume a solution, 
as in the classical method of solving linear differential equations. We let the solution to 
Eq. (10-52) be 
(10-59) 
fort :2:: 0, where eAt represents the following power series of the matrix At, and 
(10-60) 
It is easy to show that Eq. (10-59) is a solution of the homogeneous state equation, 
since, from Eq. ( I 0-60), 
d At e -A At ---e dt (10-61) 
Therefore, in addition to Eq. (10-58), we have obtained another expression for the state­
transition matrix: 
1 1 ,J,(t) =~I= I+ At +-A2t2 +-A3t3 + · · · 2! 3! (10-62) 
Eq. ( 10-62) can also be obtained directly from Eq. (10-58). This is left as an exercise for the 
reader (Problem 10-5). 
10-4-1 Significance of the State~Transition Matrix 
Because the state-transition matrix satisfies the homogeneous state equation, it represents 
the free response of the system. In other words, it governs the response that is excited by 
the initial conditions only. In view ofEqs. (10-58) and (10-62)t the state-transition matrix is 
dependent only upon the matrix A and, therefore, is sometimes referred to as the state­
transition matrix of A. As the name implies, the state-transition matrix tf,(t) completely 
defines the transition of the states from the initial time t = 0 to any time t when the inputs 
are zero. 
10-4-2 Properties of the State-Transition Matrix 
The state-transition matrix ,f,(t) possesses the following properties: 
1. ,J,(O) = I (the identity matrix) (10-63) 
Proof: Eq. (10-63) follows directly from Eq. (10-62) by setting t = 0. 
2. ,p-1 (t) = q,(-t) (10-64) 
Proof: Post-multiplying both sides of Eq. (10-62) bye-Ai, we get 
(10-65) 
686 f,. Chapter 10. State Variable Analysis 
Then, pre-multiplying both sides of Eq. (10-65) by t/,-1(t), we get 
e-At = t/>-1 (t) (10-66) 
Thus, 
tp(-t) = ,p-1 (t) :: e-At (10-67) 
An interesting result from this property of t/J(t) is that Eq. (10-59) can be 
rearranged to read 
x{O) = ,p(-t)x{t) (10-68) 
which means that the state-transition process can be considered as bi1ateral in 
time. That is, the transition in time can take place in either direction. 
3. ,J,(t2 -ti ),p(tr -to) = ,p(t2 -to) for any to, ti, t2 
Proof: 
,p(tz -t1 ),p(t1 -to) = eA(t2-t1)eA(t1-to) 
= eA{tz-10) = ,p(t2 -to) (10-69) 
(10-70) 
This property of the state-transition matrix is important because it implies 
that a state-transition process can be divided into a number of sequential 
transitions. Fig. I 0-9 illustrates that the transition from t = to to t = t2 is equal 
to the transition from lo to t 1 and then from t 1 to h, In general, of course, the state­
transition process can be divided into any number of parts. 
4. [t/>(t)t= ,p(kt) fork= positive integer (10-71) 
Proof: 
[t/>(t)t = eAteA' ... eAt 
= ekAt = tp(kt) 
Figure 10-9 Property of the state-transition matrix:. (10-72) 
10-5 State-Transition Equation .-,4 687 
);~ 10-5 STATE-TRANSITION EQUATION 
The state-transition equation is defined as the solution of the linear homogeneous state 
equation. The linear time-invariant state equation 
dx(t) ~ = Ax(t) + Bu(t) + Ew(t) (10-73) 
can be solved using either the classical method of solving linear differential equations or 
the Laplace transform method. The Laplace transform solution is presented in the 
foIIowing equations. 
Taking the Laplace transform on both sides of Eq. (10-73), we have 
sX(s) -x(O) = AX(s) + BU(s) + EW(s) (10-74) 
where x(O) denotes the initial-state vector evaluated at t = 0. Solving for X(s) in Eq. ( 10-
74) yields 
X(s) = (sl -A)-1x(O) + (sl -A)-1 [BU(s) + EW(s)] (10-75) 
The state-transition equation of Eq. (10-73) is obtained by taking the inverse Laplace 
transform on both sides of Eq. (10-75): 
x(t) = £-1 [ (sl -A)-1] x(O) + .c,-1 { (sl -A)-1 [BU(s) + EW(s)J} 
= .,(t)x(O} + lo' ql(t -r}[Bu(T) + Ew( r}Jdr t ~ 0 (10-76) 
The state-transition equation in Eq. (10-76) is useful only when the initial time is 
defined to be at t = 0. In the study of control systems. especially discrete-data control 
systems, it is often desirable to break up a state-transition process into a sequence of 
transitions, so a more flexible initial time must be chosen. Let the initial ti.me be 
represented by t0 and the corresponding initial state by x(t0), and assume that the input 
u(t) and the disturbance w(t) are applied at t ~ 0. We start with Eq. (10-76) by setting 
t = to, and solving for x(O), we get 
x(O} = fl(-to)x(to} -1/1(-to) fo\(to- r)[Bu(i:) + Ew(r)]di: 
where the property on tf,(t) of Eq. (10-64) has been applied. 
Substituting Eq. (10-77) into Eq. (10-76) yields 
x(t} = fl{t}fl(-to)x(to} -l/l(t)<J,(-to) {' fl(to -r}[Bu(r} + Ew(-c)]d-c 
+ fo' <J,(t -1:) ~u( 1:) + Ew( T )]di (10-77) 
(10-78) 
Now by using the property of Eq. ( I 0-69) and combining the last two integrals, Eq. ( 10-78) 
becomes 
x(t} = ql(t-to}x(to) + lo' fl(t-r)[Bu(r) + Ew(r)Jdr t ~ to (10-79) 
It is apparent that Eq. (10-79) reverts to Eq. (10-77) when to= 0. 
688 ~ Chapter 10. State Variable Analysis 
Once the state-transition equation is determined, the output vector can be expressed 
as a function of the initial state and the input vector simply by substituting x(t) from 
Eq. ( 10-79) into Eq. (10-45). Thus, the output vector is 
y(t) = Crf,(t -to)x(to) + {1 Ct/>(t -r)[Bu(r) + Ew(t)]d-r J10 (10-80) 
+ Du(t) + Hw(t) t ~ to 
The following example illustrates the determination of the state-transition matrix and equation. 
• EXAMPLE 10-5-1 Consider the state equation 
[~::] = [ ~2 ~3][::::] + [~]u(t) 
The problem is to determine the state-transition matrix q,(t) and the state vector x(t) fort~ 0 when 
the input is u(t) = I for t 2:: 0. The coefficient matrices are identified to be 
A= [~2 !3] B= [~] E=O (10-82) 
Therefore. 
(10-83) 
The inverse matrix of (sl -A) is 
(sl -A )-1 = 1 [ s + 3 sl l s2 +3s+1 -2 (10-84) 
The state-transition matrix of A is found by talcing the inverse Laplace transform ofEq. (lQ .. 84). Thus, 
-1 [ -l] [ 2e-1 -e-2t e-t -e-21 l tp(t) = £ (sl -A) = -2e-1 + 2e-2t -e-t + 2e-2t (10-85) 
The state-transition equation fort 2 0 is obtained by substituting Eq. (10-85), B, and u(t) into Eq. ( 1 O~ 
76). We have 
[ 2e-t -e-2t e-t -e-21 ] 
x(t) = 2 -z 2 -2t -t + 2 -2t x(O) -e + e -e e (10-86) 
[' [ 2e-(t-T) _ e-2(t-T) e-{z--r) _ e-2(.t-T) ] [OJ 
+ lo -ze-(t-t) + e-2(t-.) -e-(t--r) + 2e-2(t-t) 1 dr 
or 
As an alternative, the second tenn of the state~transition equation can be obtained by trucing the 
inverse Laplace transform of (sl -A)-1BU(s). Thus. we have 
C1 [(sl -A)-1}BU{s) = C.-1 ( 2 ! 2 [s + 3 l] [0
] !) s + s+ -2 s 1 s 
=C-' (s2+~s+2 [:]) ~ [0.5~~.-~:~;:•-u] t~O (10~88) 
10 .. 5 State-Transition Equation .,cg 689 
10-5-1 State-Transition Equation Determined from the State Diagram 
Eqs. (10-75) and (10-76) show that the Laplace transform method of solving the state 
equations requires obtaining the inverse of matrix (sl -A). We shall now show that the 
state diagram described earlier in Section 10-2-3 and the SFG gain formula (Chapter 3) can 
be used to solve for the state-transition equation in the Laplace domain ofEq. (10-75). Let 
the initial time be t0; then Eq. (10-75) is rewritten as 
X(s) = (sl -A)-1x(to) + (sl -A)-1 {BU(s) + EW(s)] t ~ to (10-89) 
The last equation can be written directly from the state diagram using the gain formula, 
with Xi(s), i = 1, 2, ... ,n as the output nodes. The following example illustrates the 
state-diagram method of finding the state-transition equations for the system described in 
Example 10-2-1. 
.. EXAMPLE 10-5-2 The state diagram for the system described by Eq. ( 10-81) is shown in Fig. l 0-10 with t0 as the initial 
time. The outputs of the integrators are assigned as state variables. Applying the gain formula to the 
state diagram in Fig. 10-10. with X1(s) and X2(s) as output nodes and x1{to), x2(t0), and U(s) as input 
nodes. we have 
s-1 (1 + 3s-1) s-2 s-2 
X1 (s} = ~ xi (to)+ Tx2(to) + T U(s) (10-90) 
-2s-2 s-1 s-1 
X2{s) = -a-xr (to) + Tx2(to) + A U(s) (10-91) 
where 
a= 1 + 3s-1 + 2s-2 (10-92) 
After simplification, Eqs. (10-90) and (10-91) are presented in vector .. matrix form: 
[X1{s)] 1 [s+3 l] [x1{to)] 1 [1] 
X2(s) = (s + l)(s + 2) -2 s x2(to) + (s + l)(s + 2) s U(s) (10-93) 
The state-transition equation for l ~ to is obtained by taking the inverse Laplace transform on both 
sides of Eq. (10-93). 
I 
.. 0 
y 
-2 
Figure 10-10 State diagram for Eq. ( 10-81). 
690 Chapter 10. State Variable Analysis 
Consider that the input u(t) is a unit-step function applied at t = 10. Then the fol1owing inverse 
Laplace transform relationships are identified : 
-1 (1) ( , L., ~ = Us t -lo) f 2:: to 
c1(-1-) =e-a(r-ro)u,(t-to) t2to s + (I (10-94) 
( 10-95) 
Because the initial time is defined to be t0, the Laplace transform expressions here do not have the 
delay factor e-1os. The inverse Laplace transform of Eq. (10-93) is 
[XJ (t)] 
x2(t) [ 2e-(r-,,d _ e-2(t-tu) 
--2e-(1-1a) + 2e-2(1-10) e-(1-10) _ e-2(1-111) ] [x1 (to)] 
-e(l-io) + 2e-2(t-ro) x2(to) 
[ 0.5u.,(t -to) -e-(1-10) + o.se-2(1-lo)] 
+ t 2 to 
e-(1-1.,) _ e-2(1-10) (I 0-96) 
The reader should compare this result with that in Eq. (10-87), which is obtained for t 2 0. 
EXAMPLE 10-5-3 In this example, we illustrate the utilization of the state-transition method to a system with 
input discontinuity . An RL network is shown in Fig. 10-11. The history of the network is com­
pletely specified by the initial current of the inductance, i(O) at I = 0. At timer = 0, the voltage e;11(1) with 
the profile shown in Fig. I 0-12 is applied to the net work. The state equation of the network for t 2 O is 
di(r) R . l di= -z 1(1) + I e;11(1) ( 10-97) 
Comparin g the last equation with Eq. (10-44), the scalar coefficients of the state equation are 
identified to be 
The state-transition matrix is R I A=--B=-E=O L L (] 0-98) 
(I 0-99) 
The conventiona l approach of solving for i(l) for t 2 0 is to express the input voltage as 
(10-100) 
where u,(t) is the unit-step function. The Laplace transform of e(t) is 
£;,.(s) = E;11 ( I + e-1,.,) (10-101) 
R 
+ 
e1,,{r) 3) L 
Figure 10-11 RL network. s 
e(t) 
2E;11 
E;n 
0 11 
Figure 10-12 Input voltage waveform for the network in 
Fig. 10-3. 
10-6 Relationship between State Equations and High-Order Differential Equations · 691 
Then 
(10-102) 
By substituting Eq. (10-102) into Eq. (10-76). the state-transition equation, the current fort 2:: 0 is 
obtained: 
i(t) = e-Rt/L i(O)us(t) + ;;' ( 1 -e-Rt/L )uh)+ ;1 
( 1 -e-R(t-tdfl-)us(t -ti) (10-103) 
Using the state-transition approach. we can divide the transition period into two parts: t = 0 to 
t = t1, and t = t1 tot = oo. First, for the time interval O :5 t :5 t1, the input is 
e(t) = Einlls(t) 0 :5 l < ft (10-104) 
Then 
-1 EtJl Et11 
(sl -A) BU(s) := Ls(s + R/L) Rs[l + (L/R)s] (10-105) 
Thus. the state-transition equation for the time interval O :5 t :5 /1 is 
i(t) = [ ,-Rt/l i(O) + ';; ( I -,-11!/l)] u, (t) (10-106) 
Substituting t = t1 into Eq. (10-106), we get 
i(t1) = e-Rt1/L i(O) + E;t ( 1 -e-Rti/L) (10-107) 
The value of i(t) att = t1 is now used as the initial stateforthenexttransition period of t1 :5 t < oo. 
The amplitude of the input for the interval is 2Ei,,. The state-transition equation for the second transition 
period is 
(10-108) 
where i(t1) is given by Eq. (10-107). 
This example illustrates two possible ways of solving a state-transition problem. In the first 
approach, the transition is treated as one continuous process, whereas in the second. the transition 
period is divided into parts over which the input can be more easily presented. Although the first 
approach requires only one operation, the second method yields relatively simple results, to the 
state-transition equation. and it often presents computational advantages. Notice that, in the 
second method. the state at t == ti is used as the initial state for the next transition period. which 
begins at l1. 
10-6 RELATIONSHIP BETWEEN STATE EQUATIONS AND HIGH-ORDER 
DIFFERENTIAL EQUATIONS 
In the preceding sections, we defined the state equations and their solutions for linear time­
invariant systems. Although it is usually possible to write the state equations directly from 
the schematic diagram of a system, in practice the system may have been described by a 
high-order differential equation or transfer function. It becomes necessary to investigate 
how state equations can be written directly from the high-order differential equation or the 
transfer function. In Chapter 2 we illustrated how the state variables of an rzth~order 
differential equation in Eq. (2-97) are intuitively defined, as shown in Eq. (2-105). The 
results are the n state equations in Eq. (2-106 ). 
692 lt· Chapter 10. State Variable Analysis 
The state equations are written in vector-matrix form: 
where 
A= [1 
B= [! dx(t) dt = Ax(t) + Bu(t) 
I 0 
0 
(n X 1) (10-109) 
(n x n) (10-110) 
(10-111) 
Notice that the last row of A contains the negative values of the coefficients of the 
homogeneous part of the differential equation in ascending order, except for the coefficient 
of the highest-order term, which is unity. B is a column matrix with the last row equal to 
one, and the rest of the elements are all zeros. The state equations in Eq. (10-109) with A 
and B given in Eqs. (10-110) and (10-111) are known as the phase-variable canonical 
form (PVCF), or the controllability canonical form (CCF). 
The output equation of the system is written 
y(t) = Cx(t) = xi (t) (10-112) 
where 
C = [ 1 0 0 · · · O] (10-113) 
We have shown earlier that the state variables of a given system are not unique. In generat 
we seek the most convenient way of assigning the state variables as long as the definition of 
state variables is satisfied. In Section 10-9 we shall show that. by first writing the transfer 
function and then drawing the state diagram of the system by decomposition of the transfer 
function, the state variables and state equations of any system can be found very easily. 
t. EXAMPLE 10-6-1 Consider the differential equation 
d3y(t) 5 d2y(t} dy(t) 2 ( ) _ ( ) 
dt3 + dt2 + dt + y t -U t (10-114) 
Rearranging the last equation so that the highest-order derivative term is set equal to the rest of the 
terms, we have 
d3y(t) = -5 d2y(t) -dy(t) -2y(t) + u(t) 
dt3 dt2 dt 
The state variables are defined as 
xi (t) = y(t) 
( } dy(t) 
X2 t =-­dt 
d2y(t) .:t3(t}=~ (10-115) 
(10-116) 
10-7 Relationship between State Equations and Transfer Functions ·:./ 693 
Then the state equations are represented by the vector-matrix equation 
dx(t) --;;-;-= Ax(t) + Bu(t) (10-117) 
where x(t) is the 2 x J state vector, u(t) is the scalar input, and 
A= [ ~ ~ ~ ] B = [~I] -2 -1 -5 
The output equation is 
y(t) = Xt (t) = [ 1 0 ]1'(1} (10-119) 
~ 10-7 RELATIONSHIP BETWEEN STATE EO.UATIONS AND TRANSFER FUNCTIONS 
We have presented the methods of modeling a linear time-invariant system by transfer 
functions and dynamic equations. We now investigate the relationship between these two 
representations. 
Consider a linear time-invariant system described by the following dynamic equations: 
dx(t) -;fr= Ax(t) + Bu{t) + Ew(t) 
y(t) = Cx(t) + Du(t) + Hw(t) 
where 
x( t) == n x 1 state vector 
u(t) = p x 1 input vector 
y(t) = q x 1 output vector 
w(t) == v x I disturbance vector 
and A, B~ C, D, E, and H are coefficient matrices of appropriate dimensions. (10-120) 
(10-121) 
Taking the Laplace transform on both sides of Eq. (10-120) and solving for X(s), we 
have 
X(s) = (sl -A)-1x(O) + (sl -A)-1 [BU(s) + EW{s)] (10-122) 
The Laplace transform of Eq. (10-121) is 
Y(s) = CX(s) + DU(s) -t-HW(s) (10-123) 
Substituting Eq. (10-122) into Eq. (10-123), we have 
Y(s) = C(sl -A)-1x(O) + C(sl -A)[BU(s) + EW(s)] + DU(s) + HW(s) (10-124) 
Because the definition of a transfer function requires that the initial conditions be set to 
zero, x(O) = O; thus, Eq. (10-124) becomes 
Y(s) = [c(sl -A)-1B + o]u(s) + [C(sl-A)E + H]W(s) (10-125) 
694 Chapter 10. State Variable Analysis 
Let us define 
Gu(s) = C(sl -A)-1B + D 
Gw(s) = C(sl -A)-1E + H (10-126) 
(10-127) 
where Gu(s) is a q x p transfer-function matrix between u(t) and y(t) when w(t) = O. and 
Gw(s) is a q x v transfer-function matrix between w(t) and y(t) when u(t) = 0. 
Then, Eq. ( 10-125) becomes 
Y(s) = G,,(s)U(s) + Gw(s)W(s) (10-128) 
EXAMPLE 10-7-1 Consider that a multivariable system is described by the differential equations 
dzyl (t) + 4 d)'t (t) -3)'2(t) = UJ (t) + 2w(t) 
dt2 dt 
dy1 (t) + t(_yz(t) + V (t) + 2\' (t) = U (t) 
dt dt . 1 •2 2 
The state variables of the system are assigned as: 
XI (t) ;:;: Yl (t) 
( ) dy, (t) 
x2t =~ 
.t3 (t) = Y2(t) (10-129) 
(10-130) 
(10-131) 
These state variables are defined by mere inspection of the two differential equations, because no 
particular reasons for the definitions are given other than that these are the most convenient. Now 
equating the first term of each of the equations of Eqs. (10-129) and ( 10-130) to the rest of the tenns 
and using the state-variable relations of Eq. (10-131), we arrive at the following state equations and 
output equations in vector-matrix form: 
d.t1 (t) 
dt 
=[~ d.tz(t) 
dt 
d.t3(t) -1 -4 ~ l [::::: l + [~ ~i [ :::::] + [~] w(t) 
-1 -2 X3(t) 0 I 0 (10-132) 
dt 
[X (t)] 
[Y1(t)] [l O 0] 1 
v,(t) = 0 0 1 x2(t) = Cx(t) 
· - x3(t) (10-133) 
To determine the transfer-function matrix of the system using the state-variable formulation, we 
substitute the A. B. C, D. and E matrices into Eq. (10-125). First. we form the matrix (sl -A): 
[s -1 0] (sl -A) = 0 s + 4 -3 
1 1 s + 2 (10~134) 
The determinant of (sl -A) is 
Isl -A] = s3 + 6s2 + lls + 3 
Thus, 
1 [s2 + 6s + 11 s + 2 3 ] 
(sl -A)-1 = Jsl _ A\ -3 s(s + 2) 3s 
-(s+4) -(s+l) s(s+4) (10-136) 
10-8 Characteristic Equations, Eigenvalues, and Eigenvectors 695 
The transfer-function matrix between u(t) and y(t) is 
G (s} = C(sl -A)-1B = 1 [ s + 2 3 ] 
u s3 + 6s2 + 11 s + 3 - ( s + 1) s( s + 4) {10-137) 
and that between w(t) and y(t) is 
_ -I _ 1 [ 2(s + 2) ] Gw(s) -C(sl -A) E -s3 + 6s + 1 ls+ 3 -2(s + 1) (10-138) 
Using the conventional approach, we take the Laplace transform on both sides of Eqs. (10-129) 
and (10-130) and assume zero initial conditions. The resulting transformed equations are written in 
vector-matrix form as 
[s(s+4) -3] [Yi(s)] = [Ui(s)] + [2Jw(s) s + 1 s + 2 Y2(s) U2(s) 0 (10-139) 
Solving for Y(s) from Eq. (10-139). we obtain 
Y(s) = Gu(s)U(s) + Gw(s)W(s) ( I0-140) 
where 
G (s) = [s(s+4) -3 1-1 
11 s+l s+2 (10-141) 
G.,(s) = [•~::) ,;rm (10-142) 
which will give the same results as in Eqs. (10-137) and (10-138), respectively, when the matrix 
inverses are carried out. 
10-8 CHARACTERISTIC EQUATIONS, EIGENVALUES, AND EIGENVECTORS 
Characteristic equations play an important role in the study of linear systems. They can be 
defined with respect to differential equations. transfer functions. or state equations. 
10-8-1 Characteristic Equation from a Differential Equation 
Consider that a linear time-invariant system is described by the differential equation 
dny(t) d11-l y(t) dy(t) 
df'l+an-1 din-I + · · · +a1 &+aoy(t) 
d111u(t) dm-l u(t) du(t) 
== bm dtm +bm-1 dtm-l +···+bi -;1r+bou(t) 
where n > m. By defining the operators as 
Eq. (10-143) is written dk 
k s =---r ,it k = I, 2, ... , n (10-143) 
(10-144) 
(sn +a11_1s11-l + ···+a1s+ao)y(t) = (lJms'n +/Jm-tSm-l + ··· +his+bo)u(t) 
(10-145) 
696 > Chapter 10. State Variable Analysis 
The characteristic equation of the system is defined as 
Sn+ an-lSn-l + · · · + llJS + ao = Q (10-146) 
which is obtained by setting the homogeneous part of Eq. (10-145) to zero. 
EXAMPLE 10-8-1 Consider the differential equation in Eq. (10-114). The characteristic equation is obtained by 
inspection. 
s3 + 5s2 + s + 2 = 0 
10-8-2 Characteristic Equation from a Transfer Function 
The transfer function of the system described by Eq. (10-143) is 
G(s) = bms'" + bm-is'n-l + · · · + b1s + ho 
s" + a11-1sn-l + · · · + a1s + ao (10-148) 
The characteristic equation is obtained by equating the denominator polynomial of the 
transfer function to zero. 
EXAMPLE 10-8-2 The transfer function of the system described by the differential equation in Eq. (10-114) is 
Y(s) 
U(s) = sl + 5s2 + s + 2 (10-149) 
The same characteristic equation as in Eq. (10-147) is obtained by setting the denominator 
polynomial of Eq. (10-149) to zero. 
10 .. e .. 3 Characteristic Equation from State Equations 
From the state-variable approach~ we can write Eq. (10-126) as 
G () = Cadj(sl-A)B D 
us (sl-A) + 
C[adj(sl-A)JB + jsl -AID 
lsI-AI (10-150) 
Setting the denominator of the transfer~function matrix Gu(s) to zero, we get the 
characteristic equation 
lsI-AI = 0 (10-151) 
which is an alternative form of the characteristic equation but should lead to the same 
equation as in Eq. (10-146). An important property of the characteristic equation is that, if 
the coefficients of A are real, then the coefficients of Isl -Al are alm real. 
EXAMPLE 10-8-3 The matrix A for the state equations of the differential equation in Eq. (10-114) is given in Eq. ( 10-
128). The characteristic equation of A is 
s -1 0 
]sl-AI = 0 s -1 = s3 + ss2 + s + 2 -0 (10-152) 
2 s+S 
10-8-4 Eigenvalues 10-8 Characteristic Equations, Eigenvalues, and Eigenvectors ·< 697 
The roots of the characteristic equation are often referred to as the eigenvalues of the 
matrix A. 
Some of the important properties of eigenvalues are given as follows. 
1. If the coefficients of A are all real, then its eigenvalues are either real or in 
complex-conjugate pairs. 
2. If A 1, Ji.2, • • • , An are the eigenvalues of A, then 
ll 
tr(A) = ~) .. i (10-153) 
i=l 
That is, the trace of A is the sum of alI the eigenvalues of A. 
3. If Ai, i = t 2, ... , n, is an eigenvalue of A, then it is an eigenvalue of A'. 
4. If A is nonsingular, with eigenvalues )..i, i = 1, 2, ... , n, then 1/l,, i = 1, 2, ... , 
n, are the eigenvalues of A -I. 
i,~ EXAMPLE 10-8-4 The eigenvalues or the roots of the characteristic equation of the matrix A in Eq. (10-118) are 
obtained by solving for the roots of Eq. (10·152). The results are 
10-s .. 5 Eigenvectors s =:; -0.06047 + j0.63738 s = -0.06047 -j0.63738 s = -4.87906 (10-154) 
Eigenvectors are useful in modern control methods, one of which is the similarity 
transformation, which will be discussed in a later section. 
Any nonzero vector p1 that satisfies the matrL'C equation 
p.;I -A)p1 = 0 (10-155) 
where }lh i = J, 2, ... , n, denotes the ith eigenvalue of A, called the eigenvector of A 
associated with the eigenvalue Ai, If A has distinct eigenvalues, the eigenvectors can be 
solved directly from Eq. ( 10-155). 
" EXAMPLE 10-8-5 Consider that the state equation of Eq. (10-44) has the coefficient matrices 
A=[~ =n B = uJ E = o (10-156) 
The characteristic equation of A is 
Isl -A] = s2 -1 (10~157) 
The eigenvalues are i...1 = 1 and )..2 = -1. Let the eigenvectors be written as 
Pt= [Pit] p == [P12] 
P2l 2 P22 (10-158) 
Substituting i...1 = 1 and p1 into Eq. (10-155), we get 
(10-159) 
698 -Chapter 10. State Variable Analysis 
Thus, Pz1 = 0, and P11 is arbitrary. which in this case can be set equal to l. 
Similarly, for i..2 = -1, Eq. (10-155) becomes 
(10-160) 
which leads to 
-2p12 + P22 = 0 (10-161) 
The last equation has two unknowns, which means that one can be set arbitrarily. Let p12 = 1, then 
pzz = 2. The eigenvectors are 
(10-162) 
10-8-6 Generalized Eigenvectors 
It should be pointed out that if A has multiple-order eigenvalues and is nonsymmetric, not 
all the eigenvectors can be found using Eq. (10-155). Let us assume that there are q( < n) 
distinct eigenvalues among then eigenvalues of A. The eigenvectors that correspond to the 
q distinct eigenvalues can be determined in the usual manner from 
(10-163) 
where Ai denotes the ith distinct eigenvalue, i = l, 2, ... , q. Among the remaining high­
order eigenvalues, let )..1 be of the mth order (m :5 n -q). The corresponding eigenvectors 
are caIIed the generalized eigenvectors and can be detennined from the following m 
vector equations: 
EXAMPLE 10-8-6 Given the matrix (A,jl -A)Pn-q+I = 0 
(.11.jl -A)Pn-q+2 = -Pn-q+l 
(.ljl -A)Pn-q+3 = -Pn-q+2 
(.11.jl -A}P11-q+m = -Pn-q+m-1 
[o 6 -5] A= 1 0 2 
3 2 4 {10-164) 
(10-165) 
The eigenvalues of A are ).1 = 2. 11.2 = 11.3 = I. Thus, A is a second-order eigenvalue at 1. The 
eigenvector that is associated with )..1 = 2 is determined using Eq. (10-163). Thus, 
(A.ii -A)P1 = [ !1 -;6 
~2] [ ;~:] = 0 
-3 -2 -2 P31 (10-166) 
10-9 Similarity Transformation -~ 699 
Because there are only two independent equations in Eq. ( 10-166 ), we arbitrarily set p 11 = 2, and we 
have P21 = -1 and p31 = -2. Thus, 
(10-167) 
For the generalized eigenvectors that are associated with the second-order eigenvalues, we substitute 
)..2 = 1 into the first equation of Eq. (10-164). We have 
[ 1 -6 5 ] [Pl"] {A2I -A)pz = -1 1 -2 P22 = 0 
-3 -2 -3 P32 
Setting )}12 = 1 arbitrarily, we have P22 =-~and P32 =-~.Thus, 
Substituting )..3 == 1 into the second equation of Eq. (10-164), we have 
Setting Pt 3 arbitrarily to 1. we have the generalized eigenvector 
..... 10-9 SIMILARITY TRANSFORMATION 
The dynamic equations of a single-input, singJe .. output (SISO) system are 
dx(t) ---;ft= Ax(t) + Bu(t) 
y(t) = Cx(t) + Du(t) (10-168) 
(10-169) 
(10-171) 
(10-172) 
(10-173) 
where x(t) is the n x 1 state vector, and u(t) and y(t) are the scalar input and output, 
respectively. When carrying out analysis and design in the state domain, it is often 
advantageous to transform these equations into particular forms. For example, as we will 
show later, the controllability canonical form (CCF) has many interesting properties that 
make it convenient for controllability tests and state~feedback design. 
Let us consider that the dynamic equations of Eqs. (10-172) and (10-173) are trans­
formed into another set of equations of the same dimension by the following transformation: 
x(t) = Pi(t) (10-174) 
700 "°' Chapter 10. State Variable Analysis 
where P is an n x n nonsingular matrix, so 
x(t) = p-1x(t) 
The transformed dynamic equations are written 
di(t) --dt = Ax{t) + Bu(t) 
y(t) = Cx(t) + Du(t) 
Taking the derivative on both sides of Eq. (10-175) with respect to t, we have 
dx(t) _ p-I dx(t) _ p-IA ( ) p-IB. () ~-~- X t + ll t 
= p-1 APi(t) + p-1Bu(t) 
Comparing Eq. (10-178) with Eq. (10-176). we get 
and 
Using Eq. (10-174), Eq. (10-177) is written 
y(t) = CPx(t) + Du(t) 
Comparing Eq. (10-181) with Eq. (10-173), we see that 
C=CP D=D (10-175) 
(10-176) 
(10-177) 
(10-178) 
(10-179) 
(10-180) 
(10-181) 
(10-182) 
The transformation just described is called a similarity transformation, because in the 
transformed system such properties as the characteristic equation, eigenvectors, eigen­
values, and transfer function are all preserved by the transformation. We shall describe the 
controllability canonical form (CCF), the observability canonical form (OCF), and the 
diagonal canonical form (DCF) transformations in the following sections. The transfor­
mation equations are given without proofs. 
10-9-1 Invariance Properties of the Similarity Transformations 
One of the important properties of the similarity transformations is that the characteristic 
equation, eigenvalues, eigenvectors, and transfer functions are invariant under the 
transformations. 
Characteristic Equations, Eigenvalues, and Eigenvectors 
The characteristic equation of the system described by Eq. (10-176) is Isl -Al = 0 and is 
written 
(10-183) 
10-9 Similarity Transformation 701 
Because the determinant of a product matrix is equal to the product of the determinants of 
the matrices, the last equation becomes 
\sl-A\ = \p-I \Isl -A\\P\ = \sI -A\ (10-184) 
Thus, the characteristic equation is preserved, which naturally leads to the same eigen­
values and eigenvectors. 
Transfer .. Function Matrix 
From Eq. (10-126), the transfer-function matrix of the system of Eqs. (10-176) and 
(10-177) is 
G(s) = C(sl -A)B + D 
= CP(sl -p-l AP)P-1B + D (10-185) 
which is simplified to 
G(s) = C(sl -A}B + D = G(s) (10-186) 
10-9-2 Controllability Canonical Form (CCF) 
Consider the dynamic equations given in Eqs. (10-172) and (10-173). The characteristic 
equation of A is 
Isl-Al= s" +an-1s11-• + · · · +a1s +ao = 0 (10-187) 
The dynamic equations in Eqs. (10-172) and (10-173) are transformed into CCF of the form 
of Eqs. (10-176) and (10-.177) by the transformation of Eq. (10~174). with 
P=SM (10~188) 
where 
S= [B AB A2B ... A11-1B] (10-189) 
and 
ll) a2 an-I 
a2 a3 0 
M= (10-190) 
a,,_1 0 0 
0 0 0 
702 ,,.. Chapter 10. State Variable Analysis 
Then, 
1 
0 0 
1 
(10-191) 
(10-192) 
The matrices C and ii are given by Eq. ( 10-182) and do not follow any particular pattern. The 
CCF transformation requires that p-I exists, which implies that the matrix S must have an 
inverse, because the inverse ofM always exists because its determinant is {-1 t-1, which is 
nonzero. Then x n matrix Sin Eq. (10-189) is later defined as the controllability matrix. 
' EXAMPLE 10-9-1 Consider the coefficient matrices of the state equations in Eq. (10-172): 
A= [f : fl B= m 
The state equations are to be transformed to CCF. 
The characteristic equation of A is 
s-l -2 -I 
Isl-Al= 0 s-1 -3 =s3-3s2-s-3=0 
-1 -1 s-1 (10-193) 
(10-194) 
Thus. the coefficients of the characteristic equation are identified asao = -3,ai = -1, and a2 = -3. 
From Eq. (10-190), 
[a, a2 I] [-1 -3 
gJ M= ~2 1 
~ = ~3 1 (10-195) 
0 0 
The controllability matrix is 
[ I 2 If] S= [B AB A2B]= 0 3 (10-196) 
1 2 
We can show that S is nonsingular, so the system can be transformed into the CCF. Substituting S and 
Minto Eq. (10-188), we get 
[3 -1 I] P =SM= 0 3 0 
0 -1 1 (10~197) 
Thus. from Eqs. (10-191) and (10-192), the CCF model is given by 
(10-198) 
10-9 Similarity Transformation ,. 703 
which could have been determined once the coefficients of the characteristic equation are known; 
however, the exercise is to show how the CCF transformation matrix P is obtained. 
10-9-3 Observability Canonical Form (OCF) 
A dual form of transformation of the CCF is the observability canonical form (OCF). The 
system described by Eqs. ( 10-172) and ( 10-173) is transformed to the OCF by the 
transformation 
x(t) = Qx(t) (10-199) 
The transformed equations are as given in Eqs. {10-176) and (10-177). Thus, 
(10-200) 
where 
0 0 0 -ao 
1 0 0 -a1 
A=Q-1AQ= 0 I 0 -a2 {10-201) 
0 0 -an-l 
C=CQ=[O 0 ... 0 I] (10-202) 
The elements of the matrices Band Dare not restricted to any fonn. Notice that A and Care 
the transpose of the A and Bin Eqs. (lQ .. 191) and (10-192), respectively. 
The OCF transfonnalion matrix Q is given by 
Q = (MV)-1 
where Mis as given in Eq. (10-190), and 
C 
CA 
V= CA2 
CA"-1 (n x n) (10-203) 
(10-204) 
The matrix V is often defined as the observability matrix, and v-1 must exist in order for 
the OCF transformation to be possible. 
·-EXAMPLE 10-9-2 Consider that the coefficient matrices of the system described by Eqs. (10~172) and (10-138) are 
A= [f : n B = m C = [! 1 OJ D = 0 
704 Chapter 10. State Variable Analysis 
Because the matrix A is identical to that of the system in Example 10-9-1, the matrix M is the same as 
that in Eq. (10-195). The observability matrix is 
V = [ C~ ] = [ ~ ~ ~] 
CA2 5 9 14 (10-206) 
We can show that Vis nonsingular, so the system can be transformed into the OCF. Substituting V and 
Minto Eq. (10-203). we have the OCF tran.~formation matrix, 
[ 0.3333 -0.1667 0.3333] 
Q = (MV)-1= -0.3333 0.1667 0.6667 
0.1667 0.1667 0.1667 
From Eq. (10-191 ), the OCF model of the system is described by (10-207) 
(10-208) 
Thus, A and Care of the OCF form given in Eqs. (10-201) and (10-202), respectively, and B does not 
conform to any particular form. 
10-9-4 Diagonal Canonical Form (DCF) 
Given the dynamic equations in Eqs. (10-172) and (10-173), if A has distinct eigenvalues, 
there is a nonsingular transformation 
x(t) = Tx(t) (10-209) 
which transforms these equations to the dynamic equations ofEqs. (10-176) and (10-177), 
where 
A =T-1AT B =T-1B C=CT D=D (10-210) 
The matrix A is a diagonal matrix, 
A1 0 0 0 
0 .l2 0 0 
A= 0 0 A.3 0 (n x n) (10-211) 
0 0 0 An 
where Ai. A2, .•• , An are then distinct eigenvalues of A. The coefficient matrices B, C, 
and D are given in Eq. (10-210) and do not follow any particular form. 
It is apparent that one of the advantages of the DCF is that the transformed state 
equations are decoupled from each other and. therefore, can be solved individually. 
We show in the following that the DCF transformation matrix T can be formed by use 
of the eigenvectors of A as its columns; that is, 
T = [ P 1 P2 P3 · · · Pn J 
10·9 Similarity Transformation .,c 705 
where Ph i = 1, 2, ...• n, denotes the eigenvector associated with the eigenvalue J..i. This is 
proved by use of Eq. (10-155), which is written as 
A;p; = Api i = 1, 2, ... , n 
Now, forming the n x n matrix, 
The last equation is written AnPn] = [ Ap1 AP2 · · · Apn J 
= A[P1 P2 · · · Pn] 
(P1 P2 · · · PnJA;:::: A[P1 P2 · · · PnJ 
where A is as given in Eq. (10-211). Thus, if we let 
T =-[ P 1 P2 ) Pn ) 
Eq. (10-215) is written 
A=T21AT (10-213) 
(10-215) 
(10-216) 
(10-217) 
If the matrix A is of the CCF and A has distinct eigenvalues. then the DCF 
transformation matrix is the Vandennonde matrix, 
T= An 
)...2 n 
where A 1, A2, ••• , An are the eigenvalues of A. This can be proven by substituting the CCF 
of A in Eq. ( 10-110} into Eq. (10-155). The result is that the ith eigenvector p, is equal to the 
ith column of T in Eq. (10-218). 
~ EXAMPLE 10.9.3 Consider the matl'ix 
A=[i ~ ~] -6 ~I I -6 
which has eigenvalues A1 = -1. 11.2 = -2, and A::i = -3. Because A is CCF, to transform it into DCF, 
the transfonnation matrix can he the Vandermonde matrix in Eq. (10-218}. Thus, 
Thus, the DCF of A is written (10•220) 
{10-221) 
~ 
706 ~ Chapter 10. State Variable Analysis 
10-9-5 Jordan Canonical Form (JCF) 
In general, when the matrix A has multiple-order eigenvalues, unless the matrix is 
symmetric with real elements, it cannot be transformed into a diagonal matrix. However, 
there exists a similarity transformation in the form ofEq. (10-217) such that the matrix A is 
almost diagonal. The matrix A is called the Jordan canonical form (JCF). A typical JCF 
is shown below. 
[At 1 
0 Ji.1 
A= o o 
0 0 
0 0 0 
1 
AI 
0 
0 0 0 l 0 0 
0 0 
;\.2 0 
0 A.3 (10-222) 
where it is assumed that A has a third-order eigenvalue ;\. 1 and distinct eigenvalues A.2 and 
A3. 
The JCF generally has the following properties: 
1. The elements on the main diagonal are the eigenvalues. 
2. All the elements below the main diagonal are zero. 
3. Some of the elements immediately above the multiple-order eigenvalues on the 
main diagonal are ls, as shown in Eq. (10-222). 
4. The ls together with the eigenvalues form typical blocks called the Jordan 
blocks. As shown in Eq. (10-222). the Jordan blocks are enclosed by dashed lines. 
5. When the nonsymmetrical matrix A has multiple-order eigenvalues, its eigen­
vectors are not linearly independent. For an A that is n x n, there are only r (where 
r is an integer that is less than n and is dependent on the number of multiple-order 
eigenvalues) linearly independent eigenvectors. 
6. The number of Jordan blocks is equal to the number of independent eigenvectors r. 
There is one and only one linearly independent eigenvector associated with each 
Jordan block. 
7. The number of ls above the main diagonal is equal ton -r. 
To perform the JCF transformation, the transformation matrix Tis again formed by using 
the eigenvectors and generalized eigenvectors as its columns. 
5t-EXAMPLE 10-9-4 Consider the matrix given in Eq. (10-165). We have shown thatthe matrix has eigenvalues 2, 1, and 1. 
Thus, the DCF transformation matrix can be formed by using the eigenvector and generalized 
eigenvector given in Eqs. (10-167), (10-169), and (10-171), respectively. That is, 
Thus, the DCF is [ 2 1 1 l 3 22 
T = [P1 P2 P3] = -l -7 -49 
5 46 -2 ----7 49 
[2 0 OJ A=r1AT= o 1 1 
0 0 I (10-223) 
Note that in this case there are two Jordan blocks, and there is one element of 1 above the main 
diagonal. 
10-10 Decompositions of Transfer Functions -'4 707 
10-10 DECOMPOSITIONS OF TRANSFER FUNCTIONS 
Up to this point, various methods of characterizing linear systems have been presented. To 
summarize , it has been shown that the sta1ting point of modeling a linear system may be the 
system's differential equation, transfer function, or dynamic equations; all these methods 
are closely related. Furthennore , the state diagram is also a useful tool that can not only 
lead to the solutions of state equations but also serve as a vehicle of transformation from 
one form of description to the others. The block diagram of Fig. 10-13 shows the 
relationships among the various ways of describing a linear system. For example, the 
block diagram shows that, starting with the differential equation of a system, one can find 
the solution by the transfer-function or state-equation method. The block diagram also 
shows that the majority of the relationships are bilateral, so a great deal of flexibility exists 
between the methods. 
One subject remains to be discussed , which involves the construction of the state 
diagram from the transfer function between the input and the output. The process of going 
from the transfer function to the state diagram is called decomposition. In general, there are 
three basic ways to decompose transfer functions . These are direct decomposition , cascade 
decomposition , and parallel decomposition. Each of these three schemes of decomposition 
has its own merits and is best suited for a particular purpose. 
10-10-1 Direct Decomposition 
Direct decompo sition is applied to an input-output transfer function that is not in factored 
form. Consider the transfer function of an nth-order SISO system between the input U(s) 
IJO Choose state variables 
Differential 
Equations --~-
place La 
trn 
plu 
alg Algebra Construct SFG 
nsform plus with 
s inverse integrators 
ebra Laplace 
transform 
C(sl-Ar1 +D 
J 
Transfer Apply Mason's formula 
Function s-1 branches 
Decompose transfer 
' function rcrse Laplace Im 
La 
tra place 
nsform transform 
' 
Impulse 
Response ~ State 
Equation s 
' 
State Writes tate 
and ou tput equations 
Mason's gain using 
fonnul, a after removing 
nches s-1 bra 
Diagram 
(Graphical Tool) 
Figure 10-13 Block diagram showing the relationships among various methods of describing linear 
systems. 
708 Chapter 10. State Variable Analysis 
and output Y(s): 
Y(s) bn-1sn-l + bb-2~-2 + · · · + b1s + ho 
U(s) = s" + an-1sn-1 + · · · + a1s + ao (10-225) 
where we have assumed that the order of the denominator is at least one degree higher than 
that of the numerator. 
We next show that the direct decomposition can be conducted in at least two 
ways, one leading to a state diagram that corresponds to the CCF and the other to the 
OCF. 
Direct Decomposition to CCF 
The objective is to construct a state diagram from the transfer function of Eq. ( 10-225). The 
following steps are outlined: 
1. Express the transfer function in negative powers of s. This is done by multiplying 
the numerator and the denominator of the transfer function bys-". 
2. Multiply the numerator and the denominator of the transfer function by a dummy 
variable X(s). By implementing the last two steps, Eq. (10~225) becomes 
Y(s) bn-1s-• + bn-2s-2 + · · · + b1s-n+l + bos-11 X(s) 
U(s) = I+ lln-is-1 + .. · + a1s-n+l + aos-n X(s) (10-226) 
3. The numerators and the denominators on both sides of Eq. ( I 0-226) are equated to 
each other, respectively. The results are: 
Y(s) = (b11-1s-1 + b,1-2s-2 + · · · + b1s-n+l + bos-n)X(s) (10-227) 
U(s) = (1 + an-JS-1 + · · · + a1s-n+l + aos-n)X(s) (10-228) 
4. To construct a state diagram using the two equations in Eqs. (10-227) and 
(10-228), they must first be in the proper cause-and-effect relation. It is apparent 
that Eq. (10-227) already satisfies this prerequisite. However, Eq. (10-228) has the 
input on the left-hand side of the equation and must be rearranged. Eq. (10-228) is 
rearranged as 
X(s) = U(s) -(a,1-1s-l + a,1-2s-2 + · · · + a1s-n+1 + aos-11)X(s) (10-229) 
The state diagram is drawn as shown in Fig. 10-14 using Eqs. (10-227) and (10-228). 
For simplicity, the initial states are not drawn on the diagram. The state variables x1(t). 
x2(t), ... , xn(t) are defined as the outputs of the integrators and are arranged in order from 
the right to the left on the state diagram. The state equations are obtained by applying the 
SFG gain formula to Fig. 10-14 with the derivatives of the state variables as the outputs and 
the state variables and u(t) as the inputs, and overlooking the integrator branches. The 
10-10 Decompositions of Transfer Functions · 709 
u 
Figure 10-14 CCF state diagram of the transfer function in Eq. ( 10~225) by direct decomposition. 
output equation is detennined by applying the gain formula among the state variables, the 
input, and the output y(t). The dynamic equations are written 
dx(t) ---;[, = Ax(t) + Bu(t) 
y(t) = Cx(t) + Du(t) 
where 
Apparently, A and Bin Eq. (10-232) are of the CCF. 
Direct Decomposition to OCF (10-230) 
(10-231) 
(10-232) 
(10-233) 
Multiplying the numerator and the denominator of Eq. (10-225) by s-n, the equation is 
expanded as 
(I+ an-is-• + · · · + a1s-n+l + aos-n)Y(s) 
(b -1 b -2 b -n+l b -n)U( ) = n-JS + ll-2S + · · · + 1s + os s (10-234) 
or 
Y(s) = -(a11-1s-1 + · · · + a1s-n+l + aos-iJ)Y(s) 
+(b,i-tS-l + bn-2.S-Z + · · · + btS-n+I + bos-11)U(s) 
Fig. I 0-15 shows the state diagram that results from using Eq. ( 10-235). The outputs of the 
integrators are designated as the state variables. However, unlike the usual convention, the 
state variables are assigned in descending order from right to left. Applying the SFG gain 
710 ~ Chapter 10. State Variable Analysis 
Figure 10-15 CCF state diagram of the transfer function in Eq. (10-225) by direct decomposition. 
fonnula to the state diagram, the dynamic equations are written as in Eqs. (10-230) and 
(10-231), with 
0 0 0 -ao bo 
1 0 0 -ai b1 
A= 0 1 0 -a2 B= b2 (10-236) 
0 0 1 -a11-1 b,z-l 
and 
C = [O 0 ... 0 I] D=O (10-237) 
The matrices A and C are in OCF. 
It should be pointed out that, given the dynamic equations of a system, the input­
output transfer function is unique. However, given the transfer function, the state model is 
not unique, as shown by the CCF, OCF, and DCF, and many other possibilities. In fact, even 
for any one of these canonical forms (for example, CCF), while matrices A and B are 
defined, the elements of C and D could still be different depending on how the state 
diagram is drawn, that is, how the transfer function is decomposed. In other words, 
referring to Fig. 10-14, whereas the feedback branches are fixed, the feedforward branches 
that contain the coefficients of the numerator of the transfer function can still be 
manipulated to change the contents of C. 
~· EXAMPLE 10-10-1 Consider the following input-output transfer function: 
Y(s) 2s2 + s + 5 
U(s) = s3 + 6s2 + 1 Is+ 4 
The CCF state diagram of the system is shown in Fig. 10~16. which is drawn from the following 
equations: 
Y(s) = (2s-1 + s-2 + 5s-3}X(s) 
X(s) = U(s) -(6s-1 + lls-2 +4s-3)X(s) (10-239) 
(10-240) 
10~ 10 Decompositions of Transfer Functions ..ill 711 
2 
u 
-4 
Figure 10-16 CCF state diagram of the transfer function in Eq. (10-238). 
The dynamic equations of the system in CCF are 
lllt (t) 
~ 
dxz(t) 
~ 
dx3(t) dt = [ : 0 ~ ] [::::i + [:] u(t) 
-4 -11 -6 X3(t) 1 
y(t) = [5 1 2Jx(t) 
For the OCF. Eq. (10-238) is expanded to (10-242) 
(10-243) 
which leads to the OCF state diagram shown in Fig. 1 O" 17. The OCF dynamic equations are written 
(10-244) 
y(t) = [ 0 0 l ]x(t) (10-245) 
2 
y 
-4 
Figure 10-17 OCF state diagram of the transfer function in Eq. (10-238). 
712 ~ Chapter 10. State Variable Analysis 
-(l1 
Figure 10w18 State diagram of the transfer function in Eq. (10-246) by cascade decomposition. 
10-10-2 Cascade Decomposition 
Cascade compensation refers to transfer functions that are written as products of simple 
first-order or second-order components. Consider the following transfer function, which is 
the product of two first-order transfer functions. 
Y(s) _ K(s + b1) (s + b2) 
U(s) -s + a1 s + a2 (10-246) 
where ai, a2, b1, and b2 are real constants. Each of the first-order transfer functions is 
decomposed by the direct decomposition~ and the two state diagrams are connected in 
cascade, as shown in Fig. 10-18. The state equations are obtained by regarding the 
derivatives of the state variables as outputs and the state variables and u(t) as inputs and 
then applying the SFG gain formula to the state diagram in Fig. I 0-18. The integrator 
branches are neglected when applying the gain formula. The results are 
[d-.:~;1) l [-a1 
dx~y) = 0 b2 -a2] [XI (t)] + [K] u(t) 
-a2 x2(t) K (10-247) 
The output equation is obtained by regarding the state variables and u(t) as inputs and y(t) 
as the output and applying the gain formula to Fig. 10-18. Thus, 
y(t) = [ b1 -ai b2 -a2 ]x(t) + Ku(t) {10-248) 
When the overall transfer function has complex poles or zeros, the individual factors 
related to these poles or zeros should be in second-order fonn. As an example, consider the 
following transfer function: 
Y(s) (s + 5) ( s + 1.5 ) 
U(s) = s + 2 s2 + 3s + 4 (l0-249) 
where the poles of the second term are complex. The state diagram of the system with the 
two subsystems connected in cascade is shown in Fig. l 0-19. The dynamic equations of the 
system are 
dx1 (t) 
dt 
dx2(t) = 
dt 
dx3(t) 
dt [ ~4 -3 ~ ] [:::::] + [~] u(t) 
0 0 -2 X3(t) 1 (10-250) 
y(t) = [ 1.5 1 O]x(t) (10-251) 
10-10 Decompositions of Transfer Functions ~ 713 
-4 
Figure 10-19 State diagram of the transfer function in Eq. ( 10-249) by cascade decomposition. 
10-10-3 Parallel Decomposition 
When the denominator of the transfer function is in factored form. the transfer function 
may be expanded by partial-fraction expansion. The resulting state diagram will consist of 
simple first-or second-order systems connected in parallel, which leads to the state 
equations in DCF or JCF. the latter in the case of multiple-order eigenvalues. 
Consider that a second-order system is represented by the transfer function 
Y(s) Q(s) 
U(s) = (s + a1)(s + a2) (10-252) 
where Q(s) is a polynomial of order less than 2, and a1 and a2 are real and distinct. 
Although, analytically, a1 and a2 may be complex, in practice, complex numbers are 
difficult to implement on a computer. Eq. (10-253) is expansion by partial fractions: 
Y(s) Ki K2 -=--+--u ( s) s + a 1 s + a2 (10-253) 
where K1 and K2 are real constants. 
The state diagram of the system is drawn by the parallel combination of the state 
diagrams of each of the first-order tenns in Eq. (10-253), as shown in Fig. 10-20. The 
dynamic equations of the system are 
[:;;::] = [-;, 0 ] [XI (t)] [ 1] 
-a2 x2(t) + 1 u(t) 
y(t) = [K1 K2 ]x(t) 
Thus, the state equations are of the DCF. 
u -I s 
y (10-254) 
(10-255) 
Figure 10-20 State diagram of the transfer function of Eq. (10-252) by parallel decomposition. 
714 ..,. Chapter 10. State Variable Analysis 
The conclusion is that, for transfer functions with distinct poles, parallel decomposi­
tion will lead to the DCF for the state equations. For transfer functions with multiple-order 
eigenvalues. parallel decomposition to a state diagram with a minimum number of 
integrators will lead to the JCF state equations. The following example will clarify this 
point. 
·-. EXAMPLE 10-10-2 Consider the following transfer function and its partial-fraction expansion: 
Y(s) 2s2 + 6s + 5 l I I -= =--+--+-­U(s) (s+I)2(s+2) (s+1)2 s+l s+2 
Note that the tnmsfer function is of the third order, and, although the total order of the tenns on the 
right-hand side of Eq. (10-256) is four, only three integrators should be used in the state diagram. 
which is drawn as shown in Fig. 10-21. The minimum number of three integrators is used, with one 
integrator being shared by two channels. The state equations of the system are written directly from 
Fig. 10-21. 
dx1 (t) 
d.t;t) = [ ~I ~I 
dx3(t) 
dt 
which is recognized to be the JCF. 
-1 s 
-2 
10-11 CONTROLLABILITY OF CONTROL SYSTEMS 0 l [XI (t) l [0] 0 X2 (t) + 1 u(t) 
-2 x3(t) 1 
Figure 10-21 State 
diagram of the transfer 
function of Eq. ( 10-
256) by parallel 
decomposition. 
The concepts of controllability and observability, introduced first by Kalman [3], play an 
important role in both theoretical and practical aspects of modern control. The conditions 
on controllability and observability essentially govern the existence of a solution to an 
optimal control problem. This seems to be the basic difference between optimal control 
theory and classk:al control theory. In the classical control theory, the design techniques 
are dominated by trial-and .. error methods so that given a set of design specifications the 
designer at the outset does not know if any solution exists. Optimal control theory, on the 
10-11 Controllability ot Control Systems 715 
x = Ax + Bu 11---.--•• x x"' Ax+Bu 
OBSERVER 
(a) (b) 
Figure 10-22 (a) Control system with state feedback. (b) Control system with observer and state 
feedback . 
other band, has criteria for determining at the outset if the design solution exists for the 
system parameters and design objectives. 
We shall show that the condition of controllability of a system is closely related to the 
existence of solutions of state feedback for assigning the values of the eigenvalues of the 
system arbitrarily . The concept of observability relates to the condition of observing or 
estimating the state variables from the output variables, which are generally measurable . 
The block diagram shown in Fig. 10-22 illustrates the motivation behind investigating 
controllability and observability. Figure 10-22(a) shows a system with the process dynamics 
described by 
dx(t) 
-= Ax(t) + Bu(t) dt (10-258) 
The closed-loop system is formed by feeding back the state variables through a constant 
feedback gain matrix K. Thus, from Fig. 10-22, 
u(t) = -Kx(t) + r(t) (10-259) 
where K is a p x II feedback matrix with constant elements. The closed-loop system is thus 
described by 
dx(t) 
-= (A -BK)x(t) + Br(t) dt (10-260) 
This problem is also known as the pole-placement design through state feedback. The 
design objective in this case is to find the feedback matrix K such that the eigenvalues of 
(A -BK), or of the closed-loop system, are of certain prescribed values. The word pole 
refers here to the poles of the closed-loop transfer function, which are the same as the 
eigenvalues of (A -BK). 
We shall show later that the existence of the solution to the pole-placement design with 
arbitrarily assigned pole values through state feedback is directly based on the controlla­
bility of the states of the system. The result is that if the system of Eq. (10-225) is 
controllable, then there exists a conswnt feedback matrix K that allows the eigenvalues 
of (A -BK) to be arbitrarily assigned. 
Once the closed-loop system is designed, the practical problems of implementing the 
feeding back of the state variables must be considered. There are two problems with 
implementing state feedback control: First, the number of state variables may be excessive, 
which will make the cost of sensing each of these state variables for feedback prohibitive. 
Second, not all the state variables are physically accessible, and so it may be necessary to 
design and construct an observer that will estimate the state vector from the output vector 
y(t). Fig. 10-22(b) shows the block diagram of a closed-loop system with an observer. The 
716 fp, Chapter 10. State Variable Analysis 
Control u(t) Q State x(t) 
~1-------.) Figure 10-23 Linear time-invariant system. 
observed state vector x(t) is used to generate the control u(t) through the feedback matrix 
K. The condition that such an observer can be designed for the system is called the 
observability of the system. 
10-11-1 General Concept of Controllability 
The concept of controllability can be stated with reference to the block diagram of Fig. 10-
22( a). The process is said to be completely controllable if every state variable of the 
process can be controlled to reach a certain objective infinite time by some unconstrained 
control u(t), as shown in Fig. 10-23. Intuitively, it is simple to understand that, if any one of 
the state variables is independent of the control u(t), there would be no way of driving this 
particular state variable to a desired state in finite time by means of a control effort. 
Therefore, this particular state is said to be uncontrollable, and, as long as there is at least 
one uncontrollable state, the system is said to be not completely controllable or, simply, 
uncontrollable. 
As a simple example of an uncontrollable system, Fig. 10-24 illustrates the state 
diagram of a linear system with two state variables. Because the control U(t) affects only 
the state x1(t), the state x2{t) is uncontrollable. In other words, it would be impossible to 
drive x2(t) from an initial state x2(t0) to a desired state x2(t1) in finite time interval ti-t0 by 
the control U(t). Therefore, the entire system is said to be uncontrollable. 
The concept of controllability given here refers to the states and is sometimes referred 
to as state controllability. Controllability can also be defined for the outputs of the system, 
so there is a difference between state controllability and output controllability. 
10-11-2 Definition of State Controllability 
Consider that a linear time-invariant system is described by the following dynamic 
equations: 
dx(t) 
-= Ax(t) + Bu(t) dt 
y(t) = Cx(t) + Du(t) (10-261) 
(10-262) 
where x(t) is then x 1 state vector, u(t) is the r x 1 input vector, and y(t) is the p >< 1 output 
vector. A, B, C, and Dare coefficients of appropriate dimensions. 
The state x(t) is said to be controllable at t = t0 if there exists a piecewise continuous 
input u{t) that will drive the state to any final state x(t1) for a finite time (t1 -to) 2:: 0. If 
Figure 10-24 State diagram of the system that is not state controllable. 
10-11 Controllability of Control Systems ~ 717 
every state x(t0) of the system is controllable in a finite time interval, the system is said to 
be completely state control/able or, simply, controllable. 
The following theorem shows that the condition of controllability depends on the 
coefficient matrices A and B of the system. The theorem also gives one method of testing 
for state controIIability. 
P Theorem 10-1. For the system described by the state equation of Eq. ( 10-261) to be 
completely state control"lable, it is necessary and sufficient that the following n x nr 
controllability matrix has a rank of n: 
(10-263) 
Because the matrices A and Bare involved~ sometimes we say that the pair [A, BJ is 
controllable, which implies that S is of rank n. 
The proof of this theorem is given in any standard textbook on optimal control 
systems. The idea is to start with lh~ state-transition equation of Eq. ( I 0-79) and then 
proceed to show that Eq. (10-263) must be satisfied in order that all the states are accessible 
by the input. 
Although the criterion of state controllability given in Theorem 10-1 is quite 
straightforward, manually, it is not very easy to test for high-order systems and/or systems 
with many inputs. If Sis nonsquare, we can form the matrix SS'. which is n x n; then, if SS' 
is nonsingular, S has rank n. 
10-11-3 Alternate Tests on Controllability 
There are several alternate methods of testing controllability, and some of these may be 
more convenient to apply than the condition in Eq. (10-263). 
~ Theorem 10-2. For a single~input, single-output ( SISO) system described by the state 
equation of Eq. (10-261) with r = I, the pair [A, BJ is completely controllable if A andB 
are in CCF or transformable into CCF by a similarity transformation. 
The proof of this theorem is straightforward, since it was established in Section 10-9 
that the CCF transformation requires that the controllability matrix S be nonsingular. 
Because the CCF transformation in Section 10-9 was defined only for SISO systems, the 
theorem applies only to this type of system. 
~ Theorem 10-3. For a system described by the state equation of Eq. ( 10-261 ), if A is in 
DCF or JCF, the pair [A, B] is completely controllable if all the elements in the rows ofB 
that correspond to the last row of each Jordan block are nonzero. 
The proof of this theorem comes directly from the definition of controllability. Let us 
assume that A is diagonal and that it has distinct eigenvalues. Then, the pair [A, B] is 
controllable if B does not have any row with all zeros. The reason is that, if A is diagonal, 
all the states are decoupled from each other, and, if any row of B contains all z.ero elements, 
the corresponding state would not be accessed from any of the inputs, and that state would 
be uncontrollable. 
For a system in JCF, such as the A and B matrices illustrated in Eq. (10-264), for 
controllability only the elements in the row of B that correspond to the last row of the 
Jordan block cannot all be zeros. The elements in the other rows of B need not all be 
718 ,. Chapter 10. State Variable Analysis 
nonzero, since the corresponding states are still coupled through the ls in the Jordan blocks 
of A. 
[lt 
A= 0 0 
0 AI 
0 
0 0 
1 
Al 
0 Il (10-264) 
Thus. the condition of controllability for the A and Bin Eq. (10-264) is h31 -=J. 0, b32 -=J. 0, 
b41 i=-O. and b42 =/:-0. 
~ EXAMPLE 10-11-1 The following matrices are for a system with two identical eigenvalues, but the matrix A is diagonal. 
A= [)..• 0 ] B = [b11] 0 A.J h21 (10-265) 
The system is uncontrollable, since the two state equations are dependent; that is. it would not be 
possible to control the states independently by the input. We can easily show that in this case S = 
[BAB] is singular. 
~ .. EXAMPLE 10-11-2 Consider the system shown in Fig. 10~24, which was reasoned earlier to be uncontrollable. Let us 
investigate the same system using the condition ofEq. (10-263). The state equations of the system are 
written in the form of Eq. ( 10-263) with 
Thus, from Eq. (10-263), the controllability matrix is 
[1 --02] S = [B AB)= O 
which is singular, and the system is uncontrollable. 
flt-EXAMPLE 10-11-3 Consider that a third .. order system has the coefficient matrices 
The controllability matrix is [ I 2 
A= 0 1 
1 -4 
[o -1 -~4] S = rB AB A2B] = ~ ~ 
which is singular. Thus, the system is not controllable. (10-266) 
( I0-267) 
(10-269) 
10-12 Observability of Linear Systems ~ 719 
The eigenvalues of A are J..1 = 2, l2 = 2, and l3 = 1. The JCF of A and B are obtained with the 
transfonnation x(t) :::::= Tx(t). where 
(10-270) 
Then, 
[2 -1 o] A = T-1 AT = O 2 0 
0 0 1 
Because the last row of B, which corresponds to the Jordan block for the eigenvalue J..3, is zero. 
the transformed state variablex3 (t) is uncontrollable. From the transformation matrix Tin Eq. ( 10-235), 
x2 = x3. which means that x2 is uncontrollable in the original system. It should be noted that the minus 
sign in front of the 1 in the Jordan block docs not alter the basic definition of the block. <ii 
10-12 OBSERVABILITY OF LINEAR SYSTEMS 
The concept of observability was covered earlier in Section 10-11 on controllability and 
observability. Essentially, a system is completely observable if every state variable of the 
system affects some of the outputs. In other words, it is often desirable to obtain 
information on the state variables from the measurements of the outputs and the inputs. 
If any one of the states cannot be observed from the measurements of the outputs, the state 
is said to be unobservable, and the system is not completely observable or, simply. 
unobservable. Fig. 10-25 shows the state diagram of a linear system in which the state x2 is 
not connected to the output y(t) in any way. Once we have measured y(t), we can observe 
the state x1(t), since x1(t) = y(t). However, the state x2 cannot be observed from the 
information on y(t). Thus, the system is unobservable. 
10·12-1 Definition of Observability 
Given a linear time-invariant system that is described by the dyncunic equations of 
Eqs. ( 10-261) and ( 10·262), the state x{t0) is said to be observable if given any input u(t), 
there exists afinite time t/?. to such that the knoivledge ofu(t)for to::; t < tfi matrices A, 
B. C. and D; and the output y(t) for to ::; t < t1 are sufficient to determine x(t0). If every 
stc,te of the system is observable for a finite t.r, we say that the systern is completely 
observable. or. simply. observable. 
The following theorem shows that the condition of observability depends on the matrices 
A and C of the system. The theorem also gives one method of testing observability. 
3 
Figure 10M25 State diagram of a system that is not observable. 
720 ... Chapter 10. State Variable Analysis 
fl Theorem 10-4. For the system described by Eqs. ( 10~261) and (10-262) to be 
completely observable, it is necessary and sufficient that the following n x np observ­
ability matrix has a rank of n: 
[ C l CA 
V= CA2 
cAn-1 (10-272) 
The condition is also referred to as the pair [A, CJ being observable. In particular, if the 
system has only one output, C is a 1 x n row matrix; V is an n x n square matrix. Then the 
system is completely observable if V is nonsingular. 
The proof of this theorem is not given here. It is based on the principle that Eq. 
(10-272) must be satisfied so that x(t0) can be uniquely determined from the output y(t). 
10-12-2 Alternate Tests on Observability 
Just as with controllability, there are several alternate methods of testing observability. 
These are described in the following theorems. 
• Theorem 10-5. For an SISO system, described by the dynamic equations of Eqs. ( 10-
261) and ( 10-262) with r = 1 and p = 1, the pair [A, CJ is completely observable if A and C 
are in OCF or transformable into OCF by a similarity transformation. 
The proof of this theorem is straightforward, since it was established in Section 10-8 
that the OCF transformation requires that the observability matrix V be nonsingular. 
• Theorem 10-6. Fora system described by thedynamicequationsofEqs. (10-261) and 
( 10-262), if A is in DCF or JCF. the pair [A, C] is completely observable if all the elements 
in the columns of C that correspond to the first row of each Jordan block are nonzero. 
Note that this theorem is a dual of the test of controllability given in Theorem 10-3. 
If the system has distinct eigenvalues, A is diagonal, then the condition on observability is 
that none of the columns of C can contain all zeros. 
ti>, EXAMPLE 10-12-1 Consider the system shown in Fig. 10-25, which was earlier defined to be unobservable. The dynamic 
equations of the system are expressed in the form of Eqs. (10-261) and (10-262) with 
(10-273) 
Thus, the observability matrix is 
(10-274) 
which is singular. Thus, the pair [A, CJ is unobservable. In fact, because A is of DCF and the 
second column of C is zero, this means that the state x2(t) is unobservable, as conjectured from 
Fig. 10-24. ~:, 
10-13 Relationship among Controllability, Observability, and Transfer Functions 4 721 
.v· 10-13 RELATIONSHIP AMONG CONTROLLABILITY, OBSERVABILITY, 
AND TRANSFER FUNCTIONS 
In the classical analysis of control systems, transfer functions are used for modeling of 
linear time-invariant systems. Although controllability and observability are concepts and 
tools of modern control theory, we shall show that they are closely related to the properties 
of transfer functions. 
; J Theorem 10-7. If the input-output transfer function of a linear system has pole-zero 
cancellation, the system will be uncontrollable or unobservable, or both, depending on 
how the state variables are defined. On the other hand. if the input-output transfer 
function does not have pole-zero cancellation. the system can always be represented by 
dynamic equations as a completely controllable and observable system. 
The proof of this theorem is not given here. The importance of this theorem is that, if a 
linear system is modeled by a transfer function with no pole-zero cancellation, then we are 
assured that it is a controllable and observable system, no matter how the state-variable 
model is derived. Let us amplify this point further by referring to the following SISO 
system. 
[-1 
A= 0 
0 
0 C=[l O 1 O] D=O 
Because A is a diagonal matrix, the controllability and observability conditions of the four 
states are determined by inspection. They are as follows: 
xi: Controllable and observable (C and 0) 
x2: Controllable but unobservable (C but UO) 
x3: Uncontrollable but observable (UC but 0) 
x4: Uncontrollable and unobservable (UC and UO) 
The block diagram of the system in Fig. 10-26 shows the DCF decomposition of 
the system. Clearly, the transfer function of the controllable and observable system 
should be 
Y(s) 
U(s) = s + 1 (10-276) 
whereas the transfer function that corresponds to the dynamics described in Eq. (10-275) is 
Y(s) = C(sI -A)-lB = (s + 2)(s + 3)(s + 4) 
U(s) (s + 1 )(s + 2}(s + 3)(s + 4) (10-277) 
which has three pole-zero cancellations. This simple-minded example illustrates that a 
"minimum-order" transfer function without pole-zero cancellation is the only component 
that corresponds to a system that is controllable and observable. 
722 Chapter 10. State Variable Analysis 
(C andO) 
i, I x, . tt1 
II -
(C hut UO) + 
.i-2 _l_ X2 - . s+2 . 
y 
+i 
I 
(UC but OJ 
I .i:, 
·I I 
I x, 
s+3 
(UC and UO) 
.\"4 
·I _l_ 
I X4 
s+4 • 
Figure 10-26 Block ruagram showing the controllable , uncontrollabl e, observnble, and unobservable 
components of the system described in Eq. (10-275). 
EXAMPLE 10-13-1 Let us consider the transfer function 
Y(s) 
U(s) s+2 (I 0-278) 
(s + l)(s + 2) 
which is a reduced form ofEq. (I 0-277). Eq. (10-278) is decomposed into CCF and OCF as follows: 
CCF: 
( I 0-279) 
Because the CCF transformation can he made, the pair [A, BJ of the CCF is controllable . 
The observability matrix is 
(10-280) 
which is singular, and the pair [A, CJ of the CCF is unobservable . 
10-14 Invariant Theorems on Controllability and Observability _. 723 
OCF: 
A= [~ =;] B = [!] C = [O 1] (10-281) 
Because the OCF transformation can be made. the pair [A, CI of the OCF is observable. However, the 
controllability matrix is 
s = [B AB]= D =~] (10-282) 
which is singular, and the pair [A, B] of the OCF is uncontrollable. 
The conclusion that can be drawn from this example is that. given a system that is modeled by 
transfer function, the controllability and observability conditions of the system depend on how the 
state variables are defined. ~ 
• 10-14 INVARIANT THEOREMS ON CONTROLLABILITY AND OBSERVABILITY 
We now investigate the effects of the similarity transfonnations on controllability and 
observability. The effects of controllability and observability due to state feedback will be 
investigated. 
• Theorem l0a8. Invariant theorem on similarity transformations: Consider the 
system described by the dynamic equations of Eqs. ( 10-261) and ( 10-262). The 
similarity transformation x(t) = Pi{t). where Pis nonsingular, tramforms the dynamic 
equations to 
dx(t) - -~ = Ax(t) + Bu(t) 
y(t) = Cx(t) + Du(t) 
where 
A= p-1AP (10-283) 
(10-284) 
(10-285) 
The controllability of [ A, B] and the observability of [ A, C] are not affected by the 
tramformation. 
In other words, controllability and observability are preserved through similar 
transformations. The theorem is easily proven by showing that the ranks of S and S 
and the ranks of V and V are identical. where S and V are the controllability and 
observability matrices, respectively, of the transformed system. 
• Theorem 10-9. Theorem on controllability of closed-loop systerns with state feed­
back: If the open-loop system 
dx(t) --;fr= Ax(t) + Bu(t) (10-286) 
is completely controllable, then the closed-loop system obtained through state feedback, 
u(t) = r{t) -Kx(t) (10-287) 
724 .-. Chapter 10. State Variable Analysis 
so that tlte state equation becomes 
dx(t) ~ = (A -BK)x(t) + Br(t) (10-288) 
is also completely controllable. On the other hand, if[A, BJ is uncontrollable, then there is 
no K that will make the pair [A -BK. BJ control/able. In other words. if an open-loop 
system is uncontrollable, it cannot be made controllable through state feedback. 
Proof: The controllability of [A, BJ implies that there exists a control u(t) over the time 
interval [t0, t1] such that the initial state x(t0) is driven to the final state x(t1) over the finite 
time interval tr-t0• We can write Eq. (10-252) as 
r(t) = u(t) + Kx(t) (10-289) 
which is the control of the closed-loop system. Thus, if u(t) exists that can drive x(t0) to any 
x(t1) in finite time, then we cannot find an input r(t) that will do the same to x(t), because 
otherwise we can set n(t) as in Eq. (10-287) to control the open-loop system. 
• Theorem 10 .. 10. Theorem on observability of closed-loop systems with state feed­
back: If an open-loop system is controllable and observable, then state feedback of the 
form of Eq. ( 10-2 87) could destroy observability. In other words. the observability of open­
loop and closed-loop systems due to state feedback is unrelated. 
The following example illustrates the relation between observability and state 
feedback. 
... EXAMPLE 10-14-1 Let the coefficient matrices of a linear system be 
(10-290) 
We can show that the pair [A. B] is controllable and [A, CJ is observable. 
Let the state feedback be defined as 
u(t) = r(t) -Kx(t) (10-291) 
where 
K = [k1 kzJ (10-292) 
Then the closed-loop system is described by the state equation 
dx(t) ~ = (A -BK)x(t) + Br(t) (10-293) 
A _ BK = [ -k1 1 -k2 l -2-ki -3 -g2 (10-294) 
The observability matrix of the closed-loop system is 
(10-295) 
10-15 Case Study: Magnetic-Ball Suspension System ~ 725 
The determinant of Vis 
(10-296) 
Thus, if k1 and k2 are chosen so that JVI = 0, the closed-loop system would be uncontrollable. 
10-15 CASE STUDY: MAGNETIC -BALL SUSPENSION SYSTEM 
As a case study to illustrate some of the material presented in this chapter, let us consider 
the magnetic-ball suspensio n system shown in Fig. 10-27. The objective of the system is to 
regulate the current of the electromagnet so that the ball will be suspended at a fixed 
distance from the end of the magnet. The dynamic equations of the system are 
di(t) v(t) = Ri(t) + L-d t (] 0-297) 
(10-298) 
where Eq. (10-262) is nonlinear . The system variables and parameters are as follows: 
v(t) = input voltage (V) 
i(t) = winding current (A) 
R = winding resistance = ID 
M = ball mass = 1.0 kg 
The state variables are defined as 
T EleL:tromagne t 
V 
1 
Mg x(t) = ball position (m) 
k = proportional constant = 1.0 
L = winding inductance= 0.01 H 
g = gravitational acceleration = 32.2 m/sec2 
XJ (t) = x(t) 
. ( ) _ dx(t) 
.\2 t -dt 
x3(t) = i(t) 
V (10-299) 
Figure 10-27 Ball-suspension system. 
726 IJJllo Chapter 10. State Variable Analysis 
The state equations are 
dxi (t) = x2(t) 
dt 
dx2(t) k Xj(t) --=g----dt M x1(t) 
dt-3(t) = _ ~X3(t) + v(t) 
dt L · L (10-300) 
(10-301) 
(10-302) 
These nonlinear state equations are linearized about the equilibrium point, x1(t) = x(t) = 
0.5 m. using the method described in Section 4-9. After substituting the parameter values, 
the linearized equations are written 
~x(t) =A* ax(t) + B* ~v(t) (10-303) 
where Ax(t) denotes the state vector, and Av(t) is tbe input voltage of the linearized system. 
The coefficient matrices are 
[ 0 1 0 ] A*= 64.4 0 -16 
0 0 -100 B* = [.t] (10-304) 
All the computations done in the following section can be carried out with the 
MATLAB Toolbox appearing later in this chapter. To show the analytical method, we carry 
out the steps of the derivations as follows. 
The Characteristic Equation 
[ s -l 
Isl -A*J = -64.4 s 
0 0 1~ ] = s3 -;-100s2 -64.4s -6440 = 0 
s+ 100 (10-305) 
Eigenvalues: The eigenvalues of A*, or the roots of the characteristic equation, are 
s = -100 s ;:= -8.025 s = 8.025 
The State-Transition Matrix: The state-transition matrix of A* is 
q,(t) = .c,-1 [ (sl -A*)-1] = .c,-1 ( [-:
04.4 ~I :6 i-I) 
0 s+ 100 (10-306) 
or 
cp(t) :=: .c-• ((s + IOO)(s + /025)(.r -8.025) [~~(:
0~~~) s;.: 11:) ~:: ] ) 
0 s2 -64.4 
(10-307) 
10-15 Case Study: Magnetic-Ball Suspension System ~ 727 
By performing the partial-fraction expansion and carrying out the inverse Laplace 
transform. the state-transition matrix is 
[o o -0.0016] [ o.s 
<p (t) = 0 0 0.16 e-IOOr + -4.012 
0 0 I 0 
[ 0.5 0.062 -0.0092] 
+ 4.012 0.5 -0.074 e8·025t 
0 0 0 (10-308) 
Because the last term in Eq. (10-308) has a positive exponent, the response of q,(t) increases 
with time, and the system is unstable. This is expected, since without control. the steel ball 
would be attracted by the magnet until it hits the bottom of the magnet. 
Transfer Function: Let us define the ball position ~t(t) as the output y(t)~ then, given the 
input, v(t), the input-output transfer function of the system is 
Y(s)=C*(sI-A*)-1B*=[l O O](sl-A*)-1B* 
V(s) 
-1600 =-----------(s + IOO)(s + 8.025)(s -8.025) 
Controllability: The controllability matrix is 
[ 0 0 -1,600 ] 
S = [B* A*B* A*2B*] = 0 -1,600 160,000 
100 -10:000 1,000,000 
Because the rank of S is 3, the system is completely controllable. (10-309) 
(10-310) 
Observability: The observability of the system depends on which variable is defined at 
the output. For state-feedback control, which will be discussed later in Chapter 10, the full 
controller requires feeding back all three state variables, Xi, x2, and x3• However, for 
reasons of economy, we may want to feed back only one of the three state variables. To 
make the problem more general, we may want to investigate which state, if chosen as the 
output, would render the system unobservable. 
1. y(t) = ball position = x(t): c* = [1 0 0] 
The observability matrix is 
[ C* ] [ 1 V = C*A* = 0 
C*A*2 64.4 
which has a rank of 3. Thus, the system is completely observable. 
2. y(t) = all velocity = dx(t)/dt: C* = [O 1 0] 
The observability matrix is 
V = [ C~: * ] = [ 6~.4 
C*A*2 0 ~ -i6] 
64.4 1600 
which has a rank of 3. Thus, the system is completely observable. (10-311) 
728 Chapter 10. State Variable Analysis 
3. y(i) = winding current = i(t): C* = (0 0 11 
The observability matrix is 
[ C* l [O 0 V = C'*A* = 0 0 
CA*2 0 0 l l -100 
-10,000 (10-313) 
which has a rank of I. Thus, the system is unobservable. The physical interpreta­
tion of this result is that, if we choose the current i(!) as the measurable output, we 
would not be able to reconstruct. the state variables from. the measured information. 
The interested reader can enter the data of this system into any available computer program 
and verify the results obtained. 
10-16 STATE-FEEDBACK CONTROL 
A majority of the design techniques in modern control theory is based on the state-feedback 
configuration. That is, instead of using controllers with fixed configurations in the forward 
or feedback path, control is achieved by feeding back the state variables through real 
constant gains. The block diagram of a system with state-feedback control is shown in 
Fig. 9-2(c). A more detailed block diagram is shown in Fig. 10-28. 
We can show that the PID control and the tachometer -feedback control discussed 
earlier are all special cases of the state-feedb ack control scheme. In the case of tachometer­
feedback control, let us consider the second-order prototype system described in Eq. 
(5-87). The process is decomposed by direct decomposition and is represented by the state 
diagram of Fig. 10-29(a). If the states x1(t) and xit) are physically accessible, these 
variables may be fed back through constant real gains -k1 and -k2, respectively, to form 
the control u(t), as shown in Fig. 10-29(b). The transfer function of the system with state 
feedback is 
Y(s) w~ 
R(s) = s2 + (2~w" + K2)s + Ki (10-314) 
D 
r----- )' 
+ B f C 
X 
A 
K 
Figure 10-28 Block diagram of a control system with state feedback. 
r 10-16 State-Feedback Control ~ 729 
l [I s·l (JJ,? 
o~~--•~~-~~~~·•~~~o-~~-~~~-o 
e i2~X2 XJ )' 
-2,t:011 
(a) 
-k1 
(b) 
Figure 10-29 Control of a second-order system by state feedback. )' 
For comparison purposes, we display the transfer functions of the systems with tachometer 
feedback and with PD control as follows: 
Tachometer feedback: 
Y(s) w?i 
R(s) = s2 + (2?:wn + K1w~)s + w~ (10-315) 
PD control: 
Y(s) _ w;,(Kp + Kos) 
R(s) -s2 + {2?:w + Kow~)s + w~Kp (10-316) 
Thus, tachometer feedback is equivalent to state feedback if k1 = w~ and k2 = K1w~. 
Comparing Eq. (10-314) with Eq. (10-316), we see that the characteristic equation of the 
system with state feedback would be identical to that of the system with PD control if 
k1 = w;,K p and k2 = w~Kv. However, the numerators of the two transfer functions are 
different. 
The systems with zero reference input, r(t) == 0, are commonly known as regulators. 
When r(t) = 0, the control objective is to drive any arbitrary initial conditions of the system 
to zero in some prescribed manner, for example, "as quickly as possible." Then a second­
order system with PD control is the same as state-feedback control. 
It should be emphasized that the comparisons just made are all for second-order 
systems. For higher-order systems, the PD control and tachometer-feedback control are 
equivalent to feeding back only the state variables x1 and x2, while state-feedback control 
feeds back all the state variables. 
Because PI control increases the order of the system by one, it cannot be made 
equivalent to state feedback through constant gains. We show in Section 10-18 that if we 
combine state feedback with integral control we can again realize PI control in the sense of 
state-feedback control. 
730 .... Chapter 10. State Variable Analysis 
t~ 10-17 POLE-PLACEMENT DESIGN THROUGH STATE FEEDBACK 
When root loci are utilized for the design of control systems, the general approach may be 
described as that of pole placement; the poles here refer to that of the closed-loop transfer 
function, which are also the roots of the characteristic equation. Knowing the relation 
between the closed-loop poles and the system performance, we can effectively carry out the 
design by specifying the location of these poles. 
The design methods discussed in the preceding sections are all characterized by the 
property that the poles are selected based on what can be achieved with the fixed-controller 
configuration and the physical range of the controller parameters. A natural question would 
be: Under what condition can the poles be placed arbitrarily? This is an entirely new 
design philosophy and freedom that apparently can be achieved only under certain 
conditions. 
When we have a controlled process of the third order or higher, the PD, PI, single­
stage phase-lead, and phase-lag controllers would not be able to control independently 
all the poles of the system, because there are only two free parameters in each of these 
controllers. 
To investigate the condition required for arbitrary pole placement in an nth-order 
system, let us consider that the process is described by the following state equation: 
dx(t) dt = Ax(t) + Bu(t) (10-317) 
where x(t) is an n x 1 state vector, and u(t) is the scalar control. The state-feedback 
control is 
u(t) = -Kx(t) + r(t) 
where K is the 1 xn feedback matrix with constant-gain elements. By substituting Eq. (10-
318) into Eq. (10-317), the closed-loop system is represented by the state equation 
dx{t) dt = (A -BK)x(t) + Br (t) (10-319) 
It will be shown in the following that if the pair [A, B] is completely controllable, then a 
matrix K exists that can give an arbitrary set of eigenvalues of (A -BK); Lhat is, then roots 
of the characteristic equation 
jsl-A+BKI = 0 (10-320) 
can be arbitrarily placed. To show that this is true, that if a system is completely 
controllable, it can always be represented in the controllable canonical form (CCF); 
that is, in Eq. ( 10~317), 
A=[ ! 
-ao 1 
0 
0 
-a1 0 
~ l B = [~] 
-a~r-1 i (10-321) 
10-17 Pole-Placement Design Through State Feedback ~ 731 
The feedback gain matrix K is expressed as 
K = [kt k2 
where k1, k2, ...• kn are real constants. Then, 
0 1 0 
0 0 1 
A-BK= [ 
-ao0
-k1 0 0 
-a1 -k2 -a2 -k3 k11 J 
-a.LJ 
The eigenvalues of A -BK are then found from the characteristic equation (10-322) 
(10-323) 
Isl -(A -BK)!= sn + (a,z-l + kn)s'1-1 + (a11-2 + kn-I ),y1-Z + · · · + (ao + k1) = 0 
(10-324) 
Clearly, the eigenvalues can be arbitrarily assigned, because the feedback gains k1, k2, ••• 
kn are isolated in each coefficient of the characteristic equation. Intuitively, it makes sense 
that a system must be controllable for the poles to be placed arbitrarily. If one or more state 
variables are uncontrollable, then the poles associated with these state variables are also 
uncontrollable and cannot be moved as desired. The following example illustrates the 
design of a control system with state feedback. 
~ EXAMPLE 10-17-1 Consider the magnetic-ball suspension system analyzed in Section 10-15. This is a typical regulator 
system for which the control problem is to maintain the baU at its equilibrium position. It is shown in 
Section 10-15 that the system without control is unstable. 
The linearized state model of the magnetic-ball system is represented by the state equation 
dax(t) = A* .6.x(t) + B" 6v(t) 
dt 
where .tlx(t) denotes the linearized state vector. and .6. v(t) is the linearized input voltage. The 
coefficient matrices are 
[ 0 1 0 ] A*= 64.4 0 -16 
0 0 -100 B* = [ g ] 
100 (10-326) 
The eigenvalues of A* ares= -100, -8.025, and 8.025. Thus, the system without feedback control is 
unstable. 
Let us give the following design specifications: 
1. The system must be stable. 
2. For any initial disturbance on the position of the ball from its equilibrium position. the ball 
must return to the equilibrium position with zero steady-state error. 
3. The time response should settle to within 5% of the initial disturbance in not more than 
0.5 sec. 
4. The control is to be realized by state feedback 
L\v(t) = ~K.tlx(t) = -(k1 k2 k3).tlx(t) (10-327) 
where k1. k2, and k3 are real constants. 
732 Chapter 10. State Variable Analysis 
\00 s-1 
v(t) Qe---•---~ -\6 • 
-100 
64.4 
(a) 
v(t) y(t) 
(b) 
Figure 10-30 (a) State diagram of magnetic-ball-suspension system. (b) State diagram of magnetic­
ball-suspension system with state feedback. 
A state diagram of the "open-loop" ball-suspension system is shown in Fig. 10-30(a). and the 
same of the "closed-loop" system with state feedback is shown in Fig. 10-30(b). 
We must select the desired location of the eigenvalues of (sl -A"'+ B*K) so that requirement 3 
in the preceding list on the time response is satisfied. Without entirely resorting to trial and error. we 
can start with the following decisions: 
1. The system dynamics should be controlled by two dominant roots. 
2. To achieve a relatively fast response, the two dominant roots should be complex. 
3. The damping that is controlled by the real parts of the complex roots should be adequate, 
and the imaginary parts should be high enough for the transient to die out sufficiently fast. 
After a few trial-and-error runs. using the ACSYS/MATLAB too}, we found that the following 
characteristic equation roots should satisfy the design requirements: 
s = -20 s = -6 + j4.9 s = -6-j4.9 
The corresponding characteristic equation is 
s3 + 32s2 + 300s + 1200 == 0 
The characteristic equation of the closed-loop system with state feedback is written 
s -l 
]sl-A*+B*KI = -64.4 s 0 
16 
100kt 100k2 s + 100 + lOOk3 (10-328) 
= s3 + lOO(k3 + 1).yl -(64.4 + 1600k2).v -1600k1 -6440(k3 + 1) = 0 
(10-329) 
10-17 Pole-Placement Design Through State Feedback ~ 733 
1.5 
..--...... 
~ 0-
-1.5 0 "~ ' ~ 
0.4 I 
Ymllll = 1.03 
T max.;;. 0.06 sec 
.Vmax = -0.02 
Tmax = 0.76 sec 
0.8 1.2 1.6 2.0 
Tinu.: (sec) 
Figure 10-31 Output response of magnetic-ball-suspension system with state feedback. subject to 
initial condition y(O) = x1(0) = 1. 
which can also be obtained directly from Fig. 10~30(b) using the SFG gain formula. Equa­
ting like coefficients of Eqs. ( 10-328) and ( 10-329). we get the following simultaneous equations: 
lOO(k3 + 1) ;:= 32 
-64.4 -1600k2 = 300 
-1600k1 -6440(k3 + 1) = 1200 
Solving the last three equations. and being assured that the solutions exist and are unique. we get the 
feedback-gain matrix 
K = (k1 kz k3] = [ -2.038 -0.22775 -0.68] (10-331) 
Fig. 10.31 shows the output response y(t) when the system is subject to the initial condition 
x(O) = m (10-331) 
.,. EXAMPLE 10-17-2 In this example. we shall design a state-feedback control for the second-order sun-seeker 
system treated in Example 4-11-2 and throughout Chapter 9. The CCF ~1ate diagram of the 
process with K = I is shown in Fig. 10-32(a). The problem involves the design of a state-feedback 
control with 
8e(t) = -Kx(t) = -[k1 k2 Jx(t) 
The .state equations al'e l'epre.sented in vector-matrix form as 
dx(t) = Ax(t) + B8e(t) 
dt 
where (10-332) 
(10-334) 
734 • Chapter 10. State Variable Analysis 
8, 1 s-1 s-1 2500 ~f------•~----~~2----~•------~~----~•------~ 
-25 
(a) 
-1 s 
(b) s-' 2500 
Figure 10-32 (a) State diagram of second-order sun-seeker system. (b) State diagram of 
second-order sun-seeker system with state feedback. 
The output equation is 
9o(t) = Cx(t) 
where 
C = [ I O] 
The design objectives are as foliows: 
1. The steady-state error due to a step function input should equal 0. (10-335} 
2. With the state-feedback control, the unit-step response should have minimum overshoot, 
rise time, and settling time. 
The transfer function of the system with state feedback is written 
®o(s) 2500 
0r(s) = s1 + (25 + k2)s + k1 (10-337) 
Thus, for a step input, if the output has zero steady-state error, the constant terms in the 
numerator and denominator must be equal to each other-that is, k 1 = 2500. This means that, while 
the system is completely controllable, we cannot arbitrarily assign the two roots of the characteristic 
equation, which is now 
s2 + (25 + k2)s + 2500 = 0 (10-338) 
In other words, only one of the roots of Eq. (10-338) can be arbitrarily assigned. The problem i.s 
solved using ACSYS. After a few trial-and-error runs, we found out that the maximum overshoot. rise 
time, and settling time are all at a minimum when k2 = 75. The two roots ares = -50 and -50. The 
attributes of the unit-step response are 
maximum overshoot = 0% tr = 0.06717 sec ts == 0.09467 sec 
The state-feedback gain matrix is 
K = [2500 75] (10-339) 
The lesson that we learned from this illustrative example is that state-feedback control generally 
produces a system that is type 0. For the system to track a step input without steady-state error, which 
requires a type 1 or higher-type system, the feedback gain k 1 of the system in the CCF state diagram 
10-18 State Feedback with Integral Control 735 
cannot be assigned arbitrarily . This means that, for an nth-order system, only n -l roots of the 
characteristic equation can be placed arbitrarily . 
10-18 STATE FEEDBACK WITH INTEGRAL CONTROL 
The state-feedback control structured in the preceding section has one deficiency in that 
it does not improve the type of the system. As a result, the state-feedback control with 
constant-gain feedback is generally useful only for regulator systems for which the 
system does not track inputs, if all the roots of the characteristic equation are to be placed 
at will. 
In general, most control systems must track inputs. One solution to this problem is to 
introduce integral control, just as with PI controller , together with the constant-gain state 
feedback. The block diagram of a system with constant-gain state feedback and integral 
control feedback of the output is shown in Fig. 10-33. The system is also subject to a noise 
input n(t). For a SISO system, the integral control adds one integrator to the system. As 
shown in Fig. 10-33, the output of the (n + l)st integrator is designated as x,.,+1-The 
dynamic equations of the system in Fig. 10-33 are written as 
dx(t) ~ = Ax(t) + Bu(t) + En(t) 
dx11+ I ( t) ( ) ( ) ---'--'--=rt -Vt dt -
y(t) = Cx(t) + Du(t) (10-340) 
(10-341) 
(10-342) 
where x(t) is then x 1 state vector; u(t) and y(t) are the scalar actuating signal and output, 
respectively; r(t) is the scalar reference input; and n(t) is the scalar disturbance input. The 
coefficient matrices are represented by A, B, C, D and E, with appropriate dimensions. The 
actuating signal u(t) is related to the state variables through constant-state and integral 
feedback , 
u(t) = -Kx(t) -k11+1Xn+l (t) (10-343) 
y 
Figure 10-33 Block diagram of a control system with state feedback and integral output feedback. 
736 -· Chapter 10. State Variable Analysis 
where 
(10-344) 
with constant real gain elements. and kn+l is the scalar integral-feedback gain. 
Substituting Eq. (10-343) into Eq. (10.-340) and combining with Eq. (10~341). the 
n + 1 state equations of the overall system with constant-gain and integral feedback 
are written 
~;) = (A -BK)ii(t) + [ ~] r(t) + En(t) (10-345) 
where 
(10-346) 
A=[!c ~] (11+l)x(n+l) ii=[~] (n+l)xl (10-347) 
K = [K k,t+l] = [k1 k2 · · · k,1 k11+t) 1 X (n + 1) (10-348) 
E= m [(n+l) x 1] ( 10-349) 
Substituting Eq. (10-343) into Eq. (10-342). the output equation of the overall system 
is written 
y(t) = Cx(t) (10-350) 
where 
C = [C-DK DKJ [1 x (n+ l)] (10-351) 
The design objectives are as follows: 
1. The steady-state value of the output y(t) follows a step-function input with zero 
error; that is. 
es.5 = Iim e(t) = 0 
1-c,::; (10-352) 
2. The n + 1 eigenvalues of (A -BK L ar~ placed at desirable locations. For the last 
condition to be possible, the pair [A, BJ must be completely controllable. 
The following example illustrates the applications of state-feedback with integral 
control. 
10-18 State Feedback with lntegra, Contro, ~ 737 
• EXAMPLE 10-18-1 We have shown in Example 10-17-2 that, with constant-gain state-feedback control, the second-order 
sun-seeker system can have only one of its two roots placed at will for the system to track a step input 
without steady-state error. Now let us consider the same second-order sun-seeker system in Example 
10-17-2. except that an integral control is added to the forward path. The state diagram of the overall 
system is shown in Fig. 10-34. The coefficient matrices are 
A = [ ~ _2~ l B = [ ~ l C = [ 2500 0] D = 0 (10-353) 
From :Eq. (10-347). 
(10-354) 
We can show that the pair [A, B] is completely controllable. Thus, the eigenvalues of (sl -A + BK) 
can be arbitraril)I placed. Substituting A, B. and Kin the characteristic equation of the closed-loop 
system with state and integral feedback, we have 
s 
JsI-A+liKl = k1 
-2500 -1 
0 0 
s 
;:::: s3 + (25 + kz)s2 + kis + 2500k3 = 0 
which can also be found from Fig. 10-34 using the SFG gain formula. 
The design objectives are as follows: 
1. The steady-state output must follow a step function input with zero error. 
2. The rise time and settling time must be less than 0.05 sec. 
3. The maximum overshoot of the unit-step response must be less than 5%. (10-355) 
Because all three roots of the characteristic equation can be placed arbitrarily. it is not realistic to 
require minimum rise and settling times, as in Example 10-17-2. 
Again, to realize a fast rise time and settling time, the roots of the characteristic equation should 
be placed far to the left in the s-plane, and the natural frequency should be high. Keep in mind that 
roots with large magnitudes will lead to high gains for the statefeedback matrix. 
The ACSYS/MATLAB software was used to carry out Lbe design. After a few trial~and-error 
runs, the design specifications can be satisfied by placing the roots at 
s = -200 -50 + j50 and -50-j50 
The desired characteristic equation is 
s3 + 300s2 + 25, OOOs + 1, 0001000 = 0 (10-356) 
Figure 10-34 Sun-seeker system with state feedback and integral control in Example 10-18-1. 
738 .,.. Chapter 10. State Variable Analysis 
Equating like coefficients of Eqs. ( 10-355) and (10-356), we get 
ki = 25,000 k2 = 275 and k3 = 400 
The attributes of the unit-step response are as follows: 
Maximum overshoot = 4% 
tr = 0.03247 sec 
ts = 0.04667 sec 
Notice that the high feedback gain of ki, which is due to the large values of the roots selected. may 
puse physical problems; if so, the design specifications may have to be revised. (1 
..._ EXAMPLE 10-18-2 In this example we illustrate the application of state-feedback with integral control to a system with a 
disturbance input. 
Consider a de-motor control system that is described by the following state equations: 
d(L)(t) -B Ki. 1 --=-w(t) +-ia(t)--TL 
~ J J J 
where 
ia(t) = armature current, A 
ea (t) = armature applied voltage, V 
cv(t) = motorvelocity, rad/sec 
B = viscous-friction coefficient of motor and load = 0 
J = moment of inertia of motor and load = 0.02 N-m/rad/sec2 
Ki = motor torque constant = I N-m/ A 
Kb= motor back-emf constant= IV/rad/sec 
TL= constant load torque(magnitude not known)i N-m 
L ~ armature inductance = 0.005 H 
R = armature resistance = Ill 
The output equation is 
y(t) = Cx(t) = [ I O ]x(t) (10-358) 
(10-359) 
The design problem is to find the control u(t) = ea(t) through state feedback and integral control such 
that 
lim ia(t) = 0 and lim d(L)(t) = O 1. t _, oc t -• oc dt 
2. lim w(t) = step input r(t) = Us(t) 1-oc (10-360) 
(10-361) 
3. The eigenvalues of the closed~loop system with state feedback and integral conlrol are at s 
= -300. -10 + jlO, and -10 -jlO. 
Let the state variables be defined as x1(t) = a>(t) andx2(t) = iu(l). The state equations in Eqs. ( 10-357) 
and (10-358) are written in vector-matrix form: 
dx(t) --= Ax(t) + Bu(t) + E,z(t) dt (10-362) 
10-18 State Feedback with Integral Control ·. 739 
where n(l) = T1}ts(t). 
From Eq. (10-347), 
- [ A A= -C 
The control is given by 
where B=G]=[2:] 
E = [-}] = [-;OJ 
50 
-200 
0 
C = [C OJ= [1 O ;] B=[~]=[+J 
OJ E=[~]=[T] 
u(t) = -Kx(t) -k11+1x 11+1 (t) = Ki(t) 
Fig. I 0-35 shows the state diagram of the overall designed system. 
The coefficient matrix of the closed-loop system is (10-363) 
(10-364) 
( 10-365) 
(10-367) 
(10-368) 
(10-369) 
Figure 10-35 DC-motor control system with state feedback and integral control and disturbance 
torque in Example 10-18-2. 
740 .. Chapter 10. State Variable Analysis 
The characteristic equation is 
Isl -A+ BKI == s3 + 200(1 + k2)s2 + 10,000(1 + k1 )s -101 OOOk3 = 0 
which is more easily detennined by applying the gain formula of SFG to Fig. 10-35. 
For the three roots assigned, the last equation must equal 
s3 + 320s2 + 6, 200s + 60, 000 = 0 
Equating the like coefficients of Eqs. (10-371) and 00-372). we get 
kt = -0.38 k2 = 0.6 k.3 = -6.0 (10-371) 
(10-372) 
Applying the SFG gain formula to Fig. 10-35 between the inputs r(t) and n(t) and the states m(t) and 
ia(t), we have 
(10-373) 
where Ac(s) is the characteristic polynomial given in Eq. (10-372). 
0.2 0.4 0.6 0.8 
Time (sec) 
Figure 10-36 Time responses of de-motor control system with state feedback and integral control 
and disturbance torque in Example 10-18-2. 
10-19 MATLAB Tools and Case Studies .,. 741 
Applying the final-value theorem to the last equation, the steady-state values of the state 
variables are found to be 
lim [w(t)]::::::: lim s[O(s)] = [O K8;] [Ti1L] = [.!l] 
Hoo ia(t) s-+O la(s) I , (10-374) 
Thus, the motor velocity w(t) will approach the constant reference input step function r(t) = u_tCt) as t 
approaches infinity, independent of the disturbance torque TL• Substituting the system parameters into 
Eq. (10-373), we get 
O(s) 1 -50(s + 320)s 60,000 -; [TL] 
[ /.(s)] = a,(s) [ 6200s + 60,000 1,200s] ; (10-375) 
Fig. l 0-36 shows the time responses of w(t) and i"(t) when TL= 1 and TL= 0. The reference input is a 
unit-step function. ..,. 
}-10-19 MATLAB TOOLS AND CASE STUDIES 
In this section we present a MATLAB tool to solve most problems addressed in this 
chapter. The reader is encouraged to apply this tool to all the problems identified by a 
MATLAB Toolbox in the left margin of the text throughout this chapter. We use 
MATLAB's Symbolic Tool to solve some of the initial problems in this chapter involving 
inverse Laplace transformations. We will also use MATLAB to convert from transfer 
functions to state .. space representation. These programs allow the user to conduct the 
following tasks: 
• Enter the state matrices. 
• Find the system's characteristic polynomial, eigenvalues, and eigenvectors. 
• Find the similarity transformation matrices. 
• Examine the system controllability and observability properties. 
• Obtain the step, impulse, and natural (response to initial conditions) responses~ as 
well as the time response to any function of time. 
• Use MATLAB Symbolic Tool to find the state-transition matrix using the inverse 
Laplace command. 
• Convert a transfer function to state-space form or vice versa. 
To better illustrate how to use the software, let us go through some of the steps involved in 
solving earlier examples in this chapter. 
10-19-1 Description and Use of the State-Space Analysis Tool 
The State-Space Analysis Tool (statetool) consists of a number of m-files and GUis for the 
analysis of state-space systems. The statetool can be invoked from the Automatic Control 
Systems launch applet (ACSYS) by clicking on the appropriate button. You will then 
see the window pictured in Fig. I 0-37. We use the example in Section 10-16 and Examples 
10-5-1 and 10-5-2 to describe how to use the statetool. 
742 Chapter 10. State Variable Analysis 
•) State Spa~e Tool .:J.gj~. 
Calculate/Display Time Response Accessories 
Block Diagram------------
dxCt) =[ A 
dt I x(t)+[ B ] u(t) 
I a:(t)+[ D ] u(t) y(tl ~[ C 
Input Module-------------
Enter coetiicient Matrices. 
eg. For a 3x3 identity matrix enter (1 0 O;O 1 O;O O 1 J 
[1;0;1] is a 3x1 column (1 0 OJ is a 1x3 row. 
A 
I [0,1,0;64.4,0,-16;0,0, -100] 
B 
[0;0;100] 
C 
(1,0,0) 
D 
0 
lntilial Conditions 
0 
Buttons---------------, 
Reset 
Close Window 
Figure 10-37 The State-Space 
Analysis window. 
First consider the example in Section 10-14. To enter the following coefficient 
matrices, 
B* = [ ~ l 
100 C* = [I 0 OJ (10-378) 
10-19 MATLAB Tools and Case Studies 743 
enter the values in the appropriate edit boxes. Note that the default value of initial 
conditions is set to zero and you do not have to adjust it for this example. Follow the 
instruction s on the screen very carefully. The elements in the row of a matrix may be 
separated by a space or a comma, while the rows themselve s must be separated by a 
semicolon. For example, to enter matrix A, enter [O,l,0;64.4,0,-16;0,0,-IOO] in the A edit 
box, and to enter matrix B, enter [0;0;100) in the B edit box, as shown in Fig. 10-38. In this 
case, the D mahix is set to zero (default value). To find the characteristic Eq. (10-270), 
4 State Space Tool .JtJJJS.1 
Colculate/Display Time Response Accessories 
Block Diagram-------------, 
d;;t) =[ A 
y(tJ =[ C ]x(t)+[B ]u(t) 
] x(t) +[ D ] u(t) 
Input Module-------- ----~ 
Enter coefffcient Matrices. 
eg. For a 3x3 identity matrix enter [1 o o;o 1 O;O o 1 J 
[1 ;0;1] is a 3x1 column [1 O OJ is a 1 x3 row. 
A I ro.1,o;s4.4,o.-1s;o,o.-1001 
B I ro;o;1001 
C I r1.o.01 
D 
0 
lntitial Condttions 
0 
Buttons--------------_, 
Reset 
Close Window 
Figure 10-38 Inputing values in the 
State-Space window. 
744 r--Chapter 10. State Variable Analysis 
The A matrix is: 
Amat= 
a 
64.4000 
0 1.0000 
0 
0 0 
-16.0000 
-100.0000 
Characteristic polynomial: 
ans= 
sA3+100*sA2-2265873562520787/35184372088832*s-6440 
Eigenvalues of A = diagonal canonical form of A is: 
Abar= 
8.0250 0 0 
0 -8.0250 0 
0 0 -100.0000 
Eigenvectors are 
T= 
0.1237 
0.9923 
0 -0.1237 
0.9923 
0 -0.0016 
0.1590 
0.9873 
Figure 10-39 The MATLAB command window display after clicking the "Eigenvals & vects of A" 
button. 
eigenvalues, and eigenvectors, choose the "Eigenvals & vects of N' option from the 
Calculate/Display menu. The detailed solution will be displayed on the MATLAB 
command window. The A matrix, eigenvalues of A, and eigenvectors of A are shown 
in Fig. 10-39. Note that the matrix representation of the eigenvalues corresponds to the 
diagonal canonical form (DCF) of A, while matrix T, representing the eigenvectors, is the 
DCF transformation matrix discussed in Section 10-9-4. To find the state-transition matrix 
r/>(t), you must use the tfsym tool, which will be discussed in Section 10-19-2. 
The choice of the C in Eq. (10-376) makes the ball position the output y(t) for input 
v(t). Then the input-output transfer function of the system can be obtained by choosing 
the "State-Space Calculations" option. The final output appearing in the MATLAB 
command window is the transfer function in both polynomial and factored forms, as 
shown in Fig. 10-40. As you can see, there is a small error due to numerical simulation. You 
may set the small terms to zero in the resulting transfer function to get Eq. (10-309). 
Click the "Controllability" and uobservability" menu options to determine whether 
the system is controllable or observable. Note these options are only enabled after pressing 
the "State-Space Calculations" button. After clicking the "Controllability" button, you 
get the MATLAB command window display, shown in Fig. 10-41. The S matrix in this case 
is the same as Eq. (10-310) with the rank of 3. As a result. the system is completely 
controllable. The program also provides the Mand P matrices and the system controlla­
bility canonical form (CCF) representation as defined in Section 10-9. 
1 a .. 19 MATLAB Tools and Case Studies -4 745 
State~space model is: 
a= 
X1 x2 x3 
x1 0 1 0 
x2 64.4 0 ·16 
x3 0 0 -100 
b= 
ul 
x1 0 
x2 0 
x3 100 
C= 
x1 x2 x3 
y1 1 0 0 
d= 
u1 
y1 0 
Continuous-time model. 
Characteristic polynomial: 
ans= 
s"3+100*sh2~2265873562520787/351S4372088832*s -6440 
Equivalent transfer-function model is: 
Transfer function: 
4.263e -014 s"2 + 8.527e-014 s -1600 
sA3 + 10QsA2 -64.4s -6440 
Pole, zero form: 
Zero/pole/gain: 
4.2633e -014 (s+1.937e008)(s -1.937e008) 
(s+100)(s+8.025){s -8.025) 
Figure 10·40 The MATLAB command window after clicking the "'State·Space Calculations" 
button. 
746 ..,_ Chapter 10. State Variable Analysis 
The Control1ibility matrix [8 AB A"28 ••. ] is = 
Smat= 
0 0 
0 -1600 
100 -10000 -1600 
160000 
1000000 
The system is therefore controllable, rank of S matrix is = 
ranks= 
3 
Mmat= 
-64.4000 
100.0000 
1.0000 100.0000 
1.0000 
0 1.0000 
0 
0 
The controllability canonical form (CCF) transformation matrix is: 
Ptran = 
-1600 0 0 
0 -1600 0 
-6440 0 100 
The transformed matrices using CCF are: 
Abar= 
1.0e+003 * 
0 
0 
6.4400 
Bbar= 
0 
0 
1 
Char= 0.0010 
0 
0.0644 
-1600 0 0 
Obar= 
0 0 
0.0010 
-0.1000 
Figure 10-41 The MATLAB command window after clicking the "Controllability" button. 
10-19 MATLAB Tools and Case Studies '« 747 
The observability matrix (transpose:[C CA CA"2 •.• ]) is= 
Vmat= 
1.0000 
0 
64.4000 0 
1.0000 
0 0 
0 
-16.0000 
The system is therefore observable, rank of V matrix is = 
rankV = 
3 
Mmat= 
-64.4000 
100.0000 
1.0000 100.0000 
1.0000 
0 1.0000 
0 
0 
The observability canonical form (OCF) transformation matrix is: 
Otran = 
0 
0 
-0.0625 0 
1.0000 
6.2500 1.0000 
-100.0000 
-626.0000 
The transformed matrices using OCF are: 
Abar== 
1.0e+003 * 
0.0000 
0.0010 
0 
Bbar = 
-1600 
0 
0 
Cbar = 
0 0 1 
Dbar == 
0 -0.0000 
-0.0000 
0.0010 6.4400 
0.0644 
-0.1000 
Figure 10-42 The MATLAB command window after clicking the "Observability" button. 
Once you choose the HObservability'' option, the system observability is assessed in 
the MATLAB command window, as shown in Fig. 10-42. The system is completely 
observable, since the V matrix has a rank of 3. Note the V matrix in Fig. 10-42 is the same 
as in Eq. (10-311). The program also provides the Mand Q matrices and the system 
748 Chapter 10. State Variable Analysis 
observability canonical form (OCF) representation as defined in Section I 0-9. As an 
exercise, the user is urged to reproduce Eqs. (10-312) and (10-313) using this software. 
You may obtain the output y(t) natw-al time response (response to initial conditions 
only), the step response, the impu]se response, or the time response to any other input 
function by choosing the appropriate option from the Time Response menu. 
The statelool program may be used on an the examples identified by a MATLAB 
Toolbox in the left margin of the text throughout this chapter, except problems involving 
inverse Laplace transformation s and closed-form solutions. To address the analytical 
solutions, we need to use the tfsym tool, which requires the Symbolic Tool of MATLAB. 
10-19-2 Description and Use of tfsym for State-Space Applications 
You may run the Transfer Function Symbo1ic Tool by clicking the "Transfer Function 
Symbolic'' button in the ACSYS window. You should get the window in Fig. l0-43. For 
•) Transrer Functioi _Syrribolic 
Enter Transfer Function:--------------­
Enter the Numerator and Denominator of the transfer function 
using a vector of polynomial coefficients , or the numerator or 
denominator of the transfer function in symbolic form with 
complex variable 's'. Enter any symbolic variables in the box 
labeled 'Enter Symbolic Variables .' 
ex: For numerator (sA2 + 3"kp•s + kiA2): 
enter '[1, 3•kp, kiA2)' in the Numerator box 
and 'kp ki' in the symbolic variables text box. 
ex: The following are all equivalent : 
'(sA2 + 7"s + 12)' 
'(1 7 12]' 
and '(s+4)"(s+ 3)'. 
Enter Symbolic Variables 
Numerator 
[1 J 
Denominator 
[1] 
Routh-Hurwitz 
Inverse Laplace Trans'form 
Control Panel k 
Figure 10-qJ The Transfer Function Symbolic window. 
10-19 MATLAB Tools and Case Studies 749 
·> Transrer Func~~n Symbolic 
Enter Matrix:------------------­
Enter the Coe111clent Matrices (empty matrices will give error) 
E.g. For a 2x2 identity matrix type in: (1 D; D 1 J 
[1 ; 0 ; 1 J is a 3x1 column vector & [1 0 1 J is a 1 x3 row 
vector 
A= fo,1,0;64.4,0,16;0,D,-100) 
B = (0;0;1001 
C = f1,0,0] 
D= 
u= 
\Cs: 
State Space 
Control Panel 
jstete Space 
Close 
fi!lure 10-44 Inputting values into the Transfer Function Symbolic window. 
this example we will use the State-Space mode. Choose the appropriate option from the 
drop-down menu as shown in Fig. 10-43. 
Let us continue our solution to the example in Section I 0-i 6. Fig. l 0-44 shows the 
input of the matrices for this example into the state-space window. The input and output 
displays in the MATLAB command window are selectively shown in Fig. 10-45. Note that 
at first glance the (sl-A)-1 and ¢(1) matrices may appear different from Eqs. (10-366) and 
(10-367). However, after minor manipulation s, you may be able to verify that they are the 
same. This difference in representation is because of MATLAB symbolic approach. 
You may further simplify these matrices by using the "simple" command in the MATLAB 
command window. For example, to simplify <l>(t), type "simple(phi) " in the 
MATLAB command window. If the desired format has not been achieved, you may 
have reached the software limit. 
750 .-Chapter 10. State Variable Analysis 
Enter A= [0 1 0;64.4 0-16;0 0 -1001 
Asym= 
0 1.0000 0 
64.4000 0 -16.0000 
0 0 -100.0000 
Determinant or (s*I-A) is: 
detSIA = 
s"3+ 100*s"2-322/5*s-64 40 
the eigenvalues of A are: 
eigA• 
-100.0000 
8.0250 
-8.0250 
Inverse of (s*l-A) is: 
( s 5 80 J 
(5 ----------------- ' ----------- ' -------------------] 
I 2 2 3 2 J 
I 5 s -322 5 s -322 5 s + 500 s -322 s -322001 
I 1 
( 322 s s ) 1-------, s ----- , .. ao ---·------·-------------1 
[ 2 2 3 2 ] 
[ 5 s -322 5 s .. 322 5 s + 500 s · 322 s • 32200) 
[ ] 
( 1 ] 
(0 I O I ••••••••••••) 
[ s + 100) 
State transition matrix of A: 
I 40 2000 40 l 
[%2 , 1/322 %1, -----------exp (-100 t) ----------·· %1 + ----· %2) 
l 24839 3999079 24839 I 
( ] 
I 4000 4000 l 
11/5 %1 , %2, ------····-exp (-100 t) ---------%2 + 8/24839 %11 
[ 24839 24839 J 
[ J 
[O, O, exp (-100 t}] 
1/2 1/2 
%1 : = 1610 sinh (1/5 1610 t) 
1/2 
%2 : = cosh (1/5 1610 t) 
Transfer function between u(t) and y(t) is: 
8000 
3 2 
5 s + 500 s · 322 s • 32200 
Figure 10-45 Selective display of the MATLAB command window for the tfsym tool. 
tH" 10-20 SUMMARY Review Questions ... ~ 751 
This chapter was devoted to the state"variable analysis of linear systems. The fundamentals on state 
variah)e$; and state equations were introduced in Chapters 2 and 3, and formal discussions on these 
subjects were covered in this chapter. Specifically. the state~transition matrix and state~transition 
equations were introduced and the relationship between the state equations and transfer functions was 
established. Given the transfer function of a linear system. the state equations of the system can be 
obtained by decomposition of the transfer function. Given the state equations and the output 
equations, the transfer function can be determined either analytically or directly from the state 
diagram. 
Characteristic equations and eigenvalues were defined in terms of the state equations and the 
transfer function. Eigenvectors of A were also defined for distinct and multiple-order eigenvalues. 
Similarity transformations to controllability canonical form (CCF). observability canonical form 
(OCF), diagonal canonical fonn (DCF), and Jordan canonical fonn (JCF) were discussed. State 
controllability and observability of linear time-invariant systems were defined and illustrated, and a 
final example. on the magnetic-ball-suspension system, summarized the important elements of the 
state-variable analysis of linear systems. 
The MA1LAD software tools statetool. tfsym, and tfcal were described in the last section. The 
program functionality was discussed with two examples. Together these tools can solve most of the 
homework problems and examples in this chapter. 
REVIEW QUESTIONS 
1. What are the components of the dynamic equations of a linear system? 
2. Given the state equations of a linear system as 
d:~) = Ax(t) + Bu(t) 
give two expressions of the state-transition matrix q:,(t) in terms of A. 
3. List the properties of the state-transition matrix </>(t). 
4. Given the state equations as in Review Question 2, write the state-transition equation. 
5. List the advantages of expressing a linear system in the controllability canonical form (CCF). 
Give an example of A and B in CCF. 
6. Given the state equations as in Review Question 2, give the conditions for A and B to be 
transfonnable into CCF. 
7. Express the characteristic equation in terms of the matrix A. 
8. List the three methods of decomposition of a transfer function. 
9. What special forms wiII the state equations be in if the transfer function is decomposed by direct 
decomposition? 
10. What special forIIl will the state equations be in if the transfer function is decomposed by 
parallel decomposition? 
11. What is the advantage of using cascade decomposition'? 
12. State the relationship between the CCF and controllability. 
13. For controllability, does the magnitude of the inputs have to be finite? 
14. Give the condition of controllability in terms of the matrices A and B. 
15. What is the motivation behind the concept of observability'? 
16. Give the condition of observability in tenns of the matrices A and C. 
752 .,.. Chapter 10. State Variable Analysis 
,-.. REFERENCES 17. What can be said about the controllability and observability conditions if the transfer function 
has pole-zero cancellation? 
18. State the relationship between OCF and observability. 
Answers to these review questions can be found on this book's companion Web site: 
www. wiley.corn/college/golnaraghi. 
State Variables and State Equations 
I. B. C. Kuo, Linear Networks and Systems, McGraw-HiU, New York, 1967. 
2. R. A. Gabel and R. A. Robe1ts, Signals and Linea1• Systems, 3rd ed., John Wiley & Sons, New York, 1987. 
Controllability and Observability 
• PROBLEMS 3. R. E. Kalman, '"On the General Theory of Control Systems," Proc. lFAC, Vol. 1, pp.481-492, Buttcrworths, 
London, 1961. 
4. W. L. Brogan, Modern Ccmtrol Theor)'. 2nd Ed .• Prentice Hall, Englewood Cliffs, NJ, 1985. 
10-1. The following differential equations represent linear time-invariant systems. Write the 
dynamic equations (state equations and output equations) in vector-matrix form. 
d2y(t) dy(t) 
(a) ~d.., +4-d + y(t) = Sr(t) t~ t 
(b) 2 d3y(t) 3 d2y(t) S dy(t) 2 ·( ) = ( ) 
d ~ + d., +~ d + y t rt e 1- t 
d3'\J(t) d2v(t) dv(t) !or (c) _., -+5-· -+3-· -+v(t) + v(T)cfr::::::r(r) dt3 dt2 dt . O • 
(d) d4y(t) l 5 d3y(t) 2 5 dy(t) •( ) = 2 ( ) 
dt4 + · dt3 + · dt + y 1 r t 
10-2. The following transfer functions show linear time-invariant systems. Write the dynamic 
equations (state equations and output equations) in vector-matrix form. 
( ) s+3 (a) Gs = ., 3 2 S'"+ s+ 
6 
(b) G(s) = s3 + +6s2 + I ls+ 6 
( s+2 
(c) G s) = 2 7 12 s + s+ 
(d) G(s) = s3 + 1 ls2 + 35s + 250 
s2(s3 + 4s2 + 39s + 108) 
10-3. Repeat Problem 10-2 by using MATLAB. 
10-4. Write the state equations for the block diagrams of the systems shown in Fig. lOP-4. 
Problems -: 753 
X s+2 s y 0.5 
s 
s+4 .t'z 
s+3 
s y X s+2 
6 
2 
s 
y 
Figure 10P-4 
10-5. By use of Eq. (10~58). show that 
cf>(t) =I+ At+ ..!_A2t2 + ..!_A3t3 + · .. 2! 3! 
10-6. The state equations of a linear time-invariant system are represented by 
dx(t) = Ax(t) + Bn(t) 
dt 
Find the state-transition matrix cf>(t). the characteristic equation, and the eigenvalues of A for the 
following cases: 
[-3 
(c) A== O ~1] B = [~ ~ l 
~3 l B = [n B= Ul 
B= [n 
754 ~ Chapter 10. State Variable Analysis 
(e) A= [ ~2 ~] B = [~] [-1 
(0 A= ~ 
(g) A = [ ~S ~5 ~ ] B = [ 6] 
0 0 -5 1 
10-7. Find ¢(t) and the characteristic equation of the state variables in Problem 10-6 using a 
computer program. 
10-8. Find the state-transition equation of each of the systems described in Problem 10-6 fort~ 0. 
Assume thatx(O) is the initial state vector, and the components of the input vector u(t) are all unit-step 
functions. 
10-9. Find out if the matrices given in the following can be state-transition matrices. [Hint: check 
the properties of</>{!).] 
[ -t o ] 
(a) -~ 1 -e-t 
(c) [ 1 -le_, e~t] [e-h ~-~ ~e-h/2] 
(d) 0 e-2, te-2, 
0 0 e-21 
10-10. Find the time response of the following systems: 
(a) [!~] = [ ~2 :3][:~] + [~]u 
(b) [!~] = [ ~l -~·5
] [~~] + [6.S]u y= [I OJ[~~] 
10-11. Given a system described by the dynamic equations: 
(a) A= [ 6 
-1 
(b) A= [ ~l 1 
0 
-2 dx(t) . ~ = Ax(t} + Bu(t) y(t) = Cx(t) 
C=[l O O] 
~l] B= [~] C=[l 1) 
[6 ~ ~ ] B = [6] C = [ 1 1 0] 
0 -1 -2 I (c) A= 
(1) Find the eigenvalues of A. Use the ACSYS computer program to check the answers. 
You may get the characteristic equation and solve for the roots using tfsym or teal components 
of ACSYS. 
(2) Find the transfer~function relation between X(s) and U(s). 
(3) Find the transfer function Y(s)/U(s). 
10-12. Given the dynamic equations of a time-invariant system: 
dx(t) dt = Ax(t) + Bu(t) y(t) = Cx(t) 
where 
Find the matrices A1 and B1 so that the state equations are written as 
~~t) = A1x(t) + B1u(t} 
where 
[Xt (t) l 
x(t) = y(t) 
dy(t) 
dt 
10-13. Given the dynamic equations 
dx(t) -;fr= Ax(t) + Bu(t) y(t) = Cx{t) 
(a) A= p 2 
~] B= m 2 C=[l O l] 
-1 0 
(b) A= p 2 
fl B= m 2 C = [1 0 1] 
-1 
[-2 I 
13] B= rn (c) A= 0 -2 C=[l O 0) 
-1 -2 
[-I I JJ B~ rn (d) A= ~ -1 C=-{l O 11 
0 
(e) A= [ ~2 ~3 J B = [~J C= [1 0) Problems ..C 755 
Find the transfonnation x(t) = Px(t) that transforms the state equations into the controllability 
canonical form (CCF). 
10-14. For the systems described in Problem 10-13, find the transformation x(t) = Qi(t) so that the 
state equations are transfonned into the observability canonical form (OCF). 
10-15. For the systems described in Problem 10-13. find the transformation x(t) = Tx(t) so that the 
state equations are transfonned into the diagonal canonical form (DCF) if A has distinct eigenvalues 
and Jordan canonical form (JCF) if A has at least one multiple-order eigenvalue. 
10-16. Consider the following transfer functions. Transfonn the state equations into the controlla­
bility canonical form (CCF) and observibility canonical fonn (OCF). 
s2-l 
{a) s2(s2 -2) (b) 2s + 1 
s2+4s+4 
10-17. The state equation of a linear system is described by 
dx(t) - = Ax{t) + Bu(t) dt 
756 •· Chapter 10. State Variable Analysis 
The coefficient matrices are given as follows. Explain why the state equations cannot be 
transformed into the controllability canonical form (CCF). 
(a) A = [ ~z ~I] B = [ ~] [-1 0 
JI J B=m (b) A= ~ -I 
0 
(c) A = [ ~ n B = [ }i] [-2 1 
13] B=m (d) A= 0 -2 -1 -2 
10-18. Check the contro1ihi1ity of the following systems: 
(a) [~1] = [-1 0 ][XI] + [2] u 
~ 0 -2 ~ 5 
(b) [·~I] = [-1 
X2 0 Q ][ XI ] + [ 2] u -2 x2 0 
(c) [-~1 ] = [ ~I l ~J [ ~n+ rn ~J [::1 -1 
:<z o 0 
[ ~1 l = [~I l 0 ]["''] [OJ (d) -1 ~ x2 + 4 u x2 0 0 2 X3 3 
n -2 1 0 0 
0 ff + [~ ~ l [ 111] x-, 0 -2 1 0 0 Xz 
(e) -~3 = 0 0 -2 0 0 X3 
X4 0 0 0 -5 1 X4 0 0 u2 
.\:5 0 0 0 0 -5 X5 2 n l-2 0 0 
0 ff] [4] .X'> 0 -2 1 0 0 x2 2 
(t) ~! = ~ 0 -2 0 I;:+!" 0 0 -5 
X5 0 0 0 0 5 X5 0 
10-19. Check the observability of the following systems: 
(a) [ XI l [ -1 0 ][ XI ] .t2 = 0 -2 x2 y = (1 3)[~~] 
(b) [ XI ] [ -1 0 ][ XI ] 
.\'2 = 0 -2 .t2 y= (0 I i[-tI] 
X2 
[ x,] [2 1 OW] [YI] = [0 1 !] [~~] (c) -~2 = 0 2 1 .t2 
X3 Q 0 2 X3 Y2 0 2 
[X1] [2 I !][~;] [)'I]= [3 0 ~][;~] (d) ~2 = 0 2 
X3 0 0 Y2 4 0 
Problems ~ 7S7 n [2 1 0 0 
um ~]m x2 0 2 1 0 
[~:] ~ [ ~ 0 (e) 
~ = ~ 0 2 0 
0 0 -3 
0 0 0 n [2 1 0 0 
0 l [XI] [XI] x2 0 2 1 0 0 x2 1 1 1 O O x2 
(0 ~ = ~ 0 2 0 ~ : [~] ~ [ 0 1 I O O] : 0 0 -3 
0 0 0 -3 X5 X5 
10-20. The equations that describe the dynamics of a motor control system are 
( ) R . ( ) L dia ( t) K d8m { t) eat = ala t + :a~+ b~ 
Tm(t) = Kda(t) 
Ti (t) = Jd2Bm(t) +Bd6m(t) +Ke (t) 
rn dt2 dt m 
ea(t) = Kae(t) 
e(t) = Ks[8r(t) -8m(t)J 
(a) Assign the state variables as x1(t) = Bm(t), x2(t) = d8,n(t)/dt, and X3(t) = ia(t). Write the state 
equations in the form of 
dx(t) dt = Ax(t) + Ber(t) 
Write the output equation in the fonn y(t) = Cx(t), where y(t) = 9,n(t). 
(b) Find the transfer function G(s) = 8m(s)/ E(s) when the feedback path from 8m(s) to E(s) is 
broken. Find the closed-loop transfer function M{s) = 0nr(s)/0r(s). 
10 .. 21. Given the matrix A of a linear system described by the state equation 
(a) A= [ ~I ~] 
(b) A = [ ~1 ~2] 
(c) A= [~ ~] dx(t) & = Ax{t) +Bu(t) 
Find the state-transition matrix ¢(t) using the following methods: 
(1) Infinite-series expansion of ,It', ex.pressed in closed form 
(2) The inverse Laplace transform. of (sl -A)-1 
10-22. The schematic diagram of a feedback control system using a de motor is shown in Fig. lOP-22. 
The torque developed by the motor is Tm(t) = KA1(t}, where K; is the torque constant. 
The constants of the system are 
K5=2 R=2!l Rs=O.lil 
Kb = 5 V/rad/sec Ki = 5 N-m/A La 9!J: 0 H 
l,n +h = 0.1 N-m-sec2 Bm~ON-m-sec 
Assume that all the units are consistent so that no conversion is necessary. 
758 Chapter 10. State Variable Analysis 
R(s) . 
+ 
-' + 
e 
e., 
..._. 
(}r 
Figure lOP-22 + 
eu R 
+ + 
K e" e1, 
R, 
One-turn pot 
(a) Let the state variables be assigned as x1 = e_,. and x2 = de_,.!dt. LeL the output be _v = e, .. Write the 
state equations in vector-matrix form. Show that the matrices A and B are in CCF. 
(b) Let R,.(t) be a unit-step function. Find x(t) in terms of x(O), the initial state. Use the Lapl:1cc 
transform table. 
(c) Find the characteristic equation and the eigenvalues of A. 
(d) Comment on the purpoae of the feedback resistor R,, 
10-23. Repeat Problem 10-22 with the following system parameters: 
K., = I K = 9 Ra = 0.1 fl 
Rs= 0.1 fl K& = l V/rad/s K; = I N-m/A 
La~ 0 H 1111 + J L = 0.0 l N-m-sec2 8111 ~ 0 N-m-sec 
10-24. Consider that matrix A can be diagonalized . Show that eA' = PeDrp-l, where P transforms 
A into a diagonal matrix, and p-l AP= D, where D is a diagonal matrix. 
10-25. Consider that matrix A can be lransfonn ed to the Jordan canonica l fonn, then eA1 = SeJ1s-1, 
where S transforms A into a Jordan canonical form and J is in a Jordan canonical form. 
10-26. The block diagram of a feedback control system is shown in Fig. I OP-26. 
E(s) K1 + K2s . 5 Y(s) 
s s(s + 4)(s + 5) + -
OPEN-LOOP SYSTEM 2 
Figure 10P-26 
(a) Find Lhe forward-path transfer function Y(s)IE(s) and the closed-loop transfer function Y(s)/R(s). 
(b) Write the dynamic equations in the form of 
d~(t) dt = Ax(t) + Br(t) y'.t) = Cx(t) + Dr(t) 
Find A, B, C, and D in terms of the system parameters . 
Problems • 759 
(c) Apply the final-value theorem to find the steady-state value of the outputy(t) when the input r(t) 
is a unit-step function. Assume that the closed-loop system is stable. 
10-27. For the linear time-invariant system whose state equations have the coefficient matrices 
given by Eqs. (1Q.J91) and (10-192) (CCF), show that 
adj(sl -A)B = 
and the characteristic equation of A is 
s" + lln-lS,r-l + · · · + a1s + an = 0 
10-28. A linear time-invariant system is described by the differential equation 
d3y(t) + 3 d2y(t) + 3 dy(t) + v(t) = r(t) 
dr3 dr2 dt · 
(a) Let the state variables be defined as x1 = y, x2 = dy/dt, and x3 = ti2y/dt2. Write the state 
equations of the system in vector-matrix fom1. 
(b) Find the state-transition matrix ¢(1) of A. 
(c) Let y(O) = l, t(v(O)/ dt = 0, tf_v(O)/ dP = 0, and r(t) = us(t). Find the state-transition equation of 
the system. 
(d) Find the characteristic equation and the eigenvalues of A. 
10-29. A spring-ma'>s-friction system is described by the following differential equation: 
d2y•(t) d\}(t) --+ 2-~-+ v(t) = r(t) dt2 dt . 
(a) Define the state variables as x1(t) = y(t) and .~2(t) = d_v(t)j dt. Write the state equations in vector­
matrix form. Find the state-transition matrix q,(t) of A. 
(b) Define the state variables as x1(t) = y(t) and xi(t) = y(t} + dy(t)/ di. Write the state equations in 
vector-matrix form. Find the state-transition matrix q,(,t) of A. 
(c) Show that the characteristic equations, Isl -A] = O. for parts (a) and (b) are identical. 
10-30. Given the state equations dx(t)/dt = Ax(t), where CT and w are real numbers: 
(a) Find the state transition matrix of A. 
(b) Find the eigenvalues of A. 
10-31. (a) Show that the input-output transfer functions of the two systems shown in Fig. lOP-31 
are the same. 
(b) Write the dynamic equations of the system in Fig. 10P-3l(a) as 
dx(t) dt = A1x(t) + B1u1 (t) Yt (t) = C1x(t) 
and those of the system in Fig. 10-31(b) as 
dx(t) dt = A2x(t) + B2u2(t) Y2(t) = C2x(t) 
10-32. Draw the state diagrams for the following systems. 
dx(t) ~ = Ax(t) + Bu(r) 
760 ~ Chapter 10. State Variable Analysis 
Figure 10P-31 
(a) A = [ =! 13 14] B = m 
(b) Same A as in part (a), but with -3 
(a) 
-3 
(b) 
B= [H] 
10-33. Draw state diagrams for the following transfer functions by direct decomposition. Assign the 
state variables from right to left for xi, x2, • • • • Write the state equations from the state diagram and 
show that the equations are in CCF. 
10 
(a) G(s) = s'3 + S.Ss2 + 20.Ss + 15 
IO(s + 2) 
(b) G(s) = s2(s+ l)(s+3.5) 
(c) G(s) = 5(s + 1) 
s(s + 2)(s + 10) 
1 
(d) G(s) = s(s + 5)(s2 + 2s + 2) 
10-34. Draw state diagrams for the systems described in Problem 10-33 by parallel decomposition. 
Make certain that the state diagrams contain a minimum number of integrators. The constant branch 
gains must be real. Write the state equations from the state diagram. 
10-35. Draw the state diagrams for the systems described in Problem 10-33 by using cascade 
decomposition. Assign the state variables in ascending order from right to left. Write the state 
equations from the state diagram. 
10-36. The block diagram of a feedback control system is shown in Fig. IOP-36. 
(a) Draw a state diagram for the system by first decomposing G(s) by direct decomposition. Assign 
the state variables in ascending order, Xi, x2, ••• , from right to left. In addition to the state-variable­
related nodes, the state diagram should contain nodes for R(s), E(s). and C(s). 
(b) Write the dynamic equations of the system in vector-matrix form. 
U(s) Problems ~ 761 
IO Y(s) 
s(s + 4)(s + 5) 
Figure 10P-36 
(c) Find the state-transition equations of the system using the state equations found in part (b). The 
initial state vector is x(O), and r(l) = u,(t). 
(d) Find the output y(t) for t 2: 0 with the initial state x(O), and r(t) = u.,(t). 
10-37. (a) Find the closed-loop transfer function Y(s)/R(s), and draw the state diagram. 
(b) Perform a direct decomposition to Y(s)/R(s) , and draw the state diagram. 
(c) Assign the state variables from right to left in ascending order, and write the state equations in 
vector-matrix form. 
(d) Find the state-transition equations of the system using the state equations found in part (c). The 
initial state vector is x(O), and r(t) = us(t). 
(e) Find the output y(t) for t ?:. 0 with the initial slate x.(0), and r(t) = u.,(t). 
10-38. The block diagram of a linearized idle-speed engine-control system of an automobile 
is shown in Fig. lOP-38. (For a discussion on linearization of nonlinear systems, refer to Section 4-9.) 
The system is linearized about a nominal operating point, so all the variables represent linear­
perturbed quantities. The following variables are defined: T,n(t) is the engine torque; TD, 
the constant load-disturbance torque; w(t), the engine speed; u(t), the input-voltage to the 
throttle actuator; and a, the throttle angle. The time delay in the engine model can be approxi­
mated by 
30 
s+5 
Figure 10P-38 e-0.2s 
0.1 
e-0.2s ~ 1 -0.1s 
1 + 0.ls 3 
T0(s) 
.Q(s) 
s+2 + 
(a) Draw a state diagram for the system by decomposing each block individua lly. Assign the state 
variables from right to left in ascending order. 
(b) Write the state eq\1ations from the state diagram obtained in part (a), in the form of 
dx(t) = Ax(t) + 8 [ u(t) ] 
dt TD(t) 
(c) Write Y(s) as a function of U(s) and TD(s). Write fl(s) as a function of U(s) and T 0(s). 
10-39. The state diagram of a linear system is shown in Fig. 1 OP-39. 
762 Chapter 10. State Variable Analysis 
(a) Assign state variables on the state diagram from right to left in ascending order. Create additional 
artificial nodes if necessary so that the state-variable nodes satisfy as "input nodes'' after the 
integrator branches are deleted. 
(b) Write the dynamic equations of the system from the state diagram in part (a). 
-1 -1 15 s s 
R 
-1 -2 
-I 
Figure 10P-39 
10-40. The block diagram of a linear spacecraft-control system is shown in Fig. JOP-40. 
(a) Determine the transfer function Y(s)/R(s). y 
(b) Find the characteristic equation and its roots of the system. Show that the roots of the 
characteristic equation are not dependent on K. 
(c) When K = l, draw a state diagram for the system by decomposing Y(s)/ R(s), using a minimum 
number of integrators . 
(d) Repeat part (c) when K = 4. 
(e) Determine the values of K that must be avoided if the system is to be both stare controllable and 
observable . 
.JL 
s + l 
R(s) I+ 5s 1 Y(s) 
+ l + s ; 
s 
2(s + 1) 
Figure 1 OP-40 
10-41. A considerable amount of effort is being spent by automobile manufacturers to meet the 
exhaust-emission-performance standards set by the government. Modern automobile-power-plant 
systems consist of an internal combustion engine that has an internal cleanup device called a catalytic 
converter. Such a system requires control of such variables as the engine air-fuel (A/F) ratio. ignition­
spark timing, exhaust-gas recirculation, and injection air. The control-system problem considered in 
this problem deals with the control of the A/F ratio. In general, depending on fuel composition and 
other factors, a typical stoichiome tric NF is 14.7: l, that is, 14.7 grams of air to each gram of fuel. An 
AIF greater or less than stoichiometry will cause high hydrocarbons , carbon monoxide, and nitrous 
oxides in the tailpipe emission. The control system shown in Fig. 1 OP-41 is devised to control the air­
fuel ratio so that a desired output is achieved for a given input command. 
Problems 763 
The sensor senses the composition of the exhaust-gas mixture entering the catalytic converter. 
The electronic controller detects the difference or the error between the command and the error and 
computes the control signal necessary to achieve the desired exhaust-gas composition. The output 
y(t) denotes the effective air-fuel ratio. The transfer function of the engine is given by 
Y(s) e-T.,s 
Gp(s) = U(s) = l + 0.5s 
where Td = 0.2 sec is the time delay and is approximate d by 
l e-T.,s ____ ----~~----°"' ----~~-
-e1J' -l + T.1s + TJs2 /2! + l + Tc1s + Tjs2 /2! 
The gain of the sensor is l .O. 
(a} Using the approximation for e-T,1s given, find the expression for Gp(s). Decompose Gµ(s) by 
direct decompo sition, and draw the state diagram with u(t) as the input and y(t) as the output. Assign 
state variables from right to left in ascending order, and write the state equations in vector-matrix 
form. 
(b) Assuming thnt the controller is a simple amplifier with a gain of 1, i.e., u(t) = e(t), fiml the 
characteristic equation and its roots of the closed-loop system. 
Reference 
input r(r) 
Figure 10P-41 11(1) 
CONTROLLER 
SENSOR ENGINE 
Gp(s) A/F 
y(I) 
CATALYST Exhaust 
emission 
10-42. Repeat Problelll 10-41 when tlte Lime <lday of the automobile engine is approximated as 
e-T"s C>.!. I -Tds/3 
-I + jT,1s + !Tjs2 Tc1 = 0.2 sec 
10-43. The schematic diagram in Fig. IOP-43 shows a permanent-magnet de-motor-control system 
with a viscous-inertia damper. The system can be used for the control of the printwheel of an 
electronic word processor. A mechanical damper such as the viscous-inertia type is sometimes used 
in practice as a simple and economical way of stabilizing a control system. The damping effect is 
achieved by a rotor suspended in a viscous fluid. The differential and algebraic equations that describe 
the dynamics of the system are as follows: 
e(t) = l(,[w,.(r) -lom(t)] 
ea(t) = Ke(t) = Raia(t) + eb(t) 
e1,(t) = K1,(J)m(t) 
doJ111(t) 
T111(t) = J ~+ Ko[wm(t) -wo(t)] 
Tm(t) = K;ia(t) 
dwv(t) Kv[cvm(t) -wo(t)] = lR-­dt Ks = l V/rad/sec 
K = 10 
Kt,= 0.0706 V/rnd/sec 
J = 1', + J,,, = 0.1 oz-in.-sec2 
K; = LO oz-in.IA 
JR = 0.05 oz-in.-sec2 
Ko = I oz-in.-sec 
764 Iii'-Chapter 10. State Variable Analysis 
m,<r) K I(, Viscous-inertia dainper 1,, 
ROTOR e(t) + 
COl\'TROLLER-
AMPLIFIER ea 
DC motorlm 
Viscous fluid 
(a) 
K R" Damper 
+ e(I) CONTROLLER -
AMPLIFIER ea 
a,1.(1) 
(b) 
Figure 10P-43 
(a) Let the state variables be defined as x1{t) = wm(t) and x2(t) = w0(t). Write the state equations for 
the open-loop system with e(t) as the input. (Open-loop refers to the feedback path from Wm toe being 
open.) 
(b) Draw the state diagram for the overall system using the state equations found in part (a) and 
e(t) = K,[w,(t) -cv,,.(t)]. 
(c) Derive the open-loop transfer function n,,,(s)/ E(s) and the closed-loop transfer function 
D,,,(s)/0,(s). 
10-44. Determine the state controllability of the system shown in Fig. lOP-44. 
(a) a = 1, b = 2, c = 2, and d = 1. 
(b) Are there any nonzero values for a, b, c, and d such that the system is uncontrollable? 
C 
d 
r 
-a -b 
Figure 10P-44 
10-45. Determine the controllability of the following systems: 
(a) A -[ g ~I JJ B ~ m 
(b) A-[ g ~2 l,] B -[: l 
10-46. Determine the controllability and observability of the system shown in Fig. 10P-46 by the 
following methods: y 
Problems 765 
(a) Conditions on the A, B, C, and D matrices 
(b) Conditions on the pole-zero cancellation of the transfer functions 
u 1 Xt y 
s+2 
3 
X2 l s 
Figure lOP-46 
10-47. The transfer function of a linear control system is 
Y(s) s+a 
R(s) = s3 + 7s2 + 14s + 8 
(a) Determine the value(s) of et so that the system is either uncontrollable or unobservable . 
(b) With the value(s) of et found in part (a), define the state variables so that one of them is 
uncontrollable . 
(c) With the value(s) of a found in part (a), define the state variables so that one of them is 
unobservable . 
10-48. Consider the system described by the state equation 
dx(t) . ) ~ = Ax(t) + Bu(t 
where 
Find the region in the a-b plane such that the system is completely controllable. 
10-49. Determine the condition on b1, b2, c1, and c2 so that the following system is completely 
controllable and observable . 
d:;t) = Ax(t) + Bu(t) y(t) = Cx(t) 
A= [ ~ ~] B = [ :~ J C = [d1 d2] 
10-50. The schematic diagram of Fig. 1 OP-50 represents a <.:ontrol syscem whose purpose is co hold 
the level of the liquid in the tank at a desired level. The liquid level is controlled by a float whose 
position h(t) is monitored . The input signal of the open-loop system is e(t). The system parameters 
and equations are as follows: 
Motor resistance R11 10 n Motor inductance La OH 
Torque constant K; 10 oz-in.IA Rotor inertia Im 0.005 oz-in.-sec2 
Back-emf constant Kb 0.0706 V/rad/sec Gear ration Ni/N2 = 1/100 
Load inertia h 10 oz-in.-sec2 Load and motor friction negligible 
Amplifier gain Ka 50 Area of tank A 50 ft2 
766 Chapter 10. State Variable Analysis 
e, AMPLIFIER 
K,, 
Figure 10P-50 li(t) GEAR 
TRAIN 
n Reservoir 
N valves 
Tank h(t) 
( ) dfi,,,(t) 
Wmf =~ 
f!_v(t) = 11tl111(t) 
The number of valve, connected to the tank from the reservoir is N = 10. All the valves have the 
same characteristics and are controlled simultaneously by~ ... The equations that govern the volume 
of flow are as follows: 
q;(I) = K1N8y(t) 
qo(t) = K0h(t) K1 = 10 ft3 /sec-rad 
K0 = 50 ft2 /sec 
h(t) = volumeoftank 1 j 
area of tank A [q;(t) -qo(t)]dt 
(a) Define the state variables as x1(1) = h(t), x2(t) = 0111(1), and x3(t) = dB,,,(1)/dt. Write the stale 
equations of the system in the form of d x(t)/ dt = Ax(t) + Be,<1). Draw a state diagram for the system. 
(b) Find the characteristic equation and the eigenvalues of the A matrix found in part (a). 
(c) Show that the open-loop system is completely controllable; that is, the pair [A, BJ is controllable. 
(d) For reasons of economy , only one of the three state variables is measured and feu back for control 
purposes. Tbe output equation is y = Cx, where C can be one of the following forms: 
(1) C=[l O 0](2)C =[O l 0](3)C=[O O l] 
Determine which case (or cases) cotTesponds to a completely observable system. 
10-51. The "broom-balancing" control system described in Problem 4-21 has the foUowing parameters: 
M& = I kg M,. = 10kg L =Im g = 32.2ft/sec2 
The small-signal linearized state equation model of the system is 
ux(t) = A* Lh(t) + B'L'lr(t) 
where 
A*= l O 1 0 01 25.92 0 0 0 
0 0 0 1 
-2.36 0 0 0 B* = ! -o.~7321 l 0.0976 
(a) Find the characteristic equation of A• and its rout:.;. 
(b) Determine the controllability of [A*, B$]. 
(c) For reason of economy, only one of the state variables is to be measured for feedback. 
The output equation is written 
where 
(1) C* = [ 1 0 0 0) 
(3) C* = [ 0 0 I O] -6.y(t) = C .6.x(1) 
(2) C* = [O I O OJ 
(4) c• = [ o o o 1 J 
Determine which c· corresponds to an observable system. Problems 767 
10-52. The double-inverted pendulum shown in Fig. lOP-52 is approximately modeled by the 
following linear state equation; 
where 
x(t) = 
A= dx(t) --= Ax(t) + Bu(t) dt 
81 (t) 
81 (t) 
82(t) 
62(t) 
x(t) 
.t(I) 
0 I 0 0 0 0 
16 0 -8 0 0 0 
0 0 0 1 0 0 
-16 0 16 0 0 () 
0 0 0 0 0 1 
0 0 0 () 0 () 
Determine the controllabilily of the states. 
M, 
I _,......, e, 
I 
I ~e, 
M 
• • 
Figure 10P-52 () 
-1 
B= 0 
0 
0 
10-53. The block diagram of a simplified control system for the large space telescope (LST) is 
shown in Fig. IOP-53. For simulation and control purposes, model the system by state equations and 
by a state diagram. 
Cnmmand 
Figure 10P-53 Gimbal 
controller Control moment Vclticlc 
gyn>dynamics dynamics Vehicle 
1--~-+~ 
768 .., Chapter 10. State Variable Analysis 
(a) Draw a state diagram for the system and write the state equations in vector-matrix fonn. The state 
diagram should contain a minimum number of state variables, so it would be helpful if the transfer 
function of the system is written first. 
(b) Find the characteristic equation of the system. 
10-54. The state diagram shown in Fig. lOP-54 represent s two subsystems connected in cascade. 
l 
I -1 l I ~ l s 
0 • ~ • 0 • • 0 u, U2 = .Vt ;~~2 Yi 
-2 -J 
Figure lOP-54 
(a) Determine the controllability and observability of the system. 
(b) Consider that output feedback is applied by feeding back y2 to u2; that is, u2 = -ky2, where k is a 
real constant. Determine how the value of k affects the controllability and observability of the system. 
10-55. Given the system 
where dxd(t) = Ax(t) + Bu(t) y(t) = Cx(t) t 
A = [ ~l ~3] B = [ ~ J C = [ 1 l] 
(a) Determine the state controllabihty and observability of the system. 
(b) Let u(t) = -Kx(t), where K = [k1k2], and k1 and k2 are real rnnslants . Determine if and how 
controllability and observability of the closed-loop system are affected by the elements of K. 
10-56. The torque equation for part (a) of Problem 10-21 is 
d28(t) 
J ~ = KFdt8(t) + Tsd2o(t) 
where Kt:Cf1 = 1 and J = 1. Define the state variables as x1 = e and x2 = dB/dt. Find the state­
transition matrix </J(t) using any available computer program. 
10-57. Starting with the state equation dx(t)/dt = Ax(t) + B8,. obtained in Problem 10-22, use 
ACSYS/MATLAB or any other available computer program to do the following : 
(a) Find the state-transition matrix of A, <jJ(t). 
(b) Find the characteristic equation of A. 
(c) Find the eigenvalues of A. 
(d) Compute and plot the unit-step response ofy(t) = Oy(t) for 3 seconds. Set all the initial conditions 
to zero. 
10-58. The block diagram of a control system with state feedback is shown in Fig. lOP-58. Find the 
real feedback gains k1, k2, and k3 so that: 
x, =y 
Figure 10P-58 
Problems 769 
The steady-state error e.,., [e(t) is the error signal] due to a step input is zero. 
The complex roots of the characteristic equation are at -1 + j and -\ -j. 
Find the third root. Can all three roots be arbitrarily assigned while still meeting the steady-state 
requirement ? 
10-59. The block diagram of a control system with state feedback is shown in Fig. 10P-59(a). The 
feedback gains k1, k2, and k3 are real constants. 
(a) 
(b) 
Figure 10P-59 
(a) Find the values of the feedback gains so that: 
The steady-state error e.,., [e(t) is the error signal] due to a step input is zero. 
The characteristic equation roots are at -1 + j, -1 -j, and -10. 
(b) Instead of using state feedback. a series controller is implemented, as shown in Fig. 10P-59(b). 
Find the transfer function of lhe controller G,.(s) in terms of ki, k2, and k3 found in part (a) and the 
other system parameters. 
10-60. Problem 9-39 has revealed that it is impossible to stabilize the broom-balancing control 
system described in Problems 4-21 and I 0-51 with a series PD controller. Consider that the system is 
now controlled by state feedback with 11r(t) = -Kx(t), where 
K = [ kt k2 k3 k~ ] 
(a) Find the feedback gains k 1, k2, k3, and k~ so that the eigenvalues of A* -B~K are at -1 + j, -I -
j, -10, and -10. Compute and plot the responses of ~x1 (t), ~x2(t), ~xJ(1), and ~x~(t) for the initial 
condition, ~x1(0) = 0.1, LlB(O) = 0.1, and all other initial conditions are zero. 
(b) Repeal part (a) for the eigenvalues at -2 + }2, -2 -}2, -20, and -20. Comment on the 
difference between the two ~ystcms. 
10-61. The linearized stale equations of the ball-suspension control system described in 
Problem 4-57 are expressed as 
where ~i(t) = A'.6.x(t) + B*t..i(t) 
A'{i2 I 0 1] 8' = [-~55 l -0.05 -l8.6 
0 0 
-37.2 0 37.2 -6.55 
770 Ill>-Chapter 10. State Variable Analysis 
Let the control current .6.i(t) be derived from the state feedback ~i(t) = -K~x(t), where 
K = [ k I k2 k3 k4 ] 
(a) Find the elements of K so that the eigenvalues of A* -B*K are at -1 + j, -1 -j, -10, and -10. 
(b) Plot the responses of Ax1(t) = Ay1(l) (magnet displacement) and Ax3(t) :::: Ay2(t) (ball 
displacement) with the initial condition 
[0.1] 
Ax(O) = ~ 
(c) Repeat part (b) with the initial condition 
Ax(O)-R] 
Comment on the responses of the closed-loop system with the two sets of initial conditions used in (b) 
and (c). 
10-62. The temperature x(t) in the electric furnace shown in Fig. lOP-62 is described by the 
differential equation 
d.x(t) . 
- = -2x(t) + u(t) + n(t) dt 
where u(l) is the control signal, and n(t) the constant disturbance of unknown magnitude due to heat 
loss. It is desired that the temperature x(t) follows a reference input r that is a constant. 
(a) Design a control system with state and integral control so that the following specifications are 
satisfied: 
lim x(t) = r = constant 
t->oo 
The eigenvalues of the closed-loop system are at -10 and -10. 
Plot the responses of x(t) for t 2 0 with r = l and n(t) = -1, and then with r = 1 and n(t) = 0, all with 
x(O) = 0. 
(b) Design a Pl controller so that 
U(s) K1 
Gc(s) = E(s) = Kp +-; 
E(s) = R(s) -X(s) 
where R(s) = R/s. 
Find Kp and K1 so that the characteristic equation roots are at -10 and -10. Plot the responses of x(t) 
fort 2 0 with r = I and n(t) = -1, and then with r = l and n(t) = 0, all x(O) = 0. 
Furnace 
-
u (t) x(r) 
- ... ---
Figure 10P-62 
10-63. The transfer function of a system is given by 
10 
G(s) = (s + l)(s + 2)(s + 3) 
Find the state-space model of the system if: 
XI =Y 
X2 =Xt 
X3 =X2 Problems -.; 771 
Design a state control feedback u = -Kx so that the closed-loop poles are located at 
s = -2 + j2v3, s = -2 -f2../3, ands= -10 
10-64. Fig. lOP-64 shows an inverted pendulum on a moving platform. 
Assuming M = 2 kg, m = 0.5 kg. and I = 1 m. 
(a) Find the state-space model of the system if x1 = 9,x2 = iJ,x3 = x,x4 = .i', YI = XI = (}, and 
Y2 =x3 =x 
(b) Design a state feedback control with gain -K so that the closed-loop poles are located at 
s = -4 + 4j, s = -4 -4j, s = 210, and s = 210 
m 
7 
.e 
M 
f 
Figure 1 OP-64 
10-65. Consider the foIIowing state-space equation of a system: 
[XI] [ 0 1 ] [XI] + [0] x2 = -6 -5 x2 1 u 
(a) Design a state feedback controller so that: 
(i) The damping ratio is s = 0. 707. 
(ii) Peak time of the unit-step response is 3 sec. Motor 
{b) Use MATLAB to plot the step response of the system and show how your design meets the 
specification in part (a). 
10-66. Consider the following state-space equation of a system: 
[~~] = [~1 =i ~2] [::~] + [~] u 
~ l O -1 ~ 1 
(a) Design a state feedback controller so that: 
(i) Settling time is less than 5 sec (1 % settling time). 
(ii) Overshoot is less than 10%. 
(b) Use MATLAB to verify your design. 
772 Chapter 10. State Variable Analysis 
10-67. Fig. lOP-67 shows an RLC circuit. 
(a) Find the state equation for the circuit when v(t) is an input, i(t) is an output, and capacitor voltage 
and the inductor current are the state variables. 
(b) Find the condition that the system is controllable. 
(c) Find the condition that the system is observable. 
(d) Repeat parts (a), (b). and (c) when v(t) is an input. the voltage of the R2 is output, and capacitor 
voltage and the inductor current are the state variables. 
i(t) _.,. 
+ 
l 
l'{l) 
Rz 
Figure 10P-67 
•INDEX 
A 
Absolute acceleration control system (Quarter 
Car Modeling Tool), 361 
Absolute stability, 72 
ac control systems, 12-13 
with potentiometers . 192, 193 
ac motors, 12, 193, 198. See also de motors 
ac signals, 191, 192 
Acceleration. See also Translational motion 
angular, 157, 159 
symbol/units, 151 
translational motion and, 148 
Accelerometer, 242-243 
Accumulators, 182. See also Fluid cap:icitance 
ACSYS (Automatic Control Systems 
softw,tre), 488. See also MATLAB ; 
SIMLab; Virtual Lab 
aircraft attitude-control system and, 632-
644 
applet, 341 
frequency-domain plots and, 26 
purpose of, 223, 319, 320 
sun-seeker control system and, 645-647 
tfcal, 86 
tfsym tool. 54. 77, 84-85. 86. 744. 748-750. 
754 
Active filter 
minor-loop feedback controller with, 603-
604 
second-order, 579-580 
Actuating signals, 2 
Actuators , 105, 107, 108 
double-acting single rod, 605---006 
ideal, 606 
linear, modeling , 605-606 
models of, 289 
Addition of poles to G(s)H(s), root-locus 
diagrams and. 385-387 
Addition of zeros to G(s)H(s) , root-locus 
diagrams and, 387-393 
Adiabatic process, reversible, 184 
Air, as ideal gas, 215 
Air flow, through pipe with orifice, 187 
Aircraft. See also Attitude-control system; 
Position-control system 
fly-by-wire control system of, 216 
motion equations of, 229-230 
Aircraft turboprop engine, 135 
signals of. coupling between, 143, 144 
Air-flow system, temperature control of, 243-
244 
Algebra/manipulation rules, for SFGs, 123-
124 Amplifiers. See also Operational amplifiers 
de motor model and, 340 
dead zone and, 272 
saturation and, 11,216,272,337,340,346, 
347, 348, 349, 351, 352, 368, 369 
Analogies, 213-216 
mechanical/e\eclrical components , 213-214 
mechanical/thermal/fluid systems and 
electrical equivalents, 215-216 
pneumati c system, 214-215 
RLC network and, 213-216 
single-tank liquid-level system and, 215-
216 
Analytic function, 20 
Angles of asymptotes, of root loci, 378-379, 
381 
Angles of departure/arriv al, of root loci, 3 80, 
382 
Angular acceleration , 157, J 59 
Angular displacement, 157, 159 
Angular velocity, 157. 159 
Antenna control system, of solar collector 
field, 137 
Anticipatory control, 496. See also PD 
(proportional-derivative) controllers 
Antiwindup protection, 177 
Armature -controlled de motor, 338-339. 358-
359 
block diagram of, 222, 290 
position control of, 292-293 
speed control of, 291-292 
Asymptotes , 378 
angles of, of root loci, 378-379, 381 
intersect of, 379, 38 \ 
Asymptotic plots. See Bode plots 
Asymptotic stability, 75-76 
Attitude-control system (aircraft). 216-217, 
295-296, 498-505. See also Position­
control system 
ACSYS/MATLAB tools and, 632-644 
block diagram of, 217 
forward-path transfer function of, 498 
frequency -domain design, 503-505, 
509-511, 520-523, 526-528, 
531-532 
PD controller and, 498-505, 506-511 
PI controller and, 516-528 
PID controller and, 529-532 
root loci of, 302 
steady-state response of, 304 
system parameters , 216 
third-order , 300-304 
time response of. 300-304 time-domain design, 498-503, 506-508, 
516-520. 529-530 
transfer-function block diagram of, 217 
transient response of, 30 I 
unit-ramp responses of, 299 
unit-step responses of. 295, 303, 50 I 
Altitude-control system (guided missile), 232-
233 
Automatic Control Systems software. See 
A CSYS 
Automobiles. See also Quarter-car model 
high performance real-time control of. 4 
idle-speed control system, 4, 239-240 
intelligent systems in, 3-4 
steering control of, 4 
Auxiliary equation, 81 
B 
Back emf (back electromotive force), 199, 
202,203,204 
electric friction and, 204 
Back emf constant, 202, 204, 216, 223, 245, 
246,247,344,599 ,659.666, 738,765 
torque constant v., 204-205 
R~cklnsh, 11-12, 164 
gear. 164, 216, 340, 368 
input-output characteristic of, 164 
physical model of, 164 
Quarter Car Modeling Tool and, 361 
Ball and beam system, 228-229 
lever arm, 228, 483, 665 
Ball bearings, in spacecraft systems, 151 
Ball-suspension control system, 250, 251 
Bandw'1dth (BW) 
feedback and, 11, 15 
prototype second-order system and, 416-
418 
specification , 412-413 
Belt and pulley, 161, 162 
BIBO (bounded-input, bounded-output) 
stability, 73-74 
Block diagrams, 104-118 
antenna control system (of solar collector 
field), 137 
armature-controlled de motor, 222, 290 
attitude-control system of aircraft, 217 
closed-loop idle-speed control system, 7 
control system with conditional feedback, 
144 
de-motor control system, 105, 203 
digital autopilot for guided missile control, 
14 
electric train control, 138 
773 
774 : Index 
Block diagrams (Co,ztinued) 
elements of. I 06-l 07 
feedback control systems, 109. 136-137 
gain formula and, 128-129 
general control system, I 06 
heating system, 104 
idle-speed control system, 5 
mass-spring-friction system, 152, 
153, 155 
mathematical equations and, 109-l I 3 
MATLAB tools and, 129-132 
motor-co1nrol system with tachometer 
feedback, 102 
of multi-input syscems (with disturbance), 
115-117 
of multivariable systems. 117-118, 674--676 
open-loop control system. 6 
potentiometer, L 91 
problems/exercises for. 134-138 
reduction, I 13-115 
references for. 133. 134 
RLC network, 166 
sampled-data control system, 13-14 
sensing devices (of control systems). 
107 
SFG, of control system. 129 
SFGs v., I 19, 125 
speed-control system, 58 l 
sums/differences of signals in. 173-174 
sun-seeker control system, 220. 537 
transfer functions from, MATLAB and, 
129-132 
of transfer functions in parallel, 108 
of transfer functions in series, 108 
Blocks, 106 
Bode diagrams, 77-78 
of aircraft position-control system. 467 
of phase-lag controJJer. 565 
of PI controller, 515 
''bode" function, 33, 41, 43 
Bode plots (corner plots/asymptotic plots). 26. 
32-43 
advantages of, 455 
of constant K, 34, 35 
disadvantages of, 456 
gain margin on, 456 
gain-crossover point and. 47 
of L(s), 451 
of (jw)P, 36 
PD controllers and. 497 
phase curve of, 48 
phase margin on. 456 
phase-crossover point and. 47 
of phase-lag system, 571 
of phase-lead controller, 535-536, S52 
poles/zeros at origin and, 34-36 
pure time delays and, 42-43. 458-459 
quadratic poles/zeros and. 39-41 
simple pole, 1/(l+Jwn. 39 
simple zero, I +jwT. 37-38 
slope of the magnitude curve of, 459-462 
stability analysis with, 455-459 
of sun-seeker system, 552, 557 
time delays and, 42-43, '1-58-459 
Bounded-input, bounded-output stability. See 
BIBO stability Branch point, I 08 
relocation, 113, 114 
Branches, on root loci, 378, 38 I 
Breakaway points (saddle points), on root loci, 
380-381,382 
British units. 148, 204 
Broom-balancing system, 233-234 
Brushless PM de motors. 201 
Bulk modulus. 182 
C 
Capacitance, I 82. See also RLC network 
electrical, 172 
fluid, llH 
heat transfer and. 177 
pneumatic systems. 182-183 
RC circuit systems antl, 63, 171-172 
units for. 172, 179, 189 
Capacitors. 165 
Cart, inverted pendulum on, 227-228 
Cartesian coordinate frame. 16, 17 
Cascade compensationt 489. 490 
Cascade decomposition. 712-7 l 3 
Causal system, 53 
Cause-and-effect relationships, 8. See also 
Feedback 
Centroid, 379. See also Asymptotes 
Characteristic equations, 71, 695 
frorn differential equations. 695-696 
roots of, stability and. 74 
frorn state equations. 696 
from transfer functions, 696 
Charge. units for, I 72 
Circles, constant-M, 464, 465 
Circuit systems. See RC circuit systems 
Closed-loop acceleration control (quarter-car 
model). 359-360, 366-367 
Closed-loop control systems. See Feedback 
control systems 
Closed-loop frequency response, of aircraft 
position-contmJ system, 469 
Closed-loop idle-speed control system, 7 
Closed-loop position control (quarter-car 
n1odel), 221-222, 359 
Closecl-loop relative position control 
(quarter-car model), 365-366 
C.loserl-loop transfer function 
poles added to. 307-308 
steady-state error an<l. 266-270 
zero added to, 308-309 
Comparators. 105, 106. 107, 109 
relocation, 113. J14 
Compensated phase-lag system 
Bode plot of, 57 l 
root loci of, 564 
Compensated sun-seeker system 
Bode plots of, 557 
unit-step responses of, 568 
Compensation. 489 
cascade, 489,490 
feedback, 489,490 
feedforwarcl, 490-491 
series. 489, 490 
series-feedback, 489, 490 
state-feedback, 489. 490 
Compktely controllable process, 7 I 6 Completely state controllable, 717 
Complex convolution (real multiplication), 56, 
57 
Complex multiplication. See Real convolution 
Complex numbers, 16-18 
polar form of, 17 
properties of, 18 
rectangular form of, 16, 17 
Complex s-plane. 18, 19 
Complex shifting (theorem), 56 
Complex variables, 18-26 
functions of. 19-26 
imaginary component of, 18 
MATLAB commands and, 25 
problems/exercises for, 93 
real component, 18 
references for. 92 
Complex~conjugate poles, 61 
Conditional feedback (block diagram), control 
system with, 144 
Conditionally stable system. 459-462, 555 
Conduction, 178 
Configuration Parameters. 343 
Conjugate, of complex number, 17 
Conservation of mass, 181. 182. I 85. 188,606 
pneumatic systems and. 182 
Conservation of volume, 181, 182 
Constant K, 34, 35 
Constant pressure, J 83 
Constant temperature. 183 
Constant volume, I 83 
Constant-M ciI"cles, 464. 465 
Constant-M loci, 463-470 
Constants. See also Back emf constant; Time 
constant 
electrical time, mnplificr-motm· system and, 
217. 294 
error, 265 
low-time. 198 
mechanical time, motor-load system and, 
217.294 
motor electric-time. 290, 359 
motor-mechanical time. 291 
multiplication by a constant (theorem), 54. 
56 
spring. 149. 151, 159 
tachometer, 195 
torque, 202,204,216.223. 245,247,249, 
339. 599. 659, 666, 668, 738. 757. 765 
tursional spring. 158 
Continuous-data control systems, 12-13 
time response of. 253-254 
Control lab. 337-371 
SIMLab, 223, 340-344 
virtual experimental system, 338-340 
Virtual Lab, 223, 340-344 
Control Parameters window, 363 
Control system design, 487-672. See also 
Frequency-domain design; Time-domain 
design 
controller conJigurations, 489-491 
design specifications. 487-489 
Experiment 5, 355-356 
fecdforward cunLro]krs and, 588-590 
forward controllers and, 588-590 
fundamental principles of, 491-492 
hydraulic control system, 605-617 
lead-lag controller and, 574-576 
minor-loop feedback control, 601-604 
PD controller l\Ud, 492-5 l l 
phase-lag controller and, 561-574 
phase-lead controller and, 532-561 
PI controller and, 511-528 
PID controller and, 528-532 
pole-zero-cancellation design in, 576-588 
robotic-arm-joint (controller design), 617-
630 
robust, 590-60 l 
three steps for, 487 
Control System Toolboxes. See Toolboxes 
Control systems. See also Attitude-control 
system; Feedback co111.rol systems; 
Frequency-domain analysis; Linear 
l.'Onl.rOI systems; Nonlinear control 
systems.; Sun-seeker control system; 
Time-domain analysis 
ac, 12-13, 192, 193 
applications of, 2-6 
ball-suspension, 250, 251 
block diagram, 106 
block diagram/SFG of, 129 
components of, 2 
witn conditional feedback. (block diagram}, 
144 
continuous-data, 12-13 
controllability of, 714-719, 721-725 
de, 12-13, 105, 137, 192 
definition of, l 
digital. 14 
discrete-data, 13-14 
frequency-domain analysis of, 409-486 
importance of, 1 
objectives of, l, 2 
open-loop. 5-7, 109 
with PI controller. 317 
printwheel, 231, 246, 329 
robust, 590-601 
rotary-to·linear motion, 161 
sampled-data, 14 
sensitivity and, 9-10 
SFG/block diagram of, 129 
with state feedback, 715 
sun-tracking. 4-6 
time-domain analysis of, 253-336 
Control volume. net mass flow rate and, 181 
Controllability, 7\4-719, 721-725 
control system with state feedback, 715 
general concept of, 716 
invariant theorems on, 723-725 
observability and, 714, 715 
state, 716--717 
testing methods for, 717-719 
transfer functions/observability, 
relationship among, 721-723 
Controllability canonical form (CCF). 692, 
701-703 
direct decomposition to, 708-709 
Controllability matrix, 702 
Controllable process. completely, 716 
Controlled process, 6 
Controlled variables. 2 
Controller design projects quarte1·-car model, 357-367 
robotic ann, 354-357 
Controller Design Tool, 86, 631 
Controllers, 7, l 07. See also PD controllers.~ Pl 
controllers; PID contrnllcrs 
feedforward, 588-590 
forward, 588-590 
lead-lag. 574-576 
minor-loop feedback, 601-604 
notch, 581-588 
P, 617-621 
phase•lag. 561-574 
phase-lead. 532-561 
robust, 590-60 l 
Convection, 178-179 
fluid.boundary. 178 
Conversion between translational/rotational 
motions. 16 l 
Conversion factors 
mechanical system pmperties and, 151 
thermal system prope1ties and, 179 
Comer frequency, 37 
Corner plots. See Bode plots 
Coulomb friction, 150. 158 
coefficient, 150 
steady·state errors and, 273-274 
Critical point. 432, 434 
Cross-section view 
brushless PM <le motor, 20 I 
hot oil forging in quenching vat, 238 
iron core PM de motor, 200 
moving-coil PM de motor, 201 
surface-wound PM de motor, 200 
Current. units for, 172 
Current Law, 165 
Cutoff rate, 413 
Cylindrical container, fluid fl.ow into, 182 
D 
Damping ratio/damping factor (prototype 
second·order system), 277-278 
Damping tem1. 315,499 
Dashpot, for viscous friction, 149, 150 
dB (decibels), 26, 32, 33, 452 
de motor model (virtual experiments), See also 
Robotic arm 
amplifier in. 340 
interfacing and. 340 
open-loop sine input and. 347-350 
open-loop speed, 345-341 
position control and, 352-354 
position sensor/speed sensor in, 339-340 
simulation and, 345-354 
speed control and, 350-352 
system parameters, 339 
de (direct-current) motors. 198-205. See also 
Permanent-magnet de motors 
armature-controlled, 222, 289-293, 338-
339, 358-359 
operational principles of, 199 
sun~seeker control system and, 218, 220 
torque production in, 199 
de signals, 191 
de-motor control systems, 12-13, 245, 246, 
247. 248 
block diagram, 105, 203 Index 775 
with integral controller. 738-740 
with nonzero initial conditions, SFG of, 203 
with potentiometers. 192 
problems/exercises for, 137 
with transfer functions and amplifier 
characteristics, 105 
Dead zone 
amplifier with, 272 
gear trains and, 164 
Simulink Library Browser and, 349 
Decades, 34 
Decibels (dB), 26. 32, 33, 452 
Decompositions (of transfer functions). 678, 
707-714 
cascade, 712-713 
direct, 707-712 
parallel, 713-714 
Delay time, 257, 283-285. 488 
Derivative control, 176, 496. See also PJD 
control1ers 
Design aspects of root loci, 385-393 
Design projects. See also Control system 
design 
quarter-car model, 357-367 
robotic arm, 354--357 
Diagonal canonical form (DCF), 704-705 
Diagrams. See also Block diagrams~ Free­
body diagrams; Modeling; Signal-flow 
graphs 
Bode, 77-78 
gear trains, 162 
motor-load system, 232 
Nyquist, 29 
op-amps, 173 
rotary incremental encoder, 196 
rotational mechanical system, 159 
state, 133, 673, 676-681 
state-flow, 138, 145, 231, 234 
sun-seeker control system, 218 
Differential equations, 49-52 
characteristic equations from, 695-696 
first-order, 50 
high•order, state equations and, 691-693 
integro~, 49 
linear ordinary, 49, 62-67 
nonlinear, 49 
for pendulum, 49 
problems/exercises for, 94 
RC circuit and, 171-172 
RLC network. and, 49 
second-order, 49 
state diagrams from. 678-679 
Differentiation (theorem), 54, 56 
Digital autopilot, for guided missile control. I 4 
Digital control systems. 14 
Dirac delta function. 68 
Direct decomposition, 707~712 
to CCF, 708-709 
to OCF, 709-712 
Direct-current motors. See de motors 
Discrete-data control systems, 14 
Displacement, 148. See al,o Translational 
motion 
angular, 157 
Distance (symbol/units), 151 
Distributed mass systems, 148 
776 ~· Index 
Disturbance, 105 
heat loss, 104 
multi-input systems (block diagram) with, 
115-117 
noise and, 10-11 
Disturbance input, system with, 260 
Disturbance rejection, 487 
Disturbance vector, 682 
Disturbance-open loop response, 289 
Divider. voltage, 171-172 
Dominant poles/zeros of transfer functions. 
311-314 
Dominant roots, 301 
Double·tank Iiquid·Ievel system, 186--187, 242 
Drive-by-wire technology. 3 
Driver assist systems, 3 
Dry friction, rolling, 150-151 
Dual-channel incremental encoder, 197-198 
one cycle of output signals of, 198 
signals, in quadrature. 196, 197 
Dynamic equations. 682 
Dynamic systems, 147. See also Electrical 
systems; Fluid systems; Mechanical 
systems; Modeling·, Pneumatic systems~ 
Thermal systems 
with transportation lag, 205-207 
E 
Eigenvalues, 697 
Eigenvectors, 697-698 
generalized, 698-699 
Electric circuit representation, of 
potentiometer. 190 
Electric friction, 204. See also Back emf 
Electric train control (block diagram), 138 
Electrical circuits, 235 
Electrical elements 
active, 172-177 
passive, 165 
Electrical networks 
examples, 165-172 
modeling of, 165-172 
problems, SFGs and, 141-142 
state equations of. 167. 168-169 
state variable analysis of, 134 
Electrical schematics, RLC network, 166 
Electrico.l systems. s,,,,. also Operational 
amplifiers 
equivalents, fluid systems and, 215-216 
equivalents, mechanical systems and, 215 
equivalents, thennal systems and, 216 
modeling of, 165-172 
op-amps, 172-177 
properties. 172 
simple, 165-172 
Electl'ical time constant. amplifier-motor 
system and, 217, 294 
Electro-hydraulic valve. four-way, 606--611 
Electromechanical systems, 235-236, 289 
Electromechanical transducer, 189. See also 
Potentiometers 
Electromotive force. See Back emf 
Elementary heat transfer properties, 177-180 
capncitnnce and. 177 
rectangular object and, 180 
references for, 224 Encirclements 
defined, 428 
number of, 429 
Enclosures 
defined,428 
number of, 429 
Encoders, 189. See also Sensors 
incremental, 195-198 
sensors and, 189 
Energy (units/symbols) 
electrical system, 172 
heat stored, 179, 189 
rotational mechanical system, 159 
Engine, turboprop, 135 
signals of. coupling between, 143, 144 
Equation of state, 182. See also State equations 
Error, quantization, 273 
Error constants. 265. See also Steady-state 
errors 
Error signal, l 08 
Estimator, 489 
Euhler formula, 17 
Evans, W. R .• 372,377. See also Root~locus 
technique 
Experiment control window, 342 
Experin1ent menu, 342 
Experiments. See also de motor model 
1: Speed Control, 350-352 
2: Position Control, 352-354 
3: Open-Loop Speed, 345-347 
4: Open.Loop Sine Input, 347-350 
5: Control System Design, 355-356 
External disturbance, 10-11 
F 
Feedback, 8-11. 105. See also State feedback 
bandwidth and, 11, 15 
frequency responses and, 11 
impedance and, 11 
negative, 8 
noise and, l 0-11 
overall gain and, 8-9 
positive, I 09 
stability and, 9-10, 15 
transient responses and, 11 
Feedback compensation, 489, 490 
Feedback control systems ( closed~loop control 
systems). 7, 108-109. See also Linear 
control systems 
block diagram of, 109, 136-137 
classifications of, 11-14 
com.litions for, 108 
configuration, 8 
frequency response of, 410-412 
gain-phase characteristics of. 412 
linear 1•. nonlinear, 11-12 
with noise signal, IO 
nonunity, 258, 265-272 
open-loop control systems v •• 7 
with PD controller, 314-316, 493 
SFG of, 124 
state, 715, 728-729 
time-invariant i•. time-varying, 12-14 
torque-angle curve of, 273 
with two feedback loop,;, 9 
unity, 260-261 Feedback controller. rninor•loop, 601-604 
Feedback loops 
negative, 109 
positive, 109 
unity, 109 
Feedback.path transfer function matrix, of 
multivariable feedback control system, 676 
Feedforward compensation, 490-491 
Feedforward compensators, sun-seeker system 
and,589-590 
Feedforward comrolle:rs, 588-590 
Fin positions, of aircraft. See Position.control 
system 
Final~value theorem, 55~56 
First-order differential equations, 50 
First-order linear system. 62 
First-order op·amp configurations, 174-177 
First~order prototype systems, 63-64 
time constant and, 274 
time response of, 274-275 
unit-step response of, 274 
Fixed.configuration design. 489. See also 
Compensation 
Flow rate 
fluid volume. 185 
heat, 177, 178, 179 
mass. 181. 182, 184, 185, 187, 189 
volume, 181, 182, 189 
Flows, laminar, 184, 185 
Fluid capacitance. 181. 182 
Fluid continuity equation, 181 
Fluid forced through frictionless pipe, 184 
Fluid inductance, 184 
Fluid inertance. 184 
Fluid systems, 180-189. See also Pneumatic 
systems 
electrical equivalents for, 215-216 
incompl'essible, 18 I 
parameters in, 180-181 
properties, 180--189 
references, 224 
Fluid viscosity, 185 
Fluid volume flow rate, 185 
Fluid·boundary heat convection, 178 
Fly-by-wire control system, 216 
Force (symbol/units), 151 
Force-mass system, 149 
Force-spring system, 149 
Forward compensators. sun-seeker system 
and, 589-590 
Forward controllers. 588-590 
Forward path, 122 
Forward-path gain, 122 
Forward-path transfer function 
Bode plots of, in third-order sun-seeker 
control system. 552 
pole added to, 305-307, 424426 
of second-order aircraft attitude control 
system, 498 
third-order system with, 425 
unit-step responses of second-order system 
with, 423 
zero added to, 309-311. 418-424 
Frnward-path lrnnsfer function matrix, of 
multivariable feedback control system, 
676 
Four-way electro-hydraulic valve, 606-61 l 
input voltage/main spool displacement 
relationship in, 610-611 
liberalized flow equations for. 608-610 
main valve schematic in. 608 
orifice equation and, 607-608 
rectangular valve-port geometry in. 609 
two-stage valve block diagram, 611 
Free-body diagrams (FBDs) 
broom-balancing system, 233 
electrical circuits (exercise). 235. 236 
grain scale, 251 
inverted pendulum on cart, 227. 228 
mass-spring-damper system, 154 
mass-spring-friction system. 151 
motor-load system, 160 
Newton's law of motion and, 148 
rotational system. 158, 159 
spring-supported pendulum and, 209 
train exercise, 226 
2-DOF spring-mass system. 156 
Frequency 
gain-crossover. 453 
phase-crossover, 45 I 
Frequency response function. 26 
Frequency responses. 487 
of closed-loop systems, 410-412 
feedback and, 11 
step responses/Nyquist plots, correlation 
among. 450-451 
Frequency-domain analysis, 409-486 
crux of. 410 
frequency response of closed-loop systems, 
410-412 
sensitivity studies and, 470-472 
time-domain analysis v., 409 
transfer function and, 409-410 
Fl'equency-domain design 
frequency-don1ai11 characteristics iu, 492 
notch controller and, 586-588 
PD controllers and, 496-497, 503-511 
performance specificatio11s, 487, 488 
phase-lag controllers and, 563-566, 569-
572 
phase-lead controllers and, 535-537, 543-
548, 551-554 
Pl controllers and, 514-516, 526-528 
pole-zero-cancellation and, 580-581 
second-order aircraft attitude control 
system, 503-505, 520-523 
third-order aircraft attitude control system, 
509-511,526-528,531-532 
third-order sun-seeker control system and. 
551-554 
time-domain design v .• 488, 492 
Frequency-domain plots, 26-48 
computer-aided construction of, 26-27 
problems/exercises for, 93-94 
Frequency-domain specifications, 412-413 
bandwidth, 412-413 
cutoff rate, 413 
resonant frequency Wr, 412, 413-416 
resonant peak M,, 412, 413-416 
Friction. See also Mass-spring-friction system 
Coulomb, 150, 158, 273-274 
electric, 204 gear train with, 163 
rolling dry, 150-151 
for rotational motion. 158-159 
static, 150, 158 
for translational motion, 149-150 
viscous, 149-150, 158 
Functions {of complex variable), 19-26. See 
also Poles; Transfer functions; Zeros 
analytic, 20 
frequency response, 26 
single-valued, 19 
singu1arities of, 20 
G 
G(s) 
frequency response function of, 26 
polar plots of, 27-32 
polar representation of, 22-24 
G(s)H(s) 
addition of poles to, 385-387 
addition of zeros to, 387-393 
Nyquist criterion and, 434--435 
G(s)-plane, 19 
G2(s)H 2(s), 394, 396, 399, 400 
Gain crossover, 453 
Gain formula, 124-127 
block diagrams and, 128-129 
output nodes/noninput nodes add, 127-128 
SFGs and. 124-128 
simplified, 129 
Gain margin (GM), 46, 86, 4Sl-453, 
487. 488 
on Bode plot. 456 
definition of, 451-452 
of nonminimum-phase systems. 452-453 
physical significance of, 452 
Gain and Phase Calculator, 350 
Gain-crossover frequency, 453 
Guin-crossover point. 46, 47 
Gain-phase characteristics 
of feedback control system, 412 
of ideal low-pass filter, 411 
Gain-phase plots 
of ail'craft position-control system, 468 
of L(s), 462 
Gains, 109 
Gas flow, into rigid container system, 187-188 
Gas law, perfect, 183, 187 
Gas systems. See Pneumatic systems 
Gear backlash. 164, 216, 340, 368 
Gear trains. 162-164 
backlash in, 164, 216, 340, 368 
dead zone in, 164 
diagram. 162 
with friction/inertia, 163 
1notor-load system and, 230 
Generalized eigenvectors, 698-699 
Grain scale, 251, 252 
Guided missile 
H attitude control of, 232-233 
control, digital autopilot for, 14 
Hardware in the loop simulation, 2 
Heat conduction flow, one-directional, 178 
Heat convection. See Convection Index ~ 777 
Heat exchanger system. 239, 250 
Heat flow rate, I 77, 178. 179 
Heat loss. 104 
Heat radiation system, with directly opposite 
ideal radiators, 179 
Heat transfer problem, between fluid/insulated 
solid object, 180 
Heat transfer properties (elementary), 
177-180 
capacitance and, 177 
rectangular object and, 180 
references for, 224 
Heating system (block diagram), 104 
High-order differential equations, state 
equations v., 691-693 
High-pass filter characteristics. of PD 
controllers, 496, 497 
Horsepower (hp), 204 
Hurwitz criterion. See Routh-Hurwitz criterion 
Hybrid powertrains, 3-4 
Hydraulic capacitance (symboUunits), 
189 
Hydraolic control system, 605-617. See also 
Robot-arm-joint system 
applications, 613-617 
double-acting single rod actuator in, 
605-606 
four-way electro-hydraulic valve in, 
606-611 
modeling, 612-613 
P controllers for, 617-621 
PD controllers for, 621-626 
Pl controllers for, 626-628 
PIO controllers for, 628-630 
rotational system and, 615-616 
translational motion and, 613-615 
variable load and. 616-617 
Hydraulic diameter, 185 
Hydraulic generator system, 240-2.4 l 
Hydraulic resistance (symbol/units). 189 
Hydraulic servomoter, 242 
Ideal gas, air as, 215 
Ideal linear actuators. 606, 612, 613, 618 
Ideal low-pass filter, 411 
Ideal op-amp, 173 
Ideal radiators, heat radiation system and, 179 
Idealized models, linear feedback control 
systems as, 11 
Idle-speed conlrol system, 5 
automobile, 4, 239-240 
block diagram, 5 
closed-loop, 7 
open-loop, 7 
ilaplace command, 85 
Imaginary axis, intersection of root loci with, 
380, 382 
Imaginary component. of co1nplex variable, 
18 
Impedance, feedback and, 11 
Impulse response. 67-69 
Incompressible fluid systems. 181-187 
inductance and, 184 
open-top cylindrical container and, 182 
resistance and, 184-185 
778 Index 
Incremental encoders, 195-198. See also 
Encoders; Sensors 
dual-channel. 196-198 
linear. 196 
rotary. 196 
single-channel, 196, 197 
Inductance. See also RLC network 
fluid. 184 
incompressible fluids and, 184 
units for, 172 
Inductors, 165 
Incrtance, fluid, 184 
Inertia, 157. See also Load inertia 
gear train with, 163 
symbol/units, 159 
Initial states, 51 
Initial~value theorem, 55. 56 
Input node, 121 
Input vector, 682 
Input voltage/main spool displacement 
relationship (four-way valve}. 610-611 
Inputs, 2. 104 
Insignificant poles, steady-state response. 
313-314 
Insulated solid object/fluid, heat transfer 
problem between, 180 
Integral controllers, 176. See cilso PI 
controllers; PID controllers 
de-motor control system with. 738-740 
state feedback with, 735-741 
sun-seeker system and, 737-738 
Integration (theorem), 55, 56 
Integration operation. state diagrams and, 
677 
Integrator output magnitude, 177 
lntegrodifferential equation, 49 
Intelligent systems, 2 
in automobiles, 3-4 
Interfacing, de motor model and, 340 
Intersect of asymptotes. 379, 381 
Intersection. of root loci with imaginary axis, 
380,382 
Invariance properties, of similarity 
transformations, 700-70 l 
Invariant theorems. on concrollability/ 
observability. 723-725 
Inventory-control system, 103 
Inverse Laplace transform, 54 
MATLAB and, 64 
by partial-fraction expansion. 57-62 
problems/exercises for. 97-99 
Inverted pendulum, on cart. 227-228 
Inverting op-amp configuration, 175 
Inverting op-amp transfer functions, 175-176 
Iron-core PM de motors, 199-200 
lsentropic process, 184 
Isobaric process, 183 
Isothermal process. 183 
lsovolumetric process, 183 
J 
Cjn·'f, 34-36 
Jerk function, 256 
Jordan hlocks, 706 
Jordan canonical form (JCF), 706 
Junction points. See Nodes K 
K = ± oo points, on root loci, 377-378, 381 
K = 0 points, on root loci, 377-378, 381 
K values on root loci, calculation of, 382 
Kalman, E., 714 
Kirchoff's laws, 147, 165 
L 
L(s) plot 
Bode plot and, 457 
gain-phase plot and, 462 
Nyquist criterion and. 434-435 
Nyquist plot and, 444-449 
poles added to, 445-448 
zeros added to, 448-449 
Laminar flows, equations of resistance for, 
184, 185 
Laplace operator. 52 
Laplace transform, 52-57. See al'lo Inverse 
Laplace transform 
definition of, 52-53 
features of, 52 
linear ordinary differential equations and, 
52.62-67 
MATLAB and, 53 
one-sided, 52-53 
problems/exercises for, 94-97 
references for. 92 
theorems of, 54-57 
Laplace trm1sfonn table. 53, 54, 57, 62, 65, 97, 
276. 295, 298, 758 
Laser printers. 289 
Lead screw, 161 
Lead-lag controller. 574-576 
Lever 
gear train and, 162 
thennal, 237, 238 
throttle. 242 
Lever arm (hall and beam system), 228. 483, 
665 
Library Browser, SimuJink, 349 
Light source (rotary incremental encoder). 196 
Linear actuators 
force balance equation for, 612 
modeling, 605-606. 612-613 
Linear control systems, 11-12. See also 
Nonlinear control systems 
block diagram of, 109 
characteristic equation of, 71, 74 
as idealized models, 11 
mathematical foundations for, 16-90 
nonlinear control systems v., 11-12, 15 
observability of, 714, 715, 719-725 
rotary-to-linear motion control systems. 161 
stability of, 72-73 
Linear incremental encoder. 196 
Linear motion potentiometer. 189. 190 
Linear ordinary difforential equations. 49 
first-order prototype systems and. 63-64 
Laplace transfonn and, 52, 62-67 
procedure for solving. 62 
second-order prototype systems and, 64-67 
Linear spring, 149 
Linear variable differential transformer 
(LVDT). 359,360 
Linearization (of nonlinear systems), 206-2)3 state space approach and, 207-213 
Taylor series and. 207, 208 
Liquid-level system 
double-tank, 186-187 
single-tank, 185-186 
Load inertia, 160, 244. 246,247,290, 344, 765 
armature-controlled de motor and, 289. 338 
primwheels and, 599 
variable, position-control system and, 599 
Load torque, 4, 5 
Loop gain, 122 
Loop Method, 165 
Loops, l 22, 123. See also Feedback loops 
nontouching, 122 
phase-locked. 245 
Low-pass filter, ideal. 411 
Low-time-constant properties, 198 
Lumped mass models, 148 
LVDT (linear variable differential 
transformer), 359, 360 
M 
Magnetic-ball-suspension system, 211-213. 
725-728 
state feedback and, 731-733 
Magnification v. normalized frequency, of 
prototype second-order system, 415 
Magnitude phase, 9 
Magnitude-phase plane, constant-M loci in. 
463-470 
Magnitude-phase plot. 26. 44-46 
gain-crossover point and, 4 7 
phase-crossover point and, 47 
stability analysis with, 462-463 
Main spool displacement/input voltage 
relationship (four-way valve), 610-611 
Manipulation rules/algebra, for SFGs, 123-
124 
Marginally stable/unstable, 76 
Mason, S. J., 119. See also Gain formula; 
Signal-flow graphs 
Mass 
conservation of, 181. 182, 185, 188,626 
defined, 148 
distributed mass systems. 148 
lumped mass models, 148 
in polytropic pmcess. 183 
symbol/units. 151 
Mass flow rate, 181, 182. 184, 185. 187 
symbol/units. 189 
volume flow rate v.. 182 
Mass-spring-friction system. 151-153, 224 
block diagrams, 152, 153, 155. 156 
FBD of, 151 
SFG, 155 
Mathematical equations, block diagrams and, 
109-113 
Mathematical foundations (for linear control 
systems), 16-90 
Mathematical modeling. See Modeling 
MATLAB. See also Toolboxes 
aircraft attitude-control system and, 632-
644 
block diagrams/SFGs and, 129-132 
"bode" function, 33, 41. 43 
complex variables and, 25 
development/availability of. 488 
frequency-domain plots and, 26 
inverse Laplace transfonn a11d. 64 
Laplace transfonns and, 53 
"nichols" function, 45 
Nyquist diagram and, 29 
partial-fraction expansion and, 58-6 I 
phase/gain margins and, 46 
dse time and. 288 
role of, 2 
settling time and, 288 
SISO Design Tool, 363,366,367,371,634, 
635, 636, 638~ 642 
stability tools, 85-90 
sun-seeker control system and, 645--647 
Symbolic Tool, 53, 64, 83, 84, 741. 748 
tfaym tool, 54, 77, 84-85, 86, 744. 748-750, 
754 
time response and, 67 
nnit impulse tesponse and, 69 
velocity-control system and, 259 
zero-pole-gain models and, 21 
Matrices 
controllability, 702 
feedback-path transfer function matrix, 676 
forward-path transfer function matrix, 676 
state-transition matrix, 684-686 
vector-matrix representation of state 
equations, 682-684 
Matriit algebra, I 6 
Maximum overshoot, 256-257, 280-283,487. 
488 
Mechanical systems 
conversion between translational/rotational 
motions in, 161 
electrical equivalents, 215 
gear trains, 162-164 
rnodcling of, 148-164 
Newton's second law of motion and, 147, 
148, 156, 157, 184 
rotational motion in, I 57-160 
symbols/units/conversion factors, 151 
tmnslational motion in. 148-157 
Mechanical time constant. motor-load system 
and, 217. 294 
Microradians, 258 
Minimal set. of variables, 51 
Minimum-phase transfer functions, 47-48 
Nyquist criterion for, 435-437, 440-444 
Minor-loop feedback controller, 601-604 
with active filter. 603-604 
rate-feedback and, 601-602 
sun-seeker system and, 603-604 
tachometer-feedback control and, 601-602 
Model Parameters window. 362 
Modeling. See also Block diagrams; de motor 
model; Signal-flow graphs 
of actuators, 289 
electrical elements (active), 172-177 
electrical elements (passive), 165 
electrical networks. 165-172 
electrical systems, 165-177 
fluid systems, 180-189 
hydraulic control system. 612-613 
1inea1· actuators, 605-606, 612-613 
mechanical systems, 148-164 of PM de motors, 201-205 
references. 224 
tachometers, 195 
the1111nl systems, 177-180 
Modulus, bulk, 182 
Moment equation, 158, 210 
Morning sickness. 9-10 
Motion 
Newton's second law of, 147, 1481 156, 157, 
184 
rotatiorial. 157-161 
translational, 148-157, 161 
Motion equations, of aircraft, 229-230 
Motor blocks, SIMLab. 344 
Motor electric-time constant. 290, 359 
Motor-control system 
open-loop, 244 
with tachometer feedback. 102 
torque-angle curve of. 273 
Motor-load system, 159-160 
gear trrun and. 230 
schematic diagram of, 232 
Motor-mechanical time constant. 291 
Motors. See also de motors 
ac, 12, 193, 198 
servomotors, 13, 198. 242, 328. 331. 477 
voice-coil, 24 7 
Moveable-plate capacity. 235, 236 
Moving-coil PM de motors. 200-20 l 
M,. See Resonant peak M, 
Multi-input systems with disturbance (block 
diagram), 115-117 
Multiple-order poles, 59-60 
Multiple-parameter variation. See Root 
contours 
Multiplication by a constant (theorem). 54. 56 
Multistage phase-lead controller, 555. See also 
Two-stage phase-lead control1er 
Multivariable feedback control system 
block diagram of, 675 
feedback-path transfer function matrix of. 
676 
forward-path transfer function matrix of, 
676 
Multivariable systems, 4, 71-72 
N block diagrams of, 117-118, 674-676 
transfer functions of. 4, 71-72. 117-118. 
673-674 
Natural undamped frequency, 278-280 
Negative feedback. 8 
Negative feedback loop. 109 
Net mass flow rate. control volume and, 181 
Newton's second law of motion, 147. 148. 156, 
157. 184 
Nichols chart. 44. 463-470 
of aircraft position-control system, 468 
nonunity feedback control systems and, 
469-470 
"nichols" function, 45 
Node Method, 165-166. I 70 
Nodes, 119 
input, 121 
output, 121, 127-128 
Noise, feedback and, 10--1 I Index · 779 
Nonfeedback systems. See Open-loop control 
systems 
Noninput nodes/output nodes, gain formula 
and, 127 128 
Nonlinear control systems. 49. 223. See also 
Linear control systems 
linear control systems v., 11-12, 15 
linearization of, 206-213 
Nonlinear differential equations. 49 
Nonlinear system elements., steady-state error 
and. 272-274 
Nonminimum-phase systems, GM of, 452-
453 
Nonminimum-phasc transfer functions, 
47--48 
Nontouching loops. 122 
Nonunity feedback control systems. 258. 265-
266 
Nichols chart applied to, 469--470 
steady-state errors and. 266-272 
Normalized frequency v. maguilkation. of 
prototype second-order system, 415 
Notation. See Units/symbols 
Notch controllers. 581-588. See also Speed­
control system 
frequency-domain design and, 586--588 
pole-zero-cancellation design with. 582-
584 
Notch filters. 576-588 
Number of branches. on root loci, 378, 38 I 
Nume1ical control machines, 289 
Nyquist diagran1, 29 
Nyquist path, 433-434 
Nyquist plots 
advantages of. 455 
disadvantage of, 455 
gain crossover on, 45 3 
L(s) plot and. 444-449 
phase crossover on, 451 
root loci and, 437-439 
step responses/frequency responses, 
correlation among. 450-451 
Nyquist stability criterion, 29, 48, 77, 426--
444. See also Root-locus technique; 
Routh-Hurwitz criterion 
0 critical point and. 432, 434 
fundamentals. 426-435 
generalized. 437 
G(i)H(s) plot and. 434-435 
L(s) plot and. 434-435 
minimum-phase transfer functions and, 
435-437,440--444 
origination of. 429 
principles of the argument. 429-433 
root-locus technique i• •• 426. 437-439 
stabi1ity problem and, 427-428 
Objectives. l, 2 
Observability, 714, 715, 719-725 
controllability and, 714. 715 
definition of. 719-720 
invariant theorems on, 723-725 
testing methods for, 720 
transfer functions/controllability. 
relationship among, 721-723 
780 , Index 
Observability canonical form (OCF), 
703-704 
direct decomposition to, 709-712 
Observer, 489 
Octaves, 35 
Ohms, 172, 289, 339 
Ohm's law, 165 
Oil well system, 241 
One degree of freedom (1-DOF) quarter~car 
model, 220, 221, 252, 357, 358 
One~directional heat conduction flow, 178 
One-sided Laplace transform, 52-53 
Oue~tank. ~yslem. See Single-tank liquid-level 
system 
One-to-one mapping, 19 
Open-loop base excitation (quarter-car 
model), 221 
Open-loop control systems (nonfeedback 
systems), 5-7, 109. See also Feedback 
control systems 
Open-loop motor-control system, 244 
Open-loop response, disturbance-. 289 
Open-loop sine input (virtual experiment), 
347-350 
Open-loop speed (virtual experiment), 345-
347 
Open-top cylindrical container, fluid flow into. 
182 
Operational amplifiers (op-amps), 172-177 
configuration, inverting, 175 
exercises, 236-237 
first-order, 17 4-177 
ideal, 173 
input-output relationship for, 173 
issues with, 173 
PD controller and, 493 
phase-lead controller and, 543 
PI controller and, 512-513 
realization, of transfer function, 176-177 
schematic diagram of, 173 
and sums/differences of signals, 173-17 4 
transfer functions, inverting, 175-176 
uses for, 172-173, 177 
Orifice equation, 607--608 
Output equations, 51-52 
state diagrams from, 680-681 
Output nodes, 121 
noninput nodes, gain formula and, 127-128 
Output sensor, 108 
Output vector. 682 
Outputs, 2, 104 
state variables v., 51 
Overall gain, feedback and, 8-9 
Overshoot. See Maximum overshoot 
p 
P (proportional) controllers, 617-621 
Pade approximation, 206 
Parabolic-function input, 256 
steady-state error and, 263-264. 268 
Parallel decomposition, 713-714 
Parameter variations, sensitivity to, 487 
Partial-fraction expansion 
inverse Laplace transform by, 57-62 
references for, 92 
Passive electrical element,;, modeling of. 165 Passive suspension, quarter car model and. 
364-365 
Path gain, 122 
Paths, 122 
Payload, of space-shuttle-pointing control 
system, 102, 103 
PD (proportional-derivative) controllers, 314-
316 
as anticipatory control, 496 
Bode plot and, 497 
design principle of, 496 
design with, 492-511 
disadvantage of, 496 
feedback control system with, 314-316, 493 
frequency-domain interpretation of, 496-
497, 503-511 
high-pass filter characteristics of, 496, 497 
op-amp circuit realization of, 493 
for robot-arm-joint system. 621-626 
second-order aircraft attitude control system 
and,498-505 
summary effects of. 497 
third-order aircraft attitude control system 
and, 506-511 
time-domain interpretation of, 49~96, 
498-505 
Pendulum 
differential equation for, 49 
inverted, on cart, 227-228 
spring-supported. 209-211 
Perfect gas law, 183. I 87 
Permanent-magnet (PM) de motors 
brushless, 20 I 
classifications of. 199-201 
control system, 763-764 
iron-core, 199-200 
modeling of, 201-205 
moving-coil, 200-201 
surface-wound, 200 
Pennanent-magnet technology, 198 
Phase crossover, 451 
Phase margin (PM), 46, 86, 453-455, 487. 
488. See also Gain margin 
on Bode plot, 456 
definition of, 453 
Phase-crossover frequency. 45 l 
Phase-crossover point, 46, 4 7 
Phase-lag controller, 533, 561-574 
Bode diagram of, 565 
compensated system. 564,571 
design strategies for, 562 
frequency-domain design of, 563-566, 569-
572 
pole-zero configuration of, 561 
speed-control system and, 584 
sun-seeker system and. 566-572 
third-order sun-seeker system and, 572-574 
time-domain design of, 561-563, 566-569 
uncompensated system. 564, 571 
Phase-lead controller, 532-561 
Bode plot of, 535-536 
effects of, 554 
frequency-domain design of, 535-537, 543-
548, 551-554 
limitations of. 555 
multistage, 555 op-amp-circuit realization of. 543 
pole-zero configuration of, 534 
single-stage, 555 
sun-seeker control system and, 537-548 
third-order sun-seeker control system and, 
548-554 
time-domain design of, 534-535, 537-543, 
548-551 
two-stage, 555-559 
Phase-locked loops, 245 
Phase-variable canonical form (PVCF), 692 
Physically realizable system, 53 
Pl (proportional-integral) controllers, 316--319 
advantages/disadvantages of, 516 
Bode diagram of, 515 
control system with, 317 
design with, 511-528 
frequency-domain design of, 514-516. 520-
523 
op-amp circuit realization of. 512-513 
pole-zero configuration of. 317-318, 514 
prototype second-order system with, 511-
512 
for robot-arm~joint system, 626-628 
second-order attitude control system and, 
516-523 
speed-control system and, 584-585 
third-order attitude-control system and, 
523-528 
time~domain design of, 513-514, 516-520, 
523-528 
PID (proportional. integral, derivative) 
controllers. I 76, 492 
design with, 528~532 
implementation of, 176-177 
for robot-ann-joint system, 628-630 
role of. 304-305 
third-order attitude-control system and, 
529-532 
Pinion, rack and, 161 
Pipe 
with fluid resistor, incompressible fluid flow 
through, 184 
frictionless, fluid through, 184 
with orifice, air fl.ow through, 1 &7 
Piston system. spring-loaded. 182-183 
Plant, 107 
Plotting tutorial, 647--648 
Pneumatic systems. See also Fluid systems 
capacitance in. 182-183 
conservation of mass and, 182 
conservation of volume and, 182 
gas flow into rigid container system, 187-
188 
perfect gas law and, 183, 187 
properties, 180-189, 224 
resistance and, 187 
spring-loaded piston system, 182-183 
time constant of, 214-215 
with valve and spherical rigid tank 
(analogy), 214-215 
Polar form, of complex numbers, 17 
Polar plots, 26, 27-32 
gain-crossover point and, 47 
phase curve of, 48 
phase-crossover point and, 47 
Polar representation. of G(s), 22-24 
Pole placement. 730 
Pole-placement design, 715 
through state feedback, 730-735 
Pole-zero configuration 
of G2(s)H2(s), 394, 396, 399, 400 
of phase-lag controller. 561 
of phase-lead controller. 534 
of Pl controller, 317-318. 514 
Pole-zero-cancellation design. 576-588 
exact cancellation, 576 
frequency-domain design and, 580-58 l 
inexact cancellations. 577. 578 
with notch controller, 582-584 
second-order active filter, 579-580 
speed-control system and, 581-588 
Poles, 20 
added to L(s) plot, 445-448 
closed-loop transfer function with. 307-308 
definition of, 20 
dominant, of transfer functions. 311-313 
forward-path transfer function with, 305-
307, 424-426 
graphical representation of, 21 
at origin, 34-36 
quadratic. 39-41 
simple, 20 
simple, 1/( 1 + jw1), 39 
Polytropic exponent. 183 
Polytropic process. 183, 189 
Position control 
of armature-controlled de motor, 292-293 
de motor model and, 352-354 
Position Control (virtual experiment 2), 352-
354 
Position indicator, potentiometer as, 191 
Position sensor. de motor model and, 339-340 
Position-control system (aircraft). See also 
Attitude-control system 
Bode diagrams of, 467 
case study. 216-217 
closed-loop frequency response of, 469 
gain-phase plots of, 468 
Nichols chart of, 468 
steady-state response and, 298 
time domain analysis of, 293-304 
uniHtep response and, 294-297 
Position-control systems 
of electronic word processor, 136 
robust controllers and, 599-601 
with tachometer feedback, 195 
variable load inertia and, 599 
Positive feedback. I 09 
Potentiometers, 189-194 
ac control system with, 192, 193 
block diagram representation of, 191 
de-motor position-control system with, 192 
electric circuit representation of, 190 
linear motion. 189, 190 
as position indicator. 19 I 
rotary, 189, 190 
Power, units for, 172 
Power supply. within enclosure, 238 
Powertrains. hybrid, 3-4 
Pressure drop, 185 
Principles of the argument, 429-433 equation form of, 431 
Nyquist criterion and, 429-433 
statement of, 430 
summary of outcomes of, 433 
Printers, laser. 289 
Printwheels, l 97. 198 
control system, 231, 246. 329 
load inertia and. 599 
permanent-magnet de-motor-control system 
and, 763, 764 
velocity of, 198 
Proper transfer functions, 7 l 
Proportional control, 492 
Proportional controllers. See P controllers 
Proportional gain, 176 
Proportional-derivative controllers. See PD 
controllers 
PropOrtional-integral controllers. See PI 
controllers 
Prototype first-order systems. See First-order 
prototype systems 
Prototype second-order systems. See Second­
order prototype systems 
Pulley, belt and, 161, 162 
Pure time delays, Bode plots and, 42-43, 458-
459 
Q 
Quadratic poles/zeros~ 39-41 
Quadrature, dual-channel encoder signals in. 
196. 197 
Quantization error, 273 
Quantizer, 272, 273 
Quartel' Car Modeling Tool, 360-364 
absolute acceleration control system. 361 
backlash and. 361 
control window, 362 
Model Parameters window, 362 
saturation and, 361 
Quarter-car model. 220-222, 335 
closed-loop acceleration control, 359-360, 
366-367 
R dosed-loop position control, 221-222, 359 
closed-loop relative position control. 365-
366 
design project 2, 357-367 
introduction to, 357-359 
l·DOF, 220, 221, 252, 357, 358 
open-loop base excitation. 221 
parameter values, 357 
passive suspension and, 364-365 
2-DOF. 220. 221, 358 
Rack and piniun, 161 
Radiation. 179 
Ramp function, 255 
Ramp-function input. 255-256 
steady·state error with, 262-263, 268 
Rate~feedback. 601-602 
Rational functions, time-delay function and, 
206 
RC circuit systems 
capacitance and. 63, 171-172 
differential equation of, 170-171 
u11it response of, 63 Index 781 
Reactor tank. 97 
Real axis, root loci on. 380, 381 
Real component, of complex variable, 18 
Real convolution (complex multiplication), 
56.57 
Real multiplication. See Complex convolution 
Rectangular fonn, of complex numbers, 
16, 17 
Rectangular object. heat transfer problem and, 
180 
Rectangular output wavefonn, of single­
channel encoder device, 196, 197 
Rectangular valve-port geometry, 609 
References 
block diagrams, 133, 134 
complex variables, 92 
elementary heat transfer properties. 224 
ftuid/gas system properties, 224 
Laplace transform, 92 
modeling, 224 
partial-fraction expansion, 92 
SFGs, 133, 134 
stability, 93 
state variable analysis, of electric networks, 
134 
Regulator system, 7 
Relative damping ratio, 3 I 3 
Relative Position Time Response plot, 366 
Relative stabilily, 72. 449-455, 487 
gain margin and. 46, 86, 451-453 
phase margin and. 46, 86, 453-455 
slope of the magnitude curve of Bode plot 
and,459-462 
Relocation 
branch point, ll 3. \14 
comparator, 113, 114 
Resistance. See also RLC network 
equations, for laininar flows, 184, 185 
incompressible fluids and, 184-185 
pneumatic systems and. 187 
RC circuit systems and. 63. 170-171 
thermal, 178 
turbulent, 185 
units for, 172. 179 
Resistance-inductance-capacitance network. 
See RLC network 
Resistors, 165 
Resonant frequency Wr 
prototype second-order system. 413-416 
specification, 412 
Resonant peak M,. 487,488 
prototype second-order system, 413-416 
specification, 412 
Results. See Outputs 
Rcve1'Sible adiabatic process, I 84 
Rigid container system, gas flow into, 
187-188 
Rise time, 257, 283-285, 288, 487. 488. 
RLC (resistance-inductance-capacitance) 
network. 49, 165-166, 213, 772 
analogies and. 213-216 
block diagram representation, 166 
differential equation for, 49 
electrical schematics. 166 
modeling of, 165-166 
SFG representation, 166 
782 ~ Index 
Robot-arm-joint systern, 249 
P controllers for. 617-62 I 
PD contr()\lers for. 621-626 
PI controllers for, 626-628 
PID controllers for, 628-630 
schematic diagram, 605, 612 
Robotic arm (design project 1 ). 354-357 
control of, 354 
side view of, 355 
Robotics, 1, 2 
Robots. 289 
Robust controllers, 590-601 
position-control system and, 591-601 
sun-seeker system and, 591-599 
Robustness, 487, 590 
Rolling dry friction, 150-151 
Root contours (RC), 373, 393-400 
of sun-seeker control system, 540, 541, 570 
Root loci (RL), 86, 372 
angles of asymptotes of, 378-379, 381 
angles of departure/arrival of, 380, 382 
basic properties of, 373-377 
breakaway points (saddle points) on, 380-
381, 382 
calculation of values of Kon, 382 
of compensated phase-lag system, 564 
design aspects of, 385-393 
graphical construction of, 375-377 
and intersect of asymptotes, 379, 381 
intersection of, with hnagimuy WI.is, 380,382 
K = ± co points on, 377-378, 381 
K=O points on, 377-378, 381 
number of branches on, 378, 381 
Nyquist plot and, 437-439 
properties of, 377-385 
on real ax.is, 380, 381 
summarization of properties, 381-382 
of sun-seeker system, 567 
symmetry of, 379 
of third-order attitude-control system, 302 
of uncompensated phase-lag system. 564 
Root sensitivity, 382-385 
Root-locus diagrams 
addition of poles to G(j')H(s), 385-387 
addition of zeros to G(s)H(s). 387-393 
Root-locus technique, 206, 372-408. See abm 
Nyquist stability criterion; Routh­
Hurwitz criterion 
Nyquist stability criterion v •• 426, 437-439 
Routh-Hurwitz criterion and, 426 
ROOTS command, 99 
Rotary disk, 196 
Rotary incremental encoders 
diagram, 196 
parts in. 196 
Rotary potentiometer, 189. 190 
Rotary-to-linear motion control systems, 161 
belt and pulley, 161 
lead screw, 161 
rack and pinion, 16 I 
Rotational mechanical system 
diagram, 159 
hydraulic control system and, 615-616 
motor-load system, 159-160 
prope11ies, 159 
SFG representation. 160 Rotational motion, 157-160 
friction for, 158-159 
translational motion, conversion between, 
161 
Routh-Hurwitz criterion, 77. 78-84. See also 
Nyquist stability criterion; Root-locus 
technique 
problems/exercises for, 99, I 00, IO I. 102, 
103 
root-locus technique and, 426 
Routh-Hurwitz stability routine. See tfrouth 
Routh 's tabulation, 79, 80, 81 
s 
Saddle points (breakaway points), on root loci, 
380-381, 382 
Sampled-data control systems, 14 
Sampler, 14 
Saturation, 11-12, 216, 272, 337, 340, 346, 
347,348,349,351,352,368,369 
de motor model and, 346 
Quarter Car Modeling Tool and. 361 
Schematic diagrams. See Diagrams 
Screw, lead, 161 
Second-order active filter, 579-580 
Second-order attitude control system 
(aircraft), 295-296, 498-505. See also 
Attitude-control system 
foiward-path transfer function of, 498 
frequency-domain design. 503-505, 520-
523 
PD controller and, 498-505 
PI conb-ollel' and, 516-523 
time-domain design, 498-503, 516-520 
Second-order differential equations, 49 
Second-order linear system, 62 
Second-order prototype function, 61 
Second-order prototype systems, 64-67 
BW and, 416-418 
damping ratio/damping factor and, 277-278 
delay time/rise time and, 283-285 
magnification v. normalized frequency of, 
415 
maximum overshoot and, 280-283 
natural undamped frequency and. 278-280 
with PI comroller, 511-512 
resonant peak/resonant frequency, 413-416 
settling time and, 285-288 
transient response of. 275-288 
unit-step responses of. 276 
Second-order system, 49 
with fo1ward-path transfer function. unit­
step responses of. 423 
Sensing devices of control systems (block 
diagram), I 07 
Sensitivity 
control systems and, 9-10 
to parameter variations. 487 
speed-control system and, 585-586 
studies, in frequency domain, 470-472 
third-order sun~seeker system and, 559-561 
Sensitivity function, 9-10, 470,471,472.474, 
559 
Sensors, 104, 107. 189-195. See also Encoders 
encoders and, 189 
ou1put, 108 potentiometers, 189-194 
in rotary incremental encoder, 196 
tachometers, 194-195 
Series compensation, 489. 490 
Series-feedback compensation, 489. 490 
Servomechanisms. 289 
Servomotors, 13. 198, 242,328,331.477 
Settling time, 257. 285-288, 487. 488 
Shift in time (theorem), 55, 56 
SI units. See Units/symbols 
Signal-flow graphs (SFGs), 119-129. See alw 
State diagrams 
algebra/manipulation rules for, 123-124 
block diagram, of control system, 129 
block diagrams v .• 119, 125 
of de-motor system with nonzero initial 
conditions, 203 
electric network problems and, 141-142 
elements of, 119-120 
of feedback control system, 124 
gain formula and. 124-128 
mass-spring~friction system, 155 
MATLAB tools and, 129-132 
problems/exercises for, 138-146 
properties of. 120 
ref ere nee.,;; for, 133, 134 
RLC network, 166 
mtational system, I 60 
state diagrams and, 673, 676 
step-by-step construction, 121 
sums/differences of signals in, 173-li4 
terminology for, 121-122 
Signals 
dual~channel encoder, in quadrature, 196. 
197 
sums/differences, op-amps and, 173-174 
suppressed-carrier-modulated, 193-194 
test. for time-d<:unain analysis, 254-256 
Similarity transfonnations. 699-706 
CCF and, 692, 701-703 
DCF and, 704-705 
invariance properties of. 700-701 
JCF and, 706 
OCF and, 703-704 
SIMLab, 223 
expeiiment control window, 342 
Experiment menu, 342 
motor blocks, adjustable parameters for. 344 
Speed Control Simulink model. 343 
Simple pole. 20 
ll(l+jw1), 39 
Simple zero, I +jwT, 37-38 
Simplified gain formula. 129. See al~o Gain 
fonnula 
Simulation, virtual experiments and. 345-354. 
See alw de motor 
Simulink 
Library Browser. 349 
role of. 2 
Speed Control Simulink model, 343 
Single channel incremental encoder 
rectangular output wavefonn of. 196, 197 
sinusoidal output waveform of. 196. 197 
Single-input. single-output systems. See SISO 
systems 
Single-stage phase-lead controller, 555 
Single-tank liquid-level syste111. 184-185 
analogies for, 215-216 
Single-valued function, I 9 
Single-valued mapping. from s-plo.ne to G(s)­
plane, 19 
Si11g11Jarities, of function, 20 
Sinusoidal output waveform, of single-channel 
encoder device, 196, 197 
SISO Design Tool, 363, 366, 367, 371. 634, 
635. 636, 638, 642 
SISO (single-input. single-output) systems, 
70-71 
Slope of the magnitude curve, of Bode plots, 
459-462 
Smart transportation systems, 3-4, 5 
Solar collector field, 4-5 
antenna control system, block diagram of. 
137 
Solar power, water extraction and, 4-5, 6 
Space state form. See State space form 
Space-shuttle pointing control system, l 02, 
103 
Spacecl'aft systems, baJI bearings in, 151 
Speed control 
of armature-controlled de motor, 291-292 
de motor model and, 350-352 
Speed Control (vhtual experiment), 350-352 
Speed Control Simulink model. 343 
Speed sensor, de motor model aml, 339-340 
Speed-control system, 581-588 
block diagram of, 581 
notch controller and, 581-588 
phase-lag controller for, 584 
Pl controller for. 584-585 
pole-zero-cancellation design with notch 
controller. 582-584 
sensitivity and. 585-586 
time-domain pe1formancc attributes, 584 
unit-s\ep responses of. 585 
s-plane 
complex, 19 
G(.r)-pJane and. 19 
Spring, 149. See also Mass-spring-friction 
system 
force-spring system and, 149 
linear. 149 
torsional. 158 
Spting constant 
delined, 149 
symbol/units, 151, 159 
Spring system, torque torsional. 158 
Spring-loaded piston system, 182-183 
Spring-mass system, 2-DOF, 156 
Spring-mass-damper. 22, 110 
Spring-supported pendulum, 209-211 
Stability. See also Bode plots; Nyquist stability 
criterion; Relative stability 
absolute, 72 
asymptotic, 75-76 
BIBO, 73-74 
feedback and. 9-10, 15 
of linear control systems, 72-73 
magnitude-phase plot and, 462-464 
marginal, 76 
MATLAB tools for. 85-90 
methods for detennining, 77-78 Nyquist criterion and, 427-428 
references for, 93 
roots of characteristic equation 1'., 74 
zero-irtput, 74-75 
Stable system, conditionally, 459-462. 555 
State controllability, 716-717 
State controllable, completely, 717 
State diagrams, 133, 676-681 
differential equations to, 678-619 
integration operation and, 677 
output equations from, 680-681 
SFGs and, 673. 676 
state equations from. 680-681 
state-transition equation from, 689-691 
transfer functions to. 679-680 
uses of. 678 
State equations. 50, 51 
chamcteristic equations from, 696 
of electrical networks, Hl7, 168-169 
equation of state, 182 
high-order differential equations v., 691-
693 
state diagrams from, 680--681 
transfer functions v .. 693-695 
vector-matrix representation of, 682-684 
State feedback, 489 
control system, 715, 728-729 
with integral controller, 735-741 
magnetic-ball suspension system and, 731-
733 
pole-placement design through, 730-735 
sun-seeker system and, 733-735 
State feedback compensation, 489. 490 
State space approach 
linearization and, 207-213 
magnetic-ball-suspension system and, 211-
213 
spring-supported pendulum and, 209-211 
State space form, 51, 152, 167 
State space systems. 16. 50, 741 
State variable analysis, 673-772 
of electric networks, 134 
transfer functions and, 673-674 
State variables. 50-S 1 
conditions for, 51 
outputs v., 51 
State vector, 682 
State-flow diagrams, 138. 145, 23 l, 234 
State~Space Analysis Tool {statetool}, 741-
748 
inputting values in window, 744 
window. 742 
Staturansition equation. 687-691 
definition. 687 
from stntc diagram, 689-691 
State-ti-ansition matrix, 684-686 
properties of, 685-686 
significance of, 685 
Statetool. See State-Space Analysis Tool 
Static friction, J 50, 158 
Stationary mask (rotary incremental encoder). 
196 
Steady-state accuracy, 487 
Steady-sto.tc errors, 257-274. 487 
closed-loop transfer function and, 266-270 
Coulomb friction and, 273-274 Index, 783 
defined, 257, 258 
error constants and, 265 
linear continuous-data control systems and, 
258-272 
nonlinear system elements and, 272-274 
nonunity feedback and, 266-272 
parabolicwfunction input and, 263-264, 
268 
ramp-function input and, 262-263, 268 
step-function input and, 261-262, 267 
system configuration and, 258-259 
unity feedback systems and, 260-266 
Steady-state responses, 253, 254 
insignificant poles and, 313-314 
position-control system and, 298 
of third-order attitude-control system, 304 
Steel-rolling process, 231-232 
Steering control, of automobile, 4 
Step responses. See Unit-step responses 
Step-function input. 255 
steadywstate error with, 261-262. 267 
Stephan-Boltzmann law, 179 
Stiffness. See Spring constant 
Sum and difference (theorem}, 54, 56 
Sums/differences of signals, 173-174 
Sun-seeker control system, 217-220, 
548-554 
ACSYS/MATLAB tools and, 645-647 
block diagram of, 220, 537 
Bode plots of forward-path transfer function 
of, 552 
Bode plots of phase-lead controller in, 
552 
compensated. 557. 568 
coordinate system of, 218. 219 
de motor in, 218, 220 
error discriminator of, 218-219 
feedforward compensators and, S89-S90 
forward compensators and, SS9-590 
frequency-domain design, 551-554 
integral controller and, 737-738 
lead-lag controller and, 574-576 
minor-Joop feedback controller and. 603-
604 
phase-lag controller and, 566-574 
phase-lead controller and, 537-554 
robust controllers and, 591-599 
root contours of, 540, 541, 570 
root loci of. 567 
schematic diagram of, 218 
sensitivity considerations, 559-561 
servoamplifier of, 218, 220 
state feedback and, 733-735 
tachometer of. 218, 220 
thir<l-urdt::r, 548-554 
time-domain design, 548-55 l 
two-stage phase-lead controller and, 556-
559 
uncompensated, 557, 568 
unit-step responses of, 538, 551, 560, 568 
Sun-tracking control systems, 4-5 
Superposition principle, 11, 71, 73, 115, 173, 
176. 222. 291,358,674 
Suppressed..carrier-modulated signal, 193-
194 
Surface-wound PM de motors. 200 
784 ._ Index 
Symbolic Tool 
lvtATLAB, 53,64, 83,84, 741. 748 
Transfer Function, 54, 77, 84-85, 86, 744, 
748,750,754 
Symbols. See Units/symbols 
Symmetry of root loci, 378 
System with disturbance input, 260 
System error, 258. See also Steady.state en-ors 
T 
Tachometer constant, 195 
Tachometer.feedback control, 601-602 
Tachometers. 194-195 
modeling of, 195 
position.control system with. 195 
sun•seeker control system and, 218, 220 
transfer function of, 195 
velocity.control system with, 194 
Taylor series, 17, 182 
liberalized flow equations and, 608 
linearization and, 207, 208 
Temperature. symbol/units for, 179, 189 
Temperature control, of air-flow system, 243-
244 
Ten-turn rotary potentiometer, 1891 190 
Testing methods 
for controllability, 717-719 
for observability, 720 
tfcal (Transfer Function Calculator), 86, 741, 
751 
tfrouth (Routh-Hurwitz Stability Routine), 77, 
86-90 
tfsym (Transfer Function Symbolic Tool), 54, 
77, 84-85. 86. 744, 748-750, 754 
Theorems 
complex convolution. 56. 57 
complex shifting, 56 
on controllability/observability, 723-725 
differentiation, 54, 56 
final-value, 55-56 
initial-value, 55, 56 
integration, 55, 56 
of Laplace transform, 54-57 
multiplication by a constant. 54, 56 
real convolution, 56, 57 
shift in time, 55, 56 
sum and difference, 54, 56 
Thermal expansion coefficient, 182 
Thermal lever, 237, 238 
Thermal resistance, 178 
Thermal systems, 177-180 
conduction in, 178 
convection in, 178-179 
electrical equivalents for. 216 
properties, 179 
radiation in. 179 
Third-order attitude-control system (aircraft), 
300-304. See also Attitude-control 
system 
frequency·domain design, 509-511, 526-
528. 531-532 
PD controller and.506-511 
PI controller and. 523-528 
PID controller and, 529-532 
root loci of. 302 
steady-state response of. 304 time response of, 300-304 
time.domain design, 506-508, 529-530 
transient response of, 301 
unit-step responses of. 303 
Third-order system, with forward-path transfer 
function 
magnification of. 425 
unit-step responses of, 425 
Throttle angle. 5 
Throttle lever. 242 
Time constant, 63, 171, 188 
electrical, amplifier-motor system and. 217, 
294 
low-time-constant properties and, 198 
mechanical, motor-load system and, 217, 
294 
motor electric, 290, 359 
motor-mechanical, 291 
of pneumatic system, 214-215 
prototype first.order system and, 274 
symbol/unit for, 180, 189 
transient response and, 320 
Time delays. See also Delay time 
Bode plots and, 42-43, 458-459 
systems with, 205-207 
Time responses. 64. 67, 253 
continuous data systems. 253-254 
of prototype first-order system. 274-275 
test signals for, 254-256 
of third-order attitude·control system, 300-
304 
to unit-ramp input, 298-300 
Time·delay function, approximation of, 206 
Time·domain analysis, 253-336 
of aircraft position•control system. 293-304 
frequency·domain analysis v., 409 
parabolic-function input and, 256 
ramp-function input and, 255-256 
step-function input and, 255 
test signals and. 254-256 
unit-step response and, 256-257 
Time.domain design 
frequency-domain design v., 488,492 
PD controllers and, 494-496. 498-505 
performance specifications. 487, 488 
phase-lag controller and, 561-563, 566-569 
phase-lead controller and. 534-535, 537-
543, 548-554 
PI controllers and, 513-514, 516-520, 523-
528 
second-order aircraft attitude control 
system, 498-503, 516-520 
speed-control system and, 584 
third-order aircraft attitude control system, 
506-508, 529-530 
third-order sun-seeker control system, 548-
551 
time-domain characteristics in, 492 
Time-invariant feedback control systems, 12-
13 
Time-varying feedback control systems, 12-
13 
Timing belt, over pulley, 161, 162 
Toolboxes. See also MATLAB 
2-1-1, 21 
2-1-2, 25 2·2-1, 29 
2-2·2, 33 
2·2-3, 42 
2-2-4, 43 
2-2-5, 45 
2-2-6, 46 
2.4.1, 54 
2-5-1, 58 
2-5-2, 60 
2-6-1, 64 
2-6-2. 67 
2-7·1, 69 
2-13-1, 80 
2-13-2, 83 
3-3-1. 130-131 
3-3-2. 132 
4-1-1. 153-154 
4-2-1, 167-168 
4-2-2, 169-170 
5·4-1, 259 
5-4-2, 265-266 
5.4.3, 271-272 
5·6-1, 277 
5-6·2, 288 
5-8-1, 296 
5-8-2. 300 
5-8-3, 303 
5.9.1, 306 
5.9 .. 2, 308 
5-9·3, 311 
5-11-1, 316 
5-11·2, 319 
7-3-1, 380 
7-3-2, 384 
7-4-1, 387 
74-2, 389 
74-3, 391 
7-5·1, 395 
7-5-2, 397 
7-5·3, 400 
8-2·1, 414-415 
8-2·2, 417 
8-3-1, 422 
8-3-2. 424 
8-3-3. 424 
8-4-1, 426 
8·8-1, 441 
8-8-2, 442 
8-8-3, 443 
8-H, 448 
8·10-1, 449 
8-11-1, 457 
9-2·1, 498 
9.2-2. 502 
9-2-3. 502-503 
9-2·4, 503 
9-2-5, 506 
M-6, 510 
9-2-7, 511 
9+1, 519 
9-3-2, 520 
9-3-3, 522 
9-3-4, 527 
94-1. 529 
9-5-1. 539 
9-5-2, 540 
9-5-3. 542-543 
9-54, 545 
9-5-S. 546 
9-5-6, 550 
9-5-7, 553 
9-5-8. 556 
9-5-9, 559 
9-10-1, 592 
9-10-2. 594 
9-10-3, 594-595 
9-13-1, 620 
9-13-2, 624 
9-13-3. 625 
9-13-4. 628 
9-13-5, 630 
Torque. 157, 159 
Torque constant, 202, 204,216.223, 245, 247, 
249. 339, 599. 659, 666, 668, 738. 757, 
765 
back emf constant i· •• 204-205 
Torque production. in de motor. I 99 
Torque torsional spring system, 158 
Torque-angle curve of motor/closed-loop 
system, 273 
Torque-inertia system, 157 
Torsional spring, 158 
Torsio11aJ spring constant, 158 
Traction system, train in. 248-249 
Trailer, vehicle and, 227 
Train, in traction system, 248-249 
Train controller 
block diagram, 138 
exercise, 226 
Trains, gear. See Gear trains 
Transfer Function Calculator (tfcal). 86, 741, 
751 
Transfer Function Symbolic Tool (tfsym). 54. 
77, 84-85. 86,744. 748-750. 754 
Transfer functions, 26. 67, 68, 70-72, 106. See 
also PIO controHers 
from block diagrams, MATLAB and, 129-
132 
charactelistic equations from. 696 
comrollability/obscrvability, relationship 
among. 721-723 
decompositions of, 678, 707-714 
definition of. 70 
dominant poles/zeros of, 311-3 I 4 
frequency-domain analysis and, 409-4 IO 
impulse response and. 67-69 
inverting op-amp, 175-177 
minimum~phase, 47-48, 435-437 
multivnriable systems. 4, 71-72, 117-118, 
673-674 
nnnminimum-phasc, 47-48 
op*amp reaJization of, 176-177 
in parallel. block diagram of, I 08 
proper, 71 
p1·opertics of, 71 
in series, block diagram of, 107. I 08 
single-input, single-output systems. 70-71 
state diagrams from, 6 79-680 
state equations v., 693-695 
state variable analysis and, 673-674 
of tachometers. 195 
Transient responses, 253. 254, 487 feedback and, 11 
of prototype second-order system, 275-288 
of third-order attitude-control system, 30 I 
time constant and, 320 
Translational mechanical system properties, 
151 
Translational motion, 148-157 
acceleration and, 148 
displacement and, 148 
force-mass system, 149 
friction for, 149-150 
hydraulic control system and, 6 I 3-615 
rotational motion. conversion between. J 61 
velocity and. 148 
Transportation lags, dynamic systems with, 
205-207 
Turboprop engine. 135 
signals of, coupling between, 143, 144 
Turbulent resistance, 185 
Tutorial, plotting., 647-648 
Two degrees of freedom (2-DOF) 
quarter-car model, 220, 221, 358 
spring-mass system, 156 
Two-stage phase-lead controller, 555-559 
Two-tank system. See DoubJc-tank liquid­
level system 
u 
U tube manometer. 240 
Uncompensated phase-lag system 
Bode plot of, 571 
root loci of, 564 
Uncompensated sun-seeker system 
Bode plots of. 557 
unit-step responses of, 568 
Unit impulse response, 68, 69. See also Dirac 
delta function 
Unit-ramp input, 298-300 
attitude-control system and, 299 
time responses to, 298-300 
Units/symbols 
acceleration, 15 I 
angular acceleration, 159 
angular displacement, 159 
angular velocity, 159 
British. 148, 204 
capacitance (electrical system). J 72 
capacitance (fluid/pneumatic system), 189 
capacitance (hydraulic), 189 
capacitance (thermal system). I 79 
charge. 172 
distance, 151 
electrical system properties. 172 
energy (electrical system). I 72 
energy (heat stored), 179, 189 
energy (rotational mechanical system 
property), 159 
force. 151 
heat flow rate, 179 
inductance, ) 72 
inertia. 159 
mass, 151 
mass flow rate, I 89 
power, 172 
resistance (electrical system). t 72 
resistance (hydraulic), 189 Index 785 
resistance (thermal system), 179 
spring constant. 151. 159 
temperature. 179, I 89 
thermal system properties, 179 
time constant, 180. 189 
torque. 159 
translational mechanical system properties, 
151 
velocity, 151 
viscous friction coefficient. 159 
voltage, 172 
volume flow rate, 189 
Unit-step responses 
of attitude-control system, 295, 50J 
delay time and, 257 
frequency responses/Nyquist plots. 
correlation among, 450-451 
maximum overshoot and. 256-257, 280-
283 
position-control system and, 294-297 
of prototype first-order system, 274 
of prototype second-order system, 276 
rise time and, 257 
of second-order system with fo1ward-path 
transfer function, 423 
settling time and, 257 
of speed-control system, 585 
of sun-seeker system, 538, 568 
of third-order attitude~control system, 303 
of third-order sun-seeker control system, 
551, 560 
time-domain specifications and. 256-257 
Unity feedback loop, I 09 
Unity feedback systems 
poles added to f01ward-path transfer 
function, 305-307 
steady-state error and, 260-266 
Unstable, 76 
V 
Variable load, hydraulic control system and, 
616-617 
Vector-matrix representation, of state 
equations, 682-684 
Vehicle, with trailer, 227 
Vehicle suspension system. 225, 336 
Velocity 
angular, 157, 159 
symbol/units, 151 
translational motion and. 148 
Velocity-control system 
MATLAB and, 259 
with tachometer feedback. I 94 
Vibration absorber, 234 
Virtual experiments. See de motor model: 
Experiments 
Virtual ground. 173 
Virtual Lab, 12, 223, 340-344 
Experiment menu for, 342 
Virtual prototyping. 2 
Virtual short, 173 
Viscous friction. 149-150. 158 
dashpot for, 149, 150 
graphical representation, 150 
Viscous friction coefficient, I 51, 159 
Voice-coil motor, 247 
786 _., Index 
Voltage. units for, 172 
Voltage divider. 171-172 
Voltage law, 165-166. 170 
Volume, conservation of. 181 
Volume flow rate, 18 l 
mass flow rate v.. 182 
symbol/units, 189 
w 
Washing machine, 6 
Water extraction. solar power and, 4-5, 6 
Word processor z position-control system of, 136 
printwheel of, 197. 198 
Zero initial conditions, 70 
Zero-input response, 73 
Zero-input stability. 74-75 
Zero-pole-gain models, 21. See also Pole-zero 
configuration 
Zero-state response, 72 
Zeros 
added to L(s) plot, 448-449 closed-loop transfer function and. 
308-309 
definition of, 20 
dominant, of transfer functions, 
311-314 
forward-path transfer function and, 
309-311, 418-424 
graphical representation of, 21 
at origin, 34-36 
quadratic, 39-41 
simple, 1 +jwT, 37-38 
zpk, 21, 45, 131. 259,265,457 
Appendix-A_1 05/14/2009 1
"APPENDIXA
Elementary Matrix Theory
and Algebra
"A-1 ELEMENTARY MATRIX THEORY
In the study of modern control theory, it is often desirable to use matrix notation to simplify
complex mathematical expressions. The matrix notation usually makes the equations mucheasier to handle and manipulate.
As a motivation to the reason of using matrix notation, let us consider the following set
ofnsimultaneous algebraic equations:
a
11x1þa12x2þ /C1/C1/C1 þ a1nxn¼y1
a21x1þa22x2þ /C1/C1/C1 þ a2nxn¼y2
/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1/C1a
n1x1þan2x2þ /C1/C1/C1 þ annxn¼yn(A-1)
We may use the matrix equation
Ax¼y (A-2)
as a simpliﬁed representation of Eq. (A-1). The symbols A,x, and yare deﬁned as
matrices , which contain the coefﬁcients and variables of the original equations as their
elements. In terms of matrix algebra, which will be discussed shortly, Eq. (A-2) can bestated as the product of the matrix Aandvector xis equal to the vector y. The three
matrices involved are deﬁned as
A¼a
11 a12/C1/C1/C1 a1n
a21 a22/C1/C1/C1 a2n
......}...
an1an2/C1/C1/C1 ann2
66643
7775(A-3)
x¼x1
x2
...
xn2
66643
7775(A-4)
y¼y1
y2
...
yn2
66643
7775(A-5)
A-1
Appendix-A_1 05/14/2009 2
which are simply bracketed arrays of coefﬁcients and variables. These examples of
matrices prompted the following deﬁnition of a matrix.
A-1-1 Deﬁnition of a Matrix
A matrix is a collection of elements arranged in a rectangular or square array . There are
several ways of bracketing a matrix. In this text, the square brackets, such as those in Eqs.(A-3) through (A-5), are used to represent matrices. It is important to distinguish between amatrix and a determinant . The basic characteristics of these are listed as follows:
Some important deﬁnitions of matrices are given in the following paragraphs.
Matrix Elements: When a matrix is written
A¼a
11 a12 a13
a21 a22 a23
a31 a32 a332
435 (A-6)
where a
ijis deﬁned as the element in the ithrowand the jthcolumn of the matrix. As a rule,
we always refer to the row ﬁrst and the column last.
Order of a Matrix: The order of a matrix refers to the total number of rows and
columns of the matrix . For example, the matrix in Eq. (A-6) has three rows and three
columns and is called a 3 /C23 (three-by-three) matrix. A matrix with nrows and mcolumns
is termed n/C2m,o rnbym.
Square Matrix: A square matrix is one that has the same number of rows as columns .
Column Matrix: A column matrix is one that has one column and more than one row,
that is, an m /C21matrix, m >1. Quite often, a column matrix is referred to as a column
vector or simply an m-vector if there are mrows and one column. The matrix in Eq. (A-4)
is a typical n-vector.
Row Matrix: A row matrix is one that has one row and more than one column, that is, a
1/C2n matrix, where n >1. A row matrix can also be referred as a row-vector .
Diagonal Matrix: A diagonal matrix is a square matrix with a ij=0 for all i 6¼j.
Examples of a diagonal matrix are
a11 00
0 a22 0
00 a332
43550
03/C20/C21
Unity Matrix (Identity Matrix): A unity matrix is a diagonal matrix with all the
elements on the main diagonal (i¼j)equal to 1 . A unity matrix is often designated byMatrix Determinant
/C15An array of numbers or elements with n
rows and mcolumns.
/C15Does not have a value, although a square
matrix ( n=m) has a determinant./C15An array of numbers or elements with n
rows and ncolumns (always square).
/C15Has a value.A-2"Appendix A. Elementary Matrix Theory and Algebra
Appendix-A_1 05/14/2009 3
IorU. An example of a unity matrix is
I¼100
0100012
435 (A-7)
Null Matrix: A null matrix is one whose elements are all equal to zero.
Symmetric Matrix: A symmetric matrix is a square matrix that satisﬁes the condition a
ij
¼ajifor all i and j . A symmetric matrix has the property that, if its rows are interchanged with
its columns, the same matrix is obtained. Two examples of the symmetric matrix are
A¼65 1
50 1 011 0/C0 12
435B¼1/C04
/C041/C20/C21
(A-8)
Determinant of a Matrix: With each square matrix, a determinant having the same
elements and order as the matrix may be deﬁned. The determinant of a square matrix Ais
designated by
detA¼D
A¼Ajj (A-9)
For example, the determinant of the matrix in Eq. (A-6) is
Ajj¼a11 a12 a13
a21 a22 a23
a31 a32 a33/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12(A-10)
Cofactor of a Determinant Element: Given any nth-order determinant Ajj,the
cofactor A
ijof any element a ijis the determinant obtained by eliminating all elements
of the ith row and jth column and then multiplied by (/C01)i+j. For example, the cofactor of
the element a11ofAjjin Eq. (A-10) is
A11¼/C0 1ðÞ1þ1a22 a23
a32 a33/C12/C12/C12/C12/C12/C12/C12/C12¼a
22a33/C0a23a32 (A-11)
In general, the value of a determinant can be written in terms of the cofactors. Let Abe an
n/C2nmatrix, then the determinant of Acan be written in terms of the cofactor of any row or
the cofactor of any column. That is,
detA¼Xn
j¼1aijAij i¼1;or 2;...;orn ðÞ (A-12)
or
detA¼Xn
i¼1aijAij j¼1;or 2;...;orn ðÞ (A-13)
"EXAMPLE A-1-1 The value of the determinant in Eq. (A-10) is
detA¼Ajj ¼ a11A11þa12A12þa13A13
¼a11a22a33/C0a23a32 ðÞ /C0a12a21a33/C0a23a31 ðÞ þa13a21a32/C0a22a31 ðÞ(A-14)
Singular Matrix: A square matrix is said to be singular if the value of its determinant is zero .I fa
square matrix has a nonzero determinant, it is called a nonsingular matrix . When a matrix isA-1 Elementary Matrix Theory 3A-3
Appendix-A_1 05/14/2009 4
singular, it usually means that not all the rows or not all the columns of the matrix are independent of
each other. When the matrix is used to represent a set of algebraic equations, singularity of the matrixmeans that these equations are not independent of each other.
3
"EXAMPLE A-1-2 Consider the following set of equations:
2x1/C03x2þx3¼0
/C0x1þx2þx3¼0
x1/C02x2þ2x3¼0(A-15)
The third equation is equal to the sum of the ﬁrst two. Thus, these three equations are not completely
independent. In matrix form, these equations may be written as
Ax¼0 (A-16)
where
A¼2/C031
/C011 1
1/C0222
435x¼x
1
x2
x32
435 (A-17)
and0is a 3 /C21 null vector. The determinant of Ais 0, and, thus, the matrix Ais singular. In this case,
the rows of Aare dependent.
Transpose of a Matrix: The transpose of a matrix Ais deﬁned as the matrix that is obtained by
interchanging the corresponding rows and columns in A. LetAbe an n/C2mmatrix that is represented
by
A¼a
ij/C2/C3
n;m(A-18)
The transpose of A, denoted by A0, is given by
A0¼transpose of A¼aji/C2/C3
m;n(A-19)
Notice that the order of Aisn/C2m, but the order of A0ism/C2n. 3
"EXAMPLE A-1-3 Consider the 2 /C23 matrix
A¼32 1
0/C015/C20/C21
(A-20)
The transpose of Ais obtained by interchanging the rows and the columns.
A0¼30
2/C01
152
435 (A-21)
3
Some Properties of Matrix Transpose
1. A0ðÞ0¼A (A-22)
2. kAðÞ0¼kA0;where kis a scalar (A-23)
3. AþB ðÞ0¼A0þB0(A-24)
4. ABðÞ0¼B0A0(A-25)A-4"Appendix A. Elementary Matrix Theory and Algebra
Appendix-A_1 05/14/2009 5
Adjoint of a Matrix: LetAbe a square matrix of order n. The adjoint matrix of A,
denoted by adjA, is deﬁned as
adjA¼Aijof det A/C2/C3 0
n;n(A-26)
where A ijdenotes the cofactor of a ij.
"EXAMPLE A-1-4 Consider the 2 /C22 matrix
A¼a11 a12
a21 a22/C20/C21
(A-27)
The cofactors are A11¼a22,A12¼/C0a21,A21¼/C0a12, and A22¼a11. Thus, the adjoint matrix of Ais
adjA¼A11 A12
A21 A22/C20/C210
¼a22/C0a21
/C0a12 a11/C20/C210
¼a22/C0a12
/C0a21 a11/C20/C21
(A-28)
Trace of a Square Matrix: Given an n /C2n matrix with elements a ij, the trace of A ,denoted as tr
(A),is deﬁned as the sum of the elements on the main diagonal of A;that is
trAðÞ¼Xn
i¼1aii (A-29)
The trace of a matrix has the following properties:
1.trA0ðÞ ¼ trAðÞ (A-30)
2.Forn/C2nsquare matrices AandB,
trAþB ðÞ ¼ trAðÞ þ trBðÞ (A-31)
3
"A-2 MATRIX ALGEBRA
When carrying out matrix operations, it is necessary to deﬁne matrix algebra in the form of
addition, subtraction, multiplication, and division.
A-2-1 Equality of Matrices
Two matrices AandBare said to be equal to each other if they satisfy the following
conditions:
1.They are of the same order.
2.The corresponding elements are equal; that is,
aij¼bijfor every iand j (A-32)
"EXAMPLE A-2-1
A¼a11 a12
a21 a22/C20/C21
¼B¼b11 b12
b21 b22/C20/C21
(A-33)
implies that a11¼b11,a12¼b12,a21¼b21,a22¼b22. 3A-2 Matrix Algebra 3A-5
Appendix-A_1 05/14/2009 6
A-2-2 Addition and Subtraction of Matrices
Two matrices AandBcan be added or subtracted to form A/C6Bif they are of the same
order. That is,
A/C6B¼aij/C2/C3
n;m/C6bij/C2/C3
n;m¼C¼cij/C2/C3
n;m(A-34)
where
cij¼aij/C6bijfor all iand j: (A-35)
The order of the matrices is preserved after addition or subtraction.
"EXAMPLE A-2-2 Consider the matrices
A¼32
/C014
0/C012
435B¼03
/C012
102
435 (A-36)
which are of the same order. Then the sum of AandBis
C¼AþB¼3þ02 þ3
/C01/C014 þ2
0þ1/C01þ02
435¼35
/C026
1/C012
435 (A-37)
3
A-2-3 Associative Law of Matrix (Addition and Subtraction)
The associative law of scalar algebra still holds for matrix addition and subtraction. That is,
AþB ðÞ þ C¼AþBþC ðÞ (A-38)
A-2-4 Commutative Law of Matrix (Addition and Subtraction)
The commutative law for matrix addition and subtraction states that the following matrix
relationship is true:
AþBþC¼BþCþA¼AþCþB (A-39)
as well as other possible commutative combinations.
A-2-5 Matrix Multiplication
The matrices AandBmay be multiplied together to form the product ABif they are
conformable . This means that the number of columns of Amust equal the number of rows
ofB. In other words, let
A¼aij/C2/C3
n;pB¼bij/C2/C3
q;m (A-40)
Then AandBare conformable to form the product
C¼AB¼aij/C2/C3
n;pbij/C2/C3
q;m¼cij/C2/C3
n;m(A-41)
if and only if p¼q.The matrix Cwill have the same number of rows as Aand the same
number of columns as B.A-6"Appendix A. Elementary Matrix Theory and Algebra
Appendix-A_1 05/14/2009 7
It is important to note that AandBmay be conformable to form AB, but they may not
be conformable for the product BA, unless in Eq. (A-41), nalso equals m.This points out
an important fact that the commutative law is not generally valid for matrix multiplica-
tion. It is also noteworthy that, even though AandBare conformable for both ABandBA,
usually AB6¼BA. The following references are made with respect to matrix manipulation
whenever they exist:
AB¼Apostmultiplied by BorBpremultiplied by A (A-42)
A-2-6 Rules of Matrix Multiplication
When the matrices A(n/C2p) and B(p/C2m) are conformable to form the matrix C¼AB,
theijth element of C,cij, is given by
cij¼Xp
k¼1aikbkj (A-43)
fori¼1, 2, . . . , n, and j¼1, 2, . . . , m.
"EXAMPLE A-2-3 Given the matrices
A¼aij/C2/C3
2;3B¼bij/C2/C3
3;1 (A-44)
the two matrices are conformable for the product ABbut not for BA. Thus,
AB¼a11 a12 a13
a21 a22 a23/C20/C21 b11
b21
b312
435¼a
11b11þa12b21þa13b31
a21b11þa22b21þa23b31/C20/C21
(A-45)
3
"EXAMPLE A-2-4 Given the matrices
A¼3/C01
01
202
435B¼10 /C01
21 0/C20/C21
(A-46)
the two matrices are conformable for ABandBA.
AB¼3/C01
01
202
43510/C0 1
21 0/C20/C21
¼1/C01/C03
210
20 /C022
435 (A-47)
BA¼10/C0 1
21 0/C20/C21 3/C01
01
202
435¼1/C01
6/C01/C20/C21
(A-48)
Therefore, even though ABandBAboth exist, they are not equal. In fact, in this case the products are
not of the same order.
Although the commutative law does not hold in general for matrix multiplication, the
associative anddistributive laws are valid. For the distributive law, we state that
ABþC ðÞ ¼ ABþAC (A-49)
if the products are conformable. For the associative law,
ABðÞ C¼AB CðÞ (A-50)
if the product is conformable.
3A-2 Matrix Algebra 3A-7
Appendix-A_1 05/14/2009 8
A-2-7 Multiplication by a Scalar k
Multiplying a matrix Aby any scalar k is equivalent to multiplying each element of Aby k.
A-2-8 Inverse of a Matrix (Matrix Division)
In the algebra of scalar quantities, when we write y=ax, it implies that x=y/ais also true.
In matrix algebra, if Ax=y, then it may be possible to write
x¼A/C01y (A-51)
where A/C01denotes the matrix inverse ofA. The conditions that A/C01exists are as follows:
1.Ais a square matrix.
2.Amust be nonsingular.
3.IfA/C01exists, it is given by
A/C01¼adjA
Ajj(A-52)
"EXAMPLE A-2-5 Given the matrix
A¼a11 a12
a21 a22/C20/C21
(A-53)
the inverse of Ais given by
A/C01¼adjA
Ajj¼a22/C0a12
/C0a21 a11/C20/C21
a11a22/C0a12a21(A-54)
where for Ato be nonsingular, Ajj6¼0;ora11a22/C0a12a216¼0.
Eq. (A-54) shows that adj Aof a 2 /C22 matrix is obtained by interchanging the two elements on the
main diagonal and changing the signs of the elements off the diagonal of A. 3
"EXAMPLE A-2-6 Given the matrix
A¼a11 a12 a13
a21 a22 a23
a31 a32 a332
435 (A-55)
to ﬁnd the inverse of A, the adjoint of Ais
adjA¼a
22a33/C0a23a32 /C0a12a33/C0a13a32 ðÞ a12a23/C0a13a22
/C0a21a33/C0a23a31 ðÞ a11a33/C0a13a31/C0a11a23/C0a21a13 ðÞ
a21a32/C0a22a31 /C0a11a32/C0a12a31 ðÞ a11a22/C0a12a212435 (A-56)
The determinant of Ais
Ajj¼a
11a22a33þa12a23a31þa13a32a21/C0a13a22a31/C0a12a21a33/C0a11a23a32 (A-57)
3
Some Properties of Matrix Inverse
1.AA/C01¼A/C01A¼I (A-58)
2.A/C01/C0/C1 /C01¼A (A-59)A-8"Appendix A. Elementary Matrix Theory and Algebra
Appendix-A_1 05/14/2009 9
3.In matrix algebra, in general, AB¼ACdoes not necessarily imply that B¼C.
The reader can easily construct an example to illustrate this property. However, if
Ais a square, nonsingular matrix, we can premultiply both sides of AB¼ACby
A/C01. Then,
A/C01AB¼A/C01AC (A-60)
which leads to B¼C.
4.IfAandBare square matrices and are nonsingular, then
ABðÞ/C01¼B/C01A/C01(A-61)
A-2-9 Rank of a Matrix
The rank of a matrix Ais the maximum number of linearly independent columns of A;that
is, it is the order of the largest nonsingular matrix contained in A.
"EXAMPLE A-2-7 Several examples on the rank of a matrix are as follows:
01
00"#
rank ¼105143032"#
rank ¼2
392
130
2612
6643
775rank ¼2300
120
0012
6643
775rank ¼3
The following properties are useful in the determination of the rank of a matrix. Given an n/C2m
matrix A,
1.Rank of A
0¼Rank of A.
2.Rank of A0A¼Rank of A.
3.Rank of AA0¼Rank of A.
Properties 2 and 3 are useful in the determination of rank; because, A0AandAA0are always square,
the rank condition can be checked by evaluating the determinant of these matrices. 3
"A-3 COMPUTER-AIDED SO LUTIONS OF MATRICES
Many commercial software packages such as MATLAB, Maple, andMATHCAD contain
routines for matrix manipulations.
"REFERENCES
1. R. Bellman, Introduction to Matrix Analysis, McGraw-Hill, New York 1960.
2. F. Ayres, Jr., Theory and Problems of Matrices , Shaum’s Outline Series, McGraw-Hill, New York 1962.References 3A-9
Appendix-B_1 05/14/2009 1
"APPENDIXB
Difference Equations
"B-1 DIFFERENCE EQUATIONS
Because digital controllers are frequently used in control systems, it is necessary to
establish equations that relate digital and discrete-time signals. Just as differentialequations are used to represent systems with analog signals, difference equations areused for computers or systems utilizing discrete data. Difference equations are also used to
approximate differential equations, because the former are more easily programmed on a
computer and are easier to solve.
A linear nth-order difference equation with constant coefﬁcients can be written as
ykþnðÞ þ a
n/C01ykþn/C01 ð Þþ/C1/C1/C1þ a1ykþ1ðÞ þ a0ykðÞ ¼ fkðÞ ð B-1Þ
where y(i),i¼k;kþ1;...; kþndenotes the discrete dependent variable yat the ith
instant if the independent variable is time. In general, the independent variable can be anyreal quantity.
Similar to the case of the analog systems, it is convenient to use a set of ﬁrst-order
difference equations, or state equations, to represent a high-order difference equation. For
the difference equation in Eq. (B-1), if we let
x
1kðÞ ¼ ykðÞ
x2kðÞ ¼ x1kþ1ðÞ ¼ ykþ1ðÞ
...
xn/C01kðÞ ¼ xn/C02kþ1ðÞ ¼ ykþn/C02 ðÞ
xnkðÞ ¼ xn/C01kþ1ðÞ ¼ ykþn/C01 ðÞðB-2Þ
then by equating the highest-order term to the rest, the equation is written as
xnkþ1ðÞ ¼ /C0 a0x1kðÞ /C0 a1x2kð Þ/C0/C1/C1/C1/C0 an/C01xnkðÞ þ fkðÞ ð B-3Þ
The ﬁrst n/C01 state equations are taken directly from the last n/C01 equations in Eq. (B-2), and
the last one is given by Eq. (B-3). The nstate equations are written in vector-matrix form:
xkþ1ðÞ ¼ Ax kðÞ þ BukðÞ ðB-4Þ
where
xkðÞ ¼x1kðÞ
x2kðÞ
...
xnkðÞ2
66643
7775ðB-5Þ
B-1
Appendix-B_1 05/14/2009 2
is the n/C21 state vector, and
A¼010 /C1/C1/C1 0
001 /C1/C1/C1 0
.........}...
000 0 1
/C0a0/C0a1/C0a2/C1/C1/C1 /C0 an/C012
666643
77775B¼0
0
...
0
12
666643
77775ðB-6Þ
and ukðÞ ¼ fkðÞ.
"REFERENCES
1. C. R. Wylie, Jr., Advanced Engineering Mathematics, 2nd Ed. McGraw-Hill, New York 1960.
2. B. C. Kuo, Linear Networks and Systems, McGraw-Hill, New York 1967.B-2"Appendix B. Difference Equations
Apeendix-C_1 05/14/2009 1
"APPENDIXC
Laplace Transform Table
Laplace Transform F(s) Time Function f(t)
1 Unit-impulse function dtðÞ
1
sUnit-step function ustðÞ
1
s2Unit-ramp function t
n!
snþ1tnn¼positive integerðÞ
1
sþae/C0at
1
sþaðÞ2te/C0at
n!
sþaðÞnþ1tne/C0atn¼positive integerðÞ
1
sþaðÞ sþbðÞ1
b/C0ae/C0at/C0e/C0bt/C0/C1
a6¼bðÞ
s
sþaðÞ sþbðÞ1
b/C0abe/C0bt/C0ae/C0at/C0/C1
a6¼bðÞ
1
ssþaðÞ1
a1/C0e/C0atðÞ
1
ssþaðÞ21
a21/C0e/C0at/C0ate/C0atðÞ
1
s2sþaðÞ1
a2at/C01þe/C0atðÞ
1
s2sþaðÞ21
a2t/C02
aþtþ2
a/C18/C19
e/C0at/C20/C21
s
sþaðÞ21/C0at ðÞ e/C0at
C-1
Apeendix-C_1 05/14/2009 2
Laplace Transform F(s) Time Function f(t)
vn
s2þv2nsinvnt
s
s2þv2ncosvnt
v2
n
ss2þv2n/C0/C11/C0cosvnt
v2
nsþaðÞ
s2þv2nvnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
a2þv2nq
sinvntþu ðÞ
where u¼tan/C01vn=aðÞ
vn
sþaðÞ s2þv2n/C0/C1vn
a2þv2ne/C0atþ1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
a2þv2np sinvnt/C0u ðÞ
where u¼tan/C01vn=aðÞ
v2
n
s2þ2zvnsþv2nvnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p e/C0zvntsinvnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p
tz<1ðÞ
v2
n
ss2þ2zvnsþv2n/C0/C1 1/C01ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p e/C0zvntsinvnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p
tþu/C16/C17
where u¼cos/C01zz <1ðÞ
sv2
n
s2þ2zvnsþv2n/C0v2
nﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p e/C0zvntsinvnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p
t/C0u/C16/C17
where u¼cos/C01zz <1ðÞ
v2
nsþaðÞ
s2þ2zvnsþv2nvnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
a2/C02azv nþv2
n
1/C0z2s
e/C0zvntsinvnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p
tþu/C16/C17
where u¼tan/C01vnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p
a/C0zvnz<1ðÞ
v2
n
s2s2þ2zvnsþv2n/C0/C1 t/C02z
vnþ1
vnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p e/C0zvntsinvnﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0z2p
tþu/C16/C17
where u¼cos/C012z2/C01/C0/C1
z<1ðÞC-2"Appendix C. Laplace Transform Table
Apeendix-D_1 05/14/2009 1
"APPENDIXD
z-Transform Table
z-Transform Table
Laplace Transform Time Function z-Transform
1 Unit impulse d(t)1
1
sUnit step us(t)z
z/C01
1
1/C0e/C0Ts dTtðÞ¼X1
n¼0dt/C0nTðÞz
z/C01
1
s2t Tz
z/C01ðÞ2
1
s3t2
2T2zzþ1ðÞ
2z/C01ðÞ3
1
snþ1tn
n!lim
a!0/C01ðÞn
n!@n
@anz
z/C0e/C0aT/C20/C21
1
sþae/C0at z
z/C0e/C0aT
1
sþaðÞ2te/C0atTze/C0aT
z/C0e/C0aT ðÞ2
a
ssþaðÞ1/C0e/C0at1/C0e/C0aT/C0/C1
z
z/C01ðÞ z/C0e/C0aT ðÞ
v
s2þv2sinvt zsinvT
z2/C02zcosvTþ1
v
sþaðÞ2þv2e/C0atsinvt ze/C0aTsinvT
z2/C0ze/C0aTcosvTþe/C02aT
s
s2þv2cosvt zz/C0cosvT ðÞ
z2/C02zcosvTþ1
sþa
sþaðÞ2þv2e/C0atcosvt z2/C0ze/C0aTcosvT
z2/C02ze/C0aTcosvTþe/C02aT
D-1
Appendix-E_1 05/14/2009 1
"APPENDIXE
Properties and Construction
of the Root Loci
The following properties of the root loci are useful for constructing the root loci manually
and for understanding the root loci. The properties are developed based on the relationshipbetween the poles and zeros of G(s)H(s) and the zeros of 1 þG(s)H(s), which are the roots
of the characteristic equation.
"E-1K¼0A N D K¼/C6 1 POINTS
The K ¼0points on the root loci are at the poles of G (s)H(s).
The K ¼/C6 1 points on the root loci are at the zeros of G (s)H(s).
The poles and zeros referred to here include those at inﬁnity, if any.
The reason for this is seen from the condition of the root loci given by Eq. (7-12)
G1sðÞH1sðÞ¼/C01
K(E-1)
As the magnitude of Kapproaches zero, G1(s)H1(s) approaches inﬁnity, so smust
approach the poles of G1(s)H1(s)o rG(s)H(s). Similarly, as the magnitude of Kapproaches
inﬁnity, smust approach the poles of G(s)H(s).
"EXAMPLE E-1-1 Consider the equation
ssþ2ðÞ sþ3ðÞ þ Ksþ1ðÞ ¼ 0 (E-2)
When K¼0, the three roots of the equation are at s¼0,/C02, and /C03. When the magnitude of Kis inﬁnite,
the three roots of the equation are at s¼/C01,1and1. It is useful to consider that inﬁnity in the s-plane
is a point concept. We can visualize that the ﬁnite s-plane is only a small portion of a sphere with an
inﬁnite radius. Then, inﬁnity in the s-plane is a point on the opposite side of the sphere that we face.
Dividing both sides of Eq. (E-2) by the terms that do not contain K, we get
1þGsðÞHsðÞ¼ 1þKsþ1ðÞ
ssþ2ðÞ sþ3ðÞ¼0 (E-3)
which gives
GsðÞHsðÞ¼Ksþ1ðÞ
ssþ2ðÞ sþ3ðÞ(E-4)
E-1
Appendix-E_1 05/14/2009 2
Thus, the three roots of Eq. (E-2) when K¼0 are the same as the poles of the function G(s)H(s).
The three roots of Eq. (E-2) when K¼/C6 1 are at the three zeros of G(s)H(s), including those at
inﬁnity. The three points on the root loci at which K¼0 and those at which K¼/C6 1 are shown
in Fig. E-1. 3
"E-2 NUMBER OF BRANCHES ON THE ROOT LOCI
A branch of the root loci is the locus of one root when Kvaries between /C01 and1.T h e
following property of the root loci results, since the number of branches of the root loci
must equal the number of roots of the equation.
The number of branches of the root loci of F (s)¼P(s)þKQ(s)¼0is equal to the
order of the polynomial .
Keeping track of the individual branches and the total number of branches of the
root locus diagram is important in making certain that the plot is done correctly. This is
particularly true when the root locus plot is done by a computer, since unless each
root locus branch is coded by a different color, it is up to the user to make the
distinctions.
"EXAMPLE E-2-1 The number of branches of the root loci of
ssþ2ðÞ sþ3ðÞ þ Ksþ1ðÞ ¼ 0 (E-5)
is three, since the equation is of the third order. In other words, the equation has three roots, and thus
there should be three root loci. 3
"E-3 SYMMETRY OF THE ROOT LOCI
The root loci are symmetrical with respect to the real axis of the s-plane .In general,
the root loci are symmetrical with respect to the axes of symmetry of the pole-zero
conﬁguration of G (s)H(s).
The reason behind this property is because for a polynomial with real coefﬁcients the
roots must be real or in complex-conjugate pairs. In general, if the poles and zeros of G(s)H(s)
are symmetrical to an axis in addition to the real axis in the s-plane, we can regard this axis of
symmetry as if it were the real axis of a new complex plane obtained through a linear
transformation.–1 0 –2 –3K = 0 K = 0 K = 0s-plane
Figure E-1 Roots at which K¼0 on the
root loci of s(sþ2)(sþ3)þK(sþ1)¼0.
/C15It is important to pay
attention to the symmetry
of the root loci./C15It is important to keep
track of the total number of
branches of the root loci.E-2"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 3
"EXAMPLE E-3-1 Consider the equation
ssþ1ðÞ sþ2ðÞ þ K¼0 (E-6)
Dividing both sides of the equation by the terms that do not contain K, we get
GsðÞHsðÞ¼K
ssþ1ðÞ sþ2ðÞ(E-7)
The root loci of Eq. (E-6) are shown in Fig. E-2 for K¼/C0 1 toK¼1 . Since the pole-zero
conﬁguration of G(s)H(s) is symmetrical with respect to the real axis as well as the s¼/C01 axis, the
root locus plot is symmetrical to the two axes.
As a review of all the properties of the root loci presented thus far, we conduct the following
exercise with regard to the root loci in Fig. E-2.
The points at which K¼0 are at the poles of G(s)H(s),s¼0,/C01, and /C02. The function G(s)H(s)
has three zeros at s¼1 at which K¼/C6 1 . The reader should try to trace out the three separate
branches of the root loci by starting from one of the K¼/C0 1 points, through the K¼0 point on the
same branch, and ending at K¼1 ats¼1 .
3s-plane
K > 0K  K 
 K  K K < 0
K > 0 K < 0 K = 0 K = 0 K = 0
–2 –1
K < 0 K > 0Axis of 
symmetry
K > 0 K < 0Axis of 
symmetry K0
Figure E-2 Root loci of s(sþ2)(sþ3) + K(sþ1) = 0,
showing the properties of symmetry.E-3 Symmetry of the Root Loci 3E-3
Appendix-E_1 05/14/2009 4
"EXAMPLE E-3-2 When the pole-zero conﬁguration of G(s)H(s) is symmetrical with respect to a point in the
s-plane, the root loci will also be symmetrical to t hat point. This is illustrated by the root locus
plot of
ssþ1ðÞ sþ1þj ðÞ sþ1/C0j ðÞ þ K¼0 (E-8)
shown in Fig. E-3.
3
"E-4 ANGLES OF ASYMPTOTES OF THE ROOT LOCI
AND BEHAVIOR OF THE ROOT LOCI AT | s|¼1
As shown by the root loci in Figs. E-2 and E-3, when n, the order of P(s) is not equal to m,
the order of Q(s), 2n/C0mjj of the loci will approach inﬁnity in the s-plane. The properties of
the root loci near inﬁnity in the s-plane are described by the asymptotes of the loci when
sjj!1:The angles of the asymptotes and their intersect with the real axis of the s-plane
are described as follows.
For large values of s, the root loci for K /C210 (RL) are asymptotic to asymptotes with
angles given by
ui¼2iþ1 ðÞ
n/C0mjj/C2180/C14n6¼m (E-9)
where i ¼0, 1, 2, . . . , n/C0mjj /C01;and n and m are the number of ﬁnite poles and
zeros of G (s)H(s),respectively . K 
 K 
 K K 
 K  K 
 K  K 
K = 0 K = 0
–2–1 0K = 0
K = 0
K > 0 K < 0–j1s-plane
j1
Figure E-3 Root loci of s(sþ2)(s2þ2sþ2)þK¼0,
showing the properties of symmetry.
/C15Asymptotes of root loci
refers to behavior of root
loci at sjj!1:E-4"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 5
For K /C200 (RL), the angles of the asymptotes are
ui¼2i
n/C0mjj/C2180/C14n6¼m (E-10)
where i¼0, 1, 2, . . . , n /C0mjj /C01:
"E-5 INTERSECT OF THE ASYMPTOTES (CENTROID)
The intersection of the 2n/C0mjj asymptotes of the root loci lies on the real axis of the
s-plane, at
s1¼Sfinite poles of GsðÞHsðÞ /C0 Sfinite zeros of GsðÞHsðÞ
n/C0m(E-11)
where n is the number of ﬁnite poles and m is the number of ﬁnite zeros of G (s)H(s),
respectively. The intersection of the asymptotes s1represents the center of gravity of
the root loci, and is always a real number .
Since the poles and zeros of G(s)H(s) are either real or in complex-conjugate pairs, the
imaginary parts in the numerator of Eq. (7-35) always cancel each other out. Thus, in Eq.
(E-11), the terms in the summations may be replaced by the real parts of the poles and zerosofG(s)H(s), respectively. That is,
s
1¼Sreal parts of poles of GsðÞHsðÞ /C0Sreal parts of zeros of GsðÞHsðÞ
n/C0m(E-12)
"EXAMPLE E-5-1 Consider the transfer function
GsðÞHsðÞ¼Ksþ1ðÞ
ssþ4ðÞ s2þ2sþ2 ðÞ(E-13)
which corresponds to the characteristic equation
ssþ4ðÞ s2þ2sþ2/C0/C1
þKsþ1ðÞ ¼ 0 (E-14)
The pole-zero conﬁguration of G(s)H(s) is shown in Fig. E-4. From the six properties of the root loci
discussed so far, the following information concerning the root loci of Eq. (E-14) when Kvaries from
/C01 to1is obtained:
1. K¼0: The points at which K¼0 on the root loci are at the poles of G(s)H(s):s¼0,/C04,/C01
þj, and /C01/C0j.
2. K¼/C61 : The points at which K¼/C6 1 on the root loci are at the zeros of
G(s)H(s):s¼/C01,1,1, and 1.
3. There are four root loci branches, since Eqs. (E-13) and (E-14) are of the fourth order.
4. The root loci are symmetrical to the real axis.E-5 Intersect of the Asymptotes (Centroid) 3E-5
Appendix-E_1 05/14/2009 6
5. Since the number of ﬁnite poles of G(s)H(s) exceeds the number of ﬁnite zeros of
G(s)H(s) by three ( n/C0m¼4/C01¼3), when K¼/C6 1 , three root loci approach s¼1 .
The angles of the asymptotes of the RL ( K/C210) are given by Eq. (E-9):
j¼0:u0¼180/C14
3¼60/C14
j¼1:u1¼540/C14
3¼180/C14
j¼2:u2¼900/C14
3¼300/C14
The angles of the asymptotes of the root loci for K/C200 are given by Eq. (E-10), and are
calculated to be 0/C14, 120/C14, and 240/C14.
6. The intersection of the asymptotes is given by Eq. (E-12):
s1¼/C04/C01/C01 ðÞ /C0 /C0 1ðÞ
4/C01¼/C05
3(E-15)
The asymptotes of the root loci are shown in Fig. E-4.3K = 0K = 0
K > 0K > 0s-planeK < 0
K = 0
–4K < 0
K < 060°
60° 60°60°
 3–5 –1 K > 0j
K = 0 K < 0
0
–jK > 0
Figure E-4 Asymptotes of the root loci of
s(sþ4)(s2þ2sþ2)þK(sþ1)¼0.E-6"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 7
"EXAMPLE E-5-2 The asymptotes of the root loci of several equations are shown in Fig. E-5.
3K < 0s-planeK > 0K > 0
K > 0
1 = –p1/2
K > 0
G(s)H(s) = s(s + p1)KG(s)H(s) = s(s  + p1)(s + p2)(s + p3)K
G(s)H(s) = 
s2(s  + p1)(s + p2)(s + p3)KG(s)H(s) = K(s + z1)K > 0 K < 0
K > 0 K < 0K > 0 K < 0K < 0
4–(p1 + p2 + p3)
5–(p1 + p2 + p3)K < 0
K < 0s-plane
K < 0K < 00
K > 0K > 00
45°45°
36°36°K < 0 K > 0K > 0
K < 0
0K < 0
K > 0 
K < 0
K > 0K < 0K > 0
s2(s  + p1)(s + p2)(s + p3)
K > 0 K < 0–(p1 + p2 + p3) – (–z1)
445°45°
K < 0
K > 0
0K < 0
K > 0K < 0K > 0K < 0s-plane
K > 0
Figure E-5 Examples of the asymtotes of the root loci.E-5 Intersect of the Asymptotes (Centroid) 3E-7
Appendix-E_1 05/14/2009 8
"E-6 ROOT LOCI ON THE REAL AXIS
The entire real axis of the s-plane is occupied by the root loci for /C01/C20 K/C201 .
1.K/C210: On a given section of the real axis, root loci are found in the section only if
the total number of poles and zeros of G(s)H(s) to the right of the section is odd.
2.K/C200: On a given section of the real axis, root loci are found in the section only
if the total number of real poles and zeros of G(s)H(s) to the right of the section
is even. Complex poles and zeros of G(s)H(s) do not affect the type of root locifound on the real axis .
These properties are arrived at based on the following observations:
1.At any point s
1on the real axis, the angles of the vectors drawn from the complex-
conjugate poles and zeros of G(s)H(s) add up to zero. Thus, only the real zeros and
poles of G(s)H(s) contribute to the angular relations in Eqs. (7-18) and (7-19).
2.Only the real poles and zeros of G(s)H(s) that lie to the right of the point s1
contribute to Eqs. (7-18) and (7-19), because real poles and zeros that lie to the leftof the point contribute nothing.
3.Each real pole of G(s)H(s) to the right of s
1contributes /C0180 degrees, and each
real zero of G(s)H(s) to the right of s1contributes þ180 degrees to Eqs. (7-18) and
(7-19).
The last observation shows that for s1to be a point on the root locus, there must be an
oddnumber of poles and zeros of G(s)H(s) to the right of the point. For s1to be a point on
the branch of the root loci for K/C200, the total number of poles and zeros of G(s)H(s) to the
right of the point must be even . The following example illustrates the determination of the
properties of the root loci on the real axis of the s-plane.
"EXAMPLE E-6-1 The root loci on the real axis for two pole-zero conﬁgurations of G(s)H(s) are shown in Fig. E-6.
Notice that the entire real axis is occupied by the root loci for all values of K.
3/C15The entire real axis of
thes-plane is occupied by
root loci.
K > 0 K < 0 K < 0 K < 0 K > 0 K > 0s-plane
0
K < 0 K < 0 K < 0
K < 0K < 0 K > 0
K > 0K > 0s-plane
0
Figure E-6 Properties of root loci on the real axis.E-8"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 9
"E-7 ANGLES OF DEPARTURE AND ANGLES OF ARRIVAL
OF THE ROOT LOCI
The angle of departure or arrival of a root locus at a pole or zero of G( s)H(s)denotes
the angle of the tangent to the locus near the point .
The angles of departure and arrival are determined using Eq. (7-18) for root loci for
positive Kand Eq. (7-19) for root loci for negative K. The details are illustrated by the
following example.
"EXAMPLE E-7-1 For the root-locus diagram shown in Fig. E-7, the root locus near the pole s¼/C01þjmay be more
accurately sketched by knowing the angle at which the root locus leaves the pole. As shown in Fig.
E-7, the angle of departure of the root locus at s¼/C01þjis represented by u2, measured with respect
to the real axis. Let us assign s1to be a point on the RL leaving the pole at /C01þjand is very close to
the pole. Then, s1must satisfy Eq. (7-18). Thus,
ﬀGs 1ðÞHs 1ðÞ ¼ /C0 u1þu2þu3þu4 ðÞ ¼2iþ1 ðÞ 180/C14(E-16)
s-plane
K = 0
–3~
~s1K = 0
Kc = 8.16j1.095
Kc = 8.16–j1.095K = 0
K = 00 ~ –5
4
K > 0 K < 0°
°
°
Figure E-7 Root loci of s(s+ 3)( s2+2s+2 )+K = 0 to illustrate the angles of departure or arrival.E-7 Angles of Departure and Angles of Arrival of the Root Loci 3E-9
Appendix-E_1 05/14/2009 10
where iis any integer. Since s1is assumed to be very close to the pole at /C01þj, the angles of the
vectors drawn from the other three poles are approximated by considering that s1is at/C01þj. From
Fig. E-7, Eq. (E-16) is written
/C0135/C14þu2þ90/C14þ26:6/C14ðÞ ¼2iþ1 ðÞ 180/C14(E-17)
where u2is the only unknown angle. In this case, we can set ito be/C01, and the result for u2is/C071.6/C14.
When the angle of departure or arrival of a root locus for positive K at a simple pole or zero of
G(s)H(s) is determined, the angle of arrival or departure of the root locus for negative Kat the same
point differs from this angle by 180/C14, and Eq. (7-19) is now used. Figure E-7 shows that the angle of
arrival of the root locus for negative Kat/C01þjis 108.4/C14, which is 180/C14/C071.6/C14. Similarly, for
the root-locus diagram in Fig. E-8, we can show that the root locus for negative Karrives at the pole
s¼/C03 with an angle of 180/C14, and the root locus for positive Kleaves the same pole at 0/C14. For the pole
ats¼0, the angle of arrival of the negative- Kroot locus is 180/C14, whereas the angle of departure of
the positive- Kroot locus is 180/C14. These angles are also determined from the knowledge of the type of
root loci on sections of the real axis separated by the poles and zeros of G(s)H(s). Since the total
angles of the vectors drawn from complex-conjugate poles and zeros to any point on the real axis add
up to be zero, the angles of arrival and departure of root loci on the real axis are not affected by the
complex poles and zeros of G(s)H(s). 3
"EXAMPLE E-7-2 In this example we examine the angles of departure and arrival of the root loci at a multiple-order pole
or zero of G(s)H(s). Consider that a G(s)H(s) has a multiple-order (third-order) pole on the real axis,
as shown in Fig. E-8. Only the real poles and zeros of G(s)H(s) are shown, since the complex ones do
not affect the type or the angles of arrival and departure of the root loci on the real axis. For the third-order pole at s¼/C02, there are three positive- Kloci leaving and three negative- Kloci arriving at the
point. To ﬁnd the angles of departure of the positive- Kroot loci, we assign a point s
1on one of the loci
near s¼/C02, and apply Eq. (7-18). The result is
/C0u1/C03u2þu3¼2iþ1 ðÞ 180/C14(E-18)
where u1andu3denote the angles of thevectors drawn from the pole at 0 and the zero at /C03, respectively,
to s1. The angle u2is multiplied by 3, since there are three poles at s¼/C02, so that there are three vectors
drawn from /C02t os1. Setting ito zero in Eq. (E-18), and since u1¼180/C14,u3=0/C14we have u2¼0/C14, which
is the angle of departure of the positive-K root loci that lies between s¼0 and s¼/C02. For the angles of
departure of the other two positive- Kloci, we set i¼1a n di ¼2 successively in Eq. (E-18), and we have
u2¼120/C14and/C0120/C14. Similarly, for the three negative-K root loci that arrive at s¼/C02, Eq. (7-19) is
used, and the angles of arrivals are found to be 60/C14,1 8 0/C14, and /C060/C14.K > 0K > 0
K < 0K < 0
Three vectors, one
from each pole 
at s = –2.
Angle =   2K < 0
–3–260°s1 K > 0s-plane
0K = 0
0°
Figure E-8 Angles of departure and arrival at a third-order pole.
3E-10"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 11
"E-8 INTERSECTION OF THE ROOT LOCI WITH THE IMAGINARY AXIS
The points where the root loci intersect the imaginary axis of the s-plane, and the
corresponding values of K, may be determined by means of the Routh-Hurwitz criterion.
For complex situations, when the root loci have multiple number of intersections on the
imaginary axis, the intersects and the critical values of Kcan be determined with the help of
the root-locus computer program. The Bode diagram method in Chapters 2 and 8
associated with the frequency response, can also be used for this purpose.
"EXAMPLE E-8-1 The root loci shown in Fig. E-7 is for the equation
ssþ3ðÞ s2þ2sþ2/C0/C1
þK¼0 (E-19)
Fig. E-7 shows that the root loci intersect the jvaxis at two points. Applying the Routh-Hurwitz
criterion to Eq. (E-19), and by solving the auxiliary equation, we have the critical value of Kfor
stability at K¼8.16, and the corresponding crossover points on the jv-axis are at /C6j1.095.3
"E-9 BREAKAWAY POINTS
E-9-1 (Saddle Points) on the Root Loci
Breakaway points on the root loci of an equation correspond to multiple-order roots
of the equation.Fig. E-9(a) illustrates a case in which two branches of the root loci meet at the
breakaway point on the real axis and then depart from the axis in opposite directions. In this/C15Routh-Hurwitz criterion
may be used to ﬁnd the
intersection of the root locion the imaginary axis.
K = 0 K = 0s-plane s-plane
Breakaway
pointBreakaway
point
(a)
(c)(b)
K = 0–2K = 0
–1
–jBreakaway
point0K = 0s-planejK = 0
Figure E-9 Examples of breakaway points on the real axis in the s-plane.E-9 Breakaway Points 3E-11
Appendix-E_1 05/14/2009 12
case, the breakaway point represents a double root of the equation when the value of Kis
assigned the value corresponding to the point. Fig. E-9(b) shows another common situation
when two complex-conjugate root loci approach the real axis, meet at the breakaway point,and then depart in opposite directions along the real axis. In general, a breakaway pointmay involve more than two root loci. Fig. E-9(c) illustrates a situation when the breakaway
point represents a fourth-order root.
A root-locus diagram can have, of cour se, more than one breakaway point.
Moreover, the breakaway points need not always be on the real axis. Because of the
conjugate symmetry of the root loci, the br eakaway points not on the real axis must be in
complex-conjugate pairs. Refer to Fig. E-12 for an example of root loci with complex
breakaway points. The properties of the breakaway points of root loci are given asfollows:
The breakaway points on the root loci of 1þKG
1(s)H1(s)¼0must satisfy
dG1sðÞH1sðÞ
ds¼0 (E-20)
It is important to point out that the condition for the breakaway point given in Eq. (E-20)
isnecessary butnot sufﬁcient . In other words, all breakaway points on the root loci for all
values of Kmust satisfy Eq. (E-20), but not all solutions of Eq. (E-20) are breakaway points.
To be a breakaway point, the solution of Eq. (E-20) must also satisfy the equation 1 þKG 1(s)
H1(s)¼0, that is, must also be a point on the root loci for some real K. In general, the following
conclusions may be made with regard to the solutions of Eq. (E-20):
1.Allrealsolutions of Eq. (E-20) are breakaway points on the root loci for all values
ofK, since the entire real axis of the s-plane is occupied by the root loci.
2.The complex-conjugate solutions of Eq. (E-20) are breakaway points only if theysatisfy the characteristic equation or are points on the root loci.
3.Since the condition of the root loci is
K¼/C01
G1sðÞH1sðÞ(E-21)
taking the derivative on both sides of the equation with respect to s, we have
dK
ds¼dG1sðÞH1sðÞ=ds
G1sðÞH1sðÞ ½/C1382(E-22)
Thus, the breakaway point condition can also be written as
dK
ds¼0 (E-23)
where Kis expressed as in Eq. (E-21).
E-9-2 The Angle of Arrival and Departure of Root Loci at the Breakaway Point
The angles at which the root loci arrive or depart from a breakaway point depend onthe number of loci that are involved at the point. For example, the root loci shown in/C15A root-locus plot may
have more than one
breakaway points.
/C15Breakaway points may be
complex conjugates in thes-planeE-12"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 13
Figs. E-9(a) and E-9(b) all arrive and break away at 180/C14apart, whereas in Fig. E-9(c), the
four root loci arrive and depart with angles 90/C14apart, whereas in Fig. E-9(c), the four root
loci arrive and depart with angles 90/C14apart. In general, n root loci (/C01/C20 K/C201 ) arrive
or depart a breakaway point at 180/n degrees apart .
Many root-locus computer programs have features that will obtain the breakaway
points, which a rather tedious task to do manually.
"EXAMPLE E-9-1 Consider the second-order equation
ssþ2ðÞ þ Ksþ4ðÞ ¼ 0 (E-24)
Based on some of the properties of the root loci described thus far, the root loci of Eq. (E-24) are
sketched as shown in Fig. E-10 for /C01<K<1. It can be proven that the complex portion of the
root loci is a circle. The two breakaway points are on the real axis, one between 0 and /C02 and the other
between /C04 and /C01. From Eq. (E-24), we have
G1sðÞH1sðÞ¼sþ4
ssþ2ðÞ(E-25)
Applying Eq. (E-20), the breakaway points on the root loci must satisfy
dG1sðÞH1sðÞ
ds¼ssþ2ðÞ /C0 2sþ1ðÞ sþ4ðÞ
s2sþ2ðÞ2¼0 (E-26)
or
s2þ8sþ8¼0 (E-27)
Solving Eq. (E-27), we ﬁnd the two breakaway points of the root loci at s¼/C01.172 and /C06.828.
Fig. E-10 shows that the two breakaway points are all on the root loci for positive K.
3
"EXAMPLE E-9-2 Consider the equation
s2þ2sþ2þKsþ2ðÞ ¼ 0 (E-28)
The equivalent G(s)H(s) is obtained by dividing both sides of Eq. (E-28) by the terms that do not
contain K.W eh a v eK = 0  K < 0
0
–1.172–2K = 0 K < 0
–4
–6.828K > 0
K > 0s-plane
K > 0 K < 0
Figure E-10 Root loci of s(s+2 )+K (s+4 )=0 .E-9 Breakaway Points 3E-13
Appendix-E_1 05/14/2009 14
GsðÞHsðÞ¼Ksþ2ðÞ
s2þ2sþ2(E-29)
B a s e do nt h ep o l e sa n dz e r o so f G(s)H(s), the root loci of Eq. (E-29) are plotted as shown in
Fig. E-11. The plot shows that there are two breakaway points, one for K>0 and one for K<0.
These breakaway points are determined from
dG1sðÞH1sðÞ
ds¼d
dssþ2
s2þ2sþ2/C18/C19
¼s2þ2sþ2/C02sþ1ðÞ sþ2ðÞ
s2þ2sþ2 ðÞ2¼0 (E-30)
or
s2þ4sþ2¼0 (E-31)
The solution of this equation gives the breakaway point as s¼/C00.586 and s¼/C03.414. 30
–0.586–2K < 0
–3.414K > 0
K > 0s-plane
K > 0 K < 0K = 0
–1 – jK = 0–1 + j
Figure E-11 Root loci of s2þ2sþ2þK(sþ2)¼0.
"EXAMPLE E-9-3 Fig. E-12 shows the root loci of the equation
ssþ4ðÞ s2þ4sþ20/C0/C1
þK¼0 (E-32)
Dividing both sides of the last equation by the terms that do not contain K, we have
1þKG1sðÞH1sðÞ¼ 1þK
ssþ4ðÞ s2þ4sþ20 ðÞ¼0 (E-33)
Since the poles of G1(s)H1(s) are symmetrical about the axes s¼/C02andv¼0in the s -plane, the
root loci of the equation are also symmetrical with respect to these two axes. Taking the derivative of
G1(s)H1(s) with respect to s, we get
dG1sðÞH1sðÞ
ds¼/C04s3þ24s2þ72sþ80
ssþ4ðÞ s2þ4sþ20 ðÞ ½/C1382¼0 (E-34)
or
s3þ6s2þ18sþ20¼0 (E-35)E-14"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 15
The solutions of the last equation are s¼/C02,/C02þj2.45, and /C02/C0j2.45. In this case, Fig. E-12
shows that all the solutions of Eq. (E-35) are breakaway points on the root loci, and two of these
points are complex. 3
"EXAMPLE E-9-4 In this example, we shall show that not all the solutions of Eq. (E-20) are breakaway points on the root
loci. The root loci of the equation
ss2þ2sþ2/C0/C1
þK¼0 (E-36)
are shown in Fig. E-13. The root loci show that neither the K/C210 loci nor the K/C200 loci has any
breakaway point in this case. However, writing Eq. (E-36) as
1þKG1sðÞH1sðÞ¼ 1þK
ss2þ2sþ2 ðÞ¼0 (E-37)
and applying Eq. (E-20), we have the equation for the breakaway points:
3s2þ4sþ2¼0 (E-38)
The roots of Eq. (E-38) are s¼/C00.667 þj0.471 and /C00.667 /C0j0.471. These two roots are not
breakaway points on the root loci, since they do not satisfy Eq. (E-36) for any real value of K.K = 0
K = 0 K = 0–2 + j4s-plane
Breakaway
point
Breakaway
point
Breakaway
point–2 + j2.45
–2 – j2.45
–2 – j4 K = 00 –4 –245°
K > 0 K < 0
Figure E-12 Root loci of s(sþ4)(s2þ4sþ20)þK¼0.E-9 Breakaway Points 3E-15
Appendix-E_1 05/14/2009 16
3
"E-10 CALCULATION OF KON THE ROOT LOCI
Once the root loci are constructed, the values of Kat any point s1on the loci can be
determined by use of the deﬁning equation of Eq. (7-20). Graphically, the magnitude of K
can be written as
Kjj¼Plengths of vectors drawn from the poles of G1sðÞH1sðÞto s1
Plengths of vectors drawn from the zeros of G1sðÞH1sðÞto s1(E-39)
"EXAMPLE E-10-1 As an illustration on the determination of the value of Kon the root loci, the root loci of the equation
s2þ2sþ2þKsþ2ðÞ ¼ 0 (E-40)
are shown in Fig. E-14. The value of Kat the point s1is given by
K¼A/C2B
C(E-41)
where AandBare the lengths of the vectors drawn from the poles of G(s)H(s)¼K(sþ2)=(s2þ2sþ2)
to the point s1, and Cis the length of the vector drawn from the zero of G(s)H(s)t os1. In this case, s1is on
the locus where Kis positive. In general, the value of Kat the point where the root loci intersect the
imaginary axis can also be found by the method just described. Figure E-14 shows that the value of Kats
¼0i s/C01. The computer method and the Routh-Hurwitz criterion are other convenient alternatives of
ﬁnding the critical value of Kfor stability.K = 0
0s-plane
K = 0
–1 + j
K = 0
–1 – j
K > 0 K < 0
Figure E-13 Root loci of s(s2þ2sþ2)þK¼0.E-16"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 17
3
In summary, except for extremely complex cases, the properties on the root loci
presented here should be adequate for making a reasonably accurate sketch of the root-
locus diagram short of plotting it point by point. The computer program can be used to
solve for the exact root locations, the breakaway points, and some of the other speciﬁcdetails of the root loci, including the plotting of the ﬁnal loci. However, one cannot rely on
the computer solution completely, since the user still has to decide on the range and
resolution of Kso that the root-locus plot has a reasonable appearance. For quick reference,
the important properties described are summarized in Table E-1.K > 0 K < 0–2
BCAs1s-plane
K = 0
–1 + j
K = 0
–1 – j0K = –1
Figure E-14 Graphical method of ﬁnding the values of Kon the real axis.
TABLE E-1 Properties of the Root Loci of F(s)¼1+KG1(s)H1(s)¼0
1.K¼0 points The K¼0 points are at the poles of G(s)H(s),
including those at s¼1 .
2.K¼/C61 points The K¼/C61 points are at the zeros of G(s)H(s),
including those at s¼1 .
3. Number of separate root loci The total number of root loci is equal to the order of
the characteristic equation F(s)
4. Symmetry of root loci The root loci are symmetrical about the axes of
symmetry of the pole-zero conﬁguration of G(s)H(s).
5. Asymptotes of root loci as sjj!1 For large values of s, the root loci for K>0 are
asymptotic to asymptotes with angles given by
ui¼2iþ1
n/C0mjj/C2180/C14
ForK<0, the root loci are asymptotic to
ui¼2i
n/C0mjj/C2180/C14
where i¼0, 1, 2, . . . , n/C0mjj /C0 1;
n¼number of ﬁnite poles of G(s)H(s), and
m¼number of ﬁnite zeros of G(s)H(s).
(Continued)E-10 Calculation of Kon the Root Loci 3E-17
Appendix-E_1 05/14/2009 18
The following example illustrates the construction of a root locus diagram manually,
step by step, using the root locus properties given in Table E-1.
"EXAMPLE E-10-2 Consider the equation
ssþ5ðÞ sþ6ðÞ s2þ2sþ2/C0/C1
þKsþ3ðÞ ¼ 0 (E-42)
Dividing both sides of the last equation by the terms that do not contain K, we have
GsðÞHsðÞ¼Ksþ3ðÞ
ssþ5ðÞ sþ6ðÞ s2þ2sþ2 ðÞ(E-43)
The following properties of the root loci are determined:
1.The K¼0 points are at the poles of G(s)H(s):s¼/C05,/C06,/C01þj, and /C01/C0j.
2.The K¼/C61 points are at the zeros of G(s)H(s):s¼/C03,1,1,1,1.6. Intersection of the asymptotes (a) The intersection of the asymptotes lies only on the
real axis in the s-plane.
(b) The point of intersection of the asymptotes is
given by
7. Root loci on the real axis Root loci for K>0 are found in a section of the real
axis only if the total number of real poles and zeros of
G(s)H(s) to the right of the section is odd. If the total
number of real poles and zeros to the right of a givensection is even , root loci for K<0 are found.
8. Angles of departure The angle of departure or arrival of the root loci from apole or a zero of G(s)H(s) can be determined by
assuming a point s
1that is very close to the pole, or
zero, and applying the equation
ﬀGs 1ðÞHs 1ðÞ ¼Xm
k¼1ﬀs1þzk ðÞ /C0Xn
j¼1ﬀs1þpj/C0/C1
¼2iþ1ðÞ 180/C14K>0
¼2i/C2180/C14K<0
where i¼0,/C61,/C62 , ....
9. Intersection of the root loci The crossing points of the root loci on the imaginary
axis and with the imaginary axis the corresponding
values of Kmay be found by use of the Routh-Hurwitz
criterion.
10. Breakaway points The breakaway points on the root loci are determined
by ﬁnding the roots of dK=ds¼0, or dG(s)H(s)=ds¼0.
These are necessary conditions only.
11. Calculation of the values of K The absolute value of Kat any point s1on the root loci
is on the root loci determined from the equation
Kjj¼1
G1s1ðÞH1s1ðÞ jjTABLE E-1 (Continued)
s1¼Sreal parts of poles of GsðÞHsðÞ /C0Sreal parts of zeros of GsðÞHsðÞ
n/C0mE-18"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 19
3.There are ﬁve separate branches on the root loci.
4.The root loci are symmetrical with respect to the real axis of the s-plane.
5.Since G(s)H(s) has ﬁve poles and one ﬁnite zero, four RL and CRL should approach inﬁnity
along the asymptotes. The angles of the asymptotes of the RL are given by [Eq. (E-9)]
ui¼2iþ1
n/C0mjj180/C14¼2iþ1
5/C01jj180/C140/C20K<1 (E-44)
fori¼0, 1, 2, 3. Thus, the four root loci that approach inﬁnity as Kapproaches inﬁnity should
approach asymptotes with angles of 45/C14,/C045/C14, 135/C14, and/C0135/C14, respectively. The angles of
the asymptotes of the CRL at inﬁnity are given by Eq. (E-10):
ui¼2i
n/C0mjj180/C14¼2i
5/C01jj180/C14/C01<K/C200 (E-45)
fori¼0, 1, 2, 3. Thus, as Kapproaches /C01 , four root loci for K<0 should approach inﬁnity
along asymptotes with angles of 0/C14,9 0/C14, 180/C14, and 270/C14.
6.The intersection of the asymptotes is given by [Eq. (E-12)]
s1¼S/C05/C06/C01/C01 ðÞ /C0/C03ðÞ
4¼/C02:5 (E-46)
The results from these six steps are illustrated in Fig. E-15. It should be pointed out that in
general the properties of the asymptotes do not indicate on which side of the asymptotes the
root loci lie. The asymptotes indicate nothing more than the behavior of the root loci as
s-plane
K = 0
K = 0 K = 0 K = 0
K = 0j
–j0 –1 –2
–2.5–3 –4–5 –645°
K > 0 K < 0
Figure E-15 Preliminary calculation of the root loci of s(sþ5)(sþ6)(s2þ2sþ2)þK(sþ3)¼0.E-10 Calculation of Kon the Root Loci 3E-19
Appendix-E_1 05/14/2009 20
sjj!1 In fact, the root locus can even cross an asymptote in the ﬁnite sdomain. The
segments of the root loci shown in Fig. E-15 can be accurately plotted only if additional
information is obtained.
7.Root loci on the real axis: There are K/C210 root loci on the real axis between s¼0 and /C03, and
s¼/C05 and /C06. There are K/C200 root loci on the remaining portions of the real axis, that is,
between s¼/C03 and /C05, and s¼/C06 and /C01 , as shown in Fig. E-16.
8.Angles of departure: The angle of departure uof the root loci leaving the pole at /C01þjis
determined using Eq. (7-18). If s1is a point on the root loci leaving the pole at /C01þj, and s1is
very close to the pole, as shown in Fig E-17, Eq. (7-18) gives
ﬀs1þ3 ðÞ /C0 ﬀ s1/C0ﬀs1þ1þj ðÞ /C0 ﬀ s1þ5 ðÞ /C0 ﬀ s1þ1/C0j ðÞ
¼2iþ1 ðÞ 180/C14 (E-47)
or
26:6/C14/C0135/C14/C090/C14/C014/C14/C011:4/C14/C0uﬃ2iþ1 ðÞ 180/C14(E-48)
fori¼0,/C61,/C62, . . . Therefore, selecting i¼2,
uﬃ/C0 43:8/C14(E-49)0K = 0 K = 0 K = 0
K = 0K = 0
–6 –5 –3 –1s-plane
–jj
K > 0 K < 0
Figure E-16 Root loci of s(s+ 5)( s+ 6)( s2+2s+2 )+ K(s+ 3) = 0 on the real axis.
K = 0
–6 –5
K = 0
jK = 0s-plane
–1 0j
s1K = 0
K = 0
Figure E-17 Computation of angle of departure of the root loci of s(sþ5)(sþ6)
(s2þ2sþ2)þK(sþ3)¼0.E-20"Appendix E. Properties and Construction of the Root Loci
Appendix-E_1 05/14/2009 21
Similarly, Eq. (7-19) is used to determine the angle of arrival u0of the K /C200 root loci arriving
at the pole /C01þj. It is easy to see that u0differs from uby 180/C14; thus,
u0¼180/C14/C043:8/C14¼136:2/C14(E-50)
9.The intersection of the root loci on the imaginary axis is determined using Routh’s tabulation.
Equation (E-42) is written
s5þ13s4þ54s3þ82s2þ60þK ðÞ sþ3K¼0 (E-51)
Routh’s tabulation is
s51
s413
s347:7
s265:6/C00:212K
s13940/C0105K/C00:163K2
65:6/C00:212K
s03K54
82
0:769K
3K
0
060þK
3K
0
0
00
For Eq. (E-51) to have no roots on the imaginary axis or in the right-half of the s-plane,
the elements in the ﬁrst column of Routh’s tabulation must all be of the same sign. Thus, the
following inequalities must be satisﬁed:
65:6/C00:212K>0o r K<309 (E-52)
3940/C0105K/C00:163K
2>0o r K<35 (E-53)
K>0 (E-54)
Thus, all the roots of Eq. (E-51) will stay in the left-half s-plane if Klies between 0 and
35, which means that the root loci of Eq. (E-51) cross the imaginary axis when K¼35 and K¼0.
The coordinates at the crossover points on the imaginary axis that correspond to K¼35 are
determined from the auxiliary equation:
AsðÞ¼ 65:6/C00:212K ðÞ s2þ3K¼0 (E-55)
which is obtained by using the coefﬁcients from the row just above the row of zeros in the s1
row that would have happened when Kis set to 35. Substituting K¼35 in Eq. (E-55), we get
58:2s2þ105¼0 (E-56)
The roots of Eq. (E-56) are s¼j1.34 and /C0j1.34, which are the points at which the root loci
cross the jv-axis.
10.Breakaway points: Based on the information gathered from the preceding nine steps, a trial
sketch of the root loci indicates that there can be only one breakaway point on the entire root
loci, and the point should lie between the two poles of G(s)H(s)a ts¼/C05 and /C06. To ﬁnd the
breakaway point, we take the derivative on both sides of Eq. (E-43) with respect to sand set it
to zero; the resulting equation is
s5þ13:5s4þ66s3þ142s2þ123sþ45¼0 (E-57)
Since there is only one breakaway expected, only one root of the last equation is the correctsolution of the breakaway point. The ﬁve roots of Eq. (E-57) are:
s¼3:33þj1:204 s¼3:33/C0j1:204
s¼/C00:656þj0:468 s¼/C00:656/C0j0:468
s¼/C05:53E-10 Calculation of Kon the Root Loci 3
E-21
Appendix-E_1 05/14/2009 22
Clearly, the breakaway point is at /C05.53. The other four solutions do not satisfy
Eq. (E-51) and are not breakaway points. Based on the information obtained in the last 10
steps, the root loci of Eq. (E-51) are sketched as shown in Fig. E-18.3K = 0 K = 0
–5.53–6 –5 –4 –3 –1 0K < 0 K > 0
K = 0K = 0
K = 0
–2.5j
–j
–j1.34(K = 35)j1.34(K = 35)
K 
K K 
K s-plane
K > 0 K < 0
Figure E-18 Root loci of s(sþ5)(sþ6)(s2þ2sþ2)þK(sþ3)¼0.E-22"Appendix E. Properties and Construction of the Root Loci
Appendix-F_1 05/14/2009 1
"APPENDIXF
General Nyquist Criterion
"F-1 FORMULATION OF NYQUIST CRITERION
The original Nyquist criterion presented in Chapter 8 is cumbersome to apply when the loop
transfer function is of the nonminimum-phase type; that is, L(s) has either poles and/or zeros
in the right-half s-plane. We shall show that if the loop transfer function is of the non-
minimum-phase type, then plotting the Nyquist plot of L(s) only for s¼jvtos¼j0 and not
enclosing the ( /C01,j0) point in the L(s)-plane is only a necessary, but not sufﬁcient, condition
for closed-loop stability. For a system with a nonminimum-phase loop transfer function L(s),
the original Nyquist criterion requires that the L(s) plot that corresponds to the entire Nyquist
path in Fig. 8-20 be made. If the loop transfer function L(s) has poles or zeros on the jv-axis,
then the Nyquist path of Fig. 8-20 must have small indentations around them on the jv-axis.
This adds even more complexity to the construction of the L(s) plot. Our MATLAB Toolbox
(ACSYS ) or other computer software can all be used to construct the plots of only functions
that correspond to the positive jv-axis of the s-plane. The rest of the Nyquist plot that
corresponds to the small indentations and the large semicircle on the Nyquist path have to beplotted manually. With modern computer facilities and software, the analyst should not be
burdened with the chores of manual plotting. Therefore, we are introducing a simpliﬁed
Nyquist criterion that can be applied by using only the positive jv-axis of the Nyquist path
and then observing its behavior with reference to the (/C01, j0) point.
Yeung [1] introduced a general and yet simpliﬁed version of the Nyquist criterion that
allows the determination of stability of closed-loop systems of minimum- as well as
nonminimum-phase loop transfer functions by using only the positive part of the jv-axis of
the Nyquist path. However, if the system is of the minimum-phase type, the test of whetherthe (/C01,j0) point is enclosed is still simpler to apply. We shall show that, for nonminimum-
phase systems, if the ( /C01,j0) point is enclosed, the system is still unstable. However, if the
(/C01,j0) point is not enclosed, then an additional angle condition is all that must be satisﬁed
by the Nyquist plot of L(s) for the system to be stable.
Let us consider the two Nyquist paths shown in Figs. F-1(a) and F-1(b). Apparently,
the Nyquist path G
s1in Fig. F-1(a) is the original one shown in Fig. 8-20, whereas the path
Gs2in Fig. F-1(b) encircles not only the entire right-half s-plane but also all the poles and
zeros of L(s) on the jv-axis, if there are any. Let us deﬁne the following quantities.
Z¼number of zeros of 1 þL(s) that are in the right-half s-plane.
P¼number of poles of L(s), or of 1 þL(s), that are in the right-half s-plane.
Pv¼number of poles of L(s), or of 1 þL(s), that are on the jv-axis, including the
origin.
N1¼number of times the ( /C01,j0) point of the L(s)-plane that is encircled by the
Nyquist plot of L(s) corresponding to Gs1.
F-1
Appendix-F_1 05/14/2009 2
N2¼number of times the ( /C01,j0) point of the L(s)-plane that is encircled by the
Nyquist plot of L(s) corresponding to Gs2.
Then, with reference to the two Nyquist paths in Fig. F-1, and according to the Nyquist
criterion,
N1¼Z/C0P ðF-1Þ
and
N2¼Z/C0P/C0Pv ðF-2Þ
LetF1andF2represent the net angles traversed by the Nyquist plot of L(s) with respect to
the (/C01,j0) point, corresponding to Gs1andGs2, respectively. Then,
F1¼N1/C2360/C14¼Z/C0PðÞ 360/C14ðF-3Þ
F2¼N2/C2360/C14¼Z/C0P/C0Pv ðÞ 360/C14ðF-4Þ
Let us consider that each of the Nyquist paths Gs1andGs2is composed of three portions:
1.The portion from s¼/C0 j1toþj1along the semicircle with inﬁnite radius
2.The portion along the jv-axis, excluding all the small indentations
3.All the small indentations on the jv-axis
Because the Nyquist paths in Fig. F-1 are symmetrical about the real axis in the s-plane, the
angles traversed by the Nyquist plots are identical for positive and negative values of v.
Thus, F1andF2are written
F1¼2F11þF12þF13 ðF-5Þ
F2¼2F11/C0F12þF13 ðF-6Þ0s-plane
(a)0s-plane
(b)
Figure F-1 (a) Nyquist path. (b) An alternative Nyquist path. (Source: K. S. Yeung, ‘‘A
Reformulation of Nyquist’s Criterion,’’ IEEE Trans. Educ., Vol. E-28, pp. 58–60, Feb. 1985.)F-2"Appendix F. General Nyquist Criterion
Appendix-F_1 05/14/2009 3
where
F11¼angle traversed by the Nyquist plot of L(s) with respect to the ( /C01,j0) point,
corresponding to the positive jv-axis or the /C0jv-axis of the s-plane, excluding
the small indentations.
F12¼angle traversed by the Nyquist plot of L(s) with respect to the ( /C01,j0) point,
corresponding to the small indentations on the jv-axis of Gs1. Because on Gs2
the directions of the small indentations are opposite to that of Gs1, the sign of
F12in Eq. (F-5) is negative.
F13¼angle traversed by the Nyquist plot of L(s) with respect to the ( /C01,j0) point,
corresponding to the semicircle with inﬁnite radius on the Nyquist paths.
For a transfer function L(s) that does not have more zeros than poles, the Nyquist plot of
L(s) that corresponds to the inﬁnite semicircle must either be a point on the real axis or a
trajectory around the origin of the L(s)-plane. Thus, the angle F13traversed by the phasor
drawn from the ( /C01,j0) point to the Nyquist plot along the semicircle with inﬁnite radius is
always zero.
Now adding Eq. (F-5) to Eq. (F-6) and using Eqs. (F-3) and (F-4), we get
F1þF2¼4F11
¼2Z/C02P/C0Pv ðÞ 360/C14ðF-7Þ
Solving for F11, we get
F11¼Z/C0P/C00:5Pv ðÞ 180/C14ðF-8Þ
The equation states:
The total angle traversed by the phasor drawn from the ( /C01,j0) point to the L(s)
Nyquist plot that corresponds to the portion on the positive jv-axis of the s-plane,
excluding the small indentations, if any, equals
The number of zeros of 1 þL(s) in the right-half s-plane
The number of poles of L(s) in the right-half s-plane
0:5(the number of poles of L(s) on the jv¼axis)180/C14ðF-9Þ
Thus, the Nyquist stability criterion can be carried out by constructing only the Nyquist
plot that corresponds to the s ¼j1to s¼0portion on the Nyquist path. Furthermore,
if the closed-loop system is unstable, by knowing the values of F11,Pv, and P,E q .
(F-8) gives the number of roots of the characteristic equation that are in the right-half
s-plane.
For the closed-loop system to be stable, Zmust equal zero. Thus, the Nyquist criterion
for stability of the closed-loop system is
F11¼/C0 0:5PvþP ðÞ 180/C14ðF-10Þ
Because PvandPcannot be negative, the last equation indicates that if the phase traversed
by the Nyquist plot of L (jv)asvvaries from 1to0,F11,is positive with respect to the
(/C01,j0)point, the closed-loop system is unstable.
However, if F11is negative, it still has to satisfy Eq. (F-9) for the system to be stable.
With reference to the Nyquist plot of L(jv) and the ( /C01,j0) point, we see that, when
the angle variation F11is positive, it corresponds to the ( /C01,j0) point being enclosed.
Thus, the condition that the Nyquist plot of L(jv) not enclosing the ( /C01,j0) point is a
necessary condition for closed-loop stability for nonminimum-phase systems. However, ifF-1 Formulation of Nyquist Criterion 3F-3
Appendix-F_1 05/14/2009 4
the (/C01,j0) point is not enclosed by the Nyquist plot of L(jv), for the nonminimum-phase
system to be closed-loop stable, the angle variation F11still has to satisfy Eq. (F-9).
F-1-1 System with Minimum-Phase Loop Transfer Functions
IfL(s) is of the minimum-phase type, then P¼0 and Pvdenotes the number of poles of L(s)
that are at the origin. Eq. (F-8) becomes
F11¼Z/C00:5Pv ðÞ 180/C14ðF-11Þ
For closed-loop stability, Z¼0; Eq. (F-11) becomes
F11¼/C0Pv/C290/C14ðF-12Þ
Because Pvdenotes the number of poles of L(s) that are at the origin, it is easy to see that, if
the (/C01,j0) point is not enclosed by the Nyquist plot of L(s),F11will always be given by
Eq. (F-12). Thus, when L(s) is of the minimum-phase type, the condition that the ( /C01,j0)
point not be enclosed by the Nyquist plot is a necessary and sufﬁcient condition for closed-
loop stability.
F-1-2 Systems with Improper Loop Transfer Functions
Eq. (F-8) is derived based on the condition that F13¼0, which is true only if L(s) is strictly
proper; that is, it has more poles than zeros. For improper transfer functions, we can againuse the method discussed in Section 8-6 by plotting the Nyquist plot of 1 =L(s).
"F-2 ILLUSTRATIVE EXAMPLES —GENERAL NYQUIST CRITERION MINIMUM AND
NONMINIMUM TRANSFER FUNCTIONS
In the following example we shall show that the Nyquist plot of a nonminimum-phase
transfer function does not enclose the ( /C01,j0) point, and yet the system is unstable.
"EXAMPLE F-2-1 Consider that the loop transfer function of a control system is given by
LsðÞ¼s2/C0sþ1
ss2/C06sþ5 ðÞðF-13Þ
Because L(s) has one pole at the origin and two poles in the right-half s-plane, Pv= 1 and P= 2. From
Eq. (F-9), the closed-loop system is stable if the following condition is satisﬁed:
F11¼/C0 0:5PvþP ðÞ 180/C14¼/C0450/C14ðF-14Þ
The Nyquist plot of L(jv) forv¼1 tov¼0 is plotted as shown in Fig. F-2. Apparently, in this case,
the (/C01,j0) point is not enclosed by the Nyquist plot. However, because F11is/C090/C14, and not /C0450/C14,
the system is unstable. Substituting F11¼90/C14into Eq. (8-82) and solving for Z, we have Z¼2, which
means that there are two closed-loop poles in the right-half s-plane. 3
"EXAMPLE F-2-2 Consider the system described in Example 8-1-1. The loop transfer function of the system, L(s), is
given in Eq. (9-59) and is repeated below.
LjvðÞ ¼K
ssþ2ðÞ sþ10ðÞðF-15Þ
The Nyquist plot of L(jv) is shown in Fig. 8-25. It is shown in Example 8-1-1 that, for closed-loop
stability, the ( /C01,j0) point in the L(jv)-plane must be to the left of the intersect of the Nyquist plot
with the real axis.F-4"Appendix F. General Nyquist Criterion
Appendix-F_1 05/14/2009 5
Now we shall apply the generalized Nyquist criterion to the system. Because L(s) is of the
minimum-phase type, P¼0, and it has one pole at the origin, thus, Pv¼1. Substituting these
quantities into Eq. (F-11), we have
F11¼Z/C00:5 ðÞ 180/C14ðF-16Þ
For closed-loop stability, Zmust equal zero; thus, the last equation gives F11¼/C090/C14. This means that
the phasor drawn from the ( /C01,j0) point to the Nyquist plot, from v¼1 tov¼0, must equal /C090/C14,
or 90/C14in the CW direction. Fig. F-3(a) shows that, if the ( /C01,j0) point is to the left of the intersect of
L(jv) with the real axis, F11is indeed /C090/C14. On the other hand, if the ( /C01,j0) point is to the right of
the intersect, as shown in Fig. F-3(b), when the value of Kis greater than 240, then F11isþ270/C14,o r ,
(more easily observed when the critical point is enclosed), the system would be unstable. Substituting
F11¼270/C14into Eq. (F-16), we get Z¼2, which means that the characteristic equation has two roots
in the right-half s-plane. Thus, for systems with minimum-phase loop transfer functions, the Nyquistj Im L
Enclosed
area–1 0 Re L
Figure F-2 Nyquist plot of LsðÞ¼s2/C0sþ1
ss2/C06sþ5 ðÞ:
j Im L j Im L
–1
0 Re L
Enclosed
area0 Re L –1
Enclosed
area
(a) (b)
Figure F-3 Nyquist plot of LsðÞ¼K
ssþ2ðÞ sþ10ðÞ. (a) K<240. (b) K>240.F-2 Illustrative Examples —General Nyquist Criterion Minimum and Nonminimum Transfer Functions 3F-5
Appendix-F_1 05/14/2009 6
criterion with the ‘‘enclosure’’ test is easier to observe, but when the system is unstable, it does not
tell how many characteristic equation roots are in the right-half plane; the general Nyquist criteriondoes.
3
"EXAMPLE F-2-3 Consider that a control system has the loop transfer function
LsðÞ¼Ks/C01ðÞ
ssþ1ðÞðF-17Þ
We observed from the last equation that Pv¼1, and P¼0. The function L(s) is of the nonminimum-
phase type, because it has a zero at s¼1. Thus, the Nyquist criterion on enclosure cannot be used
adequately in this case. From Eq. (F-8), the requirement for closed-loop stability is
F11¼/C0 0:5PvþP ðÞ 180/C14¼/C090/C14ðF-18Þ
Thus, the stability criterion requires that the phasor drawn from the ( /C01,j0) point to the Nyquist plot
ofL(jv) should traverse /C090/C14asvvaries from 1to 0.
To sketch the Nyquist plot of L(s) that corresponds to the postive portion of the jv-axis of the s-plane,
we set s¼jvin Eq. (F-17). We get
LjvðÞ ¼Kjv/C01 ðÞ
jvjvþ1 ðÞ¼Kjv/C01 ðÞ
/C0v2þjvðF-19Þ
When v¼1 ,
Lj1ðÞ ¼K
jvv¼1¼0ﬀ/C090/C14ðF-20Þ
When v¼0,
Lj0ðÞ ¼K
jvv¼0¼1 ﬀ 90/C14ðF-21Þ
To ﬁnd the intersect of the L(jv) plot on the real axis, we rationalize the function by multiplying the
numerator and the denominator of Eq. (F-19) by /C0v2/C0jv. We have
LjvðÞ ¼Kjv/C01 ðÞ /C0 v2/C0jv ðÞ
v4þv2¼K2vþj1/C0v2ðÞ ½/C138
vv2þ1 ðÞðF-22Þ
Setting the imaginary part of L(jv) to zero and solving for v2, we have
v2¼/C61 rad /sec ðF-23Þ
Forv¼1,
Lj1ðÞ ¼ K ðF-24Þ
3
Nyquist Plot for K40
Based on the preceding information, the Nyquist plot of L(jv) that corresponds to the
positive portion of the jv-axis is sketched as shown in Fig. F-4 for K>0. Fig. F-4 shows
that, as vvaries from 1to 0 along the Nyquist plot, the net angle F11traversed by the
phasor drawn from the ( /C01,j0) point to the Nyquist plot is þ90/C14. Thus, the system is
unstable because F11is positive. We can also readily see that ( /C01,j0) is enclosed by the
Nyquist plot, so the same conclusion on closed-loop stability can be drawn.F-6"Appendix F. General Nyquist Criterion
Appendix-F_1 05/14/2009 7
From Eq. (F-7),
F11¼Z/C00:5Pv/C0P ðÞ 180/C14¼Z/C00:5 ðÞ 180/C14¼90/C14ðF-25Þ
Thus, Z¼1, which means that the characteristic equation of the closed-loop system has one
root in the right-half s-plane. The characteristic equation of the system is
s2þ1þKðÞ s/C0K¼0 ðF-26Þ
We can easily verify that stability requires
0>K>/C01 ðF-27Þ
Nyquist Plot for K50
Fig. F-5(a) shows the Nyquist plot of L(jv) when Klies between 0 and /C01. Notice that the
plot is obtained by rotating theL(jv) plot of Fig. F-4 by 180/C14about the origin. As vis
varied from 1to 0, the angle F11in Fig. F-5(a) has a net rotation of /C090/C14, which agrees
with the stability requirement in Eq. (F-18), and the closed-loop system is stable. It should
be reminded that since L(jv) is of the minimum-phase type, the fact that the Nyquist plot of
L(jv) of Fig. F-5(a) does not enclose the ( /C01,j0) is notthe reason that the system is stable.
Figure F-5(b) shows the Nyquist plot when K</C01. Now we see that the ( /C01,j0) point
is enclosed, so the system is unstable. Checking the value of F11, we have F11¼270/C14,
which differs from the required /C090/C14. Using Eq. (F-8),
F11¼Z/C00:5Pv/C0P ðÞ 180/C14¼Z/C00:5 ðÞ 180/C14¼270/C14ðF-28Þ
Thus, Z¼2, which means that the characteristic equation has two roots in the right-half
s-plane.
In general, when Kchanges signs, it is not necessary to redraw the Nyquist plot as
shown in Fig. F-5. Eq. (8-40) can be written as
1þLsðÞ¼ 1þKL1sðÞ¼ 0 ðF-29Þ
where Kis positive. For negative K, the last equation can be written as
1/C0KL1sðÞ¼ 0 ðF-30Þj Im L
–1 0 Re LEnclosed
area
KFigure F-4 Nyquist plot of the
system in Example F-2-3.
LsðÞ¼Ks/C01ðÞ
ssþ1ðÞ.F-2 Illustrative Examples —General Nyquist Criterion Minimum and Nonminimum Transfer Functions 3F-7
Appendix-F_1 05/14/2009 8
or
KL1sðÞ¼ 1 ðF-31Þ
where Kis now positive. Thus, Eq. (F-31) shows that, when Kis negative, we can still use
theL(jv) plot for positive Kbut designate the ( þ1,j0) point as the critical point for stability
analysis.
Fig. F-6 shows the Nyquist plot of Eq. (F-17) for K>0. When Kis negative, the ( þ1,
j0) point is regarded as the critical point. As shown in Fig. F-6, for /C01<K<0,F11is
/C090/C14, which is the required value, and the system is stable. When K</C01, the ( þ1,j0)
point is enclosed by the Nyquist plot, and the system is unstable. These results agree with
those obtained from Fig. F-5 when the Nyquist plots for K<0 were actually constructed.
It is of interest to compare the Nyquist stability analysis with the root-locus analysis.
Fig. F-7 shows the root loci of the characteristic equation of the system with the looptransfer function given in Eq. (F-17). The stability condition of the system as a function ofj Im L
–1 0 Re L
Enclosed
areaK–1 < K < 0 K < –1
(a)j Im L
–1 0 Re L
Enclosed
areaK
(b)
Figure F-5 Nyquist plots of the system in Example F-2-3. LsðÞ¼Ks/C01ðÞ
ssþ1ðÞ. (a)/C01<K<0.
(b)K</C01.
j Im L
1 0 Re LEnclosed
area
–KEnclosed
area
–KK < –1
–1 < K < 0
Figure F-6 Nyquist plot of
LsðÞ¼Ks/C01ðÞ
ssþ1ðÞwith K<0:
The (þ1,j0) point is the critical
point.F-8"Appendix F. General Nyquist Criterion
Appendix-F_1 05/14/2009 9
Kis clearly indicated by the root-locus diagram. The RL between 0 and +1 on the real axis
indicates that the system is unstable for 0 <K<1. The RL indicates that, for negative
values of K, the system is unstable for /C01<K</C01, and the system is stable only for the
range of /C01<K<0. The root loci cross the jv-axis at v¼/C61 rad/sec, which are the values
ofvat which the Nyquist plot of L(jv) intersects the negative real axis.
"EXAMPLE F-2-4 Consider the control system shown in Fig. F-8. It is desired to determine the range of Kfor which the
system is stable. The loop transfer function of the system is
LsðÞ¼YsðÞ
EsðÞ¼10Ksþ2ðÞ
s3þ3s2þ10ðF-32Þ
The poles of L(s) are found to be at s¼/C03.72, 0.361 þj1.6, and 0.361 /C0j1.6. Or, we can use the
Routh-Hurwitz criterion to verify that L(s) has two poles in the right-half s-plane. Thus, P¼2, and
Pv¼0. The transfer function L(s) is of the nonminimum-phase type.
From Eq. (F-9), the requirement for the closed-loop system to be stable is
F11¼/C0 0:5PvþP ðÞ 180/C14¼/C0360/C14ðF-33Þs-plane
K = –1K < 0
K < 0j1
–j1
K = –1K = 0
–1 1K = 0
0 K < 0 K > 0 K < 02.414
–0.414
Figure F-7 Complete root loci of system in Example F-2-3.
R(s) E(s)
–+
–+Y(s) 10
s2(s + 3)K(s + 2)
Figure F-8 Block diagram of the control system in Example F-2-4.F-2 Illustrative Examples —General Nyquist Criterion Minimum and Nonminimum Transfer Functions 3F-9
Appendix-F_1 05/14/2009 10
Setting s¼jv, Eq. (F-32) becomes
LjvðÞ ¼10Kjvþ2 ðÞ
10/C03v2 ðÞ /C0 jv3ðF-34Þ
Atv¼1 ,
Lj1ðÞ ¼ 0ﬀ180/C14ðF-35Þ
Atv¼0,
Lj0ðÞ ¼ 2K ðF-36Þ
To ﬁnd the intersect on the real axis of the L(jv)-plane, we rationalize L(jv)a s
LjvðÞ ¼10K21 0/C03v2ðÞ /C0 v4þjv10/C03v2ðÞ þ 2v2½/C138/C8/C9
10/C03v2 ðÞ2þv6ðF-37Þ
Setting the imaginary part of L(jv) to zero, we have
v10/C03v2/C0/C1
þ2v3¼0 ðF-38Þ
The solutions of the last equation are v¼0 and v¼/C6ﬃﬃﬃﬃﬃ
10p
¼3:16 rad =sec, which are the
frequencies at which the L(jv) plot intersects the real axis of the L(jv)-plane. When v¼0, we
already have L(j0)¼2Kin Eq. (F-36). When v¼3.16 rad/sec,
Lj3:16ðÞ ¼ /C0 K ðF-39Þ
Fig.F-9(a)showstheNqyuistplotof L(jv)for0 <K<1.Becausethe( /C01,j0)pointisenclosedbytheNyquist
plot, the closed-loop system is unstable. We can also show that the angle traversed by F11is 0/C14, not/C0360/C14,a s
requiredinEq.(F-33).Fig.F-9(b)showstheNyquistplotof L(jv)when Kisgreaterthanunity.Inthiscase,the
angleF11rotates a total of /C0360/C14; thus, the system is stable.
When Kis negative, we can use the plots in Fig. F-9 and regard the ( þ1,j0) point as the critical
point. The following stability conditions are observed:
j Im L
Re L 2K 0–K
(a)j5.43Kj Im L
–1 –1 –K 2K Re Lj5.43K
0
(b)
Figure F-9 Nyquist plots of the system in Example F-2-4. (a) 1 >K>0. (b) K>1.F-10"Appendix F. General Nyquist Criterion
Appendix-F_1 05/14/2009 11
/C152K</C01: The ( þ1,j0) point lies between 0 and 2 Kand is not enclosed by L(jv), butF11¼/C0180/C14;
the system is unstable. For stability, F11must equal /C0360/C14.
/C15/C01<2K<0: The ( þ1,j0) point is to the right of the point 2 Kand is enclosed by the Nyquist plot;
the system is unstable. In this case, F11¼0/C14.
The conclusion is that the system is stable for K>1. The root loci of the system are shown in Fig. F-10.
Clearly, when Kis negative, one branch of the RL will always st ay in the right-half plane, and the system is
unstable.Thesystemisstableonlyfor K>1,andtherootlocicrossthe jv-axisat v¼/C63.16rad/sec,which
corresponds to the frequency at which the L(jv) plot intersects the negative real axis. The value of Kat the
crossing point on the jv- a x i si s1 . 3
"EXAMPLE F-2-5 Consider a control system with the loop transfer function
LsðÞ¼K
sþ2ðÞ s2þ4 ðÞðF-40Þ
which has a pair of imaginary poles at s¼j2 and /C0j2. Thus, Pv¼2, and P¼0. To apply the Nyquist
criterion in the original form, we would have to deﬁne the Nyquist path with small indentations
around these poles.
Instead of constructing the entire Nyquist plot, the portion that corresponds to s¼j1toj0i s
plotted as shown in Fig. F-11. The data for this Nyquist plot are easily obtained using any of the
frequency-domain programs mentioned earlier.
From Eq. (F-9), the value of F11required for stability is
F11¼/C0 0:5PvþP ðÞ 180/C14¼/C0180/C14ðF-41Þ
As seen from Fig. F-11, the magnitude of L(jv) goes to inﬁnity when v¼2 rad/sec. When Kis positive, the
critical point ( /C01,j0) is not enclosed by the Nyquist plot, and th e system is unstable. For the angle check,10j
10–js-planeK = 1
K = 1K = 0
K < 0 K < 0
0.564–3.720
–0.5 K > 0 –2
K = 0
0.36 – j 1.6K = 0
0.36 + j 1.6
Figure F-10 Complete root loci of the system in Example F-2-4.F-2 Illustrative Examples —General Nyquist Criterion Minimum and Nonminimum Transfer Functions 3F-11
Appendix-F_1 05/14/2009 12
whenvvariesfrom 1to2,theangle F11isþ135/C14,andfortheportionof v¼2to0,F11isþ45/C14.Thus,
the total F11isþ180/C14, not/C0180/C14. The system is unstable for all positive values of K.
When Kis negative, the critical point in Fig. F-11 is at ( þ1,j0 ) .F i g .F - 1 1s h o w st h a t ,i ft h e( þ1,j0) point
lies between 0 and K/8, it is enclosed by the Nyquist path, and t he system is unstable. Thus, the system is
unstablefor K</C08.When the( þ1,j0)pointis totherightofthe K/8point, F11fromv¼1 tov¼2i s/C045/C14,
and from v¼2t ov ¼0i s/C0135/C14. Thus the total F11asvvaries from 1t o0i s/C0180/C14, which agrees with the
value required in Eq. (F-41). The system is stable for 0 >K>/C08. The summary of the Nyquist criterion
application to this system is as follows.
3
The complete root loci of the characteristic equation of the system are constructed in
Fig. F-12 using the pole–zero conﬁguration of Eq. (F-40). The stability condition of /C08<
K<0 is easily viewed from the root loci.Re LUnstableCritical point
K > 0j Im L
0Enclosed
area
+1 +1 –1
Enclosed
areaK/8UnstableCritical point
K < –8
StableCritical point
0 > K > –8
Figure F-11 Nyquist plot of the control system in Example F-2-5.
Range of KF11(deg) for
v= 2 to 0F11(deg)
forv=2t o 1Total
F11(deg)Critical
PointStability
Condition
K>0 þ135 þ45 þ180 /C01 point enclosed Unstable
K</C08 /C045 þ45 0 þ1 point
enclosedUnstable
/C08<K<0 /C045 /C0135 /C0180 StableF-12"Appendix F. General Nyquist Criterion
Appendix-F_1 05/14/2009 13
"F-3 STABILITY ANALYSIS OF MULTILOOP SYSTEMS
The Nyquist stability analyses conducted in the preceding sections are all directed toward
the loop transfer function L(s). It does not matter whether the system is with single loop or
multiple loops, because once the loop transfer function is obtained, stability analysis can beconducted using the Routh-Hurwitz criterion, root loci, or the Nyquist criterion.
For multiloop-feedback systems, it may be advantageous to analyze the stability of the
system by working from the inner loop toward the outer loop, one at a time. This way, moreinsight may be gained on the stability of the individual loops of the system. The following
example will illustrate this approach.
"EXAMPLE F-3-1
Fig. F-13 shows the block diagram of a system that controls the gun turret of a tank. During servicing
of the turret control system, the mechanic accidentally opened the outer loop of the system. With the
power turned on, the gun turret went out of control and ﬁnally ﬂew apart. The purpose of this exampleis to show that it is inadequate to investigate just the stability of the overall system. In general, for a
multiloop control system, one should conduct a systematic stability analysis of all the inner loops of
the system. It is admissible to have unstable inner loops, as long as the overall system is stable.
However, if such a situation exists, it is important to forewarn or take precautionary measures to
prevent opening the loops during operation.
The loop transfer function of the inner loop is
GsðÞ¼6
ssþ1ðÞ sþ2ðÞðF-42Þ
Fig. F-14 shows the Nyquist plot of G(s). Because the plot intersects the real axis at the /C01 point at v
¼1.414 rad/sec, the inner loop is marginally stable. Therefore, if the outer loop of the system is
opened, the system will oscillate continuously with a frequency of 1.414 rad/sec. The loop transfer0s-plane
K = 0
K < 0 K > 0K = –8
K = 0 – j2K = 0 j2
K > 0
K < 0K > 0K < 0
Figure F-12 Complete root loci of the system in Example F-2-5.F-3 Stability Analysis of Multiloop Systems 3F-13
Appendix-F_1 05/14/2009 14
function of the overall system is
LsðÞ¼GcsðÞGsðÞ
1þGsðÞ¼100sþ0:1 ðÞ
sþ10ðÞ s3þ3s2þ2sþ6 ðÞðF-43Þ
Because L(s) has two poles on the jv-axis and the rest are in the left-half s-plane, Pv¼2 and P¼0.
The function is also of the nonminimum-phase type, so we must use Eq. (F-9) for the stability test of
the overall system. Thus,
F11¼/C0 0:5PvþP ðÞ 180/C14¼/C0180/C14ðF-44ÞR(s)
+
––+E(s) Y(s)
G(s) Gc(s)16.67(s + 0.1)
s +106
s(s + 1)(s + 2)
Figure F-13 Multiloop feedback control system for tank turret control.
–10.8
0.6
0.4
0.2
0
–0.2
–0.4
–0.6
–0.8j Im G
Re G 0
–1.5 –1 –0.5 0 0.5
Figure F-14 Nyquist plot of GsðÞ¼6
ssþ1ðÞ sþ2ðÞ.F-14"Appendix F. General Nyquist Criterion
Appendix-F_1 05/14/2009 15
The Nyquist plot of L(s) is plotted as shown in Fig. F-15. The angle F11forv¼1 tov¼1.414 rad/
sec is /C090/C14, and from v¼1.414 rad/sec to v¼0i s/C090/C14. Thus, the total value of F11forv¼1 to
v¼0i s/C0180/C14, and the overall system is stable.
In general, when more than two loops are involved, the proper way is to start with the stability of
the innermost loop by opening all the outer loops, and then add one loop at a time, until the outermost
loop is closed. 3
"PROBLEMS
F-1. The loop transfer functions L(s) of single-feedback-loop systems are given in the following
equations. Sketch the Nyquist plot of L(jv) forv¼0t o1. Determine the stability of the closed-loop
system. If the system is unstable, ﬁnd the number of poles of the closed-loop transfer function that arein the right-half s-plane. Solve for the intersect of L(jv) on the negative real axis of the L(jv)-plane
analytically. You may construct the Nyquist plot of L(jv) using any computer program.
(a)LsðÞ¼5s/C02ðÞ
ssþ1ðÞ s/C01ðÞ(b)LsðÞ¼50
ssþ5ðÞ s/C01ðÞ
(c)LsðÞ¼3sþ2ðÞ
ss3þ3sþ1 ðÞ(d)LsðÞ¼100
ssþ1ðÞ s2þ2 ðÞ
(e)LsðÞ¼s2/C05sþ2
ss3þ2s2þ2sþ10 ðÞ(f)LsðÞ¼/C00:1s2/C01 ðÞ sþ2ðÞ
ss2þsþ1 ðÞ
F-2. The loop transfer functions of single-feedback-loop control systems are given in the following
equations. Apply the Nyquist criterion and determine the values of Kfor the system to be stable.
Sketch the Nyquist plot of L(jv) with K¼1 forv¼0t ov¼1 . You may use a computer program to
plot the Nyquist plots.
(a)LsðÞ¼Ks/C02ðÞ
ss2/C01 ðÞ(b)LsðÞ¼K
ssþ10ðÞ s/C02ðÞ
(c)LsðÞ¼Ksþ1ðÞ
ss3þ3sþ1 ðÞ(d)LsðÞ¼Ks2/C05sþ2 ðÞ
ss3þ2s2þ2sþ10 ðÞ1.5
1
0.5
–0.5j Im L
Re L 0
–1 –0.5 0 0.5–101
6
Figure F-15 Nyquist plot of LsðÞ¼100sþ0:1 ðÞ
sþ10ðÞ s3þ3s2þ2sþ6 ðÞ.Problems 3F-15
Appendix-F_1 05/14/2009 16
(e)LsðÞ¼Ks2/C01 ðÞ sþ2ðÞ
ss2þsþ1 ðÞ(f)LsðÞ¼Ks2/C05sþ1 ðÞ
ssþ1ðÞ s2þ4 ðÞ
F-3. Fig. FP-3 shows the Nyquist plots of the loop transfer function L(jv) forv¼0t ov¼1 for
single-feedback-loop control systems. The number of poles of L(jv) that are on the jv-axis, Pv, and in
the right-half s-plane, P, are indicated for each case. Determine the stability of the closed-loop system
by applying the Nyquist criterion. For the unstable systems, give the number of zeros of 1 þL(s) that
are in the right-half s-plane.
j Im L
Re LL-plane
–1 0
(a)j Im L
Re LL-plane
0
(b)–1
j Im L
Re LL-plane
–1
(c)j Im L
Re LL-plane
–1
(d)0
j Im L
Re LL-plane
–1
(e)01 18°j Im L
Re LL-plane
–1
(f)0
Figure FP-3
F-4. It was mentioned in the text that, when the function L(jv) has more zeros than poles, it is
necessary to plot the Nyquist plot of 1 =L(jv) to apply the simpliﬁed Nyquist criterion. Determine the
stability of the systems described by the function 1 =L(jv) shown in Fig. FP-4. For each case, the values
ofPvandPfor the function 1 =L(jv) are given, where Pvrefers to the number of poles of 1 =L(jv) that are
on the jv-axis, and Prefers to the number of poles of 1 þ1/L(jv) that are in the right-half s-plane.F-16"Appendix F. General Nyquist Criterion
Appendix-F_1 05/14/2009 17
j Im
Re -plane
–1
(a)01
L
1
L
1
Lj Im
Re -plane
–1
(b)01
L
1
L
1
L
Figure FP-4
F-5. Fig. FP-5 shows the Nyquist plots of the loop transfer function L(jv) forv¼0t ov¼1 for
single-feedback-loop control systems. The gain Kappears as a multiplying factor in L(s). The number
of poles of L(jv) that are on the jv-axis and in the right-half s-plane are indicated in each case.
Determine the range(s) of Kfor closed-loop system stability.
j Im L
Re LL-plane
0
(a)j Im L
Re LL-plane
0
(b)–2K –2K
j Im L
Re LL-plane
0
(c)j Im L
Re LL-plane
0
(d)–2K –2K
–0.5K
Figure FP-5
F-6. The characteristic equations of linear control systems are given below. Apply the Nyquist
criterion to determine the values of Kfor system stability. Check the answers by means of the Routh-
Hurwitz criterion.
(a)s3þ4Ks2þKþ5 ðÞ sþ10¼0 (b)s3þKs3þ2s2þ1 ðÞ ¼ 0
(c)ssþ1ðÞ s2þ4 ðÞ þ Ks2þ1 ðÞ ¼ 0 (d)s3þ2s2þ20sþ10K¼0
(e)ss3þ3sþ3 ðÞ þ Ksþ2ðÞ ¼ 0
"REFERENCES
1. K. S. Yeung, ‘‘A Reformulation of Nyquist’s Criterion,’’ IEEE Trans. Educ. , Vol. E-28, pp. 58–60, Feb. 1985.References 3F-17
Appendix-G_1 05/14/2009 1
"APPENDIXG
ACSYS 2008: Description
of the Software
This appendix introduces and describes the various components of the Automatic Control
Systems ( ACSYS ) toolbox.
"G-1 INSTALLATION OF ACSYS
The ﬁrst-time user must follow steps (1) and (2) prior to using ACSYS.
1.Create a folder C:\ACSYS2008 (or any folder of your choice).
2.Select all MATLAB and image ﬁles from the ACSYS2008 folder on this book’s
companion Web site: www.wiley.com/college/Golnaraghi. Copy them into your
C:\ACSYS2008 folder.
Please note that if you use another folder name, the preceding and the following directions
should be modiﬁed accordingly.
To run ACSYS2008, simply start MATLAB.
(Note: screen resolution of 1024 by 768 pixels or higher is recommended for best
graphics quality.) At the MATLAB prompt, type
cd C:\ACSYS2008
You may also use the MATLAB directory browser to move to the ACSYS2008 folder. See
MATLAB documentation for instructions. Next, in the MATLAB command window, at theprompt ( >>), type
Acsys
Fig. G-1 should appear. Upon clicking any button, the corresponding toolbox appears.
"G-2 DESCRIPTION OF THE SOFTWARE
The Automatic Control Systems ( ACSYS) tool consists of a number of m-ﬁles and GUIs
(Graphical User Interface) for the analysis of simple control engineering transfer functions.In all, ACSYS is composed of six different toolboxes and a tool for converting engineering
quantities between SI and other units. These components cover various topics encounteredin the study of control systems. These include:
/C15The Transfer Function Symbolic or tfsym
/C15The State Space Tool or Statetool
G-1
Appendix-G_1 05/14/2009 2
/C15The Controller Design Tool or Controls
/C15The SIMLab or simlab
/C15The Virtual Lab or virtuallab
/C15The Quarter Car Simulation or quartercarsim
G-2-1 tfsym
If you have access to the MATLAB Symbolics Tool, you may use the ACSYS Transfer
Function Symbolic Tool by pressing the appropriate button in the ACSYS window. The
Symbolic Tool window is shown in Fig. G-2. Click on the ‘‘Help for 1st Time User’’ button
to see the instructions on how to use the toolbox. The instructions appear in a Help Dialog
window, as shown in Fig. G-3. As instructed, you must run this program within
the MATLAB command window after clicking the desired buttons. For a description
of the ‘‘Transfer Function and Inverse Laplace’’ button, refer to Chapter 2, and, for thestate-space applications, see Chapter 10.
Figure G-1 The Automatic Control Systems (ACSYS) toolbox main window.G-2"Appendix G. ACSYS 2008: Description of the Software
Appendix-G_1 05/14/2009 3
G-2-2 Statetool
The State Space Analysis Tool (Statetool) consists of a number of m-ﬁles and GUIs for the
analysis of state-space systems. The Statetool can be invoked from the Automatic Control
Systems ( ACSYS) launch applet by clicking on the appropriate button. This program may
be used for problems in Chapter 10 and allows the user to conduct the following tasks:
/C15Enter the state matrices.
/C15Find the system characteristic polynomial, eigenvalues, and eigenvectors.
/C15Find the similarity transformation matrices.
/C15Examine the system controllability and observability properties.
/C15Obtain the step, impulse, and natural (response to initial conditions) responses, aswell as the time response to any function of time.
A detailed description of the program appears in Chapter 10.
G-2-3 Controls
The Controller Design Tool (Controls) consists of a number of m-ﬁles and GUIs for the
time and frequency analysis and design of simple control systems using transfer functions.
The controls tool can be invoked from the Automatic Control Systems ( ACSYS ) launch
applet by clicking on the appropriate button. This comprehensive tool is a powerful tool to
Figure G-2 The Transfer Function Symbolic window.
Figure G-3 The Symbolic Help Dialog window.G-2 Description of the Software 3G-3
Appendix-G_1 05/14/2009 4
solve most controller design problems (except for state-space examples) discussed in this
book. This software allows the user to be able to conduct the following tasks:
/C15Enter the transfer function values in polynomial form (user must use the tftool to
convert the transfer function from pole-zero-gain form into the polynomial form).
/C15Obtain the step, impulse, parabolic, ramp, or other type input time responses.
/C15Obtain the closed-loop frequency plots.
/C15Obtain the phase and gain margin Bode plots and the polar plot of the loop transfer
functions (in a single feedback loop conﬁguration).
/C15Understand the effect of adding zeros and poles to the closed-loop or open-looptransfer functions.
/C15Generate root contour and root locus plots to investigate the effect that varyingcertain controller parameters has on the poles of a system.
/C15Design and compare various controllers including PID, lead, and lag compensators.
/C15Convert quantities between different units using the Unit Conversion tool.
The reader can get a detailed discussion of this program in Chapter 9.
G-2-4 SIMLab and Virtual Lab
SIMLab (simlab) and Virtual Lab (virtuall ab) are series of MATLAB and Simulink ﬁles
that make up an educational tool for students learning about dc motors and controlsystems. The SIMLab or the Virtual Lab main menu windows can be called from theAutomatic Control Systems ( ACSYS ) launch applet by clicking on the appropriate
button.
SIMLab was created to allow students to understand the basic simulation model of a dc
motor. The parameters of the motor can be adjusted to see how they affect the system. TheVirtual Lab was designed to exhibit some of the key behaviors of real dc motor systems.
Real motors have issues such as gear backlash and saturation that may cause the motor
response to deviate from expected behavior. Users should be able to cope with theseproblems. The motor parameters cannot be modiﬁed in the Virtual Lab, as in a realisticscenario; a motor may not be modiﬁed unless it is replaced by a new one!
In both the SIMLab and the Virtual Lab, there are ﬁve experiments. In the ﬁrst two
experiments, feedback speed control and position control are explored. Open-loop stepresponse of the motor appears in the third experiment. In the fourth experiment, thefrequency response of the open-loop system can be examined by applying a sinusoidal
input. A controller design project is the last experiment.
For a detailed discussion of these topics, the user is instructed to see Chapter 6.
"G-3 FINAL COMMENTS
This version of ACSYS2008 has been compiled using MATLAB R14 (version 7.0) or
higher, and may possibly have problems with earlier MATLAB versions. The MATLABToolboxes used in this software include Control Systems, Simulink, Real-Time Workshop,and Windows Target. Students who want to use the Student Version of MATLAB should
note that it contains MATLAB, Simulink, and the Symbolic Math Toolbox. Students can
purchase and download additional products to use with their student version. The ControlG-4
"Appendix G. ACSYS 2008: Description of the Software
Appendix-G_1 05/14/2009 5
System Toolbox is one of these products (see the Mathworks Web page1for more
information). For bug reports and enhancements, please send email to mfgolnar@sfu.ca.
Thank you for trying ACSYS.
Farid Golnaraghi, PhD., P.Eng.
Professor and Director Mechatronic Systems EngineeringSimon Fraser UniversityVancouver, British Columbia, CANADA
"REFERENCES
1. B. C. Kuo and F. Golnaraghi, Automatic Control Systems , 8th Ed., John Wiley and Sons, NY, 2003.
2. M. F. Golnaraghi, D. Boulahbal, and R. L. Leask, Solving Engineering Mechanics Problems with MATLAB ,
Book and Software package. ISBN 0-13-021537-6, Prentice-Hall, NJ, 1999References 3G-5
1http://www.mathworks.com/products
Appendix-H_1 05/14/2009 1
"APPENDIXH
Discrete-Data Control
Systems
"H-1 INTRODUCTION
In recent years discrete-data and digital control systems have become more important in
industry, mainly because of advances made in microprocessors and microcomputers.In addition, there are distinct advantages working with digital versus analog signals.
The block diagram of a typical digital control system is shown in Fig. H-1. The system
is characterized by digitally coded signals at various parts of the system. However, theoutput device of the system is usually an analog component, such as a dc motor, driven byanalog signals. Therefore, a digital control system often requires the use of digital-to-
analog (D/A) and analog-to-digital (A/D) converters.
"H-2 THE z-TRANSFORM
Just as linear continuous-data systems are described by differential equations, linear digital
control systems are described by difference equations (see Appendix B). We have seen thatthe Laplace transform is a powerful method of solving linear time-invariant differential
equations. Similarly, z-transform is an operational method of solving linear time-invariant
difference equations.
H-2-1 Deﬁnition of the z-Transform
Consider the sequence y(k),k¼0, 1, 2, . . . , where y(k) could represent a sequence of
numbers or events. The z-transform of y(k) is deﬁned as
YzðÞ¼ z-transform of ykðÞ¼ Z/C0ykðÞ½/C138 ¼X1
k¼0ykðÞz/C0k(H-1)
where zis a complex variable with real and imaginary parts. The signiﬁcance of this
deﬁnition will become clear later. One important property of the z-transform is that it can
convert a sequence of numbers in the real domain into an expression in the complex
z-domain. The following examples illustrate the derivation of the z-transforms of two
simple functions.
"EXAMPLE H-2-1 Consider the sequence
yz kðÞ ¼ e/C0akk¼0;1;2;... (H-2)
H-1
Appendix-H_1 05/14/2009 2
where ais a real constant. Applying Eq. (H-1), the z-transform of y(k) is written
YzðÞ¼X1
k¼0e/C0akz/C0k¼1þe/C0az/C01þe/C02az/C02þ/C1/C1/C1 (H-3)
which converges for e/C0az/C01/C12/C12/C12/C12<1.
Multiplying both sides of the last equation by e/C0az/C01, subtracting the resulting equation from
Eq. (H-3), and solving for Y(z), the latter is expressed in closed form as
YzðÞ¼1
1/C0e/C0az/C01¼z
z/C0e/C0a(H-4)
fore/C0az/C01/C12/C12/C12/C12<1.3
"EXAMPLE H-2-2 In Example H-2-1, if a¼0, we have
ykðÞ¼ 1k¼0;1;2;... (H-5)
which represents a sequence of ones. Then, the z-transform of y(k)i s
YzðÞ¼ 1þz/C01þz/C02þ/C1/C1/C1¼z
z/C01(H-6)
which converges for zjj>1. 3
H-2-2 Relationship between the Laplace Transform and the z-Transform
While the mathematicians like to talk about sequences, engineers feel more at home
dealing with signals. It may be useful to represent the sequence y(kT),k¼0, 1, 2, . . . as a
train of impulses separated by the time interval T. The latter is deﬁned as the sampling
period. The impulse at the kth time instant, d(t/C0kT), carries the value of y(kT). This
situation occurs quite often in digital and sampled-data control systems in which a signaly(t) is digitized or sampled every Tseconds to form a time sequence that represents the
signal at the sampling instants. Thus, we can relate the sequence y(kT) with a signal that
can be expressed as
y
/C3tðÞ¼X1
k¼0yk TðÞdt/C0kTðÞ (H-7)
Taking the Laplace transform on both sides of Eq. (H-7), we have
Y/C3sðÞ¼
 y/C3tðÞ½/C138 ¼X1
k¼0yk TðÞe/C0kTs(H-8)
Comparing Eq. (H-8) with Eq. (H-1), we see that the z-transform may be related to the
Laplace transform through
z¼eTs(H-9)h(t) r*(t) r(t) y(t)
PROCESS D/ADIGITAL
CONTROLLER
Figure H-1 Block diagram of a typical digital control system.H-2"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 3
In fact, the z-transform as deﬁned in Eq. (H-1) may be regarded as a special case with T¼1.
The deﬁnition of the z-transform in Eq. (H-9) allows us to treat sampled systems
and perform digital simulation of continuous-data systems. Thus, we can summarize
the deﬁnition of the z-transform as
YzðÞ¼ Z/C0yk TðÞ½/C138 ¼ Z/C0y/C3tðÞ½/C138 ¼ Z/C0Y/C3sðÞ½/C138 (H-10)
Or, we can write
YzðÞ¼ Z/C0ytðÞ½/C138 ¼ Z/C0YsðÞ½/C138 (H-11)
with the understanding that the function y(t) is ﬁrst sampled or discretized to get y/C3(t)
before taking the z-transform.
"EXAMPLE H-2-3 Consider the time function
ytðÞ¼ e/C0atustðÞ (H-12)
Thez-transform of y(t) is obtained by performing the following steps:
1.Represent the values of y(t) at the time instants t¼kT,k¼0, 1, 2, . . . , to form the
function y/C3(t):
y/C3tðÞ¼X1
k¼0e/C0akTdt/C0kTðÞ (H-13)
2.Take the Laplace transform on both sides of Eq. (H-13):
Y/C3sðÞ¼X1
k¼0e/C0akTe/C0kTs¼X1
k¼0e/C0sþaðÞ kT(H-14)
3.Express Y/C3(s) in closed form and apply Eq. (H-9), giving the z-transform,
YzðÞ¼z
z/C0e/C0aT(H-15)
In general, the z-transforms of more complex functions may be obtained with the help of some of the
z-transform theorems that follow. For engineering purposes, a z-transform table such as that in
Appendix D may be used to transform from y(k)t o Y(z). 3
H-2-3 Some Important Theorems of the z-Transform
Some of the commonly used theorems of the z-transform are stated in the following
without proof. Just as in the case of the Laplace transform, these theorems are useful in
many aspects of the z-transform analysis. For uniformity, the real sequence is expressed as
y(kT), and if a sampling period is not involved, Tcan be set to unity.
&Theorem 1. Addition and Subtraction Ify1(kT) and y2(kT) have z-transforms
Y1(z) and Y2(z), respectively, then
Z/C0y1kTðÞ /C6 y2kTðÞ½/C138 ¼Y1zðÞ/C6 Y2zðÞ (H-16)
&Theorem 2. Multiplication by a Constant
Z/C0ayk TðÞ½/C138 ¼ aZ/C0yk TðÞ½/C138 ¼ aYzðÞ (H-17)
where ais a constant.H-2 The z-Transform 3H-3
Appendix-H_1 05/14/2009 4
&Theorem 3. Real Translation (Time Delay and Time Advance)
Z/C0yk T/C0nTðÞ½/C138 ¼ z/C0nYzðÞ (H-18)
and
Z/C0yk TþnTðÞ½/C138 ¼ znYzðÞ/C0Xn/C01
k¼0yk TðÞz/C0k"
(H-19)
where nis a positive integer.
Eq. (H-18) represents the z-transform of a time sequence that is shifted to the right by
nT, and Eq. (H-19) denotes that of a time sequence shifted to the left by nT. The reason that
the right-hand side of Eq. (H-19) is not just znY(z) is because the one-sided z-transform,
similar to the Laplace transform, is deﬁned only for k/C210. Thus, the second term on the
right-hand side of Eq. (H-19) simply represents the sequence that is lost after it is shifted to
the left of k¼0.
&Theorem 4. Complex Translation
Z/C0e/C7akTyk TðÞ/C2/C3
¼Yz e/C6aT/C0/C1
(H-20)
where ais a constant. Y(z) is the z-transform of y(kT).
&Theorem 5. Initial-Value Theorem
lim
k!0yk TðÞ ¼ limz!1YzðÞ (H-21)
if the limit exists.
&Theorem 6. Final-Value Theorem
lim
k!1yk TðÞ ¼ lim
z!11/C0z/C01/C0/C1
YzðÞ (H-22)
if the function 1 /C0z/C01/C0/C1
YzðÞhas no poles on or outside the unit circle zjj¼1 in the
z-plane.
&Theorem 7. Real Convolution
Y1zðÞY2ðzÞ¼Z/C0XN
k¼0y1kTðÞy2NT/C0kTðÞ"#
¼Z/C0XN
k¼0y2kTðÞy1NT/C0kTðÞ"#
¼Z/C0y1kTðÞ/C3y2kTðÞ½/C138 (H-23)
where ‘‘/C3’’ denotes real convolution in the discrete-time domain.
Thus, we see that, as in the Laplace transform, the z-transform of the product of two
real functions y1(k) and y2(k)i snotequal to the product of the z-transforms Y1(z) and Y2(z).
One exception to this in the case of the z-transform is if one of the two functions is the delay
e/C0NTs, where Nis a positive integer. Then
Z/C0e/C0NTsYsðÞ/C2/C3
¼Z/C0e/C0NTs/C2/C3
Z/C0YsðÞ½/C138 ¼ z/C0NYzðÞ (H-24)
Table H-1 summarizes the theorems on the z-transform just given. The following examples
illustrate the usefulness of some of these theorems.H-4"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 5
"EXAMPLE H-2-4 (Complex-translation theorem ) To ﬁnd the z-transform of y(t)¼te/C0at, letf(t)¼t,t/C210; then
FzðÞ¼ Z/C0tustðÞ½/C138 ¼ Z/C0kTðÞ ¼Tz
z/C01ðÞ2(H-25)
Using the complex-translation theorem in Eq. (H-20), we obtain
YzðÞ¼ Z/C0te/C0atustðÞ½/C138 ¼ Fz eaT/C0/C1
¼Tze/C0aT
z/C0e/C0aTðÞ2(H-26)
3
"EXAMPLE H-2-5 (Final-value theorem ) Given the function
YzðÞ¼0:792z2
z/C01ðÞ z2/C00:146zþ0:208ðÞ(H-27)
determine the value of y(kT)a skapproaches inﬁnity.
Because the function (1 /C0z/C01)Y(z) does not have any pole on or outside the unit circle zjj¼ 1i n
thez-plane, the ﬁnal-value theorem in Eq. (H-22) can be applied. Thus,
lim
k!1yk TðÞ ¼ lim
z!10:792z
z2/C00:416zþ0:208(H-28)
3
H-2-4 Inverse z-Transform
Just as in the Laplace transform, one of the major objectives of the z-transform is that
algebraic manipulations can be made ﬁrst in the z-domain and then the ﬁnal time response
determined by the inverse z-transform. In general, the inverse z-transform of a function
Y(z)yields information on y (kT)only,not on y (t).In other words ,the z-transform carries
information only at the sampling instants . With this in mind, the inverse z-transform can
be carried out by one of the following three methods:TABLE H-1 Theorems of z-Transforms
Addition and subtraction Z/C0y1kTðÞ /C6 y2kTðÞ½/C138 ¼Y1zðÞ/C6 Y2zðÞ
Multiplication by a constant Z/C0ayk TðÞ½/C138 ¼ aZ/C0yk TðÞ½/C138 ¼ aYzðÞ
Real translation Z/C0yk/C0nðÞ T½/C138 ¼ z/C0nYzðÞ(time delay)
Z/C0ykþnðÞ T½/C138 ¼ znYzðÞ/C0Xn/C01
k¼0yk TðÞz/C0k"#
(time advance)
where n¼positive integer
Complex translation Z/C0e/C7akTyk TðÞ/C2/C3
¼Yz e/C6aT/C0/C1
Initial-value theorem lim
k!0yk TðÞ ¼ limz!1YzðÞ
Final-value theorem lim
k!1yk TðÞ ¼ lim
z!11/C0z/C01/C0/C1
YzðÞ
if (1/C0z/C01)Y(z) has no poles on or inside zjj¼1.
Y1zðÞY2zðÞ¼ Z/C0Xn
k¼0y1kTðÞy2NT/C0kTðÞ"#
Real convolution
¼Z/C0Xn
k¼0y2kTðÞy1NT/C0kTðÞ"#
¼Z/C0y1kTðÞ/C3y2kTðÞ½/C138H-2 The z-Transform 3H-5
Appendix-H_1 05/14/2009 6
1.Partial-fraction expansion
2.Power-series method
3.The inverse formula
Partial-Fraction Expansion Method
The z-transform function Y(z) is expanded by partial-fraction expansion into a sum of
simple recognizable terms, and the z-transform table is used to determine the correspond-
ingy(kT). In carrying out the partial-fraction expansion, there is a slight difference between
thez-transform and the Laplace transform procedures. With reference to the z-transform
table, we note that practically all the z-transform functions have the term zin the
numerator. Therefore, we should expand Y(z) into the form of
YzðÞ¼K1z
z/C0e/C0aTþK2z
z/C0e/C0bTþ/C1/C1/C1 (H-29)
To do this, ﬁrst expand Y(z)=zinto fractions and then multiply by zto obtain the ﬁnal
expression. The following example will illustrate this procedure.
"EXAMPLE H-2-6 Given the z-transform function
YzðÞ¼1/C0e/C0aT/C0/C1
z
z/C01ðÞ z/C0e/C0aTðÞ(H-30)
ﬁnd the inverse z-transform. Expanding Y(z)=zby partial-fraction expansion, we have
YzðÞ
z¼1
z/C01/C01
z/C0e/C0aT(H-31)
The ﬁnal expanded expression for Y(z)i s
YzðÞ¼z
z/C01/C0z
z/C0e/C0aT(H-32)
From the z-transform table in Appendix D, the corresponding inverse z-transform of Y(z) is found
to be
yk TðÞ ¼ 1/C0e/C0akTk¼0;1;2;/C1/C1/C1 (H-33)
It should be pointed out that if Y(z) does not contain any factors of zin the numerator, this usually
means that the time sequence has a delay, and the partial-fraction expansion of Y(z) should be carried
out without ﬁrst dividing the function by z. The following example illustrates this situation. 3
"EXAMPLE H-2-7 Consider the function
YzðÞ¼1/C0e/C0aT/C0/C1
z/C01ðÞ z/C0e/C0aTðÞ(H-34)
which does not contain any powers of zas a factor in the numerator. In this case, the partial-fraction
expansion of Y(z) is carried out directly. We have
YzðÞ¼1
z/C01/C01
z/C0e/C0aT(H-35)
Although the z-transform table does not contain exact matches for the components in Eq. (H-35), we
recognize that the inverse z-transform of the ﬁrst term on the right-hand side can be written as
Z/C0/C01 1
z/C01/C20/C21
¼Z/C0/C01z/C01z
z/C01/C20/C21
¼X1
k¼1z/C01¼ukk/C01ðÞ T½/C138 k¼1;2;/C1/C1/C1 (H-36)H-6"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 7
Similarly, the second term on the right-hand side of Eq. (H-35) can be identiﬁed with a time delay of T
seconds. Thus, the inverse z-transform of Y(z) is written
yk TðÞ ¼ 1/C0e/C0ak/C01ðÞ T/C16/C17
uk/C01ðÞ T½/C138 k¼1;2;/C1/C1/C1 (H-37)
3
H-2-5 Computer Solution of the Partial-Fraction Expansion of Y(z)=z
Whether the function to be expanded by partial fraction is in the form of Y(z)=zorY(z), the
computer programs designed for performing the partial-fraction of Laplace transform
functions can still be applied.
Power-Series Method
The deﬁnition of the z-transform in Eq. (H-1) gives a straightforward method of carrying
out the inverse z-transform. Based on Eq. (H-1), we can clearly see that in the sampled case
the coefﬁcient of z/C0kinY(z) is simply y(kT). Thus, if we expand Y(z) into a power series in
powers of z/C0k, we can ﬁnd the values of y(kT) for k¼0, 1, 2, . . . .
"EXAMPLE H-2-8 Consider the function Y(z) given in Eq. (H-30), which can be expanded into a power series of z/C01by
dividing the numerator polynomial by the denominator polynomial by long division. The result is
YzðÞ¼ 1/C0e/C0aT/C0/C1
z/C01þ1/C0e/C02aT/C0/C1
z/C02þ/C1/C1/C1þ 1/C0e/C0kaT/C0/C1
z/C0kþ/C1/C1/C1 (H-38)
Thus, it is apparent that
yk TðÞ ¼ 1/C0e/C0akTk¼0;1;2;... (H-39)
which is the same result as in Eq. (H-33). 3
Inversion FormulaThe time sequence y(kT) can be determined from Y(z) by use of the inversion formula:
yk TðÞ ¼1
2pjI
GYzðÞzk/C01dz (H-40)
which is a contour integration along the path G, that is, a circle of radius zjj¼ecTcentered
at the origin in the z-plane, and cis a value such that the poles of Y(z)zk/C01are inside the
circle. The inversion formula of the z-transform is similar to that of the inverse Laplace-
transform integral given in Eq. (2-124). One way of evaluating the contour integration ofEq. (H-40) is to use the residue theorem of complex-variable theory (the details are not
covered here).
H-2-6 Application of the z-Transform to the Solution of Linear Difference Equations
Thez-transform can be used to solve linear difference equations. As a simple example, let
us consider the ﬁrst-order unforced difference equation
ykþ1ðÞ þ ykðÞ¼ 0 (H-41)
To solve this equation, we take the z-transform on both sides of the equation. By this, we
mean that we multiply both sides of the equation by z/C0kand take the sum from k¼0t ok¼
1. We have
X1
k¼0ykþ1ðÞ z/C0kþX1
k¼0ykðÞz/C0k¼0 (H-42)H-2 The z-Transform 3H-7
Appendix-H_1 05/14/2009 8
By using the deﬁnition of Y(z) and the real translation theorem of Eq. (H-19) for time
advance, the last equation is written
zY zðÞ/C0 y0ðÞ½/C138 þ YzðÞ¼ 0 (H-43)
Solving for Y(z), we get
YzðÞ¼z
zþ1y0ðÞ (H-44)
The inverse z-transform of the last equation can be obtained by expanding Y(z) into a power
series in z/C01by long division. We have
YzðÞ¼ 1/C0z/C01þz/C02/C0z/C03þ/C1/C1/C1/C0/C1
x0ðÞ (H-45)
Thus, y(k) is written
ykðÞ¼/C0 1ðÞky0ðÞ k¼0;1;2;... (H-46)
Eq. (H-41) is recognized as a single-state equation. The z-transform solution of high-order
discrete-data systems described by state equations is treated in Section H-3.
The following example shows the z-transform solution of a second-order difference
equation.
"EXAMPLE H-2-9 Consider the second-order difference equation
ykþ2ðÞ þ 0:5ykþ1ðÞ þ 0:2ykðÞ¼ ukðÞ (H-47)
where
ukðÞ¼ ukðÞ¼ 1 for k¼0;1;2;... (H-48)
The initial conditions of y(k) are y(0)¼0 and y(1)¼0.
Taking the z-transform on both sides of Eq. (H-47), we get
z2YzðÞ/C0 z2y0ðÞ/C0 zy1ðÞ/C2/C3
þ0:5zY zðÞ/C0 zy0ðÞ½/C138þ0:2YzðÞ¼ UzðÞ (H-49)
The z-transform of u(k)i s U(z)¼z=(z/C01). Substituting the initial conditions of y(k) and the
expression of U(z) into Eq. (H-49) and solving for Y(z), we have
YzðÞ¼z
z/C01ðÞ z2þ0:5zþ0:2ðÞ(H-50)
The partial-fraction expansion of Y(z)=zis
YzðÞ
z¼0:588
z/C01/C01:036ej1:283
zþ0:25þj0:37/C01:036e/C0j1:283
zþ0:25/C0j0:37(H-51)
where the exponents in the numerator coefﬁcients are in radians.
Taking the inverse z-transform of Y(z), we get
ykðÞ¼ 0:588/C01:036 0 :447ðÞke/C0j2:165k/C01:283ðÞþej2:165k/C01:283ðÞhi
¼0:588/C02:072 0: 447ðÞkcos 2 :165k/C01:283ðÞ k/C210(H-52)
3
"H-3 TRANSFER FUNCTIONS OF DISCRETE-DATA SYSTEMS
Discrete-data control systems have the unique features that the signals in these systems
either are in the form of pulse trains or are digitally coded, and the controlled processesoften contain analog components. For instance, a dc motor, which is an analog device, canH-8
"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 9
be controlled either by a controller that outputs analog signals or by a digital controller that
outputs digital data. In the latter case, an interface such as a digital-to-analog (D/A)converter is necessary to couple the digital component to the analog devices. The input andoutput of the discrete-data system in Fig. H-1 can be represented by number sequences withthe numbers separated by the sampling period T.
For linear operation, the D/A converter can be represented by a sample-and-hold
(S/H) device, which consists of a sampler and a data-hold device. The S/H that is most
often used for the analysis of discrete-data systems consists of an ideal sampler and a
zero-order-hold (ZOH) device. Thus, the system shown in Fig. H-1 can be functionally
represented by the block diagram in Fig. H-2. Fig. H-3 shows the typical operation of anideal sampler and a ZOH. The continuous data r(t) is sampled with a sampling period Tby
the ideal sampler. The output of the ideal sampler r
/C3(t) is a train of impulses with the
magnitudes of r(t)a tTcarried by the strengths of the impulses. Note that the ideal sampler
is not a physical entity. It is devised simply to represent the discrete-time signalmathematically. In Fig. H-3, the arrows at the sampling instants represent impulses.
Because, by deﬁnition, an impulse has zero pulse width and inﬁnite height, the lengths of
the arrows simply represent the areas under the impulses and are the magnitudes of
the input signal r(t) at the sampling instants. The ZOH simply holds the magnitude of the
signal carried by the incoming impulse at a given time instant, say, kT, for the entire
sampling period tuntil the next impulse arrives at t¼(kþ1)T. The output of the ZOH is a
h(t) ZOHr*(t) r(t)
T
Figure H-2 Sample-and-hold (S/H) device.
r(t)
0t
(a)
r*(t)
0t
(b)
h(t)
0t
(c)T2T 3T4T 5T6T 7T 8T 9T
T2T 3T4T 5T6T7T8T 9T13T12T 11T 10T
Figure H-3 (a) Input signal to an ideal sampler. (b) Output signal of an ideal sampler. (c) Output
signal of a zero-order-hold (ZOH) device.H-3 Transfer Functions of Discrete-Data Systems 3H-9
Appendix-H_1 05/14/2009 10
staircase approximation of the input to the ideal sampler, r(t). As the sampling period T
approaches zero, the output of the ZOH, h(t), approaches r(t); that is,
lim
T!0htðÞ¼ rtðÞ (H-53)
However, because the output of the sampler, r/C3(t), is an impulse train, its limit as T
approaches zero does not have any physical meaning. Based on the preceding discussions,
a typical open-loop discrete-data system is modeled as shown in Fig. H-4.
There are several ways of deriving the transfer-function representation of the system in
Fig. H-5. The following derivation is based on the Fourier-series representation of the
signal r/C3(t). We begin by writing
r/C3tðÞ¼ rtðÞdTtðÞ (H-54)
where dT(t) is the unit-impulse train,
dTtðÞ¼X1
k¼/C01dt/C0kTðÞ (H-55)
Because dT(t) is a periodic function with period T, it can be expressed as a Fourier series:
dTtðÞ¼X1
n¼/C01Cnej2pnt=T(H-56)
where Cnis the Fourier coefﬁcient and is given by
Cn¼1
TZT
0dTtðÞe/C0jnvstdt (H-57)
where vs¼2p=Tis the sampling frequency in rad/sec.
Because the unit impulse is deﬁned as a pulse with a width of dand a height of 1= d, and
d!0,Cnis written
Cn¼lim
d!01
TdZd
0e/C0jnvstdt¼lim
d!01/C0e/C0jnvsd
jnvsTd¼1
T(H-58)r(t) r*(t) h(t)S1
ZOHCONTROLLED
PROCESSS2
Ty*(t)
y(t)
T
Figure H-5 Discrete-data system with a ﬁctitious sampler.y(t)
ZOHr*(t) h(t) r(t)CONTROLLED
PROCESSG(s)
T
Figure H-4 Block diagram of a discrete-data system.H-10"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 11
Substituting Eq. (H-58) in Eq. (H-56), and then the latter in Eq. (H-54), we get
r/C3tðÞ¼1
TX1
n¼/C01rtðÞejnvst(H-59)
Taking the Laplace transform on both sides of Eq. (H-59), and using the complex shifting
property of Eq. (2-137), we get
R/C3sðÞ¼1
TX1
n¼/C01Rs/C0jnvsðÞ ¼1
TX1
n¼/C01RsþjnvsðÞ (H-60)
Eq. (H-60) represents the Laplace transform of the sampled signal r/C3(t). It is an alternative
expression to Eq. (H-8). From Eq. (H-8), R/C3(s) can be written as
R/C3sðÞ¼X1
k¼0rk TðÞe/C0kTs(H-61)
Because the summing limits of R/C3(s) range from/C01 to1,i fs is replaced by sþjmvsin
Eq. (H-60), where mis any integer, we have
R/C3sþjmvsðÞ ¼ R/C3sðÞ (H-62)
Pulse-Transfer FunctionNow we are ready to derive the transfer function of the discrete-data system shown inFig. H-4. The Laplace transform of the system output y(t) is written
YsðÞ¼ GsðÞR
/C3sðÞ (H-63)
Although the output y(t)i so b t a i n e df r o mY (s) by taking the inverse Laplace transform
on both sides of Eq. (H-63), this step is difﬁcult to execute because G(s)a n d R/C3(s)
represent different types of signals. To o vercome this problem, we apply a ﬁctitious
sampler at the output of the system, as shown in Fig. H-5. The ﬁctitious sampler S2has
the same sampling period Ta n di ss y n c h r o n i z e dt ot h eo r i g i n a ls a m p l e r S1.T h e
sampled form of y(t)i sy/C3(t). Applying Eq. (H-60) to y/C3(t), and using Eq. (H-63), we
have
Y/C3sðÞ¼1
TX1
n¼/C01GsþjnvsðÞ R/C3sþjnvsðÞ (H-64)
In view of the relationship in Eq. (H-62), Eq. (H-64) is written
Y/C3sðÞ¼ R/C3sðÞ1
TX1
n¼/C01GsþjnvsðÞ ¼ R/C3sðÞG/C3sðÞ (H-65)
where G/C3(s) is deﬁned the same way as R/C3(s) in Eq. (H-60) and is called the pulse-transfer
function ofG(s).
z-Transfer Function
Now that all the functions in Eq. (H-65) are in sampled form, where R/C3(s),G/C3(s), and Y/C3(s)
all have the form of Eq. (H-61), we can take the z-transform on both sides of the equation
by substituting z¼eTs. We have
YzðÞ¼ GzðÞRzðÞ (H-66)H-3 Transfer Functions of Discrete-Data Systems 3H-11
Appendix-H_1 05/14/2009 12
where G(z) is deﬁned as the z-transfer function ofG(s) and is given by
GzðÞ¼X1
k¼0gk TðÞz/C0k(H-67)
Thus, for the discrete-data system shown in Figs. H-5 and H-6, the z-transform of the
output is equal to the z-transfer function of the process and the z-transform of the input.
H-3-1 Transfer Functions of Discrete-Data Systems with Cascade Elements
The transfer-function representation of discrete-data systems with elements connected in
cascade is slightly more involved than that for continuous-data systems, because of the
variation of having or not having samplers in between the elements. Fig. H-6 shows
two different discrete-data systems that contain two elements connected in cascade.
In the system of Fig. H-6(a), the two elements are separated by the sampler S2, which
is synchronized to, and has the same period as, the sampler S1. The two elements in the
system of Fig. H-6(b) are connected directly together. It is important to distinguish thesetwo cases when deriving the pulse-transfer function and the z-transfer function. For the
system in Fig. H-6(a), the output of G
1(s) is written
DsðÞ¼ G1sðÞR/C3sðÞ (H-68)
and the system output is
YsðÞ¼ G2sðÞD/C3sðÞ (H-69)
Taking the pulse transform on both sides of Eq. (H-68) and using Eq. (H-62), we have
D/C3sðÞ¼ G/C3
1sðÞR/C3sðÞ (H-70)r(t)
R(s)r*(t)
R*(s)G1(s) G2(s)
Td(t)
D(s)d*(t)
D*(s)Ty*(t)
y(t)Y*(s)
Y(s)S1S2
r(t)
R(s)r*(t)
R*(s)G1(s) G2(s)
Td(t)
D(s)Ty*(t)
y(t)Y*(s)
Y(s)(a)
(b)T
Figure H-6 (a) Discrete-data system with cascaded elements and a sampler separating the two
elements. (b) Discrete-data system with cascaded elements and no sampler in between.H-12"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 13
Now substituting Eq. (H-70) in Eq. (H-69) and taking the pulse transform, we get
Y/C3sðÞ¼ G/C3
1sðÞG/C32sðÞR/C3sðÞ (H-71)
The corresponding z-transform expression of Eq. (H-71) is
YzðÞ¼ G1zðÞG2zðÞRzðÞ (H-72)
We conclude that thez-transform of two systems separated by a sampler is equal to the
product of the z-transforms of the two systems .
The Laplace transform of the output of the system in Fig. H-6(b) is
YsðÞ¼ G1sðÞG2sðÞR/C3sðÞ (H-73)
Taking the pulse transform on both sides of the last equation, we get
Y/C3sðÞ¼ G1sðÞG2sðÞ½/C138/C3R/C3sðÞ (H-74)
where
G1sðÞG2sðÞ½/C138/C3¼1
TX1
n¼/C01G1sþjnvsðÞ G2sþjnvsðÞ (H-75)
Notice that because G1(s) and G2(s) are not separated by a sampler, they have to be treated
as one system when taking the pulse transform.
Taking the z-transform on both sides of Eq. (H-74) gives
YzðÞ¼ Z/C0G1sðÞG2sðÞ½/C138/C3fg RzðÞ (H-76)
Let
Z/C0G1sðÞG2sðÞ½/C138/C3fg¼G1G2zðÞ (H-77)
Then, Eq. (H-76) is written
YzðÞ¼ G1G2zðÞRzðÞ (H-78)
H-3-2 Transfer Function of the Zero-Order-Hold
Based on the description of the ZOH given earlier, its impulse response is shown in
Fig. H-7. The transfer function of the ZOH is written
GhsðÞ¼
 ghtðÞ½/C138 ¼1/C0e/C0Ts
s(H-79)
0T t1gh (t)
Figure H-7 Impulse response of the ZOH.H-3 Transfer Functions of Discrete-Data Systems 3H-13
Appendix-H_1 05/14/2009 14
Thus, if the ZOH is connected in cascade with a linear process using transfer function
Gp(s), as shown in Fig. H-5, the z-transform of the combination is written
GzðÞ¼ Z/C0GhsðÞGpsðÞ/C2/C3
¼Z/C01/C0e/C0Ts
sGpsðÞ/C18/C19
(H-80)
By using the time-delay property of z-transforms, Eq. (H-18), Eq. (H-80) is simpliﬁed to
GzðÞ¼ 1/C0z/C01/C0/C1
Z/C0GpsðÞ
s/C18/C19
(H-81)
"EXAMPLE H-3-1 Consider that, for the system shown in Fig. H-5,
GpsðÞ¼1
ssþ0:5ðÞ(H-82)
The sampling period is 1 second. The z-transfer function of the system between the input and the
output is determined using Eq. (H-81).
GzðÞ¼ 1/C0z/C01/C0/C1
Z/C01
s2sþ0:5ðÞ/C18/C19
¼1/C0z/C01/C0/C1
Z/C02
s2/C04
sþ4
sþ0:5/C18/C19
¼0:426zþ0:361
z2/C01:606zþ0:606(H-83)
3
H-3-3 Transfer Functions of Closed-Loop Discrete-Data Systems
The transfer functions of closed-loop discrete-data systems are derived using the followingprocedures:
1.Regard the outputs of samplers as inputs to the system.
2.All other noninputs of the system are treated as outputs.
3.Write cause-and-effect equations between the inputs and the outputs of the systemusing the SFG gain formula.
4.Take the pulsed transform or the z-transform of the equations obtained in Step 3, and
manipulate these equations to get t he pulse-transfer function or the z-transfer function.
Reference [1] describes the sampled signal- ﬂ o wg r a p ht h a tc a nb eu s e dt oi m p l e m e n tS t e p4
using the SFG gain formula.
The following examples illustrate the algebraic procedure of ﬁnding the transfer functionsof closed-loop discrete-data systems.
"EXAMPLE H-3-2
Consider the closed-loop discrete-data system shown in Fig. H-8. The output of the sampler is
regarded as an input to the system. Thus, the system has inputs R(s) and E/C3(s). The signals E(s) and
Y(s) are regarded as the outputs of the system.
Writing the cause-and-effect equations for E(s) and Y(s) using the gain formula, we get
EsðÞ¼ RsðÞ/C0 GsðÞHsðÞE/C3sðÞ (H-84)
YsðÞ¼ GsðÞE/C3sðÞ (H-85)H-14"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 15
Notice that the right-hand side of the last two equations contains only the inputs R(s)a n d E/C3(s)a n d
the transfer functions. Taking the pulse transform on both sides of Eq. (H-60) and solving for E/C3(s),
we get
E/C3sðÞ¼R/C3sðÞ
1þGsðÞHsðÞ½/C138/C3 (H-86)
Substituting E/C3(s) from Eq. (H-86) into Eq. (H-85), we get
YsðÞ¼GsðÞ
1þGsðÞHsðÞ½/C138/C3R/C3sðÞ (H-87)
Taking the pulse transform on both sides of Eq. (H-87) and using Eq. (H-62), we arrive at the pulse-
transfer function of the closed-loop system,
Y/C3sðÞ
R/C3sðÞ¼G/C3sðÞ
1þGsðÞHsðÞ½/C138/C3 (H-88)
Taking the z-transform on both sides of the last equation, we have
YzðÞ
RzðÞ¼GzðÞ
1þGH zðÞ(H-89)
3
"EXAMPLE H-3-3 We show in this example that, although it is possible to deﬁne an input–output transfer function forthe system in Fig. H-8, this may not be possible for all discrete-data systems. Let us consider thesystem shown in Fig. H-9, which has a sampler in the feedback path. In this case, the outputs of the
sampler Y
/C3(s) and R(s) are the inputs of the system; Y(s) and E(s) are regarded as the outputs. Writing
E(s) and Y(s) in terms of the inputs using the gain formula, we get
YsðÞ¼ GsðÞEsðÞ (H-90)
EsðÞ¼ RsðÞ/C0 HsðÞY/C3sðÞ (H-91)Ty*(t)
Y*(s)
y(t)
Y(s)Te*(t) e(t)
E(s)r(t)
R(s) E*(s)G(s)
H(s)+
–
Figure H-8 Closed-loop discrete-data system.
Ty*(t)
Y*(s)
y*(t)
Y*(s)y(t)
Y(s)e(t)
E(s)r(t)
R(s)G(s)
+
–
H(s)
T
Figure H-9 Closed-loop discrete-data system.H-3 Transfer Functions of Discrete-Data Systems 3H-15
Appendix-H_1 05/14/2009 16
Taking the pulse transform on both sides of the last two equations and after simple algebraic
manipulations, the pulse transform of the output is written
Y/C3sðÞ¼GsðÞRsðÞ½/C138/C3
1þGsðÞHsðÞ½/C138/C3 (H-92)
Note that the input R(s) and the transfer function G(s) are now combined as one function, [ G(s)R(s)]/C3,
and we cannot deﬁne a transfer function in the form of Y/C3(s)=R/C3(s). The z-transform of the output is
written
YzðÞ¼GR zðÞ
1þGH zðÞ(H-93)
Although we have been able to arrive at the input–output transfer function and transfer relation of the
systems in Figs. H-8 and H-9 by algebraic means without difﬁculty, for more complex system
conﬁgurations, the algebraic method may become tedious. The signal-ﬂow graph method may beextended to the analysis of discrete-data systems; refer to Reference [1] at the end of this appendix for
details.
3
"H-4 STATE EQUATIONS OF LINEAR DISCRETE-DATA SYSTEMS
Just as for continuous-data systems, the modern way of modeling a discrete-data system is
by discrete state equations. As described earlier, when dealing with discrete-data systems,
we often encounter two situations. The ﬁrst one is that the system contains continuous-datacomponents, but the signals at certain points of the system are discrete with respect to timebecause of sample-and-hold (S/H) operations. In this case, the components of the system
are still described by differential equations, but because of the discrete-time data, the
differential equations are discretized to yield a set of difference equations. The secondsituation involves systems that are completely discrete with respect to time, and the system
dynamics should be difference equations from the outset.
H-4-1 Discrete State Equations
Let us consider the discrete-data control system with an S/H device, as shown in Fig. H-10.
Typical signals that appear at various points in the system are shown in the ﬁgure. Theoutput signal y(t) ordinarily is a continuous-data signal. The output of the S/H, h(t), is a
sequence of steps. Therefore, we can write
htðÞ¼ hk TðÞ ¼ rk TðÞ (H-94)
forkT/C20t<(kþ1)T,k¼0, 1, 2, . . . .
Now we let the linear process Gbe described by the state equation and output equation
dxtðÞ
dt¼AxtðÞþ BhtðÞ (H-95)
ytðÞ¼ CxtðÞþ DhtðÞ (H-96)
where x(t) is the n/C2nstate vector, and h(t) and y(t) are the scalar input and output,
respectively. The matrices A,B,C, and Dare coefﬁcient matrices. By using Eq. (10-79),
the state transition equation is
xtðÞ¼ ft/C0t0ðÞ xt0ðÞþZt
t0ft/C0tðÞ BhtðÞdt (H-97)H-16"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 17
fort/C21t0. If we are interested only in the responses at the sampling instants, we let
t¼(kþ1)Tandt0¼kT. Then Eq. (H-97) becomes
xkþ1ðÞ T½/C138 ¼ fTðÞxkTðÞ þZkþ1ðÞ T
kTfkþ1ðÞ T/C0t½/C138 BhtðÞdt (H-98)
Because h(t) is piecewise constant, as deﬁned in Eq. (H-95), the input h(t) in Eq. (H-98)
can be taken outside of the integral sign. Eq. (H-98) is written
xkþ1ðÞ T½/C138 ¼ fTðÞxkTðÞ þZkþ1ðÞ T
kTfkþ1ðÞ T/C0t½/C138 Bdthk TðÞ (H-99)0r(t)
t
t
t
0y(t)
t0r*(t)
T2T3T4T5T6T7T
0h(t)
T2T3T4T5T6T7TZOH Gy(t) h(t) r*(t) r(t)
T
Figure H-10 Discrete-data system with sample-and-hold (S/H).H-4 State Equations of Linear Discrete-Data Systems 3H-17
Appendix-H_1 05/14/2009 18
or
xkþ1ðÞ T½/C138 ¼ fTðÞxkTðÞ þ uTðÞhk TðÞ (H-100)
where
uTðÞ¼Zkþ1ðÞ T
kTfkþ1ðÞ T/C0t½/C138 Bdt¼ZT
0fT/C0tðÞ Bdt (H-101)
Eq. (H-100) is of the form of a set of linear ﬁrst-order difference equations in vector-matrix
form and is referred to as the vector-matrix discrete state equation .
H-4-2 Solutions of the Discrete State Equations: Discrete State-Transition Equations
The discrete state equations represented by Eq. (H-100) can be solved by using a simplerecursion procedure. By setting k¼0, 1, 2, . . . successively in Eq. (H-100), the following
equations result:
k¼0: xTðÞ¼ fTðÞx0ðÞþ uTðÞh0ðÞ (H-102)
k¼1: x2TðÞ ¼ f2TðÞ ¼ fTðÞxTðÞþ uTðÞhTðÞ (H-103)
k¼2: x3TðÞ ¼ f3TðÞ ¼ fTðÞx2TðÞ þ uTðÞh2TðÞ (H-104)
......
k¼n/C01: xnTðÞ ¼ fTðÞxn/C01ðÞ T½/C138 þ uTðÞhn/C01ðÞ T½/C138 (H-105)
Substituting Eq. (H-102) into Eq. (H-103), then Eq. (H-103) into Eq. (H-104), and so on,
we obtain the following solution for Eq. (H-100):
xnTðÞ ¼ f
nTðÞx0ðÞþXn/C01
i¼0fn/C0i/C01TðÞuTðÞhi TðÞ (H-106)
where, from Eq. (5-36), fn(T)¼[f(T)]n¼f(nT).
Eq. (H-106) is deﬁned as the discrete state-transition equation of the discrete-data
system. It is interesting to note that Eq. (H-106) is analogous to its continuous-data
counterpart in Eq. (5-54). The state-transition equation of Eq. (H-97) describes the state of
the system of Fig. H-10 for all values of t, whereas the discrete state-transition equation in
Eq. (H-106) describes the states only at the sampling instants t¼nT,n¼0, 1, 2, . . . .
With nTconsidered as the initial time, where nis any positive integer, the state-
transition equation is
xnþNðÞ T½/C138 ¼ fNTðÞxnTðÞ þXN/C01
i¼0fN/C0i/C01TðÞuTðÞhnþiðÞ T½/C138 (H-107)
where Nis a positive integer.
The output of the system at the sampling instants is obtained by substituting t¼nTand
Eq. (H-106) into Eq. (H-96), yielding
yn TðÞ ¼ CxnTðÞ þ Dhn TðÞ
¼CfnTðÞx0ðÞþ CXn/C01
i¼0fn/C0i/C01ðÞ T½/C138 uTðÞhi TðÞ þ DhnTðÞ (H-108)
An important advantage of the state-variable method over the z-transform method
is that it can be modiﬁed easily to describe the states and the output betweenH-18"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 19
sampling instants. In Eq. (H-97), if we let t¼(nþD)T,w h e r e0< D/C201a n dt 0¼nT,
we get
xnþDðÞ T½/C138 ¼ fDTðÞ xnTðÞ þZnþDðÞ T
nTfnþDðÞ T/C0t½/C138 Bdthn TðÞ
¼fDTðÞ xn TðÞ þ uDTðÞ hn TðÞ(H-109)
By varying the value of Dbetween 0 and 1, the information on the state variables between
the sampling instants is completely described by Eq. (H-109).
When a linear system has only discrete data through the system, its dynamics can be
described by a set of discrete state equations:
xkþ1ðÞ T½/C138¼AxkTðÞþBrkTðÞ (H-110)
and output equations:
ykTðÞ ¼ CxkTðÞ þ DrkTðÞ (H-111)
where A,B,C,a n dD are coefﬁcient matrices of the appropriate dimensions. Notice that
Eq. (H-110) is basically of the same form as Eq. (H-100). The only difference in the two
situations is the starting point of system representation. In the case of Eq. (H-100), thestarting point is the continuous-data state equations of Eq. (H-95); f(T)a n d u(T)a r e
determined from the AandBmatrices and must satisfy the conditions and properties of
the state transition matrix. In the case of Eq. (H-110), the equation itself represents anoutright description of the discrete-data system, and there are no restrictions on thematrices AandB.
The solution of Eq. (H-110) follows directly from that of Eq. (H-100) and is
xnTðÞ ¼ A
nx0ðÞþXn/C01
i¼0An/C0i/C01BriTðÞ (H-112)
where
An¼AAAA/C1/C1/C1A
 n!jj(H-113)
H-4-3 z-Transform Solution of Discrete State Equations
In Section H-1-5, we illustrated the solution of a simple discrete state equation by the z-
transform method. In this section, the discrete state equations in vector-matrix form of annth-order system are solved by z-transformation. Consider the discrete state equations
xkþ1ðÞ T½/C138 ¼ AxkTðÞ þ BrkTðÞ (H-114)
Taking the z-transform on both sides of the last equation, we get
zXzðÞ/C0 zx0ðÞ¼ AXzðÞþ BRzðÞ (H-115)
Solving for X(z) from Eq. (H-115), we get
XzðÞ¼ zI/C0AðÞ
/C01zx0ðÞþ zI/C0AðÞ/C01BRzðÞ (H-116)H-4 State Equations of Linear Discrete-Data Systems 3H-19
Appendix-H_1 05/14/2009 20
Taking the inverse z-transform on both sides of Eq. (H-116), we have
xnTðÞ ¼ Z/C0/C01zI/C0AðÞ/C01zhi
x0ðÞþ Z/C0/C01zI/C0AðÞ/C01BRzðÞhi
(H-117)
To carry out the inverse z-transform operation of the last equation, we write the z-transform
ofAnas
Z/C0AnðÞ ¼X1
n¼0Anz/C0n¼IþAz/C01þA2z/C02þ/C1/C1/C1 (H-118)
Premultiplying both sides of Eq. (H-118) by Az/C01and subtracting the result from the last
equation, we get
I/C0Az/C01/C0/C1
Z/C0AnðÞ ¼ I (H-119)
Therefore, solving for Z/C0AnðÞ from the last equation yields
Z/C0AnðÞ ¼ I/C0Az/C01/C0/C1/C01¼zI/C0AðÞ/C01z (H-120)
or
An¼Z/C0/C01zI/C0AðÞ/C01zhi
(H-121)
Eq. (H-121) represents a way of ﬁnding Anby using the z-transform method. Similarly, we
can prove that
Z/C0/C01zI/C0AðÞ/C01BRzðÞhi
¼Xn/C01
i¼0An/C0i/C01BriTðÞ (H-122)
Now we substitute Eqs. (H-121) and (H-122) into Eq. (H-117), x(nT) becomes
xnTðÞ ¼ Anx0ðÞþXn/C01
i¼0An/C0i/C01BriTðÞ (H-123)
which is identical to Eq. (H-112).
H-4-4 Transfer-Function Matrix and the Characteristic Equation
Once a discrete-data system is modeled by the dynamic equations of Eqs. (H-110) and
(H-111), the transfer-function relation of the system can be expressed in terms of thecoefﬁcient matrices. By setting the initial state x(0) to zero, Eq. (H-116) becomes
XzðÞ¼zI/C0AðÞ
/C01BRzðÞ (H-124)
Substituting Eq. (H-124) into the z-transformed version of Eq. (H-111), we have
YzðÞ¼ CzI/C0AðÞ/C01BþDhi
RzðÞ¼ GzðÞRzðÞ (H-125)
where the transfer-function matrix of the system is deﬁned as
GzðÞ¼ CzI/C0AðÞ/C01BþD (H-126)
or
GzðÞ¼CadjzI/C0AðÞ BþzI/C0Ajj D ½/C138
zI/C0Ajj(H-127)H-20"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 21
The characteristic equation of the system is deﬁned as
zI/C0Ajj¼0 (H-128)
In general, a linear time-invariant discrete-data system with one input and one output can
be described by the following difference equation with constant coefﬁcients:
ykþnðÞ T½/C138 þ an/C01ykþn/C01ðÞ T½/C138þan/C02ykþn/C02ðÞ T½/C138
þ/C1/C1/C1þ a1ykþ1ðÞðÞ T½/C138 þ a0yk TðÞ
¼bmrkþmðÞ T½/C138 þ bm/C01rkþm/C01ðÞ T½/C138
þ/C1/C1/C1þ b1rkþ1ðÞðÞ T½/C138 þ b0rk TðÞ(H-129)
Taking the z-transform on both sides of Eq. (H-129) and setting zero initial conditions, the
transfer function of the system is written
YzðÞ
RsðÞ¼bmzmþbm/C01zm/C01þ/C1/C1/C1þ b1zþb0
znþan/C01zn/C01þ/C1/C1/C1þ a1zþa0n/C21m (H-130)
The characteristic equation is obtained by equating the denominator polynomial of thetransfer function to zero.
z
nþan/C01zn/C01þ/C1/C1/C1þ a1zþa0¼0 (H-131)
"EXAMPLE H-4-1 Consider that a discrete-data system is described by the difference equation
ykþ2ðÞ þ 5ykþ1ðÞ þ 3ykðÞ¼ rkþ1ðÞ þ 2rkðÞ (H-132)
The transfer function of the system is simply
YzðÞ
RzðÞ¼zþ2
z2þ5zþ3(H-133)
The characteristic equation is
z2þ5zþ3¼0 (H-134)
The state variables of the system may be deﬁned as
x1kðÞ¼ ykðÞ (H-135)
x2kðÞ¼ x1kþ1ðÞ /C0 rkðÞ (H-136)
Substituting the last two equations into Eq. (H-132) gives the two state equations as
x1kþ1ðÞ ¼ x2kðÞþ rkðÞ (H-137)
x2kþ1ðÞ ¼ /C0 3x1kðÞ/C0 5x2kðÞ/C0 3rkðÞ (H-138)
from which we have the matrices AandB:
A¼01
/C03/C05/C20/C21
B¼1
/C03/C20/C21
(H-139)
The same characteristic equation as in Eq. (H-134) is obtained by using zI/C0Ajj¼0. 3H-4 State Equations of Linear Discrete-Data Systems 3H-21
Appendix-H_1 05/14/2009 22
H-4-5 State Diagrams of Discrete-Data Systems
When a discrete-data system is described by difference or discrete state equations, a
discrete state diagram may be constructed for the system. Similar to the relations between
the analog-computer block diagram and the state diagram for continuous-data systems, theelements of a discrete state diagram resemble the computing elements of a digitalcomputer. Some of the operations of a digital computer are multiplication by a constant ,
addition of several variables , and time delay orshifting . The discrete state diagram can
be used to determine the transfer functions as well as for digital implementation of the
system. The mathematical description of these basic digital computations and their
corresponding z-transform expressions are as follows:
1.Multiplication by a constant:
x
2kTðÞ ¼ ax1kTðÞ (H-140)
X2zðÞ¼ aX1zðÞ (H-141)
2.Summing:
x2kTðÞ ¼ x1kTðÞ þ x3kTðÞ (H-142)
X2zðÞ¼ X1zðÞþ X3zðÞ (H-143)
3.Shifting or time delay:
x2kTðÞ ¼ x1kþ1ðÞ T½/C138 (H-144)
X2zðÞ¼ zX1zðÞ/C0 zx10ðÞ (H-145)or
X1zðÞ¼ z/C01X2zðÞþ x10ðÞ (H-146)
X2(z) X1(z)a
X2(z) = aX1(z)
X1(z)x1(0)
X2(z)z–1
X1(z) = z–1X2(z) + x1(0)X2(z)X0(z)
X1(z)
X2(z) = X0(z) + X1(z)1
1
1
Figure H-11 Basic elements of a discrete state diagram.H-22"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 23
The state diagram representation of these operations is illustrated in Fig. H-11. The initial
time t¼0 in Eqs. (H-145) and (H-146) can be generalized to t¼t0. Then the equations
represent the discrete-time state transition from t/C21t0.
"EXAMPLE H-4-2 Consider again the difference equation in Eq. (H-132), which is
ykþ2ðÞþ5ykþ1ðÞþ3ykðÞ¼rkþ1ðÞþ2rkðÞ (H-147)
One way of constructing the discrete state diagram for the system is to use the state equations. In this
case, the state equations are already deﬁned in Eqs. (H-137) and (H-138). By using essentially the
same principle as the state diagram for continuous-data systems, the state diagram for Eqs. (H-137)and (H-138) is shown in Fig. H-12. The time delay unit z
/C01is used to relate x1(kþ1) to x2(k).The
state variables are deﬁned as the outputs of the delay units in the state diagram .
The state-transition equations of the system can be obtained directly from the state diagram
using the SFG gain formula. By referring to X1(z) and X2(z) as the output nodes and x1(0),x2(0), and
R(z) as input nodes in Fig. H-12, the state-transition equations are written as
X1zðÞ
X2zðÞ/C20/C21
¼1
D1þ5z/C01
/C03z/C01z/C01
1/C20/C21
x10ðÞ
x20ðÞ/C20/C21
þ1
Dz/C011þ5z/C01/C0/C1
/C03z/C02
/C03z/C01/C03z/C02/C20/C21
RzðÞ (H-148)
where
D¼1þ5z/C01þ3z/C02(H-149)
The same transfer function between R(z) and Y(z) as in Eq. (H-133) can be obtained directly from the
state diagram in Fig. H-13 by applying the SFG gain formula between these two nodes.
As an alternative, the discrete state diagram can be drawn directly from the difference equation
via the transfer function, using the decomposition schemes (Fig. H-13). The decomposition of adiscrete-data transfer function follows basically the same procedure as that of an analog transfer
function covered in Section 9-11, so the details are not repeated here.
3
H-4-6 State Diagrams for Sampled-Data Systems
When a discrete-data system has continuous-data as well as discrete-data elements, with
the two types of elements separated by sample-and-hold devices, a state diagram model forthe sample-and-hold (zero-order-hold) must be established.
Consider that the input of the ZOH is denoted by e
/C3(t), which is a train of impulses, and
the output by h(t). Because the ZOH simply holds the strength of the input impulse at theR(z)x2(k + 1) r(k) x2(k)x2(0) x1(0)
x1(k + 1)
X2(z)x1(k) y(k)
Y(z) X1(z)11
1 –3
–3–51 z–1z–11
Figure H-12 Discrete state diagram of the system described by the difference equation of
Eq. (H-132) or by the state equations of Eqs. (H-137) and (H-138).H-4 State Equations of Linear Discrete-Data Systems 3H-23
Appendix-H_1 05/14/2009 24
sampling instant until the next input comes, the signal h(t) is a sequence of steps. The
input–output relation in the Laplace domain is
HsðÞ¼1/C0e/C0Ts
sE/C3sðÞ (H-150)–0.71
R(z) X2(z) X1(z) Y(z)1
2 1
–5
–3z–1z–1x1(0)
1x2(0)
(a)  Direct decomposition
R(z) X2(z)
X2(z)x2(0)X1(z)x1(0)X1(z) Y(z)
Y(z) R(z)1
z–11 1
–4.3z–12
z–1
–4.31
111
0.64
0.36
–0.7z–11x1(0)
1x2(0)
(b)  Cascade decomposition
(c)  Parallel decom position
Figure H-13 State diagrams of the transfer functionYzðÞ
RzðÞ¼zþ2ðÞ
z2þ5zþ3ðÞ:H-24"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 25
In the time domain, the relation is simply
htðÞ¼ ek Tþ/C0/C1
(H-151)
forkT/C20t<(kþ1)T.
In the state-diagram notation, we need the relation between H(s) and e(kT+). For this
purpose, we take the Laplace transform on both sides of Eq. (H-151) to give
HsðÞ¼ek TþðÞ
s(H-152)
forkT/C20t<(kþ1)T. The state-diagram representation of the zero-order-hold is shown in
Fig. H-14.
"EXAMPLE H-4-3 As an illustrative example on how the state diagram of a sampled-data system is constructed, let us
consider the system in Fig. H-15. We shall demonstrate the various ways of modeling the input–
output relations of the system. First, the Laplace transform of the output of the system is written in
terms of the input to the ZOH.
YsðÞ¼1/C0e/C0Ts
s1
sþ1E/C3sðÞ (H-153)
Taking the z-transform on both sides of Eq. (H-153), we get
YzðÞ¼1/C0e/C0T
z/C0e/C0TEzðÞ (H-154)
Fig. H-16 shows the state diagram for Eq. (H-154). The discrete dynamic equations of the system are
written directly from the state diagram.
x1kþ1ðÞ T½/C138 ¼ /C0 e/C0Tx1kTðÞ þ 1/C0e/C0T/C0/C1
ek Tþ/C0/C1
(H-155)
yk TðÞ ¼ x1kTðÞ (H-156)
3G(s) =  1
s + 1ZOH
Te(t) h(t) y(t) e*(t)
Figure H-15 Sampled-data system.
e(kT+) x1(kT)
X1(z)x1(0)
1
1 – e –Tx1(k + 1)T z–1
–e–TFigure H-16 Discrete state diagram of the system in
Fig. H-15.1
s
e(kT+) H(s) Figure H-14 State-diagram representation of the zero-order-
hold (ZOH).H-4 State Equations of Linear Discrete-Data Systems 3H-25
Appendix-H_1 05/14/2009 26
"H-5 STABILITY OF DISCRETE-DATA SYSTEMS
The deﬁnitions of BIBO and zero-input stability can be readily extended to linear time-
invariant SISO discrete-data control systems.
H-5-1 BIBO Stability
Letu(kT),y(kT), and g(kT) be the input, output, and impulse sequence of a linear time-
invariant SISO discrete-data system, respectively. With zero initial conditions, the system
is said to be BIBO stable, or simply stable, if its output sequence y (kT)is bounded to a
bounded input u (kT). As with the treatment in Section 2-8, we can show that, for the system
to be BIBO stable, the following condition must be met:
X1
k¼0/C12/C12gk TðÞ/C12/C12<1 (H-157)
H-5-2 Zero-Input Stability
For zero-input stability, the output sequence of the system must satisfy the following
conditions:
yk TðÞjj /C20 M<1 (H-158)
lim
k!1yk TðÞjj¼0 (H-159)
Thus, zero-input stability can also be referred to as asymptotic stability . We can show that
both the BIBO stability and the zero-input stability of discrete-data systems require that
the roots of the characteristic equation lie inside the unit circle zjj¼1in the z-plane.
This is not surprising, because the jv-axis of the s-plane is mapped onto the unit circle
in the z-plane. The regions of stability and instability for discrete-data systems in the
z-plane are shown in Fig. H-17. Let the characteristic equation roots of a linear discrete-data
time-invariant SISO system be zi,i¼1, 2, . . . , n. The possible stability conditions of the
system are summarized in Table H-2 with respect to the roots of the characteristic equation.
Unstable
Unit circleUnstable
UnstablejIm z
z-plane
Re z
StableStable
0 –1 1
Unstable
Figure H-17 Stable and unstable regions for
discrete-data systems in the z-plane.H-26"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 27
The following example illustrates the relationship between the closed-loop transfer-
function poles, which are the characteristic equation roots, and the stability condition of the
system.
"EXAMPLE H-5-1
MzðÞ¼5z
z/C00:2ðÞ z/C00:8ðÞStable system
MzðÞ¼5z
zþ1:2ðÞ z/C00:8ðÞUnstable system due to the pole at z¼/C01:2
MzðÞ¼5zþ1ðÞ
zz/C01ðÞ z/C00:8ðÞMarginally stable due to z¼1
MzðÞ¼5zþ1:2ðÞ
z2zþ1ðÞ2zþ0:1ðÞUnstable due to second-order pole at z¼/C01
3
H-5-3 Stability Tests of Discrete-Data Systems
We pointed out earlier in Section H-5 that the stability test of a linear discrete-data systemis essentially a problem of investigating whether all the roots of the characteristic equation
are inside the unit circle zjj¼1 in the z-plane. The Nyquist criterion, root-locus diagram,
and Bode diagram, originally devised for continuous-data systems, can all be extended to
the stability studies of discrete-data systems. One exception is the Routh-Hurwitz criterion,
which in its original form is restricted to only the imaginary axis of the s-plane as the
stability boundary and thus can be applied only to continuous-data systems.
Bilinear Transformation Method [1]
We can still apply the Routh-Hurwitz criterion to discrete-data systems if we can ﬁnd a
transformation that transforms the unit circle in the z-plane onto the imaginary axis of
another complex plane. We cannot use the z-transform relation z¼exp(Ts)o rs¼(Inz)/T,
since it would transform an algebraic equation in zinto a nonalgebraic equation in s, and
the Routh test still cannot be applied. However, there are many bilinear transformations of
the form of
z¼arþb
crþd(H-160)TABLE H-2 Stability Conditions of Linear Time-Invariant Discrete-Data SISO Systems
Stability condition Root values
Asymptotically stable or simply stable zijj<1 for all i,i=1 ,2 , ..., n(all roots inside the
unit circle)
Marginally stable or marginally unstable zijj¼ 1 for any ifor simple roots, and no zijj>1 for
i¼1, 2, . . . , n(at least one simple root, no multiple-
order roots on the unit circle, and no roots outside the
unit circle)
Unstable zijj>1 for any i,o rzijj¼1 for any multiple-order root.
i¼1, 2, . . . , n(at least one simple root outside the
unit circle and at least one multiple-order root on theunit circle)H-5 Stability of Discrete-Data Systems 3
H-27
Appendix-H_1 05/14/2009 28
where a,b,c, and dare real constants, and ris a complex variable that will transform circles
in the z-plane onto straight lines in the r-plane. One such transformation that transforms the
interior of the unit circle of the z-plane onto the left half of the r-plane is
z¼1þr
1/C0r(H-161)
which is referred to as the r-transformation . Once the characteristic equation in zis
transformed into the rdomain using Eq. (H-161), the Routh-Hurwitz criterion can again be
applied to the equation in r.
Ther-transformation given in Eq. (H-161) is probably the simplest form that can be
used for manual transformation of an equation F(z) to an equation in r. Another
transformation that is often used in discrete-data control-system design in the frequency
domain is
z¼2=TðÞ þ w
2=TðÞ /C0 w(H-162)
or
w¼2
Tz/C01
zþ1(H-163)
which is called the w-transformation . Note that the w-transformation becomes the r-
transformation when T¼2. The advantage of the w-transformation over the r-transfor-
mation is that the imaginary axis of the w-plane resembles that of the s-plane. To show this,
we substitute
z¼ejvT¼cosvTþjsinvT (H-164)
into Eq. (H-163), and we get
w¼2
TcosvTþjsinvT/C01
cosvTþjsinvTþ1(H-165)
Rationalizing the last equation and simplifying, we get
w¼jvw¼j2
TtanvT
2(H-166)
Thus, the unit circle in the z-plane is mapped onto the imaginary axis w¼jvwin the
w-plane. The relationship between vwandv, the real frequency, is
vw¼2
TtanvT
2¼vs
ptanpv
vs(H-167)
where vsis the sampling frequency in rad/sec. The correlation between vandvwis that
they both go to 0 and 1at the same time. For the Routh-Hurwitz criterion, of course, the w-
transformation is more difﬁcult to use, especially since the sampling period Tappears in
Eq. (H-163). However, if computer programs are available for the transformations, thedifference is insigniﬁcant.
The following examples illustrate the application of the r-transformation to a
characteristic equation in zso that the equation can be tested by the Routh-Hurwitz
criterion in the r-domain.H-28
"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 29
"EXAMPLE H-5-2 Consider that the characteristic equation of a discrete-data control system is
z3þ5:94z2þ7:7z/C00:368¼0 (H-168)
Substituting Eq. (H-161) into the last equation and simplifying, we get
3:128r3/C011:74r2þ2:344rþ14:27¼0 (H-169)
Routh’s tabulation of the last equation is
Sign changer33.128 2.344
r2/C011.74 14.27
Sign change
r16.146 0
r014.27
Because there are two sign changes in the ﬁrst column of the tabulation, Eq. (H-169) has two roots in
the right half of the r-plane. This corresponds to Eq. (H-168) having two roots outside the unit circle
in the z-plane. This result can be checked by solving the two equations in zandr. For Eq. (H-168), the
roots are z¼/C02.0,z¼/C03.984, and z¼0.0461. The three corresponding roots in the r-plane are r¼
3.0,r¼1.67, and r¼/C00.9117, respectively. 3
"EXAMPLE H-5-3 Let us consider a design problem using the bilinear transformation and Routh-Hurwitz criterion. The
characteristic equation of a linear discrete-data control system is given as
FzðÞ¼ z3þz2þzþK¼0 (H-170)
where Kis a real constant. The problem is to ﬁnd the range of values of Kso that the system is stable.
We ﬁrst transform F(z) into an equation in rusing the bilinear transformation of Eq. (H-161). The
result is
1/C0KðÞ r3þ1þ3KðÞ r2þ31/C0KðÞ rþ3þK¼0 (H-171)
Routh’s tabulation of the last equation is
r3
r2
r1
r01/C0K
1þ3K
8K1/C0KðÞ
1þ3K
3þK31/C0KðÞ
3þK
0
For a stable system, the numbers in the ﬁrst column of the tabulation must be of the same sign. We can
show that these numbers cannot be all negative, since the conditions contradict each other. Next, for
all the numbers to be positive, we have the following conditions:
1/C0K>01þ3K>0>03þK>0
which lead to the condition for stability:
0<K<1 (H-172)
3H-5 Stability of Discrete-Data Systems 3H-29
Appendix-H_1 05/14/2009 30
Direct Stability Tests
There are stability tests that can be applied directly to the characteristic equation in zwith
reference to the unit circle in the z-plane. One of the ﬁrst methods that gives the necessary
and sufﬁcient conditions for the characteristic equation roots to lie inside the unit circle isthe Schur-Cohn criterion [2]. A simpler tabulation method was devised by Jury and
Blanchard [3,4] and is called Jury’s stability criterion [6]. R. H. Raible [5] devised an
alternate tabular form of Jury’s stability test. Unfortunately, these analytical tests all becomevery tedious for equations higher than the second order, especially when the equation has
unknown parameter(s) in it. Then, there is no reason to use any of these tests if all the
coefﬁcients of the equation are known, since we can always use a root-ﬁnding program on acomputer. Weighing all the pros and cons, this author believes that when the characteristicequation has at least one unknown parameter, the bilinear transformation method is still thebest manual method for determining stability of linear discrete-data systems. However, it isuseful to introduce the necessary condition of stability that can be checked by inspection.
Consider that the characteristic equation of a linear time-invariant discrete-data
system is
FzðÞ¼ a
nznþan/C01zn/C01þ/C1/C1/C1þ a1zþa0¼0 (H-173)
where all the coefﬁcients are real. Among all the conditions provided in Jury’s test, thefollowing necessary conditions must be satisﬁed for F(z) to have no roots on or outside the
unit circle.
F1ðÞ>0
F/C01ðÞ >0i f n¼even integer
F/C01ðÞ <0i f n¼odd integer
a
0jj<an(H-174)
If an equation of the form of Eq. (H-173) violates any one of these conditions, then not allof the roots are inside the unit circle, and the system would not be stable. Apparently, thesenecessary conditions can be checked easily by inspection.
"EXAMPLE H-5-4
Consider the equation
FzðÞ¼ z3þz2þ0:5zþ0:25¼0 (H-175)
Applying the conditions in Eq. (H-174), we have
F1ðÞ¼ 2:75>0 and F/C01ðÞ ¼ /C0 0:25<0 for n¼3;which is odd
a0jj¼0:25<a3¼1
Thus, the conditions in Eq. (H-174) are all satisﬁed, but nothing can be said about the stability of the
system. 3
"EXAMPLE H-5-5 Consider the equation
FzðÞ¼ z3þz2þ0:5zþ1:25¼0 (H-176)
The conditions in Eq. (H-176) are
F/C01ðÞ ¼ 0:75>0 for n¼3;which is odd
a0jj¼1:25, which is not less then a3, which equals 1.
Because, for odd n, F(/C01) must be negative, the equation in Eq. (H-176) has at least one root outside
the unit circle. The condition on the absolute value of a0is also not met. 3H-30"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 31
Second-Order Systems
The conditions in Eq. (H-174) become necessary and sufﬁcient when the system is of the
second order. That is, the necessary and sufﬁcient conditions for the second-order equation
FzðÞ¼ a2z2þa1zþa0¼0 (H-177)
to have no roots on or outside the unit circle are
F1ðÞ>0
F/C01ðÞ >0
a0jj<a2(H-178)
"EXAMPLE H-5-6 Consider the equation
FzðÞ¼ z2þzþ0:25¼0 (H-179)
Applying the conditions in Eq. (H-178), we have
F1ðÞ¼2:25>0 F/C01ðÞ¼0:25>0 for n¼2;which is even
a0jj¼0:25<a2¼1
Thus, the conditions in Eq. (H-178) are all satisﬁed. The two roots in Eq. (H-179) are all inside the
unit circle, and the system is stable. 3
"H-6 TIME-DOMAIN PROPERTIE S OF DISCRETE-DATA SYSTEMS
H-6-1 Time Response of Discrete-Data Control Systems
To carry out the design of discrete-data control systems in the time domain or the z-domain,
we must ﬁrst study the time- and z-domain properties of these systems. We learned from
the previous sections that the output responses of most discrete-data control systems are
functions of the continuous-time variable t. Thus, the time-domain speciﬁcations such as
the maximum overshoot, rise time, damping ratio, and so forth can still be applied to
discrete-data systems. The only difference is that, to make use of the analytical tools suchasz-transforms, the continuous data found in a discrete-data system are sampled so that the
independent time variable is kT, where Tis the sampling period in seconds. Also, instead of
working in the s-plane, the transient performance of a discrete-data system is characterized
by poles and zeros of the transfer function in the z-plane.
The objectives of the following sections are as follows:
1.To present methods of ﬁnding the discretized time responses of discrete-data
control systems
2.To describe the important characteristics of the discretized time response y(kT)
3.To establish the signiﬁcance of pole and zero locations in the z-plane
4.To provide comparison between time responses of continuous-data and discrete-
data control systems
Let us refer to the block diagram of the discrete-data control system shown in Fig. H-18.
The transfer function of the system is
YzðÞ
RzðÞ¼GzðÞ
1þGH zðÞ(H-180)H-6 Time-Domain Properties of Discrete-Data Systems 3H-31
Appendix-H_1 05/14/2009 32
where GH(z) denotes the z-transform of G(s)H(s). Once the input R(z) is given, the output
sequence y(kT) can be determined using one of the following two methods:
1.Take the inverse z-transform of Y(z) using the z-transform table.
2.Expand Y(z) into a power series of z/C0k.
Thez-transform of the output is deﬁned as
YzðÞ¼X1
k¼0yk TðÞz/C0k(H-181)
The discrete-time response y(kT) can be determined by referring to the coefﬁcient of z/C0k
fork¼0, 1, 2, . . . . Remember that y(kT),k¼0, 1, 2, . . . contains only the sampled
information on y(t) at the sampling instants. If the sampling period is large relative to the
most signiﬁcant time constant of the system, y(kT) may not be an accurate representation
ofy(t).
"EXAMPLE H-6-1 Consider that the position-control system described in Section 5-8 has discrete data in the forward
path, so that the system is now described by the block diagram of Fig. H-18. For K¼14.5, the transfer
function of the controlled process shown in Eq. (5-132) is
GpsðÞ¼65;250
ssþ361:2ðÞ(H-182)
The forward-path transfer function of the discrete-data system is
Gh0GpzðÞ¼Z/C0Gh0GpsðÞ/C2/C3
¼1/C0z/C01/C0/C1
Z/C0GpsðÞ
s/C20/C21
(H-183)
For a sampling period of T¼0.001 second, the z-transfer function in Eq. (H-183) is evaluated as
Gh0GpzðÞ¼0:029zþ0:0257
z2/C01:697zþ0:697(H-184)
The closed-loop transfer function of the system is
YzðÞ
RzðÞ¼Gh0GpzðÞ
1þGh0GpzðÞ¼0:029zþ0:0257
z2/C01:668zþ0:7226(H-185)r(t)
R(s)e(t)
E(s)y(t)
Y(s)e*(t)
E*(s) +–ZOH Gp(s)
G(s)
H(s)Ty*(t)
Y(z) T
Figure H-18 Block diagram of a discrete-data control system.H-32"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 33
where R(z) and Y(z) represent the z-transforms of the input and the output, respectively. For a unit-
step input, R(z)¼z=(z/C01). The output transform Y(z) becomes
YzðÞ¼z0:029zþ0:0257ðÞ
z/C01ðÞ z2/C01:668zþ0:7226ðÞ(H-186)
The output sequence y(kT) can be determined by dividing the numerator polynomial of Y(z) by its
denominator polynomial to yield a power series in z/C01. Fig. H-19 shows the plot of y(kT) (dots) versus
kT, when T¼0.001 second. For comparison, the unit-step response of the continuous-data system in
Section 5-8 with K¼14.5 is shown in the same ﬁgure. As seen in Fig. H-19, when the sampling
period is small, the output responses of the discrete-data and the continuous-data systems are very
similar. The maximum value of y(kT) is 1.0731, or a 7.31% maximum overshoot, as against the 4.3%
maximum overshoot for the continuous-data system.
When the sampling period is increased to 0.01 second, the forward-path transfer function of the
discrete-data system is
Gh0GpzðÞ¼1:3198 zþ0:4379
z2/C01:027zþ0:027(H-187)
and the closed-loop transfer function is
YzðÞ
RzðÞ¼1:3198 zþ0:4379
z2þ0:2929 zþ0:4649(H-188)
The output sequence y(kT) with T¼0.01 second is shown in Fig. H-19 with k¼0, 1, 2, 3, 4, and 5.
The true continuous-time output of the discrete-data system is shown as the dotted curve. Notice that
the maximum value of y(kT) is 1.3712, but the true maximum overshoot is considerably higher than
that. Thus, the larger sampling period only makes the system less stable, but the sampled output no
longer gives an accurate measure of the true output.
When the sampling period is increased to 0.01658 second, the characteristic equation of the
discrete-data system is
z2þ1:4938 zþ0:4939¼0 (H-189)
2.0
1.6
1.2
1.0
0.8
0.4
0 0.01 0.02 0.03 0.04 0.05
Time(sec)Discrete-data system 
   T = 0.01 second
Discrete-data system 
   y(kT)T = 0.001 secondy(T)
1.3198
y(4T)
0.9028y(5T)
1.148
y(3T)
0.7426y(2T)
1.3712
Figure H-19 Comparison of unit-step responses of discrete-data and continuous-data systems.H-6 Time-Domain Properties of Discrete-Data Systems 3H-33
Appendix-H_1 05/14/2009 34
which has roots at z¼/C00.494 and z¼/C01.000. The root at/C01.000 causes the step response of the
system to oscillate with a constant amplitude, and the system is marginally stable. Thus, for all
sampling periods greater than 0.01658 second, the discrete-data system will be unstable. From
Section 5-8, we learned that the second-order continuous-data system is always stable for ﬁnite
positive values of K. For the discrete-data system, the sample-and-hold has the effect of making the
system less stable, and if the value of Tis too large, the second-order system can become unstable.
Fig. H-20 shows the trajectories of the two characteristic-equation roots of the discrete-data systemas the sampling period Tvaries. Notice that, when the sampling period is very small, the two
characteristic-equation roots are very close to the z¼1 point and are complex. When T¼0.01608
second, the two roots become equal and real and are negative. Unlike the continuous-data system, thecase of two identical roots on the negative real axis in the z-plane does not correspond to critical
damping. For discrete-data systems, when one or more characteristic-equation roots lie on thenegative real axis of the z-plane, the system response will oscillate with positive and negative peaks.
Fig. H-21 shows the oscillatory response of y(kT) when T¼0.01658 second, which is the critical
value for stability. Beyond this value of T, one root will move outside the unit circle, and the system
will become unstable.
3
H-6-2 Mapping between s-Plane and z-Plane Trajectories
For analysis and design purposes, it is important to study the relation between the location
of the characteristic-equation roots in the z-plane and the time response of the discrete-data
system. In Section H-2, the periodic property of the Laplace transform of the sampledT = 0.01608 secondUnstable
regionUnstable
regionz-plane
T = 0.01 second
–0.1464 + j0.666
T = 0.01658 secondT = 0.001 second
0.834  j0.1649
–0.494
T = 0.01658 second
Unstable
regionUnstable
regionUnit
circleT = 0.01 second
– 0.1464 – j0.6660 –1 1Re zj Im z
Figure H-20 Trajectories of roots of a second-order discrete-data control system as the sampling
period Tvaries.H-34"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 35
signal R/C3(s) is established by Eq. (H-62); that is, R/C3(sþjmvs)¼R/C3(s), where mis an
integer. In other words, given any point s1in the s-plane, the function R/C3(s) has the same
value at all periodic points s¼s1þjmvs. Thus, the s-plane is divided into an inﬁnite
number of periodic strips, as shown in Fig. H-22(a). The strip between v¼vs=2 is called
theprimary strip , and all others at higher frequencies are called the complementary
strips . Fig. H-22(b) shows the mapping of the periodic strips from the s-plane to the z-
plane, and the details are explained as follows.
1.Thejv-axis in the s-plane is mapped onto the unit circle zjj¼1 in the z-plane.
2.The boundaries of the period strips, s¼jmvs=2,m¼/C61,/C63,/C65, . . . , are
mapped onto the negative real axis of the z-plane. The portion inside the unit circle
corresponds to s<0, and the portion outside the unit circle corresponds to s>0.
3.The center lines of the periodic strips, s¼jmvs,m¼0,/C62,/C64, . . . , are mapped
onto the positive real axis of the z-plane. The portion inside the unit circle
corresponds to s<0, and the portion outside the unit circle corresponds to s>0.
4.Regions shown in the periodic strips in the left-half s-plane are mapped onto the
interior of the unit circle in the z-plane.
5.The point z¼1 in the z-plane corresponds to the origin, s¼0, in the x-plane.
6.The origin, z¼0, in the z-plane corresponds to s¼/C01 in the s-plane.
In the time-domain analysis of continuous-data systems, we devise the damping factor a,
the damping ratio z, and the natural undamped frequency vnto characterize the system
dynamics. The same parameters can be deﬁned for discrete-data systems with respect to the
characteristic-equation roots in the z-plane. The loci of the constant- a, constant- z,
constant- v, and constant- vnin the z-plane are described in the following sections.00 3 6 9 12 15 18 21 24 27 30
–1.0–0.50.51.01.52.02.53.0y(kT )
Number of sampling periods
Figure H-21 Oscillatory response of a discrete-data system with a sampling period T¼0.01658
second.H-6 Time-Domain Properties of Discrete-Data Systems 3H-35
Appendix-H_1 05/14/2009 36
Constant-Damping Loci: For a constant-damping factor s¼ain the s-plane, the
corresponding trajectory in the z-plane is described by
z¼eaT(H-190)
which is a circle centered at the origin with a radius of eaT, as shown in Fig. H-23.
Constant-Frequency Loci: The constant-frequency v¼v1locus in the s-plane is a
horizontal line parallel to the s-axis. The corresponding z-plane locus is a straight line
emanating from the origin at an angle of u¼v1Tradians, measured from the real axis, as
shown in Fig. H-24.Complementary
strip
Complementary
strip
Complementary
strip
Complementary
stripPrimary
strip0
(a)s-plane
(b)–1 1j Im z
z-plane
Re z
Figure H-22 Periodic strips in the s-plane and the corresponding points and lines between the s-plane
and the z-plane.H-36"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 37
Constant Natural-Undamped Frequency Loci: The constant- vnloci in the s-plane are
concentric circles with the center at the origin, and the radius is vn. The corresponding
constant- vnloci in the z-plane are shown in Fig. H-25 for vn¼vs=16 to vs=2. Only the loci
inside the unit circle are shown.
Constant-Damping Ratio Loci: For a constant-damping ratio z, the s-plane loci are
described by
s¼/C0vtanbþjv (H-191)
The constant- zloci in the z-plane are described by
z¼eTs¼e/C02ptanbðÞ =vsﬀ2pv=vs (H-192)
where
b¼sin/C01z¼constant (H-193)0
(a)1
2s-plane
0
(b)z-planejIm z
Re z1
2
Figure H-24 Constant-frequency loci in the s-plane and the z-plane.0s-planejIm z
(a) (a)Constant-
damping lociz-plane Unit
circle
–1 0 1Re z
Figure H-23 Constant-damping loci in the s-plane and the z-plane.H-6 Time-Domain Properties of Discrete-Data Systems 3H-37
Appendix-H_1 05/14/2009 38
For a given value of b, the constant- zlocus in the z-plane, described by Eq. (H-193), is a
logarithmic spiral for 0/C14<b<90/C14. Fig. H-26 shows several typical constant- zloci in the
top half of the z-plane.
H-6-3 Relation between Characteristic-Equation Roots and Transient Response
Based on the discussions given in the last section, we can establish the basic relation
between the characteristic-equation roots and the transient response of a discrete-datasystem, keeping in mind that, in general, the zeros of the closed-loop transfer function willalso play an important role on the response, but not on the stability, of the system.
Roots on the Positive Real Axis in the z-Plane: Roots on the positive real axis inside the
unit circle of the z-plane give rise to responses that decay exponentially with an increase of
kT. Typical responses relative to the root locations are shown in Figs. H-27 and H-28. The
roots closer to the unit circle will decay slower. When the root is at z¼1, the response has a0s-plane
(a)
01 –1z-plane
(b)Re zjIm z
Figure H-25 Constant-natural-undamped frequency loci in the s-plane and the z-plane.H-38"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 39
constant amplitude. Roots outside the unit circle correspond to unstable systems, and the
responses will increase with kT.
Roots on the Negative Real Axis in the z-Plane: The negative real axis of the z-plane
corresponds to the boundaries of the periodic strips in the s-plane. For example, when s¼
/C0s1/C6jvs=2, the complex-conjugate points are on the boundaries of the primary strip in
thes-plane. The corresponding z-plane points are
z¼e/C0s1Te/C6jvsT=2¼/C0e/C0s1T(H-194)
which are on the negative real axis of the z-plane. For the frequency of vs=2, the
output sequence will have exactly one sample in each one-half period of the envelope.jIm
(b)(a)
145° 30° 20°15°10°3°
5°s-plane
01
2–
0 –1z-plane
Figure H-26 Constant-damping-ratio loci in the s-plane and the z-plane.H-6 Time-Domain Properties of Discrete-Data Systems 3H-39
Appendix-H_1 05/14/2009 40
Thus, the output sequence will occur in alternating positive and negative pulses, as shown
in Fig. H-28(b).
Complex-Conjugate Roots in the z-Plane: Complex-conjugate roots inside the unit
circle in the z-plane correspond to oscillatory responses that decay with an increase in kT.
Roots that are closer to the unit circle will decay slower. As the roots move toward the
second and the third quadrants, the frequency of oscillation of the response increases. Refer
to Figs. H-27 and H-28 for typical examples.Complementary
strip
Complementary
strips-plane
Primary
strip
(a)1
3
2
14122
3
43
4
tttt
z-planejIm z
Unit
circle–1 1t
t
Re z
(b)tt
Figure H-27 (a) Transient responses corresponding to various pole locations of Y/C3(s) in the s-plane
(complex-conjugate poles only). (b) Transient-response sequence corresponding to various pole
locations of Y(z) in the z-plane.H-40"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 41
"H-7 STEADY-STATE ERROR ANALYSIS OF DISCRETE-DATA CONTROL SYSTEMS
Because the input and output signals of a typical discrete-data control system are
continuous-time functions, as shown in the block diagram of Fig. H-19, the error signal
should still be deﬁned as
etðÞ¼ rtðÞ/C0 ytðÞ (H-195)
where r(t) is the input and y(t) is the output. The error analysis conducted here is only for
unity-feedback systems with H(s)¼1. Due to the discrete data that appear inside the
system, z-transform or difference equations are often used, so that the input and output ares-plane
–
(a)ttt
z-planejIm z
Unit
circle
–1 1 0 Re z
(b)t
tt1
212
0T
Figure H-28 (a) Transient responses corresponding to various pole locations of Y/C3(s) in the s-plane
(complex-conjugate poles on the boundaries between periodic strips). (b) Transient-response
sequence corresponding to various pole locations of Y(z) in the z-plane.H-7 Steady-State Error Analysis of Discrete-Data Control Systems 3H-41
Appendix-H_1 05/14/2009 42
represented in sampled form, r(kT) and y(kT), respectively. Thus, the error signal is more
appropriately represented by e/C3(t)o re(kT). That is,
e/C3tðÞ¼ r/C3tðÞ/C0 y/C3tðÞ (H-196)
or
ek TðÞ ¼ rk TðÞ /C0 yk TðÞ (H-197)
The steady-state error at the sampling instants is deﬁned as
e/C3
ss¼lim
k!1e/C3tðÞ¼ lim
k!1ek TðÞ (H-198)
By using the ﬁnal-value theorem of the z-transform, the steady-state error is
e/C3
ss¼lim
k!1e/C3kTðÞ ¼ lim
z!11/C0z/C01/C0/C1
EzðÞ (H-199)
provided that the function (1 /C0z/C01)E(z) does not have any pole on or outside the unit circle
in the z-plane. It should be pointed out that, because the true error of the system is e(t),e/C3
ss
predicts only the steady-state error of the system at the sampling instants.
By expressing E(z) in terms of R(z) and GhoGp(z), Eq. (H-199) is written
e/C3
ss¼lim
k!1ek TðÞ ¼ lim
z!11/C0z/C01/C0/C1 RzðÞ
1þGhoGpzðÞ(H-200)
This expression shows that the steady-state error depends on the reference input R(z)a s
well as the forward-path transfer function GhoGp(z). Just as in the continuous-data systems,
we shall consider only the three basic types of input signals and the associated error
constants and relate e/C3
ssto these and the type of the system.
Let the transfer function of the controlled process in the system of Fig. H-18 be of the
form
GpsðÞ¼K1þTasðÞ 1þTbsð Þ/C1/C1/C1 1þTmsðÞ
sj1þT1sðÞ 1þT2sð Þ/C1/C1/C1 1þTnsðÞ(H-201)
where j¼0, 1, 2, . . . . The transfer function GhoGp(z)i s
Gh0GpzðÞ¼ 1/C0z/C01/C0/C1
Z/C0K1þTasðÞ 1þTbsðÞ /C1 /C1 /C1 1þTmsðÞ
sjþ11þT1sðÞ 1þT2sð Þ/C1/C1/C1 1þTnsðÞ/C20/C21
(H-202)
Steady-State Error Due to a Step-Function Input
When the input to the system, r(t), in Fig. H-18 is a step function with magnitude R, the
z-transform of r(t)i s
RzðÞ¼Rz
z/C01(H-203)
Substituting R(z) into Eq. (H-200), we get
e/C3
ss¼lim
z!1R
1þGhoGpzðÞ¼R
1þlimz!1GhoGpzðÞ(H-204)H-42"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 43
Let the step-error constant be deﬁned as
K/C3
p¼lim
z!1GhoGpzðÞ (H-205)
Eq. (H-204) becomes
e/C3
ss¼R
1þK/C3p(H-206)
Thus, we see that the steady-state error of the discrete-data control system in Fig. H-18 is
related to the step-error constant K/C3
pin the same way as in the continuous-data case, except
thatK/C3
pis given by Eq. (H-205).
We can relate K/C3
pto the system type as follows.
For a type-0 system, j¼0 in Eq. (H-202), and the equation becomes
GhoGpzðÞ¼ 1/C0z/C01/C0/C1
Z/C0K1þTasðÞ 1þTbsð Þ/C1/C1/C1 1þTmsðÞ
s1þT1sðÞ 1þT2sð Þ/C1/C1/C1 1þTnsðÞ/C20/C21
(H-207)
Performing partial-fraction expansion to the function inside the square brackets of the lastequation, we get
G
hoGpzðÞ¼ 1/C0z/C01/C0/C1
Z/C0K
sþterms due to the nonzero poles/C20/C21
¼1/C0z/C01/C0/C1 Kz
z/C01þterms due to the nonzero poles/C20/C21 (H-208)
Because the terms due to the nonzero poles do not contain the term ( z/C01) in the
denominator, the step-error constant is written
K/C3
p¼lim
z!1GhoGpzðÞ¼ lim
z!11/C0z/C01/C0/C1 Kz
z/C01¼K (H-209)
Similarly, for a type-1 system, GhoGp(z) will have an s2term in the denominator that
corresponds to a term ( z/C01)2. This causes the step-error constant K/C3
pto be inﬁnite. The
same is true for any system type greater than 1. The summary of the error constants and thesteady-state error due to a step input is as follows:
Steady-State Error Due to a Ramp-Function Input
When the reference input to the system in Fig. H-18 is a ramp function of magnitudeR,r(t)¼Rtu
s(t). The steady-state error in Eq. (H-200) becomes
e/C3
ss¼lim
z!1RT
z/C01ðÞ 1þGhoGpzðÞ/C2/C3¼R
lim
z!1z/C01
TGhoGpzðÞ(H-210)
Let the ramp-error constant be deﬁned as
K/C3
v¼1
Tlim
z!1z/C01ðÞ GhoGpzðÞ/C2/C3
(H-211)System Type K/C3
p e/C3
ss
0 KR =(1þK)
1 1 0
2 1 0H-7 Steady-State Error Analysis of Discrete-Data Control Systems 3H-43
Appendix-H_1 05/14/2009 44
Then, Eq. (H-210) becomes
e/C3
ss¼R
K/C3v(H-212)
The ramp-error constant K/C3
vis meaningful only when the input r(t) is a ramp function and if
the function ( z/C01)GhoGp(z) in Eq. (H-211) does not have any poles on or outside the unit
circle zjj¼1. The relations among the steady-state error e/C3
ss,K/C3
v, and the system type when
the input is a ramp function with magnitude Rare summarized as follows.
Steady-State Error Due to a Parabolic-Function Input
When the input is a parabolic function, r(t)¼Rtu s(t)=2; the z-transform of r(t)i s
RzðÞ¼RT2zzþ1ðÞ
2z/C01ðÞ3(H-213)
From Eq. (H-200), the steady-state error at the sampling instants is
e/C3
ss¼T2
2lim
z!1Rzþ1ðÞ
z/C01ðÞ21þGhoGpzðÞ/C2/C3
¼R
1
T2lim
z!1z/C01ðÞ2GhoGpzðÞ(H-214)
By deﬁning the parabolic-error constant as
K/C3
a¼1
T2lim
z!1z/C01ðÞ2GhoGpzðÞhi
(H-215)
the steady-state error due to a parabolic-function input is
e/C3
ss¼R
K/C3a(H-216)
The relations among the steady-state error e/C3
ss;K/C3
a, and the system type when the input is a
parabolic function with its z-transform described by Eq. (H-213) are summarized as
follows.
System Type K/C3
a e/C3
ss
00 1
10 1
2 KR =K
31 0System Type K/C3
v e/C3ss
00 1
1 KR =K
21 0H-44"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 45
"H-8 ROOT LOCI OF DISCRETE-DATA SYSTEMS
The root-locus technique can be applied to discrete-data systems without any complica-
tions. With the z-transformed transfer function, the root loci for discrete-data systems are
plotted in the z-plane, rather than in the s-plane. Let us consider the discrete-data control
system shown in Fig. H-29. The characteristic equation roots of the system satisfy thefollowing equation:
1þGH
/C3sðÞ¼ 0 (H-217)
in the s-plane, or
1þGH zðÞ¼ 0 (H-218)
in the z-plane. From Eq. (H-64), GH/C3(s) is written
GH/C3sðÞ¼1
TX1
n¼/C01GsþjnvsðÞ HsþjnvsðÞ (H-219)
which is an inﬁnite series. Thus, the poles and zeros of GH/C3(s) in the s-plane will be inﬁnite
in number. This evidently makes the construction of the root loci of Eq. (H-217) in the s-
plane quite complex. As an illustration, consider that, for the system of Fig. H-29,
GsðÞHsðÞ¼K
ssþ1ðÞ(H-220)
Substituting Eq. (H-220) into Eq. (H-219), we get
GH/C3sðÞ¼1
TX1
n¼/C01K
sþjnvsðÞ sþjnvsþ1ðÞ(H-221)
which has poles at s¼/C0jnvsands¼/C01/C0jnvs, where ntakes on all integers between /C01
and1. The pole conﬁguration of GH/C3(s) is shown in Fig. H-30(a). By using the properties
of the RL in the s-plane, RL of 1þGH/C3(s)¼0 are drawn as shown in Fig. H-30(b) for the
sampling period T¼1 s. The RL contain an inﬁnite number of branches, and these clearly
indicate that the closed-loop system is unstable for all values of Kgreater than 4.32. In
contrast, it is well known that the same system without sampling is stable for all positive
values of K.
H(s)G(s)R(s) E(s) Y(s)Y*(s)
E*(s)
+–TT
Figure H-29 Discrete-data control system.H-8 Root Loci of Discrete-Data Systems 3H-45
Appendix-H_1 05/14/2009 46
The root-locus problem for discrete-data systems is simpliﬁed if the root loci are
constructed in the z-plane using Eq. (H-218). Because Eq. (H-218) is, in general, a rational
function in zwith constant coefﬁcients, its poles and zeros are ﬁnite in number, and the number
of root loci is ﬁnite in the z-plane. The same procedures of construction for continuous-data
systems are directly applicable in the z-plane for discrete-data systems. The following
examples illustrate the constructions of root loci for discrete-data systems in the z-plane.
"EXAMPLE H-8-1 Consider that for the discrete-data system shown in Fig. H-29 the loop transfer function in the
zdomain is
GH zðÞ¼0:632Kz
z/C01ðÞ z/C00:368ðÞ(H-222)
The RL of the closed-loop characteristic equation are constructed based on the pole–zero conﬁgu-
ration of GH(z), as shown in Fig. H-31. Notice that, when the value of Kexceeds 4.32, one of the two
roots moves outside the unit circle, and the system becomes unstable. The constant-damping-ratiolocus may be superimposed on the RL to determine the required value of Kfor a speciﬁed damping
ratio. In Fig. H-31, the constant-damping-ratio locus for z¼0.5 is drawn, and the intersection with
the RL gives the desired value of K¼1. For the same system, if the sampling period Tis increased to 2
seconds, the z-transform loop transfer function becomes
GH zðÞ¼0:865Kz
z/C01ðÞ z/C00:135ðÞ(H-223)(a) (b)2j
2j
2j 
2–js-plane
–1 0 0
2–j
2–jK = 0 K = 0
K = 4.32
K = 0 K = 0
K = 4.32
K = 0 K = 0
K = 4.32
K = 0 K = 0
K = 4.32
K = 0 K = 0
K = 4.32
K = 0 K = 0
K = 4.32
K = 0 K = 0s-plane
0 –1
Figure H-30 Pole conﬁguration of GH/C3(s) and the root-locus diagram in the s-plane for the discrete-
data system in Fig. H-29 with GsðÞHsðÞ¼K
ssþ1ðÞ;T¼1 sec.H-46"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 47
The RL for this case are shown in Fig. H-32. Note that, although the complex part of the RL for T¼2
seconds takes the form of a smaller circle than that when T¼1 second, the system is actually
less stable, because the marginal value of Kfor stability is 2.624, as compared with the marginal Kof
4.32 for T¼1 second.
Next, let us consider that a zero-order-hold is inserted between the sampler and the controlled
process G(s) in the system of Fig. H-29. The loop transfer function of the system with the zero-order-
hold is
GhoGH zðÞ¼KT/C01þe/C0T/C0/C1
z/C0Te/C0Tþ1/C0e/C0T/C2/C3
z/C01ðÞ z/C0e/C0TðÞ(H-224)K = 4.32
K = 0K = 1
K = 0
–1 0 1 0.368 0.62 Re zz-planej Im z
Unit 
circle
Figure H-31 Root-locus diagram of a discrete-data control system without zero-order-hold.
GsðÞHsðÞ¼K
ssþ1ðÞ,T¼1 second.
Unit
circlej Im z
z-plane
K = 0 K = 0
K = 2.624  0.367–1 0 1 Re z 0.135
Figure H-32 Root-locus diagram of a discrete-data control system without zero-order-hold.
GsðÞHsðÞ¼K
ssþ1ðÞ,T¼2 seconds.H-8 Root Loci of Discrete-Data Systems 3H-47
Appendix-H_1 05/14/2009 48
The RL of the system with ZOH for T¼1 and 2 seconds are shown in Fig. H-33(a) and H-33(b),
respectively. In this case, the marginal value of stability for Kis 2.3 for T¼1 second and 1.46 for T¼
2 seconds. Comparing the root loci of the system with and without the ZOH, we see that the ZOH
reduces the stability margin of the discrete-data system.
In conclusion, the root loci of discrete-data systems can be constructed in the z-plane
using essentially the same properties as those of the continuous-data systems in the s-plane. How-
ever, the absolute and relative stability conditions of the discrete-data system must be investigated
with respect to the unit circle and the other interpretation of performance with respect to the regions inthez-plane.
3K = 0 K = 0K = 2.3
–0.707 0.368 0 1 Re z
K = 2.30.65
K = 0.196z-planej Im z
K = 0 K = 0K = 1.46
–0.524 –1 0.13501 Re z
K = 1.460.478z-planej Im z
–1.526
(b) Root loci for T = 2 seconds(a) Root loci for T = 1 second
Figure H-33 Root-locus diagram of a discrete-data control system with zero-order-hold.
GsðÞHsðÞ¼K
ssþ1ðÞ.H-48"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 49
"H-9 FREQUENCY-DOMAIN ANALYSIS OF DISCRETE-DATA CONTROL SYSTEMS
All the frequency-domain methods discussed in the preceding sections can be extended
to the analysis of discrete-data systems. Consider the discrete-data system shown in
Fig. H-34. The closed-loop transfer function of the system is
YzðÞ
RzðÞ¼GhoGzðÞ
1þGhoGzðÞ(H-225)
where GhoG(z)i st h e z-transform of Gho(s)G(s). Just as in the case of continuous-data systems,
the absolute and relative stability conditions of the closed-loop discrete-data system can be
investigated by making the frequency-domain plots of GhoG(z). Because the positive jv-axis
of the s-plane corresponds to real frequency, the frequency-domain plots of GhoG(z)a r e
obtained by setting z¼ejvTand then letting vvary from 0 to1.T h i si sa l s oe q u i v a l e n tt o
mapping the points on the unit circle, zjj¼ 1;in the z-plane onto the GhoG(ejvT)-plane.
Because the unit circle repeats for every sampling frequency vs(¼2p/T), as shown in Fig. H-
35, when vis varied along the jv-axis, the frequency-domain plot of G(ejvT) repeats for v¼
nvsto (nþ1)vs,n¼0 , 1 , 2 ,.... T h u s , i t i s n e c e s s a r y t o p l o t GhoG(ejvT) only for the range of
v¼0t ov¼vs. In fact, because the unit circle in the z-plane is symmetrical about the real
axis, the plot of GhoG(ejvT) in the polar coordinates for v¼0t ov s=2 needs to be plotted.
R(s) E(s) E*(s)ZOH G(s)Y(s)Y*(s)
+_ TT
Gho (s)
Figure H-34 Closed-loop discrete-data control system.
s-plane
0jIm z
z-plane
0 –1 1 Re z
Unit circle
Figure H-35 Relation between the jv-axis in the s-plane and the unit circle in the z-plane.H-9 Frequency-Domain Analysis of Discrete-Data Control Systems 3H-49
Appendix-H_1 05/14/2009 50
H-9-1 Bode Plot with the w-Transformation
The w-transformation introduced in Eq. (H-162) can be used for frequency-domain
analysis and design of discrete-data control systems. The transformation is
z¼2=TðÞ þ w
2=TðÞ /C0 w(H-226)
In the frequency domain, we set [Eq. (H-166)],
w¼jvw¼j2
TtanvT
2(H-227)
For frequency-domain analysis of a discrete-data system, we substitute Eqs. (H-226) and
(H-227) in G(z) to get G(jvw); the latter can be used to form the Bode plot or the polar plot
of the system.
"EXAMPLE H-9-1 As an illustrative example on frequency-domain plots of discrete-data control systems, let the transfer
function of the process in the system in Fig. H-34 be
GsðÞ¼1:57
ssþ1ðÞ(H-228)
and the sampling frequency is 4 rad/sec. Let us ﬁrst consider that the system does not have a zero-order-hold, so that
G
hoGzðÞ¼ GzðÞ¼1:243z
z/C01ðÞ z/C00:208ðÞ(H-229)
The frequency response of GhoG(z) is obtained by substituting z¼ejvTin Eq. (H-228). The polar plot
ofGhoG(ejvT) forv¼0t ovs=2 is shown in Fig. H-36. The mirror image of the locus shown, with the
mirror placed on the real axis, represents the plot for v¼vs=2t ovs.
The Bode plot of GhoG(ejvT) consists of the graphs of GhoGejvT/C0/C1 /C12/C12/C12/C12in dB versus v, and
ﬀG
hoGe j vTðÞ in degrees versus v, as shown in Fig. H-37 for three decades of frequency with the
plots ended at v¼vs=2¼2 rad/sec.
For the sake of comparison, the forward-path transfer function of the system with a zero-order-
hold is obtained:
GhoGzðÞ¼1:2215 zþ0:7306
z/C01ðÞ z/C00:208ðÞ(H-230)
The polar plot and the Bode plot of the last equation are shown in Figs. H-36 and H-37, respectively.
Notice that the polar plot of the system with the ZOH intersects the negative real axis at a point that is
closer to the (/C01,j0) point than that of the system without the ZOH. Thus, the system with the ZOH is
less stable. Similarly, the phase of the Bode plot of the system with the ZOH is more negative than thatof the system without the ZOH. The gain margin, phase margin, and peak resonance of the two
systems are summarized as follows.
As an alternative, the Bode plot and polar plot of the forward-path transfer function can be done using
thew-transformation of Eqs. (H-226). For the system with ZOH, the forward-path transfer function in
thew-domain is
G
hoGwðÞ¼1:57 1þ0:504wðÞ 1/C01:0913 wðÞ
w1þ1:197wðÞ(H-231)Gain Margin (dB) Phase Margin (deg) Mr
Without ZOH 5.77 39.0 1.58
With ZOH 0.71 2.91 22.64H-50"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 51
For the system without ZOH,
GhoGj wðÞ ¼1/C00:6163 w2
w1þ1:978wðÞ(H-232)
Substituting w¼jvwinto Eq. (H-232), the Bode plots are made as shown in Fig. H-38. Notice that the
frequency coordinates in Fig. H-38 are vw, whereas those in Fig. H-36 are the real frequency v. The
two frequencies are related through Eq. (H-227).
The conclusion from this illustrative example is that, once z is replaced by ejvTin the z-domain
transfer function, or if the w-transform is used, all the frequency-domain analysis techniques
available for continuous-data systems can be applied to discrete-data systems. 3
"H-10 DESIGN OF DISCRETE-D ATA CONTROL SYSTEMS
H-10-1 Introduction
The design of discrete-data control systems is similar in principle to the design of
continuous-data control systems. The design objective is basically that of determiningthe controller so that the system will perform in accordance with speciﬁcations. In fact, in60
5040
30
2010
0
–10
–90
–111.5
–135
–157.5
–180
–202.5
–2250.001 0.002 0.01 0.1 1.0 2.0 10.0
0.001 0.002 0.01 1.0 2.0 10.0 0.1PM = 39°Without ZOH With ZOH
PM = 2.91°With ZOH
Without ZOH
GM = 5.77 dBGM = 0.71dB
Figure H-36 Bode plot of GhoGzðÞof the system in Fig. H-34, with GsðÞ¼ 1:57=ssþ1ðÞ½/C138 :T¼1.57
sec, and with and without ZOH.H-10 Design of Discrete-Data Control Systems 3H-51
Appendix-H_1 05/14/2009 52
most situations, the controlled process is the same, except in discrete-data systems the
controller is designed to process sampled or digital data.
The design of discrete-data control systems treated in this chapter is intended only for
introductory purposes. An in-depth coverage of the subject may be found in booksdedicated to digital control. In this chapter we deal only with the design of a control
system with a cascade digital controller and a system with digital state feedback. Block
diagrams of these systems are shown in Fig. H-39.
Just as with the design of continuous-data control systems, the design of discrete-data
control systems can be carried out in either the frequency domain or the time domain.Using computer programs, digital control systems can be designed with a minimumamount of trial and error.
H-10-2 Digital Implementation of Analog Controllers
It seems that most people learn how to design c ontinuous-data systems before they learn
to design digital systems, if at all. Therefo re, it is not surprising that most engineers
prefer to design continuous-data systems. Ideally, if the designer intends to use digitalcontrol, the system should be designed so that the dynamics of the controller can be
d e s c r i b e db ya z-transfer function or difference equations. However, there are situations
in which the analog controller is already designed, but the availability and advantages of
digital control suggest that the controller be implemented by digital elements. Thus, the0 –1 1GM = 0.71 dB
PM = 2.91°
PM = 39°
With ZOH
Without ZOH
Figure H-37 Frequency-domain plot of GsðÞ¼1:57
ssþ1ðÞ;T¼1.57 seconds, and with and
without ZOH.H-52"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 53
problems discussed in this section are twofold: ﬁrst how continuous -data controllers
such as PID, phase-lead or phase-lag cont rollers, and others can be approximated by
digital controllers and, second, the probl em of implementing digital controllers by
digital processors.60
50
40
30
20
10
0
–10
10–310–210–1100101Amplitude (dB)With ZOH
Without ZOH
–120–100
–140
–160
–180
–200–220
10
–310–210–1100101DegreesWithout ZOH
With ZOH
Figure H-38 Bode plot of GhoG(z) of the system in Fig. H-34 with GsðÞ¼1:57
ssþ1ðÞ;T¼1:57
seconds, with and without ZOH. The plots are done with the w-transformation, w¼jvw.H-10 Design of Discrete-Data Control Systems 3H-53
Appendix-H_1 05/14/2009 54
H-10-3 Digital Implementation of the PID Controller
The PID controller in the continuous-data domain is described by
GcsðÞ¼KPþKDsþKI
s(H-233)
The proportional component KPis implemented digitally by a constant gain KP. Because a
digital computer or processor has ﬁnite word length, the constant KPcannot be realized
with inﬁnite resolution.
The time derivative of a function f(t)a tt¼kTcan be approximated by the backward-
difference rule, using the values of f(t) measured at t¼kTand ( k/C01)T; that is,
df tðÞ
dt/C12/C12/C12/C12
t¼kT¼1
Tfk TðÞ /C0 fk/C01ðÞ T½/C138ðÞ (H-234)
To ﬁnd the z-transfer function of the derivative operation described before, we take the z-
transform on both sides of Eq. (H-234). We have
Z/C0df tðÞ
dt/C12/C12/C12/C12
t¼kT/C18/C19
¼1
T1/C0z/C01/C0/C1
FzðÞ¼z/C01
TzFzðÞ (H-235)
Thus, the z-transfer function of the digital differentiator is
GDzðÞ¼ KDz/C01
Tz(H-236)
where KDis the proportional constant of the derivative controller. Replacing zbyeTsin Eq.
(H-236), we can show that, as the sampling period Tapproaches zero, GD(z) approaches
KDs, which is the transfer function of the analog derivative controller. In general, the choice
of the sampling period is extremely important. The value of Tshould be sufﬁciently small
so that the digital approximation is adequately accurate.D(s)
ZOHControlled
Process
KZOH GP(s)
T
Te(t) r(t) e*(t)
Te*(t) y(t)
+
– Controlled
ProcessDigital
Controller
(a)
(b)D(z)
r(k) u(k) x(k)
–+
Figure H-39 (a) Digital control system with cascade digital controller. (b) Digital control system with
state feedback.H-54"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 55
There are a number of numerical integration rules that can be used to digitally
approximate the integral controller KI=s. The three basic methods of approxi-
mating the area of a function numerically are trapezoidal integration ,forward-
rectangular integration ,a n dbackward-rectangular integration . These are de-
scribed as follows.
Trapezoidal Integration
The trapezoidal-integration rule approximates the area under the function f(t)b ya
series of trapezoids, as shown in Fig. H-40. Let the integral of f(t) evaluated at t¼kTbe
designated as u(kT). Then,
uk TðÞ ¼ uk/C01ðÞ T½/C138 þT
2fk TðÞ /C0 fk/C01ðÞ T½/C138fg (H-237)
where the area under f(t)f o r( k/C01)T/C20t<kTis approximated by the area of the
trapezoid in the interval. Taking the z-transform on both sides of Eq. (H-237), we have
the transfer function of the digital integrator as
GIzðÞ¼ KIUzðÞ
FzðÞ¼KITzþ1ðÞ
2z/C01ðÞ(H-238)
where KIis the proportional constant.
Forward-Rectangular IntegrationFor the forward-rectangular integration, we approximate the area under f(t) by rectangles,
as shown in Fig. H-41. The integral of f(t)a tt¼kTis approximated by
uk TðÞ ¼ uk/C01ðÞ T½/C138 þ Tf kTðÞ (H-239)
0 t (k – 1)Tk Tf(t)f(kT)f[(k – 1)T]
u[(k – 1)T]
Figure H-40 Trapezoidal-integration rule.
0 t (k – 1)T   kTf(kT)
u[(k – 1)T]
Figure H-41 Forward-rectangular integration rule.H-10 Design of Discrete-Data Control Systems 3H-55
Appendix-H_1 05/14/2009 56
By taking the z-transform on both sides of Eq. (H-239), the transfer function of the digital
integrator using the forward-rectangular rule is
GIzðÞ¼ KIUzðÞ
FzðÞ¼KITz
z/C01(H-240)
Backward-Rectangular Integration
For the backward-rectangular integration, the digital approximation rule is illustrated inFig. H-42. The integral of f(t)a tt¼kTis approximated by
uk TðÞ ¼ uk/C01ðÞ T½/C138 þ Tf k/C01ðÞ T½/C138 (H-241)
Thez-transfer function of the digital integrator using the backward-rectangular integration
rule is
G
IzðÞ¼ KIUzðÞ
FzðÞ¼KIT
z/C01(H-242)
By combining the proportional, derivative, and integration operations described previ-
ously, the digital PID controller is modeled by the following transfer functions.
Trapezoidal Integration
GczðÞ¼KPþTKI
2þKD
T/C18/C19
z2þTKI
2/C0KP/C02KD
T/C18/C19
zþKD
T
zz/C01ðÞ(H-243)
Forward-Rectangular Integration
GczðÞ¼KPþKD
TþTKI/C18/C19
z2/C0KPþ2KD
T/C18/C19
zþKD
T
zz/C01ðÞ(H-244)
Backward-Rectangular Integration
GczðÞ¼ðKPþKD
T/C19
z2þTKI/C0KP/C02KD
T/C18/C19
zþKD
T
zz/C01ðÞ(H-245)
When KI¼0, the transfer function of the digital PD controller is
GczðÞ¼ðKPþKD
T/C19
z/C0KD
T
z(H-246)
Once the transfer function of a digital controller is determined, the controller can be
implemented by a digital processor or computer. The operator z/C01is interpreted as a time
delay of Tseconds. In practice, the time delay is implemented by storing a variable in some
f[(k – 1)T]
(k – 1)T 0 kT tFigure H-42 Backward-rectangular
integration rule.H-56"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 57
storage location in the computer and then taking it out after Tseconds have elapsed. Fig.
H-43 illustrates a block diagram representation of the digital program of the PID controller
using the trapezoidal-integration rule.
H-10-4 Digital Implementation of Lead and Lag Controllers
In principle, any continuous-data controller can be made into a digital controller simply by
adding sample-and-hold units at the input and the output terminals of the controller and
selecting a sampling frequency as small as is practical. Figure H-44 illustrates the basicscheme with G
c(s), the transfer function of the continuous-data controller, and Gc(z), the
equivalent digital controller. The sampling period Tshould be sufﬁciently small so that the
dynamic characteristics of the continuous-data controller are not lost through the digitiza-tion. The system conﬁguration in Fig. H-44 actually suggests that, given the continuous-
data controller G
c(s), the equivalent digital controller Gc(z) can be obtained by the
arrangement shown. On the other hand, given the digital controller Gc(z), we can realize
it by using an analog controller Gc(s) and sample-and-hold units, as shown in Fig. H-44.
"EXAMPLE H-10-1 As an illustrative example, consider that the continuous-data controller in Fig. H-44 is represented by
the transfer function
GcsðÞ¼sþ1
sþ1:61(H-247)
From Fig. H-44, the transfer function of the digital controller is written
GczðÞ¼UðzÞ
FðzÞ¼1/C0z/C01/C0/C1
Z/C0sþ1
ssþ1:61ðÞ/C20/C21
¼z/C00:62e/C01:61Tþ0:38/C0/C1
z/C0e/C01:61T(H-248)KD
 T
TKI
2KP
z–1
z–1f(kT) u(kT)–+
+++
+
+++
Figure H-43 Block diagram of a digital-program implementation of the PID controller.
Gc(z)Tf(t)
Tu(t) f*(t) u*(t) To controlled process
ZOH ZOH Gc(s)
Figure H-44 Realization of a digital controller by an analog controller with sample-and-hold units.H-10 Design of Discrete-Data Control Systems 3H-57
Appendix-H_1 05/14/2009 58
The digital-program implementation of Eq. (H-248) is shown in Fig. H-45. 3
"H-11 DIGITAL CONTROLLERS
Digital controllers can be realized by digital networks, digital computers, microprocessors,
or digital signal processors (DSPs). A distinct advantage of digital controllers implementedby microprocessors or DSPs is that the control algorithm contained in the controller can beeasily altered by changing the program. Changing the components of a continuous-data
controller is rather difﬁcult once the controller has been built.
H-11-1 Physical Realizability of Digital Controllers
The transfer function of a digital controller can be expressed as
GczðÞ¼E2zðÞ
E1zðÞ¼b0þb1z/C01þ/C1/C1/C1þ bmz/C0m
a0þa1z/C01þ/C1/C1/C1þ anz/C0n(H-249)
where nandmare positive integers. The transfer function Gc(z) is said to be physically
realizable if its output does not precede any input. This means that the series expansion of
Gc(z) should not have any positive powers in z. In terms of the Gc(z) given in Eq. (H-249), if
b06¼0, then a06¼0. If Gc(z) is expressed as
GczðÞ¼bmzmþbm/C01zm/C01þ/C1/C1/C1þ b1zþb0
anznþan/C01zn/C01þ/C1/C1/C1þ a1zþa0(H-250)
then the physical realizability requirement is n/C21m.
The decomposition techniques presented in Chapter 2 can be applied to realize the
digital controller transfer function by a digital program. We consider that a digital program
is capable of performing arithmetic operations of addition, subtraction, multiplication by a
constant, and shifting. The three basic methods of decomposition for digital programmingare discussed in the following sections.
Digital Program by Direct Decomposition
Applying direct decomposition to Eq. (H-249), we have the following equations:
E
2zðÞ¼1
a0b0þb1z/C01þ/C1/C1/C1þ bmz/C0m/C0/C1
XzðÞ (H-251)
XzðÞ¼1
a0E1zðÞ/C01
a0a1z/C01þa2z/C02þ/C1/C1/C1þ anz/C0n/C0/C1
XzðÞ (H-252)
Fig. H-46 shows the signal-ﬂow graph of a direct digital program of Eq. (H-249) by directdecomposition for m¼2 and n¼3. The branches with gains of z
/C01represent time delays
or shifts of one sampling period.f(kT) u(kT)
z–1
e–1.61T0.38 + 0.62e –1.61T+
+
++
Figure H-45 Digital-program realization of Eq. (H-248).H-58"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 59
Digital Program by Cascade Decomposition
The transfer function Gc(z) can be written as a product of ﬁrst- or second-order transfer
functions, each realizable by a simple digital program. The digital program of the overall
transfer function is then represented by these simple digital programs connected in
cascade. Eq. (H-249) is written in factored form as
GczðÞ¼ Gc1zðÞGc2zðÞ/C1/C1/C1G cnzðÞ (H-253)
where the individual factors can be expressed as
Real Pole and Zero
GcizðÞ¼ Ki1þciz/C01
1þdiz/C01(H-254)
Complex-Conjugate Poles (No Zeros)
GcizðÞ¼Ki
1þdi1z/C01þdi2z/C02(H-255)
Complex-Conjugate Poles with One Zero
GcizðÞ¼ Ki1þciz/C01
1þdi1z/C01þdi2z/C02(H-256)
and several other possible forms up to the second order.
Digital Program by Parallel Decomposition
The transfer function in Eq. (H-249) can be expanded into a sum of simple ﬁrst- or second-
order terms by partial-fraction expansion. These terms are then realized by digital
programs connected in parallel.
"EXAMPLE H-11-1 Consider the following transfer function of a digital controller:
GczðÞ¼E2zðÞ
E1zðÞ¼10 1þ0:5z/C01/C0/C1
1/C0z/C01ðÞ 1/C00:2z/C01ðÞ(H-257)
Because the leading coefﬁcients of the numerator and denominator polynomials in z/C01are all
constants, the transfer function is physically realizable. The transfer function Gc(z) is realized by the
three types of digital programs discussed earlier. 31/a0
–a1/a0
–a2/a0b1/a0
b2/a0
b3/a0
–a3/a0z–1z–1z–1
e1 e2
Figure H-46 Signal-ﬂow graph of digital program by direct decomposition of Eq. (H-249) with
n¼3 and m¼2.H-11 Digital Controllers 3H-59
Appendix-H_1 05/14/2009 60
Direct Digital Programming
Eq. (H-257) is written
GczðÞ¼E2zðÞ
E1zðÞ¼10 1þ0:5z/C01/C0/C1
XzðÞ
1/C0z/C01ðÞ 1/C00:2z/C01ðÞ XzðÞ(H-258)
Expanding the numerator and denominator of the last equation and equating, we have
E2zðÞ¼ 10þ5z/C01/C0/C1
XzðÞ (H-259)
XzðÞ¼ E1zðÞþ 1:2z/C01XzðÞ/C0 0:2z/C02XzðÞ (H-260)
The last two equations are realized by the digital program shown in Fig. H-47.
Cascade Digital Programming
The right-hand side of Eq. (H-257) is divided into two factors in one of several possibleways.
G
czðÞ¼E2zðÞ
E1zðÞ¼1þ0:5z/C01
1/C0z/C0110
1/C00:2z/C01(H-261)
Fig. H-48 shows the signal-ﬂow graph of the cascade digital program of the controller.
Parallel Digital Programming
The right-hand side of Eq. (H-257) is expanded by partial fraction into two separateterms.
G
czðÞ¼E2zðÞ
E1zðÞ¼18:75
1/C0z/C01/C08:75
1/C00:2z/C01(H-262)
Fig. H-49 shows the signal-ﬂow graph of the parallel digital program of the controller.
10
5
1
1.2
–0.2z–1
e1e2z–1
Figure H-47 Direct digital program of Eq. (H-257).
1 z–10.5
0.210 z–11
1e1e2
Figure H-48 Cascade digital program of Eq. (H-257).H-60"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 61
"H-12 DESIGN OF DISCRETE-DATA CONTROL SYSTEMS IN THE FREQUENCY DOMAIN
AND THE z-PLANE
Thew-transformation introduced in Section H-5 can be used to carry out the design of
discrete-data control systems in the frequency domain. Once the transfer function of the
controlled process is transformed into the w-domain, all the design techniques for
continuous-data control systems can be applied to the design of discrete-data systems.
H-12-1 Phase-Lead and Phase-Lag Controllers in the w-Domain
Just as in the s-domain, the single-stage phase-lead and phase-lag controllers in the
w-domain can be expressed by the transfer function
GcwðÞ¼1þatw
1þtw(H-263)
where a>1 corresponds to phase lead and a<1 corresponds to phase lag. When wis
replaced by jvw, the Bode plots of Eq. (H-263) are identical to those of Figs. 9-28 and 9-45
fora>1 and a<1, respectively. Once the controller is designed in the w-domain, the
z-domain controller is obtained by substituting the w-transformation relationship in
Eq. (H-163); that is,
w¼2
Tz/C01
zþ1(H-264)
The following example illustrates the design of a discrete-data control system using the
w-transformation in the frequency domain and the z-plane.
"EXAMPLE H-12-1 Consider the sun-seeker control system described in Section 4-11 and shown in Fig. 9-29. Now let us
assume that the system has discrete data so that there is a ZOH in the forward path. The sampling
period is 0.01 second. The transfer function of the controlled process is
GpsðÞ¼2500
ssþ25ðÞ(H-265)
Thez-transfer function of the forward path, including the sample-and-hold, is
Gh0GpzðÞ¼ 1/C0z/C01/C0/C1
Z/C02500
s2sþ25ðÞ/C18/C19
(H-266)1
0.211
–8.7518.75z–1
z–1e1e2
Figure H-49 Parallel digital
program of Eq. (H-257).H-12 Design of Discrete-Data Control Systems in the Frequency Domain and the z-Plane3H-61
Appendix-H_1 05/14/2009 62
Carrying out the z-transform in the last equation with T¼0.01 second, we get
Gh0GpzðÞ¼0:1152 zþ0:106
z/C01ðÞ z/C00:7788ðÞ(H-267)
The closed-loop transfer function of the discrete-data system is
QozðÞ
QrzðÞ¼Gh0GpzðÞ
1þGh0GpzðÞ¼0:1152 zþ0:106
z2/C01:6636 zþ0:8848(H-268)
The unit-step response of the uncompensated system is shown in Fig. H-50. The maximum overshoot
is 66%.
Let us carry out the design in the frequency domain using the w-transformation of Eq. (H-162),
z¼2=TðÞ þ w
2=TðÞ /C0 w(H-269)
Substituting Eq. (H-269) into Eq. (H-268), we have
Gh0GpwðÞ¼100 1/C00:005wðÞ 1þ0:000208 wðÞ
w1þ0:0402 wðÞ(H-270)
The Bode plot of the last equation is shown in Fig. H-51. The gain and phase margins of theuncompensated system are 6.39 dB and 14.77
/C14, respectively.Uncompensated
system
With phase-leadcontroller
With phase-lag controller
T = 0.0100 sec2.0
1.0
001 6 3 2 4 0 6 4 8 0
Number of sampling periods
Figure H-50 Step responses of discrete-data sun-seeker system in Example H-12-1.H-62"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 63
3
Phase-Lag Controller Design in the Frequency Domain
Let us ﬁrst design the system using a phase-lag controller with the transfer function given inEq. (H-263) with a<1. Let us require that the phase margin of the system be at least 50
/C14.
From the Bode plot in Fig. H-51, a phase margin of 50/C14can be realized if the gain
crossover point is at vw¼12.8 and the gain of the magnitude curve of GhoGp(jvw)i s
16.7 dB.PM = 50.83°40
20
0
–20
–40
–60
–80
100101102103104105Amplitude (dB)With phase-lead
controller
Uncompensatedsystem
0
–50
–100
–150
–200–180
–250
–300
100101102103104105DegreesPM = 55°Uncompensated
system
With phase-lagcontrollerPM = 50°With phase-leadcontrollerWith phase-lagcontroller
12.816.7dB
Figure H-51 Bode plots of discrete-data sun-seeker system in Example H-12-1.H-12 Design of Discrete-Data Control Systems in the Frequency Domain and the z-Plane3H-63
Appendix-H_1 05/14/2009 64
Thus, we need/C016.7 dB of attenuation to bring the magnitude curve down so that it
will cross the 0-dB-axis at vw¼12.8. We set
20 log10a¼/C016:7 dB (H-271)
from which we get a¼0.1462. Next, we set 1 =atto be at least one decade below the gain-
crossover point at vw¼12.8. We set
1
at¼1 (H-272)
Thus,
1
t¼a¼0:1462 (H-273)
The phase-lag controller in the w-domain is
GcwðÞ¼1þatw
1þtw¼1þw
1þ6:84w(H-274)
Substituting the z-w-transform relation, w¼(2=T)(z/C01)=(zþ1), in Eq. (H-274), the
phase-lag controller in the z-domain is obtained:
GczðÞ¼ 0:1468z/C00:99
z/C00:9985(H-275)
The Bode plot of the forward-path transfer function with the phase-lag controller of Eq. (H-
274) is shown in Fig. H-51. The phase margin of the compensated system is improved to
55/C14. The unit-step response of the phase-lag compensated system is shown in Fig. H-50.
The maximum overshoot is reduced to 16%.
Phase-Lead Controller Design in the Frequency Domain
A phase-lead controller is obtained by using a>1 in Eq. (H-263). The same principle for
the design of phase-lead controllers of continuous-data systems described in Chapter 9 can
be applied here. Because the slope of the phase curve near the gain crossover is rather steep,as shown in Fig. H-51, it is expected that some difﬁculty may be encountered in designing a
phase-lead controller for the system. Nevertheless, we can assign a relatively large value
fora, rather than using the amount of phase lead required as a guideline.
Let us set a¼20. The gain of the controller at high values of v
wis
20 log10a¼20 log1020¼26 dB (H-276)
From the design technique outlined in Chapter 9, the new gain crossover should be locatedat the point where the magnitude curve is at /C026=2¼/C013 dB. Thus, the geometric mean of
the two corner frequencies of the phase-lead controller should be at the point where the
magnitude of G
hoGp(jv)i s/C013 dB. From Fig. H-51 this is found to be at vw¼115. Thus,
1
t¼115ﬃﬃﬃap¼514 (H-277)
Thew-domain transfer function of the phase-lead controller is
GcwðÞ¼1þatw
1þtw¼1þ0:03888 w
1þ0:001944 w(H-278)H-64"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 65
The transfer function of the phase-lead controller in the z-domain is
GczðÞ¼8:7776 z/C06:7776
1:3888 zþ0:6112(H-279)
The Bode plot of the phase-lead compensated system is shown in Fig. H-51. The phase margin
of the compensated system is 50.83/C14. The unit-step response of the phase-lead compensated
system is shown in Fig. H-50. The maximum overshoot is 27%, but the rise time is faster.
Digital PD-Controller Design in the z-Plane
The digital PD controller is described by the transfer function in Eq. (H-246) and is
repeated as
GczðÞ¼KPþKD
T/C18/C19
z/C0KD
T
z(H-280)
To satisfy the condition that Gc(1)¼1 so that Gc(z) does not affect the steady-state error of
the system, we set KP¼1. Applying the digital PD controller as a cascade controller to the
sun-seeker system, the forward-path transfer function of the compensated system is
GczðÞGhoGpzðÞ¼1þ100KDðÞ z/C0100KD
z0:1152 zþ0:106
z/C01ðÞ z/C00:7788ðÞ(H-281)
We can use the root-contour method to investigate the effects of varying KD. The
characteristic equation of the closed-loop system is
zz2/C01:6636 zþ0:8848/C0/C1
þ11:52KDz/C01ðÞ zþ0:9217ðÞ ¼ 0 (H-282)
Dividing both sides of the last equation by the terms that do not contain KD, the equivalent
forward-path transfer function with KDappearing as a multiplying factor is
GeqzðÞ¼11:52KDz/C01ðÞ zþ0:9217ðÞ
zz2/C01:6636 zþ0:8848 ðÞ(H-283)
The root contours of the system for KD>0 are shown in Fig. H-52. These root contours
show that the effectiveness of the digital PD controller is limited for this system, since the
contours do not dip low enough toward the real axis. In fact, we can show that the best valueofK
Dfrom the standpoint of overshoot is 0.022, and the maximum overshoot is 28%.
Digital PE-Controller Design in the z-Plane
The digital PI controller introduced in Section H-10-3 can be used to improve the steady-
state performance by increasing the system type and, at the same time, improve the relative
stability by using the dipole principle. Let us select the backward-rectangular integration
implementation of the PID controller given by Eq. (H-245). With KD¼0, the transfer
function of the digital PI controller becomes
GczðÞ¼KPz/C0KP/C0KITðÞ
z/C01¼KPz/C01/C0KIT
KP/C18/C19
z/C01(H-284)H-12 Design of Discrete-Data Control Systems in the Frequency Domain and the z-Plane3H-65
Appendix-H_1 05/14/2009 66
The principle of the dipole design of the PI controller is to place the zero of Gc(z) very close
to the pole at z¼1. The effective gain provided by the controller is essentially equal to KP.
To create a root-locus problem, the transfer function in Eq. (H-267) is written
GhoGpzðÞ¼Kzþ0:9217ðÞ
z/C01ðÞ z/C00:7788ðÞ(H-285)
where K¼0.1152. The root loci of the system are drawn as shown in Fig. H-53. The roots
of the characteristic equation when K¼0.1152 are 0.8318 þj0.4392 and 0.8318 /C0
j0.4392. As shown earlier, the maximum overshoot of the system is 66%. If Kis reduced to
0.01152, the characteristic equation roots are at 0.8836 þj0.0926 and 0.8836 /C0j0.0926.
The maximum overshoot is reduced to only 3%.
We can show that, if the gain in the numerator of Eq. (H-265) is reduced to 250, the
maximum overshoot of the system would be reduced to 3%. This means to realize aKD = 0KD = 0KD = 0.022
0.393 + j0.468
KD = 0–1 0 1 Re z –0.92170.8318 + j0.4392
0.8318 – j0.4392z-planejIm z
Figure H-52 Root contours of sun-seeker system in Example H-12-1 with digital PD controller.
KDvaries.H-66"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 67
similar improvement on the maximum overshoot, the value of KPin Eq. (H-284)
should be set to 0.1. At the same time, we let the zero of Gc(z)b ea t0 . 9 9 5 .T h u s ,
GczðÞ¼ 0:1z/C00:995
z/C01(H-286)
The corresponding value of KIis 0.05. The forward-path transfer function of the system
with the PI controller becomes
GczðÞGhoGpzðÞ¼0:1Kzþ0:995ðÞ zþ0:9217ðÞ
z/C01ðÞ2z/C00:7788ðÞ(H-287)
where K¼0.1152. The root loci of the compensated system are shown in Fig. H-53. When
K¼0.1152, the two dominant roots of the characteristic equation are at 0.8863 þj0.0898K = 0K = 0
0.7788K = 0Compensated
systemUncompensated systemK = 0.11520.8318 + j0.4392
Uncompensated systemK = 0.011520.8836 + j0.0926 K = 0.11520.8863 + j0.0898
Re z
0.995
Root-loci
compensated
systemRoot-loci
uncompensated
systemj Im z
–0.9217 –1 01
Figure H-53 Root loci of sun-seeker system in Example H-12-1 with and without digital PI
controller.H-12 Design of Discrete-Data Control Systems in the Frequency Domain and the z-Plane3H-67
Appendix-H_1 05/14/2009 68
and 0.8863/C0j0.0898. The third root is at 0.9948, which is very close to the pole of Gc(z)a t
z¼1, and thus the effect on the transient response is negligible. We can show that the actual
maximum overshoot of the system with the forward-path transfer function in Eq. (H-287) is
approximately 8%.
This design problem simply illustrates the mechanics of designing a phase-lead and
phase-lag controller using the w-transformation method in the frequency domain and
digital PD and PI controllers in the z-plane. No attempt was made in optimizing the system
with respect to a set of performance speciﬁcations.
"H-13 DESIGN OF DISCRETE-DATA CONTROL SYSTEMS WITH DEADBEAT RESPONSE
One difference between a continuous-data control system and a discrete-data control
system is that the latter is capable of exhibiting a deadbeat response . A deadbeat response
is one that reaches the desired reference trajectory in a minimum amount of time without
error. In contrast, a continuous-data system reaches the ﬁnal steady-state trajectory or valuetheoretically only when time reaches inﬁnity. The switching operation of sampling allows
the discrete-data systems to have a ﬁnite transient period. Fig. H-54 shows a typicaldeadbeat response of a discrete-data system subject to a unit-step input. The output
response reaches the desired steady state with zero error in a minimum number of sampling
periods without intersampling oscillations.
H. R. Sirisena [10] showed that given a discrete-data control system with the
controlled process described by
G
h0Gpz/C01/C0/C1
¼Qz/C01/C0/C1
Pz/C01ðÞ(H-288)
for the system to have a deadbeat response to a step input, the transfer function of the digital
controller is given by
GczðÞ¼Pz/C01/C0/C1
Q1ðÞ/C0 Qz/C01ðÞ(H-289)
where Q(1) is the value of Q(z/C01) with z/C01¼1.
The following example illustrates the design of a discrete-data system with deadbeat
response using Eq. (H-289).
y(t)
1
0 T 2T 3T 4T 5T 6T 7T t
Figure H-54 A typical deadbeat response to a unit-step input.H-68"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 69
"EXAMPLE H-13-1 Consider the discrete-data sun-seeker system discussed in Example H-12-1. The forward-path
transfer function of the uncompensated system is given in Eq. (H-207) and is written as
GhoGpz/C01/C0/C1
¼Qz/C01/C0/C1
Pz/C01ðÞ¼0:1152 z/C011þ0:9217 z/C01/C0/C1
1/C0z/C01ðÞ 1/C00:7788 z/C01ðÞ(H-290)
Thus,
Qz/C01/C0/C1
¼0:1152 z/C011þ0:9217 z/C01/C0/C1
(H-291)
Pz/C01/C0/C1
¼1/C0z/C01/C0/C1
1/C00:7788 z/C01/C0/C1
(H-292)
andQ(1)¼0.22138.
The digital controller for a deadbeat response is obtained by using Eq. (H-289).
Gcz/C01/C0/C1
¼Pz/C01/C0/C1
Q1ðÞ/C0 Qz/C01ðÞ¼1/C0z/C01/C0/C1
1/C00:7788 z/C01/C0/C1
0:22138/C00:1152 z/C01/C00:106z/C02(H-293)
Thus,
GczðÞ¼z/C01ðÞ z/C00:7788ðÞ
0:22138 z2/C00:1152 z/C00:106(H-294)
The forward-path transfer function of the compensated system is
GczðÞGhoGpzðÞ¼0:1152 zþ0:9217ðÞ
0:22138 z2/C00:1152 z/C00:106(H-295)
The closed-loop transfer function of the compensated system is
QozðÞ
QrzðÞ¼GczðÞGhoGpzðÞ
1þGczðÞGhoGpzðÞ
¼0:0:5204 zþ0:9217ðÞ
z2(H-296)
For a unit-step function input, the output transform is
QozðÞ¼0:5204 zþ0:9217ðÞ
zz/C01ðÞ
¼0:5204 z/C01þz/C02þz/C03þ/C1/C1/C1(H-297)
Thus, the output response reaches the unit-step input in two sampling periods.
To show that the output response is without intersampling ripples, we evaluate the output
velocity of the system; that is, vo(t)¼duo(t)=dt.
Thez-transfer function of the output velocity is written
VozðÞ
QrzðÞ¼GczðÞ1/C0z/C01/C0/C1
Z/C02500
ssþ25ðÞ/C20/C21
GczðÞGhoGpzðÞ
¼100z/C01ðÞ
z2(H-298)
The output velocity response due to a unit-step input is
VozðÞ¼100
z¼100z/C01(H-299)
Thus, the output velocity becomes zero after the second sampling period, which proves that theposition response is deadbeat without intersampling ripples. The responses of u
o(t) and vo(t)
are shown in Fig. H-55. The characteristic of a system with deadbeat response is that the polesH-13 Design of Discrete-Data Control Systems with Deadbeat Response 3H-69
Appendix-H_1 05/14/2009 70
of the closed-loop transfer function are all at z¼0. Because these are multiple-order poles, from the
standpoint of root sensitivity discussed in Chapter 7, the root sensitivity of a system with deadbeat
response is very high. 3
"H-14 POLE-PLACEMENT DESIGN WITH STATE FEEDBACK
Just as for continuous-data systems, pole-placement design through state feedback can be
applied to discrete-data systems. Let us consider the discrete-data system described by thefollowing state equation:
xkþ1ðÞ T½/C138 ¼ AxkTðÞ þ Buk TðÞ (H-300)
where x(kT)i sa n n/C21 state vector, and u(kT) is the scalar control. The state-feedback
control is
uk TðÞ ¼ /C0 KxkTðÞ þ rk TðÞ (H-301)
where Kis the 1/C2nfeedback matrix with constant-gain elements. By substituting
Eq. (H-301) into Eq. (H-300), the closed-loop system is represented by the state equation
xkþ1ðÞ T½/C138 ¼ A/C0BKðÞ xkTðÞ (H-302)
Just as in the continuous-data case treated in Section 10-17, we can show that, if the pair [ A,B]
is completely controllable, a matrix Kexists that can give an arbitrary set of eigenvalues of
(A/C0BK); that is, the nroots of the characteristic equation
zI/C0AþBKjj¼0 (H-303)
can be arbitrarily placed. The following example illustrates the design of a discrete-data
control system with state feedback and pole placement.1.0
0.5204
0 T 2T 3T 4T 5T 6T 7Tt
100
0 T 2T 3T 4T 5T 6T 7T t
Figure H-55 Output position and velocity responses of discrete-data sun-seeker system in
Example H-13-1.H-70"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 71
"EXAMPLE H-14-1 Consider that the sun-seeker system described in Example 10-5-1 is subject to sampled data so that the state
diagram of the system without feedback is shown in Fig . H-56(a). The sampling period is 0.01 second. The
dynamics of the ZOH are represented by th e branch with a transfer function of 1/ s. The closed-loop system
with state feedback for the time interval ( kT)/C20t/C20(kþ1)Tis portrayed by the state diagram shown in Fig.
H-56(b), where the feedback gains k1andk2form the feedback matrix
K¼k1k2½/C138 (H-304)
Applying the SFG gain formula to Fig. H-56(b), with X1(s) and X2(s) as outputs and x1(kT) and
x2(kT) as inputs, we have
X1sðÞ¼1
s/C02500 k1
s2sþ25ðÞ/C20/C21
x1kTðÞ þ1
ssþ25ðÞ/C02500 k2
s2sþ25ðÞ/C20/C21
x2kTðÞ (H-305)
X2sðÞ¼/C02500 k1
ssþ25ðÞx1kTðÞ /C02500 k2
ssþ25ðÞx2kTðÞ þ1
sþ25x2kTðÞ (H-306)
Taking the inverse Laplace transform on both sides of Eqs. (H-305) and (H-306) and letting t¼(kþ
1)T, we have the discrete-data state equations as
x1kþ1ðÞ T½/C138 ¼ 1/C00:1152 k1ðÞ x1kTðÞ þ 0:2212/C00:1152 k2 ðÞ x2kTðÞ
x2kþ1ðÞ T½/C138 ¼ /C0 22:12k1x1kTðÞ þ 0:7788/C022:12k2ðÞ x2kTðÞ(H-307)
Thus, the coefﬁcient matrix of the closed-loop system with state feedback is
A/C0BK¼1/C00:1152 k10:2212/C00:1152 k2
/C022:12k1 0:7788/C022:12k2/C20/C21
(H-308)
The characteristic equation of the closed-loop system is
zI/C0AþBKjj¼z/C01þ0:1152 k1/C00:2212þ0:1152 k2
22:12k1 z/C00:7788þ22:12k2/C12/C12/C12/C12/C12/C12/C12/C12
¼z2þ/C0 1:7788þ0:1152 k1þ22:12k2 ðÞ zþ0:7788þ4:8032 k1/C022:12k2
¼0
(H-309)
T u(t)
u(kT)s–1–k2–k1
2500 s–1s–1s–1s–1
X1(s) X2(s)x2(kT) x1(kT)
ZOHX2(s) X1(s) u*(t) ZOH
–25s–1s–1s–12500
(a)
(b)–25
Figure H-56 (a) Signal-ﬂow graph of open-loop, discrete-data, sun-seeker system.
(b) Signal-ﬂow graph of discrete-data, sun-seeker system with state feedback.H-14 Pole-Placement Design with State Feedback 3H-71
Appendix-H_1 05/14/2009 72
Let the desired location of the characteristic equation roots be at z¼0, 0. The conditions on k1
andk2are
/C01:7788þ0:1152 k1þ22:12k2¼0 (H-310)
0:7788þ4:8032 k1/C022:12k2¼0 (H-311)
Solving for k1andk2from the last two equations, we get
k1¼0:2033 and k2¼/C00:07936 (H-312)
3
"REFERENCES
1. B. C. Kuo, Digital Control Systems , 2nd Ed., Oxford University Press, New York, 1992.
2. M. L. Cohen, ‘‘A Set of Stability Constraints on the Denominator of a Sampled-Data Filter,’’ IEEE Trans.
Automatic Control , Vol. AC-11, pp. 327–328, April 1966.
3. E. I. Jury and J. Blanchard, ‘‘A Stability Test for Linear Discrete Systems in Table Form,’’ IRE Proc. , Vol. 49,
No. 12, pp. 1947–1948, Dec. 1961.
4. E. I. Jury and B. D. O. Anderson, ‘‘A Simpliﬁed Schur-Cohen Test,’’ IEEE Trans. Automatic Control , Vol.
AC-18, pp. 157–163, April 1973.
5. R. H. Raible, ‘‘A Simpliﬁcation of Jury’s Tabular Form,’’ IEEE Trans. Automatic Control , Vol. AC-19,
pp. 248–250, June 1974.
6. E. I. Jury, Theory and Application of the z-Transform Method , John Wiley & Sons, New York, 1964.
7. G. F. Franklin, J. D. Powell, and M. L. Workman, Digital Control of Dynamic Systems , 2nd Ed., Addison-
Wesley, Reading, MA, 1990.
8. K. Ogata, Discrete-Time Control Systems , Prentice Hall, Englewood Cliffs, NJ, 1987.
9. C. L. Phillips and H. T. Nagle, Jr., Digital Control System Analysis and Design , Prentice Hall, Englewood
Cliffs, NJ, 1984.
10. H. R. Sirisena, ‘‘Ripple-Free Deadbeat Control of SISO Discrete Systems,’’ IEEE Trans. Automatic Control ,
Vol. AC-30, pp. 168–170, Feb. 1985.
"PROBLEMS
H-1. Find the z-transforms of the following functions.
(a)fkðÞ¼ ke/C03k (b)fkðÞ¼ ksin 2k
(c)fkðÞ¼ e/C02ksin3k (d)fkðÞ¼ k2e/C02k
H-2. Determine the z-transforms of the following sequences.
(a)fk TðÞ ¼ kTsin 2kT
(b)fkðÞ¼1 k¼0;2;4;6;...;even integers
/C01 k¼1;3;5;7;...;odd integers/C26
H-3. Perform the partial-fraction of the following functions, if applicable, and then ﬁnd the
z-transforms using the z-transform table.
(a)FsðÞ¼1
sþ5ðÞ3(b)FsðÞ¼1
s3sþ1ðÞ
(c)FsðÞ¼10
ssþ5ðÞ2(d)FsðÞ¼5
ss2þ2ðÞ
H-4. Find the inverse z-transforms f(k) of the following functions. Apply partial-fraction expansion
toF(z) and then use the z-transform table.
(a)FzðÞ¼10z
z/C01ðÞ z/C00:2ðÞ(b)FzðÞ¼z
z/C01ðÞ z2þzþ1ðÞ
(c)FzðÞ¼z
z/C01ðÞ zþ0:85ðÞ(d)FzðÞ¼10
z/C01ðÞ z/C00:5ðÞH-72"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 73
H-5. Given that Z/C0fkðÞ½/C138 ¼ FzðÞ, ﬁnd the value of f(k)a s kapproaches inﬁnity without
obtaining the inverse z-transform of F(z). Use the ﬁnal-value theorem of the z-transform if
it is applicable.
(a)FzðÞ¼0:368z
z/C01ðÞ z2/C01:364zþ0:732ðÞ(b)FzðÞ¼10z
z/C01ðÞ zþ1ðÞ
(c)FzðÞ¼z2
z/C01ðÞ z/C00:5ðÞ(d)FzðÞ¼z
z/C01ðÞ z/C01:5ðÞ
Check the answers by carrying out the long division of F(z) and express it in a power series of z/C01.
H-6. Solve the following difference equations by means of the z-transform.
(a)xkþ2ðÞ /C0 xkþ1ðÞ þ 0:1xkðÞ¼ uskðÞ x0ðÞ¼ x1ðÞ¼ 0
(b)xkþ2ðÞ /C0 xkðÞ¼ 0 x0ðÞ¼ 1;x1ðÞ¼ 0
H-7. This problem deals with the application of the difference equations and the z-transform to a
loan-amortization problem. Consider that a new car is purchased with a load of P0dollars over a
period of Nmonths at a monthly interest rate of rpercent. The principal and interest are to be paid
back in Nequal payments of udollars each.
(a)Show that the difference equation that describes the loan process can be written as
Pkþ1ðÞ ¼ 1þrðÞ PkðÞ/C0 u
where
P(k)¼amount owed after the kth period, k¼0 ,1 ,2 ,..., N.
P(O)¼P0¼initial amount borrowed
P(N)¼0 (after Nperiods, owe nothing)
The last two conditions are also known as the boundary conditions.
(b)Solve the difference equation in part (a) by the recursive method, starting with k¼0, then
k¼1, 2, . . . , and substituting successively. Show that the solution of the equation is
u¼1þrðÞNP0r
1þrðÞN/C01
(c)Solve the difference equation in part (a) by using the z-transform method.
(d)Consider that P0¼$15,000, r¼0.01 (1% per month), and N¼48 months. Find u, the monthly
payment.H-8. Perform the partial-fraction expansion to the following z-transfer functions.
(i)GzðÞ¼5z
z/C01ðÞ z/C00:1ðÞ(ii)GzðÞ¼10zz/C00:2ðÞ
z/C01ðÞ z/C00:5ðÞ z/C00:8ðÞ
(iii)GzðÞ¼z
z/C01ðÞ z/C00:5ðÞ2(iv)GzðÞ¼2z
z/C01ðÞ z2/C0zþ1ðÞ
Find y(t) for t/C210 when the input is a unit-step function.
H-9. A linear time-invariant discrete-data system has an output that is described by the time
sequence
yk TðÞ ¼ 1/C0e/C02kTk¼0;1;2;...
when the system is subject to an input sequence described by r(kT)¼1 for all/C210. Find the transfer
function G(z)¼Y(z)=R(s).
H-10. Find the transfer functions Y(z)=R(z) of the discrete-data systems shown in Fig. HP-10. The
sampling period is 0.5 second.Problems 3H-73
Appendix-H_1 05/14/2009 74
r(t) r*(t) y(t)
(a)
r(t) r*(t) y(t) h(t)
T
(d)1
s(s + 2)
5
s(s + 2)ZOHr(t) r*(t) y(t)
(b)10 1
s  + 1 s  + 2
r(t) r*(t) y(t)
T
(c)10
s  + 2
e(t) r(t) e*(t) y(t)
T
(e) 5
s (s  + 2)ZOH
+
–
e(t) r(t) e*(t)
(f)ZOH+
–1
s  + 1
5
s (s + 1) (s + 2)T
T
TT
Figure HP-10
H-11. It is well known that the transfer function of an analog integrator is
GsðÞ¼YsðÞ
XsðÞ¼1
s
where X(s)a n d Y(s) are the Laplace transforms of the inp ut and the output of the integrator,
respectively. There are many ways of implementing integration digitally. In a basic computer
course, the rectangular integration is descr ibed by the schemes shown in Fig. HP-10. The
continuous signal x(t) is approximated by a staircase signal; Tis the sampling period. The
integral of x(t), which is the area under x(t), is approximated by the a rea under the rectangular
approximation signal.H-74"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 75
(a)Lety(kT) denote the digital approximation of the integral of x(t) from t¼0t ot¼kT. Then y(kT)
can be written as
zijj>1 (1)
where y[(k/C01)T] denotes the area under x(t) from t¼0t ot¼(k/C01)T. Take the z-transform on both
sides of Eq. (H-1) and show that the transfer function of the digital integrator is
GzðÞ¼YzðÞ
XzðÞ¼Tz
z/C01
(b)The rectangular integration described in Fig. HP-11(a) can be interpreted as a sample-and-hold
operation, as shown in Fig. HP-11(b). The signal x(t) is ﬁrst sent through an ideal sampler with
sampling period T. The output of the sampler is the sequence x(0),x(T),...,x(kT),.... These
numbers are then sent through a ‘‘backward’’ hold device to give the rectangle of height x(kT) during
the time interval from ( k/C01)TtokT. Verify the result obtained in part (a) for G(z) using the
‘‘backward’’ sample-and-hold interpretation.
x(T)x(t)
x(2T)
2T 3T 4Tk Tx(0)
x(3T)
x(4T)x(kT)x(k+1)T
(k + 1)T (k – 1)T 0 Tt
(a)
x(T)x(t)
x(2T)
2T 3T 4Tk Tx(0)
x(3T)x(kT)
x(k+1)T
(k + 1)T (k – 1)T 0 Tt
(c)(b)1
s=y(t) x*(t) x(t)BACKWARD 
RECTANGULAR 
HOLD T
Ideal 
Sampler
Figure HP-11
(c)As an alternative, we can use a ‘‘forward’’ rectangular hold, as shown in Fig. HP-11(c). Find the
transfer function G(z) for such a rectangular integrator.
H-12. The block diagram of a sampled-data system is shown in Fig. HP-12. The state equations of
the controlled process are
dx1tðÞ
dt¼x2tðÞdx2tðÞ
dt¼/C02x1tðÞ/C0 3x2tðÞþ htðÞProblems 3H-75
Appendix-H_1 05/14/2009 76
TT
ZOHu*(t) h(t)
y(t)y*(t)
u(t)
x = Ax + Bh
Figure HP-12
where h(t) is the output of the sample-and-hold; that is, u(t) is constant during the sampling
period T.
(a)Find the vector-matrix discrete state equations in the form of
xkþ1ðÞ T½/C138 ¼ fTðÞxkTðÞ þ uTðÞuk TðÞ
(b)Find x(NT) as functions of x(0) and u(kT) for k¼0, 1, 2, . . . N.
H-13. Repeat Problem H-12 for the linear sampled-data system with the following state equations.
dx1tðÞ
dt¼x1tðÞdx2tðÞ
dt¼utðÞ
The sampling period is 0.001 second.
H-14.
(a)Find the transfer function X(z)=U(z) for the system described in Problem H-12.
(b)Find the characteristic equation of the system described in Problem H-12.
H-15.
(a)Find the transfer function X(z)=U(z) for the system described in Problem H-13.
(b)Find the characteristic equation and its roots of the system described in Problem H-13.
H-16. Draw a state diagram for the digital control system represented by the following dynamic
equations:
xkþ1ðÞ ¼ AxkðÞþ BukðÞ ykðÞ¼ x1kðÞ
A¼01/C0 1
01 2
53/C0 12
435 B¼0
012
435
Find the characteristic equation of the system.
H-17. The state diagram of a digital control system is shown in Fig. HP-17. Write the dynamic
equations.
r(k) y(k)1 z–121
z–1z–1
–0.1
–0.2
–0.11
Figure HP-17
Find the transfer function Y(z)=R(z).H-76"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 77
H-18. The block diagram of a sampled-data system is shown in Fig. HP-18. Write the discrete state
equations of the system. Draw a state diagram for the system.
ZOH
TG(s)y(t) e*(t)
T = 1 sece(t) r(t)
+–
G(s) =  1
s + 1
Figure HP-18
H-19. Apply the w-transform to the following characteristic equations of discrete-data control
systems, and determine the conditions of stability (asymptotically stable, marginally stable, or
unstable) using the Routh-Hurwitz criterion.
(a)z2þ1:5z/C01¼0
(b)z3þz2þ3zþ0:2¼0
(c)z3/C01:2z2/C02zþ3¼0
(d)z3/C0z2/C02zþ0:5¼0
Check the answers by solving for the roots of the equations using a root-finding computer program.
H-20. A digital control system is described by the state equation
xkþ1ðÞ ¼ 0:368/C00:632KðÞ xkðÞþ Kr kðÞ
where r(k) is the input, and x(k) is the state variable. Determine the values of Kfor the system to be
asymptotically stable.
H-21. The characteristic equation of a linear digital control system is
z3þz2þ1:5Kz/C0Kþ0:5ðÞ ¼ 0
Determine the values of Kfor the system to be asymptotically stable.
H-22. The block diagram of a discrete-data control system is shown in Fig. HP-22.
TZOHy(t) e*(t)e(t) r(t)
+– K
s(s + 1.5)
Figure HP-22
(a)ForT¼0.1 second, ﬁnd the values of Kso that the system is asymptotically stable at the sampling
instants.
(b)Repeat part (a) when the sampling period is 0.5 second.
(c)Repeat part (a) when the sampling period is 1.0 second.
H-23. Use a root-ﬁnding computer program to ﬁnd t he roots of the following characteristic
equations of linear discrete-dat a control systems, and determine the stability condition of the
systems.
(a)z3þ2z2þ1:2zþ0:5¼0
(b)z3þz2þz/C00:5¼0Problems 3H-77
Appendix-H_1 05/14/2009 78
(c)0:5z3þz2þ1:5zþ0:5¼0
(d)z4þ0:5z3þ0:25z2þ0:1z/C00:25¼0
H-24. The block diagram of a sampled-data control system is shown in Fig. HP-24.
R(s) E(s) E*(s) Y(s) H(s)
+–5
s(s + 2)  ZOH
T
Figure HP-24
(a)Derive the forward-path and the closed-loop transfer functions of the system in z-transforms. The
sampling period is 0.1 second.
(b)Compute the unit-step response y(kT) for k¼0 to 100.
(c)Repeat parts (a) and (b) for T¼0.05 second.
H-25. The block diagram of a sampled-data control system is shown in Fig. HP-25.
R(s) E(s) Y(s) U(s) U*(s)
+–+–ZOH
T10
Kt1
s1
s
Figure HP-25
(a)Find the error constants K/C3
p,K/C3
v, and K/C3
a.
(b)Derive the transfer functions Y(z)=E(z) and Y(z)=R(z).
(c)ForT¼0.1 second, ﬁnd the critical value of Kfor system stability.
(d)Compute the unit-step response y(kT) for k¼0 to 50 for T¼0.1 second and Kt¼5.
(e)Repeat part (d) for T¼0.1 second and Kt¼1.
H-26. The forward-path dc-motor control system described in Problem 10-43 is now incorporated
in a digital control system, as shown in Fig. HP-26(a). The microprocessor takes the information from
the encoder and computes the velocity information. This generates the sequence of numbers,
v(kT) k¼0, 1, 2, . . . . The microprocessor then generates the error signal e(kT)¼r(kT)/C0
v(kT). The digital control is modeled by the block diagram shown in Fig. HP-26(b). Use the
parameter values given in Problem 10-43.
(a)Find the transfer function V(z)=E(z) with the sampling period T¼0.1 second.
(b)Find the closed-loop transfer function V(z)=R(z). Find the characteristic equation and its
roots. Locate these roots in the z-plane. Show that the closed-loop system is unstable when T¼0.1
second.
(c)Repeat parts (a) and (b) for T¼0.01 and 0.001 second. Use any computer simulation
program.
(d)Find the error constants K/C3
p,K/C3
v, and K/C3
a. Find the steady-state error e(kT)a sk!1 when the
input r(t) is a unit-step function, a unit-ramp function, and a parabolic function t2us(t)=2.H-78"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 79
R(s) E(s) E*(s)
+–ZOH Gp(s)
TT
Amplifier-motor
damper
(b)(a)r(t) e(kT)
MICROPROCESSOR D/A
ENCODERAMPLIFIER
KM++
– –ea ebRa
ROTORDamper
Figure HP-26
H-27. The block diagram of a sampled-data control system is shown in Fig. HP-27.
+–R(s) E(s) E*(s) Y(s)
TZOH G(s)
Figure HP-27
(a)Construct the root loci in the z-plane for the system for K/C210, without the zero-order hold, when
T¼0.5 second, and then with T¼0.1 second. Find the marginal values of Kfor stability.
GsðÞ¼K
ssþ5ðÞ
(b)Repeat part (a) when the system has a zero-order-hold, as shown in Fig. HP-27.
H-28. The system shown in Fig. HP-27 has the following transfer function:
GsðÞ¼Ke/C00:1s
ssþ1ðÞ sþ2ðÞ
Construct the root loci in the z-plane for K/C210, with T¼0.1 second.
H-29. The characteristic equations of linear discrete-data control systems are given in the following
equations. Construct the root loci for K/C210. Determine the marginal value of Kfor stability.Problems 3H-79
Appendix-H_1 05/14/2009 80
(a)z3þKz2þ1:5Kz/C0Kþ1ðÞ ¼ 0
(b)z2þ0:15K/C01:5ðÞ zþ1¼0
(c)z2þ0:1K/C01ðÞ zþ0:5¼0
(d)z2þ0:4þ0:14KðÞ zþ0:5þ0:5KðÞ ¼ 0
(e)z/C01ðÞ z2/C0zþ0:4/C0/C1
þ4/C210/C05Kzþ1ðÞ zþ0:7ðÞ ¼ 0
H-30. The forward-path transfer function of a unity-feedback discrete-data control system with
sample-and-hold is
GhoGzðÞ¼0:0952 z
z/C01ðÞ z/C00:905ðÞ
The sampling period is T¼0.1 second.
(a)Plot the plot of GhoG(z) and determine the stability of the closed-loop system.
(b)Apply the w-transformation of Eq. (H-226) to GhoG(z) and plot the Bode plot of GhoG(w).
Find the gain and phase margins of the system.
H-31. Consider that the liquid-level control system described in Problem 10-50 is now subject to
sample-and-hold operation. The forward-path transfer function of the system is
GhoGzðÞ¼1/C0e/C0Ts
s16:67N
ssþ1ðÞ sþ12:5ðÞ/C18/C19
The sampling period is 0.05 second. The parameter Nrepresents the number of inlet valves. Construct
the Bode plot of GhoG(w) using the w-transformation of Eq. (H-226), and determine the limiting
value of N(integer) for the closed-loop system to be stable.
H-32. Find the digital equivalents using the following integration rules for the controllers given.
(a) Backward-rectangular integration rule, (b) forward-rectangular integration rule, and (c) trape-
zoidal-integration rule. Use the backward-difference rule for derivatives.
(i)GcsðÞ¼ 2þ200
s(ii)GcsðÞ¼ 10þ0:1s (iii)GcsðÞ¼ 1þ0:2sþ5
s
H-33. A continuous-data controller with sample-and-hold units is shown in Fig. HP-33. The
sampling period is 0.1 second. Find the transfer function of the equivalent digital controller. Draw a
digital-program implementation diagram for the digital controller. Carry out the analysis for the
following continuous-data controllers.
ZOH Gc(s)y(t) h(t) r*(t) r(t)y*(t)S2
S1 T
T
Figure HP-33
(a)GcsðÞ¼10
sþ12(b)GcsðÞ¼10sþ1:5ðÞ
sþ10ðÞ
(c)GcsðÞ¼s
sþ1:55(d)GcsðÞ¼1þ0:4s
1þ0:01s
H-34. Determine which of the following digital transfer functions are physically realizable.
(a)GczðÞ¼10 1þ0:2z/C01þ0:5z/C02/C0/C1
z/C01þz/C02þ1:5z/C03(b)GczðÞ¼1:5z/C01/C0z/C02
1þz/C01þ2z/C02
(c)GczðÞ¼zþ1:5
z3þz2þzþ1(d)GczðÞ¼ z/C01þ0:5z/C03
(e)GczðÞ¼ 0:1zþ1þz/C01(f)GczðÞ¼z/C01þ2z/C02þ0:5z/C03
z/C01þz/C02H-80"Appendix H. Discrete-Data Control Systems
Appendix-H_1 05/14/2009 81
H-35. The transfer function of the process of a control system is
GpsðÞ¼4
s2
The block diagram of the system with a PD controller and sample-and-hold is shown in Fig. HP-35.
Find the transfer function of the digital PD controller using the following equation.
GczðÞ¼KPþKD
T/C18/C19
z/C0KD
T
z
Gc(s)
Gc(z)ZOH4
s2
T Tr(t) e(t) y(t)
–+
Figure HP-35
Select a sampling period Tso that the maximum overshoot of y(kT) will be less than 1%.
H-36. Fig. HP-35 shows the block diagram of the control system described in Problem H-35 with a
digital PD controller. The sampling period is 0.01 second. Consider that the digital PD controller has
the transfer function
GczðÞ¼ KPþKPz/C01ðÞ
Tz
(a)Find the values of KPandKDso that two of the three roots of the characteristic equation are at 0.5
and 0.5. Find the third root. Plot the output response y(kT) for k¼0 ,1 ,2 ,....
(b)SetKP¼1. Find the value of KDso that the maximum overshoot of y(kT) is a minimum.
H-37. For the inventory-control system described in Problem H-36, design a phase-lead controller
using the w-transformation so that the phase-margin of the system is at least 60/C14. Can you design a
phase-lag controller in the w-domain? If not, explain why not.
H-38. The process transfer function of the second-order aircraft attitude control system described in
Chapter 9 is
GpsðÞ¼4500 K
ssþ361:2ðÞ
Consider that the system is to be compensated by a series digital controller Gc(z) through a sample-
and-hold.
(a)Find the value of Kso that the discrete ramp-error constant K/C3
vis 100.
(b)With the value of Kfound in part (a), plot the unit-step response of the output y/C3(t) and ﬁnd
maximum overshoot.
(c)Design the digital controller so that the output is a deadbeat response to a step input. Plot the unit-
step response.
H-39. The sun-seeker system described in Example H-2-5 is considered to be controlled by a series
digital controller with the transfer function Gc(z). The sampling period is 0.01 second. Design the
controller so that the output of the system is a deadbeat response to a unit-step input. Plot the unit-step
response of the designed system.
H-40. Design the state-feedback control for the sun-seeker system in Example H-2-5 so that the
characteristic equation roots are at z¼0.5, 0.5.Problems 3H-81
Appendix-H_1 05/14/2009 82
H-41. Consider the digital control system
xkþ1ðÞ T½/C138 ¼ AxkTðÞ þ Buk TðÞ
where
A¼01
/C01/C01/C20/C21
B¼0
1/C20/C21
The state-feedback control is described by u(kT)¼/C0Kx(kT), where K¼[k1k2]. Find the values of
k1andk2so that the roots of the characteristic equation of the closed-loop system are at 0.5 and 0.7.H-82"Appendix H. Discrete-Data Control Systems

Modern Control 
Engineering
Fifth Edition
Katsuhiko Ogata
Prentice Hall
Boston Columbus Indianapolis New York San Francisco Upper Saddle River
Amsterdam Cape Town Dubai London Madrid Milan Munich Paris Montreal Toronto
Delhi Mexico City Sao Paulo Sydney Hong Kong Seoul Singapore Taipei Tokyo 
VP/Editorial Director, Engineering/Computer Science: Marcia J. Horton
Assistant/Supervisor: Dolores Mars
Senior Editor: Andrew Gilfillan
Associate Editor: Alice Dworkin
Editorial Assistant: William Opaluch
Director of Marketing: Margaret Waples
Senior Marketing Manager: Tim Galligan 
Marketing Assistant: Mack Patterson
Senior Managing Editor: Scott Disanno
Art Editor: Greg Dulles 
Senior Operations Supervisor: Alan Fischer
Operations Specialist: Lisa McDowell
Art Director: Kenny Beck
Cover Designer: Carole Anson
Media Editor: Daniel Sandin
Credits and acknowledgments borrowed from other sources and reproduced, with permission, in this
textbook appear on appropriate page within text.
MATLAB is a registered trademark of The Mathworks, Inc., 3 Apple Hill Drive, Natick MA 01760-2098.
Copyright © 2010, 2002, 1997, 1990, 1970 Pearson Education, Inc., publishing as Prentice Hall, One Lake
Street, Upper Saddle River, New Jersey 07458. All rights reserved. Manufactured in the United States of
America. This publication is protected by Copyright, and permission should be obtained from the publisher
prior to any prohibited reproduction, storage in a retrieval system, or transmission in any form or by any
means, electronic, mechanical, photocopying, recording, or likewise. To obtain permission(s) to use material
from this work, please submit a written request to Pearson Education, Inc., Permissions Department, One
Lake Street, Upper Saddle River, New Jersey 07458.
Many of the designations by manufacturers and seller to distinguish their products are claimed as
trademarks. Where those designations appear in this book, and the publisher was aware of a trademark
claim, the designations have been printed in initial caps or all caps.
Library of Congress Cataloging-in-Publication Data on File
10  9  8  7  6  5  4  3  2  1
ISBN 10: 0-13-615673-8
ISBN 13: 978-0-13-615673-4
Openmirrors.com
C
iiiContents
Preface ix
Chapter 1 Introduction to Control Systems 1
1–1 Introduction 1
1–2 Examples of Control Systems 41–3 Closed-Loop Control Versus Open-Loop Control 71–4 Design and Compensation of Control Systems 91–5 Outline of the Book 10
Chapter 2 Mathematical Modeling of Control Systems 13
2–1 Introduction 13
2–2 Transfer Function and Impulse-Response Function 152–3 Automatic Control Systems 172–4 Modeling in State Space 292–5 State-Space Representation of Scalar Differential 
Equation Systems 35
2–6 Transformation of Mathematical Models with MATLAB 39
2–7 Linearization of Nonlinear Mathematical Models 43
Example Problems and Solutions 46
Problems 60
Chapter 3 Mathematical Modeling of Mechanical Systems 
and Electrical Systems 63
3–1 Introduction 63
3–2 Mathematical Modeling of Mechanical Systems 633–3 Mathematical Modeling of Electrical Systems 72
Example Problems and Solutions 86Problems 97
Chapter 4 Mathematical Modeling of Fluid Systems 
and Thermal Systems 100
4–1 Introduction 100
4–2 Liquid-Level Systems 1014–3 Pneumatic Systems 1064–4 Hydraulic Systems 1234–5 Thermal Systems 136
Example Problems and Solutions 140
Problems 152
Chapter 5 Transient and Steady-State Response Analyses 159
5–1 Introduction 159
5–2 First-Order Systems 1615–3 Second-Order Systems 1645–4 Higher-Order Systems 1795–5 Transient-Response Analysis with MATLAB 1835–6 Routh’s Stability Criterion 2125–7 Effects of Integral and Derivative Control Actions 
on System Performance 218
5–8 Steady-State Errors in Unity-Feedback Control Systems 225
Example Problems and Solutions 231
Problems 263
iv Contents
Chapter 6 Control Systems Analysis and Design 
by the Root-Locus Method 269
6–1 Introduction 269
6–2 Root-Locus Plots 270
6–3 Plotting Root Loci with MATLAB 2906–4 Root-Locus Plots of Positive Feedback Systems 3036–5 Root-Locus Approach to Control-Systems Design 3086–6 Lead Compensation 3116–7 Lag Compensation 3216–8 Lag–Lead Compensation 3306–9 Parallel Compensation 342 
Example Problems and Solutions 347
Problems 394
Chapter 7 Control Systems Analysis and Design by the 
Frequency-Response Method 398
7–1 Introduction 398
7–2 Bode Diagrams 4037–3 Polar Plots 4277–4 Log-Magnitude-versus-Phase Plots 4437–5 Nyquist Stability Criterion 4457–6 Stability Analysis 4547–7 Relative Stability Analysis 4627–8 Closed-Loop Frequency Response of Unity-Feedback 
Systems 477
7–9 Experimental Determination of Transfer Functions 4867–10 Control Systems Design by Frequency-Response Approach 4917–11 Lead Compensation 4937–12 Lag Compensation 5027–13 Lag–Lead Compensation 511
Example Problems and Solutions 521
Problems 561
Chapter 8 PID Controllers and Modified PID Controllers 567
8–1 Introduction 567
8–2 Ziegler–Nichols Rules for Tuning PID Controllers 568
Contents v
8–3 Design of PID Controllers with Frequency-Response 
Approach 577
8–4 Design of PID Controllers with Computational Optimization 
Approach 583
8–5 Modifications of PID Control Schemes 5908–6 Two-Degrees-of-Freedom Control 5928–7 Zero-Placement Approach to Improve Response 
Characteristics 595
Example Problems and Solutions 614
Problems 641
Chapter 9 Control Systems Analysis in State Space 648
9–1 Introduction 648
9–2 State-Space Representations of Transfer-Function 
Systems 649
9–3 Transformation of System Models with MATLAB 6569–4 Solving the Time-Invariant State Equation 6609–5 Some Useful Results in Vector-Matrix Analysis 6689–6 Controllability 6759–7 Observability 682 
Example Problems and Solutions 688
Problems 720
Chapter 10 Control Systems Design in State Space 722
10–1 Introduction 722
10–2 Pole Placement 72310–3 Solving Pole-Placement Problems with MATLAB 73510–4 Design of Servo Systems 73910–5 State Observers 75110–6 Design of Regulator Systems with Observers 77810–7 Design of Control Systems with Observers 78610–8 Quadratic Optimal Regulator Systems 79310–9 Robust Control Systems 806
Example Problems and Solutions 817Problems 855
vi Contents
Appendix A Laplace Transform Tables 859
Appendix B Partial-Fraction Expansion 867Appendix C Vector-Matrix Algebra 874References 882Index 886
Contents vii
This page intentionally left blank
P
ixPreface
This book introduces important concepts in the analysis and design of control systems.
Readers will find it to be a clear and understandable textbook for control system coursesat colleges and universities. It is written for senior electrical, mechanical, aerospace, orchemical engineering students. The reader is expected to have fulfilled the followingprerequisites: introductory courses on differential equations, Laplace transforms, vector-matrix analysis, circuit analysis, mechanics, and introductory thermodynamics.
The main revisions made in this edition are as follows:
• The use of MATLAB for obtaining responses of control systems to various inputs
has been increased.
• The usefulness of the computational optimization approach with MATLAB has been
demonstrated.
• New example problems have been added throughout the book.• Materials in the previous edition that are of secondary importance have been deleted
in order to provide space for more important subjects. Signal flow graphs weredropped from the book. A chapter on Laplace transform was deleted. Instead,Laplace transform tables, and partial-fraction expansion with MATLAB are pre-sented in Appendix A and Appendix B, respectively.
• A short summary of vector-matrix analysis is presented in Appendix C; this will help
the reader to find the inverses of n x n matrices that may be involved in the analy-sis and design of control systems.
This edition of Modern Control Engineering is organized into ten chapters.The outline of
this book is as follows: Chapter 1 presents an introduction to control systems. Chapter 2
deals with mathematical modeling of control systems. A linearization technique for non-
linear mathematical models is presented in this chapter. Chapter 3 derives mathematicalmodels of mechanical systems and electrical systems. Chapter 4 discusses mathematicalmodeling of fluid systems (such as liquid-level systems, pneumatic systems, and hydraulicsystems) and thermal systems.
Chapter 5 treats transient response and steady-state analyses of control systems.
MATLAB is used extensively for obtaining transient response curves. Routh’s stabilitycriterion is presented for stability analysis of control systems. Hurwitz stability criterionis also presented.
Chapter 6 discusses the root-locus analysis and design of control systems, including
positive feedback systems and conditionally stable systems Plotting root loci with MAT-LAB is discussed in detail. Design of lead, lag, and lag-lead compensators with the root-locus method is included.
Chapter 7 treats the frequency-response analysis and design of control systems.The
Nyquist stability criterion is presented in an easily understandable manner.The Bode di-agram approach to the design of lead, lag, and lag-lead compensators is discussed.
Chapter 8 deals with basic and modified PID controllers. Computational approaches
for obtaining optimal parameter values for PID controllers are discussed in detail, par-ticularly with respect to satisfying requirements for step-response characteristics.
Chapter 9 treats basic analyses of control systems in state space. Concepts of con-
trollability and observability are discussed in detail.
Chapter 10 deals with control systems design in state space.The discussions include
pole placement, state observers, and quadratic optimal control. An introductory dis-cussion of robust control systems is presented at the end of Chapter 10.
The book has been arranged toward facilitating the student’s gradual understanding 
of control theory. Highly mathematical arguments are carefully avoided in the presen-tation of the materials. Statement proofs are provided whenever they contribute to theunderstanding of the subject matter presented.
Special effort has been made to provide example problems at strategic points so that
the reader will have a clear understanding of the subject matter discussed. In addition,a number of solved problems (A-problems) are provided at the end of each chapter,except Chapter 1. The reader is encouraged to study all such solved problems carefully;this will allow the reader to obtain a deeper understanding of the topics discussed. Inaddition, many problems (without solutions) are provided at the end of each chapter,except Chapter 1. The unsolved problems (B-problems) may be used as homework orquiz problems.
If this book is used as a text for a semester course (with 56 or so lecture hours), a good
portion of the material may be covered by skipping certain subjects. Because of theabundance of example problems and solved problems (A-problems) that might answermany possible questions that the reader might have, this book can also serve as a self-study book for practicing engineers who wish to study basic control theories.
I would like to thank the following reviewers for this edition of the book: Mark Camp-
bell, Cornell University; Henry Sodano, Arizona State University; and Atul G. Kelkar,Iowa State University. Finally, I wish to offer my deep appreciation to Ms.Alice Dworkin,Associate Editor, Mr. Scott Disanno, Senior Managing Editor, and all the people in-volved in this publishing project, for the speedy yet superb production of this book.
Katsuhiko Ogata
x Preface
1Introduction 
to Control Systems
1–1 INTRODUCTION
Control theories commonly used today are classical control theory (also called con-
ventional control theory), modern control theory, and robust control theory. This bookpresents comprehensive treatments of the analysis and design of control systems basedon the classical control theory and modern control theory.A brief introduction of robustcontrol theory is included in Chapter 10.
Automatic control is essential in any field of engineering and science. Automatic
control is an important and integral part of space-vehicle systems, robotic systems, mod-ern manufacturing systems, and any industrial operations involving control of temper-ature, pressure, humidity, flow, etc. It is desirable that most engineers and scientists arefamiliar with theory and practice of automatic control.
This book is intended to be a text book on control systems at the senior level at a col-
lege or university. All necessary background materials are included in the book. Math-ematical background materials related to Laplace transforms and vector-matrix analysisare presented separately in appendixes.
Brief Review of Historical Developments of Control Theories and Practices.
The first significant work in automatic control was James Watt’s centrifugal gover-nor for the speed control of a steam engine in the eighteenth century. Othersignificant works in the early stages of development of control theory were due to1
2 Chapter 1 / Introduction to Control SystemsMinorsky, Hazen, and Nyquist, among many others. In 1922, Minorsky worked on
automatic controllers for steering ships and showed how stability could be deter-mined from the differential equations describing the system. In 1932, Nyquistdeveloped a relatively simple procedure for determining the stability of closed-loopsystems on the basis of open-loop response to steady-state sinusoidal inputs. In 1934,Hazen, who introduced the term servomechanisms for position control systems,
discussed the design of relay servomechanisms capable of closely following a chang-ing input.
During the decade of the 1940s, frequency-response methods (especially the Bode
diagram methods due to Bode) made it possible for engineers to design linear closed-loop control systems that satisfied performance requirements. Many industrial controlsystems in 1940s and 1950s used PID controllers to control pressure, temperature, etc.In the early 1940s Ziegler and Nichols suggested rules for tuning PID controllers, calledZiegler–Nichols tuning rules. From the end of the 1940s to the 1950s, the root-locusmethod due to Evans was fully developed.
The frequency-response and root-locus methods, which are the core of classical con-
trol theory, lead to systems that are stable and satisfy a set of more or less arbitrary per-formance requirements. Such systems are, in general, acceptable but not optimal in anymeaningful sense. Since the late 1950s, the emphasis in control design problems has beenshifted from the design of one of many systems that work to the design of one optimalsystem in some meaningful sense.
As modern plants with many inputs and outputs become more and more complex,
the description of a modern control system requires a large number of equations. Clas-sical control theory, which deals only with single-input, single-output systems, becomespowerless for multiple-input, multiple-output systems. Since about 1960, because theavailability of digital computers made possible time-domain analysis of complex sys-tems, modern control theory, based on time-domain analysis and synthesis using statevariables, has been developed to cope with the increased complexity of modern plantsand the stringent requirements on accuracy, weight, and cost in military, space, and in-dustrial applications.
During the years from 1960 to 1980, optimal control of both deterministic and sto-
chastic systems, as well as adaptive and learning control of complex systems, were fullyinvestigated. From 1980s to 1990s, developments in modern control theory were cen-tered around robust control and associated topics.
Modern control theory is based on time-domain analysis of differential equation
systems. Modern control theory made the design of control systems simpler becausethe theory is based on a model of an actual control system. However, the system’sstability is sensitive to the error between the actual system and its model. Thismeans that when the designed controller based on a model is applied to the actualsystem, the system may not be stable. To avoid this situation, we design the controlsystem by first setting up the range of possible errors and then designing the con-troller in such a way that, if the error of the system stays within the assumedrange, the designed control system will stay stable. The design method based on thisprinciple is called robust control theory.This theory incorporates both the frequency-response approach and the time-domain approach.The theory is mathematically verycomplex.
Section 1–1 / Introduction 3Because this theory requires mathematical background at the graduate level, inclu-
sion of robust control theory in this book is limited to introductory aspects only. Thereader interested in details of robust control theory should take a graduate-level controlcourse at an established college or university.
Definitions. Before we can discuss control systems, some basic terminologies must
be defined.
Controlled Variable and Control Signal or Manipulated Variable. The controlled
variable is the quantity or condition that is measured and controlled.The control signal
ormanipulated variable is the quantity or condition that is varied by the controller so
as to affect the value of the controlled variable. Normally, the controlled variable is theoutput of the system. Control means measuring the value of the controlled variable of
the system and applying the control signal to the system to correct or limit deviation ofthe measured value from a desired value.
In studying control engineering, we need to define additional terms that are neces-
sary to describe control systems.
Plants. A plant may be a piece of equipment, perhaps just a set of machine parts
functioning together, the purpose of which is to perform a particular operation. In thisbook, we shall call any physical object to be controlled (such as a mechanical device, aheating furnace, a chemical reactor, or a spacecraft) a plant.
Processes. The Merriam–Webster Dictionary defines a process to be a natural, pro-
gressively continuing operation or development marked by a series of gradual changesthat succeed one another in a relatively fixed way and lead toward a particular result orend; or an artificial or voluntary, progressively continuing operation that consists of a se-ries of controlled actions or movements systematically directed toward a particular re-sult or end. In this book we shall call any operation to be controlled a process. Examples
are chemical, economic, and biological processes.
Systems. A system is a combination of components that act together and perform
a certain objective. A system need not be physical. The concept of the system can beapplied to abstract, dynamic phenomena such as those encountered in economics. Theword system should, therefore, be interpreted to imply physical, biological, economic, andthe like, systems.
Disturbances. A disturbance is a signal that tends to adversely affect the value 
of the output of a system. If a disturbance is generated within the system, it is calledinternal, while an external disturbance is generated outside the system and is 
an input.
Feedback Control. Feedback control refers to an operation that, in the presence
of disturbances, tends to reduce the difference between the output of a system and somereference input and does so on the basis of this difference. Here only unpredictable dis-turbances are so specified, since predictable or known disturbances can always be com-pensated for within the system.
4
Chapter 1 / Introduction to Control Systems
1–2 EXAMPLES OF CONTROL SYSTEMS
In this section we shall present a few examples of control systems.
Speed Control System. The basic principle of a Watt’s speed governor for an en-
gine is illustrated in the schematic diagram of Figure 1–1. The amount of fuel admitted
to the engine is adjusted according to the difference between the desired and the actual
engine speeds.
The sequence of actions may be stated as follows: The speed governor is ad-
justed such that, at the desired speed, no pressured oil will flow into either side of
the power cylinder. If the actual speed drops below the desired value due to
disturbance, then the decrease in the centrifugal force of the speed governor causes
the control valve to move downward, supplying more fuel, and the speed of the
engine increases until the desired value is reached. On the other hand, if the speed
of the engine increases above the desired value, then the increase in the centrifu-
gal force of the governor causes the control valve to move upward. This decreases 
the supply of fuel, and the speed of the engine decreases until the desired value is
reached.
In this speed control system, the plant (controlled system) is the engine and the
controlled variable is the speed of the engine. The difference between the desired
speed and the actual speed is the error signal.The control signal (the amount of fuel)
to be applied to the plant (engine) is the actuating signal. The external input to dis-
turb the controlled variable is the disturbance. An unexpected change in the load is
a disturbance.
Temperature Control System. Figure 1–2 shows a schematic diagram of tem-
perature control of an electric furnace.The temperature in the electric furnace is meas-
ured by a thermometer, which is an analog device.The analog temperature is converted
Oil under
pressurePower
cylinder
Close
OpenPilot
valve
Control
valveFuelEngine Load
Figure 1–1
Speed control
system.
Openmirrors.com
Section 1–2 / Examples of Control Systems 5Thermometer
HeaterInterface
Controller
Interface AmplifierA/D
converter
Programmed
inputElectric
furnace
RelayFigure 1–2
Temperature controlsystem.
to a digital temperature by an A/D converter. The digital temperature is fed to a con-
troller through an interface.This digital temperature is compared with the programmedinput temperature, and if there is any discrepancy (error), the controller sends out a sig-nal to the heater, through an interface, amplifier, and relay, to bring the furnace tem-perature to a desired value.
Business Systems. A business system may consist of many groups. Each task
assigned to a group will represent a dynamic element of the system. Feedback methodsof reporting the accomplishments of each group must be established in such a system forproper operation. The cross-coupling between functional groups must be made a mini-mum in order to reduce undesirable delay times in the system. The smaller this cross-coupling, the smoother the flow of work signals and materials will be.
A business system is a closed-loop system.A good design will reduce the manageri-
al control required. Note that disturbances in this system are the lack of personnel or ma-terials, interruption of communication, human errors, and the like.
The establishment of a well-founded estimating system based on statistics is manda-
tory to proper management. It is a well-known fact that the performance of such a systemcan be improved by the use of lead time, or anticipation.
To apply control theory to improve the performance of such a system, we must rep-
resent the dynamic characteristic of the component groups of the system by a relative-ly simple set of equations.
Although it is certainly a difficult problem to derive mathematical representations
of the component groups, the application of optimization techniques to business sys-tems significantly improves the performance of the business system.
Consider, as an example, an engineering organizational system that is composed of
major groups such as management, research and development, preliminary design, ex-periments, product design and drafting, fabrication and assembling, and tesing. Thesegroups are interconnected to make up the whole operation.
Such a system may be analyzed by reducing it to the most elementary set of com-
ponents necessary that can provide the analytical detail required and by representing thedynamic characteristics of each component by a set of simple equations. (The dynamicperformance of such a system may be determined from the relation between progres-sive accomplishment and time.)
6
Chapter 1 / Introduction to Control Systems
Required
product
ManagementResearch
and
developmentPreliminary
designExperimentsProduct
design and
draftingFabrication
and
assemblingTestingProduct
Figure 1–3
Block diagram of an engineering organizational system.
A functional block diagram may be drawn by using blocks to represent the func-
tional activities and interconnecting signal lines to represent the information or
product output of the system operation. Figure 1–3 is a possible block diagram for
this system.
Robust Control System. The first step in the design of a control system is to
obtain a mathematical model of the plant or control object. In reality, any model of a
plant we want to control will include an error in the modeling process.That is, the actual
plant differs from the model to be used in the design of the control system.
To ensure the controller designed based on a model will work satisfactorily when
this controller is used with the actual plant, one reasonable approach is to assume
from the start that there is an uncertainty or error between the actual plant and its
mathe matical model and include such uncertainty or error in the design process of the
control system. The control system designed based on this approach is called a robust
control system.
Suppose that the actual plant we want to control is (s)and the mathematical model
of the actual plant is G(s) , that is,
(s)= actual plant model that has uncertainty ¢(s)
G(s)= nominal plant model to be used for designing the control system 
(s)andG(s) may be related by a multiplicative factor such as
or an additive factor
or in other forms.
Since the exact description of the uncertainty or error ¢(s)is unknown, we use an
estimate of ¢(s)and use this estimate, W(s) , in the design of the controller. W(s) is a
scalar transfer function such that
where is the maximum value of for and is called the H
infinity norm of W(s) .0/H11349v/H11349q /H20895W(jv)/H20895 /H20895/H20895W(s) /H20895/H20895
q
/H20895/H20895¢(s) /H20895/H20895
q
6/H20895/H20895W(s) /H20895/H20895
q
=max
0/H11349v/H11349q
 /H20895W(jv)/H20895G/H33522(s)=G(s) +¢(s)G/H33522(s)=G(s)[1 + ¢(s)]G/H33522G/H33522G/H33522
Openmirrors.com
Section 1–3 / Closed-Loop Control versus Open-Loop Control
7
Using the small gain theorem, the design procedure here boils down to the deter-
mination of the controller K(s) such that the inequality
is satisfied, where G(s) is the transfer function of the model used in the design process,
K(s) is the transfer function of the controller, and W(s) is the chosen transfer function
to approximate ¢(s). In most practical cases, we must satisfy more than one such
inequality that involves G(s) ,K(s) , and W(s) ’s. For example, to guarantee robust sta-
bility and robust performance we may require two inequalities, such as
for robust stability
for robust performance
be satisfied. (These inequalities are derived in Section 10–9.) There are many different
such inequalities that need to be satisfied in many different robust control systems.
(Robust stability means that the controller K(s) guarantees internal stability of all
systems that belong to a group of systems that include the system with the actual plant.
Robust performance means the specified performance is satisfied in all systems that be-
long to the group.) In this book all the plants of control systems we discuss are assumed
to be known precisely, except the plants we discuss in Section 10–9 where an introduc-
tory aspect of robust control theory is presented.
1–3 CLOSED-LOOP CONTROL VERSUS OPEN-LOOP CONTROL
Feedback Control Systems. A system that maintains a prescribed relationship
between the output and the reference input by comparing them and using the difference
as a means of control is called a feedback control system. An example would be a room-
temperature control system. By measuring the actual room temperature and comparing
it with the reference temperature (desired temperature), the thermostat turns the heat-
ing or cooling equipment on or off in such a way as to ensure that the room tempera-
ture remains at a comfortable level regardless of outside conditions.
Feedback control systems are not limited to engineering but can be found in various
nonengineering fields as well. The human body, for instance, is a highly advanced feed-
back control system. Both body temperature and blood pressure are kept constant by
means of physiological feedback. In fact, feedback performs a vital function: It makes
the human body relatively insensitive to external disturbances, thus enabling it to func-
tion properly in a changing environment.
ß
W
s
(s)
1+K(s)G(s)
ß
q
61
ß
W
m
(s)K(s)G(s)
1+K(s)G(s)
ß
q
61
ß
W(s)
1+K(s)G(s)
ß
q
61
Openmirrors.com
8
Chapter 1 / Introduction to Control Systems
Closed-Loop Control Systems. Feedback control systems are often referred to
asclosed-loop control systems. In practice, the terms feedback control and closed-loop
control are used interchangeably. In a closed-loop control system the actuating error
signal, which is the difference between the input signal and the feedback signal (which
may be the output signal itself or a function of the output signal and its derivatives
and/or integrals), is fed to the controller so as to reduce the error and bring the output
of the system to a desired value.The term closed-loop control always implies the use of
feedback control action in order to reduce system error.
Open-Loop Control Systems. Those systems in which the output has no effect
on the control action are called open-loop control systems. In other words, in an open-
loop control system the output is neither measured nor fed back for comparison with the
input. One practical example is a washing machine. Soaking, washing, and rinsing in the
washer operate on a time basis. The machine does not measure the output signal, that
is, the cleanliness of the clothes.
In any open-loop control system the output is not compared with the reference input.
Thus, to each reference input there corresponds a fixed operating condition; as a result,
the accuracy of the system depends on calibration. In the presence of disturbances, an
open-loop control system will not perform the desired task. Open-loop control can be
used, in practice, only if the relationship between the input and output is known and if
there are neither internal nor external disturbances. Clearly, such systems are not feed-
back control systems. Note that any control system that operates on a time basis is open
loop. For instance, traffic control by means of signals operated on a time basis is another
example of open-loop control.
Closed-Loop versus Open-Loop Control Systems. An advantage of the closed-
loop control system is the fact that the use of feedback makes the system response rela-
tively insensitive to external disturbances and internal variations in system parameters.
It is thus possible to use relatively inaccurate and inexpensive components to obtain the
accurate control of a given plant, whereas doing so is impossible in the open-loop case.
From the point of view of stability, the open-loop control system is easier to build be-
cause system stability is not a major problem. On the other hand, stability is a major
problem in the closed-loop control system, which may tend to overcorrect errors and
thereby can cause oscillations of constant or changing amplitude.
It should be emphasized that for systems in which the inputs are known ahead of
time and in which there are no disturbances it is advisable to use open-loop control.
Closed-loop control systems have advantages only when unpredictable disturbances
and/or unpredictable variations in system components are present. Note that the
output power rating partially determines the cost, weight, and size of a control system.
The number of components used in a closed-loop control system is more than that for
a corresponding open-loop control system. Thus, the closed-loop control system is
generally higher in cost and power.To decrease the required power of a system, open-
loop control may be used where applicable. A proper combination of open-loop and
closed-loop controls is usually less expensive and will give satisfactory overall system
performance.
Most analyses and designs of control systems presented in this book are concerned
with closed-loop control systems. Under certain circumstances (such as where no
disturbances exist or the output is hard to measure) open-loop control systems may be
Openmirrors.com
desired. Therefore, it is worthwhile to summarize the advantages and disadvantages of
using open-loop control systems.
The major advantages of open-loop control systems are as follows:
1.Simple construction and ease of maintenance.
2.Less expensive than a corresponding closed-loop system.
3.There is no stability problem.
4.Convenient when output is hard to measure or measuring the output precisely is
economically not feasible. (For example, in the washer system, it would be quite ex-pensive to provide a device to measure the quality of the washer’s output, clean-liness of the clothes.)
The major disadvantages of open-loop control systems are as follows:
1.Disturbances and changes in calibration cause errors, and the output may be
different from what is desired.
2.To maintain the required quality in the output, recalibration is necessary from
time to time.
1–4 DESIGN AND COMPENSATION OF CONTROL SYSTEMS
This book discusses basic aspects of the design and compensation of control systems.
Compensation is the modification of the system dynamics to satisfy the given specifi-cations.The approaches to control system design and compensation used in this bookare the root-locus approach, frequency-response approach, and the state-space ap-proach. Such control systems design and compensation will be presented in Chapters6, 7, 9 and 10. The PID-based compensational approach to control systems design isgiven in Chapter 8.
In the actual design of a control system, whether to use an electronic, pneumatic, or
hydraulic compensator is a matter that must be decided partially based on the nature ofthe controlled plant. For example, if the controlled plant involves flammable fluid, thenwe have to choose pneumatic components (both a compensator and an actuator) toavoid the possibility of sparks. If, however, no fire hazard exists, then electronic com-pensators are most commonly used. (In fact, we often transform nonelectrical signals intoelectrical signals because of the simplicity of transmission, increased accuracy, increasedreliability, ease of compensation, and the like.)
Performance Specifications. Control systems are designed to perform specific
tasks. The requirements imposed on the control system are usually spelled out as per-formance specifications. The specifications may be given in terms of transient responserequirements (such as the maximum overshoot and settling time in step response) andof steady-state requirements (such as steady-state error in following ramp input) or maybe given in frequency-response terms. The specifications of a control system must begiven before the design process begins.
For routine design problems, the performance specifications (which relate to accura-
cy, relative stability, and speed of response) may be given in terms of precise numericalvalues. In other cases they may be given partially in terms of precise numerical values and
Section 1–4 / Design and Compensation of Control Systems 9
partially in terms of qualitative statements. In the latter case the specifications may have
to be modified during the course of design, since the given specifications may never be
satisfied (because of conflicting requirements) or may lead to a very expensive system.
Generally, the performance specifications should not be more stringent than neces-
sary to perform the given task. If the accuracy at steady-state operation is of prime im-
portance in a given control system, then we should not require unnecessarily rigid
performance specifications on the transient response, since such specifications will
require expensive components. Remember that the most important part of control
system design is to state the performance specifications precisely so that they will yield
an optimal control system for the given purpose.
System Compensation. Setting the gain is the first step in adjusting the system
for satisfactory performance. In many practical cases, however, the adjustment of the
gain alone may not provide sufficient alteration of the system behavior to meet the given
specifications. As is frequently the case, increasing the gain value will improve the
steady-state behavior but will result in poor stability or even instability. It is then nec-
essary to redesign the system (by modifying the structure or by incorporating addi-
tional devices or components) to alter the overall behavior so that the system will
behave as desired. Such a redesign or addition of a suitable device is called compensa-
tion. A device inserted into the system for the purpose of satisfying the specifications
is called a compensator. The compensator compensates for deficient performance of the
original system.
Design Procedures. In the process of designing a control system, we set up a
mathematical model of the control system and adjust the parameters of a compensator.
The most time-consuming part of the work is the checking of the system performance
by analysis with each adjustment of the parameters.The designer should use MATLAB
or other available computer package to avoid much of the numerical drudgery neces-
sary for this checking.
Once a satisfactory mathematical model has been obtained, the designer must con-
struct a prototype and test the open-loop system. If absolute stability of the closed loop
is assured, the designer closes the loop and tests the performance of the resulting closed-
loop system. Because of the neglected loading effects among the components, nonlin-
earities, distributed parameters, and so on, which were not taken into consideration in
the original design work, the actual performance of the prototype system will probably
differ from the theoretical predictions. Thus the first design may not satisfy all the re-
quirements on performance. The designer must adjust system parameters and make
changes in the prototype until the system meets the specificications. In doing this, he or
she must analyze each trial, and the results of the analysis must be incorporated into
the next trial. The designer must see that the final system meets the performance apec-
ifications and, at the same time, is reliable and economical.
1–5 OUTLINE OF THE BOOK
This text is organized into 10 chapters.The outline of each chapter may be summarized
as follows:
Chapter 1 presents an introduction to this book.
10
Chapter 1 / Introduction to Control Systems
Openmirrors.com
Chapter 2 deals with mathematical modeling of control systems that are described
by linear differential equations. Specifically, transfer function expressions of differentialequation systems are derived.Also, state-space expressions of differential equation sys-tems are derived. MATLAB is used to transform mathematical models from transferfunctions to state-space equations and vice versa.This book treats linear systems in de-tail. If the mathematical model of any system is nonlinear, it needs to be linearized be-fore applying theories presented in this book. A technique to linearize nonlinearmathematical models is presented in this chapter.
Chapter 3 derives mathematical models of various mechanical and electrical sys-
tems that appear frequently in control systems.
Chapter 4 discusses various fluid systems and thermal systems, that appear in control
systems. Fluid systems here include liquid-level systems, pneumatic systems, and hydraulicsystems. Thermal systems such as temperature control systems are also discussed here.Control engineers must be familiar with all of these systems discussed in this chapter.
Chapter 5 presents transient and steady-state response analyses of control systems
defined in terms of transfer functions. MATLAB approach to obtain transient andsteady-state response analyses is presented in detail. MATLAB approach to obtainthree-dimensional plots is also presented. Stability analysis based on Routh’s stabilitycriterion is included in this chapter and the Hurwitz stability criterion is briefly discussed.
Chapter 6 treats the root-locus method of analysis and design of control systems. It
is a graphical method for determining the locations of all closed-loop poles from theknowledge of the locations of the open-loop poles and zeros of a closed-loop systemas a parameter (usually the gain) is varied from zero to infinity. This method was de-veloped by W. R. Evans around 1950. These days MATLAB can produce root-locusplots easily and quickly.This chapter presents both a manual approach and a MATLABapproach to generate root-locus plots. Details of the design of control systems using leadcompensators, lag compensators, are lag–lead compensators are presented in thischapter.
Chapter 7 presents the frequency-response method of analysis and design of control
systems. This is the oldest method of control systems analysis and design and was de-veloped during 1940–1950 by Nyquist, Bode, Nichols, Hazen, among others. This chap-ter presents details of the frequency-response approach to control systems design usinglead compensation technique, lag compensation technique, and lag–lead compensationtechnique. The frequency-response method was the most frequently used analysis anddesign method until the state-space method became popular. However, since H-infini-ty control for designing robust control systems has become popular, frequency responseis gaining popularity again.
Chapter 8 discusses PID controllers and modified ones such as multidegrees-of-
freedom PID controllers. The PID controller has three parameters; proportional gain,integral gain, and derivative gain. In industrial control systems more than half of the con-trollers used have been PID controllers. The performance of PID controllers dependson the relative magnitudes of those three parameters. Determination of the relativemagnitudes of the three parameters is called tuning of PID controllers.
Ziegler and Nichols proposed so-called “Ziegler–Nichols tuning rules” as early as
1942. Since then numerous tuning rules have been proposed.These days manufacturersof PID controllers have their own tuning rules. In this chapter we present a computeroptimization approach using MATLAB to determine the three parameters to satisfy
Section 1–5 / Outline of the Book 11
given transient response characteristics.The approach can be expanded to determine the
three parameters to satisfy any specific given characteristics.
Chapter 9 presents basic analysis of state-space equations. Concepts of controllabil-
ity and observability, most important concepts in modern control theory, due to Kalman
are discussed in full. In this chapter, solutions of state-space equations are derived in
detail.
Chapter 10 discusses state-space designs of control systems. This chapter first deals
with pole placement problems and state observers. In control engineering, it is frequently
desirable to set up a meaningful performance index and try to minimize it (or maximize
it, as the case may be). If the performance index selected has a clear physical meaning,
then this approach is quite useful to determine the optimal control variable. This chap-
ter discusses the quadratic optimal regulator problem where we use a performance index
which is an integral of a quadratic function of the state variables and the control vari-
able.The integral is performed from t=0 tot= .This chapter concludes with a brief
discussion of robust control systems.q
12
Chapter 1 / Introduction to Control Systems
Openmirrors.com
2
13Mathematical Modeling 
of Control Systems
2–1 INTRODUCTION
In studying control systems the reader must be able to model dynamic systems in math-
ematical terms and analyze their dynamic characteristics.A mathematical model of a dy-namic system is defined as a set of equations that represents the dynamics of the systemaccurately, or at least fairly well. Note that a mathematical model is not unique to agiven system.A system may be represented in many different ways and, therefore, mayhave many mathematical models, depending on one’s perspective.
The dynamics of many systems, whether they are mechanical, electrical, thermal,
economic, biological, and so on, may be described in terms of differential equations.Such differential equations may be obtained by using physical laws governing a partic-ular system—for example, Newton’s laws for mechanical systems and Kirchhoff’s lawsfor electrical systems. We must always keep in mind that deriving reasonable mathe-matical models is the most important part of the entire analysis of control systems.
Throughout this book we assume that the principle of causality applies to the systems
considered.This means that the current output of the system (the output at time t=0 )
depends on the past input (the input for t<0 ) but does not depend on the future input
(the input for t>0 ).
Mathematical Models. Mathematical models may assume many different forms.
Depending on the particular system and the particular circumstances, one mathemati-cal model may be better suited than other models. For example, in optimal control prob-lems, it is advantageous to use state-space representations. On the other hand, for the
14
Chapter 2 / Mathematical Modeling of Control Systems
transient-response or frequency-response analysis of single-input, single-output, linear,
time-invariant systems, the transfer-function representation may be more convenient
than any other. Once a mathematical model of a system is obtained, various analytical
and computer tools can be used for analysis and synthesis purposes.
Simplicity Versus Accuracy. In obtaining a mathematical model, we must make
a compromise between the simplicity of the model and the accuracy of the results of
the analysis. In deriving a reasonably simplified mathematical model, we frequently find
it necessary to ignore certain inherent physical properties of the system. In particular,
if a linear lumped-parameter mathematical model (that is, one employing ordinary dif-
ferential equations) is desired, it is always necessary to ignore certain nonlinearities and
distributed parameters that may be present in the physical system. If the effects that
these ignored properties have on the response are small, good agreement will be obtained
between the results of the analysis of a mathematical model and the results of the
experimental study of the physical system.
In general, in solving a new problem, it is desirable to build a simplified model so that
we can get a general feeling for the solution.A more complete mathematical model may
then be built and used for a more accurate analysis.
We must be well aware that a linear lumped-parameter model, which may be valid in
low-frequency operations, may not be valid at sufficiently high frequencies, since the neg-
lected property of distributed parameters may become an important factor in the dynamic
behavior of the system. For example, the mass of a spring may be neglected in low-
frequency operations, but it becomes an important property of the system at high fre-
quencies. (For the case where a mathematical model involves considerable errors, robust
control theory may be applied. Robust control theory is presented in Chapter 10.)
Linear Systems. A system is called linear if the principle of superposition
applies. The principle of superposition states that the response produced by the
simultaneous application of two different forcing functions is the sum of the two
individual responses. Hence, for the linear system, the response to several inputs can
be calculated by treating one input at a time and adding the results. It is this principle
that allows one to build up complicated solutions to the linear differential equation
from simple solutions.
In an experimental investigation of a dynamic system, if cause and effect are pro-
portional, thus implying that the principle of superposition holds, then the system can
be considered linear.
Linear Time-Invariant Systems and Linear Time-Varying Systems. A differ-
ential equation is linear if the coefficients are constants or functions only of the in-
dependent variable. Dynamic systems that are composed of linear time-invariant
lumped-parameter components may be described by linear time-invariant differen-
tial equations—that is, constant-coefficient differential equations. Such systems are
called linear time-invariant (orlinear constant-coefficient ) systems. Systems that
are represented by differential equations whose coefficients are functions of time
are called linear time-varying systems. An example of a time-varying control sys-
tem is a spacecraft control system. (The mass of a spacecraft changes due to fuel
consumption.)
Openmirrors.com
Section 2–2 / Transfer Function and Impulse-Response Function 15Outline of the Chapter. Section 2–1 has presented an introduction to the math-
ematical modeling of dynamic systems. Section 2–2 presents the transfer function andimpulse-response function. Section 2–3 introduces automatic control systems and Sec-tion 2–4 discusses concepts of modeling in state space. Section 2–5 presents state-spacerepresentation of dynamic systems. Section 2–6 discusses transformation of mathemat-ical models with MATLAB. Finally, Section 2–7 discusses linearization of nonlinearmathematical models.
2–2 TRANSFER FUNCTION AND IMPULSE-
RESPONSE FUNCTION
In control theory, functions called transfer functions are commonly used to character-
ize the input-output relationships of components or systems that can be described by lin-ear, time-invariant, differential equations. We begin by defining the transfer functionand follow with a derivation of the transfer function of a differential equation system.Then we discuss the impulse-response function.
Transfer Function. The transfer function of a linear, time-invariant, differential
equation system is defined as the ratio of the Laplace transform of the output (responsefunction) to the Laplace transform of the input (driving function) under the assumptionthat all initial conditions are zero.
Consider the linear time-invariant system defined by the following differential equation:
where yis the output of the system and xis the input. The transfer function of this sys-
tem is the ratio of the Laplace transformed output to the Laplace transformed inputwhen all initial conditions are zero, or
By using the concept of transfer function, it is possible to represent system dynam-
ics by algebraic equations in s. If the highest power of sin the denominator of the trans-
fer function is equal to n, the system is called an nth-order system .
Comments on Transfer Function. The applicability of the concept of the trans-
fer function is limited to linear, time-invariant, differential equation systems.The trans-fer function approach, however, is extensively used in the analysis and design of suchsystems. In what follows, we shall list important comments concerning the transfer func-tion. (Note that a system referred to in the list is one described by a linear, time-invariant,differential equation.)=Y(s)
X(s)=b0 sm+b1 sm-1+p+bm-1 s+bm
a0 sn+a1 sn-1+p+an-1 s+an Transfer function =G(s) =l[output ]
l[input ]2
zero initial conditions=b0 x(m)
+  b1x(m-1)
+p+bm-1 x#+bm x  (n/H11350m)a0 y(n)
+  a1y(n-1)
+p+an-1 y#+an y
16
Chapter 2 / Mathematical Modeling of Control Systems
1.The transfer function of a system is a mathematical model in that it is an opera-
tional method of expressing the differential equation that relates the output vari-
able to the input variable.
2.The transfer function is a property of a system itself, independent of the magnitude
and nature of the input or driving function.
3.The transfer function includes the units necessary to relate the input to the output;
however, it does not provide any information concerning the physical structure of
the system. (The transfer functions of many physically different systems can be
identical.)
4.If the transfer function of a system is known, the output or response can be stud-
ied for various forms of inputs with a view toward understanding the nature of
the system.
5.If the transfer function of a system is unknown, it may be established experimen-
tally by introducing known inputs and studying the output of the system. Once
established, a transfer function gives a full description of the dynamic character-
istics of the system, as distinct from its physical description.
Convolution Integral. For a linear, time-invariant system the transfer function
G(s) is
where X(s) is the Laplace transform of the input to the system and Y(s) is the Laplace
transform of the output of the system, where we assume that all initial conditions in-
volved are zero. It follows that the output Y(s) can be written as the product of G(s) and
X(s) ,o r
(2–1)
Note that multiplication in the complex domain is equivalent to convolution in the time
domain (see Appendix A), so the inverse Laplace transform of Equation (2–1) is given
by the following convolution integral:
where both g(t) andx(t) are 0 for t<0.
Impulse-Response Function. Consider the output (response) of a linear time-
invariant system to a unit-impulse input when the initial conditions are zero. Since the
Laplace transform of the unit-impulse function is unity, the Laplace transform of the
output of the system is
(2–2) Y(s) =G(s) =
3
t
0
g(t)x(t -t)dt y(t) =
3
t
0
x(t)g(t -t)dtY(s) =G(s)X(s)G(s) =Y(s)
X(s)
Openmirrors.com
Section 2–3 / Automatic Control Systems 17The inverse Laplace transform of the output given by Equation (2–2) gives the impulse
response of the system. The inverse Laplace transform of G(s) ,o r
is called the impulse-response function. This function g(t) is also called the weighting
function of the system.
The impulse-response function g(t) is thus the response of a linear time-invariant
system to a unit-impulse input when the initial conditions are zero.The Laplace trans-form of this function gives the transfer function. Therefore, the transfer function andimpulse-response function of a linear, time-invariant system contain the same infor-mation about the system dynamics. It is hence possible to obtain complete informa-tion about the dynamic characteristics of the system by exciting it with an impulseinput and measuring the response. (In practice, a pulse input with a very short dura-tion compared with the significant time constants of the system can be considered animpulse.)
2–3 AUTOMATIC CONTROL SYSTEMS
A control system may consist of a number of components. To show the functions
performed by each component, in control engineering, we commonly use a diagramcalled the block diagram . This section first explains what a block diagram is. Next, it
discusses introductory aspects of automatic control systems, including various controlactions.Then, it presents a method for obtaining block diagrams for physical systems, and,finally, discusses techniques to simplify such diagrams.
Block Diagrams. Ablock diagram of a system is a pictorial representation of the
functions performed by each component and of the flow of signals. Such a diagram de-picts the interrelationships that exist among the various components. Differing from apurely abstract mathematical representation, a block diagram has the advantage ofindicating more realistically the signal flows of the actual system.
In a block diagram all system variables are linked to each other through functional
blocks.The functional block or simply block is a symbol for the mathematical operation
on the input signal to the block that produces the output. The transfer functions of thecomponents are usually entered in the corresponding blocks, which are connected by ar-rows to indicate the direction of the flow of signals. Note that the signal can pass onlyin the direction of the arrows.Thus a block diagram of a control system explicitly showsa unilateral property.
Figure 2–1 shows an element of the block diagram. The arrowhead pointing toward
the block indicates the input, and the arrowhead leading away from the block repre-sents the output. Such arrows are referred to as signals .l
-1CG(s)D=g(t)
Transfer
function
G(s)Figure 2–1
Element of a blockdiagram.
18
Chapter 2 / Mathematical Modeling of Control Systems
+–
R(s) E(s)
G(s)C(s)Summing
pointBranch
point
Figure 2–3
Block diagram of a
closed-loop system.
Note that the dimension of the output signal from the block is the dimension of the
input signal multiplied by the dimension of the transfer function in the block.
The advantages of the block diagram representation of a system are that it is easy
to form the overall block diagram for the entire system by merely connecting the blocks
of the components according to the signal flow and that it is possible to evaluate the
contribution of each component to the overall performance of the system.
In general, the functional operation of the system can be visualized more readily by
examining the block diagram than by examining the physical system itself. A block di-
agram contains information concerning dynamic behavior, but it does not include any
information on the physical construction of the system. Consequently, many dissimilar
and unrelated systems can be represented by the same block diagram.
It should be noted that in a block diagram the main source of energy is not explicitly
shown and that the block diagram of a given system is not unique. A number of different
block diagrams can be drawn for a system, depending on the point of view of the analysis.
Summing Point. Referring to Figure 2–2, a circle with a cross is the symbol that
indicates a summing operation. The plus or minus sign at each arrowhead indicates
whether that signal is to be added or subtracted. It is important that the quantities being
added or subtracted have the same dimensions and the same units.
Branch Point. Abranch point is a point from which the signal from a block goes
concurrently to other blocks or summing points.
Block Diagram of a Closed-Loop System. Figure 2–3 shows an example of a
block diagram of a closed-loop system. The output C(s) is fed back to the summing
point, where it is compared with the reference input R(s) . The closed-loop nature of
the system is clearly indicated by the figure. The output of the block, C(s) in this case,
is obtained by multiplying the transfer function G(s) by the input to the block, E(s) .Any
linear control system may be represented by a block diagram consisting of blocks, sum-
ming points, and branch points.
When the output is fed back to the summing point for comparison with the input, it
is necessary to convert the form of the output signal to that of the input signal. For
example, in a temperature control system, the output signal is usually the controlled
temperature. The output signal, which has the dimension of temperature, must be con-
verted to a force or position or voltage before it can be compared with the input signal.
This conversion is accomplished by the feedback element whose transfer function is H(s) ,
as shown in Figure 2–4. The role of the feedback element is to modify the output before
it is compared with the input. (In most cases the feedback element is a sensor that measures
+–aa  – b
b
Figure 2–2
Summing point.
Openmirrors.com
the output of the plant.The output of the sensor is compared with the system input, and
the actuating error signal is generated.) In the present example, the feedback signal thatis fed back to the summing point for comparison with the input is B(s) =H(s)C(s) .
Open-Loop Transfer Function and Feedforward Transfer Function. Refer-
ring to Figure 2–4, the ratio of the feedback signal B(s) to the actuating error signal
E(s) is called the open-loop transfer function . That is,
The ratio of the output C(s) to the actuating error signal E(s) is called the feed-
forward transfer function , so that
If the feedback transfer function H(s) is unity, then the open-loop transfer function and
the feedforward transfer function are the same.
Closed-Loop Transfer Function. For the system shown in Figure 2–4, the output
C(s) and input R(s) are related as follows: since
eliminating E(s) from these equations gives
or
(2–3)
The transfer function relating C(s) toR(s) is called the closed-loop transfer function .I t
relates the closed-loop system dynamics to the dynamics of the feedforward elementsand feedback elements.
From Equation (2–3), C(s) is given by
C(s) =G(s)
1+G(s)H(s)R(s)C(s)
R(s)=G(s)
1+G(s)H(s)C(s) =G(s)CR(s) -H(s)C(s)D =R(s) -H(s)C(s) E(s) =R(s) -B(s) C(s) =G(s)E(s)Feedforward transfer function =C(s)
E(s)=G(s)Open-loop transfer function =B(s)
E(s)=G(s)H(s)
Section 2–3 / Automatic Control Systems 19R(s)
B(s)E(s)
G(s)
H(s)C(s)
+–
Figure 2–4
Closed-loop system.
20
Chapter 2 / Mathematical Modeling of Control Systems
G
1
(s)
G
1
(s)
G
2
(s)
G
2
(s)C(s) R(s)
C(s)
C(s)R(s)
R(s)
+
+
G
1
(s)
G
2
(s)
+–(a)
(b)
(c)
Figure 2–5
(a) Cascaded system;
(b) parallel system;
(c) feedback (closed-
loop) system.
Thus the output of the closed-loop system clearly depends on both the closed-loop trans-
fer function and the nature of the input.
Obtaining Cascaded, Parallel, and Feedback (Closed-Loop) Transfer Functions
with MATLAB. In control-systems analysis, we frequently need to calculate the cas-
caded transfer functions, parallel-connected transfer functions, and feedback-connected
(closed-loop) transfer functions. MATLAB has convenient commands to obtain the cas-
caded, parallel, and feedback (closed-loop) transfer functions.
Suppose that there are two components G
1
(s)and G
2
(s)connected differently as
shown in Figure 2–5 (a), (b), and (c), where
To obtain the transfer functions of the cascaded system, parallel system, or feedback
(closed-loop) system, the following commands may be used:
[num, den] = series(num1,den1,num2,den2)
[num, den] = parallel(num1,den1,num2,den2)
[num, den] = feedback(num1,den1,num2,den2)
As an example, consider the case where
MATLAB Program 2–1 gives C(s)/R(s)= num /H20862den for each arrangement of G
1
(s)
andG
2
(s).Note that the command
printsys(num,den)
displays the num /H20862denCthat is, the transfer function C(s)/R(s)Dof the system considered.G
1
(s)=10
s
2
+2s+10=num 1
den1,
  
G
2
(s)=5
s+5=num 2
den2G
1
(s)=num 1
den1,
  
G
2
(s)=num 2
den2
Openmirrors.com
Section 2–3 / Automatic Control Systems 21Automatic Controllers. An automatic controller compares the actual value of
the plant output with the reference input (desired value), determines the deviation, andproduces a control signal that will reduce the deviation to zero or to a small value.The manner in which the automatic controller produces the control signal is calledthecontrol action . Figure 2–6 is a block diagram of an industrial control system, whichMATLAB Program 2–1
num1 = [10];
den1 = [1  2  10];num2 = [5];den2 = [1  5];[num, den] = series(num1,den1,num2,den2);printsys(num,den)
num/den =
[num, den] = parallel(num1,den1,num2,den2);
printsys(num,den)
num/den =
[num, den] = feedback(num1,den1,num2,den2);
printsys(num,den)
num/den =
10s +50
s^3 +7s^2 +20s +1005s^2 +20s +100
s^3 +7s^2 +20s +5050
s^3 +7s^2 +20s +50
Automatic controller
Error detector
Amplifier Actuator PlantOutput
SensorReference
input
Actuating
error signalSet
point/H20920 /H20921+–Figure 2–6
Block diagram of anindustrial controlsystem, whichconsists of anautomatic controller,
an actuator, a plant,
and a sensor(measuring element).
22
Chapter 2 / Mathematical Modeling of Control Systems
consists of an automatic controller, an actuator , a plant, and a sensor (measuring ele-
ment). The controller detects the actuating error signal, which is usually at a very low
power level, and amplifies it to a sufficiently high level. The output of an automatic
controller is fed to an actuator, such as an electric motor, a hydraulic motor, or a
pneumatic motor or valve. (The actuator is a power device that produces the input to
the plant according to the control signal so that the output signal will approach the
reference input signal.)
The sensor or measuring element is a device that converts the output variable into an-
other suitable variable, such as a displacement, pressure, voltage, etc., that can be used to
compare the output to the reference input signal.This element is in the feedback path of
the closed-loop system. The set point of the controller must be converted to a reference
input with the same units as the feedback signal from the sensor or measuring element.
Classifications of Industrial Controllers. Most industrial controllers may be
classified according to their control actions as:
1.Two-position or on–off controllers
2.Proportional controllers
3.Integral controllers
4.Proportional-plus-integral controllers
5.Proportional-plus-derivative controllers
6.Proportional-plus-integral-plus-derivative controllers
Most industrial controllers use electricity or pressurized fluid such as oil or air as
power sources. Consequently, controllers may also be classified according to the kind of
power employed in the operation, such as pneumatic controllers, hydraulic controllers,
or electronic controllers. What kind of controller to use must be decided based on the
nature of the plant and the operating conditions, including such considerations as safety,
cost, availability, reliability, accuracy, weight, and size.
Two-Position or On–Off Control Action. In a two-position control system, the
actuating element has only two fixed positions, which are, in many cases, simply on and
off.Two-position or on–off control is relatively simple and inexpensive and, for this rea-
son, is very widely used in both industrial and domestic control systems.
Let the output signal from the controller be u(t) and the actuating error signal be e(t).
In two-position control, the signal u(t) remains at either a maximum or minimum value,
depending on whether the actuating error signal is positive or negative, so that
where U
1
and U
2
are constants. The minimum value U
2
is usually either zero or –U
1
.
Two-position controllers are generally electrical devices, and an electric solenoid-oper-
ated valve is widely used in such controllers. Pneumatic proportional controllers with very
high gains act as two-position controllers and are sometimes called pneumatic two-
position controllers.
Figures 2–7(a) and (b) show the block diagrams for two-position or on–off controllers.
The range through which the actuating error signal must move before the switching occurs =U
2
 
,
  
for e(t) 60 u(t) =U
1
 
,
  
for e(t) 70
Openmirrors.com
Section 2–3 / Automatic Control Systems 23is called the differential gap . A differential gap is indicated in Figure 2–7(b). Such a dif-
ferential gap causes the controller output u(t) to maintain its present value until the ac-
tuating error signal has moved slightly beyond the zero value. In some cases, the differentialgap is a result of unintentional friction and lost motion; however, quite often it is inten-tionally provided in order to prevent too-frequent operation of the on–off mechanism.
Consider the liquid-level control system shown in Figure 2–8(a), where the electromag-
netic valve shown in Figure 2–8(b) is used for controlling the inflow rate.This valve is eitheropen or closed.With this two-position control, the water inflow rate is either a positive con-stant or zero. As shown in Figure 2–9, the output signal continuously moves between thetwo limits required to cause the actuating element to move from one fixed position to theother. Notice that the output curve follows one of two exponential curves, one correspon-ding to the filling curve and the other to the emptying curve. Such output oscillation be-tween two limits is a typical response characteristic of a system under two-position control.(a) (b)U1
U2u eU1
U2u eDifferential gap
+–+–Figure 2–7
(a) Block diagram ofan on–off controller;
(b) block diagram of
an on–off controllerwith differential gap.
115 V
Float
RCh
(a) (b)qiMovable iron core
Magnetic coil
Figure 2–8
(a) Liquid-levelcontrol system;
(b) electromagnetic
valve.
h(t)
t 0Differential
gap
Figure 2–9
Level h(t)-versus- t
curve for the systemshown in Figure 2–8(a).
24
Chapter 2 / Mathematical Modeling of Control Systems
From Figure 2–9, we notice that the amplitude of the output oscillation can 
be reduced by decreasing the differential gap. The decrease in the differential 
gap, however, increases the number of on–off switchings per minute and reduces 
the useful life of the component. The magnitude of the differential gap must be 
determined from such considerations as the accuracy required and the life of 
the component.
Proportional Control Action. For a controller with proportional control action,
the relationship between the output of the controller u(t) and the actuating error signal
e(t) is
or, in Laplace-transformed quantities,
where K
p
is termed the proportional gain.
Whatever the actual mechanism may be and whatever the form of the operating
power, the proportional controller is essentially an amplifier with an adjustable gain.
Integral Control Action. In a controller with integral control action, the value of
the controller output u(t) is changed at a rate proportional to the actuating error signal
e(t). That is,
or
where K
i
is an adjustable constant. The transfer function of the integral controller is
Proportional-Plus-Integral Control Action. The control action of a proportional-
plus-integral controller is defined by
u(t) =K
p
 
e(t) +K
p
T
i
3
t
0
e(t)dtU(s)
E(s)=K
i
su(t) =K
i
3
t
0
e(t)dtdu(t)
dt=K
i
 
e(t)U(s)
E(s)=K
p
u(t) =K
p
 
e(t)
Openmirrors.com
Section 2–3 / Automatic Control Systems
25
or the transfer function of the controller is
where is called the integral time .
Proportional-Plus-Derivative Control Action. The control action of a proportional-
plus-derivative controller is defined by
and the transfer function is
where is called the derivative time .
Proportional-Plus-Integral-Plus-Derivative Control Action. The combination of
proportional control action, integral control action, and derivative control action is
termed proportional-plus-integral-plus-derivative control action. It has the advantages
of each of the three individual control actions. The equation of a controller with this
combined action is given by
or the transfer function is
where K
p
is the proportional gain, is the integral time, and is the derivative time.
The block diagram of a proportional-plus-integral-plus-derivative controller is shown in
Figure 2–10.T
d
T
i
U(s)
E(s)=K
p
a
1+1
T
i
 
s+T
d
 
s
b
u(t) =K
p
 
e(t) +K
p
T
i
3
t
0
e(t)dt+K
p
 
T
d
de(t)
dtT
d
U(s)
E(s)=K
p
A1+T
d
 
sBu(t) =K
p
 
e(t) +K
p
 
T
d
de(t)
dtT
i
U(s)
E(s)=K
p
a
1+1
T
i
 
s
b
+–
E(s) U(s)K
p
(1+T
i
s+T
i
T
d
s
2
)
T
i
s
Figure 2–10
Block diagram of a
proportional-plus-
integral-plus-
derivative controller.
Openmirrors.com
26
Chapter 2 / Mathematical Modeling of Control Systems
R(s)
G
1
(s) G
2
(s)
H(s)Disturbance
D(s)
C(s)
+–
++
Figure 2–11
Closed-loop system
subjected to a
disturbance.
Closed-Loop System Subjected to a Disturbance. Figure 2–11 shows a closed-
loop system subjected to a disturbance. When two inputs (the reference input and dis-
turbance) are present in a linear time-invariant system, each input can be treated
independently of the other; and the outputs corresponding to each input alone can be
added to give the complete output. The way each input is introduced into the system is
shown at the summing point by either a plus or minus sign.
Consider the system shown in Figure 2–11. In examining the effect of the distur-
bance D(s) , we may assume that the reference input is zero; we may then calculate the
response C
D
(s)to the disturbance only. This response can be found from
On the other hand, in considering the response to the reference input R(s), we may
assume that the disturbance is zero.Then the response C
R
(s)to the reference input R(s)
can be obtained from
The response to the simultaneous application of the reference input and disturbance
can be obtained by adding the two individual responses. In other words, the response
C(s) due to the simultaneous application of the reference input R(s) and disturbance
D(s) is given by
Consider now the case where |G
1
(s)H(s)| /H112711 and |G
1
(s)G
2
(s)H(s)| /H112711. In this
case, the closed-loop transfer function C
D
(s)/D(s) becomes almost zero, and the effect
of the disturbance is suppressed. This is an advantage of the closed-loop system.
On the other hand, the closed-loop transfer function C
R
(s)/R(s) approaches 1/H(s)
as the gain of G
1
(s)G
2
(s)H(s) increases.This means that if |G
1
(s)G
2
(s)H(s)| /H112711, then
the closed-loop transfer function C
R
(s)/R(s) becomes independent of G
1
(s)andG
2
(s)
and inversely proportional to H(s) , so that the variations of G
1
(s)and G
2
(s)do not
affect the closed-loop transfer function C
R
(s)/R(s) . This is another advantage of the
closed-loop system. It can easily be seen that any closed-loop system with unity feedback,
H(s)=1, tends to equalize the input and output. =G
2
(s)
1+G
1
(s)G
2
(s)H(s) CG
1
(s)R(s) +D(s)D C(s) =C
R
(s)+C
D
(s)C
R
(s)
R(s)=G
1
(s)G
2
(s)
1+G
1
(s)G
2
(s)H(s)C
D
(s)
D(s)=G
2
(s)
1+G
1
(s)G
2
(s)H(s)
Openmirrors.com
Section 2–3 / Automatic Control Systems 27Procedures for Drawing a Block Diagram. To draw a block diagram for a sys-
tem, first write the equations that describe the dynamic behavior of each component.Then take the Laplace transforms of these equations, assuming zero initial conditions,and represent each Laplace-transformed equation individually in block form. Finally, as-semble the elements into a complete block diagram.
As an example, consider the RCcircuit shown in Figure 2–12(a). The equations for
this circuit are
(2–4)
(2–5)
The Laplace transforms of Equations (2–4) and (2–5), with zero initial condition, become
(2–6)
(2–7)
Equation (2–6) represents a summing operation, and the corresponding diagram is
shown in Figure 2–12(b). Equation (2–7) represents the block as shown in Figure 2–12(c).Assembling these two elements, we obtain the overall block diagram for the system asshown in Figure 2–12(d).
Block Diagram Reduction. It is important to note that blocks can be connected
in series only if the output of one block is not affected by the next following block. Ifthere are any loading effects between the components, it is necessary to combine thesecomponents into a single block.
Any number of cascaded blocks representing nonloading components can be
replaced by a single block, the transfer function of which is simply the product of theindividual transfer functions. E
o(s)=I(s)
Cs I(s) =Ei(s)-Eo(s)
Reo=1id t
Ci=ei-eo
R
(d)Ei(s) I(s) Eo(s)1
R1
CsEo(s)
(b)Ei(s) I(s)1
R
(c)I(s) Eo(s)1
Cs(a)R
Ce o ei
i
+–+–
Figure 2–12
(a)RCcircuit;
(b) block diagram
representing
Equation (2–6);(c) block diagramrepresentingEquation (2–7);
(d) block diagram of
theRCcircuit.
28
Chapter 2 / Mathematical Modeling of Control Systems
R
G
1
H
1
H
2
G
3
G
2
C
R
G
1
H
1
G
3
G
2
C
R
G
3
C
RC
RC(a)
(b)
(c)
(d)
(e)H
2
G
1
H
2
G
1
G
1
G
2
1–G
1
G
2
H
1
G
1
G
2
G
3
1–G
1
G
2
H
1
+G
2
G
3
H
2
G
1
G
2
G
3
1–G
1
G
2
H
1
+G
2
G
3
H
2
+G
1
G
2
G
3
+–
+–
++
+–
+–
++
+–
+–
+–
Figure 2–13
(a) Multiple-loop
system;
(b)–(e) successive
reductions of the
block diagram shown
in (a).
A complicated block diagram involving many feedback loops can be simplified by
a step-by-step rearrangement. Simplification of the block diagram by rearrangements
considerably reduces the labor needed for subsequent mathematical analysis. It should
be noted, however, that as the block diagram is simplified, the transfer functions in new
blocks become more complex because new poles and new zeros are generated.
EXAMPLE 2–1
Consider the system shown in Figure 2–13(a). Simplify this diagram.
By moving the summing point of the negative feedback loop containing H
2
outside the posi-
tive feedback loop containing H
1
, we obtain Figure 2–13(b). Eliminating the positive feedback loop,
we have Figure 2–13(c).The elimination of the loop containing H
2
/G
1
gives Figure 2–13(d). Finally,
eliminating the feedback loop results in Figure 2–13(e).
Openmirrors.com
Section 2–4 / Modeling in State Space 29Notice that the numerator of the closed-loop transfer function C(s)/R(s) is the product of the
transfer functions of the feedforward path. The denominator of C(s)/R(s) is equal to
(The positive feedback loop yields a negative term in the denominator.)
2–4 MODELING IN STATE SPACE
In this section we shall present introductory material on state-space analysis of control
systems.
Modern Control Theory. The modern trend in engineering systems is toward
greater complexity, due mainly to the requirements of complex tasks and good accu-racy. Complex systems may have multiple inputs and multiple outputs and may be timevarying. Because of the necessity of meeting increasingly stringent requirements onthe performance of control systems, the increase in system complexity, and easy accessto large scale computers, modern control theory, which is a new approach to the analy-sis and design of complex control systems, has been developed since around 1960.Thisnew approach is based on the concept of state. The concept of state by itself is notnew, since it has been in existence for a long time in the field of classical dynamics andother fields.
Modern Control Theory Versus Conventional Control Theory. Modern con-
trol theory is contrasted with conventional control theory in that the former is appli-cable to multiple-input, multiple-output systems, which may be linear or nonlinear,time invariant or time varying, while the latter is applicable only to linear time-invariant single-input, single-output systems. Also, modern control theory is essen-tially time-domain approach and frequency domain approach (in certain cases such asH-infinity control), while conventional control theory is a complex frequency-domainapproach. Before we proceed further, we must define state, state variables, state vector,and state space.
State. The state of a dynamic system is the smallest set of variables (called state
variables ) such that knowledge of these variables at t=t
0,together with knowledge of
the input for t/H11350t0,completely determines the behavior of the system for any time
t/H11350t0.
Note that the concept of state is by no means limited to physical systems. It is appli-
cable to biological systems, economic systems, social systems, and others.
State Variables. The state variables of a dynamic system are the variables mak-
ing up the smallest set of variables that determine the state of the dynamic system. If at =1-G1 G2 H1+G2 G3 H2+G1 G2 G3 =1+A-G1 G2 H1+G2 G3 H2+G1 G2 G3B1+a(product of the transfer functions around each loop )
30
Chapter 2 / Mathematical Modeling of Control Systems
least nvariables x
1
,x
2
,p,x
n
are needed to completely describe the behavior of a dy-
namic system (so that once the input is given for t/H11350t
0
and the initial state at t=t
0
is
specified, the future state of the system is completely determined), then such n variables
are a set of state variables.
Note that state variables need not be physically measurable or observable quantities.
Variables that do not represent physical quantities and those that are neither measura-
ble nor observable can be chosen as state variables. Such freedom in choosing state vari-
ables is an advantage of the state-space methods. Practically, however, it is convenient
to choose easily measurable quantities for the state variables, if this is possible at all, be-
cause optimal control laws will require the feedback of all state variables with suitable
weighting.
State Vector. Ifnstate variables are needed to completely describe the behavior
of a given system, then these nstate variables can be considered the ncomponents of a
vector x. Such a vector is called a state vector . A state vector is thus a vector that deter-
mines uniquely the system state x(t)for any time t/H11350t
0
, once the state at t=t
0
is given
and the input u(t) fort/H11350t
0
is specified.
State Space. The n-dimensional space whose coordinate axes consist of the x
1
axis, x
2
axis, p,x
n
axis, where x
1
,x
2
,p,x
n
are state variables, is called a state space .Any
state can be represented by a point in the state space.
State-Space Equations. In state-space analysis we are concerned with three types
of variables that are involved in the modeling of dynamic systems: input variables, out-
put variables, and state variables. As we shall see in Section 2–5, the state-space repre-
sentation for a given system is not unique, except that the number of state variables is
the same for any of the different state-space representations of the same system.
The dynamic system must involve elements that memorize the values of the input for
t/H11350t
1
. Since integrators in a continuous-time control system serve as memory devices,
the outputs of such integrators can be considered as the variables that define the inter-
nal state of the dynamic system.Thus the outputs of integrators serve as state variables.
The number of state variables to completely define the dynamics of the system is equal
to the number of integrators involved in the system.
Assume that a multiple-input, multiple-output system involves nintegrators.Assume
also that there are rinputs u
1
(t), u
2
(t),p,u
r
(t)and moutputs y
1
(t), y
2
(t),p,y
m
(t).
Define noutputs of the integrators as state variables: x
1
(t), x
2
(t),p,x
n
(t)Then the
system may be described by
(2–8)
 x#
n
(t)=f
n
Ax
1
 
, x
2
 
,p, x
n
 
; u
1
 
, u
2
 
,p, u
r
 
; tB /H11080 /H11080 /H11080 x#
2
(t)=f
2
Ax
1
 
, x
2
 
,p, x
n
 
; u
1
 
, u
2
 
,p, u
r
 
; tB x#
1
(t)=f
1
Ax
1
 
, x
2
 
,p, x
n
 
; u
1
 
, u
2
 
,p, u
r
 
; tB
Openmirrors.com
Section 2–4 / Modeling in State Space 31The outputs y1(t), y2(t),p,ym(t)of the system may be given by
(2–9)
If we define ym(t)=gmAx1 , x2 ,p, xn ; u1 , u2 ,p, ur ; tB /H11080 /H11080 /H11080 y2(t)=g2Ax1 , x2 ,p, xn ; u1 , u2 ,p, ur ; tB y1(t)=g1Ax1 , x2 ,p, xn ; u1 , u2 ,p, ur ; tB
u(t)=Fu1(t)
u2(t)
/H11080/H11080/H11080
u
r(t)V g(x, u, t)=Fg1Ax1 ,x2 ,p,xn ;u1 ,u2 ,p,ur ;tB
g2Ax1 ,x2 ,p,xn ;u1 ,u2 ,p,ur ;tB
/H11080/H11080/H11080
g
mAx1 ,x2 ,p,xn ;u1 ,u2 ,p,ur ;tBV,  y(t)=Fy1(t)
y2(t)
/H11080/H11080/H11080
y
m(t)V,f(x, u, t)=Ff1Ax1 ,x2 ,p,xn ;u1 ,u2 ,p,ur ;tB
f2Ax1 ,x2 ,p,xn ;u1 ,u2 ,p,ur ;tB
/H11080/H11080/H11080
f
nAx1 ,x2 ,p,xn ;u1 ,u2 ,p,ur ;tBV,  x(t)=Fx1(t)
x2(t)
/H11080/H11080/H11080
x
n(t)V,
then Equations (2–8) and (2–9) become
(2–10)
(2–11)
where Equation (2–10) is the state equation and Equation (2–11) is the output equation.
If vector functions fand/or ginvolve time texplicitly, then the system is called a time-
varying system.
If Equations (2–10) and (2–11) are linearized about the operating state, then we
have the following linearized state equation and output equation:
(2–12)
(2–13)
where A(t)is called the state matrix, B(t)the input matrix, C(t)the output matrix, and
D(t)the direct transmission matrix. (Details of linearization of nonlinear systems about y(t)=C(t)x(t)+D(t)u(t) x#(t)=A(t)x(t)+B(t)u(t)y(t)=g(x, u, t) x#(t)=f(x, u, t)
32
Chapter 2 / Mathematical Modeling of Control Systems
m
k
bu(t)
y(t)
Figure 2–15
Mechanical system.
u(t)D(t)
B(t)
A(t)C(t)y(t) x(t)
•
dtÚx(t)
++
++
Figure 2–14
Block diagram of the
linear, continuous-
time control system
represented in state
space.
the operating state are discussed in Section 2–7.) A block diagram representation of
Equations (2–12) and (2–13) is shown in Figure 2–14.
If vector functions fandgdo not involve time texplicitly then the system is called a
time-invariant system. In this case, Equations (2–12) and (2–13) can be simplified to
(2–14)
(2–15)
Equation (2–14) is the state equation of the linear, time-invariant system and Equation
(2–15) is the output equation for the same system. In this book we shall be concerned
mostly with systems described by Equations (2–14) and (2–15).
In what follows we shall present an example for deriving a state equation and output
equation.
EXAMPLE 2–2
Consider the mechanical system shown in Figure 2–15. We assume that the system is linear. The
external force u(t) is the input to the system, and the displacement y(t) of the mass is the output.
The displacement y(t) is measured from the equilibrium position in the absence of the external
force. This system is a single-input, single-output system.
From the diagram, the system equation is
(2–16)
This system is of second order.This means that the system involves two integrators. Let us define
state variables x
1
(t)andx
2
(t)as
Then we obtain
or
(2–17)
(2–18)
The output equation is
(2–19) y=x
1
 x#
2
=-k
mx
1
-b
mx
2
+1
mu x#
1
=x
2
 x#
2
=1
m A-ky-by#B+1
m u x#
1
=x
2
x
2
(t)=y#(t)x
1
(t)=y(t)my$+by#+ky=u
 y#(t)=Cx(t)+Du(t) x#(t)=Ax(t)+Bu(t)
Openmirrors.com
In a vector-matrix form, Equations (2–17) and (2–18) can be written as
(2–20)
The output equation, Equation (2–19), can be written as
(2–21)
Equation (2–20) is a state equation and Equation (2–21) is an output equation for the system.
They are in the standard form:
where
Figure 2–16 is a block diagram for the system. Notice that the outputs of the integrators are state
variables.
Correlation Between Transfer Functions and State-Space Equations. In what
follows we shall show how to derive the transfer function of a single-input, single-outputsystem from the state-space equations.
Let us consider the system whose transfer function is given by
(2–22)
This system may be represented in state space by the following equations:
(2–23)
(2–24)  y=Cx+Du x#=Ax+BuY(s)
U(s)=G(s)A=C0
-k
m1
-b
mS,  B=C0
1
mS,  C=[1 0],  D=0 y=Cx+Du x#=Ax+Buy=[1 0]Bx1
x2RBx#
1
x#
2R=C0
-k
m1
-b
mSBx1
x2R+C0
1
mSu
Section 2–4 / Modeling in State Space 33u 1
m
b
m
k
mx2 x2•x1=y/H20885/H20885 +–
++
Figure 2–16
Block diagram of themechanical system
shown in Figure 2–15.
34
Chapter 2 / Mathematical Modeling of Control Systems
where xis the state vector, uis the input, and yis the output.The Laplace transforms of
Equations (2–23) and (2–24) are given by
(2–25)
(2–26)
Since the transfer function was previously defined as the ratio of the Laplace transform
of the output to the Laplace transform of the input when the initial conditions were
zero, we set x(0)in Equation (2–25) to be zero. Then we have
or
By premultiplying to both sides of this last equation, we obtain
(2–27)
By substituting Equation (2–27) into Equation (2–26), we get
(2–28)
Upon comparing Equation (2–28) with Equation (2–22), we see that
(2–29)
This is the transfer-function expression of the system in terms of A,B,C, and D.
Note that the right-hand side of Equation (2–29) involves Hence G(s)
can be written as
where Q(s) is a polynomial in s. Notice that is equal to the characteristic poly-
nomial of G(s) . In other words, the eigenvalues of Aare identical to the poles of G(s) .
EXAMPLE 2–3
Consider again the mechanical system shown in Figure 2–15. State-space equations for the system
are given by Equations (2–20) and (2–21).We shall obtain the transfer function for the system from
the state-space equations.
By substituting A,B,C, and Dinto Equation (2–29), we obtain
 =[1
 
0]
C
s
k
m-1
s+b
m
S
-1
C
0
1
m
S
 =[1
 
0]
c
B
s
00
s
R
-
C
0
-k
m1
-b
m
S
s
-1
C
0
1
m
S
+0 G(s) =C(s
 
I-A)
-1
 
B+D
∑s
 
I-A∑G(s) =Q(s)
∑s
 
I-A∑(s
 
I-A)
-1
.G(s) =C(s
 
I-A)
-1
 
B+DY(s) =CC(s
 
I-A)
-1
 
B+DDU(s)X(s)=(s
 
I-A)
-1
 
BU(s)(s
 
I-A)
-1
(s
 
I-A)X(s)=BU(s)s
 
X(s)-AX(s)=BU(s) Y(s) =CX(s)+DU(s) sX(s)-x(0)=AX(s)+BU(s)
Openmirrors.com
Section 2–5 / State-Space Representation of Scalar Differential Equation Systems 35Note that
(Refer to Appendix C for the inverse of the 2 /H11003 2 matrix.)
Thus, we have
which is the transfer function of the system. The same transfer function can be obtained from
Equation (2–16).
Transfer Matrix. Next, consider a multiple-input, multiple-output system.Assume
that there are rinputs and moutputs Define
The transfer matrix G(s)relates the output Y(s)to the input U(s),o r
where G(s)is given by
[The derivation for this equation is the same as that for Equation (2–29).] Since the
input vector uisrdimensional and the output vector yismdimensional, the transfer ma-
trixG(s) is an m*r matrix.
2–5 STATE-SPACE REPRESENTATION OF SCALAR
DIFFERENTIAL EQUATION SYSTEMS
A dynamic system consisting of a finite number of lumped elements may be described
by ordinary differential equations in which time is the independent variable. By use ofvector-matrix notation, an nth-order differential equation may be expressed by a first-
order vector-matrix differential equation. If nelements of the vector are a set of state
variables, then the vector-matrix differential equation is a state equation. In this section
we shall present methods for obtaining state-space representations of continuous-timesystems.G(s)=C(s
 I-A)-1
 B+DY(s)=G(s  )U(s  )y=Fy1
y2
/H11080
/H11080/H11080
y
mV,  u=Fu1
u2
/H11080
/H11080/H11080
u
rVy1 ,y2 ,p,ym . u1 ,u2 ,p,ur , =1
ms2+bs+k G(s) =[1 0]1
s2+b
ms+k
mDs+b
m
-k
m1
sTC0
1
mSCs
k
m-1
s+b
mS-1
=1
s2+b
ms+k
mDs+b
m
-k
m1
sT
36
Chapter 2 / Mathematical Modeling of Control Systems
State-Space Representation of nth-Order Systems of Linear Differential Equa-
tions in which the Forcing Function Does Not Involve Derivative Terms. Con-
sider the following nth-order system:
(2–30)
Noting that the knowledge of together with the input u(t) for
t/H113500, determines completely the future behavior of the system, we may take
as a set of nstate variables. (Mathematically, such a choice of state
variables is quite convenient. Practically, however, because higher-order derivative terms
are inaccurate, due to the noise effects inherent in any practical situations, such a choice
of the state variables may not be desirable.)
Let us define
Then Equation (2–30) can be written as
or
(2–31)
where
B=
G
0
0
/H11080
/H11080
/H11080
0
1
W
A=
G
0
0
/H11080
/H11080
/H11080
0
-a
n
1
0
/H11080
/H11080
/H11080
0
-a
n-1
0
1
/H11080
/H11080
/H11080
0
-a
n-2
p
p
 
 
p
p0
0
/H11080
/H11080
/H11080
1
-a
1
W
, x=
F
x
1
x
2
/H11080
/H11080
/H11080
x
n
V
,x#=Ax+Bux#
n
=-a
n
x
1
-p-a
1
x
n
+ux#
n-1
=x
n
/H11080/H11080/H11080x#
2
=x
3
x#
1
=x
2
 x
n
=y
(n-1)
 /H11080 /H11080 /H11080 x
2
=y# x
1
=yy(t), y#(t),p,y
(n-1)
(t)y(0), y#(0), p,y
(n-1)
(0),y
(n)
+
 
a
1
y
(n-1)
+p+a
n-1
 
y#+a
n
 
y=u
Openmirrors.com
Section 2–5 / State-Space Representation of Scalar Differential Equation Systems 37The output can be given by
or
(2–32)
where
[Note that Din Equation (2–24) is zero.] The first-order differential equation, Equa-
tion (2–31), is the state equation, and the algebraic equation, Equation (2–32), is theoutput equation.
Note that the state-space representation for the transfer function system
is given also by Equations (2–31) and (2–32).
State-Space Representation of nth-Order Systems of Linear Differential Equa-
tions in which the Forcing Function Involves Derivative Terms. Consider the dif-
ferential equation system that involves derivatives of the forcing function, such as
(2–33)
The main problem in defining the state variables for this case lies in the derivative
terms of the input u. The state variables must be such that they will eliminate the de-
rivatives of uin the state equation.
One way to obtain a state equation and output equation for this case is to define the
following nvariables as a set of nstate variables:
(2–34)
x
n=y(n-1)
-  b0u(n-1)
-  b1u(n-2)
-p-bn-2 u#-bn-1 u=x#
n-1-bn-1 u/H11080/H11080/H11080x3=y$-b0 u$-b1u#-b2 u=x#
2-b2 ux2=y#-b0 u#-b1 u=x#
1-b1 ux1=y-b0 uy(n)
+a1 y(n-1)
+p+an-1 y#+an y=b0 u(n)
+b1 u(n-1)
+p+bn-1 u#+bn uY(s)
U(s)=1
sn+a1 sn-1+p+an-1 s+anC=[1 0 p0]y=Cxy=[1 0 p 0]Fx1
x2
/H11080
/H11080/H11080
x
nV
38
Chapter 2 / Mathematical Modeling of Control Systems
where are determined from
(2–35)
With this choice of state variables the existence and uniqueness of the solution of the
state equation is guaranteed. (Note that this is not the only choice of a set of state vari-
ables.) With the present choice of state variables, we obtain
(2–36)
where is given by
[To derive Equation (2–36), see Problem A–2–6 .] In terms of vector-matrix equations,
Equation (2–36) and the output equation can be written as
 y=[1
 
0
 
p
 
0]
F
x
1
x
2
/H11080
/H11080
/H11080
x
n
V
+b
0
 
u+
G
b
1
b
2
/H11080
/H11080
/H11080
b
n-1
b
n
W
u
G
x
1
x
2
/H11080
/H11080
/H11080
x
n-1
x
n
W
 
G
x#
1
x#
2
/H11080
/H11080
/H11080
x#
n-1
x#
n
W
=
G
0
0
/H11080
/H11080
/H11080
0
-a
n
1
0
/H11080
/H11080
/H11080
0
-a
n-1
0
1
/H11080
/H11080
/H11080
0
-a
n-2
p
p
 
 
 
p
p0
0
/H11080
/H11080
/H11080
1
-a
1
W
b
n
=b
n
-a
1
 
b
n-1
-p-a
n-1
 
b
1
-a
n
 
-1
b
0
b
n
x#
n
=-a
n
 
x
1
-a
n-1
 
x
2
-p-a
1
 
x
n
+b
n
 
ux#
n-1
=x
n
+b
n-1
 
u/H11080/H11080/H11080x#
2
=x
3
+b
2
 
ux#
1
=x
2
+b
1
 
ub
n-1
=b
n-1
-a
1
 
b
n-2
-p-a
n-2
 
b
1
-a
n
 
-1
b
0
/H11080/H11080/H11080b
3
=b
3
-a
1
 
b
2
-a
2
 
b
1
-a
3
 
b
0
b
2
=b
2
-a
1
 
b
1
-a
2
 
b
0
b
1
=b
1
-a
1
 
b
0
b
0
=b
0
b
0
 
,b
1
 
,b
2
 
,p,b
n-1
Openmirrors.com
Section 2–6 / Transformation of Mathematical Models with MATLAB 39or
(2–37)
(2–38)
where
In this state-space representation, matrices Aand Care exactly the same as those for
the system of Equation (2–30).The derivatives on the right-hand side of Equation (2–33)affect only the elements of the Bmatrix.
Note that the state-space representation for the transfer function
is given also by Equations (2–37) and (2–38).
There are many ways to obtain state-space representations of systems. Methods for
obtaining canonical representations of systems in state space (such as controllable canon-ical form, observable canonical form, diagonal canonical form, and Jordan canonicalform) are presented in Chapter 9.
MATLAB can also be used to obtain state-space representations of systems from
transfer-function representations, and vice versa.This subject is presented in Section 2–6.
2–6 TRANSFORMATION OF MATHEMATICAL MODELS WITH MATLAB
MATLAB is quite useful to transform the system model from transfer function to state
space, and vice versa. We shall begin our discussion with transformation from transferfunction to state space.Y(s)
U(s)=b0 sn+b1 sn-1+p+bn-1 s+bn
sn+a1 sn-1+p+an-1 s+an B=Gb1
b2
/H11080
/H11080/H11080
b
n-1
bnW,   C=[1 0 p 0],  D=b0=b0 x=Gx1
x2
/H11080
/H11080/H11080
x
n-1
xnW,   A=G0
0
/H11080/H11080/H11080
0
-a
n1
0
/H11080/H11080/H11080
0
-a
n-10
1
/H11080/H11080/H11080
0
-a
n-2p
p
 
  
p
p0
0
/H11080/H11080/H11080
1
-a
1W y=Cx+Du x#=Ax+Bu
40
Chapter 2 / Mathematical Modeling of Control Systems
Let us write the closed-loop transfer function as
Once we have this transfer-function expression, the MATLAB command
[A,B,C,D] = tf2ss(num,den)
will give a state-space representation. It is important to note that the state-space repre-
sentation for any system is not unique. There are many (infinitely many) state-space
representations for the same system. The MATLAB command gives one possible such
state-space representation.
Transformation from Transfer Function to State Space Representation.
Consider the transfer-function system
(2–39)
There are many (infinitely many) possible state-space representations for this system.
One possible state-space representation is
Another possible state-space representation (among infinitely many alternatives) is
(2–40)  
C
x#
1
x#
2
x#
3
S
=
C
-14
1
0-56
0
1-160
0
0
SC
x
1
x
2
x
3
S
+
C
1
0
0
S
u y=[1
 
0
 
0]
C
x
1
x
2
x
3
S
+[0]u 
C
x#
1
x#
2
x#
3
S
=
C
0
0
-1601
0
-560
1
-14
SC
x
1
x
2
x
3
S
+
C
0
1
-14
S
u =s
s
3
+14s
2
+56s +160 Y(s)
U(s)=s
(s+10)As
2
+4s+16BY(s)
U(s)=numerator polynomial in s
denominator polynomial in s=num
den
Openmirrors.com
Section 2–6 / Transformation of Mathematical Models with MATLAB 41(2–41)
MATLAB transforms the transfer function given by Equation (2–39) into the 
state-space representation given by Equations (2–40) and (2–41). For the examplesystem considered here, MATLAB Program 2–2 will produce matrices A,B,C,
and D. y=[0 1 0]Cx1
x2
x3S+[0]u
MATLAB Program 2–2
num = [1     0];
den = [1   14   56   160];[A,B,C,D] = tf2ss(num,den)
A=
-14 -56 -160
10 001 0
B =
1
00
C =
01 0
D =
0
Transformation from State Space Representation to Transfer Function. To
obtain the transfer function from state-space equations, use the following command:
[num,den] = ss2tf(A,B,C,D,iu)
iumust be specified for systems with more than one input. For example, if the system
has three inputs (u1, u2, u3) , then iumust be either 1, 2, or 3, where 1 implies u1, 2
implies u2,and 3 implies u3.
If the system has only one input, then either
[num,den] = ss2tf(A,B,C,D)
42
Chapter 2 / Mathematical Modeling of Control Systems
EXAMPLE 2–4
Obtain the transfer function of the system defined by the following state-space equations:
MATLAB Program 2-3 will produce the transfer function for the given system.The transfer func-
tion obtained is given by
Y(s)
U(s)=25s+5
s
3
+5s
2
+25s+5 y=[1
 
0
 
0]
C
x
1
x
2
x
3
S
 
C
x#
1
x#
2
x#
3
S
=
C
0
0
-51
0
-250
1
-5
SC
x
1
x
2
x
3
S
+
C
0
25
-120
S
u
MATLAB Program 2–3
A = [0   1   0;   0   0   1;   -5   -25   -5];
B = [0; 25; -120];
C = [1   0     0];
D = [0];
[num,den] = ss2tf(A,B,C,D)
num =
0   0.0000   25.0000  5.0000
den
1.0000   5.0000   25.0000  5.0000
% ***** The same result can be obtained by entering the following command: *****
[num,den] = ss2tf(A,B,C,D,1)
num =
0   0.0000   25.0000  5.0000
den =
1.0000   5.0000   25.0000  5.0000
or
[num,den] = ss2tf(A,B,C,D,1)
may be used. For the case where the system has multiple inputs and multiple outputs,
see Problem A–2–12 .
Openmirrors.com
Section 2–7 / Linearization of Nonlinear Mathematical Models 432–7 LINEARIZATION OF NONLINEAR MATHEMATICAL MODELS
Nonlinear Systems. A system is nonlinear if the principle of superposition does
not apply. Thus, for a nonlinear system the response to two inputs cannot be calculatedby treating one input at a time and adding the results.
Although many physical relationships are often represented by linear equations,
in most cases actual relationships are not quite linear. In fact, a careful study of phys-ical systems reveals that even so-called “linear systems” are really linear only in lim-ited operating ranges. In practice, many electromechanical systems, hydraulic systems,pneumatic systems, and so on, involve nonlinear relationships among the variables.For example, the output of a component may saturate for large input signals.There maybe a dead space that affects small signals. (The dead space of a component is a smallrange of input variations to which the component is insensitive.) Square-law nonlin-earity may occur in some components. For instance, dampers used in physical systemsmay be linear for low-velocity operations but may become nonlinear at high veloci-ties, and the damping force may become proportional to the square of the operatingvelocity.
Linearization of Nonlinear Systems. In control engineering a normal operation
of the system may be around an equilibrium point, and the signals may be consideredsmall signals around the equilibrium. (It should be pointed out that there are many ex-ceptions to such a case.) However, if the system operates around an equilibrium pointand if the signals involved are small signals, then it is possible to approximate the non-linear system by a linear system. Such a linear system is equivalent to the nonlinear sys-tem considered within a limited operating range. Such a linearized model (linear,time-invariant model) is very important in control engineering.
The linearization procedure to be presented in the following is based on the ex-
pansion of nonlinear function into a Taylor series about the operating point and theretention of only the linear term. Because we neglect higher-order terms of the Taylorseries expansion, these neglected terms must be small enough; that is, the variablesdeviate only slightly from the operating condition. (Otherwise, the result will beinaccurate.)
Linear Approximation of Nonlinear Mathematical Models. To obtain a linear
mathematical model for a nonlinear system, we assume that the variables deviate onlyslightly from some operating condition. Consider a system whose input is x(t) and out-
put is y(t). The relationship between y(t) andx(t) is given by
(2–42)
If the normal operating condition corresponds to then Equation (2–42) may be
expanded into a Taylor series about this point as follows:
(2–43) =f(x
–)+df
dx(x-x–)+1
2!d2f
dx2(x-x–)2+py=f(x)x–,y–,y=f(x)
44
Chapter 2 / Mathematical Modeling of Control Systems
where the derivatives are evaluated at If the variation 
is small, we may neglect the higher-order terms in Then Equation (2–43) may be
written as
(2–44)
where
Equation (2–44) may be rewritten as
(2–45)
which indicates that is proportional to Equation (2–45) gives a linear math-
ematical model for the nonlinear system given by Equation (2–42) near the operating
point
Next, consider a nonlinear system whose output yis a function of two inputs x
1
and
x
2
,so that
(2–46)
To obtain a linear approximation to this nonlinear system, we may expand Equation (2–46)
into a Taylor series about the normal operating point Then Equation (2–46)
becomes
where the partial derivatives are evaluated at Near the normal oper-
ating point, the higher-order terms may be neglected.The linear mathematical model of
this nonlinear system in the neighborhood of the normal operating condition is then
given by
y-y
–
=K
1
Ax
1
-x
–
1
B+K
2
Ax
2
-x
–
2
Bx
2
=x
–
2
 
. x
1
=x
–
1
 
,+0
2
f
0x
2
2
Ax
2
-x
–
2
B
2
d
+p+1
2!
c
0
2
f
0x
2
1
Ax
1
-x
–
1
B
2
+20
2
f
0x
1
 
0x
2
Ax
1
-x
–
1
BAx
2
-x
–
2
By=fAx
–
1
 
,x
–
2
B+
c
0f
0x
1
Ax
1
-x
–
1
B+0f
0x
2
Ax
2
-x
–
2
B
d
x
–
1
 
,x
–
2
 
.y=fAx
1
 
,x
2
By=y
–
. x=x
–
,x-x
–
. y-y
–
y-y
–
=K(x -x
–
)K=df
dx
2
x=x
–
 y
–
=f(x
–
)y=y
–
+K(x -x
–
)x-x
–
.x-x
–
x=x
–
. d
2
f/H20862dx
2
,p df/H20862dx,
Openmirrors.com
Section 2–7 / Linearization of Nonlinear Mathematical Models 45where
The linearization technique presented here is valid in the vicinity of the operating
condition. If the operating conditions vary widely, however, such linearized equations arenot adequate, and nonlinear equations must be dealt with. It is important to rememberthat a particular mathematical model used in analysis and design may accurately rep-resent the dynamics of an actual system for certain operating conditions, but may not beaccurate for other operating conditions.
EXAMPLE 2–5
Linearize the nonlinear equation
z=xy
in the region 5 /H11349x/H113497, 10 /H11349y/H1134912. Find the error if the linearized equation is used to calcu-
late the value of zwhen x=5, y=10.
Since the region considered is given by 5 /H11349x/H113497, 10 /H11349y/H1134912, choose Then
Let us obtain a linearized equation for the nonlinear equation near a point
Expanding the nonlinear equation into a Taylor series about point and neglecting
the higher-order terms, we have
where
Hence the linearized equation is
z-66=11(x-6)+6(y-11)
or
z=11x+6y-66
When x=5, y=10, the value of zgiven by the linearized equation is
z=11x+6y-66=55+60-66=49
The exact value of zisz=xy=50. The error is thus 50-49=1. In terms of percentage, the
error is 2 %.b=0(xy)
0y2
x=x–,y=y–=x–=6a=0(xy)
0x2
x=x–,y=y–=y–=11z-z–=aAx-x–B+bAy-y–By=y–x=x–,y–=11.x–=6, z–=x–y–=66.y–=11. x–=6,K2=0f
0x22
x1=x–
1 ,x2=x–
2K1=0f
0x12
x1=x–
1 ,x2=x–
2y–=fAx–
1 ,x–
2B
46
Chapter 2 / Mathematical Modeling of Control Systems
EXAMPLE PROBLEMS AND SOLUTIONS
A–2–1. Simplify the block diagram shown in Figure 2–17.
Solution. First, move the branch point of the path involving H
1
outside the loop involving H
2
,a s
shown in Figure 2–18(a). Then eliminating two loops results in Figure 2–18(b). Combining two
blocks into one gives Figure 2–18(c).
A–2–2. Simplify the block diagram shown in Figure 2–19. Obtain the transfer function relating C(s) and
R(s).
R(s) C(s)
GH
1
H
2
+–
++
Figure 2–17
Block diagram of a
system.
R(s) C(s)
R(s) C(s)
C(s)G
H
2
(a)
(b)
(c)H
1
G
G
1 + GH
2
R(s)1 +H
1
G
G+ H
1
1 + GH
2
+–
++
Figure 2–18
Simplified block
diagrams for the
system shown in
Figure 2–17.
G
1
G
2
R(s) C(s) X(s)
++
++
Figure 2–19
Block diagram of a
system.
Openmirrors.com
Example Problems and Solutions 47G1 G2R(s) C(s)
G2R(s) C(s)
G1+ 1
R(s) C(s)
G1G2+G2+ 1(a)
(b)
(c)++++
++
Figure 2–20
Reduction of theblock diagram shown
in Figure 2–19.
Solution. The block diagram of Figure 2–19 can be modified to that shown in Figure 2–20(a).
Eliminating the minor feedforward path, we obtain Figure 2–20(b), which can be simplified toFigure 2–20(c). The transfer function C(s)/R(s) is thus given by
The same result can also be obtained by proceeding as follows: Since signal X(s) is the sum
of two signals G
1R(s) andR(s), we have
The output signal C(s) is the sum of G2X(s) andR(s). Hence
And so we have the same result as before:
A–2–3. Simplify the block diagram shown in Figure 2–21. Then obtain the closed-loop transfer function
C(s)/R(s).C(s)
R(s)=G1 G2+G2+1C(s) =G2 X(s) +R(s) =G2CG1 R(s) +R(s)D+R(s)X(s) =G1 R(s) +R(s)C(s)
R(s)=G1 G2+G2+1
G1 G2H3
G3 G4
H2 H1+–++ +–R(s) C(s)
Figure 2–21
Block diagram of a
system.
48
Chapter 2 / Mathematical Modeling of Control Systems
G
1
G
1
G
2
H
3
G
4
G
3
G
4
H
2
H
1
++
++
+–
+–R(s)
R(s) C(s)
C(s)
H
3
G
1
G
4
G
1
G
2
1+G
1
G
2
H
1
R(s) C(s)
G
1
G
2
G
3
G
4
1+G
1
G
2
H
1
+G
3
G
4
H
2
–G
2
G
3
H
3
+G
1
G
2
G
3
G
4
H
1
H
2
G
3
G
4
1+G
3
G
4
H
2
1
(a)
(b)
(c)
Figure 2–22
Successive
reductions of the
block diagram shown
in Figure 2–21.
G
1
G
p
++
+–
++
G
f
C(s)D(s)
R(s) E(s) U(s)
H
G
c
Figure 2–23
Control system with
reference input and
disturbance input.Solution. First move the branch point between G
3
andG
4
to the right-hand side of the loop con-
taining G
3
,G
4
, and H
2
.Then move the summing point between G
1
and G
2
to the left-hand side
of the first summing point. See Figure 2–22(a). By simplifying each loop, the block diagram can
be modified as shown in Figure 2–22(b). Further simplification results in Figure 2–22(c), from
which the closed-loop transfer function C(s)/R(s) is obtained as
A–2–4. Obtain transfer functions C(s)/R(s) andC(s)/D(s) of the system shown in Figure 2–23.
Solution. From Figure 2–23 we have
(2–47)
(2–48)
(2–49)  E(s) =R(s) -HC(s) C(s) =G
p
CD(s) +G
1
 
U(s)D U(s) =G
f
 
R(s) +G
c
 
E(s)C(s)
R(s)=G
1
 
G
2
 
G
3
 
G
4
1+G
1
 
G
2
 
H
1
+G
3
 
G
4
 
H
2
-G
2
 
G
3
 
H
3
+G
1
 
G
2
 
G
3
 
G
4
 
H
1
 
H
2
Openmirrors.comOpenmirrors.com
Example Problems and Solutions 49By substituting Equation (2–47) into Equation (2–48), we get
(2–50)
By substituting Equation (2–49) into Equation (2–50), we obtain
Solving this last equation for C(s), we get
Hence
(2–51)
Note that Equation (2–51) gives the response C(s) when both reference input R(s) and distur-
bance input D(s) are present.
To find transfer function C(s)/R(s), we let D(s)=0 in Equation (2–51). Then we obtain
Similarly, to obtain transfer function C(s)/D(s), we let R(s)=0 in Equation (2–51). Then
C(s)/D(s) can be given by
A–2–5. Figure 2–24 shows a system with two inputs and two outputs. Derive C1(s)/R1(s),C1(s)/R2(s),
C2(s)/R1(s),andC2(s)/R2(s).(In deriving outputs for R1(s),assume that R2(s)is zero, and vice
versa.)C(s)
D(s)=Gp
1+G1 Gp Gc HC(s)
R(s)=G1 GpAGf+GcB
1+G1 Gp Gc HC(s) =Gp D(s) +G1 GpAGf+GcBR(s)
1+G1 Gp Gc HC(s) +G1 Gp Gc HC(s) =Gp D(s) +G1 GpAGf+GcBR(s)C(s) =Gp D(s) +G1 GpEGf R(s) +GcCR(s) -HC(s)DFC(s) =Gp D(s) +G1 GpCGf R(s) +Gc E(s)D
G1C1
C2R1
R2G3
G4+−
+−G2
Figure 2–24
System with twoinputs and twooutputs.
50
Chapter 2 / Mathematical Modeling of Control Systems
Solution. From the figure, we obtain
(2–52)
(2–53)
By substituting Equation (2–53) into Equation (2–52), we obtain
(2–54)
By substituting Equation (2–52) into Equation (2–53), we get
(2–55)
Solving Equation (2–54) for C
1
,we obtain
(2–56)
Solving Equation (2–55) for C
2
gives
(2–57)
Equations (2–56) and (2–57) can be combined in the form of the transfer matrix as follows:
Then the transfer functions C
1
(s)/R
1
(s),C
1
(s)/R
2
(s),C
2
(s)/R
1
(s)andC
2
(s)/R
2
(s)can be obtained
as follows:
Note that Equations (2–56) and (2–57) give responses C
1
andC
2
,respectively, when both inputs
R
1
andR
2
are present.
Notice that when R
2
(s)=0, the original block diagram can be simplified to those shown in
Figures 2–25(a) and (b). Similarly, when R
1
(s)=0, the original block diagram can be simplified
to those shown in Figures 2–25(c) and (d). From these simplified block diagrams we can also ob-
tain C
1
(s)/R
1
(s),C
2
(s)/R
1
(s),C
1
(s)/R
2
(s),andC
2
(s)/R
2
(s),as shown to the right of each corre-
sponding block diagram. C
2
(s)
R
1
(s)=- G
1
 
G
2
 
G
4
1-G
1
 
G
2
 
G
3
 
G
4
,
  
 C
2
(s)
R
2
(s)=G
4
1-G
1
 
G
2
 
G
3
 
G
4
 C
1
(s)
R
1
(s)=G
1
1-G
1
 
G
2
 
G
3
 
G
4
,
  
 C
1
(s)
R
2
(s)=- G
1
 
G
3
 
G
4
1-G
1
 
G
2
 
G
3
 
G
4
B
C
1
C
2
R
=
D
G
1
1-G
1
 
G
2
 
G
3
 
G
4
-G
1
 
G
2
 
G
4
1-G
1
 
G
2
 
G
3
 
G
4
-G
1
 
G
3
 
G
4
1-G
1
 
G
2
 
G
3
 
G
4
G
4
1-G
1
 
G
2
 
G
3
 
G
4
TB
R
1
R
2
R
C
2
=-G
1
 
G
2
 
G
4
 
R
1
 
+G
4
 
R
2
1-G
1
 
G
2
 
G
3
 
G
4
C
1
=G
1
 
R
1
-G
1
 
G
3
 
G
4
 
R
2
1-G
1
 
G
2
 
G
3
 
G
4
C
2
=G
4
CR
2
-G
2
 
G
1
AR
1
-G
3
 
C
2
BDC
1
=G
1
CR
1
-G
3
 
G
4
AR
2
-G
2
 
C
1
BD C
2
=G
4
AR
2
-G
2
 
C
1
B C
1
=G
1
AR
1
-G
3
 
C
2
B
Openmirrors.com
Example Problems and Solutions 51+–R1 C1
R1C1
1–G1G2G3G4G1G1
G3 G4 –G2
+–R1 C2
G3G1 –G2 G4=
+–R2 C2
R2C2
1–G1G2G3G4G4G4
G2 G1 –G3=R1C2
1–G1G2G3G4–G1G2G4=
+–R2 C1
G2G4 –G3 G1R2C1
1–G1G2G3G4–G1G3G4=(a)
(b)
(c)
(d)Figure 2–25
Simplified blockdiagrams and
corresponding
closed-loop transferfunctions.
A–2–6. Show that for the differential equation system
(2–58)
state and output equations can be given, respectively, by
(2–59)
and
(2–60)
where state variables are defined by
 x
3=y$-b0 u$-b1 u#-b2 u=x#
2-b2 u x2=y#-b0 u#-b1 u=x#
1-b1 u x1=y-b0 uy=[1 0 0]Cx1
x2
x3S+b0 uCx#
1
x#
2
x#
3S=C0
0
-a31
0
-a20
1
-a1SCx1
x2
x3S+Cb1
b2
b3Suy%+a1 y$+a2 y#+a3 y=b0 u%+b1 u$+b2 u#+b3 u
52
Chapter 2 / Mathematical Modeling of Control Systems
and
Solution. From the definition of state variables x
2
andx
3
,we have
(2–61)
(2–62)
To derive the equation for we first note from Equation (2–58) that
Since
we have
Hence, we get
(2–63)
Combining Equations (2–61), (2–62), and (2–63) into a vector-matrix equation, we obtain Equa-
tion (2–59). Also, from the definition of state variable x
1
,we get the output equation given by
Equation (2–60).
A–2–7. Obtain a state-space equation and output equation for the system defined by
Solution. From the given transfer function, the differential equation for the system is
Comparing this equation with the standard equation given by Equation (2–33), rewritten
y%+a
1
 
y$+a
2
 
y#+a
3
 
y=b
0
 
u%+b
1
 
u$+b
2
u#+b
3
 
uy%+4y$+5y#+2y=2u%+u$+u#+2uY(s)
U(s)=2s
3
+s
2
+s+2
s
3
+4s
2
+5s+2x#
3
=-a
3
 
x
1
-a
2
 
x
2
-a
1
 
x
3
+b
3
 
u=-a
1
 
x
3
-a
2
 
x
2
-a
3
 
x
1
+b
3
 
u=-a
1
 
x
3
-a
2
 
x
2
-a
3
 
x
1
+Ab
3
-a
1
 
b
2
-a
2
 
b
1
-a
3
 
b
0
Bu+Ab
2
-b
2
-a
1
 
b
1
-a
2
 
b
0
Bu#+Ab
3
-a
1
 
b
2
-a
2
 
b
1
-a
3
 
b
0
Bu=-a
1
 
x
3
-a
2
 
x
2
-a
3
 
x
1
+Ab
0
-b
0
Bu%+Ab
1
-b
1
-a
1
 
b
0
Bu$+b
0
 
u%+b
1
 
u$+b
2
 
u#+b
3
 
u-b
0
 
u%-b
1
 
u$-b
2
 
u#-a
2
Ay#-b
0
 
u#-b
1
 
uB-a
2
 
b
0
 
u#-a
2
 
b
1
 
u-a
3
Ay-b
0
 
uB-a
3
 
b
0
 
u=-a
1
Ay$-b
0
 
u$-b
1
 
u#-b
2
 
uB-a
1
 
b
0
 
u$-a
1
 
b
1
 
u#-a
1
 
b
2
 
u=A-a
1
 
y$-a
2
 
y#-a
3
 
yB+b
0
 
u%+b
1
 
u$+b
2
 
u#+b
3
 
u-b
0
 
u%-b
1
 
u$-b
2
 
u#x#
3
=y%-b
0
 
u%-b
1
 
u$-b
2
 
u#x
3
=y$-b
0
 
u$-b
1
 
u#-b
2
 
uy%=-a
1
 
y$-a
2
 
y#-a
3
 
y+b
0
 
u%+b
1
 
u$+b
2
 
u#+b
3
 
ux#
3
 
, x#
2
=x
3
+b
2
 
u x#
1
=x
2
+b
1
 
u b
3
=b
3
-a
1
 
b
2
-a
2
 
b
1
-a
3
 
b
0
 b
2
=b
2
-a
1
 
b
1
-a
2
 
b
0
 b
1
=b
1
-a
1
 
b
0
 b
0
=b
0
Openmirrors.com
Example Problems and Solutions 53we find
Referring to Equation (2–35), we have
Referring to Equation (2–34), we define
Then referring to Equation (2–36),
Hence, the state-space representation of the system is
This is one possible state-space representation of the system. There are many (infinitely many)
others. If we use MATLAB, it produces the following state-space representation:
See MATLAB Program 2-4. (Note that all state-space representations for the same system are
equivalent.)Cx1
x2
x3S+2u  y=[-7 -9 -2] Cx#
1
x#
2
x#
3S=C-4
10-5
01-2
00
SCx1
x2
x3S+C100
Suy=[1  0  0]Cx1
x2
x3S+2uCx#
1
x#
2
x#
3S=C0
0
-21
0
-50
1
-4SCx1
x2
x3S+C-7
19
-43Su =-2x1-5x2-4x3-43u x#
3=-a3 x1-a2 x2-a1 x3+b3 u x#
2=x3+19u x#
1=x2-7u x3=x#
2-b2 u=x#
2-19u x2=x#
1-b1 u=x#
1+7u x1=y-b0 u=y-2u =2-4*19-5*(-7)-2*2=-43 b3=b3-a1 b2-a2 b1-a3 b0 b2=b2-a1 b1-a2 b0=1-4*(-7)-5*2=19 b1=b1-a1 b0=1-4*2=-7 b0=b0=2 b0=2,   b1=1,   b2=1,  b3=2 a1=4,   a2=5,   a3=2
54
Chapter 2 / Mathematical Modeling of Control Systems
A–2–8. Obtain a state-space model of the system shown in Figure 2–26.
Solution. The system involves one integrator and two delayed integrators. The output of each
integrator or delayed integrator can be a state variable. Let us define the output of the plant as
x
1
,the output of the controller as x
2
,and the output of the sensor as x
3
.Then we obtain
Y(s) =X
1
(s)X
3
(s)
X
1
(s)=1
s+1X
2
(s)
U(s) -X
3
(s)=1
sX
1
(s)
X
2
(s)=10
s+5
U(s) Y(s)1
s
Controller Plant
Sensor
10
s+ 5
1
s+ 1
+–
Figure 2–26
Control system.
MATLAB Program 2–4
num = [2  1  1  2];
den = [1  4  5  2];
[A,B,C,D] = tf2ss(num,den)
A=
-4 -5 -2
100
010
B =
1
0
0
C =
-7 -9 -2
D =
2
Openmirrors.com
Example Problems and Solutions 55which can be rewritten as
By taking the inverse Laplace transforms of the preceding four equations, we obtain
Thus, a state-space model of the system in the standard form is given by
It is important to note that this is not the only state-space representation of the system. Infinite-
ly many other state-space representations are possible. However, the number of state variables isthe same in any state-space representation of the same system. In the present system, the num-ber of state variables is three, regardless of what variables are chosen as state variables.
A–2–9. Obtain a state-space model for the system shown in Figure 2–27(a).
Solution. First, notice that (as+b)/s
2involves a derivative term. Such a derivative term may be
avoided if we modify (as+b)/s2as
Using this modification, the block diagram of Figure 2–27(a) can be modified to that shown in
Figure 2–27(b).
Define the outputs of the integrators as state variables, as shown in Figure 2–27(b).Then from
Figure 2–27(b) we obtain
which may be modified to
 Y(s) =X1(s) sX2(s)=-bX1(s)+bU(s) sX1(s)=X2(s)+aCU(s) -X1(s)DY(s) =X1(s)X2(s)
U(s) -X1(s)=b
sX1(s)
X2(s)+aCU(s) -X1(s)D=1
sas+b
s2=aa+b
sb1
sCx1
x2
x3S  y=[1 0 0] Cx#
1
x#
2
x#
3S=C-5
0110
000
-1
-1
SCx1
x2
x3S+C0
10Su y=x1 x#
3=x1-x3 x#
2=-x3+u x#
1=-5x1+10x2 Y(s) =X1(s) sX3(s)=X1(s)-X3(s) sX2(s)=-X3(s)+U(s) sX1(s)=-5X1(s)+10X2(s)
56
Chapter 2 / Mathematical Modeling of Control Systems
Taking the inverse Laplace transforms of the preceding three equations, we obtain
Rewriting the state and output equations in the standard vector-matrix form, we obtain
A–2–10. Obtain a state-space representation of the system shown in Figure 2–28(a).
Solution. In this problem, first expand (s+z)/(s+p) into partial fractions.
Next, convert K/Cs(s+a)Dinto the product of K/s and1/(s+a). Then redraw the block diagram,
as shown in Figure 2–28(b). Defining a set of state variables, as shown in Figure 2–28(b), we ob-
tain the following equations:
 y=x
1
 x#
3
=-(z-p)x
1
-px
3
+(z-p)u x#
2
=-Kx
1
+Kx
3
+Ku x#
1
=-ax
1
+x
2
s+z
s+p=1+z-p
s+p y=[1
 
0]
B
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
-a
-b1
0
RB
x
1
x
2
R
+
B
a
b
R
u y=x
1
 x#
2
=-bx
1
+bu x#
1
=-ax
1
+x
2
+au
U(s) Y(s)
as+b1
s
2
(a)
(b)a
U(s) Y(s)b
s
1
s
X
1
(s) X
2
(s)
+–
+–
++
Figure 2–27
(a) Control system;
(b) modified block
diagram.
Openmirrors.com
Example Problems and Solutions 57Rewriting gives
Notice that the output of the integrator and the outputs of the first-order delayed integrators
C1/(s+a) and(z-p)/(s+p)Dare chosen as state variables. It is important to remember that
the output of the block (s+z)/(s+p) in Figure 2–28(a) cannot be a state variable, because this
block involves a derivative term, s+z.
A–2–11. Obtain the transfer function of the system defined by
Solution. Referring to Equation (2–29), the transfer function G(s) is given by
In this problem, matrices A,B,C, and Dare
A=C-1
001
-1
00
1
-2S,  B=C0
01S,  C=[1 0 0],  D=0G(s) =C(sI-A)-1B+Dy=[1  0  0]Cx1
x2
x3SCx#
1
x#
2
x#
3S=C-1
001
-1
00
1
-2SCx1
x2
x3S+C0
01Suy=[1 0 0]Cx1
x2
x3SCx#
1
x#
2
x#
3S=C-a
-K
-(z-p)1
000
K
-pSCx1
x2
x3S+C0
K
z-pSuuy
uy(a)
(b)s + z
s + pK
s(s + a)
z – p
s + pK
s1
s + ax1 x2 x3+–
+–++Figure 2–28
(a) Control system;(b) block diagram
defining state
variables for thesystem.
58
Chapter 2 / Mathematical Modeling of Control Systems
Hence
A–2–12. Consider a system with multiple inputs and multiple outputs.When the system has more than one
output, the MATLAB command
[NUM,den] = ss2tf(A,B,C,D,iu)
produces transfer functions for all outputs to each input. (The numerator coefficients are returned
to matrix NUM with as many rows as there are outputs.)
Consider the system defined by
This system involves two inputs and two outputs. Four transfer functions are involved:
and (When considering input u
1
,we assume that input u
2
is zero and vice versa.)
Solution. MATLAB Program 2-5 produces four transfer functions.
This is the MATLAB representation of the following four transfer functions:
Y
2
(s)
U
2
(s)=s-25
s
2
+4s+25 Y
1
(s)
U
2
(s)=s+5
s
2
+4s+25,Y
2
(s)
U
1
(s)=-25
s
2
+4s+25 Y
1
(s)
U
1
(s)=s+4
s
2
+4s+25,Y
2
(s) /H20862U
2
(s). Y
1
(s) /H20862U
2
(s), Y
2
(s) /H20862U
1
(s),Y
1
(s) /H20862U
1
(s),
B
y
1
y
2
R
=
B
1
00
1
RB
x
1
x
2
R
+
B
0
00
0
RB
u
1
u
2
RB
x#
1
x#
2
R
=
B
0
-251
-4
RB
x
1
x
2
R
+
B
1
01
1
RB
u
1
u
2
R
 =1
(s+1)
2
(s+2)=1
s
3
+4s
2
+5s+2 =[1
 
0
 
0]
F
1
s+1
0
01
(s+1)
2
1
s+1
01
(s+1)
2
(s+2)
1
(s+1)(s +2)
1
s+2
VC
0
0
1
S
 G(s) =[1
 
0
 
0]
C
s+1
0
0-1
s+1
00
-1
s+2
S
-1
C
0
0
1
S
Openmirrors.com
Example Problems and Solutions 59A–2–13. Linearize the nonlinear equation
in the region defined by 8 /H11349x/H1134910, 2 /H11349y/H113494.
Solution. Define
Then
where we choose 
Since the higher-order terms in the expanded equation are small, neglecting these higher-
order terms, we obtain
where
z–=x–2+4x–y–+6y–2=92+4*9*3+6*9=243K2=0f
0y2
x=x–,y=y–=4x–+12y–=4*9+12*3=72K1=0f
0x2
x=x–,y=y–=2x–+4y–=2*9+4*3=30z-z–=K1(x-x–)+K2(y-y–)x–=9, y–=3.z=f(x,y)=f(x–,y–)+c0f
0x(x-x–)+0f
0y(y-y–)d
x=x–,y=y–+pf(x, y) =z=x2+4xy +6y2z=x2+4xy +6y2MATLAB Program 2–5
A = [0    1;-25    -4];
B = [1    1;0    1];C = [1    0;0    1];D = [0    0;0    0];[NUM,den] = ss2tf(A,B,C,D,1)
NUM =
01 40 0 –25
den = 
14 2 5
[NUM,den] = ss2tf(A,B,C,D,2)
NUM =
0 1.0000 5.0000
0 1.0000 -25.0000
den =
14 2 5
60
Chapter 2 / Mathematical Modeling of Control Systems
Thus
Hence a linear approximation of the given nonlinear equation near the operating point is
z-30x -72y +243 =0z-243 =30(x -9)+72(y -3)
R(s) C(s)
G
1
G
2
G
3
H
1
H
2
H
3
+–
+–
+–
++
Figure 2–31
Block diagram of a system.B–2–1. Simplify the block diagram shown in Figure 2–29
and obtain the closed-loop transfer function C(s)/R(s).B–2–2. Simplify the block diagram shown in Figure 2–30
and obtain the closed-loop transfer function C(s)/R(s).
B–2–3. Simplify the block diagram shown in Figure 2–31
and obtain the closed-loop transfer function C(s)/R(s).
PROBLEMS
R(s) C(s)G
1
G
2
G
3
G
4
+–
+–
+
+
Figure 2–29
Block diagram of a system.
R(s) C(s)G
1
G
2
H
1
H
2
+–
++
+
–
Figure 2–30
Block diagram of a system.
Openmirrors.com
Problems 61C(s)D(s)
R(s)
Gc(s) Gp(s) +–++
Controller PlantFigure 2–32
Closed-loop system.B–2–4. Consider industrial automatic controllers whose
control actions are proportional, integral, proportional-plus-integral, proportional-plus-derivative, and proportional-plus-integral-plus-derivative. The transfer functions of thesecontrollers can be given, respectively, by
where U(s) is the Laplace transform of u(t), the controller
output, and E(s) the Laplace transform of e(t), the actuat- U(s)
E(s)=Kpa1+1
Ti s+Td sb U(s)
E(s)=KpA1+Td sB U(s)
E(s)=Kpa1+1
Ti sb U(s)
E(s)=Ki
s U(s)
E(s)=Kping error signal. Sketch u(t)-versus- tcurves for each of the
five types of controllers when the actuating error signal is
(a)e(t)= unit-step function
(b)e(t)= unit-ramp function
In sketching curves, assume that the numerical values of Kp,
Ki,and are given as
proportional gain =4
integral gain =2
integral time =2 sec
derivative time =0.8 sec
B–2–5. Figure 2–32 shows a closed-loop system with a ref-
erence input and disturbance input. Obtain the expressionfor the output C(s) when both the reference input and dis-
turbance input are present.
B–2–6. Consider the system shown in Figure 2–33. Derive
the expression for the steady-state error when both the ref-erence input R(s) and disturbance input D(s) are present.
B–2–7. Obtain the transfer functions C(s)/R(s) and
C(s)/D(s) of the system shown in Figure 2–34. T
d= Ti= Ki= Kp=Td Ti ,
C(s) R(s) E(s)D(s)
+–++G2(s) G1(s)
G2
H1G3G1 GcR(s) C(s)D(s)
+–+–++
H2Figure 2–33
Control system.
Figure 2–34
Control system.
62
Chapter 2 / Mathematical Modeling of Control Systems
B–2–8. Obtain a state-space representation of the system
shown in Figure 2–35.
B–2–9. Consider the system described by
Derive a state-space representation of the system.
B–2–10. Consider the system described by
Obtain the transfer function of the system. y=[1
 
0]
B
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
-4
3-1
-1
RB
x
1
x
2
R
+
B
1
1
R
uy%+3y$+2y#=u
uy s+z
s+p
1
s
2
+–
Figure 2–35
Control system.B–2–11. Consider a system defined by the following state-
space equations:
Obtain the transfer function G(s) of the system.
B–2–12. Obtain the transfer matrix of the system defined by
B–2–13. Linearize the nonlinear equation
z=x
2
+8xy+3y
2
in the region defined by 2 /H11349x/H113494, 10 /H11349y/H1134912.
B–2–14. Find a linearized equation for
y=0.2x
3
about a point x=2. 
B
y
1
y
2
R
=
B
1
00
10
0
RC
x
1
x
2
x
3
S
 
C
x#
1
x#
2
x#
3
S
=
C
0
0
-21
0
-40
1
-6
SC
x
1
x
2
x
3
S
+
C
0
0
10
1
0
SB
u
1
u
2
R
 y=[1
 
2]
B
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
-5
3-1
-1
RB
x
1
x
2
R
+
B
2
5
R
u
Openmirrors.com
3
63Mathematical Modeling 
of Mechanical Systems
and Electrical Systems
3–1 INTRODUCTION
This chapter presents mathematical modeling of mechanical systems and electrical
systems. In Chapter 2 we obtained mathematical models of a simple electrical circuitand a simple mechanical system. In this chapter we consider mathematical modelingof a variety of mechanical systems and electrical systems that may appear in controlsystems.
The fundamental law govering mechanical systems is Newton’s second law. In
Section 3–2 we apply this law to various mechanical systems and derive transfer-function models and state-space models.
The basic laws governing electrical circuits are Kirchhoff’s laws. In Section 3–3 we
obtain transfer-function models and state-space models of various electrical circuitsand operational amplifier systems that may appear in many control systems.
3–2 MATHEMATICAL MODELING 
OF MECHANICAL SYSTEMS
This section first discusses simple spring systems and simple damper systems. Then
we derive transfer-function models and state-space models of various mechanicalsystems.
64
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
EXAMPLE 3–1
Let us obtain the equivalent spring constants for the systems shown in Figures 3–1(a) and (b),
respectively.
For the springs in parallel [Figure 3–1(a)] the equivalent spring constant k
eq
is obtained
from
or
For the springs in series [Figure–3–1(b)], the force in each spring is the same. Thus
Elimination of yfrom these two equations results in
or
The equivalent spring constant k
eq
for this case is then found as
EXAMPLE 3–2
Let us obtain the equivalent viscous-friction coefficient for each of the damper systems shown
in Figures 3–2(a) and (b).An oil-filled damper is often called a dashpot.A dashpot is a device that
provides viscous friction, or damping. It consists of a piston and oil-filled cylinder.Any relative mo-
tion between the piston rod and the cylinder is resisted by the oil because the oil must flow around
the piston (or through orifices provided in the piston) from one side of the piston to the other.The
dashpot essentially absorbs energy.This absorbed energy is dissipated as heat, and the dashpot does
not store any kinetic or potential energy.b
eq
k
eq
=F
x=k
1
 
k
2
k
1
+k
2
=1
1
k
1
+1
k
2
k
2
 
x=F+k
2
k
1
F=k
1
+k
2
k
1
Fk
2
a
x-F
k
1
b
=Fk
1
 
y=F,
  
k
2
(x-y)=Fk
eq
=k
1
+k
2
k
1
 
x+k
2
 
x=F=k
eq
 
x
k
1
k
2
yx
F
(a) (b)
x
Fk
1
k
2
Figure 3–1
(a) System consisting
of two springs in
parallel;
(b) system consisting
of two springs in
series.
Openmirrors.com
Section 3–2 / Mathematical Modeling of Mechanical Systems 65(a) The force fdue to the dampers is
In terms of the equivalent viscous-friction coefficient beq, force fis given by
Hence
(b) The force fdue to the dampers is
(3–1)
where zis the displacement of a point between damper b1and damper b2.(Note that the
same force is transmitted through the shaft.) From Equation (3–1), we have
or
(3–2)
In terms of the equivalent viscous-friction coefficient beq,force fis given by
By substituting Equation (3–2) into Equation (3–1), we have
Thus,
Hence,
beq=b1 b2
b1+b2=1
1
b1+1
b2f=beq(y#-x#)=b1 b2
b1+b2(y#-x#) =b1 b2
b1+b2 (y#-x#) f=b2(y#-z#)=b2cy#- 1
b1+b2 Ab2y#+b1x#Bdf=beqAy#-x#Bz#=1
b1+b2Ab2 y#+b1 x#BAb1+b2Bz#=b2 y#+b1 x#f=b1(z#-x#)=b2 (y#-z#)beq=b1+b2f=beq(y#-x#)f=b1(y#-x#)+b2(y#-x#)=Ab1+b2B(y#-x#)x y
(a)b2
x y z
(b)b1b1
b2
Figure 3–2
(a) Two dampersconnected in parallel;
(b) two dampers
connected in series.
66
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
EXAMPLE 3–3
Consider the spring-mass-dashpot system mounted on a massless cart as shown in Figure 3–3. Let
us obtain mathematical models of this system by assuming that the cart is standing still for t<0 and
the spring-mass-dashpot system on the cart is also standing still for t<0. In this system, u(t) is the
displacement of the cart and is the input to the system.At t=0, the cart is moved at a constant speed,
or constant. The displacement y(t) of the mass is the output. (The displacement is relative to
the ground.) In this system, mdenotes the mass, bdenotes the viscous-friction coefficient, and kde-
notes the spring constant.We assume that the friction force of the dashpot is proportional to 
and that the spring is a linear spring; that is, the spring force is proportional to y-u.
For translational systems, Newton’s second law states that
where mis a mass, ais the acceleration of the mass, and is the sum of the forces acting on the
mass in the direction of the acceleration a.Applying Newton’s second law to the present system
and noting that the cart is massless, we obtain
or
This equation represents a mathematical model of the system considered. Taking the Laplace
transform of this last equation, assuming zero initial condition, gives
Taking the ratio of Y(s) toU(s) , we find the transfer function of the system to be
Such a transfer-function representation of a mathematical model is used very frequently in
control engineering.Transfer function =G(s) =Y(s)
U(s)=bs+k
ms
2
+bs+kAms
2
+bs+kBY(s) =(bs+k)U(s)md
2
y
dt
2
+bdy
dt+ky=bdu
dt+kumd
2
y
dt
2
=-b
a
dy
dt-du
dt
b
-k(y -u)gFma=aFy#-u#u#=
mu
y
k
bMassless cart
Figure 3–3
Spring-mass-
dashpot system
mounted on a cart.
Openmirrors.com
Section 3–2 / Mathematical Modeling of Mechanical Systems 67Next we shall obtain a state-space model of this system. We shall first compare the differen-
tial equation for this system
with the standard form
and identify a1, a2, b0, b1,andb2as follows:
Referring to Equation (3–35), we have
Then, referring to Equation (2–34), define
From Equation (2–36) we have
and the output equation becomes
or
(3–3)
and
(3–4)
Equations (3–3) and (3–4) give a state-space representation of the system. (Note that this is not
the only state-space representation.There are infinitely many state-space representations for thesystem.)y=[1  0]Bx1
x2RBx#
1
x#
2R=C0
-k
m1
-b
mSBx1
x2R+Db
m
k
m-ab
mb2Tuy=x1 x#
2=-a2 x1-a1 x2+b2 u=- k
m x1-b
m x2+ck
m-ab
mb2
du x#
1=x2+b1 u=x2+b
m u x2=x#
1-b1 u=x#
1-b
m u x1=y-b0 u=y b2=b2-a1 b1-a2 b0=k
m-ab
mb2 b1=b1-a1 b0=b
m b0=b0=0a1=b
m,  a2=k
m ,  b0=0,  b1=b
m ,  b2=k
my$+a1 y#+a2 y=b0 u$+b1 u#+b2 uy$+b
my#+k
my=b
mu#+k
mu
68
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
EXAMPLE 3–4
Obtain the transfer functions and of the mechanical system shown in
Figure 3–4.
The equations of motion for the system shown in Figure 3–4 are
Simplifying, we obtain
Taking the Laplace transforms of these two equations, assuming zero initial conditions, we obtain
(3–5)
(3–6)
Solving Equation (3–6) for and substituting it into Equation (3–5) and simplifying, we get
from which we obtain
(3–7)
From Equations (3–6) and (3–7) we have
(3–8)
Equations (3–7) and (3–8) are the transfer functions and respectively.
EXAMPLE 3–5
An inverted pendulum mounted on a motor-driven cart is shown in Figure 3–5(a).This is a model
of the attitude control of a space booster on takeoff. (The objective of the attitude control prob-
lem is to keep the space booster in a vertical position.) The inverted pendulum is unstable in that
it may fall over any time in any direction unless a suitable control force is applied. Here we considerX
2
(s) /H20862U(s), X
1
(s) /H20862U(s)X
2
(s)
U(s)=bs+k
2
Am
1
 
s
2
+bs+k
1
+k
2
BAm
2
 
s
2
+bs+k
2
+k
3
B-Abs+k
2
B
2
X
1
(s)
U(s)=m
2
 
s
2
+bs+k
2
+k
3
Am
1
 
s
2
+bs+k
1
+k
2
BAm
2
 
s
2
+bs+k
2
+k
3
B-Abs+k
2
B
2
 =Am
2
 
s
2
+bs+k
2
+k
3
BU(s) CAm
1
 
s
2
+bs+k
1
+k
2
BAm
2
 
s
2
+bs+k
2
+k
3
B-Abs+k
2
B
2
DX
1
(s)X
2
(s) Cm
2
 
s
2
+bs+Ak
2
+k
3
BDX
2
(s)=Abs+k
2
BX
1
(s) Cm
1
 
s
2
+bs+Ak
1
+k
2
BDX
1
(s)=Abs+k
2
BX
2
(s)+U(s) m
2
 
x$
2
+bx#
2
+Ak
2
+k
3
Bx
2
=bx#
1
+k
2
 
x
1
 m
1
 
x$
1
+bx#
1
+Ak
1
+k
2
Bx
1
=bx#
2
+k
2
 
x
2
+u m
2
 
x$
2
=-k
3
 
x
2
-k
2
Ax
2
-x
1
B-bAx#
2
-x#
1
B m
1
 
x$
1
=-k
1
 
x
1
-k
2
Ax
1
-x
2
B-bAx#
1
-x#
2
B+uX
2
(s) /H20862U(s) X
1
(s) /H20862U(s)
m
1
m
2
k
2
x
1
k
1
k
3
bu
x
2
Figure 3–4
Mechanical system.
Openmirrors.com
only a two-dimensional problem in which the pendulum moves only in the plane of the page.The
control force uis applied to the cart. Assume that the center of gravity of the pendulum rod is at
its geometric center. Obtain a mathematical model for the system.
Define the angle of the rod from the vertical line as u. Define also the (x, y) coordinates of
the center of gravity of the pendulum rod as AxG,yGB. Then
yG=l cosuxG=x+lsinu
Section 3–2 / Mathematical Modeling of Mechanical Systems 69MPy
x
uOx
(a)mg/H5129
/H5129/H5129cosuu
(b)u
V
VH H
My
x
uOx
mg/H5129/H5129
Figure 3–5
(a) Invertedpendulum system;
(b) free-body
diagram.
70
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
To derive the equations of motion for the system, consider the free-body diagram shown in 
Figure 3–5(b). The rotational motion of the pendulum rod about its center of gravity can be
described by
(3–9)
where Iis the moment of inertia of the rod about its center of gravity.
The horizontal motion of center of gravity of pendulum rod is given by
(3–10)
The vertical motion of center of gravity of pendulum rod is
(3–11)
The horizontal motion of cart is described by
(3–12)
Since we must keep the inverted pendulum vertical, we can assume that u(t)and are
small quantities such that sin u/H11216u, cosu=1 , and Then, Equations (3–9) through (3–11)
can be linearized. The linearized equations are
(3–13)
(3–14)
(3–15)
From Equations (3–12) and (3–14), we obtain
(3–16)
From Equations (3–13), (3–14), and (3–15), we have
or
(3–17)
Equations (3–16) and (3–17) describe the motion of the inverted-pendulum-on-the-cart system.
They constitute a mathematical model of the system.
EXAMPLE 3–6
Consider the inverted-pendulum system shown in Figure 3–6. Since in this system the mass is con-
centrated at the top of the rod, the center of gravity is the center of the pendulum ball. For this
case, the moment of inertia of the pendulum about its center of gravity is small, and we assume
I=0 in Equation (3–17). Then the mathematical model for this system becomes as follows:
(3–18)
(3–19)
Equations (3–18) and (3–19) can be modified to
(3–20)
(3–21) Mx$=u-mguMlu$
=(M +m)gu-u ml
2
u$+mlx$=mglu (M +m)x$+mlu$=uAI+ml
2
Bu$+mlx$=mglu =mglu-l(mx$+mlu$) Iu$
=mglu-Hl(M +m)x$+mlu$
=u0=V-mgm(x$+lu$)=HIu$=Vlu-Hluu
#
2
=0.u#(t)Md
2
x
dt
2
=u-Hmd
2
dt
2
(lcosu)=V-mgmd
2
dt
2
(x+lsinu)=HIu$
=Vlsinu-Hlcosu
Openmirrors.com
Section 3–2 / Mathematical Modeling of Mechanical Systems 71Equation (3–20) was obtained by eliminating from Equations (3–18) and (3–19). Equation
(3–21) was obtained by eliminating from Equations (3–18) and (3–19). From Equation (3–20)we obtain the plant transfer function to be
The inverted-pendulum plant has one pole on the negative real axis and
another on the positive real axis Hence, the plant is open-loop unstable.
Define state variables x
1, x2, x3,andx4by
Note that angle uindicates the rotation of the pendulum rod about point P, and xis the location
of the cart. If we consider uandxas the outputs of the system, then
(Notice that both uandxare easily measurable quantities.) Then, from the definition of the state
variables and Equations (3–20) and (3–21), we obtain
 x#
4=-m
Mgx1+1
Mu x#
3=x4 x#
2=M+m
Ml gx1-1
Ml u x#
1=x2y=By1
y2R=Bu
xR=Bx1
x3R x4=x# x3=x x2=u# x1=uCs=A1M+m/H208621MlB1gD.Cs=-A1M+m/H208621MlB1gD=1
Mlas+AM+m
Mlgbas-AM+m
MlgbQ  (s)
-U(s)=1
Mls2-(M +m)gu$x$0
MPz
umgm/H5129 sin u
xx
/H5129 cos u
/H5129u
Figure 3–6
Inverted-pendulumsystem.
72
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
In terms of vector-matrix equations, we have
(3–22)
(3–23)
Equations (3–22) and (3–23) give a state-space representation of the inverted-pendulum system.
(Note that state-space representation of the system is not unique. There are infinitely many such
representations for this system.)
B
y
1
y
2
R
=
B
1000
0010
RD
x
1
x
2
x
3
x
4
TD
x#
1
x#
2
x#
3
x#
4
T
=
F
0
M+m
Mlg
0
-m
Mg1
0
0
00
0
0
00
0
1
0
VD
x
1
x
2
x
3
x
4
T
+
F
0
-1
Ml
0
1
M
V
u
3–3 MATHEMATICAL MODELING OF ELECTRICAL SYSTEMS
Basic laws governing electrical circuits are Kirchhoff’s current law and voltage law.
Kirchhoff’s current law (node law) states that the algebraic sum of all currents entering and
leaving a node is zero. (This law can also be stated as follows: The sum of currents enter-
ing a node is equal to the sum of currents leaving the same node.) Kirchhoff’s voltage law
(loop law) states that at any given instant the algebraic sum of the voltages around any loop
in an electrical circuit is zero. (This law can also be stated as follows: The sum of the volt-
age drops is equal to the sum of the voltage rises around a loop.) A mathematical model
of an electrical circuit can be obtained by applying one or both of Kirchhoff’s laws to it.
This section first deals with simple electrical circuits and then treats mathematical
modeling of operational amplifier systems.
LRCCircuit. Consider the electrical circuit shown in Figure 3–7. The circuit con-
sists of an inductance L(henry), a resistance R(ohm), and a capacitance C(farad).
Applying Kirchhoff’s voltage law to the system, we obtain the following equations:
(3–24)
(3–25)  1
C 
3i dt=e
o
 L di
dt+Ri+1
C 
3i dt=e
i
L
e
o
R
C e
i
i
Figure 3–7
Electrical circuit.
Openmirrors.com
Section 3–3 / Mathematical Modeling of Electrical Systems 73Equations (3–24) and (3–25) give a mathematical model of the circuit.
A transfer-function model of the circuit can also be obtained as follows: Taking the
Laplace transforms of Equations (3–24) and (3–25), assuming zero initial conditions,we obtain
Ife
iis assumed to be the input and eothe output, then the transfer function of this system
is found to be
(3–26)
A state-space model of the system shown in Figure 3–7 may be obtained as follows: First,
note that the differential equation for the system can be obtained from Equation (3–26) as
Then by defining state variables by
and the input and output variables by
we obtain
and
These two equations give a mathematical model of the system in state space.
Transfer Functions of Cascaded Elements. Many feedback systems have com-
ponents that load each other. Consider the system shown in Figure 3–8. Assume that ei
is the input and eois the output. The capacitances C1and C2are not charged initially.y=[1  0]Bx1
x2RBx#
1
x#
2R=C0
-1
LC1
-R
LSBx1
x2R+C0
1
LCSu y=eo=x1 u=ei x2=e#
o x1=eoe$
o+R
Le#
o+1
LCeo=1
LCeiEo(s)
Ei(s)=1
LCs2+RCs +1 1
C 1
s I(s) =Eo(s) LsI(s) +RI(s) +1
C 1
s I(s) =Ei(s)
R1
C1eoR2
C2ei
i1 i2 Figure 3–8
Electrical system.
74
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
It will be shown that the second stage of the circuit ( R
2
C
2
portion) produces a loading
effect on the first stage ( R
1
C
1
portion). The equations for this system are
(3–27)
and
(3–28)
(3–29)
Taking the Laplace transforms of Equations (3–27) through (3–29), respectively, using
zero initial conditions, we obtain
(3–30)
(3–31)
(3–32)
Eliminating I
1
(s)from Equations (3–30) and (3–31) and writing E
i
(s)in terms of I
2
(s),
we find the transfer function between E
o
(s)andE
i
(s) to be
(3–33)
The term R
1
C
2
sin the denominator of the transfer function represents the interaction
of two simple RCcircuits. Since the two roots
of the denominator of Equation (3–33) are real.
The present analysis shows that, if two RCcircuits are connected in cascade so
that the output from the first circuit is the input to the second, the overall transfer
function is not the product of and The reason for this
is that, when we derive the transfer function for an isolated circuit, we implicitly as-
sume that the output is unloaded. In other words, the load impedance is assumed to
be infinite, which means that no power is being withdrawn at the output.When the sec-
ond circuit is connected to the output of the first, however, a certain amount of power
is withdrawn, and thus the assumption of no loading is violated.Therefore, if the trans-
fer function of this system is obtained under the assumption of no loading, then it is
not valid. The degree of the loading effect determines the amount of modification of
the transfer function.1/H20862AR
2
 
C
2
 
s+1B. 1/H20862AR
1
 
C
1
 
s+1BAR
1
 
C
1
+R
2
 
C
2
+R
1
 
C
2
B
2
74R
1
 
C
1
 
R
2
 
C
2
 
, =1
R
1
 
C
1
 
R
2
 
C
2
 
s
2
+AR
1
 
C
1
+R
2
 
C
2
+R
1
 
C
2
Bs+1 E
o
(s)
E
i
(s)=1
AR
1
 
C
1
 
s+1BAR
2
 
C
2
 
s+1B+R
1
 
C
2
 
s 1
C
2
 
s I
2
(s)=E
o
(s) 1
C
1
 
sCI
2
(s)-I
1
(s)D+R
2
 
I
2
(s)+1
C
2
 
s I
2
(s)=0 1
C
1
 
sCI
1
(s)-I
2
(s)D+R
1
 
I
1
(s)=E
i
(s) 1
C
2
 
3i
2
dt=e
o
 1
C
1
 
3Ai
2
-i
1
Bdt+R
2
 
i
2
+1
C
2
 
3i
2
 dt=01
C
1
3Ai
1
-i
2
Bdt+R
1
 
i
1
=e
i
Openmirrors.comOpenmirrors.com
Section 3–3 / Mathematical Modeling of Electrical Systems 75Complex Impedances. In deriving transfer functions for electrical circuits, we
frequently find it convenient to write the Laplace-transformed equations directly,without writing the differential equations. Consider the system shown in Figure 3–9(a).In this system, Z
1and Z2represent complex impedances. The complex impedance 
Z(s) of a two-terminal circuit is the ratio of E(s) , the Laplace transform of the 
voltage across the terminals, to I(s), the Laplace transform of the current through 
the element, under the assumption that the initial conditions are zero, so thatZ(s)=E(s)/I(s). If the two-terminal element is a resistance R, capacitance C,o r
inductance L, then the complex impedance is given by R,1/Cs , or Ls, respectively. If
complex impedances are connected in series, the total impedance is the sum of theindividual complex impedances.
Remember that the impedance approach is valid only if the initial conditions
involved are all zeros. Since the transfer function requires zero initial conditions, theimpedance approach can be applied to obtain the transfer function of the electricalcircuit. This approach greatly simplifies the derivation of transfer functions of elec-trical circuits.
Consider the circuit shown in Figure 3–9(b).Assume that the voltages e
iandeoare
the input and output of the circuit, respectively. Then the transfer function of thiscircuit is
For the system shown in Figure 3–7,
Hence the transfer function E
o(s)/Ei(s)can be found as follows:
which is, of course, identical to Equation (3–26).Eo(s)
Ei(s)=1
Cs
Ls+R+1
Cs=1
LCs2+RCs +1Z1=Ls+R,  Z2=1
CsEo(s)
Ei(s)=Z2(s)
Z1(s)+Z2(s)
i i i
e2
ee1eo eiZ1Z1
Z2Z2
(a) (b)Figure 3–9
Electrical circuits.
76
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
EXAMPLE 3–7
Consider again the system shown in Figure 3–8. Obtain the transfer function E
o
(s)/E
i
(s)by use
of the complex impedance approach. (Capacitors C
1
andC
2
are not charged initially.)
The circuit shown in Figure 3–8 can be redrawn as that shown in Figure 3–10(a), which can be
further modified to Figure 3–10(b).
In the system shown in Figure 3–10(b) the current Iis divided into two currents I
1
and I
2
.
Noting that
we obtain
Noting that
we obtain
Substituting Z
1
=R
1
, Z
2
=1/AC
1
sB,Z
3
=R
2
,andZ
4
=1/AC
2
sBinto this last equation, we get
which is the same as that given by Equation (3–33). =1
R
1
 
C
1
 
R
2
 
C
2
 
s
2
+AR
1
 
C
1
+R
2
 
C
2
+R
1
 
C
2
Bs+1 E
o
(s)
E
i
(s)=1
C
1
 
s 1
C
2
 
s
R
1
a
1
C
1
 
s+R
2
+1
C
2
 
s
b
+1
C
1
 
s 
a
R
2
+1
C
2
 
s
b
E
o
(s)
E
i
(s)=Z
2
 
Z
4
Z
1
AZ
2
+Z
3
+Z
4
B+Z
2
AZ
3
+Z
4
B E
o
(s)=Z
4
 
I
2
=Z
2
 
Z
4
Z
2
+Z
3
+Z
4
 I E
i
(s)=Z
1
 
I+Z
2
 
I
1
=
c
Z
1
+Z
2
AZ
3
+Z
4
B
Z
2
+Z
3
+Z
4
d
II
1
=Z
3
+Z
4
Z
2
+Z
3
+Z
4
I,
  
I
2
=Z
2
Z
2
+Z
3
+Z
4
IZ
2
 
I
1
=AZ
3
+Z
4
BI
2
 
,
  
I
1
+I
2
=I
Z
1
Z
3
Z
2
Z
4
Z
1
I
2
I
1
Z
2
Z
3
Z
4
I
E
i
(s)
E
o
(s)E
o
(s) E
i
(s)
(a) (b)
Figure 3–10
(a) The circuit of
Figure 3–8 shown in
terms of impedances;
(b) equivalent circuit
diagram.
Openmirrors.com
Section 3–3 / Mathematical Modeling of Electrical Systems 77Transfer Functions of Nonloading Cascaded Elements. The transfer function
of a system consisting of two nonloading cascaded elements can be obtained by elimi-nating the intermediate input and output. For example, consider the system shown inFigure 3–11(a). The transfer functions of the elements are
and
If the input impedance of the second element is infinite, the output of the first element is
not affected by connecting it to the second element.Then the transfer function of the wholesystem becomes
The transfer function of the whole system is thus the product of the transfer functions
of the individual elements. This is shown in Figure 3–11(b).
As an example, consider the system shown in Figure 3–12.The insertion of an isolating
amplifier between the circuits to obtain nonloading characteristics is frequently used incombining circuits. Since amplifiers have very high input impedances, an isolationamplifier inserted between the two circuits justifies the nonloading assumption.
The two simple RCcircuits, isolated by an amplifier as shown in Figure 3–12, have
negligible loading effects, and the transfer function of the entire circuit equals the prod-uct of the individual transfer functions. Thus, in this case,
Electronic Controllers. In what follows we shall discuss electronic controllers using
operational amplifiers. We begin by deriving the transfer functions of simple operational-amplifier circuits.Then we derive the transfer functions of some of the operational-amplifiercontrollers. Finally, we give operational-amplifier controllers and their transfer functions inthe form of a table.=K
AR1 C1 s+1BAR2 C2 s+1BEo(s)
Ei(s)=a1
R1 C1 s+1b(K)a1
R2 C2 s+1bG(s) =X3(s)
X1(s)=X2(s)X3(s)
X1(s)X2(s)=G1(s)G2(s)G2(s)=X3(s)
X2(s)G1(s)=X2(s)
X1(s)X1(s)
G1(s)X2(s) X3(s)
G2(s)
(a) (b)X3(s) X1(s)
G1(s)G2(s)
Figure 3–11
(a) System consisting of two nonloading cascaded elements; (b) an equivalent system.
R1
C1 eoR2
C2 eiIsolating
amplifier
(gain K)
Figure 3–12
Electrical system.
78
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
Operational Amplifiers. Operational amplifiers, often called op amps, are
frequently used to amplify signals in sensor circuits. Op amps are also frequently used
in filters used for compensation purposes. Figure 3–13 shows an op amp. It is a common
practice to choose the ground as 0 volt and measure the input voltages e
1
ande
2
relative
to the ground. The input e
1
to the minus terminal of the amplifier is inverted, and the
input e
2
to the plus terminal is not inverted.The total input to the amplifier thus becomes
e
2
-e
1
.Hence, for the circuit shown in Figure 3–13, we have
where the inputs e
1
and e
2
may be dc or ac signals and Kis the differential gain (volt-
age gain). The magnitude of Kis approximately 10
5
~10
6
for dc signals and ac signals
with frequencies less than approximately 10 Hz. (The differential gain Kdecreases with
the signal frequency and becomes about unity for frequencies of 1 MHz ~50 MHz.)
Note that the op amp amplifies the difference in voltages e
1
ande
2
.Such an amplifier is
commonly called a differential amplifier. Since the gain of the op amp is very high, it is
necessary to have a negative feedback from the output to the input to make the ampli-
fier stable. (The feedback is made from the output to the inverted input so that the feed-
back is a negative feedback.)
In the ideal op amp, no current flows into the input terminals, and the output volt-
age is not affected by the load connected to the output terminal. In other words, the
input impedance is infinity and the output impedance is zero. In an actual op amp, a
very small (almost negligible) current flows into an input terminal and the output can-
not be loaded too much. In our analysis here, we make the assumption that the op amps
are ideal.
Inverting Amplifier. Consider the operational-amplifier circuit shown in Figure 3–14.
Let us obtain the output voltage e
o
.e
o
=KAe
2
-e
1
B=-KAe
1
-e
2
B
e
i
e
o
R
2
i
2
R
1
i
1
+–
e9
Figure 3–14
Inverting amplifier.
e
2
e
1
e
o
+–
Figure 3–13
Operational
amplifier.
Openmirrors.com
Section 3–3 / Mathematical Modeling of Electrical Systems 79The equation for this circuit can be obtained as follows: Define
Since only a negligible current flows into the amplifier, the current i1must be equal to
current i2.Thus
Since and e¿must be almost zero, or Hence we have
or
Thus the circuit shown is an inverting amplifier. If R1=R2,then the op-amp circuit
shown acts as a sign inverter.
Noninverting Amplifier. Figure 3–15(a) shows a noninverting amplifier.A circuit
equivalent to this one is shown in Figure 3–15(b). For the circuit of Figure 3–15(b), wehave
where Kis the differential gain of the amplifier. From this last equation, we get
Since if then
This equation gives the output voltage e
o.Since eoandeihave the same signs, the op-amp
circuit shown in Figure 3–15(a) is noninverting.eo=a1+R2
R1beiR1/H20862AR1+R2B/H112711/H20862K, K/H112711,ei=aR1
R1+R2+1
Kbeoeo=Kaei-R1
R1+R2eobeo=-R2
R1eiei
R1=-eo
R2e¿/H112160. K /H11271 1, K(0 -e¿)=e0ei-e¿
R1=e¿-eo
R2i1=ei-e¿
R1,  i2=e¿-eo
R2
eoeiR2
R1
+–
eoeiR2
R1–+
(b) (a)Figure 3–15
(a) Noninvertingoperational
amplifier;
(b) equivalentcircuit.
80
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
EXAMPLE 3–8
Figure 3–16 shows an electrical circuit involving an operational amplifier. Obtain the output e
o
.
Let us define
Noting that the current flowing into the amplifier is negligible, we have
Hence
Since we have
Taking the Laplace transform of this last equation, assuming the zero initial condition, we have
which can be written as
The op-amp circuit shown in Figure 3–16 is a first-order lag circuit. (Several other circuits involving
op amps are shown in Table 3–1 together with their transfer functions. Table 3–1 is given on
page 85.)E
o
(s)
E
i
(s)=-R
2
R
1
1
R
2
 
Cs+1E
i
(s)
R
1
=-R
2
 
Cs+1
R
2
E
o
(s)e
i
R
1
=-Cde
o
dt-e
o
R
2
e¿/H112160,e
i
-e¿
R
1
=CdAe¿-e
o
B
dt+e¿-e
o
R
2
i
1
=i
2
+i
3
i
1
=e
i
-e¿
R
1
,
  
i
2
=CdAe¿-e
o
B
dt,
  
i
3
=e¿-e
o
R
2
e
i
e
o
R
2
R
1
C
i
1
i
3
i
2
+–
e9
Figure 3–16
First-order lag circuit
using operational
amplifier.
Openmirrors.com
Section 3–3 / Mathematical Modeling of Electrical Systems 81Impedance Approach to Obtaining Transfer Functions. Consider the op-amp
circuit shown in Figure 3–17. Similar to the case of electrical circuits we discussed ear-lier, the impedance approach can be applied to op-amp circuits to obtain their transferfunctions. For the circuit shown in Figure 3–17, we have
Since we have
(3–34)E
o(s)
Ei(s)=-Z2(s)
Z1(s)E¿(s)/H112160,Ei(s)-E¿(s)
Z1=E¿(s)-Eo(s)
Z2+–
Eo(s)I(s)
I(s)
Ei(s)E9(s)Z1(s)Z2(s)
Figure 3–17
Operational-amplifier circuit.
EXAMPLE 3–9 Referring to the op-amp circuit shown in Figure 3–16, obtain the transfer function Eo(s)/Ei(s)by
use of the impedance approach.
The complex impedances Z1(s)andZ2(s)for this circuit are
and
The transfer function Eo(s)/Ei(s)is, therefore, obtained as
which is, of course, the same as that obtained in Example 3-8.Eo(s)
Ei(s)=-Z2(s)
Z1(s)=-R2
R11
R2 Cs+1Z2(s)=1
Cs+1
R2=R2
R2 Cs+1Z1(s)=R1
82
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
Lead or Lag Networks Using Operational Amplifiers. Figure 3–18(a) shows an
electronic circuit using an operational amplifier. The transfer function for this circuit
can be obtained as follows: Define the input impedance and feedback impedance as Z
1
andZ
2
,respectively. Then
Hence, referring to Equation (3–34), we have
(3–35)
Notice that the transfer function in Equation (3–35) contains a minus sign.Thus, this circuit
is sign inverting. If such a sign inversion is not convenient in the actual application, a sign
inverter may be connected to either the input or the output of the circuit of Figure 3–18(a).
An example is shown in Figure 3–18(b). The sign inverter has the transfer function of
The sign inverter has the gain of Hence the network shown in Figure 3–18(b)
has the following transfer function:
(3–36) =K
c
 
aTs+1
aTs+1=K
c
s+1
T
s+1
aTE
o
(s)
E
i
(s)=R
2
 
R
4
R
1
 
R
3
R
1
 
C
1
s+1
R
2
 
C
2
s+1=R
4
 
C
1
R
3
 
C
2
s+1
R
1
 
C
1
s+1
R
2
 
C
2
-R
4
/H20862R
3
 
.E
o
(s)
E(s)=-R
4
R
3
E(s)
E
i
(s)=-Z
2
Z
1
=-R
2
R
1
R
1
 
C
1
s+1
R
2
 
C
2
s+1=-C
1
C
2
s+1
R
1
 
C
1
s+1
R
2
 
C
2
Z
1
=R
1
R
1
 
C
1
 
s+1
 
,
  
Z
2
=R
2
R
2
 
C
2
 
s+1
+–
+–
+–
(a) (b)Z
1
C
1
Z
2
C
2
R
2
i
2
i
1
R
1
E
i
(s)E9(s)
E(s)C
1
C
2
E
i
(s)
E
o
(s) E(s)R
1
R
2
R
3
R
4
Lead or lag network Sign inverter
Figure 3–18
(a) Operational-amplifier circuit; (b) operational-amplifier circuit used as a lead or lag compensator.
Openmirrors.com
where
Notice that
This network has a dc gain of 
Note that this network, whose transfer function is given by Equation (3–36), is a lead
network if or a<1. It is a lag network if 
PID Controller Using Operational Amplifiers. Figure 3–19 shows an electronic
proportional-plus-integral-plus-derivative controller (a PID controller) using opera-tional amplifiers. The transfer function is given by
where
Thus
Noting that
E
o(s)
E(s)=-R4
R3E(s)
Ei(s)=-aR2 C2 s+1
C2 sbaR1 C1 s+1
R1bZ1=R1
R1 C1s+1,  Z2=R2 C2s+1
C2sE(s)
Ei(s)=-Z2
Z1E(s) /H20862Ei(s)R1 C16R2 C2 . R1 C17R2 C2 ,Kc a=R2 R4/H20862AR1 R3B.Kc a=R4 C1
R3 C2R2 C2
R1 C1=R2 R4
R1 R3,  a=R2 C2
R1 C1T=R1 C1 ,  aT=R2 C2 ,  Kc=R4 C1
R3 C2
Section 3–3 / Mathematical Modeling of Electrical Systems 83+
+–
–Z1
C1Z2
C2 R2
R1
Ei(s)
Eo(s)E(s)R3R4
Figure 3–19
Electronic PIDcontroller.
84
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
we have
(3–37)
Notice that the second operational-amplifier circuit acts as a sign inverter as well as a
gain adjuster.
When a PID controller is expressed as
K
p
is called the proportional gain, is called the integral time, and is called the
derivative time. From Equation (3–37) we obtain the proportional gain K
p
,integral time
and derivative time to be
When a PID controller is expressed as
K
p
is called the proportional gain, K
i
is called the integral gain, and K
d
is called the
derivative gain. For this controller
Table 3–1 shows a list of operational-amplifier circuits that may be used as con-
trollers or compensators.K
d
=R
4
 
R
2
 
C
1
R
3
K
i
=R
4
R
3
 
R
1
 
C
2
K
p
=R
4
AR
1
 
C
1
+R
2
 
C
2
B
R
3
 
R
1
 
C
2
E
o
(s)
E
i
(s)=K
p
+K
i
s+K
d
 
s T
d
=R
1
 
C
1
 
R
2
 
C
2
R
1
 
C
1
+R
2
 
C
2
 T
i
=1
R
1
 
C
1
+R
2
 
C
2
 K
p
=R
4
AR
1
 
C
1
+R
2
 
C
2
B
R
3
 
R
1
 
C
2
T
d
T
i
 
,T
d
T
i
E
o
(s)
E
i
(s)=K
p
a
1+T
i
s+T
d
 
s
b
=R
4
AR
1
 
C
1
+R
2
 
C
2
B
R
3
 
R
1
 
C
2
c
1+1
AR
1
 
C
1
+R
2
 
C
2
Bs+R
1
 
C
1
 
R
2
 
C
2
R
1
 
C
1
+R
2
 
C
2
s
d
=R
4
 
R
2
R
3
 
R
1
a
R
1
 
C
1
+R
2
 
C
2
R
2
 
C
2
+1
R
2
 
C
2
 
s+R
1
 
C
1
 
s
b
E
o
(s)
E
i
(s)=E
o
(s)
E(s)E(s)
E
i
(s)=R
4
 
R
2
R
3
 
R
1
AR
1
 
C
1
s+1BAR
2
 
C
2
s+1B
R
2
 
C
2
s
Openmirrors.com
Section 3–3 / Mathematical Modeling of Electrical Systems 851
2
3
4
5
6
7P
I
PD
PI
PID
Lead or lag
Lag–leadControl
ActionOperational-Amplifier Circuits G(s)=Eo(s)
Ei(s)
R4
R3R2
R1
1
R1C2sR4
R3
R4
R3R2
R1(R1C1s+ 1)
R4
R3R2
R1R2C2s+ 1
R2C2s
R4
R3R2
R1(R1C1s+ 1) (R2C2s+ 1)
R2C2s
R4
R3R2
R1R1C1s+ 1
R2C2s+ 1
R6
R5R4
R3[(R1+R3)C1s+ 1] (R2C2s+ 1)
(R1C1s+ 1) [( R2+R4)C2s+ 1]eo
eoei
ei+–
+–
+–
+–R1R2
R2R3R4
R1R3R4 C2
eoei+–
+–
R3R4 C1
R2
R1R1
eoei+–
+–R3R4C2
R2
R1
eoei+–
+–R3R4 C2 C1
R2
R1
eoei+–
+–
R3R4C2C1
R4R2
R1
R3
eoei+–
+–
R5R6C2C1Table 3–1 Operational-Amplifier Circuits That May Be Used as Compensators
86
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
EXAMPLE PROBLEMS AND SOLUTIONS
A–3–1. Figure 3–20(a) shows a schematic diagram of an automobile suspension system.As the car moves
along the road, the vertical displacements at the tires act as the motion excitation to the auto-
mobile suspension system.The motion of this system consists of a translational motion of the cen-
ter of mass and a rotational motion about the center of mass. Mathematical modeling of the
complete system is quite complicated.
A very simplified version of the suspension system is shown in Figure 3–20(b).Assuming that
the motion x
i
at point Pis the input to the system and the vertical motion x
o
of the body is the
output, obtain the transfer function (Consider the motion of the body only in the ver-
tical direction.) Displacement x
o
is measured from the equilibrium position in the absence of
input x
i
.
Solution. The equation of motion for the system shown in Figure 3–20(b) is
or
Taking the Laplace transform of this last equation, assuming zero initial conditions, we obtain
Hence the transfer function X
o
(s)/X
i
(s)is given by
X
o
(s)
X
i
(s)=bs+k
ms
2
+bs+kAms
2
+bs+kBX
o
(s)=(bs+k)X
i
(s)mx$
o
+bx#
o
+kx
o
=bx
i
#+kx
i
mx$
o
+bAx#
o
-x#
i
B+kAx
o
-x
i
B=0X
o
(s) /H20862X
i
(s).
(a)k
(b)x
i
Center of mass
Auto bodyb
Px
o
m
Figure 3–20
(a) Automobile
suspension system;
(b) simplified
suspension system.
Openmirrors.com
Example Problems and Solutions 87A–3–2. Obtain the transfer function Y(s)/U(s) of the system shown in Figure 3–21. The input uis a
displacement input. (Like the system of Problem A–3–1 , this is also a simplified version of an
automobile or motorcycle suspension system.)
Solution. Assume that displacements xand yare measured from respective steady-state
positions in the absence of the input u.Applying the Newton’s second law to this system, we
obtain
Hence, we have
Taking Laplace transforms of these two equations, assuming zero initial conditions, we obtain
Eliminating X(s) from the last two equations, we have
which yields
Y(s)
U(s)=k1Abs+k2B
m1 m2 s4+Am1+m2Bbs3+Ck1 m2+Am1+m2Bk2Ds2+k1 bs+k1 k2Am1 s2+bs+k1+k2Bm2 s2+bs+k2
bs+k2Y(s) =Abs+k2BY(s) +k1 U(s)Cm2 s2+bs+k2DY(s) =Abs+k2BX(s)Cm1 s2+bs+Ak1+k2BDX(s) =Abs+k2BY(s) +k1 U(s)m2 y$+by#+k2 y=bx#+k2 xm1 x$+bx#+Ak1+k2Bx=by#+k2 y+k1 u m2 y$=-k2(y-x)-b(y#-x#) m1 x$=k2(y-x)+b(y#-x#)+k1(u-x)
y
b
x
um2
m1k2
k1
Figure 3–21
Suspension system.
88
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
A–3–3. Obtain a state-space representation of the system shown in Figure 3–22.
Solution. The system equations are
The output variables for this system are y
1
andy
2
.Define state variables as
Then we obtain the following equations:
Hence, the state equation is
and the output equation is
A–3–4. Obtain the transfer function X
o
(s)/X
i
(s)of the mechanical system shown in Figure 3–23(a). Also
obtain the transfer function E
o
(s)/E
i
(s)of the electrical system shown in Figure 3–23(b). Show that
these transfer functions of the two systems are of identical form and thus they are analogous systems.
B
y
1
y
2
R
=
B
1
00
00
10
0
RD
x
1
x
2
x
3
x
4
TD
x#
1
x#
2
x#
3
x#
4
T
=
F
0
-k
m
1
0
k
m
2
1
-b
m
1
0
00
k
m
1
0
-k
m
2
0
0
1
0
VD
x
1
x
2
x
3
x
4
T
+
E
0
0
0
1
m
2
U
ux#
4
=1
m
2
C-kAy
2
-y
1
B+uD=k
m
2
x
1
-k
m
2
x
3
+1
m
2
ux#
3
=x
4
x#
2
=1
m
1
C-by#
1
-kAy
1
-y
2
BD=-k
m
1
x
1
-b
m
1
x
2
+k
m
1
x
3
x#
1
=x
2
 x
4
=y#
2
 x
3
=y
2
 x
2
=y#
1
 x
1
=y
1
 m
2
 
y$
2
+kAy
2
-y
1
B=u m
1
 
y$
1
+by#
1
+kAy
1
-y
2
B=0
m
1
m
2
ky
1
b
u
y
2
Figure 3–22
Mechanical system.
Openmirrors.com
Example Problems and Solutions 89Solution. In Figure 3–23(a) we assume that displacements xi, xo,andyare measured from their
respective steady-state positions.Then the equations of motion for the mechanical system shown
in Figure 3–23(a) are
By taking the Laplace transforms of these two equations, assuming zero initial conditions, we have
If we eliminate Y(s) from the last two equations, then we obtain
or
Hence the transfer function Xo(s)/Xi(s)can be obtained as
For the electrical system shown in Figure 3–23(b), the transfer function Eo(s)/Ei(s)is found to be
=AR1 C1 s+1BAR2 C2 s+1B
AR1 C1 s+1BAR2 C2 s+1B+R2 C1 sEo(s)
Ei(s)=R1+1
C1 s
1
A1/H20862R2B+C2 s+R1+1
C1 sXo(s)
Xi(s)=ab1
k1s+1bab2
k2s+1b
ab1
k1s+1bab2
k2s+1b+b2
k1sAb1 s+k1BXi(s)=ab1 s+k1+b2 s-b2 sb2 s
b2 s+k2bXo(s)b1CsXi(s)-sXo(s)D+k1CXi(s)-Xo(s)D=b2 sXo(s)-b2 sb2 sXo(s)
b2 s+k2b2CsXo(s)-sY(s)D=k2 Y(s)b1CsXi(s)-sXo(s)D+k1CXi(s)-Xo(s)D=b2CsXo(s)-sY(s)Db2Ax#
o-y#B=k2 yb1Ax#
i-x#
oB+k1Axi-xoB=b2Ax#
o-y#B(a) (b)xi
xo
y k2k1
b2b1R2
R1
eo eiC2
C1
Figure 3–23
(a) Mechanicalsystem;
(b) analogous
electrical system.
90
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
A comparison of the transfer functions shows that the systems shown in Figures 3–23(a) and (b)
are analogous.
A–3–5. Obtain the transfer functions E
o
(s)/E
i
(s)of the bridged T networks shown in Figures 3–24(a)
and (b).
Solution. The bridged Tnetworks shown can both be represented by the network of
Figure 3–25(a), where we used complex impedances.This network may be modified to that shown
in Figure 3–25(b).
In Figure 3–25(b), note that
I
1
=I
2
+I
3
,
  
I
2
 
Z
1
=AZ
3
+Z
4
BI
3
RR
C
1
CCC
2
e
i
e
o
(a)
R
1
R
2
e
i
e
o
(b)
Figure 3–24
Bridged Tnetworks.
Z
1
Z
4
Z
3
Z
2
Z
1
E
i
(s)
Z
4
Z
3
Z
2
I
3
I
2
I
1
I
1
I
3
I
3
I
2
I
1
I
1
e
i
e
o
E
o
(s)
(a)
(b)
Figure 3–25
(a) Bridged T
network in terms of
complex impedances;
(b) equivalent
network.
Openmirrors.com
Example Problems and Solutions 91Hence
Then the voltages Ei(s)andEo(s)can be obtained as
Hence, the transfer function Eo(s)/Ei(s)of the network shown in Figure 3–25(a) is obtained as
(3–38)
For the bridged T network shown in Figure 3–24(a), substitute
into Equation (3–38). Then we obtain the transfer function Eo(s)/Ei(s)to be
Similarly, for the bridged T network shown in Figure 3–24(b), we substitute
into Equation (3–38). Then the transfer function Eo(s)/Ei(s)can be obtained as follows:
=R1 CR2 Cs2+2R1 Cs+1
R1 CR2 Cs2+A2R1 C+R2 CBs+1Eo(s)
Ei(s)=1
Cs1
Cs+R1a1
Cs+1
Cs+R2b
R1a1
Cs+1
Cs+R2b+1
Cs1
Cs+R21
CsZ1=1
Cs,  Z2=R1 ,  Z3=1
Cs,  Z4=R2=RC1 RC2 s2+2RC2 s+1
RC1 RC2 s2+A2RC2+RC1Bs+1Eo(s)
Ei(s)=R2+1
C1 saR+R+1
C2 sb
1
C1 saR+R+1
C2 sb+R2+R1
C2 sZ1=R,  Z2=1
C1 s,  Z3=R,  Z4=1
C2 sEo(s)
Ei(s)=Z3 Z1+Z2AZ1+Z3+Z4B
Z2AZ1+Z3+Z4B+Z1 Z3+Z1 Z4 =Z3 Z1+Z2AZ1+Z3+Z4B
Z1+Z3+Z4 I1 =Z3 Z1
Z1+Z3+Z4 I1+Z2 I1 Eo(s)=Z3 I3+Z2 I1 =Z2AZ1+Z3+Z4B+Z1 AZ3+Z4B
Z1+Z3+Z4 I1 =cZ2+Z1AZ3+Z4B
Z1+Z3+Z4dI1 Ei(s)=Z1 I2+Z2 I1I2=Z3+Z4
Z1+Z3+Z4I1 ,  I3=Z1
Z1+Z3+Z4I1
92
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
A–3–6. Obtain the transfer function of the op-amp circuit shown in Figure 3–26.
Solution. The voltage at point Ais
The Laplace-transformed version of this last equation is
The voltage at point Bis
Since and we must have Thus
Hence
A–3–7. Obtain the transfer function E
o
(s)/E
i
(s)of the op-amp system shown in Figure 3–27 in terms of
complex impedances Z
1
,Z
2
,Z
3
, and Z
4
. Using the equation derived, obtain the transfer function
E
o
(s)/E
i
(s)of the op-amp system shown in Figure 3–26.
Solution. From Figure 3–27, we find
E
i
(s)-E
A
(s)
Z
3
=E
A
(s)-E
o
(s)
Z
4
E
o
(s)
E
i
(s)=-R
2
 
Cs-1
R
2
 
Cs+1=-s-1
R
2
 
C
s+1
R
2
 
C1
2CE
i
(s)+E
o
(s)D=1
R
2
 
Cs+1E
i
(s)E
A
(s)=E
B
(s). K/H112711, CE
B
(s)-E
A
(s)DK=E
o
(s)E
B
(s)=1
Cs
R
2
+1
CsE
i
(s)=1
R
2
 
Cs+1E
i
(s)E
A
(s)=1
2CE
i
(s)+E
o
(s)De
A
=1
2Ae
i
-e
o
B+e
o
E
o
(s) /H20862E
i
(s)
–
+
CA
BR
1
R
1
R
2
e
i
e
o
Figure 3–26
Operational-
amplifier circuit.
Openmirrors.com
Example Problems and Solutions 93or
(3–39)
Since
(3–40)
by substituting Equation (3–40) into Equation (3–39), we obtain
from which we get the transfer function Eo(s)/Ei(s)to be
(3–41)
To find the transfer function Eo(s)/Ei(s)of the circuit shown in Figure 3–26, we substitute
into Equation (3–41). The result is
which is, as a matter of course, the same as that obtained in Problem A–3–6 .Eo(s)
Ei(s)=-R1 R2-R11
Cs
R1a1
Cs+R2b=-R2 Cs-1
R2 Cs+1Z1=1
Cs ,  Z2=R2 ,  Z3=R1 ,  Z4=R1Eo(s)
Ei(s)=-Z4 Z2-Z3 Z1
Z3AZ1+Z2BcZ4 Z1+Z4 Z2-Z4 Z1-Z3 Z1
Z4AZ1+Z2BdEi(s)=-Z3
Z4Eo(s)EA(s)=EB(s)=Z1
Z1+Z2Ei(s)Ei(s)-a1+Z3
Z4bEA(s)=-Z3
Z4Eo(s)A
B
eo eiZ3
Z1Z2Z4
–
+
Figure 3–27
Operational-amplifier circuit.
94
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
A–3–8. Obtain the transfer function of the operational-amplifier circuit shown in Figure 3–28.
Solution. We will first obtain currents i
1
,i
2
,i
3
,i
4
, and i
5
.Then we will use node equations at nodes
AandB.
At node A, we have i
1
=i
2
+i
3
+i
4
,or
(3–42)
At node B, we get i
4
=i
5
,or
(3–43)
By rewriting Equation (3–42), we have
(3–44)
From Equation (3–43), we get
(3–45)
By substituting Equation (3–45) into Equation (3–44), we obtain
Taking the Laplace transform of this last equation, assuming zero initial conditions, we obtain
from which we get the transfer function as follows:
E
o
(s)
E
i
(s)=-1
R
1
 
C
1
 
R
2
C
2
 
s
2
+CR
2
 
C
2
+R
1
 
C
2
+AR
1
/H20862R
3
BR
2
 
C
2
Ds+AR
1
/H20862R
3
BE
o
(s) /H20862E
i
(s)-C
1
 
C
2
 
R
2
 
s
2
E
o
(s)+
a
1
R
1
+1
R
2
+1
R
3
b
A-R
2
 
C
2
BsE
o
(s)-1
R
3
E
o
(s)=E
i
(s)
R
1
C
1
a
-R
2
 
C
2
d
2
e
o
dt
2
b
+
a
1
R
1
+1
R
2
+1
R
3
b
A-R
2
 
C
2
Bde
o
dt=e
i
R
1
+e
o
R
3
e
A
=-R
2
 
C
2
de
o
dtC
1
de
A
dt+
a
1
R
1
+1
R
2
+1
R
3
b
e
A
=e
i
R
1
+e
o
R
3
e
A
R
2
=C
2
-de
o
dte
i
-e
A
R
1
=e
A
-e
o
R
3
+C
1
de
A
dt+e
A
R
2
i
4
=e
A
R
2
,
  
i
5
=C
2
-de
o
dti
1
=e
i
-e
A
R
1
;
  
i
2
=e
A
-e
o
R
3
,
  
i
3
=C
1
de
A
dtE
o
(s) /H20862E
i
(s)
i
1
R
1
i
2
i
4
i
3
A
C
1
e
i
e
o
R
3
i
5
C
2
BR
2
–
+
Figure 3–28
Operational-
amplifier circuit.
Openmirrors.com
Example Problems and Solutions 95A–3–9. Consider the servo system shown in Figure 3–29(a).The motor shown is a servomotor, a dc motor de-
signed specifically to be used in a control system.The operation of this system is as follows:A pair ofpotentiometers acts as an error-measuring device. They convert the input and output positions intoproportional electric signals. The command input signal determines the angular position rof the
wiper arm of the input potentiometer.The angular position ris the reference input to the system, and
the electric potential of the arm is proportional to the angular position of the arm. The output shaftposition determines the angular position cof the wiper arm of the output potentiometer.The differ-
ence between the input angular position rand the output angular position cis the error signal e,o r
The potential difference is the error voltage, where e
ris proportional to randecis pro-
portional to c; that is, and where K0is a proportionality constant. The error volt-
age that appears at the potentiometer terminals is amplified by the amplifier whose gain constant is K1.
The output voltage of this amplifier is applied to the armature circuit of the dc motor.A fixed volt-
age is applied to the field winding. If an error exists, the motor develops a torque to rotate the out-put load in such a way as to reduce the error to zero. For constant field current, the torquedeveloped by the motor is
where K
2is the motor torque constant and iais the armature current.
When the armature is rotating, a voltage proportional to the product of the flux and angular
velocity is induced in the armature. For a constant flux, the induced voltage ebis directly propor-
tional to the angular velocity or
where ebis the back emf, K3is the back emf constant of the motor, and uis the angular displace-
ment of the motor shaft.eb=K3du
dtdu/H20862dt,T=K2 iaec=K0 c , er=K0 rer-ec=eve=r-c
(a)Reference input
Input deviceInput potentiometer
Output potentiometer
Feedback signalerec
r cc
K1iaTRa La
Error measuring device Amplifier Motor Gear
trainLoaduK1ev ev
(b) (c)Ev(s) E(s) R(s) C(s) U(s) K1K2
s(Las+Ra) (Jos+bo)+K2K3sK0 nC(s) R(s) K
s(Js+B)+–+–
Figure 3–29
(a) Schematic diagram of servo system; (b) block diagram for the system; (c) simplified block diagram.
96
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
Obtain the transfer function between the motor shaft angular displacement uand the error
voltage e
v
.Obtain also a block diagram for this system and a simplified block diagram when L
a
is negligible.
Solution. The speed of an armature-controlled dc servomotor is controlled by the armature volt-
agee
a
.(The armature voltage is the output of the amplifier.) The differential equation
for the armature circuit is
or
(3–46)
The equation for torque equilibrium is
(3–47)
where J
0
is the inertia of the combination of the motor, load, and gear train referred to the motor
shaft and b
0
is the viscous-friction coefficient of the combination of the motor, load, and gear train
referred to the motor shaft.
By eliminating i
a
from Equations (3–46) and (3–47), we obtain
(3–48)
We assume that the gear ratio of the gear train is such that the output shaft rotates ntimes for each
revolution of the motor shaft. Thus,
(3–49)
The relationship among E
v
(s), R(s), andC(s) is
(3–50)
The block diagram of this system can be constructed from Equations (3–48), (3–49), and (3–50),
as shown in Figure 3–29(b). The transfer function in the feedforward path of this system is
When L
a
is small, it can be neglected, and the transfer function G(s) in the feedforward path
becomes
(3–51)
The term indicates that the back emf of the motor effectively increases the
viscous friction of the system. The inertia J
0
and viscous friction coefficient are b
0
+AK
2
 
K
3
/H20862R
a
BCb
0
+AK
2
 
K
3
/H20862R
a
BDs =K
0
 
K
1
 
K
2
 
n/H20862R
a
J
0
 
s
2
+
a
b
0
+K
2
 
K
3
R
a
b
s G(s) =K
0
 
K
1
 
K
2
 
n
sCR
a
AJ
0
 
s+b
0
B+K
2
 
K
3
DG(s) =C(s)
Q
 
(s)Q
 
(s)
E
v
(s)E
v
(s)
E(s)=K
0
 
K
1
 
K
2
 
n
sCAL
a
 
s+R
a
BAJ
0
 
s+b
0
B+K
2
 
K
3
DE
v
(s)=K
0
CR(s) -C(s)D=K
0
 
E(s)C(s) =nQ
 
(s)Q
 
(s)
E
v
(s)=K
1
 
K
2
sAL
a
 
s+R
a
BAJ
0
 
s+b
0
B+K
2
 
K
3
 
sJ
0
d
2
u
dt
2
+b
0
du
dt=T=K
2
 
i
a
L
a
di
a
dt+R
a
 
i
a
+K
3
du
dt=K
1
 
e
v
L
a
di
a
dt+R
a
 
i
a
+e
b
=e
a
e
a
=K
1
 
e
v
Openmirrors.com
Problems 97referred to the motor shaft. When J0and are multiplied by 1/n2,the inertia and
viscous-friction coefficient are expressed in terms of the output shaft. Introducing new parameters
defined by
moment of inertia referred to the output shaft
viscous-friction coefficient referred to the output shaft
the transfer function G(s) given by Equation (3–51) can be simplified, yielding
or
where
The block diagram of the system shown in Figure 3–29(b) can thus be simplified as shown in
Figure 3–29(c).Km=K
B,  Tm=J
B=Ra J0
Ra b0+K2 K3 G(s) =Km
sATm s+1B G(s) =K
Js2+Bs K=K0 K1 K2/H20862nRa B=Cb0+AK2 K3/H20862RaBD/H20862n2= J=J0/H20862n2=b0+AK2 K3/H20862RaB
PROBLEMS
B–3–1. Obtain the equivalent viscous-friction coefficient
beqof the system shown in Figure 3–30.B–3–2. Obtain mathematical models of the mechanical sys-
tems shown in Figures 3–31(a) and (b).
xb3
yb2
b1 mk
(a)No frictionx (Output)
u(t)
(Input force)
m
(b)No frictionx (Output)
u(t)
(Input force)k1 k2
Figure 3–31
Mechanical systems.Figure 3–30
Damper system.
98
Chapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems
y
1
y
2
u
1
m
2
b
1
u
2
k
2
k
1
m
1
Figure 3–32 Mechanical system.B–3–3. Obtain a state-space representation of the mechan-
ical system shown in Figure 3–32, where u
1
and u
2
are the
inputs and y
1
andy
2
are the outputs.
B–3–4. Consider the spring-loaded pendulum system shown
in Figure 3–33. Assume that the spring force acting on the
pendulum is zero when the pendulum is vertical, or u=0.
Assume also that the friction involved is negligible and the
angle of oscillation uis small. Obtain a mathematical model
of the system.
kka
/H5129
mgu
Figure 3–33 Spring-loaded pendulum system.
B–3–5. Referring to Examples 3–5 and 3–6, consider the
inverted-pendulum system shown in Figure 3–34. Assume
that the mass of the inverted pendulum is mand is evenly
distributed along the length of the rod. (The center of
gravity of the pendulum is located at the center of the rod.)
Assuming that uis small, derive mathematical models for
the system in the forms of differential equations, transfer
functions, and state-space equations.
M
y
x
uG
O/H5129
/H5129x/H11032y/H11032
xu
Figure 3–34 Inverted-pendulum system.
B–3–6. Obtain the transfer functions X
1
(s)/U(s) and
X
2
(s)/U(s) of the mechanical system shown in Figure 3–35.
m
1
m
2
k
3
k
1
x
1
x
2
u
b
1
k
2
b
2
Figure 3–35 Mechanical system.
B–3–7. Obtain the transfer function E
o
(s)/E
i
(s)of the elec-
trical circuit shown in Figure 3–36.
R
1
e
o
R
2
C L e
i
i
1
i
2
Figure 3–36 Electrical circuit.
B–3–8. Consider the electrical circuit shown in Figure 3–37.
Obtain the transfer function E
o
(s)/E
i
(s)by use of the block
diagram approach.
R
1
C
1
e
o
R
2
C
2
e
i
i
1
i
2
Figure 3–37 Electrical circuit.
Openmirrors.com
Problems 99B–3–9. Derive the transfer function of the electrical circuit
shown in Figure 3–38. Draw a schematic diagram of ananalogous mechanical system.
R1C1
R2
C2eo ei
Figure 3–38 Electrical circuit.
+–CAR1R2
eieo
Figure 3–39 Operational-amplifier circuit.B–3–10. Obtain the transfer function of the 
op-amp circuit shown in Figure 3–39.Eo(s) /H20862Ei(s)+
–CA
B
R1R2
R3ei eo
Figure 3–40 Operational-amplifier circuit.
B–3–11. Obtain the transfer function of the 
op-amp circuit shown in Figure 3–40.Eo(s) /H20862Ei(s)B–3–12. Using the impedance approach, obtain the trans-
fer function of the op-amp circuit shown in
Figure 3–41.Eo(s) /H20862Ei(s)
+–
CA
BR1R1
R2eieo
Figure 3–41 Operational-amplifier circuit.
B–3–13. Consider the system shown in Figure 3–42. An
armature-controlled dc servomotor drives a load consistingof the moment of inertia J
L. The torque developed by the
motor is T. The moment of inertia of the motor rotor is Jm.
The angular displacements of the motor rotor and the load
element are umandu, respectively. The gear ratio is
Obtain the transfer function Q  (s) /H20862Ei(s). n=u/H20862um .
L R
T
nei Jm
JLum
u
Figure 3–42 Armature-controlled dc servomotor system.
4
100
Mathematical Modeling 
of Fluid Systems 
and Thermal Systems
4–1 INTRODUCTION
This chapter treats mathematical modeling of fluid systems and thermal systems.As the
most versatile medium for transmitting signals and power, fluids—liquids and gases—
have wide usage in industry. Liquids and gases can be distinguished basically by their rel-
ative incompressibilities and the fact that a liquid may have a free surface, whereas a gas
expands to fill its vessel. In the engineering field the term pneumatic describes fluid
systems that use air or gases and hydraulic applies to those using oil.
We first discuss liquid-level systems that are frequently used in process control. Here
we introduce the concepts of resistance and capacitance to describe the dynamics of such
systems. Then we treat pneumatic systems. Such systems are extensively used in the au-
tomation of production machinery and in the field of automatic controllers. For instance,
pneumatic circuits that convert the energy of compressed air into mechanical energy enjoy
wide usage.Also, various types of pneumatic controllers are widely used in industry. Next,
we present hydraulic servo systems.These are widely used in machine tool systems, aircraft
control systems, etc. We discuss basic aspects of hydraulic servo systems and hydraulic
controllers. Both pneumatic systems and hydraulic systems can be modeled easily by using
the concepts of resistance and capacitance. Finally, we treat simple thermal systems. Such
systems involve heat transfer from one substance to another. Mathematical models of
such systems can be obtained by using thermal resistance and thermal capacitance.
Outline of the Chapter. Section 4–1 has presented introductory material for the
chapter. Section 4–2 discusses liquid-level systems. Section 4–3 treats pneumatic
systems—in particular, the basic principles of pneumatic controllers. Section 4–4 first
discusses hydraulic servo systems and then presents hydraulic controllers. Finally,
Section 4–5 analyzes thermal systems and obtains mathematical models of such systems.
Openmirrors.com
Section 4–2 / Liquid-Level Systems 1014–2 LIQUID-LEVEL SYSTEMS
In analyzing systems involving fluid flow, we find it necessary to divide flow regimes
into laminar flow and turbulent flow, according to the magnitude of the Reynolds num-ber. If the Reynolds number is greater than about 3000 to 4000, then the flow is turbu-lent. The flow is laminar if the Reynolds number is less than about 2000. In the laminarcase, fluid flow occurs in streamlines with no turbulence. Systems involving laminar flowmay be represented by linear differential equations.
Industrial processes often involve flow of liquids through connecting pipes and tanks.
The flow in such processes is often turbulent and not laminar. Systems involving turbu-lent flow often have to be represented by nonlinear differential equations. If the regionof operation is limited, however, such nonlinear differential equations can be linearized.We shall discuss such linearized mathematical models of liquid-level systems in this sec-tion. Note that the introduction of concepts of resistance and capacitance for such liquid-level systems enables us to describe their dynamic characteristics in simple forms.
Resistance and Capacitance of Liquid-Level Systems. Consider the flow
through a short pipe connecting two tanks. The resistance Rfor liquid flow in such a
pipe or restriction is defined as the change in the level difference (the difference of theliquid levels of the two tanks) necessary to cause a unit change in flow rate; that is,
Since the relationship between the flow rate and level difference differs for the laminar
flow and turbulent flow, we shall consider both cases in the following.
Consider the liquid-level system shown in Figure 4–1(a). In this system the liquid
spouts through the load valve in the side of the tank. If the flow through this restrictionis laminar, the relationship between the steady-state flow rate and steady-state head atthe level of the restriction is given by
Q=KHR=change in level difference, m
change in flow rate, m3/H20862sec
Control valve
Q+qoQ+qi
H+hLoad valve
Capacitance
CResistance
R
(b) (a)Head
H
–H0h
P
q
QFlow ratetan–1Rt
Slope =        =2H
Qh
qFigure 4–1
(a) Liquid-level
system; (b) head-versus-flow-ratecurve.
102
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
where steady-state liquid flow rate, m
3
/H20862sec
coefficient, m
2
/H20862sec
steady-state head, m
For laminar flow, the resistance R
l
is obtained as
The laminar-flow resistance is constant and is analogous to the electrical resistance.
If the flow through the restriction is turbulent, the steady-state flow rate is given by
(4–1)
where steady-state liquid flow rate, m
3
/H20862sec
coefficient, m
2.5
/H20862sec
steady-state head, m
The resistance R
t
for turbulent flow is obtained from
Since from Equation (4–1) we obtain
we have
Thus,
The value of the turbulent-flow resistance R
t
depends on the flow rate and the head.The
value of R
t
, however, may be considered constant if the changes in head and flow rate
are small.
By use of the turbulent-flow resistance, the relationship between Qand Hcan be
given by
Such linearization is valid, provided that changes in the head and flow rate from their
respective steady-state values are small.
In many practical cases, the value of the coefficient Kin Equation (4–1), which depends
on the flow coefficient and the area of restriction, is not known. Then the resistance may
be determined by plotting the head-versus-flow-rate curve based on experimental data
and m easuring the slope of the curve at the operating condition.An example of such a plot
is shown in Figure 4–1(b). In the figure, point Pis the steady-state operating point.The tan-
gent line to the curve at point Pintersects the ordinate at point Thus, the slope
of this tangent line is Since the resistance R
t
at the operating point Pis given by
the resistance R
t
is the slope of the curve at the operating point. 2H–/H20862Q–,2H–/H20862Q–.A0,-H–B.Q=2H
R
t
R
t
=2H
QdH
dQ=21H
K=21H
1H
Q=2H
QdQ=K
21H
 dHR
t
=dH
dQH=K=Q=Q=K1H
R
l
=dH
dQ=H
Q H= K= Q=
Openmirrors.com
Section 4–2 / Liquid-Level Systems 103Consider the operating condition in the neighborhood of point P. Define a small
deviation of the head from the steady-state value as hand the corresponding small
change of the flow rate as q. Then the slope of the curve at point Pcan be given by
The linear approximation is based on the fact that the actual curve does not differ much
from its tangent line if the operating condition does not vary too much.
The capacitance Cof a tank is defined to be the change in quantity of stored liquid
necessary to cause a unit change in the potential (head). (The potential is the quantitythat indicates the energy level of the system.)
It should be noted that the capacity (m
3) and the capacitance (m2) are different. The
capacitance of the tank is equal to its cross-sectional area. If this is constant, the capac-itance is constant for any head.
Liquid-Level Systems. Consider the system shown in Figure 4–1(a). The vari-
ables are defined as follows:
steady-state flow rate (before any change has occurred), m
3/H20862sec
qi=small deviation of inflow rate from its steady-state value, m3/H20862sec
qo=small deviation of outflow rate from its steady-state value, m3/H20862sec
steady-state head (before any change has occurred), m
h= small deviation of head from its steady-state value, m
As stated previously, a system can be considered linear if the flow is laminar. Even if
the flow is turbulent, the system can be linearized if changes in the variables are keptsmall. Based on the assumption that the system is either linear or linearized, the differentialequation of this system can be obtained as follows: Since the inflow minus outflow duringthe small time interval dtis equal to the additional amount stored in the tank, we see that
From the definition of resistance, the relationship between q
oandhis given by
The differential equation for this system for a constant value of Rbecomes
(4–2)
Note that RCis the time constant of the system.Taking the Laplace transforms of both
sides of Equation (4–2), assuming the zero initial condition, we obtain
where
and Qi(s)=lCqiD H(s) =l[h](RCs +1)H(s) =RQi(s)RCdh
dt+h=Rqiqo=h
RCdh=Aqi-qoBdtH–=Q–=C=change in liquid stored, m3
change in head, mSlope of curve at point  P=h
q=2H–
Q–=Rt
104
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Q+q
Tank 1 Tank 2
H
1
+h
1
R
1
H
2
+h
2
R
2
Q+q
2
C
1
C
2
Q+q
1
Q:
H
1
:
H
2
:
Steady-state flow rate
Steady-state liquid level of tank 1
Steady-state liquid level of tank 2
Figure 4–2
Liquid-level system
with interaction.
Ifq
i
is considered the input and hthe output, the transfer function of the system is
If, however, q
o
is taken as the output, the input being the same, then the transfer
function is
where we have used the relationship
Liquid-Level Systems with Interaction. Consider the system shown in Figure
4–2. In this system, the two tanks interact.Thus the transfer function of the system is not
the product of two first-order transfer functions.
In the following, we shall assume only small variations of the variables from the
steady-state values. Using the symbols as defined in Figure 4–2, we can obtain the
following equations for this system:
(4–3)
(4–4)
(4–5)
(4–6)
Ifqis considered the input and q
2
the output, the transfer function of the system is
(4–7)Q
2
(s)
Q(s)=1
R
1
 
C
1
 
R
2
 
C
2
 
s
2
+AR
1
 
C
1
+R
2
 
C
2
+R
2
 
C
1
Bs+1C
2
dh
2
dt=q
1
-q
2
h
2
R
2
=q
2
C
1
dh
1
dt=q-q
1
h
1
-h
2
R
1
=q
1
Q
o
(s)=1
RH(s)Q
o
(s)
Q
i
(s)=1
RCs +1H(s)
Q
i
(s)=R
RCs +1
Openmirrors.com
Section 4–2 / Liquid-Level Systems 105It is instructive to obtain Equation (4–7), the transfer function of the interacted
system, by block diagram reduction. From Equations (4–3) through (4–6), we obtain theelements of the block diagram, as shown in Figure 4–3(a). By connecting signals prop-erly, we can construct a block diagram, as shown in Figure 4–3(b). This block diagramcan be simplified, as shown in Figure 4–3(c). Further simplifications result in Figures 4–3(d) and (e). Figure 4–3(e) is equivalent to Equation (4–7).
(c)
(d)
(e)G3
(b)(a)
Q(s) H1(s)
H2(s)Q1(s) Q2(s)
Q(s) Q1(s) Q2(s)
Q(s) Q2(s)
Q(s) Q2(s)1
R11
R1
1
R11
R21
R2
1
R21
C1s
1
C1s1
C2sG31
C2s
G31
C2sR2C1s
R2C1s1
R1C1s+ 11
R2C2s+ 1
1
R1C1R2C2s2+ (R1C1+R2C2+R2C1)s+ 1H1(s) Q1(s)
H2(s)
1
C1sH2(s) Q2(s)
Q(s) H1(s)
Q1(s)Q1(s) H2(s)
Q2(s)
+–+–+–+–
+–+–+–
+–+–+–
Figure 4–3
(a) Elements of theblock diagram of the
system shown in
Figure 4–2; (b) blockdiagram of thesystem; (c)–(e)successive reductions
of the block diagram.
106
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Notice the similarity and difference between the transfer function given by 
Equation (4–7) and that given by Equation (3–33). The term R
2
C
1
sthat appears in the
denominator of Equation (4–7) exemplifies the interaction between the two tanks.
Similarly, the term R
1
C
2
sin the denominator of Equation (3–33) represents the inter-
action between the two RCcircuits shown in Figure 3–8.
4–3 PNEUMATIC SYSTEMS
In industrial applications pneumatic systems and hydraulic systems are frequently
compared.Therefore, before we discuss pneumatic systems in detail, we shall give a brief
comparison of these two kinds of systems.
Comparison Between Pneumatic Systems and Hydraulic Systems. The fluid
generally found in pneumatic systems is air; in hydraulic systems it is oil. And it is pri-
marily the different properties of the fluids involved that characterize the differences
between the two systems. These differences can be listed as follows:
1.Air and gases are compressible, whereas oil is incompressible (except at high pressure).
2.Air lacks lubricating property and always contains water vapor. Oil functions as a
hydraulic fluid as well as a lubricator.
3.The normal operating pressure of pneumatic systems is very much lower than that
of hydraulic systems.
4.Output powers of pneumatic systems are considerably less than those of hydraulic
systems.
5.Accuracy of pneumatic actuators is poor at low velocities, whereas accuracy of
hydraulic actuators may be made satisfactory at all velocities.
6.In pneumatic systems, external leakage is permissible to a certain extent, but in-
ternal leakage must be avoided because the effective pressure difference is rather
small. In hydraulic systems internal leakage is permissible to a certain extent, but
external leakage must be avoided.
7.No return pipes are required in pneumatic systems when air is used, whereas they
are always needed in hydraulic systems.
8.Normal operating temperature for pneumatic systems is 5° to 60°C (41° to 140°F).
The pneumatic system, however, can be operated in the 0° to 200°C (32° to 392°F)
range. Pneumatic systems are insensitive to temperature changes, in contrast to
hydraulic systems, in which fluid friction due to viscosity depends greatly on tem-
perature. Normal operating temperature for hydraulic systems is 20° to 70°C (68°
to 158°F).
9.Pneumatic systems are fire- and explosion-proof, whereas hydraulic systems are
not, unless nonflammable liquid is used.
In what follows we begin with a mathematical modeling of pneumatic systems.Then
we shall present pneumatic proportional controllers.
We shall first give detailed discussions of the principle by which proportional
controllers operate.Then we shall treat methods for obtaining derivative and integral
control actions. Throughout the discussions, we shall place emphasis on the
Openmirrors.com
Section 4–3 / Pneumatic Systems
107
Resistance
R
Capacitance
C
(a) (b)P+p
i
P+po
0 qqdqDP
Slope =R
d(DP)
Figure 4–4
(a) Schematic
diagram of a
pressure system;
(b) pressure-
difference-versus-
flow-rate curve.
fundamental principles, rather than on the details of the operation of the actual
mechanisms.
Pneumatic Systems. The past decades have seen a great development in low-
pressure pneumatic controllers for industrial control systems, and today they are used
extensively in industrial processes. Reasons for their broad appeal include an explosion-
proof character, simplicity, and ease of maintenance.
Resistance and Capacitance of Pressure Systems. Many industrial processes
and pneumatic controllers involve the flow of a gas or air through connected pipelines
and pressure vessels.
Consider the pressure system shown in Figure 4–4(a). The gas flow through the
restriction is a function of the gas pressure difference p
i
-p
o
. Such a pressure system
may be characterized in terms of a resistance and a capacitance.
The gas flow resistance Rmay be defined as follows:
or
(4–8)
where is a small change in the gas pressure difference and dqis a small change
in the gas flow rate. Computation of the value of the gas flow resistance Rmay be quite
time consuming. Experimentally, however, it can be easily determined from a plot of
the pressure difference versus flow rate by calculating the slope of the curve at a given
operating condition, as shown in Figure 4–4(b).
The capacitance of the pressure vessel may be defined by
or
(4–9) C=dm
dp=Vdr
dpC=change in gas stored, lb
change in gas pressure, lb
f
/H20862ft
2
d(¢P)R=d(¢P)
dqR=change in gas pressure difference, lb
f
/H20862ft
2
change in gas flow rate, lb /H20862sec
Openmirrors.com
108
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
where capacitance, lb-ft
2
/H20862lb
f
mass of gas in vessel, lb
gas pressure, lb
f
/H20862ft
2
volume of vessel, ft
3
density, lb /H20862ft
3
The capacitance of the pressure system depends on the type of expansion process
involved. The capacitance can be calculated by use of the ideal gas law. If the gas ex-
pansion process is polytropic and the change of state of the gas is between isothermal
and adiabatic, then
(4–10)
where n= polytropic exponent.
For ideal gases,
or
where absolute pressure, lb
f
/H20862ft
2
volume occupied by 1 mole of a gas, ft
3
/H20862lb-mole
universal gas constant, ft-lb
f
/H20862lb-mole °R
absolute temperature, °R
specific volume of gas, ft
3
/H20862lb
molecular weight of gas per mole, lb /H20862lb-mole
Thus
(4–11)
where R
gas
=gas constant, ft-lb
f
/H20862lb °R.
The polytropic exponent nis unity for isothermal expansion. For adiabatic expansion,
nis equal to the ratio of specific heats c
p
/H20862c
v
, where c
p
is the specific heat at constant pres-
sure and c
v
is the specific heat at constant volume. In many practical cases, the value of
nis approximately constant, and thus the capacitance may be considered constant.
The value of dr/H20862dpis obtained from Equations (4–10) and (4–11). From
Equation (4–10) we have
or
Substituting Equation (4–11) into this last equation, we get
dr
dp=1
nR
gas
 
Tdr
dp=1
Knr
n-1
=r
n
pnr
n-1
=r
pndp=Knr
n-1
drpv=p
r=R–
MT=R
gas
 
TM=v=T=R–=v
–
=p=pv=R–
MT pv
–
=R–Tp
a
V
m
b
n
=p
r
n
=constant =Kr=V=p=m=C=
Openmirrors.com
Section 4–3 / Pneumatic Systems 109The capacitance Cis then obtained as
(4–12)
The capacitance of a given vessel is constant if the temperature stays constant. (In many
practical cases, the polytropic exponent nis approximately 1.0 ~1.2 for gases in unin-
sulated metal vessels.)
Pressure Systems. Consider the system shown in Figure 4–4(a). If we assume
only small deviations in the variables from their respective steady-state values, then thissystem may be considered linear.
Let us define
gas pressure in the vessel at steady state (before changes in pressure have
occurred), lb
f/H20862ft2
pi=small change in inflow gas pressure, lbf/H20862ft2
po=small change in gas pressure in the vessel, lbf/H20862ft2
V= volume of the vessel, ft3
m= mass of gas in the vessel, lb
q= gas flow rate, lb /H20862sec
r=density of gas, lb/ft3
For small values of piandpo, the resistance Rgiven by Equation (4–8) becomes constant
and may be written as
The capacitance Cis given by Equation (4–9), or
Since the pressure change dpotimes the capacitance Cis equal to the gas added to the
vessel during dtseconds, we obtain
or
which can be written as
Ifpiandpoare considered the input and output, respectively, then the transfer function
of the system is
where RChas the dimension of time and is the time constant of the system.Po(s)
Pi(s)=1
RCs +1RCdpo
dt+po=piCdpo
dt=pi-po
RCdpo=q dtC=dm
dpR=pi-po
qP–=C=V
nRgas T
110
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Air supplyOrificeInput
0Nozzle
(a) (b)Flapper
To control
valvePsPb
PsPb
Pa
XX
Figure 4–5
(a) Schematic
diagram of a
pneumatic nozzle–
flapper amplifier;
(b) characteristic
curve relating nozzle
back pressure and
nozzle–flapper
distance.
Pneumatic Nozzle–Flapper Amplifiers. A schematic diagram of a pneumatic
nozzle–flapper amplifier is shown in Figure 4–5(a). The power source for this amplifier
is a supply of air at constant pressure. The nozzle–flapper amplifier converts small
changes in the position of the flapper into large changes in the back pressure in the noz-
zle. Thus a large power output can be controlled by the very little power that is needed
to position the flapper.
In Figure 4–5(a), pressurized air is fed through the orifice, and the air is ejected from
the nozzle toward the flapper. Generally, the supply pressure for such a controller
is 20 psig (1.4 kg
f
/H20862cm
2
gage). The diameter of the orifice is on the order of 0.01 in.
(0.25 mm) and that of the nozzle is on the order of 0.016 in. (0.4 mm).To ensure prop-
er functioning of the amplifier, the nozzle diameter must be larger than the orifice
diameter.
In operating this system, the flapper is positioned against the nozzle opening. The
nozzle back pressure is controlled by the nozzle–flapper distance X. As the flapper
approaches the nozzle, the opposition to the flow of air through the nozzle increases, with
the result that the nozzle back pressure increases. If the nozzle is completely closed
by the flapper, the nozzle back pressure becomes equal to the supply pressure If
the flapper is moved away from the nozzle, so that the nozzle–flapper distance is wide
(on the order of 0.01 in.), then there is practically no restriction to flow, and the nozzle
back pressure takes on a minimum value that depends on the nozzle–flapper device.
(The lowest possible pressure will be the ambient pressure )
Note that, because the air jet puts a force against the flapper, it is necessary to make
the nozzle diameter as small as possible.
A typical curve relating the nozzle back pressure to the nozzle–flapper distance
Xis shown in Figure 4–5(b). The steep and almost linear part of the curve is utilized in
the actual operation of the nozzle–flapper amplifier. Because the range of flapper dis-
placements is restricted to a small value, the change in output pressure is also small,
unless the curve is very steep.
The nozzle–flapper amplifier converts displacement into a pressure signal. Since
industrial process control systems require large output power to operate large pneu-
matic actuating valves, the power amplification of the nozzle–flapper amplifier is usually
insufficient. Consequently, a pneumatic relay is often needed as a power amplifier in
connection with the nozzle–flapper amplifier.P
b
P
a
 
.P
b
P
s
 
. P
b
P
b
P
b
P
s
Openmirrors.com
Section 4–3 / Pneumatic Systems 111To atmosphere
PaNozzle
back pressure Pb
Air supply
PsPcTo pneumatic
valve
(a) (b)To atmosphereNozzle
back pressure Pb
Air supply
PsPcTo pneumatic
valvePneumatic Relays. In practice, in a pneumatic controller, a nozzle–flapper
amplifier acts as the first-stage amplifier and a pneumatic relay as the second-stage amplifier. The pneumatic relay is capable of handling a large quantity of airflow.
A schematic diagram of a pneumatic relay is shown in Figure 4–6(a).As the nozzle
back pressure increases, the diaphragm valve moves downward. The opening tothe atmosphere decreases and the opening to the pneumatic valve increases, therebyincreasing the control pressure When the diaphragm valve closes the opening tothe atmosphere, the control pressure becomes equal to the supply pressure When the nozzle back pressure decreases and the diaphragm valve moves upwardand shuts off the air supply, the control pressure drops to the ambient pressure The control pressure can thus be made to vary from 0 psig to full supply pressure,usually 20 psig.
The total movement of the diaphragm valve is very small. In all positions of the
valve, except at the position to shut off the air supply, air continues to bleed into the at-mosphere, even after the equilibrium condition is attained between the nozzle backpressure and the control pressure. Thus the relay shown in Figure 4–6(a) is called ableed-type relay.
There is another type of relay, the nonbleed type. In this one the air bleed stops
when the equilibrium condition is obtained and, therefore, there is no loss of pres-surized air at steady-state operation. Note, however, that the nonbleed-type relaymust have an atmospheric relief to release the control pressure from the pneu-matic actuating valve.A schematic diagram of a nonbleed-type relay is shown in Fig-ure 4–6(b).
In either type of relay, the air supply is controlled by a valve, which is in turn
controlled by the nozzle back pressure.Thus, the nozzle back pressure is converted intothe control pressure with power amplification.
Since the control pressure changes almost instantaneously with changes in the
nozzle back pressure the time constant of the pneumatic relay is negligiblecompared with the other larger time constants of the pneumatic controller andthe plant.P
b ,PcPcPcPa . PcPbPs . PcPc .Pb
Figure 4–6
(a) Schematic diagram of a bleed-type relay; (b) schematic diagram of a nonbleed-type relay.
112
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
To atmosphereNozzle
back pressure Pb
Air supply
PsPcTo pneumatic
valve
Figure 4–7
Reverse-acting relay.
It is noted that some pneumatic relays are reverse acting. For example, the relay
shown in Figure 4–7 is a reverse-acting relay. Here, as the nozzle back pressure 
increases, the ball valve is forced toward the lower seat, thereby decreasing the control
pressure Thus, this relay is a reverse-acting relay.
Pneumatic Proportional Controllers (Force-Distance Type). Two types of pneu-
matic controllers, one called the force-distance type and the other the force-balance type,
are used extensively in industry. Regardless of how differently industrial pneumatic con-
trollers may appear, careful study will show the close similarity in the functions of the
pneumatic circuit. Here we shall consider the force-distance type of pneumatic controllers.
Figure 4–8(a) shows a schematic diagram of such a proportional controller.The nozzle–
flapper amplifier constitutes the first-stage amplifier, and the nozzle back pressure is
controlled by the nozzle–flapper distance.The relay-type amplifier constitutes the second-
stage amplifier.The nozzle back pressure determines the position of the diaphragm valve
for the second-stage amplifier, which is capable of handling a large quantity of airflow.
In most pneumatic controllers, some type of pneumatic feedback is employed. Feed-
back of the pneumatic output reduces the amount of actual movement of the flapper.
Instead of mounting the flapper on a fixed point, as shown in Figure 4–8(b), it is often
pivoted on the feedback bellows, as shown in Figure 4–8(c).The amount of feedback can
be regulated by introducing a variable linkage between the feedback bellows and the
flapper connecting point. The flapper then becomes a floating link. It can be moved by
both the error signal and the feedback signal.
The operation of the controller shown in Figure 4–8(a) is as follows. The input sig-
nal to the two-stage pneumatic amplifier is the actuating error signal. Increasing the
actuating error signal moves the flapper to the left. This move will, in turn, increase the
nozzle back pressure, and the diaphragm valve moves downward. This results in an in-
crease of the control pressure. This increase will cause bellows Fto expand and move
the flapper to the right, thus opening the nozzle. Because of this feedback, the nozzle–
flapper displacement is very small, but the change in the control pressure can be large.
It should be noted that proper operation of the controller requires that the feed-
back bellows move the flapper less than that movement caused by the error signal alone.
(If these two movements were equal, no control action would result.)
Equations for this controller can be derived as follows. When the actuating error is
zero, or e=0 , an equilibrium state exists with the nozzle–flapper distance equal to the X–,P
c
 
.P
b
Openmirrors.com
Section 4–3 / Pneumatic Systems 113+–OrificeActuating error signal
Flapper
Nozzle
Pneumatic relay
(a)
(b) (c)Pse
a
b
FPb+pb
X+x
Z+zY+y
Pc+pcError signal Error signal
Feedback
signal
E(s) X(s) Pc(s)
Y(s)
(e)b
a+b
a
a+bA
ksE(s)
(f)Pc(s)
Kp Kb
a+beee
yyx
aa
bba
a+by–=
(d)
displacement of bellows equal to the displacement of the diaphragm equal to the
nozzle back pressure equal to and the control pressure equal to When an actuatingerror exists, the nozzle–flapper distance, the displacement of the bellows, the displacementof the diaphragm, the nozzle back pressure, and the control pressure deviate from their re-spective equilibrium values. Let these deviations be x, y, z, p
b, and pc, respectively. (The pos-
itive direction for each displacement variable is indicated by an arrowhead in the diagram.)P–
c . P–
b ,Z–, Y–,Figure 4–8
(a) Schematic diagram of a force-distance type of pneumatic proportional controller;(b) flapper mounted on a fixed point; (c) flapper mounted on a feedback bellows;(d) displacement xas a result of addition of two small displacements;
(e) block diagram for the controller; (f) simplified block diagram for the controller.
114
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Assuming that the relationship between the variation in the nozzle back pressure and
the variation in the nozzle–flapper distance is linear, we have
(4–13)
where is a positive constant. For the diaphragm valve,
(4–14)
where K
2
is a positive constant. The position of the diaphragm valve determines the
control pressure. If the diaphragm valve is such that the relationship between and z
is linear, then
(4–15)
where K
3
is a positive constant. From Equations (4–13), (4–14), and (4–15), we obtain
(4–16)
where K=K
1
K
3
/K
2
is a positive constant. For the flapper, since there are two small
movements ( eandy) in opposite directions, we can consider such movements separately
and add up the results of two movements into one displacement x. See Figure 4–8(d).
Thus, for the flapper movement, we have
(4–17)
The bellows acts like a spring, and the following equation holds true:
(4–18)
where Ais the effective area of the bellows and k
s
is the equivalent spring constant—
that is, the stiffness due to the action of the corrugated side of the bellows.
Assuming that all variations in the variables are within a linear range, we can obtain
a block diagram for this system from Equations (4–16), (4–17), and (4–18) as shown in
Figure 4–8(e). From Figure 4–8(e), it can be clearly seen that the pneumatic controller
shown in Figure 4–8(a) itself is a feedback system.The transfer function between and
eis given by
(4–19)
A simplified block diagram is shown in Figure 4–8(f). Since and eare proportional,
the pneumatic controller shown in Figure 4–8(a) is a pneumatic proportional controller .
As seen from Equation (4–19), the gain of the pneumatic proportional controller can be
widely varied by adjusting the flapper connecting linkage. [The flapper connecting link-
age is not shown in Figure 4–8(a).] In most commercial proportional controllers an ad-
justing knob or other mechanism is provided for varying the gain by adjusting this linkage.
As noted earlier, the actuating error signal moved the flapper in one direction, and
the feedback bellows moved the flapper in the opposite direction, but to a smaller degree.p
c
P
c
(s)
E(s)=b
a+bK
1+Ka
a+bA
k
s
=K
p
p
c
Ap
c
=k
s
 
yx=b
a+be-a
a+byp
c
=K
3
K
2
p
b
=K
1
 
K
3
K
2
x=Kxp
c
=K
3
 
zp
c
p
b
=K
2
 
zK
1
p
b
=K
1
 
x
Openmirrors.com
Section 4–3 / Pneumatic Systems 115(a) (b)00 XX
Ps
PsPb
XPsPb
Pa
PcPaPc
The effect of the feedback bellows is thus to reduce the sensitivity of the controller. The
principle of feedback is commonly used to obtain wide proportional-band controllers.
Pneumatic controllers that do not have feedback mechanisms [which means that
one end of the flapper is fixed, as shown in Figure 4–9(a)] have high sensitivity and arecalled pneumatic two-position controllers orpneumatic on–off controllers . In such a con-
troller, only a small motion between the nozzle and the flapper is required to give acomplete change from the maximum to the minimum control pressure. The curves re-lating to Xand to Xare shown in Figure 4–9(b). Notice that a small change in X
can cause a large change in which causes the diaphragm valve to be completely openor completely closed.
Pneumatic Proportional Controllers (Force-Balance Type). Figure 4–10 shows
a schematic diagram of a force-balance type pneumatic proportional controller. Force-balance type controllers are in extensive use in industry. Such controllers are called stackcontrollers.The basic principle of operation does not differ from that of the force-distancetype controller. The main advantage of the force-balance type controller is that it elimi-nates many mechanical linkages and pivot joints, thereby reducing the effects of friction.
In what follows, we shall consider the principle of the force-balance type controller.
In the controller shown in Figure 4–10, the reference input pressure and the outputpressure are fed to large diaphragm chambers. Note that a force-balance type pneu-matic controller operates only on pressure signals. Therefore, it is necessary to convertthe reference input and system output to corresponding pressure signals.P
oPrPb ,Pc Pb
Output
pressurePr
PoA1
A1A2Reference
input pressure
X + xPc + pcAtmosphere
Air supplyControl
pressureP1 = k(Pc + pc)
Figure 4–10
Schematic diagramof a force-balance
type pneumatic
proportionalcontroller.Figure 4–9
(a) Pneumatic controller without a feedback mechanism; (b) curves versus Xand versus X. P
c Pb
116
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
As in the case of the force-distance type controller, this controller employs a flapper,
nozzle, and orifices. In Figure 4–10, the drilled opening in the bottom chamber is the
nozzle. The diaphragm just above the nozzle acts as a flapper.
The operation of the force-balance type controller shown in Figure 4–10 may be
summarized as follows: 20-psig air from an air supply flows through an orifice, causing
a reduced pressure in the bottom chamber. Air in this chamber escapes to the atmos-
phere through the nozzle. The flow through the nozzle depends on the gap and the
pressure drop across it. An increase in the reference input pressure while the out-
put pressure remains the same, causes the valve stem to move down, decreasing the
gap between the nozzle and the flapper diaphragm.This causes the control pressure 
to increase. Let
(4–20)
Ifp
e
=0, there is an equilibrium state with the nozzle–flapper distance equal to and
the control pressure equal to At this equilibrium state, and
(4–21)
whereais a constant.
Let us assume that p
e
Z0 and define small variations in the nozzle–flapper distance
and control pressure as xandp
c
, respectively. Then we obtain the following equation:
(4–22)
From Equations (4–21) and (4–22), we obtain
(4–23)
At this point, we must examine the quantity x. In the design of pneumatic controllers,
the nozzle–flapper distance is made quite small. In view of the fact that x/ais very much
smaller than p
c
(1-k) A
1
orp
e
AA
2
-A
1
B—that is, for p
e
Z0
we may neglect the term xin our analysis. Equation (4–23) can then be rewritten to
reflect this assumption as follows:
and the transfer function between p
c
andp
e
becomes
where p
e
is defined by Equation (4–20). The controller shown in Figure 4–10 is a
proportional controller.The value of gain K
p
increases as kapproaches unity. Note that
the value of kdepends on the diameters of the orifices in the inlet and outlet pipes of
the feedback chamber. (The value of kapproaches unity as the resistance to flow in the
orifice of the inlet pipe is made smaller.)P
c
(s)
P
e
(s)=A
2
-A
1
A
1
1
1-k=K
p
p
c
(1-k)A
1
=p
e
AA
2
-A
1
Bx
a/H11270p
e
AA
2
-A
1
Bx
a/H11270p
c
(1-k)A
1
x=aCp
c
(1-k)A
1
-p
e
AA
2
-A
1
BDX–+x=aCAP–
c
+p
c
BA
1
-AP–
c
+p
c
BkA
1
-p
e
AA
2
-A
1
BDX–=aAP–
c
 
A
1
-P–
c
 
kA
1
BP
1
=P–
c
 
k (where  k61) P–
c
 
.X–p
e
=P
r
-P
o
P
c
P
o
P
r
 
,
Openmirrors.com
Section 4–3 / Pneumatic Systems 117CPc+ p c
A
k
X+xQ+  q i
Figure 4–11
Schematic diagramof a pneumaticactuating valve.Pneumatic Actuating Valves. One characteristic of pneumatic controls is that
they almost exclusively employ pneumatic actuating valves.A pneumatic actuating valvecan provide a large power output. (Since a pneumatic actuator requires a large powerinput to produce a large power output, it is necessary that a sufficient quantity of pres-surized air be available.) In practical pneumatic actuating valves, the valve characteris-tics may not be linear; that is, the flow may not be directly proportional to the valvestem position, and also there may be other nonlinear effects, such as hysteresis.
Consider the schematic diagram of a pneumatic actuating valve shown in Figure 4–11.
Assume that the area of the diaphragm is A. Assume also that when the actuating error
is zero, the control pressure is equal to and the valve displacement is equal to 
In the following analysis, we shall consider small variations in the variables and lin-
earize the pneumatic actuating valve. Let us define the small variation in the controlpressure and the corresponding valve displacement to be and x, respectively. Since
a small change in the pneumatic pressure force applied to the diaphragm repositionsthe load, consisting of the spring, viscous friction, and mass, the force-balance equa-tion becomes
where m= mass of the valve and valve stem
b= viscous-friction coefficient
k= spring constant
If the force due to the mass and viscous friction are negligibly small, then this last equa-
tion can be simplified to
The transfer function between xand thus becomes
X(s)
Pc(s)=A
k=KcpcApc=kxApc=mx$+bx#+kxpcX–. P–
c
118
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
where X(s)= l[x]and If q
i
, the change in flow through the pneumatic
actuating valve, is proportional to x, the change in the valve-stem displacement, then
where Q
i
(s)=lCq
i
Dand K
q
is a constant. The transfer function between q
i
and
becomes
where K
v
is a constant.
The standard control pressure for this kind of a pneumatic actuating valve is between
3 and 15 psig. The valve-stem displacement is limited by the allowable stroke of the
diaphragm and is only a few inches. If a longer stroke is needed, a piston–spring
combination may be employed.
In pneumatic actuating valves, the static-friction force must be limited to a low value
so that excessive hysteresis does not result. Because of the compressibility of air, the
control action may not be positive; that is, an error may exist in the valve-stem position.
The use of a valve positioner results in improvements in the performance of a pneu-
matic actuating valve.
Basic Principle for Obtaining Derivative Control Action. We shall now present
methods for obtaining derivative control action. We shall again place the emphasis on
the principle and not on the details of the actual mechanisms.
The basic principle for generating a desired control action is to insert the inverse of
the desired transfer function in the feedback path. For the system shown in Figure 4–12,
the closed-loop transfer function is
If@G(s)H(s)@/H112711, then C(s)/R(s) can be modified to
Thus, if proportional-plus-derivative control action is desired, we insert an element
having the transfer function 1/(Ts+1) in the feedback path.C(s)
R(s)=1
H(s)C(s)
R(s)=G(s)
1+G(s)H(s)Q
i
(s)
P
c
(s)=K
c
 
K
q
=K
v
p
c
Q
i
(s)
X(s)=K
q
P
c
(s)=lCp
c
D.
R(s) C(s)
G(s)
H(s)
+–
Figure 4–12
Control system.
Openmirrors.com
Section 4–3 / Pneumatic Systems 119+–e
a
b
(a) (b)Pc(s) E(s) X(s)b
a+bK
a
a+bA
ksX+x
Pc+pcPs
Figure 4–13
(a) Pneumatic proportional controller; (b) block diagram of the controller.
(a) (b)
(c)e
ea
bPs
pcX + x
Pc + pcRC
Pc(s) E(s) X(s)
Kx
ttt
a
a+bA
ksb
a+b
1
RCs + 1+–Figure 4–14
(a) Pneumaticproportional-plus-
derivative controller;
(b) step change in e
and the corre-sponding changes inxandp
cplotted
versus t; (c) block
diagram of the
controller.Consider the pneumatic controller shown in Figure 4–13(a). Considering small changes
in the variables, we can draw a block diagram of this controller as shown in Figure 4–13(b).From the block diagram we see that the controller is of proportional type.
We shall now show that the addition of a restriction in the negative feedback path
will modify the proportional controller to a proportional-plus-derivative controller, ora PD controller.
Consider the pneumatic controller shown in Figure 4–14(a).Assuming again small changes
in the actuating error, nozzle–flapper distance, and control pressure, we can summarizethe operation of this controller as follows: Let us first assume a small step change in e.
120
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Then the change in the control pressure will be instantaneous.The restriction Rwill mo-
mentarily prevent the feedback bellows from sensing the pressure change p
c
.Thus the feed-
back bellows will not respond momentarily, and the pneumatic actuating valve will feel the
full effect of the movement of the flapper.As time goes on, the feedback bellows will expand.
The change in the nozzle–flapper distance xand the change in the control pressure can
be plotted against time t, as shown in Figure 4–14(b). At steady state, the feedback bellows
acts like an ordinary feedback mechanism.The curve versus tclearly shows that this con-
troller is of the proportional-plus-derivative type.
A block diagram corresponding to this pneumatic controller is shown in 
Figure 4–14(c). In the block diagram, Kis a constant, Ais the area of the bellows, and
k
s
is the equivalent spring constant of the bellows.The transfer function between and
ecan be obtained from the block diagram as follows:
In such a controller the loop gain is made much greater
than unity. Thus the transfer function P
c
(s)/E(s) can be simplified to give
where
Thus, delayed negative feedback, or the transfer function 1/(RCs+1) in the feedback
path, modifies the proportional controller to a proportional-plus-derivative controller.
Note that if the feedback valve is fully opened, the control action becomes propor-
tional. If the feedback valve is fully closed, the control action becomes narrow-band
proportional (on–off).
Obtaining Pneumatic Proportional-Plus-Integral Control Action. Consider
the proportional controller shown in Figure 4–13(a). Considering small changes in the
variables, we can show that the addition of delayed positive feedback will modify this
proportional controller to a proportional-plus-integral controller, or a PI controller.
Consider the pneumatic controller shown in Figure 4–15(a).The operation of this con-
troller is as follows:The bellows denoted by I is connected to the control pressure source
without any restriction. The bellows denoted by II is connected to the control pressure
source through a restriction. Let us assume a small step change in the actuating error.This
will cause the back pressure in the nozzle to change instantaneously.Thus a change in the
control pressure also occurs instantaneously. Due to the restriction of the valve in the
path to bellows II, there will be a pressure drop across the valve.As time goes on, air will
flow across the valve in such a way that the change in pressure in bellows II attains the value
p
c
. Thus bellows II will expand or contract as time elapses in such a way as to move the
flapper an additional amount in the direction of the original displacement e.This will cause
the back pressure in the nozzle to change continuously, as shown in Figure 4–15(b). p
c
p
c
K
p
=bk
s
aA,
  
T
d
=RCP
c
(s)
E(s)=K
p
A1+T
d
 
sB@KaA /H20862C(a+b)k
s
(RCs +1)D@P
c
(s)
E(s)=b
a+bK
1+Ka
a+bA
k
s
1
RCs +1p
c
p
c
p
c
p
c
Openmirrors.com
Section 4–3 / Pneumatic Systems 121(a) (b)
(c)
(d)e
a
bX+x
Pc+pcPs
R
C
pc
K
Kxe
ttt
E(s) X(s) Pc(s)
E(s) X(s) Pc(s)a
a+bb
a+b
b
a+bA
ks
a
a+bA
ks
a
a+bA
ks1
RCs + 1
1
RCs + 1II I
+–++
+–
+–Figure 4–15
(a) Pneumaticproportional-plus-
integral controller;
(b) step change in e
and the corre-sponding changes inxandp
cplotted
versus t; (c) block
diagram of the
controller;
(d) simplified blockdiagram.
Note that the integral control action in the controller takes the form of slowly
canceling the feedback that the proportional control originally provided.
A block diagram of this controller under the assumption of small variations in the
variables is shown in Figure 4–15(c). A simplification of this block diagram yields Figure 4–15(d). The transfer function of this controller is
P
c(s)
E(s)=b
a+bK
1+Ka
a+bA
ksa1-1
RCs +1b
122
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
+–
(a)
(b)e
a
bX+x
P
s
R
i
R
d
CC
P
c
+p
c
(R
i
/H11022/H11022 R
d
)
P
c
(s) E(s) X(s)
Kb
a+b
a
a+b
A
k
s
1
R
d
Cs+ 1
1
R
i
Cs+ 1
–+
Figure 4–16
(a) Pneumatic
proportional-plus-
integral-plus-
derivative controller;
(b) block diagram of
the controller.
where Kis a constant, Ais the area of the bellows, and k
s
is the equivalent spring constant
of the combined bellows. If which is usually the
case, the transfer function can be simplified to
where
Obtaining Pneumatic Proportional-Plus-Integral-Plus-Derivative Control
Action. A combination of the pneumatic controllers shown in Figures 4–14(a) and
4–15(a) yields a proportional-plus-integral-plus-derivative controller, or a PID con-
troller. Figure 4–16(a) shows a schematic diagram of such a controller. Figure 4–16(b)
shows a block diagram of this controller under the assumption of small variations in the
variables.K
p
=bk
s
aA,
  
T
i
=RCP
c
(s)
E(s)=K
p
a
1+1
T
i
 
s
b
@KaARCs /H20862C(a+b)k
s
(RCs +1)D@/H112711,
Openmirrors.com
Section 4–4 / Hydraulic Systems 123The transfer function of this controller is
By defining
and noting that under normal operation 
and we obtain
(4–24)
where
Equation (4–24) indicates that the controller shown in Figure 4–16(a) is a proportional-
plus-integral-plus-derivative controller or a PID controller.
4–4 HYDRAULIC SYSTEMS
Except for low-pressure pneumatic controllers, compressed air has seldom been used for
the continuous control of the motion of devices having significant mass under externalload forces. For such a case, hydraulic controllers are generally preferred.
Hydraulic Systems. The widespread use of hydraulic circuitry in machine tool
applications, aircraft control systems, and similar operations occurs because of such fac-tors as positiveness, accuracy, flexibility, high horsepower-to-weight ratio, fast starting,stopping, and reversal with smoothness and precision, and simplicity of operations.
The operating pressure in hydraulic systems is somewhere between 145 and 5000 lb
f/H20862in.2
(between 1 and 35 MPa). In some special applications, the operating pressure may go up
to 10,000 lbf/H20862in.2(70 MPa). For the same power requirement, the weight and size of
the hydraulic unit can be made smaller by increasing the supply pressure. With high-pressure hydraulic systems, very large force can be obtained. Rapid-acting, accuratepositioning of heavy loads is possible with hydraulic systems. A combination of elec-tronic and hydraulic systems is widely used because it combines the advantages of bothelectronic control and hydraulic power.K
p=bks
aA =Kpa1+1
Ti s+Td sb /H11216bks
aA Td Ti s2+Ti s+1
Ti s Pc(s)
E(s)/H11216bks
aA ATd s+1BATi s+1B
ATi-TdBsTi/H11271Td ,/H112711 @KaAATi-TdBs/H20862C(a+b)ksATd s+1BATi s+1BD@Ti=Ri C,  Td=Rd CPc(s)
E(s)=bK
a+b
1+Ka
a+bA
ksARi C-Rd CBs
ARd Cs+1BARi Cs+1B
124
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Advantages and Disadvantages of Hydraulic Systems. There are certain
advantages and disadvantages in using hydraulic systems rather than other systems.
Some of the advantages are the following:
1.Hydraulic fluid acts as a lubricant, in addition to carrying away heat generated in
the system to a convenient heat exchanger.
2.Comparatively small-sized hydraulic actuators can develop large forces or torques.
3.Hydraulic actuators have a higher speed of response with fast starts, stops, and
speed reversals.
4.Hydraulic actuators can be operated under continuous, intermittent, reversing,
and stalled conditions without damage.
5.Availability of both linear and rotary actuators gives flexibility in design.
6.Because of low leakages in hydraulic actuators, speed drop when loads are applied
is small.
On the other hand, several disadvantages tend to limit their use.
1.Hydraulic power is not readily available compared to electric power.
2.Cost of a hydraulic system may be higher than that of a comparable electrical
system performing a similar function.
3.Fire and explosion hazards exist unless fire-resistant fluids are used.
4.Because it is difficult to maintain a hydraulic system that is free from leaks, the
system tends to be messy.
5.Contaminated oil may cause failure in the proper functioning of a hydraulic
system.
6.As a result of the nonlinear and other complex characteristics involved, the design
of sophisticated hydraulic systems is quite involved.
7.Hydraulic circuits have generally poor damping characteristics. If a hydraulic circuit
is not designed properly, some unstable phenomena may occur or disappear, de-
pending on the operating condition.
Comments. Particular attention is necessary to ensure that the hydraulic system
is stable and satisfactory under all operating conditions. Since the viscosity of hydraulic
fluid can greatly affect damping and friction effects of the hydraulic circuits, stability
tests must be carried out at the highest possible operating temperature.
Note that most hydraulic systems are nonlinear. Sometimes, however, it is possible
to linearize nonlinear systems so as to reduce their complexity and permit solutions that
are sufficiently accurate for most purposes.A useful linearization technique for dealing
with nonlinear systems was presented in Section 2–7.
Hydraulic Servo System. Figure 4–17(a) shows a hydraulic servomotor. It is
essentially a pilot-valve-controlled hydraulic power amplifier and actuator. The pilot
valve is a balanced valve, in the sense that the pressure forces acting on it are all balanced.
A very large power output can be controlled by a pilot valve, which can be positioned
with very little power.
In practice, the ports shown in Figure 4–17(a) are often made wider than the corre-
sponding valves. In such a case, there is always leakage through the valves. Such leak-
Openmirrors.com
Section 4–4 / Hydraulic Systems 125x
yqqp0 p0 ps
p1 p223 41
(a)
x
(b)2 1ps
x0
2+xx0
2–xLoad
m b
Figure 4–17
(a) Hydraulic servosystem; (b) enlarged
diagram of the valve
orifice area.
age improves both the sensitivity and the linearity of the hydraulic servomotor. In the
following analysis we shall make the assumption that the ports are made wider thanthe valves—that is, the valves are underlapped. [Note that sometimes a dither signal, ahigh-frequency signal of very small amplitude (with respect to the maximumdisplacement of the valve), is superimposed on the motion of the pilot valve. This alsoimproves the sensitivity and linearity. In this case also there is leakage through the valve.]
We shall apply the linearization technique presented in Section 2–7 to obtain a lin-
earized mathematical model of the hydraulic servomotor. We assume that the valve isunderlapped and symmetrical and admits hydraulic fluid under high pressure into apower cylinder that contains a large piston, so that a large hydraulic force is establishedto move a load.
In Figure 4–17(b) we have an enlarged diagram of the valve orifice area. Let us
define the valve orifice areas of ports 1, 2, 3, 4 as A
1,A2,A3,A4,respectively.Also, define
the flow rates through ports 1, 2, 3, 4 as q1,q2,q3,q4,respectively. Note that, since the
126
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
valve is symmetrical, A
1
=A
3
andA
2
=A
4
. Assuming the displacement xto be small,
we obtain
where kis a constant.
Furthermore, we shall assume that the return pressure p
o
in the return line is small
and thus can be neglected. Then, referring to Figure 4–17(a), flow rates through valve
orifices are
where and and gis the specific weight and is given by
g=rg, where ris mass density and gis the acceleration of gravity. The flow rate qto
the left-hand side of the power piston is
(4–25)
The flow rate from the right-hand side of the power piston to the drain is the same as
thisqand is given by
In the present analysis we assume that the fluid is incompressible. Since the valve is
symmetrical, we have q
1
=q
3
andq
2
=q
4
.By equating q
1
andq
3
,we obtain
or
If we define the pressure difference across the power piston as or
¢p=p
1
-p
2
¢pp
s
=p
1
+p
2
p
s
-p
1
=p
2
q=q
3
-q
2
=C
1
1p
2
a
x
0
2+x
b
-C
2
1p
s
-p
2
a
x
0
2-x
b
q=q
1
-q
4
=C
1
1p
s
-p
1
a
x
0
2+x
b
-C
2
1p
1
a
x
0
2-x
b
C
2
=c
2
 
k12g/H20862g
, C
1
=c
1
 
k12g/H20862g
q
4
=c
2
 
A
4
B2g
gAp
1
-p
0
B
=C
2
1p
1
-p
0
a
x
0
2-x
b
=C
2
1p
1
a
x
0
2-x
b
q
3
=c
1
 
A
3
B2g
gAp
2
-p
0
B
=C
1
1p
2
-p
0
a
x
0
2+x
b
=C
1
1p
2
a
x
0
2+x
b
q
2
=c
2
 
A
2
B2g
gAp
s
-p
2
B
=C
2
1p
s
-p
2
a
x
0
2-x
b
q
1
=c
1
 
A
1
B2g
gAp
s
-p
1
B
=C
1
1p
s
-p
1
a
x
0
2+x
b
A
2
=A
4
=k
a
x
0
2-x
b
A
1
=A
3
=k
a
x
0
2+x
b
Openmirrors.com
Section 4–4 / Hydraulic Systems 127then
For the symmetrical valve shown in Figure 4–17(a), the pressure in each side of the
power piston is (1/2)pswhen no load is applied, or As the spool valve is dis-
placed, the pressure in one line increases as the pressure in the other line decreases bythe same amount.
In terms of p
sand we can rewrite the flow rate qgiven by Equation (4–25) as
Noting that the supply pressure psis constant. the flow rate qcan be written as a func-
tion of the valve displacement xand pressure difference or
By applying the linearization technique presented in Section 3–10 to this case, the lin-
earized equation about point is
(4–26)
where
Coefficients aand bhere are called valve coefficients . Equation (4–26) is a linearized
mathematical model of the spool valve near an operating point The values of valve coefficients aandbvary with the operating point. Note that 
is negative and so bis negative.
Since the normal operating point is the point where near the
normal operating point Equation (4–26) becomes
(4–27)
where
 K
2=AC1+C2Bx0
4121ps70 K1=AC1+C2BAps
270q=K1 x-K2¢px–=0,¢p–=0, q–=0,0f/H208620¢px=x–,¢p=¢p–,q=q–.+C2
2121ps+¢p–ax0
2-x–bR60b=0f
0¢p2
x=x–,¢p=¢p–=-cC1
2121ps-¢p–ax0
2+x–ba=0f
0x2
x=x–,¢p=¢p–=C1Aps-¢p–
2+C2Aps+¢p–
2q–=f(x–,¢p–)q-q–=a(x -x–)+b(¢p-¢p–)x=x–,¢p=¢p–,q=q–q=C1Aps-¢p
2ax0
2+xb-C2Aps+¢p
2ax0
2-xb=f(x, ¢p)¢p,q=q1-q4=C1Aps-¢p
2ax0
2+xb-C2Aps+¢p
2ax0
2-xb¢p,¢p=0.p1=ps+¢p
2,  p2=ps-¢p
2
128
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
x=2x
1
x= x
1
x=0
x=–x
1
0q
/H9004Px=–2x
1
Figure 4–18
Characteristic curves
of the linearized
hydraulic
servomotor.
Equation (4–27) is a linearized mathematical model of the spool valve near the origin
Note that the region near the origin is most important in this
kind of system, because the system operation usually occurs near this point.
Figure 4–18 shows this linearized relationship among q, x, and The straight lines
shown are the characteristic curves of the linearized hydraulic servomotor. This family
of curves consists of equidistant parallel straight lines, parametrized by x.
In the present analysis we assume that the load reactive forces are small, so that the
leakage flow rate and oil compressibility can be ignored.
Referring to Figure 4–17(a), we see that the rate of flow of oil qtimes dtis equal to
the power-piston displacement dytimes the piston area Atimes the density of oil r.
Thus, we obtain
Notice that for a given flow rate qthe larger the piston area Ais, the lower will be the
velocity dy/H20862dt. Hence, if the piston area Ais made smaller, the other variables re-
maining constant, the velocity dy/H20862dtwill become higher.Also, an increased flow rate q
will cause an increased velocity of the power piston and will make the response time
shorter.
Equation (4–27) can now be written as
The force developed by the power piston is equal to the pressure difference times
the piston area Aor
 =A
K
2
 
a
K
1
 
x-Ar dy
dt
b
 Force developed by the power piston =A ¢P¢P¢P=1
K
2
a
K
1
 
x-Ardy
dt
b
Ar dy=q dt¢P.(x
–
=0,¢p
–
=0, q
–
=0.)
Openmirrors.com
Section 4–4 / Hydraulic Systems 129For a given maximum force, if the pressure difference is sufficiently high, the piston
area, or the volume of oil in the cylinder, can be made small. Consequently, to minimizethe weight of the controller, we must make the supply pressure sufficiently high.
Assume that the power piston moves a load consisting of a mass and viscous friction.
Then the force developed by the power piston is applied to the load mass and friction,and we obtain
or
(4–28)
where mis the mass of the load and bis the viscous-friction coefficient.
Assuming that the pilot-valve displacement xis the input and the power-piston
displacement yis the output, we find that the transfer function for the hydraulic servo-
motor is, from Equation (4–28),
(4–29)
where
and
From Equation (4–29) we see that this transfer function is of the second order. If the ratio 
is negligibly small or the time constant Tis negligible, the transfer
function Y(s)/X(s) can be simplified to give
It is noted that a more detailed analysis shows that if oil leakage, compressibility 
(including the effects of dissolved air), expansion of pipelines, and the like are takeninto consideration, the transfer function becomes
where and are time constants. As a matter of fact, these time constants depend on
the volume of oil in the operating circuit. The smaller the volume, the smaller the timeconstants.T
2 T1Y(s)
X(s)=K
sAT1 s+1BAT2 s+1BY(s)
X(s)=K
smK2/H20862AbK2+A2rBT=mK2
bK2+A2rK=1
bK2
AK1+Ar
K1 =K
s(Ts +1) Y(s)
X(s)=1
scamK2
AK1bs+bK2
AK1+Ar
K1dmy$+ab+A2r
K2by#=AK1
K2xmy$+by#=A
K2AK1 x-Ary#B
130
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
x
Port I Port II
Power cylinder
yPilot valveOil
under
pressure
Figure 4–19
Hydraulic
servomotor.
Hydraulic Integral Controller. The hydraulic servomotor shown in Figure 4–19 is
a pilot-valve-controlled hydraulic power amplifier and actuator. Similar to the hydraulic
servo system shown in Figure 4–17, for negligibly small load mass the servomotor shown
in Figure 4–19 acts as an integrator or an integral controller. Such a servomotor consti-
tutes the basis of the hydraulic control circuit.
In the hydraulic servomotor shown in Figure 4–19, the pilot valve (a four-way valve)
has two lands on the spool. If the width of the land is smaller than the port in the valve
sleeve, the valve is said to be underlapped .Overlapped valves have a land width greater than
the port width.A zero-lapped valve has a land width that is identical to the port width. (If
the pilot valve is a zero-lapped valve, analyses of hydraulic servomotors become simpler.)
In the present analysis, we assume that hydraulic fluid is incompressible and that the
inertia force of the power piston and load is negligible compared to the hydraulic force
at the power piston. We also assume that the pilot valve is a zero-lapped valve, and the
oil flow rate is proportional to the pilot valve displacement.
Operation of this hydraulic servomotor is as follows. If input xmoves the pilot valve
to the right, port II is uncovered, and so high-pressure oil enters the right-hand side of
the power piston. Since port I is connected to the drain port, the oil in the left-hand side
of the power piston is returned to the drain. The oil flowing into the power cylinder is
at high pressure; the oil flowing out from the power cylinder into the drain is at low
pressure. The resulting difference in pressure on both sides of the power piston will
cause it to move to the left.
Note that the rate of flow of oil q (kg/H20862sec)times dt(sec)is equal to the power-piston
displacement dy(m)times the piston area A (m
2
)times the density of oil r(kg/H20862m
3
).
Therefore,
(4–30)
Because of the assumption that the oil flow rate qis proportional to the pilot-valve
displacement x, we have
(4–31)
where K
1
is a positive constant. From Equations (4–30) and (4–31) we obtain
Ar dy
dt=K
1
 
xq=K
1
 
xAr dy=q dt
Openmirrors.com
Section 4–4 / Hydraulic Systems 131(a) (b)e
ba
x
yII IA
B
COil
under
pressure
E(s) X(s) Y(s)
a
a+bb
a+bK
s+– Figure 4–20
(a) Servomotor thatacts as a proportional
controller; (b) block
diagram of theservomotor.The Laplace transform of this last equation, assuming a zero initial condition, gives
or
where K= K1/(Ar). Thus the hydraulic servomotor shown in Figure 4–19 acts as an
integral controller.
Hydraulic Proportional Controller. It has been shown that the servomotor in
Figure 4–19 acts as an integral controller. This servomotor can be modified to a pro-portional controller by means of a feedback link. Consider the hydraulic controllershown in Figure 4–20(a). The left-hand side of the pilot valve is joined to the left-handside of the power piston by a link ABC .This link is a floating link rather than one mov-
ing about a fixed pivot.
The controller here operates in the following way. If input emoves the pilot valve to
the right, port II will be uncovered and high-pressure oil will flow through port II intothe right-hand side of the power piston and force this piston to the left. The power pis-ton, in moving to the left, will carry the feedback link ABC with it, thereby moving the
pilot valve to the left.This action continues until the pilot piston again covers ports I andII.A block diagram of the system can be drawn as in Figure 4–20(b).The transfer func-tion between Y(s) andE(s) is given by
Noting that under the normal operating conditions we have this
last equation can be simplified to
Y(s)
E(s)=b
a=Kp@Ka /H20862Cs(a+b)D@/H112711,Y(s)
E(s)=b
a+bK
s
1+K
sa
a+bY(s)
X(s)=K1
Ars=K
sArsY(s) =K1 X(s)
132
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
+–
(a) (b) (c)
Rq
P
2
P
1
Aky
yz
zt
tY(s) Z(s)
1
Ts
T=RA
2
r
k
The transfer function between yandebecomes a constant.Thus, the hydraulic controller
shown in Figure 4–20(a) acts as a proportional controller, the gain of which is K
p
.This gain
can be adjusted by effectively changing the lever ratio b/a. (The adjusting mechanism is
not shown in the diagram.)
We have thus seen that the addition of a feedback link will cause the hydraulic
servomotor to act as a proportional controller.
Dashpots. The dashpot (also called a damper) shown in Figure 4–21(a) acts as a
differentiating element. Suppose that we introduce a step displacement to the piston po-
sition y.Then the displacement zbecomes equal to ymomentarily. Because of the spring
force, however, the oil will flow through the resistance Rand the cylinder will come back
to the original position.The curves yversus tandzversus tare shown in Figure 4–21(b).
Let us derive the transfer function between the displacement zand displacement y.
Define the pressures existing on the right and left sides of the piston as and
respectively. Suppose that the inertia force involved is negligible. Then the
force acting on the piston must balance the spring force. Thus
where A= piston area, in.
2
k= spring constant, lb
f
/H20862in.
The flow rate qis given by
where q= flow rate through the restriction, lb /H20862sec
R= resistance to flow at the restriction, lb
f
-sec /H20862in.
2
-lb
Since the flow through the restriction during dtseconds must equal the change in the
mass of oil to the left of the piston during the same dtseconds, we obtain
wherer=density, lb /H20862in.
3
. (We assume that the fluid is incompressible or r=constant.)
This last equation can be rewritten as
dy
dt-dz
dt=q
Ar=P
1
-P
2
RAr=kz
RA
2
rqdt=Ar(dy-dz)q=P
1
-P
2
RAAP
1
-P
2
B=kzP
2
(lb
f
/H20862in.
2
),P
1
(lb
f
/H20862in.
2
)
Figure 4–21
(a) Dashpot; (b) step change in yand the corresponding change in zplotted versus t; (c) block
diagram of the dashpot.
Openmirrors.com
Section 4–4 / Hydraulic Systems 133+–
(a)( b)Area =A Spring
constant =k
Density
of oil =rOil
under
pressure
Resistance =Re
xa
b
y
zE(s) X(s) Y(s)b
a+b
a
a+bK
s
Ts
Ts+ 1Z(s)or
Taking the Laplace transforms of both sides of this last equation, assuming zero initial
conditions, we obtain
The transfer function of this system thus becomes
Let us define RA2r/H20862k=T. (Note that RA2r/H20862khas the dimension of time.) Then
Clearly, the dashpot is a differentiating element. Figure 4–21(c) shows a block diagram
representation for this system.
Obtaining Hydraulic Proportional-Plus-Integral Control Action. Figure 4–22(a)
shows a schematic diagram of a hydraulic proportional-plus-integral controller.A blockdiagram of this controller is shown in Figure 4–22(b). The transfer function Y(s)/E(s)
is given by
Y(s)
E(s)=b
a+bK
s
1+Ka
a+bT
Ts+1Z(s)
Y(s)=Ts
Ts+1=1
1+1
TsZ(s)
Y(s)=s
s+k
RA2rsY(s) =sZ(s) +k
RA2rZ(s)dy
dt=dz
dt+kz
RA2r
Figure 4–22
(a) Schematic diagram of a hydraulic proportional-plus-integral controller; (b) block diagram of the controller.
134
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
+–
(a) (b)e
a
bx
y zR
kq
P
2
P
1
Area = A
Density of oil = rX(s) Y(s) E(s)
Z(s)b
a+b
a
a+b
K
s
1
Ts+ 1
In such a controller, under normal operation with the
result that
where
Thus the controller shown in Figure 4–22(a) is a proportional-plus-integral controller 
(PI controller).
Obtaining Hydraulic Proportional-Plus-Derivative Control Action. Figure 4–23(a)
shows a schematic diagram of a hydraulic proportional-plus-derivative controller. The
cylinders are fixed in space and the pistons can move. For this system, notice that
Hence
or
Z(s)
Y(s)=1
Ts+1y=z+A
kqR=z+RA
2
r
kdz
dt q dt=rA dz q=P
2
-P
1
R k(y -z)=AAP
2
-P
1
BK
p
=b
a,
  
T
i
=T=RA
2
r
kY(s)
E(s)=K
p
a
1+1
T
i
 
s
b
@KaT /H20862C(a+b)(Ts +1)D@/H112711,
Figure 4–23
(a) Schematic diagram of a hydraulic proportional-plus-derivative controller; (b) block diagram of the controller.
Openmirrors.com
Section 4–4 / Hydraulic Systems 135e
a
bx
yR R
k2 k1
Area =AzFigure 4–24
Schematic diagramof a hydraulic
proportional-plus-
integral-plus-derivative controller.where
A block diagram for this system is shown in Figure 4–23(b). From the block diagram the
transfer function Y(s)/E(s) can be obtained as
Under normal operation we have Hence
where
Thus the controller shown in Figure 4–23(a) is a proportional-plus-derivative controller
(PD controller).
Obtaining Hydraulic Proportional-Plus-Integral-Plus-Derivative Control Action.
Figure 4–24 shows a schematic diagram of a hydraulic proportional-plus-integral-plus-derivative controller. It is a combination of the proportional-plus-integral controllerand proportional-plus derivative controller.
If the two dashpots are identical except the piston shafts, the transfer function
Z(s)/Y(s) can be obtained as follows:
(For the derivation of this transfer function, refer to Problem A–4–9 .)Z(s)
Y(s)=T1 s
T1 T2 s2+AT1+2T2Bs+1Kp=b
a,  T=RA2r
kY(s)
E(s)=Kp(1+Ts)@aK /H20862C(a+b)s(Ts +1)D@/H112711.Y(s)
E(s)=b
a+bK
s
1+a
a+bK
s1
Ts+1T=RA2r
k
136
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
+–
b
a+b
K
s
Y(s) E(s) X(s)
Z(s)T
1
s
T
1
T
2
s
2
+ (T
1
+ 2T
2
)s+ 1 
a
a+b
Figure 4–25
Block diagram for
the system shown in
Figure 4–24.
A block diagram for this system is shown in Figure 4–25. The transfer function
Y(s)/E(s) can be obtained as
Under normal circumstances we design the system such that
then
where
Thus, the controller shown in Figure 4–24 is a proportional-plus-integral-plus-derivative
controller (PID controller).
4–5 THERMAL SYSTEMS
Thermal systems are those that involve the transfer of heat from one substance to
another. Thermal systems may be analyzed in terms of resistance and capacitance,
although the thermal capacitance and thermal resistance may not be represented
accurately as lumped parameters, since they are usually distributed throughout the sub-
stance. For precise analysis, distributed-parameter models must be used. Here, however,
to simplify the analysis we shall assume that a thermal system can be represented by a
lumped-parameter model, that substances that are characterized by resistance to heat
flow have negligible heat capacitance, and that substances that are characterized by heat
capacitance have negligible resistance to heat flow.K
p
=b
aT
1
+2T
2
T
1
,
  
K
i
=b
a1
T
1
,
  
K
d
=b
aT
2
 =K
p
+K
i
s+K
d
 
s Y(s)
E(s)=b
a T
1
 
T
2
 
s
2
+AT
1
+2T
2
Bs+1
T
1
 
s
`
a
a+bK
sT
1
 
s
T
1
 
T
2
 
s
2
+AT
1
+2T
2
Bs+1
`
/H112711Y(s)
E(s)=b
a+bK
s
1+a
a+bK
sT
1
 
s
T
1
 
T
2
 
s
2
+AT
1
+2T
2
Bs+1
Openmirrors.com
Section 4–5 / Thermal Systems 137There are three different ways heat can flow from one substance to another: con-
duction, convection, and radiation. Here we consider only conduction and convection.(Radiation heat transfer is appreciable only if the temperature of the emitter is veryhigh compared to that of the receiver. Most thermal processes in process control systemsdo not involve radiation heat transfer.)
For conduction or convection heat transfer,
where q= heat flow rate, kcal /H20862sec
/H9004u=temperature difference, °C
K= coefficient, kcal /H20862sec °C
The coefficient Kis given by
where k= thermal conductivity, kcal /H20862m sec °C
A= area normal to heat flow, m
2
/H9004X= thickness of conductor, m
H= convection coefficient, kcal /H20862m2sec °C
Thermal Resistance and Thermal Capacitance. The thermal resistance Rfor
heat transfer between two substances may be defined as follows:
The thermal resistance for conduction or convection heat transfer is given by
Since the thermal conductivity and convection coefficients are almost constant, the
thermal resistance for either conduction or convection is constant.
The thermal capacitance Cis defined by
or
where m= mass of substance considered, kg
c= specific heat of substance, kcal /H20862kg °CC=mcC=change in heat stored, kcal
change in temperature, °CR=d(¢u)
dq=1
KR=change in temperature difference, °C
change in heat flow rate, kcal /H20862sec=HA,   for convectionK=kA
¢X,   for conductionq=K¢u
138
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Heater
Cold
liquidMixerHot
liquid
(a) (b)H
i
(s)
R–1
RCs
Q
i
(s)
Q(s)
++
–
Thermal System. Consider the system shown in Figure 4–26(a). It is assumed
that the tank is insulated to eliminate heat loss to the surrounding air. It is also assumed
that there is no heat storage in the insulation and that the liquid in the tank is perfectly
mixed so that it is at a uniform temperature.Thus, a single temperature is used to describe
the temperature of the liquid in the tank and of the outflowing liquid.
Let us define
steady-state temperature of inflowing liquid, °C
steady-state temperature of outflowing liquid, °C
steady-state liquid flow rate, kg /H20862sec
mass of liquid in tank, kg
specific heat of liquid, kcal /H20862kg °C
thermal resistance, °C sec /H20862kcal
thermal capacitance, kcal /H20862°C
steady-state heat input rate, kcal /H20862sec
Assume that the temperature of the inflowing liquid is kept constant and that the heat
input rate to the system (heat supplied by the heater) is suddenly changed from to
where h
i
represents a small change in the heat input rate.The heat outflow rate
will then change gradually from to The temperature of the outflowing liq-
uid will also be changed from to For this case, h
o
, C, and Rare obtained,
respectively, as
The heat-balance equation for this system is
Cdu=Ah
i
-h
o
BdtR=u
h
o
=1
GcC=Mch
o
=GcuQ–
o
+u. Q–
o
H–+h
o
 
. H–H–+h
i
 
,H– H–= C= R= c= M= G=Q–
o
=Q–
i
=
Figure 4–26
(a) Thermal system:
(b) block diagram of
the system.
Openmirrors.com
Section 4–5 / Thermal Systems 139or
which may be rewritten asNote that the time constant of the system is equal to RCorM/G seconds. The transfer
function relating uandh
iis given by
where and 
In practice, the temperature of the inflowing liquid may fluctuate and may act as a
load disturbance. (If a constant outflow temperature is desired, an automatic controllermay be installed to adjust the heat inflow rate to compensate for the fluctuations in thetemperature of the inflowing liquid.) If the temperature of the inflowing liquid is sud-denly changed from to while the heat input rate Hand the liquid flow rate
Gare kept constant, then the heat outflow rate will be changed from to and
the temperature of the outflowing liquid will be changed from to The heat-balance equation for this case is
or
which may be rewritten
The transfer function relating uandu
iis given by
where and 
If the present thermal system is subjected to changes in both the temperature of the
inflowing liquid and the heat input rate, while the liquid flow rate is kept constant, thechange uin the temperature of the outflowing liquid can be given by the following
equation:
A block diagram corresponding to this case is shown in Figure 4–26(b). Notice that the
system involves two inputs.RCdu
dt+u=ui+RhiQi(s)=lCui(t)D. Q  (s)=lCu(t)DQ  (s)
Q  i(s)=1
RCs +1RCdu
dt+u=uiCdu
dt=Gcui-hoCdu=AGcui-hoBdtQ–
o+u. Q–
oH–+ho , H–Q–
i+ui Q–
iHi(s)=lChi(t)D. Q  (s)=lCu(t)DQ  (s)
Hi(s)=R
RCs +1RCdu
dt+u=RhiCdu
dt=hi-ho
140
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
QQ
i
H
Capacitance C
Figure 4–27
Liquid-level system.
EXAMPLE PROBLEMS AND SOLUTIONS
A–4–1. In the liquid-level system of Figure 4–27 assume that the outflow rate Qm
3
/H20862sec through the out-
flow valve is related to the head Hm by
Assume also that when the inflow rate Q
i
is 0.015 m
3
/H20862sec the head stays constant. For t<0 the
system is at steady state AQ
i
=0.015 m
3
/H20862secB. At t=0 the inflow valve is closed and so there is
no inflow for t/H113500. Find the time necessary to empty the tank to half the original head. The
capacitance Cof the tank is 2 m
2
.
Solution. When the head is stationary, the inflow rate equals the outflow rate. Thus head H
o
at
t=0 is obtained from
or
The equation for the system for t>0 is
or
Hence
Assume that, at t=t
1
, H=1.125 m. Integrating both sides of this last equation, we obtain
It follows that
or
Thus, the head becomes half the original value (2.25 m) in 175.7 sec.t
1
=175.721H
2
1.125
2.25
=211.125
-212.25
=-0.005t
1
3
1.125
2.25
dH
1H
=
3
t
1
0
(-0.005) dt=-0.005t
1
dH
1H
=-0.005 dtdH
dt=-Q
C=-0.011H
2-CdH=Q dtH
o
=2.25 m0.015 =0.011H
o
Q=K1H
=0.011H
Openmirrors.comOpenmirrors.com
Example Problems and Solutions 141A–4–2. Consider the liquid-level system shown in Figure 4–28. In the system, and are steady-state
inflow rates and and are steady-state heads.The quantities qi1,qi2,h1,h2,q1, and qoare con-
sidered small. Obtain a state-space representation for the system when h1andh2are the outputs
andqi1andqi2are the inputs.
Solution. The equations for the system are
(4–32)
(4–33)
(4–34)
(4–35)
Elimination of q1from Equation (4–32) using Equation (4–33) results in
(4–36)
Eliminating q1andqofrom Equation (4–34) by using Equations (4–33) and (4–35) gives
(4–37)
Define state variables x1andx2by
x1=h1
x2=h2
the input variables u1andu2by
u1=qi1
u2=qi2
and the output variables y1andy2by
y1=h1=x1
y2=h2=x2
Then Equations (4–36) and (4–37) can be written as
 x#
2=1
R1 C2 x1-a1
R1 C2+1
R2 C2bx2+1
C2 u2 x#
1=-1
R1 C1x1+1
R1 C1x2+1
C1u1dh2
dt=1
C2ah1-h2
R1+qi2-h2
R2bdh1
dt=1
C1aqi1-h1-h2
R1bh2
R2=qoC2dh2=Aq1+qi2-qoBdth1-h2
R1=q1C1dh1=Aqi1-q1BdtH–
2 H–
1Q–
2 Q–
1
C1 C2R1 R2
Q1+q1Q2+qi2 Q1+qi1
Q1+Q2+qoH1+h1 H2+h2
Figure 4–28
Liquid-level system.
142
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
In the form of the standard vector-matrix representation, we have
which is the state equation, and
which is the output equation.
A–4–3. The value of the gas constant for any gas may be determined from accurate experimental obser-
vations of simultaneous values of p, v, and T.
Obtain the gas constant R
air
for air. Note that at 32°F and 14.7 psia the specific volume of air
is 12.39 ft
3
/H20862lb.Then obtain the capacitance of a 20-ft
3
pressure vessel that contains air at 160°F.As-
sume that the expansion process is isothermal.
Solution.
Referring to Equation (4–12), the capacitance of a 20-ft
3
pressure vessel is
Note that in terms of SI units, R
air
is given by
R
air
=287 N-m /H20862kg K
A–4–4. In the pneumatic pressure system of Figure 4–29(a), assume that, for t<0 , the system is at steady
state and that the pressure of the entire system is Also, assume that the two bellows are identi-
cal. At t=0 , the input pressure is changed from to Then the pressures in bellows 1 and
2 will change from to and from to respectively.The capacity (volume) of each
bellows is 5*10
–4
m
3
, and the operating-pressure difference (difference between p
i
andp
1
or
difference between p
i
andp
2
) is between –0.5*10
5
N/H20862m
2
and0.5*10
5
N/H20862m
2
.The corresponding
mass flow rates (kg /H20862sec) through the valves are shown in Figure 4–29(b). Assume that the bellows
expand or contract linearly with the air pressures applied to them, that the equivalent spring con-
stant of the bellows system is k=1*10
5
N/H20862m, and that each bellows has area A=15*10
–4
m
2
.¢pP–+p
2
 
, P–P–+p
1
P–P–+p
i
 
. P–P–.C=V
nR
air
 
T=20
1*53.3 *620=6.05 *10
-4
lb
lb
f
/H20862ft
2
R
air
=pv
T=14.7 *144 *12.39
460 +32=53.3 ft-lb
f
/H20862lb°R
B
y
1
y
2
R
=
B
1
00
1
RB
x
1
x
2
RB
x#
1
x#
2
R
=
D
-1
R
1
 
C
1
1
R
1
 
C
2
1
R
1
 
C
1
-
a
1
R
1
 
C
2
+1
R
2
 
C
2
b
TB
x
1
x
2
R
+
D
1
C
1
00
1
C
2
TB
u
1
u
2
R
Bellows 1 Bellows 2
Valve 1 Valve 2
(a) (b)x
Area
ACCq
1
q
2
R
1
R
2
P+p
1
P+p
2
P+p
i
Valve 2
Valve 1 0.5/H11003 10
5
–3/H11003 10
–5
1.5/H11003 10
–5
– 0.5 /H11003 10
5
Dp(N/m
2
)
q(kg/sec)
Figure 4–29
(a) Pneumatic
pressure system;
(b) pressure-
difference-versus-
mass-flow-rate
curves.
Openmirrors.com
Example Problems and Solutions 143Defining the displacement of the midpoint of the rod that connects two bellows as x, find the
transfer function Assume that the expansion process is isothermal and that thetemperature of the entire system stays at 30°C. Assume also that the polytropic exponent nis 1.
Solution. Referring to Section 4–3, transfer function can be obtained as
(4–38)
Similarly, transfer function is
(4–39)
The force acting on bellows 1 in the xdirection is and the force acting on bellows 2
in the negative xdirection is The resultant force balances with kx, the equivalent
spring force of the corrugated sides of the bellows.
or
(4–40)
Referring to Equations (4–38) and (4–39), we see that
By substituting this last equation into Equation (4–40) and rewriting, the transfer function
is obtained as
(4–41)
The numerical values of average resistances R
1andR2are
The numerical value of capacitance Cof each bellows is
where Rair=287 N-m /H20862kg K. (See Problem A–4–3 .) Consequently,
R1C=0.167*1010*5.75*10–9=9.60 sec
R2C=0.333*1010*5.75*10–9=19.2 sec
By substituting the numerical values for A, k ,R1C, and R2Cinto Equation (4–41), we obtain
X(s)
Pi(s)=1.44 *10-7s
(9.6s +1)(19.2s +1)C=V
nRair T=5*10-4
1*287 *(273 +30)=5.75 *10-9kg
N/H20862m2R2=d¢p
dq2=0.5*105
1.5*10-5=0.333 *1010N/H20862m2
kg/H20862secR1=d¢p
dq1=0.5*105
3*10-5=0.167 *1010N/H20862m2
kg/H20862secX(s)
Pi(s)=A
kAR2 C-R1 CBs
AR1 Cs+1BAR2 Cs+1BX(s) /H20862Pi(s) =R2 Cs-R1 Cs
AR1 Cs+1BAR2 Cs+1B Pi(s) P1(s)-P2(s)=a1
R1 Cs+1-1
R2 Cs+1bPi(s)ACP1(s)-P2(s)D=kX(s)AAp1-p2B=kxAAP–+p2B.AAP–+p1B,P2(s)
Pi(s)=1
R2 Cs+1P2(s) /H20862Pi(s)P1(s)
Pi(s)=1
R1 Cs+1P1(s) /H20862Pi(s)X(s) /H20862Pi(s).
144
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
A–4–5. Draw a block diagram of the pneumatic controller shown in Figure 4–30.Then derive the transfer
function of this controller. Assume that Assume also that the two bellows are identical.
If the resistance R
d
is removed (replaced by the line-sized tubing), what control action do we get?
If the resistance R
i
is removed (replaced by the line-sized tubing), what control action do we get?
Solution. Let us assume that when e=0 the nozzle–flapper distance is equal to and the con-
trol pressure is equal to In the present analysis, we shall assume small deviations from the
respective reference values as follows:
small error signal
small change in the nozzle–flapper distance
small change in the control pressure
small pressure change in bellows I due to small change in the control pressure
small pressure change in bellows II due to small change in the control pressure
small displacement at the lower end of the flapper
In this controller, is transmitted to bellows I through the resistance R
d
. Similarly, is trans-
mitted to bellows II through the series of resistances R
d
andR
i
.The relationship between and is
where derivative time. Similarly, p
II
andp
I
are related by the transfer function
where integral time. The force-balance equation for the two bellows is
where k
s
is the stiffness of the two connected bellows and Ais the cross-sectional area of the
bellows. The relationship among the variables e, x, and yis
The relationship between and xis
p
c
=Kx (K>0)p
c
x=b
a+be-a
a+byAp
I
-p
II
BA=k
s
 
yT
i
=R
i
C=P
II
(s)
P
I
(s)=1
R
i
 
Cs+1=1
T
i
 
s+1T
d
=R
d
C=P
I
(s)
P
c
(s)=1
R
d
 
Cs+1=1
T
d
 
s+1p
c
p
I
p
c
p
c
 y= p
II
= p
I
= p
c
= x=e =P–
c
 
.X–R
d
/H11270R
i
 
.
e
a
b
CCX+x
P
c
+p
I
P
c
+p
II
P
s
II I
R
i
R
d
P
c
+p
c
y
Figure 4–30
Schematic diagram
of a pneumatic
controller.
Openmirrors.com
Example Problems and Solutions 145From the equations just derived, a block diagram of the controller can be drawn, as shown in
Figure 4–31(a). Simplification of this block diagram results in Figure 4–31(b).
The transfer function between Pc(s)andE(s) is
For a practical controller, under normal operation is
very much greater than unity and Therefore, the transfer function can be simplified as
follows:
where
Thus the controller shown in Figure 4–30 is a proportional-plus-integral-plus-derivative one.
If the resistance Rdis removed, or Rd=0 , the action becomes that of a proportional-plus-
integral controller.Kp=bks
aA /H11216Kpa1+1
Ti s+Td sb =bks
aA aTi+Td
Ti+1
Ti s+Td sb Pc(s)
E(s)/H11216bksATi s+1BATd s+1B
aATi sTi/H11271Td .@KaATi s/H20862C(a+b)ksATi s+1BATd s+1BD@Pc(s)
E(s)=b
a+bK
1+Ka
a+bA
ksaTi s
Ti s+1ba1
Td s+1b
+–
+–
+–E(s) X(s) Pc(s)
K
a
a+bb
a+b
A
ksPI(s)
PII(s)1
Td s + 1
1
Ti s + 1
(a)
(b)Kb
a+bPc(s) E(s) X(s)
aAT is
(a+b)ks(Tis+ 1) (Tds+ 1) Figure 4–31
(a) Block diagram ofthe pneumaticcontroller shown in
Figure 4–30;
(b) simplified blockdiagram.
146
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
If the resistance R
i
is removed, or R
i
=0 , the action becomes that of a narrow-band propor-
tional, or two-position, controller. (Note that the actions of two feedback bellows cancel each
other, and there is no feedback.)
A–4–6. Actual spool valves are either overlapped or underlapped because of manufacturing tolerances.
Consider the overlapped and underlapped spool valves shown in Figures 4–32(a) and (b). Sketch
curves relating the uncovered port area Aversus displacement x.
Solution. For the overlapped valve, a dead zone exists between and or 
The curve for uncovered port area Aversus displacement xis shown in Figure 4–33(a). Such an
overlapped valve is unfit as a control valve.
For the underlapped valve, the curve for port area Aversus displacement xis shown in 
Figure 4–33(b). The effective curve for the underlapped region has a higher slope, meaning a
higher sensitivity. Valves used for controls are usually underlapped.
A–4–7. Figure 4–34 shows a hydraulic jet-pipe controller. Hydraulic fluid is ejected from the jet pipe. If
the jet pipe is shifted to the right from the neutral position, the power piston moves to the left,
and vice versa. The jet-pipe valve is not used as much as the flapper valve because of large null
flow, slower response, and rather unpredictable characteristics. Its main advantage lies in its
insensitivity to dirty fluids.
Suppose that the power piston is connected to a light load so that the inertia force of the load
element is negligible compared to the hydraulic force developed by the power piston. What type
of control action does this controller produce?
Solution. Define the displacement of the jet nozzle from the neutral position as xand the
displacement of the power piston as y. If the jet nozzle is moved to the right by a small displace--
1
2
x
0
6x6
1
2
x
0
 
.
1
2
x
0
 
, -
1
2
x
0
x
0
2
x
0
2
x
0
2
x
0
2
xx
(a) (b)High
pressureLow
pressureHigh
pressureLow
pressure
Figure 4–32
(a) Overlapped spool
valve;
(b) underlapped
spool valve.
(a) (b)Effective
areaArea exposed to
high pressure
Area exposed to
low pressureA
x
x
0
2
A
x
x
0
2
Figure 4–33
(a) Uncovered-port-
area- A-versus
displacement- xcurve
for the overlapped
valve; (b) uncovered-
port-area- A-versus-
displacement- xcurve
for the underlapped
valve.
Openmirrors.com
Example Problems and Solutions 147Oil under
pressureA
y
x
Figure 4–34
Hydraulic jet-pipecontroller.
ment x, the oil flows to the right side of the power piston, and the oil in the left side of the power
piston is returned to the drain. The oil flowing into the power cylinder is at high pressure; the oil
flowing out from the power cylinder into the drain is at low pressure. The resulting pressure
difference causes the power piston to move to the left.
For a small jet-nozzle displacement x, the flow rate qto the power cylinder is proportional to
x; that is,
For the power cylinder,
where Ais the power-piston area and ris the density of oil. Hence
where constant. The transfer function Y(s)/X(s) is thus
The controller produces the integral control action.Y(s)
X(s)=K
sK=K1/H20862(Ar)=dy
dt=q
Ar=K1
Arx=KxAr dy=q dtq=K1 x
148
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
EngineOil under
pressurek
b
z e
ya
1
a
2
v
Figure 4–35
Speed control
system.
+–
E(s) Y(s)
Z(s)a
2
a
1
+ a
2
K
s
a
1
a
1
+ a
2
bs
bs+ k
Figure 4–36
Block diagram for
the speed control
system shown in
Figure 4–35.A–4–8. Explain the operation of the speed control system shown in Figure 4–35.
Solution. If the engine speed increases, the sleeve of the fly-ball governor moves upward. This
movement acts as the input to the hydraulic controller.A positive error signal (upward motion of
the sleeve) causes the power piston to move downward, reduces the fuel-valve opening, and
decreases the engine speed. A block diagram for the system is shown in Figure 4–36.
From the block diagram the transfer function Y(s)/E(s) can be obtained as
If the following condition applies,
the transfer function Y(s)/E(s) becomes
The speed controller has proportional-plus-integral control action.Y(s)
E(s)/H11216a
2
a
1
+a
2
a
1
+a
2
a
1
bs+k
bs=a
2
a
1
a
1+k
bs
b
2
a
1
a
1
+a
2
bs
bs+kK
s
2
/H112711Y(s)
E(s)=a
2
a
1
+a
2
K
s
1+a
1
a
1
+a
2
bs
bs+kK
s
Openmirrors.com
Example Problems and Solutions 149A–4–9. Derive the transfer function Z(s)/Y(s) of the hydraulic system shown in Figure 4–37.Assume that
the two dashpots in the system are identical ones except the piston shafts.
Solution. In deriving the equations for the system, we assume that force Fis applied at the right
end of the shaft causing displacement y. (All displacements y, w, and zare measured from re-
spective equilibrium positions when no force is applied at the right end of the shaft.) When forceFis applied, pressure becomes higher than pressure Similarly,
For the force balance, we have the following equation:
(4–42)
Since
(4–43)
and
we have
Also, since
q
1dt=A( dw- dz)r
we have
or
Define A2Rr=B. (Bis the viscous-friction coefficient.) Then
(4–44)
Also, for the right-hand-side dashpot we have
Since
or
(4–45)
Substituting Equations (4–43) and (4–45) into Equation (4–42), we have
Taking the Laplace transform of this last equation, assuming zero initial condition, we obtain
(4–46) k2 Y(s) =Ak2+BsBW(s) +k1 Z(s)k2 y-k2 w=k1 z+Bw#AAP2-Pœ
2B=Bw#w#=q2
Ar=AAP2-Pœ
2B
A2Rrq2=AP2-Pœ
2B/H20862R, we obtainq2dt=Ardww#-z#=k1
Bzw#-z#=k1 z
A2Rrq1=A(w#-z#)rk1 z=ARq1q1=P1-Pœ
1
Rk1 z=AAP1-Pœ
1Bk2(y-w)=AAP1-Pœ
1B+AAP2-Pœ
2BP27Pœ
2 . Pœ
1 , or P17Pœ
1 . P1
R
FR
k2 k1
P1q1
Area =Azq2
w w yP2 P29 P19
Figure 4–37
Hydraulic system.
150
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Taking the Laplace transform of Equation (4–44), assuming zero initial condition, we obtain
(4–47)
By using Equation (4–47) to eliminate W(s) from Equation (4–46), we obtain
from which we obtain the transfer function Z(s)/Y(s) to be
Multiplying B/Ak
1
k
2
Bto both the numerator and denominator of this last equation, we get
Define Then the transfer function Z(s)/Y(s) becomes as follows:
A–4–10. Considering small deviations from steady-state operation, draw a block diagram of the air heat-
ing system shown in Figure 4–38. Assume that the heat loss to the surroundings and the heat
capacitance of the metal parts of the heater are negligible.
Solution. Let us define
steady-state temperature of inlet air, °C
steady-state temperature of outlet air, °C
G= mass flow rate of air through the heating chamber, kg /H20862sec
M= mass of air contained in the heating chamber, kg
c= specific heat of air, kcal /H20862kg °C
R= thermal resistance, °C sec /H20862kcal
C= thermal capacitance of air contained in the heating chamber =Mc , kcal /H20862°C
steady-state heat input, kcal /H20862sec
Let us assume that the heat input is suddenly changed from to and the inlet air
temperature is suddenly changed from to Then the outlet air temperature will be
changed from to 
The equation describing the system behavior is
Cdu
o
=Ch+GcAu
i
-u
o
BDdtQ–
o
+u
o
 
. Q–
o
Q–
i
+u
i
 
. Q–
i
H–+h H–H–=Q–
o
=Q–
i
=Z(s)
Y(s)=T
1
 
s
T
1
 
T
2
 
s
2
+AT
1
+2T
2
Bs+1B/H20862k
1
=T
1
 
,B/H20862k
2
=T
2
 
.Z(s)
Y(s)=B
k
1
s
B
2
k
1
 
k
2
s
2
+
a
2B
k
2
+B
k
1
b
s+1Z(s)
Y(s)=k
2
 
s
Bs
2
+A2k
1
+k
2
Bs+k
1
 
k
2
Bk
2
 
Y(s) =Ak
2
+BsBk
1
+Bs
BsZ(s) +k
1
 
Z(s)W(s) =k
1
+Bs
BsZ(s)
H+h
HeaterQ
i
+u
i
Q
o
+u
o
Figure 4–38
Air heating system.
Openmirrors.com
Example Problems and Solutions 151or
Noting that
we obtainor
Taking the Laplace transforms of both sides of this last equation and substituting the initial
condition that u
0(0)=0 , we obtain
The block diagram of the system corresponding to this equation is shown in Figure 4–39.
A–4–11. Consider the thin, glass-wall, mercury thermometer system shown in Figure 4–40.Assume that the
thermometer is at a uniform temperature (ambient temperature) and that at t=0 it is
immersed in a bath of temperature where ubis the bath temperature (which may be con-
stant or changing) measured from the ambient temperature Define the instantaneous ther-
mometer temperature by so that uis the change in the thermometer temperature satisfying
the condition that u(0)=0 . Obtain a mathematical model for the system.Also obtain an electri-
cal analog of the thermometer system.
Solution. A mathematical model for the system can be derived by considering heat balance as fol-
lows:The heat entering the thermometer during dtsec is qdt, where qis the heat flow rate to the
thermometer. This heat is stored in the thermal capacitance Cof the thermometer, thereby rais-
ing its temperature by du. Thus the heat-balance equation is
(4–48) Cdu=qdtQ–+u,Q–.Q–+ub ,Q–Qo(s)=R
RCs +1H(s) +1
RCs +1Qi(s)RCduo
dt+uo=Rh+uiCduo
dt=h+1
RAui-uoBGc=1
RCduo
dt=h+GcAui-uoBH(s)1
RCs + 1
R
RCs + 1Qi(s)
Qo(s)
++Figure 4–39
Block diagram of theair heating systemshown inFigure 4–38.
Thermometer
BathQ +u
Q +ubFigure 4–40
Thin, glass-wall,mercury thermo-meter system.
152
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
Since thermal resistance Rmay be written as
heat flow rate qmay be given, in terms of thermal resistance R,a s
where is the bath temperature and is the thermometer temperature. Hence, we
can rewrite Equation (4–48) as
or
(4–49)
Equation (4–49) is a mathematical model of the thermometer system.
Referring to Equation (4–49), an electrical analog for the thermometer system can be writ-
ten as
An electrical circuit represented by this last equation is shown in Figure 4–41.RCde
o
dt+e
o
=e
i
RCdu
dt+u=u
b
Cdu
dt=u
b
-u
RQ–+u Q–+u
b
q=AQ–+u
b
B-AQ–+uB
R=u
b
-u
RR=d(¢u)
dq=¢u
q
R
Ce
o
e
i
Figure 4–41
Electrical analog of
the thermometer
system shown in
Figure 4–40.
PROBLEMS
B–4–1. Consider the conical water-tank system shown in
Figure 4–42. The flow through the valve is turbulent and is
related to the head Hby
where Qis the flow rate measured in m
3
/H20862sec and His in
meters.
Suppose that the head is 2 m at t=0 . What will be the
head at t=60 sec?Q=0.0051H
2m
3m
2m
Hr
Figure 4–42 Conical water-tank system.
Openmirrors.com
Problems 153B–4–2. Consider the liquid-level control system shown in
Figure 4–43. The controller is of the proportional type. Theset point of the controller is fixed.
Draw a block diagram of the system, assuming that
changes in the variables are small. Obtain the transfer func-tion between the level of the second tank and the distur-bance input q
d. Obtain the steady-state error when the
disturbance qdis a unit-step function.
C2R1
C1 h2
R2Q+qi
qd
Q+q0HProportional
controller
Figure 4–43
Liquid-level control system.
RC
AX+x
P+poP+pik
Figure 4–44
Pneumatic system.B–4–3. For the pneumatic system shown in Figure 4–44,
assume that steady-state values of the air pressure and the
displacement of the bellows are and respectively.Assume also that the input pressure is changed from to
where p
iis a small change in the input pressure.This
change will cause the displacement of the bellows to changea small amount x.Assuming that the capacitance of the bel-
lows is Cand the resistance of the valve is R, obtain the
transfer function relating xandp
i.P–+pi,P–X–, P–
154
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
B–4–4. Figure 4–45 shows a pneumatic controller.The pneu-
matic relay has the characteristic that p
c
=Kp
b
,where
K>0. What kind of control action does this controller
produce? Derive the transfer function P
c
(s) /H20862E(s).B–4–5. Consider the pneumatic controller shown in 
Figure 4–46.Assuming that the pneumatic relay has the char-
acteristics that (where K>0 ), determine the con-
trol action of this controller. The input to the controller is e
and the output is p
c
.p
c
=Kp
b
Actuating error signal
Flapper
Nozzlee
a
bX + x
RI
k
Orifice
P
s
P
b
 + p
b
P
c
 + p
c
Figure 4–46
Pneumatic controller.
k
OrificeActuating error signal
Flapper
Nozzle
P
s
e
a
bP
b
+p
b
X+x
Y+y
P
c
+p
c
Figure 4–45
Pneumatic controller.
Openmirrors.com
Problems 155Actuating error signal
Flapper
Nozzlee
a
b
kX + x
RII I Orifice
PsPb + pb
Pc + pc
Figure 4–47
Pneumatic controller.
Actuating error signal
Flapper
Nozzlee
a
b
kX + x
R2II I
R1Orifice
PsPb + pb
Pc + pc
Figure 4–48
Pneumatic controller.B–4–6. Figure 4–47 shows a pneumatic controller. The sig-
naleis the input and the change in the control pressure 
is the output. Obtain the transfer function .Assume that the pneumatic relay has the characteristics that
where K>0 . p
c=Kpb ,Pc(s) /H20862E(s)pcB–4–7. Consider the pneumatic controller shown in 
Figure 4–48. What control action does this controller pro-
duce? Assume that the pneumatic relay has the character-istics that where K>0 . p
c=Kpb ,
156
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
B–4–8. Figure 4–49 shows a flapper valve. It is placed
between two opposing nozzles. If the flapper is moved slight-
ly to the right, the pressure unbalance occurs in the nozzles
and the power piston moves to the left, and vice versa. Such
a device is frequently used in hydraulic servos as the first-
stage valve in two-stage servovalves. This usage occurs
because considerable force may be needed to stroke larger
spool valves that result from the steady-state flow force. To
reduce or compensate this force, two-stage valve configura-
tion is often employed; a flapper valve or jet pipe is used as
the first-stage valve to provide a necessary force to stroke
the second-stage spool valve.diagram of the system of Figure 4–50 and then find the trans-
fer function between yandx, where xis the air pressure and
yis the displacement of the power piston.
x
y
Oil under
pressure
Oil under
pressure
y
Flapper
x
Figure 4–49 Flapper valve.
u
fl
a
b
Oil under
pressure
Figure 4–51
Aircraft elevator
control system.B–4–9. Figure 4–51 is a schematic diagram of an aircraft
elevator control system. The input to the system is the de-
flection angle uof the control lever, and the output is the el-
evator angle f. Assume that angles uandfare relatively
small. Show that for each angle uof the control lever there
is a corresponding (steady-state) elevator angle f.Figure 4–50
Schematic diagram of a
hydraulic servomotor.
Figure 4–50 shows a schematic diagram of a hydraulic
servomotor in which the error signal is amplified in two
stages using a jet pipe and a pilot valve. Draw a block
Openmirrors.com
Problems 157B–4–10. Consider the liquid-level control system shown in
Figure 4–52. The inlet valve is controlled by a hydraulicintegral controller.Assume that the steady-state inflow rateis and steady-state outflow rate is also the steady-statehead is steady-state pilot valve displacement is and steady-state valve position is We assume that the setpoint corresponds to the steady-state head The setpoint is fixed. Assume also that the disturbance inflow rate
q
d, which is a small quantity, is applied to the water tank at
t=0 .This disturbance causes the head to change from to
This change results in a change in the outflow rate
byqo. Through the hydraulic controller, the change in head
causes a change in the inflow rate from to (The
integral controller tends to keep the head constant as muchas possible in the presence of disturbances.) We assume thatall changes are of small quantities.Q–+q
i . Q–H–+h.H–H–. R–Y–.X–=0, H–,Q–, Q–We assume that the velocity of the power piston (valve)
is proportional to pilot-valve displacement x,o r
where K1is a positive constant. We also assume that the
change in the inflow rate qiis negatively proportional to the
change in the valve opening y,o r
where Kvis a positive constant.
Assuming the following numerical values for the system,
C=2 m2, R=0.5 sec /H20862m2, Kv=1 m2/H20862sec
a=0.25 m, b=0.75 m, K1=4 sec–1
obtain the transfer function H(s)/ Qd(s).qi=-Kv ydy
dt=K1 x
C(Capacitance)
R
(Resistance)a b
h
Y+yqd
Q+qi
H+h
Q+qox
Figure 4–52
Liquid-level control system.
158
Chapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems
B–4–11. Consider the controller shown in Figure 4–53.The
input is the air pressure p
i
measured from some steady-state
reference pressure and the output is the displacement yof
the power piston. Obtain the transfer function Y(s) /H20862P
i
(s).P–B–4–12. A thermocouple has a time constant of 2 sec. A
thermal well has a time constant of 30 sec. When the ther-
mocouple is inserted into the well, this temperature-
measuring device can be considered a two-capacitance
system.
Determine the time constants of the combined thermo-
couple–thermal-well system.Assume that the weight of the
thermocouple is 8 g and the weight of the thermal well is
40 g.Assume also that the specific heats of the thermocouple
and thermal well are the same.
aa
bb
Airp
i
(Input)
y(Output)x
kBellows
Figure 4–53
Controller.
Openmirrors.com
5
159Transient and Steady-State
Response Analyses
5–1 INTRODUCTION
In early chapters it was stated that the first step in analyzing a control system was to de-
rive a mathematical model of the system. Once such a model is obtained, various meth-ods are available for the analysis of system performance.
In practice, the input signal to a control system is not known ahead of time but is
random in nature, and the instantaneous input cannot be expressed analytically. Only insome special cases is the input signal known in advance and expressible analytically orby curves, such as in the case of the automatic control of cutting tools.
In analyzing and designing control systems, we must have a basis of comparison of
performance of various control systems.This basis may be set up by specifying particulartest input signals and by comparing the responses of various systems to these input signals.
Many design criteria are based on the response to such test signals or on the re-
sponse of systems to changes in initial conditions (without any test signals). The use oftest signals can be justified because of a correlation existing between the response char-acteristics of a system to a typical test input signal and the capability of the system to copewith actual input signals.
Typical Test Signals. The commonly used test input signals are step functions,
ramp functions, acceleration functions, impulse functions, sinusoidal functions, and whitenoise. In this chapter we use test signals such as step, ramp, acceleration and impulsesignals. With these test signals, mathematical and experimental analyses of control sys-tems can be carried out easily, since the signals are very simple functions of time.aa
aa
160
Chapter 5 / Transient and Steady-State Response Analyses
Which of these typical input signals to use for analyzing system characteristics may
be determined by the form of the input that the system will be subjected to most
frequently under normal operation. If the inputs to a control system are gradually
changing functions of time, then a ramp function of time may be a good test signal. Sim-
ilarly, if a system is subjected to sudden disturbances, a step function of time may be a
good test signal; and for a system subjected to shock inputs, an impulse function may be
best. Once a control system is designed on the basis of test signals, the performance of
the system in response to actual inputs is generally satisfactory. The use of such test
signals enables one to compare the performance of many systems on the same basis.
Transient Response and Steady-State Response. The time response of a
control system consists of two parts: the transient response and the steady-state response.
By transient response, we mean that which goes from the initial state to the final state.
By steady-state response, we mean the manner in which the system output behaves as
tapproaches infinity. Thus the system response c(t) may be written as
where the first term on the right-hand side of the equation is the transient response and
the second term is the steady-state response.
Absolute Stability, Relative Stability, and Steady-State Error. In designing a
control system, we must be able to predict the dynamic behavior of the system from a
knowledge of the components. The most important characteristic of the dynamic
behavior of a control system is absolute stability—that is, whether the system is stable or
unstable.A control system is in equilibrium if, in the absence of any disturbance or input,
the output stays in the same state.A linear time-invariant control system is stable if the
output eventually comes back to its equilibrium state when the system is subjected to
an initial condition. A linear time-invariant control system is critically stable if oscilla-
tions of the output continue forever. It is unstable if the output diverges without bound
from its equilibrium state when the system is subjected to an initial condition.Actually,
the output of a physical system may increase to a certain extent but may be limited by
mechanical “stops,” or the system may break down or become nonlinear after the out-
put exceeds a certain magnitude so that the linear differential equations no longer apply.
Important system behavior (other than absolute stability) to which we must give
careful consideration includes relative stability and steady-state error. Since a physical
control system involves energy storage, the output of the system, when subjected to an
input, cannot follow the input immediately but exhibits a transient response before a
steady state can be reached. The transient response of a practical control system often
exhibits damped oscillations before reaching a steady state. If the output of a system at
steady state does not exactly agree with the input, the system is said to have steady-
state error. This error is indicative of the accuracy of the system. In analyzing a control
system, we must examine transient-response behavior and steady-state behavior.
Outline of the Chapter. This chapter is concerned with system responses to
aperiodic signals (such as step, ramp, acceleration, and impulse functions of time). The
outline of the chapter is as follows: Section 5–1 has presented introductory material for
the chapter. Section 5–2 treats the response of first-order systems to aperiodic inputs.
Section 5–3 deals with the transient response of the second-order systems. Detailedc(t) =c
tr
(t)+c
ss
(t)
Openmirrors.com
aa
Section 5–2 / First-Order Systems 161R(s) E(s) C(s) R(s) C(s)
(a) (b)1
Ts1
Ts+ 1+–Figure 5–1
(a) Block diagram ofa first-order system;
(b) simplified block
diagram.analyses of the step response, ramp response, and impulse response of the second-order
systems are presented. Section 5–4 discusses the transient-response analysis of higher-order systems. Section 5–5 gives an introduction to the MATLAB approach to the solutionof transient-response problems. Section 5–6 gives an example of a transient-responseproblem solved with MATLAB. Section 5–7 presents Routh’s stability criterion. Section5–8 discusses effects of integral and derivative control actions on system performance.Finally, Section 5–9 treats steady-state errors in unity-feedback control systems.
5–2 FIRST-ORDER SYSTEMS
Consider the first-order system shown in Figure 5–1(a). Physically, this system may
represent an RCcircuit, thermal system, or the like.A simplified block diagram is shown
in Figure 5–1(b). The input-output relationship is given by
(5–1)
In the following, we shall analyze the system responses to such inputs as the unit-step,
unit-ramp, and unit-impulse functions. The initial conditions are assumed to be zero.
Note that all systems having the same transfer function will exhibit the same output
in response to the same input. For any given physical system, the mathematical responsecan be given a physical interpretation.
Unit-Step Response of First-Order Systems. Since the Laplace transform of
the unit-step function is 1/s, substituting R(s)=1/s into Equation (5–1), we obtain
Expanding C(s) into partial fractions gives
(5–2)
Taking the inverse Laplace transform of Equation (5–2), we obtain
fort/H113500 (5–3)
Equation (5–3) states that initially the output c(t) is zero and finally it becomes unity.
One important characteristic of such an exponential response curve c(t)is that at t=T
the value of c(t) is 0.632, or the response c(t) has reached 63.2 %of its total change.This
may be easily seen by substituting t=T inc(t). That is,
c(T) =1-e
-1=0.632c(t) =1-e-t/H20862T,C(s) =1
s-T
Ts+1=1
s-1
s+(1/H20862T)C(s) =1
Ts+11
sC(s)
R(s)=1
Ts+1
aa
162
Chapter 5 / Transient and Steady-State Response Analyses
c(t)
1
00.632AB
T 2T 3T 4T 5TtSlope =1
T
c(t)= 1 –e
– (t/T)
63.2%
86.5%
95%
98.2%
99.3%
Figure 5–2
Exponential
response curve.
Note that the smaller the time constant T, the faster the system response. Another
important characteristic of the exponential response curve is that the slope of the tangent
line at t=0 is1/T, since
(5–4)
The output would reach the final value at t=T if it maintained its initial speed of
response. From Equation (5–4) we see that the slope of the response curve c(t)decreases
monotonically from 1/Tatt=0 to zero at t=q.
The exponential response curve c(t)given by Equation (5–3) is shown in Figure 5–2.
In one time constant, the exponential response curve has gone from 0 to 63.2 %of the final
value. In two time constants, the response reaches 86.5 %of the final value.At t=3T ,4T,
and5T, the response reaches 95 %, 98.2 %, and 99.3 %, respectively, of the final value.Thus,
fort/H113504T, the response remains within 2 %of the final value. As seen from Equation
(5–3), the steady state is reached mathematically only after an infinite time. In practice,
however, a reasonable estimate of the response time is the length of time the response
curve needs to reach and stay within the 2 %line of the final value, or four time constants.
Unit-Ramp Response of First-Order Systems. Since the Laplace transform of
the unit-ramp function is 1/s
2
, we obtain the output of the system of Figure 5–1(a) as
Expanding C(s) into partial fractions gives
(5–5)
Taking the inverse Laplace transform of Equation (5–5), we obtain
fort/H113500 (5–6)
The error signal e(t) is then
 =TA1-e
-t/H20862T
B e(t) =r(t) -c(t)c(t) =t-T+Te
-t/H20862T
,C(s) =1
s
2
-T
s+T
2
Ts+1C(s) =1
Ts+11
s
2
dc
dt
2
t=0
=1
Te
-t/H20862T
2
t=0
=1
T
Openmirrors.com
aa
Section 5–2 / First-Order Systems 163r(t)
c(t)
6T
4T
2T
02 T 4T 6TtT
T
r(t)=t
c(t)Steady-state
error
Figure 5–3
Unit-ramp responseof the system shown
in Figure 5–1(a).
c(t)
02 T T 4T 3Tt1
T
c(t)=e– (t/T) 1
TFigure 5–4
Unit-impulseresponse of the
system shown in
Figure 5–1(a).Astapproaches infinity, e–t/Tapproaches zero, and thus the error signal e(t)approaches
Tor
The unit-ramp input and the system output are shown in Figure 5–3. The error in
following the unit-ramp input is equal to Tfor sufficiently large t. The smaller the time
constant T, the smaller the steady-state error in following the ramp input.
Unit-Impulse Response of First-Order Systems. For the unit-impulse input,
R(s)=1 and the output of the system of Figure 5–1(a) can be obtained as
(5–7)
The inverse Laplace transform of Equation (5–7) gives
fort/H113500 (5–8)
The response curve given by Equation (5–8) is shown in Figure 5–4.c(t) =1
Te-t/H20862T,C(s) =1
Ts+1e(q)=T
aa
164
Chapter 5 / Transient and Steady-State Response Analyses
An Important Property of Linear Time-Invariant Systems. In the analysis
above, it has been shown that for the unit-ramp input the output c(t) is
fort/H113500 [See Equation (5–6).]
For the unit-step input, which is the derivative of unit-ramp input, the output c(t) is
fort/H113500 [See Equation (5–3).]
Finally, for the unit-impulse input, which is the derivative of unit-step input, the output
c(t) is
fort/H113500 [See Equation (5–8).]
Comparing the system responses to these three inputs clearly indicates that the response
to the derivative of an input signal can be obtained by differentiating the re sponse of the
system to the original signal. It can also be seen that the response to the integral of the
original signal can be obtained by integrating the response of the system to the original
signal and by determining the integration constant from the zero-output initial condi-
tion.This is a property of linear time-invariant systems. Linear time-varying systems and
nonlinear systems do not possess this property.
5–3 SECOND-ORDER SYSTEMS
In this section, we shall obtain the response of a typical second-order control system to
a step input, ramp input, and impulse input. Here we consider a servo system as an
example of a second-order system.
Servo System. The servo system shown in Figure 5–5(a) consists of a proportional
controller and load elements (inertia and viscous-friction elements). Suppose that we
wish to control the output position cin accordance with the input position r.
The equation for the load elements is
where Tis the torque produced by the proportional controller whose gain is K.B y
taking Laplace transforms of both sides of this last equation, assuming the zero initial
conditions, we obtain
So the transfer function between C(s) andT(s) is
By using this transfer function, Figure 5–5(a) can be redrawn as in Figure 5–5(b), which
can be modified to that shown in Figure 5–5(c).The closed-loop transfer function is then
obtained as
Such a system where the closed-loop transfer function possesses two poles is called a
second-order system. (Some second-order systems may involve one or two zeros.)C(s)
R(s)=K
Js
2
+Bs+K=K/H20862J
s
2
+(B/H20862J)s +(K /H20862J)C(s)
T(s)=1
s(Js +B)Js
2
C(s) +BsC(s) =T(s)Jc$+Bc#=T c(t) =1
Te
-t/H20862T
, c(t) =1-e
-t/H20862T
, c(t) =t-T+Te
-t/H20862T
,
Openmirrors.com
aa
Section 5–3 / Second-Order Systems 165+–r
K
1
s(Js+B)ec T
JB
(a)
+–R(s)
R(s)C(s)
C(s)T(s)
(b)K
K
s(Js+B)+–
(c)Figure 5–5
(a) Servo system;(b) block diagram;
(c) simplified block
diagram.
Step Response of Second-Order System. The closed-loop transfer function of
the system shown in Figure 5–5(c) is
(5–9)
which can be rewritten as
The closed-loop poles are complex conjugates if B2-4JK<0 and they are real if
B2-4JK /H113500. In the transient-response analysis, it is convenient to write
wheresis called the attenuation ;vn, the undamped natural frequency ; and z, the damp-
ing ratio of the system. The damping ratio zis the ratio of the actual damping Bto the
critical damping or
z=B
Bc=B
21JKBc=21JKK
J=v2
n ,  B
J=2zvn=2sC(s)
R(s)=K
J
cs+B
2J+BaB
2Jb2
-K
Jdcs+B
2J-BaB
2Jb2
-K
JdC(s)
R(s)=K
Js2+Bs+K
aa
166
Chapter 5 / Transient and Steady-State Response Analyses
R(s) E(s) C(s)v
n
s(s+ 2zv
n
)
2
+–
Figure 5–6
Second-order system.
In terms of zandv
n
, the system shown in Figure 5–5(c) can be modified to that shown
in Figure 5–6, and the closed-loop transfer function C(s)/R(s) given by Equation (5–9)
can be written
(5–10)
This form is called the standard form of the second-order system.
The dynamic behavior of the second-order system can then be described in terms of
two parameters zandv
n
. If 0<z<1 , the closed-loop poles are complex conjugates
and lie in the left-half splane. The system is then called underdamped, and the tran-
sient response is oscillatory. If z=0 , the transient response does not die out. If z=1 ,
the system is called critically damped. Overdamped systems correspond to z>1 .
We shall now solve for the response of the system shown in Figure 5–6 to a unit-step
input. We shall consider three different cases: the underdamped (0<z<1) , critically
damped (z=1) , and overdamped (z>1) cases.
(1)Underdamped case (0<z<1) : In this case, C(s)/R(s) can be written
where The frequency v
d
is called the damped natural frequency .F o r
a unit-step input, C(s) can be written
(5–11)
The inverse Laplace transform of Equation (5–11) can be obtained easily if C(s) is writ-
ten in the following form:
Referring to the Laplace transform table in Appendix A, it can be shown that
 l
-1
c
v
d
As+zv
n
B
2
+v
2
d
d
=e
-zv
n
 
t
sinv
d
 
t l
-1
c
s+zv
n
As+zv
n
B
2
+v
2
d
d
=e
-zv
n
 
t
cosv
d
 
t =1
s-s+zv
n
As+zv
n
B
2
+v
2
d
-zv
n
As+zv
n
B
2
+v
2
d
 C(s) =1
s-s+2zv
n
s
2
+2zv
n
 
s+v
2
n
C(s) =v
2
n
As
2
+2zv
n
 
s+v
2
n
Bsv
d
=v
n
21-z
2
.C(s)
R(s)=v
2
n
As+zv
n
+jv
d
BAs+zv
n
-jv
d
BC(s)
R(s)=v
2
n
s
2
+2zv
n
 
s+v
2
n
Openmirrors.com
aa
Section 5–3 / Second-Order Systems 167Hence the inverse Laplace transform of Equation (5–11) is obtained as
fort/H113500 (5–12)
From Equation (5–12), it can be seen that the frequency of transient oscillation is the
damped natural frequency vdand thus varies with the damping ratio z.The error signal
for this system is the difference between the input and output and is
fort/H113500
This error signal exhibits a damped sinusoidal oscillation. At steady state, or at t=q,
no error exists between the input and output.
If the damping ratio zis equal to zero, the response becomes undamped and
oscillations continue indefinitely. The response c(t) for the zero damping case may be
obtained by substituting z=0 in Equation (5–12), yielding
fort/H113500 (5–13)
Thus, from Equation (5–13), we see that vnrepresents the undamped natural frequen-
cy of the system.That is, vnis that frequency at which the system output would oscillate
if the damping were decreased to zero. If the linear system has any amount of damping,the undamped natural frequency cannot be observed experimentally. The frequency 
that may be observed is the damped natural frequency v
d, which is equal to 
This frequency is always lower than the undamped natural frequency. An increase in z
would reduce the damped natural frequency vd.I f  zis increased beyond unity, the
response becomes overdamped and will not oscillate.
(2)Critically damped case (z=1) : If the two poles of C(s)/R(s) are equal, the system
is said to be a critically damped one.
For a unit-step input, R(s)=1/s andC(s) can be written
(5–14)
The inverse Laplace transform of Equation (5–14) may be found as
fort/H113500 (5–15)
This result can also be obtained by letting zapproach unity in Equation (5–12) and by
using the following limit:
lim
zS1sinvd t
21-z2=lim
zS1sinvn21-z2t
21-z2=vn tc(t) =1-e-vn tA1+vn tB,C(s) =v2
n
As+vnB2svn21-z2.c(t) =1-cosvn t, =e-zvn tacosvd t+z
21-z2sinvd tb, e(t) =r(t) -c(t) =1-e-zvn t
21-z2sin  avd t+tan-1 21-z2
zb, =1-e-zvn tacosvd t+z
21-z2sinvd tb l-1CC(s)D=c(t)
aa
168
Chapter 5 / Transient and Steady-State Response Analyses
(3)Overdamped case (z>1) : In this case, the two poles of C(s)/R(s) are negative
real and unequal. For a unit-step input, R(s)=1/s andC(s) can be written
(5–16)
The inverse Laplace transform of Equation (5–16) is
fort/H113500 (5–17)
where and Thus, the response c(t)
includes two decaying exponential terms.
When zis appreciably greater than unity, one of the two decaying exponentials
decreases much faster than the other, so the faster-decaying exponential term (which
corresponds to a smaller time constant) may be neglected. That is, if –s
2
is located very
much closer to the jvaxis than –s
1
Awhich means @s
2
@/H11270@s
1
@B, then for an approximate
solution we may neglect –s
1
.This is permissible because the effect of –s
1
on the response
is much smaller than that of –s
2
, since the term involving s
1
in Equation (5–17) decays
much faster than the term involving s
2
. Once the faster-decaying exponential term has
disappeared, the response is similar to that of a first-order system, and C(s)/R(s) may
be approximated by
This approximate form is a direct consequence of the fact that the initial values and
final values of both the original C(s)/R(s) and the approximate one agree with each
other.
With the approximate transfer function C(s)/R(s) , the unit-step response can be
obtained as
The time response c(t) is then
fort/H113500
This gives an approximate unit-step response when one of the poles of C(s)/R(s) can
be neglected.c(t) =1-e
-Az-2z
2
-1
Bv
n
 
t
,C(s) =zv
n
-v
n
2z
2
-1
As+zv
n
-v
n
2z
2
-1
BsC(s)
R(s)=zv
n
-v
n
2z
2
-1
s+zv
n
-v
n
2z
2
-1
=s
2
s+s
2
s
2
=Az-2z
2
-1
Bv
n
 
. s
1
=Az+2z
2
-1
Bv
n
=1+v
n
22z
2
-1
a
e
-s
1
 
t
s
1
-e
-s
2
 
t
s
2
b
,-1
22z
2
-1
Az-2z
2
-1
Be
-Az-2z
2
-1
Bv
n
t
c(t) =1+1
22z
2
-1
Az+2z
2
-1
Be
-Az+2z
2
-1
Bv
n
t
C(s) =v
2
n
As+zv
n
+v
n
2z
2
-1
BAs+zv
n
-v
n
2z
2
-1
Bs
Openmirrors.com
aa
Section 5–3 / Second-Order Systems 1692.0
1.8
1.6
1.4
1.2
1.0
0.8
0.6
0.4
0.2
0 123456789 1 0 1 1 1 20.8
vntc(t)z = 0
0.1
0.2
0.3
0.40.5
0.6
0.7
1.0
2.0
Figure 5–7
Unit-step responsecurves of the system
shown in Figure 5–6.
A family of unit-step response curves c(t) with various values of zis shown in Fig-
ure 5–7, where the abscissa is the dimensionless variable vnt. The curves are functions
only of z. These curves are obtained from Equations (5–12), (5–15), and (5–17). The
system described by these equations was initially at rest.
Note that two second-order systems having the same zbut different vnwill exhibit
the same overshoot and the same oscillatory pattern. Such systems are said to have thesame relative stability.
From Figure 5–7, we see that an underdamped system with zbetween 0.5 and 0.8 gets
close to the final value more rapidly than a critically damped or overdamped system.Among the systems responding without oscillation, a critically damped system exhibitsthe fastest response.An overdamped system is always sluggish in responding to any inputs.
It is important to note that, for second-order systems whose closed-loop transfer
functions are different from that given by Equation (5–10), the step-response curvesmay look quite different from those shown in Figure 5–7.
Definitions of Transient-Response Specifications. Frequently, the perform-
ance characteristics of a control system are specified in terms of the transient response toa unit-step input, since it is easy to generate and is sufficiently drastic. (If the response toa step input is known, it is mathematically possible to compute the response to any input.)
The transient response of a system to a unit-step input depends on the initial condi-
tions. For convenience in comparing transient responses of various systems, it is a com-mon practice to use the standard initial condition that the system is at rest initially withthe output and all time derivatives thereof zero. Then the response characteristics ofmany systems can be easily compared.
The transient response of a practical control system often exhibits damped oscilla-
tions before reaching steady state. In specifying the transient-response characteristics ofa control system to a unit-step input, it is common to specify the following:
1.Delay time, t
d
2.Rise time, tr
aa
170
Chapter 5 / Transient and Steady-State Response Analyses
c(t)
0.51
0Allowable tolerance
M
p
t
d
t0.05
or
0.02
t
r
t
p
t
s
Figure 5–8
Unit-step response
curve showing t
d
, t
r
,
t
p
,M
p
, and t
s
.
3.Peak time, t
p
4.Maximum overshoot, M
p
5.Settling time, t
s
These specifications are defined in what follows and are shown graphically in Figure 5–8.
1.Delay time, t
d
: The delay time is the time required for the response to reach half
the final value the very first time.
2.Rise time, t
r
: The rise time is the time required for the response to rise from 10 %
to 90 %,5%to 95 %, or 0 %to 100 %of its final value. For underdamped second-
order systems, the 0 %to 100 %rise time is normally used. For overdamped systems,
the 10 %to 90 %rise time is commonly used.
3.Peak time, t
p
:The peak time is the time required for the response to reach the first
peak of the overshoot.
4.Maximum (percent) overshoot, M
p
: The maximum overshoot is the maximum
peak value of the response curve measured from unity. If the final steady-state
value of the response differs from unity, then it is common to use the maximum
percent overshoot. It is defined by
The amount of the maximum (percent) overshoot directly indicates the relative
stability of the system.
5.Settling time, t
s
: The settling time is the time required for the response curve to
reach and stay within a range about the final value of size specified by absolute per-
centage of the final value (usually 2 %or 5%). The settling time is related to the
largest time constant of the control system.Which percentage error criterion to use
may be determined from the objectives of the system design in question.
The time-domain specifications just given are quite important, since most control
systems are time-domain systems; that is, they must exhibit acceptable time responses.
(This means that, the control system must be modified until the transient response is
satisfactory.)Maximum percent overshoot =cAt
p
B-c(q)
c(q)*100%
Openmirrors.com
aa
Section 5–3 / Second-Order Systems
171
jv
jv
d
v
n
sb
zv
n
–s
v
n
 
1–z
2
0
Figure 5–9
Definition of the
angleb.
Note that not all these specifications necessarily apply to any given case. For exam-
ple, for an overdamped system, the terms peak time and maximum overshoot do not
apply. (For systems that yield steady-state errors for step inputs, this error must be kept
within a specified percentage level. Detailed discussions of steady-state errors are post-
poned until Section 5–8.)
A Few Comments on Transient-Response Specifications. Except for certain
applications where oscillations cannot be tolerated, it is desirable that the transient re-
sponse be sufficiently fast and be sufficiently damped.Thus, for a desirable transient re-
sponse of a second-order system, the damping ratio must be between 0.4 and 0.8. Small
values of z(that is, z<0.4) yield excessive overshoot in the transient response, and a
system with a large value of z(that is,z>0.8) responds sluggishly.
We shall see later that the maximum overshoot and the rise time conflict with each other.
In other words, both the maximum overshoot and the rise time cannot be made smaller
simultaneously. If one of them is made smaller, the other necessarily becomes larger.
Second-Order Systems and Transient-Response Specifications. In the fol-
lowing, we shall obtain the rise time, peak time, maximum overshoot, and settling time
of the second-order system given by Equation (5–10). These values will be obtained in
terms of zandv
n
. The system is assumed to be underdamped.
Rise time t
r
: Referring to Equation (5–12), we obtain the rise time t
r
by letting cAt
r
B=1.
(5–18)
Since we obtain from Equation (5–18) the following equation:
Since and , we have
Thus, the rise time t
r
is
(5–19)
where angle bis defined in Figure 5–9. Clearly, for a small value of t
r
,v
d
must be large.t
r
=1
v
d
tan
-1
 
a
v
d
-s
b
=p-b
v
d
tanv
d
 
t
r
=- 21-z
2
z=- v
d
szv
n
=s v
n
21-z
2
=v
d
cosv
d
 
t
r
+z
21-z
2
sinv
d
 
t
r
=0e
-zv
n
 
t
r
Z0,cAt
r
B=1=1-e
-zv
n
 
t
r
a
cosv
d
 
t
r
+z
21-z
2
sinv
d
 
t
r
b
Openmirrors.com
aa
172
Chapter 5 / Transient and Steady-State Response Analyses
Peak time t
p
: Referring to Equation (5–12), we may obtain the peak time by differen-
tiating c(t) with respect to time and letting this derivative equal zero. Since
and the cosine terms in this last equation cancel each other, dc/H20862dt, evaluated at t=t
p
,
can be simplified to
This last equation yields the following equation:
or
Since the peak time corresponds to the first peak overshoot, Hence
(5–20)
The peak time t
p
corresponds to one-half cycle of the frequency of damped oscillation.
Maximum overshoot M
p
: The maximum overshoot occurs at the peak time or at
t=t
p
=p/H20862v
d
.Assuming that the final value of the output is unity, M
p
is obtained from
Equation (5–12) as
(5–21)
The maximum percent overshoot is 
If the final value c(q)of the output is not unity, then we need to use the following
equation:
Settling time t
s
: For an underdamped second-order system, the transient response is
obtained from Equation (5–12) as
fort/H113500 c(t) =1-e
-zv
n
 
t
21-z
2
sin
 
a
v
d
 
t+tan
-1
 21-z
2
z
b
,M
p
=cAt
p
B-c(q)
c(q)e
-As/H20862v
d
Bp
*100%. =e
-As/H20862v
d
Bp
=e
-Az/H2086221-z
2
Bp
 =-e
-zv
n
Ap/H20862v
d
B
a
cosp+z
21-z
2
sinp
b
 M
p
=cAt
p
B-1t
p
=p
v
d
v
d
 
t
p
=p.v
d
 
t
p
=0, p, 2p, 3p,psinv
d
 
t
p
=0dc
dt
2
t=t
p
=Asinv
d
 
t
p
B v
n
21-z
2
 e
-zv
n
 
t
p
=0 +e
-zv
n
 
t
a
v
d
sinv
d
 
t-zv
d
21-z
2
cosv
d
 
t
b
 dc
dt=zv
n
 
e
-zv
n
 
t
a
cosv
d
 
t+z
21-z
2
sinv
d
 
t
b
Openmirrors.com
aa
Section 5–3 / Second-Order Systems 1731c(t)
1+1
1–z2
1+e–zvnt
1–z2
T=1
zvn
1 –e–zvnt
1–z2
0
1–1
1–z23T 4Tt T 2TFigure 5–10
Pair of envelopecurves for the unit-
step response curve
of the system shownin Figure 5–6.
The curves are the envelope curves of the transient response to
a unit-step input. The response curve c(t) always remains within a pair of the envelope
curves, as shown in Figure 5–10. The time constant of these envelope curves is 1 /H20862zvn.
The speed of decay of the transient response depends on the value of the time constant
1/H20862zvn. For a given vn, the settling time tsis a function of the damping ratio z. From
Figure 5–7, we see that for the same vnand for a range of zbetween 0 and 1 the settling time
tsfor a very lightly damped system is larger than that for a properly damped system. For an
overdamped system, the settling time tsbecomes large because of the sluggish response.
The settling time corresponding to a ;2%or;5%tolerance band may be measured
in terms of the time constant T=1 /H20862zvnfrom the curves of Figure 5–7 for different
values of z.The results are shown in Figure 5–11. For 0<z<0.9 , if the 2 %criterion is
used, tsis approximately four times the time constant of the system. If the 5 %criterion
is used, then tsis approximately three times the time constant. Note that the settling
time reaches a minimum value around z=0.76 (for the 2 %criterion) or z=0.68 (for
the 5 %criterion) and then increases almost linearly for large values of z.
The discontinuities in the curves of Figure 5–11 arise because an infinitesimal changein the value of zcan cause a finite change in the settling time.
For convenience in comparing the responses of systems, we commonly define the
settling time t
sto be
(2%criterion) (5–22)
or
(5%criterion) (5–23)
Note that the settling time is inversely proportional to the product of the damping
ratio and the undamped natural frequency of the system. Since the value of zis usually
determined from the requirement of permissible maximum overshoot, the settling timets=3T=3
s=3
zvnts=4T=4
s=4
zvn1;Ae-zvn t/H2086221-z2B
aa
174
Chapter 5 / Transient and Steady-State Response Analyses
z%
100
90
80
70
60
50
40
30
20
10
0 0.5 1.0 1.5M
p
M
p
: Maximum overshootC(s)
R(s)=v
n
s
2
+ 2zv
n
s+v
n2
2
Figure 5–12
M
p
versuszcurve.
2T3T4T
T5T6T
0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
z
Settling time, t
s
5% Tolerance band
2% Tolerance band
Figure 5–11
Settling time t
s
versuszcurves.
is determined primarily by the undamped natural frequency v
n
. This means that the
duration of the transient period may be varied, without changing the maximum over-
shoot, by adjusting the undamped natural frequency v
n
.
From the preceding analysis, it is evident that for rapid response v
n
must be large.To limit
the maximum overshoot M
p
and to make the settling time small, the damping ratio zshould
not be too small. The relationship between the maximum percent overshoot M
p
and the
damping ratio zis presented in Figure 5–12. Note that if the damping ratio is between 0.4
and 0.7, then the maximum percent overshoot for step response is between 25 %and 4 %.
Openmirrors.com
aa
Section 5–3 / Second-Order Systems 175It is important to note that the equations for obtaining the rise time, peak time, max-
imum overshoot, and settling time are valid only for the standard second-order systemdefined by Equation (5–10). If the second-order system involves a zero or two zeros,the shape of the unit-step response curve will be quite different from those shown inFigure 5–7.
EXAMPLE 5–1
Consider the system shown in Figure 5–6, where z=0.6 andvn=5 rad /H20862sec. Let us obtain the rise
time tr, peak time tp, maximum overshoot Mp, and settling time tswhen the system is subjected
to a unit-step input.
From the given values of zandvn, we obtain and s=zvn=3 .
Rise time tr: The rise time is
wherebis given by
The rise time tris thus
Peak time tp: The peak time is
Maximum overshoot Mp: The maximum overshoot is
The maximum percent overshoot is thus 9.5 %.
Settling time ts: For the 2 %criterion, the settling time is
For the 5 %criterion,
Servo System with Velocity Feedback. The derivative of the output signal can
be used to improve system performance. In obtaining the derivative of the outputposition signal, it is desirable to use a tachometer instead of physically differentiating theoutput signal. (Note that the differentiation amplifies noise effects. In fact, ifdiscontinuous noises are present, differentiation amplifies the discontinuous noises morethan the useful signal. For example, the output of a potentiometer is a discontinuousvoltage signal because, as the potentiometer brush is moving on the windings, voltagesare induced in the switchover turns and thus generate transients. The output of the po-tentiometer therefore should not be followed by a differentiating element.)ts=3
s=3
3=1 sects=4
s=4
3=1.33 secMp=e-As/H20862vdBp=e-(3/H208624)*3.14=0.095tp=p
vd=3.14
4=0.785  sectr=3.14 -0.93
4=0.55 secb=tan-1vd
s=tan-14
3=0.93 radtr=p-b
vd=3.14 -b
4vd=vn21-z2=4
aa
176
Chapter 5 / Transient and Steady-State Response Analyses
R(s) C(s)
(a)1
s
K
Js+B
K
h
R(s) C(s)
(b)K
s(Js+B+KK
h
)
+–
+–
+–
Figure 5–13
(a) Block diagram of
a servo system;
(b) simplified block
diagram.
The tachometer, a special dc generator, is frequently used to measure velocity with-
out differentiation process. The output of a tachometer is proportional to the angular
velocity of the motor.
Consider the servo system shown in Figure 5–13(a). In this device, the velocity signal,
together with the positional signal, is fed back to the input to produce the actuating
error signal. In any servo system, such a velocity signal can be easily generated by a
tachometer. The block diagram shown in Figure 5–13(a) can be simplified, as shown in
Figure 5–13(b), giving
(5–24)
Comparing Equation (5–24) with Equation (5–9), notice that the velocity feedback has
the effect of increasing damping. The damping ratio zbecomes
(5–25)
The undamped natural frequency is not affected by velocity feedback. Not-
ing that the maximum overshoot for a unit-step input can be controlled by controlling
the value of the damping ratio z, we can reduce the maximum overshoot by adjusting
the velocity-feedback constant K
h
so that zis between 0.4 and 0.7.
It is important to remember that velocity feedback has the effect of increasing the
damping ratio without affecting the undamped natural frequency of the system.
EXAMPLE 5–2
For the system shown in Figure 5–13(a), determine the values of gain Kand velocity-feedback
constant K
h
so that the maximum overshoot in the unit-step response is 0.2 and the peak time is 1 sec.
With these values of KandK
h
, obtain the rise time and settling time.Assume that J=1 kg-m
2
and
B=1 N-m /H20862rad /H20862sec.
Determination of the values of K and K
h
: The maximum overshoot M
p
is given by Equation
(5–21) as
M
p
=e
-Az/H2086221-z
2
Bp
v
n
=1K/H20862J
z=B+KK
h
21KJ
C(s)
R(s)=K
Js
2
+AB+KK
h
Bs+K
Openmirrors.com
aa
Section 5–3 / Second-Order Systems 177This value must be 0.2. Thus,
or
which yields
The peak time tpis specified as 1 sec; therefore, from Equation (5–20),
or
Sincezis 0.456, vnis
Since the natural frequency vnis equal to 
Then Khis, from Equation (5–25),
Rise time tr: From Equation (5–19), the rise time tris
where
Thus, tris
Settling time ts: For the 2 %criterion,
For the 5 %criterion,
ts=3
s=1.86 sects=4
s=2.48 sectr=0.65 secb=tan-1vd
s=tan-11.95 =1.10tr=p-b
vdKh=21KJz-B
K=21Kz-1
K=0.178  secK=Jv2
n=v2
n=12.5 N-m1K/H20862J,vn=vd
21-z2=3.53vd=3.14tp=p
vd=1z=0.456zp
21-z2=1.61e-Az/H2086221-z2Bp=0.2
aa
178
Chapter 5 / Transient and Steady-State Response Analyses
1.0
0.8
0.6
0.4
0.2
0
–0.2
–0.4
–0.6
–0.8
–1.0
0 2468 1 0 12
v
n
tc(t)
v
n
z = 0.1
z = 0.3
z = 0.5
z = 0.7
z = 1.0
Figure 5–14
Unit-impulse
response curves of
the system shown in
Figure 5–6.
Impulse Response of Second-Order Systems. For a unit-impulse input r(t), the
corresponding Laplace transform is unity, or R(s)=1 .The unit-impulse response C(s)
of the second-order system shown in Figure 5-6 is
The inverse Laplace transform of this equation yields the time solution for the response
c(t) as follows:
For 0 /H11349z<1 ,
fort/H113500 (5–26)
For z=1 ,
fort/H113500 (5–27)
For z>1 ,
fort/H113500 (5–28)
Note that without taking the inverse Laplace transform of C(s) we can also obtain
the time response c(t) by differentiating the corresponding unit-step response, since
the unit-impulse function is the time derivative of the unit-step function. A family of
unit-impulse response curves given by Equations (5–26) and (5–27) with various val-
ues of zis shown in Figure 5–14. The curves c(t)/v
n
are plotted against the dimen-
sionless variable v
n
t, and thus they are functions only of z. For the critically damped
and overdamped cases, the unit-impulse response is always positive or zero; that is,
c(t) /H113500. This can be seen from Equations (5–27) and (5–28). For the underdamped
case, the unit-impulse response c(t) oscillates about zero and takes both positive and
negative values.c(t) =v
n
22z
2
-1
e
-Az-2z
2
-1
Bv
n
 
t
-v
n
22z
2
-1
 e
-Az+2z
2
-1
Bv
n
 
t
,c(t) =v
2
n
 
te
-v
n
 
t
,c(t) =v
n
21-z
2
e
-zv
n
 
t
sinv
n
21-z
2
t,C(s) =v
2
n
s
2
+2zv
n
 
s+v
2
n
Openmirrors.com
aa
Section 5–4 / Higher-Order Systems 179c(t)
0Unit-impulse response
1+Mp
tptFigure 5–15
Unit-impulseresponse curve of the
system shown in
Figure 5–6.
From the foregoing analysis, we may conclude that if the impulse response c(t)does
not change sign, the system is either critically damped or overdamped, in which casethe corresponding step response does not overshoot but increases or decreases monot-onically and approaches a constant value.
The maximum overshoot for the unit-impulse response of the underdamped system
occurs at
where 0<z<1 (5–29)
[Equation (5–29) can be obtained by equating dc/H20862dtto zero and solving for t.] The max-
imum overshoot is
where 0<z<1 (5–30)
[Equation (5–30) can be obtained by substituting Equation (5–29) into Equation (5–26).]
Since the unit-impulse response function is the time derivative of the unit-step
response function, the maximum overshoot M
pfor the unit-step response can be
found from the corresponding unit-impulse response.That is, the area under the unit-impulse response curve from t=0 to the time of the first zero, as shown in Figure
5–15, is 1+ M
p, where Mpis the maximum overshoot (for the unit-step response)
given by Equation (5–21). The peak time tp(for the unit-step response) given by
Equation (5–20) corresponds to the time that the unit-impulse response first crossesthe time axis.
5–4 HIGHER-ORDER SYSTEMS
In this section we shall present a transient-response analysis of higher-order systems in
general terms. It will be seen that the response of a higher-order system is the sum of theresponses of first-order and second-order systems.c(t)
max=vn expa-z
21-z2tan-121-z2
zb,t=tan-121-z2
z
vn21-z2,
aa
180
Chapter 5 / Transient and Steady-State Response Analyses
+–
R(s) C(s)
G(s)
H(s)
Figure 5–16
Control system.
Transient Response of Higher-Order Systems. Consider the system shown in
Figure 5–16. The closed-loop transfer function is
(5–31)
In general, G(s) andH(s) are given as ratios of polynomials in s,o r
and
where p(s), q(s), n(s) , and d(s) are polynomials in s.The closed-loop transfer function
given by Equation (5–31) may then be written
The transient response of this system to any given input can be obtained by a computer
simulation. (See Section 5–5.) If an analytical expression for the transient response is de-
sired, then it is necessary to factor the denominator polynomial. [MATLAB may be
used for finding the roots of the denominator polynomial. Use the command roots(den) .]
Once the numerator and the denominator have been factored, C(s)/R(s) can be writ-
ten in the form
(5–32)
Let us examine the response behavior of this system to a unit-step input. Consider
first the case where the closed-loop poles are all real and distinct. For a unit-step input,
Equation (5–32) can be written
(5–33)
where a
i
is the residue of the pole at s=–p
i
. (If the system involves multiple poles,
then C(s) will have multiple-pole terms.) [The partial-fraction expansion of C(s) ,a s
given by Equation (5–33), can be obtained easily with MATLAB. Use the residue
command. (See Appendix B.)]
If all closed-loop poles lie in the left-half splane, the relative magnitudes of the
residues determine the relative importance of the components in the expanded form ofC(s) =a
s+a
n
i=1
a
i
s+p
i
C(s)
R(s)=KAs+z
1
BAs+z
2
BpAs+z
m
B
As+p
1
BAs+p
2
BpAs+p
n
B =b
0
 
s
m
+b
1
 
s
m-1
+p+b
m-1
 
s+b
m
a
0
 
s
n
+a
1
 
s
n-1
+p+a
n-1
 
s+a
n
  
(m/H11349n) C(s)
R(s)=p(s)d(s)
q(s)d(s) +p(s)n(s)H(s) =n(s)
d(s)G(s) =p(s)
q(s)C(s)
R(s)=G(s)
1+G(s)H(s)
Openmirrors.com
aa
Section 5–4 / Higher-Order Systems 181C(s) . If there is a closed-loop zero close to a closed-loop pole, then the residue at this
pole is small and the coefficient of the transient-response term corresponding to this polebecomes small. A pair of closely located poles and zeros will effectively cancel eachother. If a pole is located very far from the origin, the residue at this pole may be small.The transients corresponding to such a remote pole are small and last a short time.Termsin the expanded form of C(s) having very small residues contribute little to the transient
response, and these terms may be neglected. If this is done, the higher-order system maybe approximated by a lower-order one. (Such an approximation often enables us to es-timate the response characteristics of a higher-order system from those of a simplifiedone.)
Next, consider the case where the poles of C(s) consist of real poles and pairs of
complex-conjugate poles.A pair of complex-conjugate poles yields a second-order termins. Since the factored form of the higher-order characteristic equation consists of first-
and second-order terms, Equation (5–33) can be rewritten
where we assumed all closed-loop poles are distinct. [If the closed-loop poles involve
multiple poles, C(s) must have multiple-pole terms.] From this last equation, we see that
the response of a higher-order system is composed of a number of terms involving thesimple functions found in the responses of first- and second-order systems. The unit-step response c(t), the inverse Laplace transform of C(s) , is then
fort/H113500 (5–34)
Thus the response curve of a stable higher-order system is the sum of a number of
exponential curves and damped sinusoidal curves.
If all closed-loop poles lie in the left-half splane, then the exponential terms and
the damped exponential terms in Equation (5–34) will approach zero as time tincreases.
The steady-state output is then c(q)=a .
Let us assume that the system considered is a stable one.Then the closed-loop poles
that are located far from the jvaxis have large negative real parts. The exponential
terms that correspond to these poles decay very rapidly to zero. (Note that the hori-zontal distance from a closed-loop pole to the jvaxis determines the settling time of tran-
sients due to that pole. The smaller the distance is, the longer the settling time.)
Remember that the type of transient response is determined by the closed-loop
poles, while the shape of the transient response is primarily determined by the closed-loop zeros. As we have seen earlier, the poles of the input R(s) yield the steady-state
response terms in the solution, while the poles of C(s)/R(s) enter into the exponential
transient-response terms and/or damped sinusoidal transient-response terms.The zerosofC(s)/R(s) do not affect the exponents in the exponential terms, but they do affect the
magnitudes and signs of the residues.+a
r
k=1ck e-zk vk tsinvk21-z2
kt,c(t) =a+aq
j=1aj e-pj t+ar
k=1bk e-zk vk tcosvk21-z2
ktC(s) =a
s+aq
j=1aj
s+pj+ar
k=1bkAs+zk vkB+ck vk21-z2
k
s2+2zk vk s+v2
k  (q+2r=n)
aa
182
Chapter 5 / Transient and Steady-State Response Analyses
Dominant Closed-Loop Poles. The relative dominance of closed-loop poles is
determined by the ratio of the real parts of the closed-loop poles, as well as by the rel-
ative magnitudes of the residues evaluated at the closed-loop poles. The magnitudes of
the residues depend on both the closed-loop poles and zeros.
If the ratios of the real parts of the closed-loop poles exceed 5 and there are no zeros
nearby, then the closed-loop poles nearest the jvaxis will dominate in the transient-
response behavior because these poles correspond to transient-response terms that
decay slowly. Those closed-loop poles that have dominant effects on the transient-
response behavior are called dominant closed-loop poles. Quite often the dominant
closed-loop poles occur in the form of a complex-conjugate pair. The dominant closed-
loop poles are most important among all closed-loop poles.
Note that the gain of a higher-order system is often adjusted so that there will exist
a pair of dominant complex-conjugate closed-loop poles. The presence of such poles in
a stable system reduces the effects of such nonlinearities as dead zone, backlash, and
coulomb-friction.
Stability Analysis in the Complex Plane. The stability of a linear closed-loop
system can be determined from the location of the closed-loop poles in the splane. If
any of these poles lie in the right-half splane, then with increasing time they give rise
to the dominant mode, and the transient response increases monotonically or oscillates
with increasing amplitude. This represents an unstable system. For such a system, as
soon as the power is turned on, the output may increase with time. If no saturation
takes place in the system and no mechanical stop is provided, then the system may
eventually be subjected to damage and fail, since the response of a real physical sys-
tem cannot increase indefinitely.Therefore, closed-loop poles in the right-half splane
are not permissible in the usual linear control system. If all closed-loop poles lie to the
left of the jvaxis, any transient response eventually reaches equilibrium. This repre-
sents a stable system.
Whether a linear system is stable or unstable is a property of the system itself and
does not depend on the input or driving function of the system. The poles of the input,
or driving function, do not affect the property of stability of the system, but they con-
tribute only to steady-state response terms in the solution.Thus, the problem of absolute
stability can be solved readily by choosing no closed-loop poles in the right-half splane,
including the jvaxis. (Mathematically, closed-loop poles on the jvaxis will yield oscil-
lations, the amplitude of which is neither decaying nor growing with time. In practical
cases, where noise is present, however, the amplitude of oscillations may increase at a
rate determined by the noise power level. Therefore, a control system should not have
closed-loop poles on the jvaxis.)
Note that the mere fact that all closed-loop poles lie in the left-half splane does not
guarantee satisfactory transient-response characteristics. If dominant complex-conjugate
closed-loop poles lie close to the jvaxis, the transient response may exhibit excessive
oscillations or may be very slow.Therefore, to guarantee fast, yet well-damped, transient-
response characteristics, it is necessary that the closed-loop poles of the system lie in a
particular region in the complex plane, such as the region bounded by the shaded area
in Figure 5–17.
Since the relative stability and transient-response performance of a closed-loop con-
trol system are directly related to the closed-loop pole-zero configuration in the splane,
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 1830
ssjv
In this region
z/H11022 0.4
s4ts/H11021
Figure 5–17
Region in thecomplex planesatisfying theconditions z>0.4
andt
s<4/s.
it is frequently necessary to adjust one or more system parameters in order to obtain suit-
able configurations. The effects of varying system parameters on the closed-loop poleswill be discussed in detail in Chapter 6.
5–5 TRANSIENT-RESPONSE ANALYSIS WITH MATLAB
Introduction. The practical procedure for plotting time response curves of systems
higher than second order is through computer simulation. In this section we present thecomputational approach to the transient-response analysis with MATLAB. In particular,we discuss step response, impulse response, ramp response, and responses to other simpleinputs.
MATLAB Representation of Linear Systems. The transfer function of a system
is represented by two arrays of numbers. Consider the system
(5–35)
This system can be represented as two arrays, each containing the coefficients of the
polynomials in decreasing powers of sas follows:
num = [2  25]
den = [1  4  25]
An alternative representation is
num = [0  2  25]
den = [1  4  25]C(s)
R(s)=2s+25
s2+4s+25
aa
184
Chapter 5 / Transient and Steady-State Response Analyses
In this expression a zero is padded. Note that if zeros are padded, the dimensions of
“num ” vector and “ den” vector become the same.An advantage of padding zeros is that
the “num ” vector and “ den” vector can be directly added. For example,
num + den = [0  2  25] + [1  4  25]
= [1  6  50]
Ifnum andden(the numerator and denominator of the closed-loop transfer function)
are known, commands such as
step(num,den),    step(num,den,t)
will generate plots of unit-step responses ( tin the step command is the user-specified time.)
For a control system defined in a state-space form, where state matrix A, control
matrix B, output matrix C, and direct transmission matrix Dof state-space equations are
known, the command
step(A,B,C,D),    step(A,B,C,D,t)
will generate plots of unit-step responses. When tis not explicitly included in the step
commands, the time vector is automatically determined.
Note that the command step(sys) may be used to obtain the unit-step response of a
system. First, define the system by
sys = tf(num,den)
or
sys = ss(A,B,C,D)
Then, to obtain, for example, the unit-step response, enter
step(sys)
into the computer.
When step commands have left-hand arguments such as
[y,x,t] = step(num,den,t)
[y,x,t] = step(A,B,C,D,iu)
[y,x,t] = step(A,B,C,D,iu,t) (5–36)
no plot is shown on the screen. Hence it is necessary to use a plot command to see the
response curves. The matrices yandxcontain the output and state response of the sys-
tem, respectively, evaluated at the computation time points t.(yhas as many columns as
outputs and one row for each element in t. xhas as many columns as states and one row
for each element in t.)
Note in Equation (5–36) that the scalar iuis an index into the inputs of the system
and specifies which input is to be used for the response, and tis the user-specified time.
If the system involves multiple inputs and multiple outputs, the step command, such as
given by Equation (5–36), produces a series of step-response plots, one for each input
and output combination of
(For details, see Example 5–3.)y=Cx+Dux#=Ax+Bu
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 185EXAMPLE 5–3 Consider the following system:
Obtain the unit-step response curves.
Although it is not necessary to obtain the transfer-matrix expression for the system to obtain
the unit-step response curves with MATLAB, we shall derive such an expression for reference.For the system defined by
the transfer matrix G(s)is a matrix that relates Y(s)andU(s)as follows:
Taking Laplace transforms of the state-space equations, we obtain
(5–37)(5–38)
In deriving the transfer matrix, we assume that Then, from Equation (5–37), we get
(5–39)
Substituting Equation (5–39) into Equation (5–38), we obtain
Thus the transfer matrix G(s)is given by
The transfer matrix G(s)for the given system becomes
Hence
Since this system involves two inputs and two outputs, four transfer functions may be defined,
depending on which signals are considered as input and output. Note that, when considering theBY1(s)
Y2(s)R=≥s-1
s2+s+6.5
s+7.5
s2+s+6.5s
s2+s+6.5
6.5
s2+s+6.5¥BU1(s)
U2(s)R =1
s2+s+6.5Bs-1
s+7.5s
6.5R =1
s2+s+6.5Bs
6.5-1
s+1RB1
11
0R =B1
00
1RBs+1
-6.51
sR-1
B1
11
0R G(s)=C(s  I-A)-1
 BG(s)=C(s  I-A)-1
 B+DY(s)=CC(s  I-A)-1
 B+DD U(s)X(s)=(s  I-A)-1
 BU(s)x(0)=0. Y(s)=CX(s)+DU(s) s X(s)-x(0)=AX(s)+BU(s)Y(s)=G(s)  U(s)y=Cx+Dux#=Ax+BuBy1
y2R=B1
00
1RBx1
x2R+B000
0RBu1
u2RBx#
1
x#
2R=B-1
6.5-1
0RBx1
x2R+B111
0RBu1
u2R
aa
186
Chapter 5 / Transient and Steady-State Response Analyses
To: Y2
1.52
1
0.5
0
048 1 2
Time (sec)
1.52
1
0.5
0
048 1 2
To: Y1
0.40.6
0.2
−0.200
−0.40.40.6
0.2
−0.2
−0.4
048 1 2
048 1 2
From: U1 From: U2Step Response
Amplitude
Figure 5–18
Unit-step response
curves.
MATLAB Program 5–1
A = [–1  –1;6.5  0];
B = [1  1;1  0];
C = [1  0;0  1];
D = [0  0;0  0];
step(A,B,C,D)
signal u
1
as the input, we assume that signal u
2
is zero, and vice versa.The four transfer functions
are
Assume that u
1
andu
2
are unit-step functions. The four individual step-response curves can then
be plotted by use of the command
step(A,B,C,D)
MATLAB Program 5–1 produces four such step-response curves.The curves are shown in Figure 5–18.
(Note that the time vector tis automatically determined, since the command does not include t.)Y
2
(s)
U
2
(s)=6.5
s
2
+s+6.5Y
2
(s)
U
1
(s)=s+7.5
s
2
+s+6.5,Y
1
(s)
U
2
(s)=s
s
2
+s+6.5Y
1
(s)
U
1
(s)=s-1
s
2
+s+6.5,
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 187MATLAB Program 5–2
% ***** In this program we plot step-response curves of a system
% having two inputs (u1 and u2) and two outputs (y1 and y2) *****
% ***** We shall first plot step-response curves when the input is
% u1. Then we shall plot step-response curves when the input is% u2 *****
% ***** Enter matrices A, B, C, and D *****A = [-1  -1;6.5  0];
B = [1  1;1  0];C = [1  0;0  1];D = [0  0;0  0];
% ***** To plot step-response curves when the input is u1, enter
% the command 'step(A,B,C,D,1)' *****
step(A,B,C,D,1)
gridtitle ('Step-Response Plots: Input = u1 (u2 = 0)')text(3.4, -0.06,'Y1')text(3.4, 1.4,'Y2')
% ***** Next, we shall plot step-response curves when the input
% is u2. Enter the command 'step(A,B,C,D,2)' *****
step(A,B,C,D,2)
gridtitle ('Step-Response Plots: Input = u2 (u1 = 0)')text(3,0.14,'Y1')text(2.8,1.1,'Y2')To plot two step-response curves for the input u1in one diagram and two step-response curves
for the input u2in another diagram, we may use the commands
step(A,B,C,D,1)
and
step(A,B,C,D,2)
respectively. MATLAB Program 5–2 is a program to plot two step-response curves for the
input u1in one diagram and two step-response curves for the input u2in another diagram.
Figure 5–19 shows the two diagrams, each consisting of two step-response curves. (ThisMATLAB program uses text commands. For such commands, refer to the paragraph followingthis example.)
aa
188
Chapter 5 / Transient and Steady-State Response Analyses
Step-Response Plots: Input =u2 (u1= 0)
Time (sec)
Amplitude
0123456789 1 01.6
1.2
0.8
0.4
0
–0.21.4
1
0.6
0.2
Y2
Y1
(b)
Step-Response Plots: Input =u1 (u2= 0)
2
1.5
1
0.5
0
–0.5
0123456789 1 0
Time (sec)
Amplitude
Y2
Y1
(a)
Figure 5–19
Unit-step response
curves. (a) u
1
is the
inputAu
2
=0B; (b) u
2
is the input Au
1
=0B.
Writing Text on the Graphics Screen. To write text on the graphics screen, enter,
for example, the following statements:
text(3.4, -0.06,'Y1')
and
text(3.4,1.4,'Y2')
The first statement tells the computer to write ‘Y1’ beginning at the coordinates x=3.4,
y=–0.06 . Similarly, the second statement tells the computer to write ‘Y2’ beginning at
the coordinates x=3.4, y=1.4 . [See MATLAB Program 5–2 and Figure 5–19(a).]
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 189MATLAB Program 5–3
wn = 5;
damping_ratio = 0.4;[num0,den] = ord2(wn,damping_ratio);num = 5^2*num0;printsys(num,den,'s')num/den =
25
S^2 +4s+25Another way to write a text or texts in the plot is to use the gtext command. The
syntax is
gtext('text')
When gtext is executed, the computer waits until the cursor is positioned (using a
mouse) at the desired position in the screen. When the left mouse button is pressed,the text enclosed in simple quotes is written on the plot at the cursor’s position. Anynumber of gtext commands can be used in a plot. (See, for example, MATLAB 
Program 5–15.)
MATLAB Description of Standard Second-Order System. As noted earlier, the
second-order system
(5–40)
is called the standard second-order system. Given v
nandz, the command
printsys(num,den) or printsys(num,den,s)
prints num/den as a ratio of polynomials in s.
Consider, for example, the case where vn=5 rad /H20862sec and z=0.4 . MATLAB Program
5–3 generates the standard second-order system, where vn=5 rad /H20862sec and z=0.4 .
Note that in MATLAB Program 5–3, “num 0” is 1.G(s) =v2
n
s2+2zvn s+v2
n
Obtaining the Unit-Step Response of the Transfer-Function System. Let us
consider the unit-step response of the system given by
G(s) =25
s2+4s+25
aa
190
Chapter 5 / Transient and Steady-State Response Analyses
MATLAB Program 5–4
% ------------- Unit-step response -------------
% ***** Enter the numerator and denominator of the transfer
% function *****
num = [25];
den = [1  4  25];
% ***** Enter the following step-response command *****
step(num,den)
% ***** Enter grid and title of the plot *****
grid
title (' Unit-Step Response of G(s) = 25/(s^2+4s+25)')
1.4
1.2
1
0.8
0.6
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3
Time (sec)Unit-Step Response of G(s)= 25/(s
2
+4s+25)
Amplitude
Figure 5–20
Unit-step response
curve.
Notice in Figure 5–20 (and many others) that the x-axis and y-axis labels are auto-
matically determined. If it is desired to label the xaxis and yaxis differently, we need
to modify the step command. For example, if it is desired to label the xaxis as 't Sec'
and the yaxis as ‘Output,’ then use step-response commands with left-hand arguments,
such as
c = step(num,den,t)
or, more generally,
[y,x,t] = step(num,den,t)
and use plot( t,y) command. See, for example, MATLAB Program 5–5 and Figure 5–21.MATLAB Program 5–4 will yield a plot of the unit-step response of this system.A plot
of the unit-step response curve is shown in Figure 5–20.
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 191MATLAB Program 5–5
% ------------- Unit-step response -------------num = [25];
den = [1  4  25];t = 0:0.01:3;[y,x,t] = step(num,den,t);plot(t,y)gridtitle('Unit-Step Response of G(s)=25/(sˆ2+4s+25)')xlabel('t Sec')ylabel('Output')
1.4
1.2
1
0.8
0.6
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3
t  SecUnit-Step Response of G(s)= 25/(s2+4s+25)Output
Figure 5–21
Unit-step responsecurve.
Obtaining Three-Dimensional Plot of Unit-Step Response Curves with
MATLAB. MATLAB enables us to plot three-dimensional plots easily.The commands
to obtain three-dimensional plots are “mesh” and “surf.” The difference between the“mesh” plot and “surf” plot is that in the former only the lines are drawn and in the lat-ter the spaces between the lines are filled in by colors. In this book we use only the“mesh” command.
EXAMPLE 5–4
Consider the closed-loop system defined by
(The undamped natural frequency vnis normalized to 1.) Plot unit-step response curves c(t)when
zassumes the following values:
z=0, 0.2, 0.4, 0.6. 0.8, 1.0
Also plot a three-dimensional plot.C(s)
R(s)=1
s2+2zs+1
aa
192
Chapter 5 / Transient and Steady-State Response Analyses
MATLAB Program 5–6
% ------- Two-dimensional plot and three-dimensional plot of unit-step
% response curves for the standard second-order system with wn = 1
% and zeta = 0, 0.2, 0.4, 0.6, 0.8, and 1. -------
t = 0:0.2:10;
zeta = [0 0.2 0.4 0.6 0.8 1];
for n = 1:6;
num = [1];
den = [1 2*zeta(n) 1];
[y(1:51,n),x,t] = step(num,den,t);
end
% To plot a two-dimensional diagram, enter the command plot(t,y).
plot(t,y)
grid
title('Plot of Unit-Step Response Curves with \omega_n = 1 and \zeta = 0, 0.2, 0.4, 0.6, 0.8, 1')
xlabel('t (sec)')
ylabel('Response')
text(4.1,1.86,'\zeta = 0')
text(3.5,1.5,'0.2')
text(3 .5,1.24,'0.4')
text(3.5,1.08,'0.6')
text(3.5,0.95,'0.8')
text(3.5,0.86,'1.0')
% To plot a three-dimensional diagram, enter the command mesh(t,zeta,y').
mesh(t,zeta,y')
title('Three-Dimensional Plot of Unit-Step Response Curves')
xlabel('t Sec')
ylabel('\zeta')
zlabel('Response')
An illustrative MATLAB Program for plotting a two-dimensional diagram and a three-
dimensional diagram of unit-step response curves of this second-order system is given in MATLAB
Program 5–6. The resulting plots are shown in Figures 5–22(a) and (b), respectively. Notice that
we used the command mesh(t,zeta,y') to plot the three-dimensional plot.We may use a command
mesh(y') to get the same result. [Note that command mesh(t,zeta,y) ormesh(y) will produce a
three-dimensional plot the same as Figure 5–22(b), except that xaxis and yaxis are interchanged.
See Problem A–5–15 .]
When we want to solve a problem using MATLAB and if the solution process involves many
repetitive computations, various approaches may be conceived to simplify the MATLAB pro-
gram.A frequently used approach to simplify the computation is to use “for loops.” MATLAB Pro-
gram 5–6 uses such a “for loop.” In this book many MATLAB programs using “for loops” are
presented for solving a variety of problems. Readers are advised to study all those problems care-
fully to familiarize themselves with the approach.
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 193Plot of Unit-Step Response Curves with /H9275n = 1 and /H9256 = 0, 0.2, 0.4, 0.6, 0.8, 1Response
0.20.40.60.811.21.41.61.82
0
t (sec)0123456789 1 0/H9256 = 0/H9256 = 0
0.20.2
0.40.4
0.60.6
0.80.8
1.01.0
(a)
01
0.8
0.6
0.4
0.2
002468100.511.52Response
/H9256 t Sec
(b)Three-Dimensional Plot of Unit-Step Response Curves
Figure 5–22
(a) Two-dimensionalplot of unit-step
response curves for
z=0, 0.2, 0.4, 0.6, 0.8,
and 1.0; (b) three-dimensional plot ofunit-step response
curves.
Obtaining Rise Time, Peak Time, Maximum Overshoot, and Settling Time
with MATLAB. MATLAB can conveniently be used to obtain the rise time, peak time,
maximum overshoot, and settling time. Consider the system defined by
MATLAB Program 5–7 yields the rise time, peak time, maximum overshoot, and settling
time. A unit-step response curve for this system is given in Figure 5–23 to verify theC(s)
R(s)=25
s2+6s+25
aa
194
Chapter 5 / Transient and Steady-State Response Analyses
MATLAB Program 5–7
% ------- This is a MATLAB program to find the rise time, peak time,
% maximum overshoot, and settling time of the second-order system
% and higher-order system -------
% ------- In this example, we assume zeta = 0.6 and wn = 5 -------
num = [25];
den = [1  6  25];
t = 0:0.005:5;
[y,x,t] = step(num,den,t);
r = 1; while y(r) < 1.0001; r = r + 1; end;
rise_time = (r - 1)*0.005
rise_time =
0.5550
[ymax,tp] = max(y);
peak_time = (tp - 1)*0.005
peak_time =
0.7850
max_overshoot = ymax-1
max_overshoot =
0.0948
s = 1001; while y(s) > 0.98 & y(s) < 1.02; s = s - 1; end;
settling_time = (s - 1)*0.005
settling_time =
1.1850
Amplitude
Time (sec)Step Response
0.6
0.4
0.20.811.21.4
0
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5
Figure 5–23
Unit-step response
curve.
results obtained with MATLAB Program 5–7. (Note that this program can also be
applied to higher-order systems. See Problem A–5–10 .)
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 195Impulse Response. The unit-impulse response of a control system may be
obtained by using any of the impulse commands such as
impulse(num,den)
impulse(A,B,C,D)[y,x,t] = impulse(num,den)[y,x,t] = impulse(num,den,t) (5–41)
[y,x,t] = impulse(A,B,C,D)[y,x,t] = impulse(A,B,C,D,iu) (5–42)
[y,x,t] = impulse(A,B,C,D,iu,t) (5–43)
The command impulse(num,den) plots the unit-impulse response on the screen. The
command impulse(A,B,C,D) produces a series of unit-impulse-response plots, one for
each input and output combination of the system
Note that in Equations (5–42) and (5–43) the scalar iuis an index into the inputs of the
system and specifies which input to be used for the impulse response.
Note also that if the command used does not include “ t” explicitly, the time vector
is automatically determined. If the command includes the user-supplied time vector “ t”,
as do the commands given by Equations (5–41) and (5–43)], this vector specifies thetimes at which the impulse response is to be computed.
If MATLAB is invoked with the left-hand argument [y,x,t] , such as in the case of
[y,x,t] = impulse(A,B,C,D) , the command returns the output and state responses of the
system and the time vector t. No plot is drawn on the screen. The matrices yandxcon-
tain the output and state responses of the system evaluated at the time points t.(yhas
as many columns as outputs and one row for each element in t.xhas as many columns
as state variables and one row for each element in t.) To plot the response curve, we
must include a plot command, such as plot(t,y).y=Cx+Dux#=Ax+Bu
EXAMPLE 5–5
Obtain the unit-impulse response of the following system:
C(s)
R(s)=G(s) =1
s2+0.2s +1
196
Chapter 5 / Transient and Steady-State Response Analyses
aa
Unit-Impulse Response of G(s)= 1/(s
2
+0.2s+1)
Time (sec)
Amplitude
0 5 10 15 20 25 30 35 40 45 501
0.8
0.2
–0.6
–0.80.6
0.4
0
–0.2
–0.4
Figure 5–24
Unit-impulse-
response curve.
MATLAB Program 5–8 will produce the unit-impulse response. The resulting plot is shown in
Figure 5–24.
MATLAB Program 5–8
num = [1];
den = [1  0.2  1];
impulse(num,den);
grid
title(‘Unit-Impulse Response of G(s) = 1/(s^2 + 0.2s + 1)‘)
Alternative Approach to Obtain Impulse Response. Note that when the initial
conditions are zero, the unit-impulse response of G(s) is the same as the unit-step
response of sG(s) .
Consider the unit-impulse response of the system considered in Example 5–5. Since
R(s)=1 for the unit-impulse input, we have
We can thus convert the unit-impulse response of G(s) to the unit-step response of
sG(s) .
If we enter the following num anddeninto MATLAB,
num = [0  1  0]
den = [1  0.2  1] =s
s
2
+0.2s +1 1
s C(s)
R(s)=C(s) =G(s) =1
s
2
+0.2s +1
Openmirrors.com
Section 5–5 / Transient-Response Analysis with MATLAB 197aa
Unit-Step Response of sG(s)=s/(s2+0.2s+1)
Time (sec)Amplitude
0 5 10 15 20 25 30 35 40 45 501
0.8
0.2
–0.6
–0.80.6
0.4
0
–0.2
–0.4Figure 5–25
Unit-impulse-
response curveobtained as the unit-step response ofsG(s)=
s/As
2+0.2s+1B.MATLAB Program 5–9
num = [1  0];
den = [1  0.2  1];step(num,den);gridtitle(‘Unit-Step Response of sG(s) = s/(s^2 + 0.2s + 1)‘)and use the step-response command; as given in MATLAB Program 5–9, we obtain aplot of the unit-impulse response of the system as shown in Figure 5–25.
Ramp Response. There is no ramp command in MATLAB. Therefore, we need
to use the step command or the lsim command (presented later) to obtain the ramp re-sponse. Specifically, to obtain the ramp response of the transfer-function system G(s) ,
divide G(s) bysand use the step-response command. For example, consider the closed-
loop system
For a unit-ramp input, R(s)=1/s
2. Hence
To obtain the unit-ramp response of this system, enter the following numerator and de-
nominator into the MATLAB program:
num = [2  1];
den = [1  1  1  0];C(s) =2s+1
s2+s+11
s2=2s+1
(s2+s+1)s1
sC(s)
R(s)=2s+1
s2+s+1
aa
198
Chapter 5 / Transient and Steady-State Response Analyses
MATLAB Program 5–10
% --------------- Unit-ramp response ---------------
% ***** The unit-ramp response is obtained as the unit-step
% response of G(s)/s *****
% ***** Enter the numerator and denominator of G(s)/s *****
num = [2  1];
den = [1  1  1  0];
% ***** Specify the computing time points (such as t = 0:0.1:10)
% and then enter step-response command: c = step(num,den,t) *****
t = 0:0.1:10;
c = step(num,den,t);
% ***** In plotting the ramp-response curve, add the reference
% input to the plot. The reference input is t. Add to the
% argument of the plot command with the following: t,t,'-'. Thus
% the plot command becomes as follows: plot(t,c,'o',t,t,'-') *****
plot(t,c,'o',t,t,'-')
% ***** Add grid, title, xlabel, and ylabel *****
grid
title('Unit-Ramp Response Curve for System G(s) = (2s + 1)/(s^2 + s + 1)')
xlabel('t Sec')
ylabel('Input and Output')
and use the step-response command. See MATLAB Program 5–10. The plot obtained
by using this program is shown in Figure 5–26.
Unit-Ramp Response Curve for System G(s) = (2 s + 1)/( s
2
 + s + 1)
t Sec0123456789 1 0
Input and Output
12
04
26810
Figure 5–26
Unit-ramp response
curve.
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 199Unit-Ramp Response of a System Defined in State Space. Next, we shall treat
the unit-ramp response of the system in state-space form. Consider the system described by
where uis the unit-ramp function. In what follows, we shall consider a simple example
to explain the method. Consider the case where
When the initial conditions are zeros, the unit-ramp response is the integral of the unit-
step response. Hence the unit-ramp response can be given by
(5–44)
From Equation (5–44), we obtain
(5–45)
Let us define
Then Equation (5–45) becomes
(5–46)
Combining Equation (5–46) with the original state-space equation, we obtain
(5–47)
(5–48)
where uappearing in Equation (5–47) is the unit-step function.These equations can be
written as
where
Note that x3is the third element of x. A plot of the unit-ramp response curve z(t) can
be obtained by entering MATLAB Program 5–11 into the computer.A plot of the unit-ramp response curve obtained from this MATLAB program is shown in Figure 5–27.BB =
C0
10S=BB
0R,  CC =[0 0 1],  DD =[0]AA =C0
- 1
11
- 1
00
00S=CA
C  0
0
0Sz=CCx +DDux#=AAx +BBu z=[0 0 1]Cx1
x2
x3S Cx#
1
x#
2
x#
3S=C0
-1
11
-1
00
00SCx1
x2
x3S+C010
Sux#
3=x1z=x3z#=y=x1z=
3t
0ydtD=[0] C=[1 0],x(0)=0 B=B0
1R, A=B0
- 11
- 1R,y=Cx+Dux#=Ax+Bu
aa
200
Chapter 5 / Transient and Steady-State Response Analyses
MATLAB Program 5–11
% --------------- Unit-ramp response ---------------
% ***** The unit-ramp response is obtained by adding a new
% state variable x3. The dimension of the state equation
% is enlarged by one *****
% ***** Enter matrices A, B, C, and D of the original state
% equation and output equation *****
A = [0  1;-1  -1];
B = [0;  1];
C = [1  0];
D = [0];
% ***** Enter matrices AA, BB, CC, and DD of the new,
% enlarged state equation and output equation *****
AA = [A zeros(2,1);C  0];
BB = [B;0];
CC = [0  0  1];
DD = [0];
% ***** Enter step-response command: [z,x,t] = step(AA,BB,CC,DD) *****
[z,x,t] = step(AA,BB,CC,DD);
% ***** In plotting x3 add the unit-ramp input t in the plot
% by entering the following command: plot(t,x3,'o',t,t,'-') *****
x3 = [0  0  1]*x'; plot(t,x3,'o',t,t,'-')
grid
title('Unit-Ramp Response')
xlabel('t Sec')
ylabel('Input and Output')
Unit-Ramp Response
t  Sec
Input and Output
0123456789 1 09
5
1
08
6
3
2
4710
Figure 5–27
Unit-ramp response
curve.
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 201Obtaining Response to Arbitrary Input. To obtain the response to an arbitrary
input, the command lsim may be used. The commands like
lsim(num,den,r,t)
lsim(A,B,C,D,u,t)y = lsim(num,den,r,t)y = lsim(A,B,C,D,u,t)
will generate the response to input time function roru. See the following two examples.
(Also, see Problems A–5–14 through A–5–16 .)
EXAMPLE 5–6
Using the lsim command, obtain the unit-ramp response of the following system:
We may enter MATLAB Program 5–12 into the computer to obtain the unit-ramp response.The
resulting plot is shown in Figure 5–28.C(s)
R(s)=2s+1
s2+s+1
MATLAB Program 5–12
% ------- Ramp Response -------
num = [2  1];
den = [1  1  1];
t = 0:0.1:10;r = t;y = lsim(num,den,r,t);plot(t,r,'-',t,y,'o')gridtitle('Unit-Ramp Response Obtained by Use of Command "lsim"')xlabel('t Sec')ylabel('Unit-Ramp Input and System Output')text(6.3,4.6,'Unit-Ramp Input')text(4.75,9.0,'Output')
Un it-Ramp Response Obta ined by use of Command “Is im”
t Sec0123456789 1 0Un it-Ramp Input and System Output12
04
26810
Output
Un it-Ramp Input
Figure 5–28
Unit-ramp response.
aa
202
Chapter 5 / Transient and Steady-State Response Analyses
EXAMPLE 5–7
Consider the system
Using MATLAB, obtain the response curves y(t) when the input uis given by
1.u= unit-step input
2.u=e
–t
Assume that the initial state is x(0)= 0.
A possible MATLAB program to produce the responses of this system to the unit-step input
Cu=1(t)Dand the exponential input Cu=e
–t
Dis shown in MATLAB Program 5–13. The result-
ing response curves are shown in Figures 5–29(a) and (b), respectively. y=[1
 
0]
B
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
-1
-10.5
0
RB
x
1
x
2
R
+
B
0
1
R
u
MATLAB Program 5–13
t = 0:0.1:12;
A = [-1  0.5;-1  0];
B = [0;1];
C = [1  0];
D = [0];
% For the unit-step input u = 1(t), use the command "y = step(A,B,C,D,1,t)".
y = step(A,B,C,D,1,t);
plot(t,y)
grid
title('Unit-Step Response')
xlabel('t Sec')
ylabel('Output')
% For the response to exponential input u = exp(-t), use the command
% "z = lsim(A,B,C,D,u,t)".
u = exp(-t);
z = lsim(A,B,C,D,u,t);
plot(t,u,'-',t,z,'o')
grid
title('Response to Exponential Input u = exp(-t)')
xlabel('t Sec')
ylabel('Exponential Input and System Output')
text(2.3,0.49,'Exponential input')
text(6.4,0.28,'Output')
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 203Unit-Step Response
t  Sec02468 1 0 1 2Output1
0.2
01.2
0.6
0.40.81.4
(a)
Response to Exponential Input u = e−t
t  Sec02468 1 0 1 2−0.2
(b)Exponential Input and System Output0.8
01
0.4
0.20.61.2
Exponential Input
Ouput
Figure 5–29
(a) Unit-stepresponse;
(b) response to input
u=e
–t.
Response to Initial Condition. In what follows we shall present a few methods
for obtaining the response to an initial condition. Commands that we may use are “step”or “initial”. We shall first present a method to obtain the response to the initial condi-tion using a simple example. Then we shall discuss the response to the initial conditionwhen the system is given in state-space form. Finally, we shall present a command initial
to obtain the response of a system given in a state-space form.
aa
204
Chapter 5 / Transient and Steady-State Response Analyses
EXAMPLE 5–8
Consider the mechanical system shown in Figure 5–30, where m=1 kg,b=3 N-sec /H20862m, and
k=2 N/H20862m. Assume that at t=0 the mass mis pulled downward such that x(0)=0.1 m and 
(0)=0.05 m/H20862sec. The displacement x(t) is measured from the equilibrium position before the
mass is pulled down. Obtain the motion of the mass subjected to the initial condition. (Assume
no external forcing function.)
The system equation is
with the initial conditions x(0)=0.1 m and ( xis measured from the equilib-
rium position.) The Laplace transform of the system equation gives
or
Solving this last equation for X(s) and substituting the given numerical values, we obtain
This equation can be written as
Hence the motion of the mass mmay be obtained as the unit-step response of the following
system:
MATLAB Program 5–14 will give a plot of the motion of the mass.The plot is shown in Figure 5–31.G(s) =0.1s
2
+0.35s
s
2
+3s+2X(s) =0.1s
2
+0.35s
s
2
+3s+21
s =0.1s +0.35
s
2
+3s+2 X(s) =mx(0)s +mx#(0)+bx(0)
ms
2
+bs+kAms
2
+bs+kBX(s) =mx(0)s +mx#(0)+bx(0)mCs
2
X(s) -sx(0) -x#(0)D+bCsX(s) -x(0)D+kX(s) =0x#(0)=0.05 m/H20862sec.mx$+bx#+kx=0x#
MATLAB Program 5–14
% --------------- Response to initial condition ---------------
% ***** System response to initial condition is converted to
% a unit-step response by modifying the numerator polynomial *****
% ***** Enter the numerator and denominator of the transfer
% function G(s) *****
num = [0.1  0.35  0];
den = [1  3  2];
% ***** Enter the following step-response command *****
step(num,den)
% ***** Enter grid and title of the plot *****
grid
title('Response of Spring-Mass-Damper System to Initial Condition')
m
k
bx
Figure 5–30
Mechanical system.
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 205Response of Spring-Mass-Damper System to Initial ConditionAmplitude0.12
0.02
00.08
0.040.060.1
Time (sec)0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5Figure 5–31
Response of themechanical system
considered in
Example 5–8.
Response to Initial Condition (State-Space Approach, Case 1). Consider the
system defined by
(5–49)
Let us obtain the response x(t)when the initial condition x(0)is specified.Assume that there
is no external input function acting on this system. Assume also that xis an n-vector.
First, take Laplace transforms of both sides of Equation (5–49).
This equation can be rewritten as
(5–50)
Taking the inverse Laplace transform of Equation (5–50), we obtain
(5–51)
(Notice that by taking the Laplace transform of a differential equation and then by
taking the inverse Laplace transform of the Laplace-transformed equation we generatea differential equation that involves the initial condition.)
Now define
(5–52)
Then Equation (5–51) can be written as
(5–53)
By integrating Equation (5–53) with respect to t, we obtain
(5–54)
where
B=x(0),  u=1(t)z#=Az+x(0)1(t)=Az+Buz$=Az#+x(0)d(t)z#=xx#=Ax+x(0)d(t)s X(s)=AX(s)+x(0)s X(s)-x(0)=AX(s)x#=Ax,  x(0)=x0
aa
206
Chapter 5 / Transient and Steady-State Response Analyses
Referring to Equation (5–52), the state x(t)is given by Thus,
(5–55)
The solution of Equations (5–54) and (5–55) gives the response to the initial condition.
Summarizing, the response of Equation (5–49) to the initial condition x(0)is obtained
by solving the following state-space equations:
where
MATLAB commands to obtain the response curves, where we do not specify the time
vector t(that is, we let the time vector be determined automatically by MATLAB), are
given next.
% Specify matrices A and B 
[x,z,t] = step(A,B,A,B);
x1 = [1  0  0 ... 0]*x';
x2 = [0  1  0 ... 0]*x';
/H11080
/H11080
/H11080
xn = [0  0  0 ... 1]*x';
plot(t,x1,t,x2, ... ,t,xn)
If we choose the time vector t(for example, let the computation time duration be
from t= 0 to t = tp with the computing time increment of ), then we use the following
MATLAB  commands:
t = 0: Δt: tp;
% Specify matrices A and B 
[x,z,t] = step(A,B,A,B,1,t);
x1 = [1  0  0 ... 0]*x';
x2 = [0  1  0 ... 0]*x';
/H11080
/H11080
/H11080
xn = [0  0  0 ... 1]*x';
plot(t,x1,t,x2, ... ,t,xn)
(See, for example, Example 5–9.) ¢tB=x(0),
  
u=1(t)x=Az+Buz#=Az+Bux=z#=Az+Buz#(t).
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 207Response to Initial Condition (State-Space Approach, Case 2). Consider the
system defined by
(5–56)
(5–57)
(Assume that xis an n-vector and yis an m-vector.)
Similar to case 1, by defining
we can obtain the following equation:
(5–58)
where
Noting that Equation (5–57) can be written as
(5–59)
By substituting Equation (5–58) into Equation (5–59), we obtain
(5–60)
The solution of Equations (5–58) and (5–60), rewritten here
where gives the response of the system to a given initial condi-
tion. MATLAB commands to obtain the response curves (output curves y1versus t, y2
versus t, ... , ym versus t) are shown next for two cases:
Case A. When the time vector t is not specified (that is, the time vector tis to be de-
termined automatically by MATLAB):
% Specify matrices A, B, and C 
[y,z,t] = step(A,B,C*A,C*B);y1 = [1  0  0 ... 0]*y';y2 = [0  1  0 ... 0]*y';
/H11080/H11080/H11080
ym = [0  0  0 ... 1]*y';plot(t,y1,t,y2, ... ,t,ym)B=x(0) and u=1(t),y=CAz +CBuz#=Az+Buy=C(Az+Bu)=CAz +CBuy=Cz#x=z#,B=x(0),
  u=1(t)z#=Az+x(0)1(t) =Az+Buz#=xy=Cxx#=Ax,  x(0)=x0
aa
208
Chapter 5 / Transient and Steady-State Response Analyses
MATLAB Program 5–15
t = 0:0.01:3;
A = [0  1;-10  -5];
B = [2;1];
[x,z,t] = step(A,B,A,B,1,t);
x1 = [1  0]*x';
x2 = [0  1]*x';
plot(t,x1,'x',t,x2,'-')
grid
title('Response to Initial Condition')
xlabel('t Sec')
ylabel('State Variables x1 and x2')
gtext('x1')
gtext('x2')
Case B
.
When the time vector t is specified:
t = 0: Δt: tp;
% Specify matrices A, B, and C 
[y,z,t] = step(A,B,C*A,C*B,1,t)
y1 = [1  0  0 ... 0]*y';
y2 = [0  1  0 ... 0]*y';
/H11080
/H11080
/H11080
ym = [0  0  0 ... 1]*y';
plot(t,y1,t,y2, ... ,t,ym)
EXAMPLE 5–9
Obtain the response of the system subjected to the given initial condition.
or
Obtaining the response of the system to the given initial condition resolves to solving the unit-step
response of the following system:
where
Hence a possible MATLAB program for obtaining the response may be given as shown in
MATLAB Program 5–15. The resulting response curves are shown in Figure 5–32.B=x(0),
  
u=1(t)x=Az+Buz#=Az+Bux#=Ax,
  
x(0)=x
0
B
x#
1
x#
2
R
=
B
0
-101
-5
RB
x
1
x
2
R
,
 
B
x
1
(0)
x
2
(0)
R
=
B
2
1
R
Openmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 209Response to Initial Condition
t Sec0 0.5 1 1.5 2 2.5 3State Variables x1 and x23
−2
−31
−102
x1
x2 Figure 5–32
Response of systemin Example 5–9 to
initial condition.
For an illustrative example of how to use Equations (5–58) and (5–60) to find the re-
sponse to the initial condition, see Problem A–5–16 .
Obtaining Response to Initial Condition by Use of Command Initial .If the
system is given in the state-space form, then the following command
initial(A,B,C,D,[initial condition],t)
will produce the response to the initial condition.
Suppose that we have the system defined by
where
x0=B2
1RA=B0
-101
-5R,  B=B0
0R,  C=[0 0],  D=0y=Cx+Dux#=Ax+Bu,  x(0)=x0
aa
210
Chapter 5 / Transient and Steady-State Response Analyses
MATLAB Program 5–16
t = 0:0.05:3;
A = [0  1;-10  -5];
B = [0;0];
C = [0  0];
D = [0];
[y,x] = initial(A,B,C,D,[2;1],t);
x1 = [1  0]*x';
x2 = [0  1]*x';
plot(t,x1,'o',t,x1,t,x2,'x',t,x2)
grid
title('Response to Initial Condition')
xlabel('t Sec')
ylabel('State Variables x1 and x2')
gtext('x1')
gtext('x2')
Response to Initial Condition
t Sec0 0.5 1 1.5 2 2.5 3
State Variables x
1
 and x
2
3
−3−2−1012
x
1
x
2
Figure 5–33
Response curves to
initial condition.
EXAMPLE 5–10
Consider the following system that is subjected to the initial condition. (No external forcing
function is present.)
Obtain the response y(t) to the given initial condition. y(0) =2,
  
y#(0)=1,
  
y$(0)=0.5 y%+8y$+17y#+10y =0
Then the command “initial” can be used as shown in MATLAB Program 5–16 to obtain
the response to the initial condition. The response curves x
1
(t)and x
2
(t)are shown in
Figure 5–33. They are the same as those shown in Figure 5–32.
Openmirrors.comOpenmirrors.com
aa
Section 5–5 / Transient-Response Analysis with MATLAB 211MATLAB Program 5–17
t = 0:0.05:10;
A = [0  1  0;0  0  1;-10  -17  -8];B = [0;0;0];C = [1  0  0];D = [0];
y = initial(A,B,C,D,[2;1;0.5],t);plot(t,y)gridtitle('Response to Initial Condition')xlabel('t (sec)')ylabel('Output y')Output y
t (sec)Response to Initial Condition
0.511.522.5
0
0123456789 1 0Figure 5–34
Response y(t) to
initial condition.By defining the state variables as
we obtain the following state-space representation for the system:
A possible MATLAB program to obtain the response y(t) is given in MATLAB Program 5–17.
The resulting response curve is shown in Figure 5–34.y=[1 0 0]Cx1
x2
x3SCx#
1
x#
2
x#
3S=C0
0
- 101
0
- 170
1
- 8SCx1
x2
x3S,  Cx1(0)
x2(0)
x3(0)S=C2
1
0.5Sx3=y$x2=y#x1=y
aa
212
Chapter 5 / Transient and Steady-State Response Analyses
5–6 ROUTH’S STABILITY CRITERION
The most important problem in linear control systems concerns stability. That is, under
what conditions will a system become unstable? If it is unstable, how should we stabi-
lize the system? In Section 5–4 it was stated that a control system is stable if and only if
all closed-loop poles lie in the left-half splane. Most linear closed-loop systems have
closed-loop transfer functions of the form
where the a’s and b’s are constants and m/H11349n. A simple criterion, known as Routh’s
stability criterion, enables us to determine the number of closed-loop poles that lie in
the right-half splane without having to factor the denominator polynomial. (The
polynomial may include parameters that MATLAB cannot handle.)
Routh’s Stability Criterion. Routh’s stability criterion tells us whether or not
there are unstable roots in a polynomial equation without actually solving for them.
This stability criterion applies to polynomials with only a finite number of terms.When
the criterion is applied to a control system, information about absolute stability can be
obtained directly from the coefficients of the characteristic equation.
The procedure in Routh’s stability criterion is as follows:
1.Write the polynomial in sin the following form:
(5–61)
where the coefficients are real quantities. We assume that a
n
Z0; that is, any zero
root has been removed.
2.If any of the coefficients are zero or negative in the presence of at least one posi-
tive coefficient, a root or roots exist that are imaginary or that have positive real
parts.Therefore, in such a case, the system is not stable. If we are interested in only
the absolute stability, there is no need to follow the procedure further. Note that
all the coefficients must be positive. This is a necessary condition, as may be seen
from the following argument: A polynomial in shaving real coefficients can al-
ways be factored into linear and quadratic factors, such as (s+a) and
As
2
+bs+cB, where a, b, and care real. The linear factors yield real roots and
the quadratic factors yield complex-conjugate roots of the polynomial.The factor
As
2
+bs+cByields roots having negative real parts only if bandcare both pos-
itive. For all roots to have negative real parts, the constants a, b, c , and so on, in all
factors must be positive.The product of any number of linear and quadratic factors
containing only positive coefficients always yields a polynomial with positive
coefficients. It is important to note that the condition that all the coefficients be
positive is not sufficient to assure stability. The necessary but not sufficient
condition for stability is that the coefficients of Equation (5–61) all be present and
all have a positive sign. (If all a’s are negative, they can be made positive by
multiplying both sides of the equation by –1.)a
0
 
s
n
+a
1
 
s
n-1
+p+a
n-1
 
s+a
n
=0C(s)
R(s)=b
0
 
s
m
+b
1
 
s
m-1
+p+b
m-1
 
s+b
m
a
0
 
s
n
+a
1
 
s
n-1
+p+a
n-1
 
s+a
n
=B(s)
A(s)
Openmirrors.com
aa
Section 5–6 / Routh’s Stability Criterion 2133.If all coefficients are positive, arrange the coefficients of the polynomial in rows
and columns according to the following pattern:
The process of forming rows continues until we run out of elements. (The total number
of rows is n+1 .) The coefficients b1,b2,b3, and so on, are evaluated as follows:
The evaluation of the b’s is continued until the remaining ones are all zero. The same
pattern of cross-multiplying the coefficients of the two previous rows is followed inevaluating the c’s,d’s,e’s, and so on. That is,
 /H11080 /H11080 /H11080 c
3=b1 a7-a1 b4
b1 c2=b1 a5-a1 b3
b1 c1=b1 a3-a1 b2
b1 /H11080 /H11080 /H11080 b3=a1 a6-a0 a7
a1 b2=a1 a4-a0 a5
a1 b1=a1 a2-a0 a3
a1sn
sn-1
sn-2
sn-3
sn-4
/H11080
/H11080/H11080
s
2
s1
s0a0
a1
b1
c1
d1
/H11080/H11080/H11080
e
1
f1
g1a2
a3
b2
c2
d2
/H11080/H11080/H11080
e
2a4
a5
b3
c3
d3a6
a7
b4
c4
d4ppppp
aa
214
Chapter 5 / Transient and Steady-State Response Analyses
and
This process is continued until the nth row has been completed. The complete array of
coefficients is triangular. Note that in developing the array an entire row may be divid-
ed or multiplied by a positive number in order to simplify the subsequent numerical
calculation without altering the stability conclusion.
Routh’s stability criterion states that the number of roots of Equation (5–61) with
positive real parts is equal to the number of changes in sign of the coefficients of the first
column of the array. It should be noted that the exact values of the terms in the first col-
umn need not be known; instead, only the signs are needed. The necessary and suffi-
cient condition that all roots of Equation (5–61) lie in the left-half splane is that all the
coefficients of Equation (5–61) be positive and all terms in the first column of the array
have positive signs.
EXAMPLE 5–11
Let us apply Routh’s stability criterion to the following third-order polynomial:
where all the coefficients are positive numbers. The array of coefficients becomes
The condition that all roots have negative real parts is given by
EXAMPLE 5–12
Consider the following polynomial:
Let us follow the procedure just presented and construct the array of coefficients. (The first 
two rows can be obtained directly from the given polynomial. The remaining terms are s
4
+2s
3
+3s
2
+4s+5=0a
1
 
a
2
7a
0
 
a
3
s
3
s
2
s
1
 
s
0
 
a
0
a
1
a
1
 
a
2
-a
0
 
a
3
a
1
a
3
a
2
a
3
a
0
 
s
3
+a
1
 
s
2
+a
2
 
s+a
3
=0
 /H11080 /H11080 /H11080 d
2
=c
1
 
b
3
-b
1
 
c
3
c
1
 d
1
=c
1
 
b
2
-b
1
 
c
2
c
1
Openmirrors.com
aa
Section 5–6 / Routh’s Stability Criterion 215obtained from these. If any coefficients are missing, they may be replaced by zeros in 
the array.)
In this example, the number of changes in sign of the coefficients in the first column is 2. This
means that there are two roots with positive real parts. Note that the result is unchanged when thecoefficients of any row are multiplied or divided by a positive number in order to simplify thecomputation.
Special Cases. If a first-column term in any row is zero, but the remaining terms
are not zero or there is no remaining term, then the zero term is replaced by a very smallpositive number /H9280and the rest of the array is evaluated. For example, consider the
following equation:
(5–62)
The array of coefficients is
If the sign of the coefficient above the zero ( /H9280) is the same as that below it, it indicates
that there are a pair of imaginary roots. Actually, Equation (5–62) has two roots ats= ;j.
If, however, the sign of the coefficient above the zero ( /H9280) is opposite that below it, it
indicates that there is one sign change. For example, for the equation
the array of coefficients is
One sign change:
One sign change:
There are two sign changes of the coefficients in the first column. So there are two roots
in the right-half splane. This agrees with the correct result indicated by the factored
form of the polynomial equation.s
1
s0- 3-2
/H9280
2s3
s21
0L/H9280- 3
2s3-3s+2=(s-1)2(s+2)=0s3
s2
s1
s01
2
0L/H9280
21
2s3+2s2+s+2=0The second row is divided
by 2.6 s4
s3
s2
s1
s0    1
2
1
1
- 3
53
4
2
55
0
0s4
s3
s2
s1
s0    1
2
1
- 6
53
4
55
0
 6
⁄⁄⁄⁄
aa
216
Chapter 5 / Transient and Steady-State Response Analyses
If all the coefficients in any derived row are zero, it indicates that there are roots of
equal magnitude lying radially opposite in the splane—that is, two real roots with equal
magnitudes and opposite signs and/or two conjugate imaginary roots. In such a case, the
evaluation of the rest of the array can be continued by forming an auxiliary polynomi-
al with the coefficients of the last row and by using the coefficients of the derivative of
this polynomial in the next row. Such roots with equal magnitudes and lying radially op-
posite in the splane can be found by solving the auxiliary polynomial, which is always
even. For a 2n-degree auxiliary polynomial, there are npairs of equal and opposite roots.
For example, consider the following equation:
The array of coefficients is
The terms in the s
3
row are all zero. (Note that such a case occurs only in an odd-
numbered row.) The auxiliary polynomial is then formed from the coefficients of the s
4
row. The auxiliary polynomial P(s) is
which indicates that there are two pairs of roots of equal magnitude and opposite sign
(that is, two real roots with the same magnitude but opposite signs or two complex-
conjugate roots on the imaginary axis).These pairs are obtained by solving the auxiliary
polynomial equation P(s)=0 . The derivative of P(s) with respect to sis
The terms in the s
3
row are replaced by the coefficients of the last equation—that is,
8 and 96. The array of coefficients then becomes
We see that there is one change in sign in the first column of the new array.Thus, the orig-
inal equation has one root with a positive real part. By solving for roots of the auxiliary
polynomial equation,
we obtain
or
 s=;j5  s=;1, s
2
=-25  s
2
=1,2s
4
+48s
2
-50=0s
5
s
4
s
3
s
2
s
1
 s
0
 1
2
8
24
112.7
- 5024
48
96
- 50
0- 25
- 50
dCoefficients of dP(s) /H20862dsdP(s)
ds=8s
3
+96sP(s) =2s
4
+48s
2
-50s
5
s
4
s
3
1
2
024
48
0- 25
- 50 dAuxiliary polynomial P(s)s
5
+2s
4
+24s
3
+48s
2
-25s -50=0
Openmirrors.com
aa
Section 5–6 / Routh’s Stability Criterion 217These two pairs of roots of P(s) are a part of the roots of the original equation. As a
matter of fact, the original equation can be written in factored form as follows:
Clearly, the original equation has one root with a positive real part.
Relative Stability Analysis. Routh’s stability criterion provides the answer to
the question of absolute stability.This, in many practical cases, is not sufficient.We usu-ally require information about the relative stability of the system. A useful approachfor examining relative stability is to shift the s-plane axis and apply Routh’s stability
criterion. That is, we substitute
into the characteristic equation of the system, write the polynomial in terms of and
apply Routh’s stability criterion to the new polynomial in The number of changes ofsign in the first column of the array developed for the polynomial in is equal to the num-ber of roots that are located to the right of the vertical line s=–s.Thus, this test reveals
the number of roots that lie to the right of the vertical line s=–s.
Application of Routh’s Stability Criterion to Control-System Analysis. Routh’s
stability criterion is of limited usefulness in linear control-system analysis, mainly becauseit does not suggest how to improve relative stability or how to stabilize an unstablesystem. It is possible, however, to determine the effects of changing one or twoparameters of a system by examining the values that cause instability. In the following,we shall consider the problem of determining the stability range of a parameter value.
Consider the system shown in Figure 5–35. Let us determine the range of Kfor
stability. The closed-loop transfer function is
The characteristic equation is
The array of coefficients becomes
s
4
s3
s2
s1
 s0 1
3
7
3
2-9
7K
K3
2
KK
0s4+3s3+3s2+2s+K=0C(s)
R(s)=K
sAs2+s+1B(s+2)+Ksˆsˆ.sˆ;s=sˆ-s  (s=constant )(s+1)(s -1)(s +j5)(s -j5)(s +2)=0
+–R(s) C(s)K
s(s2+s+ 1) (s+ 2)
Figure 5–35
Control system.
aa
218
Chapter 5 / Transient and Steady-State Response Analyses
For stability, Kmust be positive, and all coefficients in the first column must be positive.
Therefore,
When the system becomes oscillatory and, mathematically, the oscillation is
sustained at constant amplitude.
Note that the ranges of design parameters that lead to stability may be determined
by use of Routh’s stability criterion.
5–7 EFFECTS OF INTEGRAL AND DERIVATIVE CONTROL
ACTIONS ON SYSTEM PERFORMANCE
In this section, we shall investigate the effects of integral and derivative control actions
on the system performance. Here we shall consider only simple systems, so that the
effects of integral and derivative control actions on system performance can be clearly
seen.
Integral Control Action. In the proportional control of a plant whose transfer
function does not possess an integrator 1 /H20862s, there is a steady-state error, or offset, in the
response to a step input. Such an offset can be eliminated if the integral control action
is included in the controller.
In the integral control of a plant, the control signal—the output signal from the
controller—at any instant is the area under the actuating-error-signal curve up to that
instant.The control signal u(t) can have a nonzero value when the actuating error signal
e(t)is zero, as shown in Figure 5–36(a).This is impossible in the case of the proportional
controller, since a nonzero control signal requires a nonzero actuating error signal.
(A nonzero actuating error signal at steady state means that there is an offset.) Figure
5–36(b) shows the curve e(t)versus tand the corresponding curve u(t) versus twhen the
controller is of the proportional type.
Note that integral control action, while removing offset or steady-state error, may lead
to oscillatory response of slowly decreasing amplitude or even increasing amplitude,
both of which are usually undesirable.K=
14
9
,14
97K70
e(t)
u(t)0
0t
te(t)
u(t)0
0t
t
(a) (b)
Figure 5–36
(a) Plots of e(t) and
u(t) curves showing
nonzero control
signal when the
actuating error signal
is zero (integral
control); (b) plots of
e(t) andu(t) curves
showing zero control
signal when the
actuating error signal
is zero (proportional
control).
Openmirrors.com
aa
Section 5–7 / Effects of Integral and Derivative Control Actions on System Performance 219Proportional Control of Systems. We shall show that the proportional control
of a system without an integrator will result in a steady-state error with a step input.Weshall then show that such an error can be eliminated if integral control action is includedin the controller.
Consider the system shown in Figure 5–37. Let us obtain the steady-state error in the
unit-step response of the system. Define
Sincethe error E(s) is given by
For the unit-step input R(s)=1/s , we have
The steady-state error isSuch a system without an integrator in the feedforward path always has a steady-state
error in the step response. Such a steady-state error is called an offset. Figure 5–38 showsthe unit-step response and the offset.e
ss=lim
tSqe(t) =lim
sS0sE(s) =lim
sS0 Ts+1
Ts+1+K=1
K+1E(s) =Ts+1
Ts+1+K1
sE(s) =1
1+G(s)R(s) =1
1+K
Ts+1R(s)E(s)
R(s)=R(s) -C(s)
R(s)=1-C(s)
R(s)=1
1+G(s)G(s) =K
Ts+11
Ts+ 1+–R(s) E(s) C(s)
K
Proportional
controllerPlant Figure 5–37
Proportional controlsystem.
c(t)
1
0 tOffset
Figure 5–38
Unit-step responseand offset.
aa
220
Chapter 5 / Transient and Steady-State Response Analyses
Integral Control of Systems. Consider the system shown in Figure 5–39. The
controller is an integral controller. The closed-loop transfer function of the system is
Hence
Since the system is stable, the steady-state error for the unit-step response can be
obtained by applying the final-value theorem, as follows:
Integral control of the system thus eliminates the steady-state error in the response to
the step input. This is an important improvement over the proportional control alone,
which gives offset.
Response to Torque Disturbances (Proportional Control). Let us investigate
the effect of a torque disturbance occurring at the load element. Consider the system
shown in Figure 5–40.The proportional controller delivers torque Tto position the load
element, which consists of moment of inertia and viscous friction.Torque disturbance is
denoted by D.
Assuming that the reference input is zero or R(s)=0 , the transfer function between
C(s) andD(s) is given by
C(s)
D(s)=1
Js
2
+bs+K
p
 =0 =lim
sS0
 s
2
(Ts +1)
Ts
2
+s+K 1
s e
ss
=lim
sS0
sE(s)E(s)
R(s)=R(s) -C(s)
R(s)=s(Ts +1)
s(Ts +1)+KC(s)
R(s)=K
s(Ts +1)+K
1
Ts+ 1
+–
R(s) C(s) E(s)
K
s
Figure 5–39
Integral control
system.
+–
++
RD
C ET
K
p
1
s(Js+b)
Figure 5–40
Control system with
a torque disturbance.
Openmirrors.com
aa
Section 5–7 / Effects of Integral and Derivative Control Actions on System Performance 221Hence
The steady-state error due to a step disturbance torque of magnitude is given by
At steady state, the proportional controller provides the torque which is equal in
magnitude but opposite in sign to the disturbance torque The steady-state output dueto the step disturbance torque is
The steady-state error can be reduced by increasing the value of the gain K
p. Increasing
this value, however, will cause the system response to be more oscillatory.
Response to Torque Disturbances (Proportional-Plus-Integral Control). To
eliminate offset due to torque disturbance, the proportional controller may be replacedby a proportional-plus-integral controller.
If integral control action is added to the controller, then, as long as there is an error
signal, a torque is developed by the controller to reduce this error, provided the controlsystem is a stable one.
Figure 5–41 shows the proportional-plus-integral control of the load element,
consisting of moment of inertia and viscous friction.
The closed-loop transfer function between C(s) andD(s) is
In the absence of the reference input, or r(t)=0 , the error signal is obtained from
E(s) =-s
Js3+bs2+Kp s+Kp
TiD(s)C(s)
D(s)=s
Js3+bs2+Kp s+Kp
Ticss=-ess=Td
KpTd .-Td , =- Td
Kp =lim
sS0 -s
Js2+bs+Kp Td
s ess=lim
sS0sE(s)TdE(s)
D(s)=-C(s)
D(s)=-1
Js2+bs+Kp
++ C ED
R= 0 TKp(1+1
Tis)1
s(Js+b)+–Figure 5–41
Proportional-plus-integral control of aload element
consisting of moment
of inertia and viscousfriction.
aa
222
Chapter 5 / Transient and Steady-State Response Analyses
If this control system is stable—that is, if the roots of the characteristic equation
have negative real parts—then the steady-state error in the response to a unit-step
disturbance torque can be obtained by applying the final-value theorem as follows:
Thus steady-state error to the step disturbance torque can be eliminated if the controller
is of the proportional-plus-integral type.
Note that the integral control action added to the proportional controller has
converted the originally second-order system to a third-order one. Hence the control
system may become unstable for a large value of K
p
, since the roots of the characteristic
equation may have positive real parts. (The second-order system is always stable if the
coefficients in the system differential equation are all positive.)
It is important to point out that if the controller were an integral controller, as in
Figure 5–42, then the system always becomes unstable, because the characteristic
equation
will have roots with positive real parts. Such an unstable system cannot be used in
practice.
Note that in the system of Figure 5–41 the proportional control action tends to
stabilize the system, while the integral control action tends to eliminate or reduce steady-
state error in response to various inputs.
Derivative Control Action. Derivative control action, when added to a
proportional controller, provides a means of obtaining a controller with high
sensitivity. An advantage of using derivative control action is that it responds to the
rate of change of the actuating error and can produce a significant correction before
the magnitude of the actuating error becomes too large. Derivative control thus
anticipates the actuating error, initiates an early corrective action, and tends to
increase the stability of the system.Js
3
+bs
2
+K=0 =0 =lim
sS0
 -s
2
Js
3
+bs
2
+K
p
 
s+K
p
T
i
 1
s e
ss
=lim
sS0
sE(s)Js
3
+bs
2
+K
p
 
s+K
p
T
i
=0
+–
++
C ED
R= 0 T K
s
1
s(Js+b)
Figure 5–42
Integral control of a
load element
consisting of moment
of inertia and viscous
friction.
Openmirrors.com
aa
Section 5–7 / Effects of Integral and Derivative Control Actions on System Performance 223+–R(s) C(s)
(a)
(b)Kp1
Js2
c(t)
1
0 tFigure 5–43
(a) Proportionalcontrol of a system
with inertia load;
(b) response to aunit-step input.
Although derivative control does not affect the steady-state error directly, it adds
damping to the system and thus permits the use of a larger value of the gain K, which
will result in an improvement in the steady-state accuracy.
Because derivative control operates on the rate of change of the actuating error and
not the actuating error itself, this mode is never used alone. It is always used in combi-nation with proportional or proportional-plus-integral control action.
Proportional Control of Systems with Inertia Load. Before we discuss further
the effect of derivative control action on system performance, we shall consider theproportional control of an inertia load.
Consider the system shown in Figure 5–43(a). The closed-loop transfer function is
obtained as
Since the roots of the characteristic equation
are imaginary, the response to a unit-step input continues to oscillate indefinitely, as
shown in Figure 5–43(b).
Control systems exhibiting such response characteristics are not desirable. We shall
see that the addition of derivative control will stabilize the system.
Proportional-Plus-Derivative Control of a System with Inertia Load. Let us
modify the proportional controller to a proportional-plus-derivative controller whosetransfer function is The torque developed by the controller is proportionalto Derivative control is essentially anticipatory, measures the instantaneouserror velocity, and predicts the large overshoot ahead of time and produces anappropriate counteraction before too large an overshoot occurs.K
pAe+Td e#B.KpA1+Td sB.Js2+Kp=0C(s)
R(s)=Kp
Js2+Kp
aa
224
Chapter 5 / Transient and Steady-State Response Analyses
Consider the system shown in Figure 5–44(a). The closed-loop transfer function is
given by
The characteristic equation
now has two roots with negative real parts for positive values of J,K
p
, and Thus
derivative control introduces a damping effect. A typical response curve c(t) to a unit-
step input is shown in Figure 5–44(b). Clearly, the response curve shows a marked
improvement over the original response curve shown in Figure 5–46(b).
Proportional-Plus-Derivative Control of Second-Order Systems. A compromise
between acceptable transient-response behavior and acceptable steady-state behavior may
be achieved by use of proportional-plus-derivative control action.
Consider the system shown in Figure 5–45. The closed-loop transfer function is
The steady-state error for a unit-ramp input is
The characteristic equation is
Js
2
+AB+K
d
Bs+K
p
=0e
ss
=B
K
p
C(s)
R(s)=K
p
+K
d
 
s
Js
2
+AB+K
d
Bs+K
p
T
d
 
.Js
2
+K
p
 
T
d
 
s+K
p
=0C(s)
R(s)=K
p
A1+T
d
 
sB
Js
2
+K
p
 
T
d
 
s+K
p
+–
R(s) C(s)
K
p
+K
d
s1
s(Js+B)
Figure 5–44
(a) Proportional-plus-derivative control of a system with inertia load; (b) response to a unit-step input.
R(s) C(s)
(a) (b)K
p
(1+T
d
s)c(t)
1
0 t1
Js
2
+–
Figure 5–45
Control system.
Openmirrors.com
aa
Section 5–8 / Steady-State Errors in Unity-Feedback Control Systems 225The effective damping coefficient of this system is thus B+ Kdrather than B. Since the
damping ratio zof this system is
it is possible to make both the steady-state error essfor a ramp input and the maximum
overshoot for a step input small by making Bsmall, Kplarge, and Kdlarge enough so that
zis between 0.4 and 0.7.
5–8 STEADY-STATE ERRORS IN UNITY-FEEDBACK
CONTROL SYSTEMS
Errors in a control system can be attributed to many factors. Changes in the reference
input will cause unavoidable errors during transient periods and may also cause steady-state errors. Imperfections in the system components, such as static friction, backlash, andamplifier drift, as well as aging or deterioration, will cause errors at steady state. In thissection, however, we shall not discuss errors due to imperfections in the system com-ponents. Rather, we shall investigate a type of steady-state error that is caused by theincapability of a system to follow particular types of inputs.
Any physical control system inherently suffers steady-state error in response to
certain types of inputs.A system may have no steady-state error to a step input, but thesame system may exhibit nonzero steady-state error to a ramp input. (The only way wemay be able to eliminate this error is to modify the system structure.) Whether a givensystem will exhibit steady-state error for a given type of input depends on the type ofopen-loop transfer function of the system, to be discussed in what follows.
Classification of Control Systems. Control systems may be classified according
to their ability to follow step inputs, ramp inputs, parabolic inputs, and so on. This is areasonable classification scheme, because actual inputs may frequently be consideredcombinations of such inputs. The magnitudes of the steady-state errors due to theseindividual inputs are indicative of the goodness of the system.
Consider the unity-feedback control system with the following open-loop transfer
function G(s) :
It involves the term s
Nin the denominator, representing a pole of multiplicity Nat the
origin.The present classification scheme is based on the number of integrations indicatedby the open-loop transfer function.A system is called type 0, type 1, type 2, p, if N=0,
N=1, N=2, p, respectively. Note that this classification is different from that of the
order of a system. As the type number is increased, accuracy is improved; however,increasing the type number aggravates the stability problem. A compromise betweensteady-state accuracy and relative stability is always necessary.
We shall see later that, if G(s) is written so that each term in the numerator and
denominator, except the term s
N, approaches unity as sapproaches zero, then the open-
loop gain Kis directly related to the steady-state error.G(s) =KATa s+1BATb s+1BpATm s+1B
sNAT1 s+1BAT2 s+1BpATp s+1Bz=B+Kd
22Kp J
aa
226
Chapter 5 / Transient and Steady-State Response Analyses
Steady-State Errors. Consider the system shown in Figure 5–46.The closed-loop
transfer function is
The transfer function between the error signal e(t) and the input signal r(t) is
where the error e(t) is the difference between the input signal and the output signal.
The final-value theorem provides a convenient way to find the steady-state
performance of a stable system. Since E(s) is
the steady-state error is
The static error constants defined in the following are figures of merit of control systems.
The higher the constants, the smaller the steady-state error. In a given system, the out-
put may be the position, velocity, pressure, temperature, or the like. The physical form
of the output, however, is immaterial to the present analysis.Therefore, in what follows,
we shall call the output “position,” the rate of change of the output “velocity,” and so on.
This means that in a temperature control system “position” represents the output tem-
perature,“velocity” represents the rate of change of the output temperature, and so on.
Static Position Error Constant K
p
.The steady-state error of the system for a
unit-step input is
The static position error constant K
p
is defined by
Thus, the steady-state error in terms of the static position error constant K
p
is given by
e
ss
=1
1+K
p
K
p
=lim
sS0
G(s) =G(0) =1
1+G(0) e
ss
=lim
sS0
s
1+G(s)1
se
ss
=lim
tSq
e(t) =lim
sS0
sE(s) =lim
sS0
 sR(s)
1+G(s)E(s) =1
1+G(s)R(s)E(s)
R(s)=1-C(s)
R(s)=1
1+G(s)C(s)
R(s)=G(s)
1+G(s)
+–
R(s) C(s) E(s)
G(s)
Figure 5–46
Control system.
Openmirrors.com
aa
Section 5–8 / Steady-State Errors in Unity-Feedback Control Systems 227For a type 0 system,
For a type 1 or higher system,
forN/H113501
Hence, for a type 0 system, the static position error constant Kpis finite, while for a type
1 or higher system, Kpis infinite.
For a unit-step input, the steady-state error essmay be summarized as follows:
for type 0 systems
for type 1 or higher systems
From the foregoing analysis, it is seen that the response of a feedback control system
to a step input involves a steady-state error if there is no integration in the feedforwardpath. (If small errors for step inputs can be tolerated, then a type 0 system may bepermissible, provided that the gain Kis sufficiently large. If the gain Kis too large, how-
ever, it is difficult to obtain reasonable relative stability.) If zero steady-state error fora step input is desired, the type of the system must be one or higher.
Static Velocity Error Constant K
v.The steady-state error of the system with a
unit-ramp input is given by
The static velocity error constant Kvis defined by
Thus, the steady-state error in terms of the static velocity error constant Kvis given by
The term velocity error is used here to express the steady-state error for a ramp
input.The dimension of the velocity error is the same as the system error.That is, velocityerror is not an error in velocity, but it is an error in position due to a ramp input.For a type 0 system,
K
v=lim
sS0sKATa s+1BATb s+1Bp
AT1 s+1BAT2 s+1Bp=0ess=1
KvKv=lim
sS0sG(s) =lim
sS0 1
sG(s) ess=lim
sS0s
1+G(s)1
s2ess=0,ess=1
1+K,Kp=lim
sS0KATa s+1BATb s+1Bp
sNAT1 s+1BAT2 s+1Bp=q ,Kp=lim
sS0KATa s+1BATb s+1Bp
AT1 s+1BAT2 s+1Bp=K
aa
228
Chapter 5 / Transient and Steady-State Response Analyses
For a type 1 system,
For a type 2 or higher system,
forN/H113502
The steady-state error e
ss
for the unit-ramp input can be summarized as follows:
for type 0 systems
for type 1 systems
for type 2 or higher systems
The foregoing analysis indicates that a type 0 system is incapable of following a ramp
input in the steady state.The type 1 system with unity feedback can follow the ramp input
with a finite error. In steady-state operation, the output velocity is exactly the same as the
input velocity, but there is a positional error. This error is proportional to the velocity of
the input and is inversely proportional to the gain K. Figure 5–47 shows an example of the
response of a type 1 system with unity feedback to a ramp input. The type 2 or higher
system can follow a ramp input with zero error at steady state.
Static Acceleration Error Constant K
a
.The steady-state error of the system
with a unit-parabolic input (acceleration input), which is defined by
fort/H113500
fort<0  =0, r(t) =t
2
2,e
ss
=1
K
v
=0,e
ss
=1
K
v
=1
K,e
ss
=1
K
v
=q ,K
v
=lim
sS0
sKAT
a
 
s+1BAT
b
 
s+1Bp
s
N
AT
1
 
s+1BAT
2
 
s+1Bp=q ,K
v
=lim
sS0
sKAT
a
 
s+1BAT
b
 
s+1Bp
sAT
1
 
s+1BAT
2
 
s+1Bp=K
r(t)
c(t)
0 tr(t)
c(t)
Figure 5–47
Response of a type 1
unity-feedback
system to a ramp
input.
Openmirrors.com
aa
Section 5–8 / Steady-State Errors in Unity-Feedback Control Systems 229is given by
The static acceleration error constant Kais defined by the equation
The steady-state error is then
Note that the acceleration error, the steady-state error due to a parabolic input, is an
error in position.
The values of Kaare obtained as follows:
For a type 0 system,
For a type 1 system,For a type 2 system,For a type 3 or higher system,
forN/H113503
Thus, the steady-state error for the unit parabolic input is
for type 0 and type 1 systems
for type 2 systems
for type 3 or higher systems e
ss=0,ess=1
K,ess=q ,Ka=lim
sS0s2KATa s+1BATb s+1Bp
sNAT1 s+1BAT2 s+1Bp=q ,Ka=lim
sS0s2KATa s+1BATb s+1Bp
s2AT1 s+1BAT2 s+1Bp=KKa=lim
sS0s2KATa s+1BATb s+1Bp
sAT1 s+1BAT2 s+1Bp=0Ka=lim
sS0s2KATa s+1BATb s+1Bp
AT1 s+1BAT2 s+1Bp=0ess=1
KaKa=lim
sS0s2G(s) =1
lim
sS0s2G(s) ess=lim
sS0s
1+G(s)1
s3
aa
230
Chapter 5 / Transient and Steady-State Response Analyses
Note that both type 0 and type 1 systems are incapable of following a parabolic input
in the steady state. The type 2 system with unity feedback can follow a parabolic input
with a finite error signal. Figure 5–48 shows an example of the response of a type 2 sys-
tem with unity feedback to a parabolic input. The type 3 or higher system with unity
feedback follows a parabolic input with zero error at steady state.
Summary. Table 5–1 summarizes the steady-state errors for type 0, type 1, and
type 2 systems when they are subjected to various inputs. The finite values for steady-
state errors appear on the diagonal line.Above the diagonal, the steady-state errors are
infinity; below the diagonal, they are zero.
r(t)
c(t)
0 tr(t)
c(t)
Figure 5–48
Response of a type 2
unity-feedback
system to a parabolic
input.
Step Input Ramp Input Acceleration Input
r(t)=1 r(t)=t
Type 0 system qq
Type 1 system 0 q
Type 2 system 0 01
K1
K1
1+Kr(t) =
1
2
t
2
Table 5–1
Steady-State Error in Terms of Gain K
Remember that the terms position error, velocity error , and acceleration error mean
steady-state deviations in the output position. A finite velocity error implies that after
transients have died out, the input and output move at the same velocity but have a
finite position difference.
The error constants K
p
,K
v
, and K
a
describe the ability of a unity-feedback system
to reduce or eliminate steady-state error.Therefore, they are indicative of the steady-state
performance. It is generally desirable to increase the error constants, while maintaining
the transient response within an acceptable range. It is noted that to improve the steady-
state performance we can increase the type of the system by adding an integrator or
integrators to the feedforward path. This, however, introduces an additional stability
problem.The design of a satisfactory system with more than two integrators in series in
the feedforward path is generally not easy.
Openmirrors.com
aa
Example Problems and Solutions 231EXAMPLE PROBLEMS AND SOLUTIONS
A–5–1. In the system of Figure 5–49, x(t) is the input displacement and u(t)is the output angular
displacement. Assume that the masses involved are negligibly small and that all motions are
restricted to be small; therefore, the system can be considered linear. The initial conditions for x
anduare zeros, or x(0–)=0 andu(0–)=0 . Show that this system is a differentiating element.
Then obtain the response u(t)when x(t) is a unit-step input.
Solution. The equation for the system is
or
The Laplace transform of this last equation, using zero initial conditions, gives
And so
Thus the system is a differentiating system.
For the unit-step input X(s)=1 /H20862s, the output becomes
The inverse Laplace transform of gives
u(t)=1
L e-(k/H20862b)tQ(s)Q(s)=1
L1
s+(k/H20862b)Q(s)Q(s)
X(s)=1
Ls
s+(k/H20862b)aLs+k
bLbQ(s)=sX(s)Lu#+k
bLu=x#bAx#-Lu#
B=kLu
No frictionx
b
kuL
Figure 5–49
Mechanical system.
aa
232
Chapter 5 / Transient and Steady-State Response Analyses
Note that if the value of k/H20862bis large, the response u(t)approaches a pulse signal, as shown in
Figure 5–50.
A–5–2. Gear trains are often used in servo systems to reduce speed, to magnify torque, or to obtain the
most efficient power transfer by matching the driving member to the given load.
Consider the gear-train system shown in Figure 5–51. In this system, a load is driven by a
motor through the gear train. Assuming that the stiffness of the shafts of the gear train is infinite
(there is neither backlash nor elastic deformation) and that the number of teeth on each gear is
proportional to the radius of the gear, obtain the equivalent moment of inertia and equivalent
viscous-friction coefficient referred to the motor shaft and referred to the load shaft.
In Figure 5–51 the numbers of teeth on gears 1, 2, 3, and 4 are N
1
,N
2
,N
3
, and N
4
, respectively.
The angular displacements of shafts, 1, 2, and 3 are u
1
,u
2
, and u
3
, respectively.Thus,
and The moment of inertia and viscous-friction coefficient of each gear-train
component are denoted by J
1
,b
1
;J
2
,b
2
; and J
3
,b
3
; respectively. ( J
3
andb
3
include the moment of
inertia and friction of the load.)u
3
 
/H20862u
2
=N
3
 
/H20862N
4
 
.u
2
 
/H20862u
1
=N
1
 
/H20862N
2
x(t)
t
t1
0
0u(t)
1
L
Figure 5–50
Unit-step input and
the response of the
mechanical system
shown in Figure
5–49.
Shaft 1
Gear 2Gear 1
Gear 3
Gear 4Shaft 2
Shaft 3J
1,
b
1
N
1
Input torque
from motor
Tm(t)u
1
N
2
N
3
N
4
u
2
u
3
Load
torque
T
L
(t)J
2,
b
2
J
3,
b
3
Figure 5–51
Gear-train system.
Openmirrors.com
aa
Example Problems and Solutions 233Solution. For this gear-train system, we can obtain the following equations: For shaft 1,
(5–63)
where is the torque developed by the motor and is the load torque on gear 1 due to the rest
of the gear train. For shaft 2,
(5–64)
where is the torque transmitted to gear 2 and is the load torque on gear 3 due to the rest of
the gear train. Since the work done by gear 1 is equal to that of gear 2,
or
If the gear ratio reduces the speed as well as magnifies the torque. For shaft 3,
(5–65)
where is the load torque and is the torque transmitted to gear 4. and are related by
andu3andu1are related by
Eliminating and from Equations (5–63), (5–64), and (5–65) yields
Eliminating u2andu3from this last equation and writing the resulting equation in terms of u1and
its time derivatives, we obtain
(5–66)
Thus, the equivalent moment of inertia and viscous-friction coefficient of the gear train referred
to shaft 1 are given, respectively, by
Similarly, the equivalent moment of inertia and viscous-friction coefficient of the gear train referred
to the load shaft (shaft 3) are given, respectively, by
b3eq=b3+aN4
N3b2
b2+aN2
N1b2
aN4
N3b2
b1J3eq=J3+aN4
N3b2
J2+aN2
N1b2
aN4
N3b2
J1b1eq=b1+aN1
N2b2
b2+aN1
N2b2
aN3
N4b2
b3J1eq=J1+aN1
N2b2
J2+aN1
N2b2
aN3
N4b2
J3+cb1+aN1
N2b2
b2+aN1
N2b2
aN3
N4b2
b3du#
1+aN1
N2baN3
N4bTL=TmcJ1+aN1
N2b2
J2+aN1
N2b2
aN3
N4b2
J3du$
1J1 u$
1+b1 u#
1+N1
N2 AJ2 u$
2+b2 u#
2B+N1 N3
N2 N4 AJ3 u$
3+b3 u#
3+TLB=TmT4 T1 ,T2 ,T3 ,u3=u2N3
N4=u1N1
N2N3
N4T4=T3N4
N3T4 T3 T4 TLJ3 u$
3+b3 u#
3+TL=T4N1 /H20862N261,T2=T1N2
N1T1 u1=T2 u2T3 T2J2 u$
2+b2 u#
2+T3=T2T1 TmJ1 u$
1+b1 u#
1+T1=Tm
aa
234
Chapter 5 / Transient and Steady-State Response Analyses
The relationship between J
1eq
andJ
3eq
is thus
and that between b
1eq
andb
3eq
is
The effect of J
2
andJ
3
on an equivalent moment of inertia is determined by the gear ratios 
and For speed-reducing gear trains, the ratios, and are usually less than unity.
If and then the effect of J
2
andJ
3
on the equivalent moment of inertia J
1eq
is negligible. Similar comments apply to the equivalent viscous-friction coefficient b
1eq
of the gear
train. In terms of the equivalent moment of inertia J
1eq
and equivalent viscous-friction coefficient
b
1eq
, Equation (5–66) can be simplified to give
where
A–5–3. When the system shown in Figure 5–52(a) is subjected to a unit-step input, the system output
responds as shown in Figure 5–52(b). Determine the values of KandTfrom the response curve.
Solution. The maximum overshoot of 25.4 %corresponds to z=0.4 . From the response curve
we have
Consequently,
t
p
=p
v
d
=p
v
n
21-z
2
=p
v
n
21-0.4
2
=3t
p
=3n=N
1
N
2
N
3
N
4
J
1eq
 
u$
1
+b
1eq
 
u#
1
+nT
L
=T
m
N
3
 
/H20862N
4
/H112701, N
1
 
/H20862N
2
/H112701N
3
 
/H20862N
4
 
N
1
 
/H20862N
2
N
3
 
/H20862N
4
 
.N
1
 
/H20862N
2
b
1eq
=
a
N
1
N
2
b
2
a
N
3
N
4
b
2
b
3eq
J
1eq
=
a
N
1
N
2
b
2
a
N
3
N
4
b
2
J
3eq
+–
R(s) C(s)
(a)
(b)c(t)
1
03 t0.254K
s(Ts+ 1)
Figure 5–52
(a) Closed-loop
system; (b) unit-step
response curve.
Openmirrors.com
aa
Example Problems and Solutions 235It follows that
From the block diagram we have
from which
Therefore, the values of TandKare determined as
A–5–4. Determine the values of Kandkof the closed-loop system shown in Figure 5–53 so that the maximum
overshoot in unit-step response is 25 %and the peak time is 2 sec. Assume that J=1 kg-m2.
Solution. The closed-loop transfer function is
By substituting J=1 kg-m2into this last equation, we have
Note that in this problem
The maximum overshoot Mpis
which is specified as 25 %. Hence
from which
zp
21-z2=1.386e-zp/H2086221-z2=0.25Mp=e-zp/H2086221-z2vn=1K,  2zvn=KkC(s)
R(s)=K
s2+Kks +KC(s)
R(s)=K
Js2+Kks +K K=v2
n T=1.142*1.09 =1.42 T=1
2zvn=1
2*0.4*1.14=1.09vn=AK
T,  2zvn=1
TC(s)
R(s)=K
Ts2+s+Kvn=1.14
+–+–R(s) C(s)
k1
sK
Js
Figure 5–53
Closed-loop system.
aa
236
Chapter 5 / Transient and Steady-State Response Analyses
or
The peak time t
p
is specified as 2 sec. And so
or
Then the undamped natural frequency v
n
is
Therefore, we obtain
A–5–5. Figure 5–54(a) shows a mechanical vibratory system.When 2 lb of force (step input) is applied to
the system, the mass oscillates, as shown in Figure 5–54(b). Determine m, b , and kof the system
from this response curve. The displacement xis measured from the equilibrium position.
Solution. The transfer function of this system is
Since
we obtain
It follows that the steady-state value of xis
x(q)=lim
sS0
sX(s) =2
k=0.1 ftX(s) =2
sAms
2
+bs+kBP(s) =2
sX(s)
P(s)=1
ms
2
+bs+k k=2zv
n
K=2*0.404 *1.72
2.95=0.471 sec K=v
2
n
=1.72
2
=2.95 N-mv
n
=v
d
21-z
2
=1.57
21-0.404
2
=1.72v
d
=1.57t
p
=p
v
d
=2z=0.404
k
bx
(a) (b)P(2-lb force)x(t)
ft0.1
012345 t0.0095 ft
m
Figure 5–54
(a) Mechanical
vibratory system;
(b) step-response
curve.
Openmirrors.com
aa
Example Problems and Solutions 237Hence
Note that Mp=9.5%corresponds to z=0.6 . The peak time tpis given by
The experimental curve shows that tp=2 sec. Therefore,
Sincev2
n=k /H20862m=20 /H20862m, we obtain
(Note that 1 slug =1 lbf-sec2/H20862ft.) Then bis determined from
or
A–5–6. Consider the unit-step response of the second-order system
The amplitude of the exponentially damped sinusoid changes as a geometric series. At time
t=tp=p/H20862vd, the amplitude is equal to After one oscillation, or at
t=tp+2p/H20862/H9275d=3p/H20862vd, the amplitude is equal to after another cycle of oscillation, the
amplitude is The logarithm of the ratio of successive amplitudes is called the logarithmic
decrement . Determine the logarithmic decrement for this second-order system. Describe a method
for experimental determination of the damping ratio from the rate of decay of the oscillation.
Solution. Let us define the amplitude of the output oscillation at t=tito be xi, where
ti=tp+(i-1)T(T= period of oscillation ). The amplitude ratio per one period of damped
oscillation is
Thus, the logarithmic decrement dis
It is a function only of the damping ratio z. Thus, the damping ratio zcan be determined by use
of the logarithmic. decrement.
In the experimental determination of the damping ratio zfrom the rate of decay of the oscil-
lation, we measure the amplitude x1att=tpand amplitude xnatt=tp+(n-1)T . Note that
it is necessary to choose nlarge enough so that the ratio x1/xnis not near unity. Then
x1
xn=e(n-1)2zp/H2086221-z2d=lnx1
x2=2zp
21-z2x1
x2=e-As/H20862vdBp
e-As/H20862vdB3p=e2As/H20862vdBp=e2zp/H2086221-z2e-As/H20862vdB5p.e-As/H20862vdB3p;e-As/H20862vdBp.C(s)
R(s)=v2
n
s2+2zvn s+v2
nb=2zvn m=2*0.6*1.96 *5.2=12.2 lbf/H20862ft/H20862sec2zvn=b
mm=20
v2
n=20
1.962=5.2 slugs =167 lbvn=3.14
2*0.8=1.96 rad /H20862sectp=p
vd=p
vn21-z2=p
0.8vnk=20 lbf/H20862ft
aa
238
Chapter 5 / Transient and Steady-State Response Analyses
or
Hence
A–5–7. In the system shown in Figure 5–55, the numerical values of m, b , and kare given as m=1 kg,
b=2 N-sec /H20862m, and k=100 N/H20862m. The mass is displaced 0.05 m and released without initial ve-
locity. Find the frequency observed in the vibration. In addition, find the amplitude four cycles later.
The displacement xis measured from the equilibrium position.
Solution. The equation of motion for the system is
Substituting the numerical values for m, b, and kinto this equation gives
where the initial conditions are x(0) =0.05 and From this last equation the undamped
natural frequency v
n
and the damping ratio zare found to be
The frequency actually observed in the vibration is the damped natural frequency v
d
.
In the present analysis, is given as zero. Thus, solution x(t) can be written as
It follows that at t=nT , where T=2p/H20862v
d
,
Consequently, the amplitude four cycles later becomes
A–5–8. Obtain both analytically and computationally the unit-step response of tbe following higher-order
system:
[Obtain the partial-fraction expansion of C(s) with MATLAB when R(s) is a unit-step function.]C(s)
R(s)=3s
3
+25s
2
+72s +80
s
4
+8s
3
+40s
2
+96s +80 =0.05e
-2.526
=0.05 *0.07998 =0.004 m x(4T) =x(0)e
-zv
n
 
4T
=x(0)e
-(0.1)(10)(4)(0.6315)
x(nT) =x(0)e
-zv
n
 
nT
x(t) =x(0)e
-zv
n
 
t
a
cosv
d
 
t+z
21-z
2
sinv
d
 
t
b
x#(0)v
d
=v
n
21-z
2
=1011-0.01
=9.95 rad /H20862secv
n
=10,
  
z=0.1x#(0)=0.x$+2x#+100x =0mx$+bx#+kx=0z=1
n-1
a
lnx
1
x
n
b
B4p
2
+
c
1
n-1
a
lnx
1
x
n
b
d
2
lnx
1
x
n
=(n-1) 2zp
21-z
2
k
mb
x
Figure 5–55
Spring-mass-damper
system.
Openmirrors.com
aa
Example Problems and Solutions 239Solution. MATLAB Program 5–18 yields the unit-step response curve shown in Figure 5–56. It
also yields the partial-fraction expansion of C(s) as follows:
 -0.4375
s+2-0.375
(s+2)2+1
s =-0.5626(s +2)
(s+2)2+42+(0.3438) *4
(s+2)2+42 +-0.4375
s+2+-0.375
(s+2)2+1
s =-0.2813 -j0.1719
s+2-j4+-0.2813 +j0.1719
s+2+j4 C(s) =3s3+25s2+72s +80
s4+8s3+40s2+96s +80 1
s
MATLAB Program 5–18
% ------- Unit-Step Response of C(s)/R(s) and Partial-Fraction Expansion of C(s) -------num = [3  25  72  80];
den = [1  8  40  96  80];step(num,den);v = [0  3  0  1.2]; axis(v), grid
% To obtain the partial-fraction expansion of C(s), enter commands
%      num1 = [3  25  72  80];
%     den1 = [1  8  40  96  80  0];%      [r,p,k] = residue(num1,den1)
num1 = [25  72  80];
den1 = [1  8  40  96  80  0];[r,p,k] = residue(num1,den1)
r =
-0.2813- 0.1719i
-0.2813+ 0.1719i-0.4375-0.3750-1.0000
p =
-2.0000+ 4.0000i
-2.0000- 4.0000i-2.0000-2.0000-0
k =
[]
aa
240
Chapter 5 / Transient and Steady-State Response Analyses
Hence, the time response c(t) can be given by
The fact that the response curve is an exponential curve superimposed by damped sinusoidal
curves can be seen from Figure 5–56.
A–5–9. When the closed-loop system involves a numerator dynamics, the unit-step response curve 
may exhibit a large overshoot. Obtain the unit-step response of the following system with 
MATLAB:
Obtain also the unit-ramp response with MATLAB.
Solution. MATLAB Program 5–19 produces the unit-step response as well as the unit-ramp
response of the system.The unit-step response curve and unit-ramp response curve, together with
the unit-ramp input, are shown in Figures 5–57(a) and (b), respectively.
Notice that the unit-step response curve exhibits over 215 %of overshoot. The unit-ramp
response curve leads the input curve.These phenomena occurred because of the presence of a large
derivative term in the numerator.C(s)
R(s)=10s +4
s
2
+4s+4 -0.4375e
-2t
-0.375te
-2t
+1 c(t) =-0.5626e
-2t
cos4t+0.3438e
-2t
sin4t
Amplitude
Time (sec)Step Response
0.6
0.4
0.20.811.2
0
0 0.5 1 1.5 2 2.5 3
Figure 5–56
Unit-step response
curve.
Openmirrors.com
aa
Example Problems and Solutions 241Output
t (sec)Unit-Step Response
(a)0.511.522.5
0
0123456789 1 0
Unit-Ramp Input and Output
t (sec)Unit-Ramp Response
(b)12345678910
0
0123456789 1 0Unit-Ramp InputOutput
Figure 5–57
(a) Unit-step response curve; (b) unit-ramp response curve plotted with unit-ramp input.MATLAB Program 5–19
num = [10  4];
den = [1  4  4];t = 0:0.02:10;y = step(num,den,t);plot(t,y)gridtitle('Unit-Step Response')xlabel('t (sec)')ylabel('Output')
num1 = [10  4];
den1 = [1  4  4  0];y1 = step(num1,den1,t);plot(t,t,'--',t,y1)v = [0  10  0  10]; axis(v); gridtitle('Unit-Ramp Response')xlabel('t (sec)')ylabel('Unit-Ramp Input and Output')text(6.1,5.0,'Unit-Ramp Input')text(3.5,7.1,'Output')
aa
A–5–10. Consider a higher-order system defined by
Using MATLAB, plot the unit-step response curve of this system. Using MATLAB, obtain the rise
time, peak time, maximum overshoot, and settling time.
Solution. MATLAB Program 5–20 plots the unit-step response curve as well as giving the rise
time, peak time, maximum overshoot, and settling time. The unit-step response curve is shown in
Figure 5–58.C(s)
R(s)=6.3223s
2
+18s +12.811
s
4
+6s
3
+11.3223s
2
+18s +12.811
242
Chapter 5 / Transient and Steady-State Response Analyses
MATLAB Program 5–20
% ------- This program is to plot the unit-step response curve, as well as to
% find the rise time, peak time, maximum overshoot, and settling time.
% In this program the rise time is calculated as the time required for the
% response to rise from 10 %to 90 %of its final value. -------
num = [6.3223  18  12.811];
den = [1  6  11.3223  18  12.811];
t = 0:0.02:20;
[y,x,t] = step(num,den,t);
plot(t,y)
grid
title('Unit-Step Response')
xlabel('t (sec)')
ylabel('Output y(t)')
r1 = 1; while y(r1) < 0.1, r1 = r1+1; end;
r2 = 1; while y(r2) < 0.9, r2 = r2+1; end;
rise_time = (r2-r1)*0. 02
rise_time =
0.5800
[ymax,tp] = max(y);
peak_time = (tp-1)*0.02
peak_time =
1.6600
max_overshoot = ymax-1
max_overshoot =
0.6182
s = 1001; while y(s) > 0.98 & y(s) < 1.02; s = s-1; end;
settling_time = (s-1)*0.02
settling_time =
10.0200
Openmirrors.comOpenmirrors.com
aa
Example Problems and Solutions 243A–5–11. Consider the closed-loop system defined by
Using a “for loop,” write a MATLAB program to obtain unit-step response of this system for the
following four cases:
Solution. Define v2
n=a and 2zvn=b . Then, aandbeach have four elements as follows:
a=[1 41 63 6 ]
b=[ 0.6 2 5.6 9.6 ]Case  4:  z=0.8,  vn=6Case  3:  z=0.7,  vn=4Case  2:  z=0.5,  vn=2Case  1:  z=0.3,  vn=1C(s)
R(s)=v2
n
s2+2zvn s+v2
nOutput y(t)
t(sec)Unit-Step Response
0.6
0.4
0.20.811.21.41.61.8
0
0 2 4 6 8 10 12 14 16 18 20Figure 5–58
Unit-step responsecurve.
aa
244
Chapter 5 / Transient and Steady-State Response Analyses
Using vectors aandb, MATLAB Program 5–21 will produce the unit-step response curves as
shown in Figure 5–59.
Unit-Step Response Curves for Four Cases
t Sec012345678
Outputs
1.4
00.4
0.20.60.811.2
1
2
34
Figure 5–59
Unit-step response
curves for four cases.
MATLAB Program 5–21
a = [1  4  16  36];
b = [0.6  2  5.6  9.6];
t = 0:0.1:8;
y = zeros(81,4);
for i = 1:4;
num = [a(i)];
den = [1  b(i)  a(i)];
y(:,i) = step(num,den,t);
end
plot(t,y(:,1),'o',t,y(:,2),'x',t,y(:,3),'-',t,y(:,4),'-.')
grid
title('Unit-Step Response Curves for Four Cases')
xlabel('t Sec')
ylabel('Outputs')
gtext('1')
gtext('2')
gtext('3')
gtext('4')
Openmirrors.com
aa
Example Problems and Solutions 245A–5–12. Using MATLAB, obtain the unit-ramp response of the closed-loop control system whose closed-
loop transfer function is
Also, obtain the response of this system when the input is given by
Solution. MATLAB Program 5–22 produces the unit-ramp response and the response to the
exponential input r=e–0.5t. The resulting response curves are shown in Figures 5–60(a) and (b),
respectively.r=e-0.5tC(s)
R(s)=s+10
s3+6s2+9s+10
MATLAB Program 5–22
% --------- Unit-Ramp Response ---------
num = [1  10];
den = [1  6  9  10];t = 0:0.1:10;r = t;y = lsim(num,den,r,t);plot(t,r,'-',t,y,'o')gridtitle('Unit-Ramp Response by Use of Command "lsim"')xlabel('t Sec')ylabel('Output')text(3.2,6.5,'Unit-Ramp Input')text(6.0,3.1,'Output')
% --------- Response to Input r1 = exp(-0.5t). ---------num = [0  0  1  10];
den = [1  6  9  10];t = 0:0.1:12;r1 = exp(-0.5*t);y1 = lsim(num,den,r1,t);plot(t,r1,'-',t,y1,'o')gridtitle('Response to Input r1 = exp(-0.5t)')xlabel('t Sec')ylabel('Input and Output')text(1.4,0.75,'Input r1 = exp(-0.5t)')text(6.2,0.34,'Output')
aa
246
Chapter 5 / Transient and Steady-State Response Analyses
Unit-Ramp Response by Use of Command “lsim ”
t  Sec
Output
9
5
18
6
3
2
4710
Unit-Ramp Input
(a)
00123456789 1 0
Output
Response to Input r
1
 = e
−0.5t
Input r
1
 = e
−0.5t
Output
t Sec02468 1 0 1 2
(b)
Input and Output
1
0.1
00.4
0.20.30.50.60.70.80.9
Figure 5–60
(a) Unit-ramp
response curve;
(b) response to
exponential input
r
1
=e
–0.5t
.
A–5–13. Obtain the response of the closed-loop system defined by
when the input r(t) is given by
r(t)=2+t
[The input r(t) is a step input of magnitude 2 plus unit-ramp input.]C(s)
R(s)=5
s
2
+s+5
Openmirrors.com
aa
Example Problems and Solutions 247MATLAB Program 5–23
num = [5];
den = [1  1  5];t = 0:0.05:10;r = 2+t;c = lsim(num,den,r,t);plot(t,r,'-',t,c,'o')gridtitle('Response to Input r(t) = 2 + t')xlabel('t Sec')ylabel('Output c(t) and Input r(t) = 2 + t')
Response to Input r(t) = 2 + t
t Sec0123456789 1 0Output c(t) and Input r(t) = 2 + t12
04
26810
Figure 5–61
Response to inputr(t)=2+t .
2
s(s + 1)R(s) C(s)
+−
Figure 5–62
Control system.Solution. A possible MATLAB program is shown in MATLAB Program 5–23. The resulting
response curve, together with a plot of the input function, is shown in Figure 5–61.
A–5–14. Obtain the response of the system shown in Figure 5–62 when the input r(t) is given by
[The input r(t) is the unit-acceleration input.]r(t) =1
2t2
aa
248
Chapter 5 / Transient and Steady-State Response Analyses
Solution. The closed-loop transfer function is
MATLAB Program 5–24 produces the unit-acceleration response.The resulting response, together
with the unit-acceleration input, is shown in Figure 5–63.C(s)
R(s)=2
s
2
+s+2
MATLAB Program 5–24
num = [2];
den = [1  1  2];
t = 0:0.2:10;
r = 0.5*t.^2;
y = lsim(num,den,r,t);
plot(t,r,'-',t,y,'o',t,y,'-')
grid
title('Unit-Acceleration Response')
xlabel('t Sec')
ylabel('Input and Output')
text(2.1,27.5,'Unit-Acceleration Input')
text(7.2,7.5,'Output')
Unit-Acceleration Response
t Sec0123456789 1 0
Input and Output
50
010
515202530354045
Unit-Acceleration Input
Ouput
Figure 5–63
Response to unit-
acceleration input.
A–5–15. Consider the system defined by
C(s)
R(s)=1
s
2
+2zs+1
Openmirrors.com
aa
Example Problems and Solutions 249MATLAB Program 5–25
t = 0:0.2:12;
for n = 1:6;num = [1];den = [1  2*(n-1)*0.2  1];[y(1:61,n),x,t] = step(num,den,t);end
plot(t,y)gridtitle('Unit-Step Response Curves')xlabel('t Sec')ylabel('Outputs')gtext('\zeta = 0'),gtext('0.2')gtext('0.4')gtext('0.6')gtext('0.8')gtext('1.0')
% To draw a three-dimensional plot, enter the following command: mesh(y) or mesh(y').
% We shall show two three-dimensional plots, one using “mesh(y)” and the other using% "mesh(y')". These two plots are the same, except that the x axis and y axis are% interchanged.
mesh(y)
title('Three-Dimensional Plot of Unit-Step Response Curves using Command "mesh(y)"')xlabel('n, where n = 1,2,3,4,5,6')ylabel('Computation Time Points')zlabel('Outputs')
mesh(y')
title('Three-Dimensional Plot of Unit-Step Response Curves using Command "mesh(y transpose)"')xlabel('Computation Time Points')ylabel('n, where n = 1,2,3,4,5,6')zlabel('Outputs')wherez=0, 0.2, 0.4, 0.6, 0.8, and 1.0. Write a MATLAB program using a “for loop” to
obtain the two-dimensional and three-dimensional plots of the system output. The input is the
unit-step function.
Solution. MATLAB Program 5–25 is a possible program to obtain two-dimensional and three-
dimensional plots. Figure 5–64(a) is the two-dimensional plot of the unit-step response curves forvarious values of z. Figure 5–64(b) is the three-dimensional plot obtained by use of the command
“mesh(y)” and Figure 5–64(c) is obtained by use of the command “mesh(y ¿)”. (These two
three-dimensional plots are basically the same.The only difference is that xaxis and yaxis are in-
terchanged.)
aa
250
Chapter 5 / Transient and Steady-State Response Analyses
A–5–16. Consider the system subjected to the initial condition as given below.
(There is no input or forcing function in this system.) Obtain the response y(t) versus t to the
given initial condition by use of Equations (5–58) and (5–60).
y=[1  0  0 ]
C
x
1
x
2
x
3
SC
x#
1
x#
2
x#
3
S
=
C
    0     1   0
    0     0    1
-10 -17 -8
SC
x
1
x
2
x
3
S
,
C
x
1
(0)
x
2
(0)
x
3
(0)
S
=
C
2
1
0.5
S
(a)
000.20.40.60.811.21.41.61.82
2 4 6 8 10 12
Outputs
t Sec/H9256 = 0/H9256 = 0
0.20.2
0.40.4
0.60.6
0.80.8
1.01.0Unit-Step Response Curves
Three-Dimensional Plot of Unit-Step Response Curves using Command “mesh( y)”
080
60
40
20
01234560.511.52
Outputs
Computation Time Points n, where n = 1, 2, 3, 4, 5, 6
(b)
06
5
4
3
2
10102030405060700.511.52
Outputs
Three-Dimensional Plot of Unit-Step Response Curves using Command “mesh(y transpose) ”
n, where n = 1, 2, 3, 4, 5, 6 Computation Time Points
(c)
Figure 5–64
(a) Two-dimensional
plot of unit-step
response curves;
(b) three-dimensional
plot of unit-step
response curves
using command
“mesh(y)”;
(c) three-dimensional
plot of unit-step
response curves
using command
“mesh(y ¿)”.
Openmirrors.com
aa
Example Problems and Solutions 251Solution. A possible MATLAB program based on Equations (5–58) and (5–60) is given by MAT-
LAB program 5–26. The response curve obtained here is shown in Figure 5–65. (Notice that thisproblem was solved by use of the command “initial” in Example 5–16.The response curve obtainedhere is exactly the same as that shown in Figure 5–34.)
MATLAB Program 5–26
t = 0:0.05:10;
A = [0 1 0;0 0 1;-10 -17 -8];B = [2;1;0.5];C=[1 0 0];[y,x,t] = step(A,B,C*A,C*B,1,t);plot(t,y)grid;title('Response to Initial Condition')xlabel('t (sec)')ylabel('Output y')
A–5–17. Consider the following characteristic equation:
Determine the range of Kfor stability.
Solution. The Routh array of coefficients is
s4
s3
s2
s1
s01
K
K-1
K
1-K2
K-1
11
1
11
0s4+Ks3+s2+s+1=0Figure 5–65
Response y(t) to the given initial
condition.
Output y
t (sec)Response to Initial Condition
0.511.522.5
0
0123456789 1 0
aa
252
Chapter 5 / Transient and Steady-State Response Analyses
For stability, we require that
From the first and second conditions, Kmust be greater than 1. For K>1 , notice that the term
1-CK
2
/(K-1)Dis always negative, since
Thus, the three conditions cannot be fulfilled simultaneously.Therefore, there is no value of Kthat
allows stability of the system.
A–5–18. Consider the characteristic equation given by
(5–67)
The Hurwitz stability criterion, given next, gives conditions for all the roots to have negative real
parts in terms of the coefficients of the polynomial.As stated in the discussions of Routh’s stability
criterion in Section 5–6, for all the roots to have negative real parts, all the coefficients a’s must
be positive.This is a necessary condition but not a sufficient condition. If this condition is not sat-
isfied, it indicates that some of the roots have positive real parts or are imaginary or zero. A suf-
ficient condition for all the roots to have negative real parts is given in the following Hurwitz
stability criterion: If all the coefficients of the polynomial are positive, arrange these coefficients
in the following determinant:
where we substituted zero for a
s
ifs>n . For all the roots to have negative real parts, it is neces-
sary and sufficient that successive principal minors of be positive. The successive principal
minors are the following determinants:
where a
s
=0 ifs>n . (It is noted that some of the conditions for the lower-order determinants
are included in the conditions for the higher-order determinants.) If all these determinants are
positive, and a
0
>0 as already assumed, the equilibrium state of the system whose characteristic¢
i
=
5
a
1
a
0
0
/H11080
0a
3
a
2
a
1
/H11080
0p
p
p
pa
2i-1
a
2i-2
a
2i-3
/H11080
a
i
5
  
(i=1, 2, p,n-1)¢
n
¢
n
=
7
a
1
a
0
0
0
/H11080
/H11080
0a
3
a
2
a
1
a
0
/H11080
/H11080
0a
5
a
4
a
3
a
2
/H11080
/H11080
0p
p
p
p
p0
/H11080
a
n
a
n-1
a
n-2
a
n-3
a
n-4
0
/H11080
0
0
a
n
a
n-1
a
n-2
0
/H11080
0
0
0
0
a
n
7
a
0
 
s
n
+a
1
 
s
n-1
+a
2
 
s
n-2
+p+a
n-1
 
s+a
n
=0K-1-K
2
K-1=-1+K(1 -K)
K-160K70
K-1
K70
1-K
2
K-170
Openmirrors.com
aa
Example Problems and Solutions 253equation is given by Equation (5–67) is asymptotically stable. Note that exact values of determi-
nants are not needed; instead, only signs of these determinants are needed for the stability criterion.
Now consider the following characteristic equation:
Obtain the conditions for stability using the Hurwitz stability criterion.
Solution. The conditions for stability are that all the a’s be positive and that
It is clear that, if all the a’s are positive and if the condition is satisfied, the condition
is also satisfied.Therefore, for all the roots of the given characteristic equation to have neg-
ative real parts, it is necessary and sufficient that all the coefficients a’s are positive and 
A–5–19. Show that the first column of the Routh array of
is given by
where
Solution. The Routh array of coefficients has the form
1
a1
b1
c1
/H11080/H11080/H11080a
2
a3
b2
c2
/H11080
/H11080/H11080a
4
a5
b3
/H11080
/H11080/H11080/H11080a
6
p
ppanak=0  if k7n¢r=7a1
a3
a5
/H11080
/H11080/H11080
a
2r-11
a2
a4
/H11080
/H11080/H11080/H110800
a
1
a3
/H11080
/H11080/H11080/H110800
1
a
2
/H11080/H11080/H11080/H11080/H11080
/H11080
/H11080
/H110800
0
0
/H11080/H11080/H11080
a
r7,  (n/H11350r/H113501)1, ¢1 , ¢2
¢1, ¢3
¢2,p, ¢n
¢n-1sn+a1 sn-1+a2 sn-2+p+an-1 s+an=0¢370.¢270¢370=a3Aa1 a2-a0 a3B-a2
1 a470=a1Aa2 a3-a1 a4B-a0 a2
3¢3=3a1
a0
0a3
a2
a10
a4
a33¢2=2a1
a0a3
a22=a1 a2-a0 a370a0 s4+a1 s3+a2 s2+a3 s+a4=0
aa
254
Chapter 5 / Transient and Steady-State Response Analyses
The first term in the first column of the Routh array is 1. The next term in the first column is a
1
,
which is equal to The next term is b
1
, which is equal to
The next term in the first column is c
1
, which is equal to
In a similar manner the remaining terms in the first column of the Routh array can be found.
The Routh array has the property that the last nonzero terms of any columns are the same;
that is, if the array is given by
then
and if the array is given by
then
In any case, the last term of the first column is equal to a
n
,o r
a
n
=¢
n-1
 
a
n
¢
n-1
=¢
n
¢
n-1
a
6
=b
3
=d
2
=f
1
a
0
a
1
b
1
c
1
d
1
e
1
f
1
a
2
a
3
b
2
c
2
d
2
0a
4
a
5
b
3
0a
6
0a
7
=c
3
=e
2
=g
1
a
0
a
1
b
1
c
1
d
1
e
1
f
1
g
1
a
2
a
3
b
2
c
2
d
2
e
2
a
4
a
5
b
3
c
3
a
6
a
7
=¢
3
¢
2
=a
1
 
a
2
 
a
3
-a
2
3
-a
2
1
 
a
4
+a
1
 
a
5
a
1
 
a
2
-a
3
b
1
 
a
3
-a
1
 
b
2
b
1
=
c
a
1
 
a
2
-a
3
a
1
d
a
3
-a
1
c
a
1
 
a
4
-a
5
a
1
d
c
a
1
a
2
-a
3
a
1
d
a
1
 
a
2
-a
3
a
1
=¢
2
¢
1
¢
1
 
.
Openmirrors.com
aa
Example Problems and Solutions 255For example, if n=4 , then
Thus it has been shown that the first column of the Routh array is given by
A–5–20. Show that the Routh’s stability criterion and Hurwitz stability criterion are equivalent.
Solution. If we write Hurwitz determinants in the triangular form
where the elements below the diagonal line are all zeros and the elements above the diagonal
line any numbers, then the Hurwitz conditions for asymptotic stability become
which are equivalent to the conditionsWe shall show that these conditions are equivalent to
where a
1,b1,c1,p, are the elements of the first column in the Routh array.
Consider, for example, the following Hurwitz determinant, which corresponds to i=4 :
The determinant is unchanged if we subtract from the ith row ktimes the jth row. By subtracting
from the second row a0/a1times the first row, we obtain
¢4=4a11
0
00a
3
a22
a1
a0a5
a23
a3
a2a7
a24
a5
a44¢4=4a1
a0
0
0a3
a2
a1
a0a5
a4
a3
a2a7
a6
a5
a44a170,  b170,  c170,  pa1170,  a2270,  p,  ann70¢i=a11 a22paii70,  (i=1, 2, p,n)¢i=6a11 *
a22
/H11554
/H11554
/H11554
0 aii6,  (i=1, 2, p,n)1, ¢1 , ¢2
¢1, ¢3
¢2, p, ¢n
¢n-1¢4=4a1
a3
a5
a71
a2
a4
a60a
1
a3
a501a
2
a44=4a1
a3
001
a
2
a4
00
a1
a3
00
1a
2
a44=¢3 a4
aa
256
Chapter 5 / Transient and Steady-State Response Analyses
where
Similarly, subtracting from the fourth row a
0
/a
1
times the third row yields
where
Next, subtracting from the third row a
1
/a
22
times the second row yields
where
Finally, subtracting from the last row times the third row yields
where
a
44
=a
ˆ
44
-a
ˆ
43
a
33
 a
34
¢
4
=
4
a
11
0
0
0a
3
a
22
0
0a
5
a
23
a
33
0a
7
a
24
a
34
a
44
4
a
ˆ
43
 
/H20862a
33
a
34
=a
5
-a
1
a
22
a
24
a
33
=a
3
-a
1
a
22
a
23
¢
4
=
4
a
11
0
0
0a
3
a
22
0
0a
5
a
23
a
33
a
ˆ
43
a
7
a
24
a
34
a
ˆ
44
4
a
ˆ
44
=a
4
-a
0
a
1
a
5
a
ˆ
43
=a
2
-a
0
a
1
a
3
¢
4
=
4
a
11
0
0
0a
3
a
22
a
1
0a
5
a
23
a
3
a
ˆ
43
a
7
a
24
a
5
a
ˆ
44
4
a
24
=a
6
-a
0
a
1
a
7
a
23
=a
4
-a
0
a
1
a
5
a
22
=a
2
-a
0
a
1
a
3
a
11
=a
1
Openmirrors.com
aa
Example Problems and Solutions 257From this analysis, we see that
The Hurwitz conditions for asymptotic stability
reduce to the conditionsThe Routh array for the polynomialwhere a
0>0 andn=4 , is given by
From this Routh array, we see that
(The last equation is obtained using the fact that ) Hence the
Hurwitz conditions for asymptotic stability become
Thus we have demonstrated that Hurwitz conditions for asymptotic stability can be reduced to
Routh’s conditions for asymptotic stability. The same argument can be extended to Hurwitzdeterminants of any order, and the equivalence of Routh’s stability criterion and Hurwitz stabil-ity criterion can be established.
A–5–21. Consider the characteristic equation
Using the Hurwitz stability criterion, determine the range of Kfor stability.
Solution. Comparing the given characteristic equation
s
4+2s3+(4+K)s2+9s+25=0s4+2s3+(4+K)s2+9s+25=0a170,  b170,  c170,  d170a34=0, aˆ44=a4 , and a4=b2=d1 .a44=aˆ44-aˆ43
a33 a34=a4=d1a33=a3-a1
a22a23=a3 b1-a1 b2
b1=c1a22=a2-a0
a1a3=b1a11=a1a0
a1
b1
c1
d1a2
a3
b2a4a0 s4+a1 s3+a2 s2+a3 s+a4=0a1170,  a2270,  a3370,  a4470,  p¢170,  ¢270,  ¢370,  ¢470,  p¢1=a11¢2=a11 a22¢3=a11 a22 a33¢4=a11 a22 a33 a44
aa
258
Chapter 5 / Transient and Steady-State Response Analyses
with the following standard fourth-order characteristic equation:
we find
The Hurwitz stability criterion states that is given by
For all the roots to have negative real parts, it is necessary and sufficient that succesive principal
minors of be positive. The successive principal minors are
For all principal minors to be positive, we require that be positive.Thus, we require
from which we obtain the region of Kfor stability to be
A–5–22. Explain why the proportional control of a plant that does not possess an integrating property
(which means that the plant transfer function does not include the factor 1/s) suffers offset in
response to step inputs.
Solution. Consider, for example, the system shown in Figure 5–66.At steady state, if cwere equal
to a nonzero constant r, then e=0 and u=Ke=0 , resulting in c=0 , which contradicts the
assumption that c=r= nonzero constant.
A nonzero offset must exist for proper operation of such a control system. In other words, at
steady state, if ewere equal to r/(1+K) , then u=Kr/(1+K) and c=Kr/(1+K) , which
results in the assumed error signal e=r/(1+K) .Thus the offset of r/(1+K) must exist in such
a system.K7109
18 18K -109 70 2K-170¢
i
(i=1, 2, 3)¢
3
=
3
a
1
a
0
0a
3
a
2
a
1
0
a
4
a
3
3
=
3
2
1
09
4+K
20
25
9
3
=18K -109¢
2
=
2
a
1
a
0
a
3
a
2
2
=
2
2
19
4+K
2
=2K-1¢
1
=@a
1
@=2¢
4
¢
4
=
4
a
1
a
0
0
0a
3
a
2
a
1
a
0
0
a
4
a
3
a
2
0
0
0
a
4
4
¢
4
a
0
=1,
 
a
1
=2,
 
a
2
=4+K,
 
a
3
=9,
 
a
4
=25a
0
 
s
4
+a
1
 
s
3
+a
2
s
2
+a
3
 
s+a
4
=0
+–
rc euK1
Ts+ 1
Figure 5–66
Control system.
Openmirrors.com
aa
Example Problems and Solutions 259A–5–23. The block diagram of Figure 5–67 shows a speed control system in which the output member of
the system is subject to a torque disturbance. In the diagram, and D(s) are the
Laplace transforms of the reference speed, output speed, driving torque, and disturbance torque,respectively. In the absence of a disturbance torque, the output speed is equal to the reference
speed.V
r(s),V(s),T(s) ,
+–++D(s)
E(s) T(s) V(s) Vr(s)
K1
Js
Figure 5–67
Block diagram of a
speed control system.
+–
K1
JsVD(s) D(s)
Figure 5–68
Block diagram of thespeed control systemof Figure 5–67 whenV
r(s)=0.Investigate the response of this system to a unit-step disturbance torque. Assume that the
reference input is zero, or 
Solution. Figure 5–68 is a modified block diagram convenient for the present analysis.The closed-
loop transfer function is
where is the Laplace transform of the output speed due to the disturbance torque. For a unit-
step disturbance torque, the steady-state output velocity is
From this analysis, we conclude that, if a step disturbance torque is applied to the output
member of the system, an error speed will result so that the ensuing motor torque will exactly can-cel the disturbance torque. To develop this motor torque, it is necessary that there be an error inspeed so that nonzero torque will result. (Discussions continue to Problem A–5–24 .)=1
K=lim
sS0s
Js+K1
svD(q)=lim
sS0sVD(s)VD(s)VD(s)
D(s)=1
Js+KVr(s)=0.
aa
260
Chapter 5 / Transient and Steady-State Response Analyses
A–5–24. In the system considered in Problem A–5–23 , it is desired to eliminate as much as possible the
speed errors due to torque disturbances.
Is it possible to cancel the effect of a disturbance torque at steady state so that a constant
disturbance torque applied to the output member will cause no speed change at steady state?
Solution. Suppose that we choose a suitable controller whose transfer function is G
c
(s), as shown
in Figure 5–69. Then in the absence of the reference input the closed-loop transfer function
between the output velocity and the disturbance torque D(s) is
The steady-state output speed due to a unit-step disturbance torque is
To satisfy the requirement that
we must choose G
c
(0)= q. This can be realized if we choose
Integral control action will continue to correct until the error is zero. This controller, however,
presents a stability problem, because the characteristic equation will have two imaginary roots.
One method of stabilizing such a system is to add a proportional mode to the controller or
choose
G
c
(s)=K
p
+K
sG
c
(s)=K
sv
D
(q)=0=1
G
c
(0)=lim
sS0
s
Js+G
c
(s)1
sv
D
(q)=lim
sS0
sV
D
(s)=1
Js+G
c
(s)V
D
(s)
D(s)=1
Js
1+1
JsG
c
(s)V
D
(s)
+–
++
D(s)
E(s) T(s) V(s) V
r
(s)
G
c
(s)1
Js
Figure 5–69
Block diagram of a
speed control system.
Openmirrors.com
aa
Example Problems and Solutions 261With this controller, the block diagram of Figure 5–69 in the absence of the reference input can
be modified to that of Figure 5–70. The closed-loop transfer function becomes
For a unit-step disturbance torque, the steady-state output speed is
Thus, we see that the proportional-plus-integral controller eliminates speed error at steady state.
The use of integral control action has increased the order of the system by 1. (This tends to
produce an oscillatory response.)
In the present system, a step disturbance torque will cause a transient error in the output
speed, but the error will become zero at steady state. The integrator provides a nonzero outputwith zero error. (The nonzero output of the integrator produces a motor torque that exactly
cancels the disturbance torque.)
Note that even if the system may have an integrator in the plant (such as an integrator in the
transfer function of the plant), this does not eliminate the steady-state error due to a step distur-bance torque.To eliminate this, we must have an integrator before the point where the disturbance
torque enters.
A–5–25. Consider the system shown in Figure 5–71(a). The steady-state error to a unit-ramp input is
e
ss=2z/H20862vn. Show that the steady-state error for following a ramp input may be eliminated if the
input is introduced to the system through a proportional-plus-derivative filter, as shown in Figure
5–71(b), and the value of kis properly set. Note that the error e(t) is given by r(t)-c(t) .
Solution. The closed-loop transfer function of the system shown in Figure 5–71(b) is
Then
R(s) -C(s) =as2+2zvn s-v2
n ks
s2+2zvn s+v2
nbR(s)C(s)
R(s)=(1+ks)v2
n
s2+2zvn s+v2
nvD(q)=lim
sS0sVD(s)=lim
sS0s2
Js2+Kp s+K1
s=0VD(s)
D(s)=s
Js2+Kp s+KVD(s) /H20862D(s)1
Js
Kps+K
sVD(s) D(s)
+–Figure 5–70
Block diagram of thespeed control systemof Figure 5–69 whenG
c(s)= Kp+(K/s)
andVr(s)=0.
+–+–R(s) C(s)
(a) (b)1+ksvn
s(s+ 2zvn)2vn
s(s+ 2zvn)2
Figure 5–71
(a) Control system;(b) control systemwith input filter.
aa
262
Chapter 5 / Transient and Steady-State Response Analyses
If the input is a unit ramp, then the steady-state error is
Therefore, if kis chosen as
then the steady-state error for following a ramp input can be made equal to zero. Note that, if there
are any variations in the values of zand/or v
n
due to environmental changes or aging, then a
nonzero steady-state error for a ramp response may result.
A–5–26. Consider the stable unity-feedback control system with feedforward transfer function G(s) .
Suppose that the closed-loop transfer function can be written
Show that
where e(t) =r(t)-c(t) is the error in the unit-step response. Show also that
Solution. Let us define
and
Then
and
For a unit-step input, R(s)=1/s and
E(s) =Q(s) -P(s)
sQ(s)E(s) =Q(s) -P(s)
Q(s)R(s)C(s)
R(s)=P(s)
Q(s)AT
1
 
s+1BAT
2
 
s+1BpAT
n
 
s+1B=Q(s)AT
a
 
s+1BAT
b
 
s+1B p AT
m
 
s+1B=P(s)1
K
v
=1
lim
sS0
sG(s)=AT
1
+T
2
+p+T
n
B-AT
a
+T
b
+p+T
m
B3
q
0
e(t)dt=AT
1
+T
2
+p+T
n
B-AT
a
+T
b
+p+T
m
BC(s)
R(s)=G(s)
1+G(s)=AT
a
 
s+1BAT
b
 
s+1BpAT
m
 
s+1B
AT
1
 
s+1BAT
2
 
s+1BpAT
n
 
s+1B
  
(m/H11349n)k=2z
v
n
 =2zv
n
-v
2
n
 
k
v
2
n
 =lim
sS0
s 
a
s
2
+2zv
n
 
s-v
2
n
 
ks
s
2
+2zv
n
 
s+v
2
n
b
 1
s
2
 e(q)=r(q)-c(q)
Openmirrors.com
aa
Problems 263Since the system is stable, converges to a constant value. Noting that
we have
Since
we have
For a unit-step input r(t), since
we have
Note that zeros in the left half-plane (that is, positive ) will improve Kv. Poles close
to the origin cause low velocity-error constants unless there are zeros nearby.
PROBLEMSTa ,Tb ,p,Tm1
Kv=1
lim
sS0sG(s)=AT1+T2+p+TnB-ATa+Tb+p+TmB=lim
sS01
1+G(s)1
s=1
lim
sS0sG(s)=1
Kv 3q
0e(t)dt=lim
sS0E(s) =lim
sS01
1+G(s)R(s)3q
0e(t)dt=AT1+T2+p+TnB-ATa+Tb+p+TmBlim
sS0Q¿(s)=T1+T2+p+Tnlim
sS0P¿(s)=Ta+Tb+p+Tm =lim
sS0CQ¿(s)-P¿(s)D =lim
sS0 Q¿(s)-P¿(s)
Q(s) +sQ¿(s) 
3q
0e(t)dt=lim
sS0Q(s) -P(s)
sQ(s)3q
0e(t)dt=lim
sS0sE(s)
s=lim
sS0E(s)1q
0e(t)dt
B–5–1. A thermometer requires 1 min to indicate 98 %of
the response to a step input. Assuming the thermometer to
be a first-order system, find the time constant.
If the thermometer is placed in a bath, the temperature
of which is changing linearly at a rate of 10° /H20862min, how much
error does the thermometer show?
B–5–2. Consider the unit-step response of a unity-feedback
control system whose open-loop transfer function is
G(s) =1
s(s+1)Obtain the rise time, peak time, maximum overshoot, and
settling time.
B–5–3. Consider the closed-loop system given by
Determine the values of zandvnso that the system
responds to a step input with approximately 5 %overshoot
and with a settling time of 2 sec. (Use the 2 %criterion.)C(s)
R(s)=v2
n
s2+2zvn s+v2
n
aa
264
Chapter 5 / Transient and Steady-State Response Analyses
x
mkImpulsive
force
d(t)
Figure 5–72
Mechanical system.
x
1
Tt t
1
x
n
t
n
Figure 5–73
Decaying oscillation.
+–
+–
R(s) C(s)
R(s) C(s)(a)
(b)10
s(s+ 1)
K
h
10
s+ 1
1
s
+–
Figure 5–74
(a) Control system; (b) control system with tachometer feedback.B–5–4. Consider the system shown in Figure 5–72.The sys-
tem is initially at rest. Suppose that the cart is set into mo-
tion by an impulsive force whose strength is unity. Can it be
stopped by another such impulsive force?
B–5–5. Obtain the unit-impulse response and the unit-
step response of a unity-feedback system whose open-loop
transfer function is
B–5–6. An oscillatory system is known to have a transfer
function of the following form:
G(s) =v
2
n
s
2
+2zv
n
 
s+v
2
n
G(s) =2s+1
s
2
B–5–7. Consider the system shown in Figure 5–74(a). The
damping ratio of this system is 0.158 and the undamped nat-
ural frequency is 3.16 rad /H20862sec. To improve the relative sta-
bility, we employ tachometer feedback. Figure 5–74(b) shows
such a tachometer-feedback system.
Determine the value of K
h
so that the damping ratio of
the system is 0.5. Draw unit-step response curves of both the
original and tachometer-feedback systems. Also draw the
error-versus-time curves for the unit-ramp response of both
systems.Assume that a record of a damped oscillation is available
as shown in Figure 5–73. Determine the damping ratio zof
the system from the graph.
Openmirrors.com
aa
Problems 265+–+–R(s) C(s)1
s16
s+ 0.8
kR(s) C(s)1
sK
s+ 2
k+–+–
Figure 5–75
Closed-loop system.
Figure 5–76
Block diagram of a system.B–5–8. Referring to the system shown in Figure 5–75, de-
termine the values of Kand ksuch that the system has a
damping ratio zof 0.7 and an undamped natural frequency
vnof 4 rad /H20862sec.
B–5–9. Consider the system shown in Figure 5–76. Deter-
mine the value of ksuch that the damping ratio zis 0.5.Then
obtain the rise time tr, peak time tp, maximum overshoot
Mp, and settling time tsin the unit-step response.
B–5–10. Using MATLAB, obtain the unit-step response,
unit-ramp response, and unit-impulse response of the fol-lowing system:
where R(s) and C(s) are Laplace transforms of the input
r(t) and output c(t), respectively.C(s)
R(s)=10
s2+2s+10B–5–11. Using MATLAB, obtain the unit-step response,
unit-ramp response, and unit-impulse response of the fol-lowing system:
where uis the input and yis the output.
B–5–12. Obtain both analytically and computationally 
the rise time, peak time, maximum overshoot, and settling
time in the unit-step response of a closed-loop system 
given by
C(s)
R(s)=36
s2+2s+36 y=[1 0]Bx1
x2R Bx#
1
x#
2R=B-1-0.5
10RBx1
x2R+B0.50Ru
aa
266
Chapter 5 / Transient and Steady-State Response Analyses
B–5–13. Figure 5–77 shows three systems. System I is a po-
sitional servo system. System II is a positional servo system
with PD control action. System III is a positional servo sys-
tem with velocity feedback. Compare the unit-step, unit-
impulse, and unit-ramp responses of the three systems.
Which system is best with respect to the speed of response
and maximum overshoot in the step response?B–5–14. Consider the position control system shown in Fig-
ure 5–78. Write a MATLAB program to obtain a unit-step
response and a unit-ramp response of the system. Plot curves
x
1
(t)versus t, x
2
(t)versus t, x
3
(t)versus t, and e(t) versus t
Cwhere e(t)=r(t)-x
1
(t)Dfor both the unit-step response
and the unit-ramp response.
0.8
5
5
C
III
(s) R(s)
System III1
5s+ 1
1
s
C
II
(s) R(s)
System II5(1+ 0.8s)1
s(5s+ 1)
C(s) R(s)
System I1
s(5s+ 1)
+–
+–
+–
+–
Figure 5–77
Positional servo system (System I), positional servo system with PD control
action (System II), and positional servo system with velocity feedback
(System III).
5
4
x
1
x
2
x
3
re
1
s
1
s
2
0.1s+ 1
+–
+–
Figure 5–78
Position control system.
Openmirrors.com
Problems 267aa
B–5–15. Using MATLAB, obtain the unit-step response
curve for the unity-feedback control system whose open-loop transfer function is
Using MATLAB, obtain also the rise time, peak time, max-
imum overshoot, and settling time in the unit-step response
curve.
B–5–16. Consider the closed-loop system defined by
wherez=0.2, 0.4, 0.6, 0.8, and 1.0. Using MATLAB, plot a
two-dimensional diagram of unit-impulse response curves.Also plot a three-dimensional plot of the response curves.
B–5–17. Consider the second-order system defined by
wherez=0.2, 0.4, 0.6, 0.8, 1.0. Plot a three-dimensional
diagram of the unit-step response curves.
B–5–18. Obtain the unit-ramp response of the system
defined by
where uis the unit-ramp input. Use the lsim command to
obtain the response. y=[1
 0]Bx1
x2R Bx#
1
x#
2R=B0
-11
-1RBx1
x2R+B0
1RuC(s)
R(s)=s+1
s2+2zs+1C(s)
R(s)=2zs+1
s2+2zs+1G(s) =10
s(s+2)(s +4)B–5–19. Consider the differential equation system given by
Using MATLAB, obtain the response y(t), subject to the
given initial condition.
B–5–20. Determine the range of Kfor stability of a unity-
feedback control system whose open-loop transfer function is
B–5–21. Consider the following characteristic equation:
Using the Routh stability criterion, determine the range of
Kfor stability.
B–5–22. Consider the closed-loop system shown in Figure 5–79.
Determine the range of Kfor stability. Assume that K>0 .s4+2s3+(4+K)s2+9s+25=0G(s) =K
s(s+1)(s +2)y$+3y#+2y=0,  y(0) =0.1,  y#(0)=0.05
+–R(s) C(s)
Ks–2
(s+ 1)(s2+ 6s+ 25)
Figure 5–79 Closed-loop system.
B–5–23. Consider the satellite attitude control system
shown in Figure 5–80(a). The output of this system exhibitscontinued oscillations and is not desirable. This system canbe stabilized by use of tachometer feedback, as shown in
Figure 5–80(b). If K/J=4 , what value of K
hwill yield the
damping ratio to be 0.6?
+–+–R(s) C(s)
(b)KhK
Js1
s+–R(s) C(s)
(a)K1
Js2
Figure 5–80
(a) Unstable satellite attitude control system;(b) stabilized system.
aa
268
Chapter 5 / Transient and Steady-State Response Analyses
K
h
K
C(s) R(s)20
(s+ 1) (s+ 4)
1
s
+–
+–
Figure 5–81
Servo system with tachometer feedback.B–5–24. Consider the servo system with tachometer
feedback shown in Figure 5–81. Determine the ranges of
stability for KandK
h
. (Note that K
h
must be positive.)
B–5–25. Consider the system
where matrix Ais given by
(Ais called Schwarz matrix.) Show that the first column of
the Routh’s array of the characteristic equation |sI-A|=0
consists of 1, b
1
,b
2
, and b
1
b
3
.
B–5–26. Consider a unity-feedback control system with the
closed-loop transfer function
Determine the open-loop transfer function G(s) .
Show that the steady-state error in the unit-ramp
response is given by
e
ss
=1
K
v
=a-K
bC(s)
R(s)=Ks+b
s
2
+as+bA=
C
0
-b
3
01
0
-b
2
0
1
-b
1
S
x#=AxB–5–27. Consider a unity-feedback control system whose
open-loop transfer function is
Discuss the effects that varying the values of Kand Bhas
on the steady-state error in unit-ramp response. Sketch
typical unit-ramp response curves for a small value,
medium value, and large value of K, assuming that Bis
constant.
B–5–28. If the feedforward path of a control system
contains at least one integrating element, then the output
continues to change as long as an error is present.The out-
put stops when the error is precisely zero. If an external dis-
turbance enters the system, it is desirable to have an
integrating element between the error-measuring element
and the point where the disturbance enters, so that the ef-
fect of the external disturbance may be made zero at steady
state.
Show that, if the disturbance is a ramp function, then
the steady-state error due to this ramp disturbance may be
eliminated only if two integrators precede the point where
the disturbance enters.G(s) =K
s(Js +B)
Openmirrors.com
6
269Control Systems Analysis
and Design by the 
Root-Locus Method
6–1 INTRODUCTION
The basic characteristic of the transient response of a closed-loop system is closely
related to the location of the closed-loop poles. If the system has a variable loop gain,then the location of the closed-loop poles depends on the value of the loop gain chosen.It is important, therefore, that the designer know how the closed-loop poles move inthesplane as the loop gain is varied.
From the design viewpoint, in some systems simple gain adjustment may move the
closed-loop poles to desired locations.Then the design problem may become the selec-tion of an appropriate gain value. If the gain adjustment alone does not yield a desiredresult, addition of a compensator to the system will become necessary. (This subject isdiscussed in detail in Sections 6–6 through 6–9.)
The closed-loop poles are the roots of the characteristic equation. Finding the roots
of the characteristic equation of degree higher than 3 is laborious and will need computersolution. (MATLAB provides a simple solution to this problem.) However, just findingthe roots of the characteristic equation may be of limited value, because as the gain ofthe open-loop transfer function varies, the characteristic equation changes and thecomputations must be repeated.
A simple method for finding the roots of the characteristic equation has been
developed by W. R. Evans and used extensively in control engineering. This method,called the root-locus method, is one in which the roots of the characteristic equation
270
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
H(s)
G(s)C(s) R(s)
+–
Figure 6–1
Control system.
are plotted for all values of a system parameter. The roots corresponding to a par-
ticular value of this parameter can then be located on the resulting graph. Note that
the parameter is usually the gain, but any other variable of the open-loop transfer
function may be used. Unless otherwise stated, we shall assume that the gain of the
open-loop transfer function is the parameter to be varied through all values, from zero
to infinity.
By using the root-locus method the designer can predict the effects on the location
of the closed-loop poles of varying the gain value or adding open-loop poles and/or
open-loop zeros.Therefore, it is desired that the designer have a good understanding of
the method for generating the root loci of the closed-loop system, both by hand and by
use of a computer software program like MATLAB.
In designing a linear control system, we find that the root-locus method proves to be
quite useful, since it indicates the manner in which the open-loop poles and zeros should
be modified so that the response meets system performance specifications.This method
is particularly suited to obtaining approximate results very quickly.
Because generating the root loci by use of MATLAB is very simple, one may think
sketching the root loci by hand is a waste of time and effort. However, experience in
sketching the root loci by hand is invaluable for interpreting computer-generated root
loci, as well as for getting a rough idea of the root loci very quickly.
Outline of the Chapter. The outline of the chapter is as follows: Section 6–1 has
presented an introduction to the root-locus method. Section 6–2 details the concepts
underlying the root-locus method and presents the general procedure for sketching root
loci using illustrative examples. Section 6–3 discusses generating root-locus plots with
MATLAB. Section 6–4 treats a special case when the closed-loop system has positive
feedback. Section 6–5 presents general aspects of the root-locus approach to the design
of closed-loop systems. Section 6–6 discusses the control systems design by lead com-
pensation. Section 6–7 treats the lag compensation technique. Section 6–8 deals with
the lag–lead compensation technique. Finally, Section 6–9 discusses the parallel com-
pensation technique.
6–2 ROOT-LOCUS PLOTS
Angle and Magnitude Conditions. Consider the negative feedback system shown
in Figure 6–1. The closed-loop transfer function is
(6–1)C(s)
R(s)=G(s)
1+G(s)H(s)
Openmirrors.com
Section 6–2 / Root-Locus Plots 271The characteristic equation for this closed-loop system is obtained by setting the
denominator of the right-hand side of Equation (6–1) equal to zero. That is,
or
(6–2)
Here we assume that G(s)H(s) is a ratio of polynomials in s.[It is noted that we
can extend the analysis to the case when G(s)H(s) involves the transport lag e–Ts.]
Since G(s)H(s) is a complex quantity, Equation (6–2) can be split into two equations
by equating the angles and magnitudes of both sides, respectively, to obtain thefollowing:
Angle condition:
(6–3)
Magnitude condition:
(6–4)
The values of sthat fulfill both the angle and magnitude conditions are the roots of
the characteristic equation, or the closed-loop poles. A locus of the points in thecomplex plane satisfying the angle condition alone is the root locus. The roots ofthe characteristic equation (the closed-loop poles) corresponding to a given valueof the gain can be determined from the magnitude condition. The details of applyingthe angle and magnitude conditions to obtain the closed-loop poles are presentedlater in this section.
In many cases, G(s)H(s) involves a gain parameter K,and the characteristic equa-
tion may be written as
Then the root loci for the system are the loci of the closed-loop poles as the gain Kis
varied from zero to infinity.
Note that to begin sketching the root loci of a system by the root-locus method we
must know the location of the poles and zeros of G(s)H(s). Remember that the angles
of the complex quantities originating from the open-loop poles and open-loop zeros tothe test point sare measured in the counterclockwise direction. For example, if G(s)H(s)
is given by
G(s)H(s) =KAs+z
1B
As+p1BAs+p2BAs+p3BAs+p4B1+KAs+z1BAs+z2BpAs+zmB
As+p1BAs+p2BpAs+pnB=0∑G(s)H(s)∑ =1/G(s)H(s) =;180°(2k +1)  (k=0, 1, 2, p)G(s)H(s) =-11+G(s)H(s) =0
272
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Test pointTest point
–p
4
–p
3
–p
2
–p
1
ss
–z
1
f
1
f
1
jv
u
4
u
2
u
3
u
4
u
1
u
3
u
1
u
2
/H9268 0 –p
4
–p
2
A
4
B
1
A
3
A
2
A
1
–p
1
–p
3
–z
1
jv
/H9268 0
(b) (a)
where –p
2
and–p
3
are complex-conjugate poles, then the angle of G(s)H(s) is
wheref
1
,u
1
,u
2
,u
3
,andu
4
are measured counterclockwise as shown in Figures 6–2(a)
and (b). The magnitude of G(s)H(s) for this system is
where A
1
,A
2
,A
3
,A
4
, and B
1
are the magnitudes of the complex quantities s+p
1
,
s+p
2
, s+p
3
, s+p
4
,ands+z
1
,respectively, as shown in Figure 6–2(a).
Note that, because the open-loop complex-conjugate poles and complex-conjugate
zeros, if any, are always located symmetrically about the real axis, the root loci are always
symmetrical with respect to this axis.Therefore, we only need to construct the upper half
of the root loci and draw the mirror image of the upper half in the lower-half splane.
Illustrative Examples. In what follows, two illustrative examples for constructing
root-locus plots will be presented. Although computer approaches to the construction
of the root loci are easily available, here we shall use graphical computation, combined
with inspection, to determine the root loci upon which the roots of the characteristic
equation of the closed-loop system must lie. Such a graphical approach will enhance
understanding of how the closed-loop poles move in the complex plane as the open-
loop poles and zeros are moved.Although we employ only simple systems for illustrative
purposes, the procedure for finding the root loci is no more complicated for higher-
order systems.
Because graphical measurements of angles and magnitudes are involved in the analy-
sis, we find it necessary to use the same divisions on the abscissa as on the ordinate axis
when sketching the root locus on graph paper.∑G(s)H(s)∑ =KB
1
A
1
 
A
2
 
A
3
 
A
4
/
G(s)H(s)
=f
1
-u
1
-u
2
-u
3
-u
4
Figure 6–2
(a) and (b) Diagrams
showing angle
measurements from
open-loop poles and
open-loop zero to
test point s.
Openmirrors.com
Section 6–2 / Root-Locus Plots
273
R(s) C(s) K
s(s+ 1) (s+ 2)
+–
Figure 6–3
Control system.
EXAMPLE 6–1
Consider the negative feedback system shown in Figure 6–3. (We assume that the value of gain
Kis nonnegative.) For this system,
Let us sketch the root-locus plot and then determine the value of Ksuch that the damping ratio
zof a pair of dominant complex-conjugate closed-loop poles is 0.5.
For the given system, the angle condition becomes
The magnitude condition is
A typical procedure for sketching the root-locus plot is as follows:
1.Determine the root loci on the real axis. The first step in constructing a root-locus plot is to
locate the open-loop poles, s=0, s=–1, ands=–2, in the complex plane. (There are no open-
loop zeros in this system.) The locations of the open-loop poles are indicated by crosses. (The lo-
cations of the open-loop zeros in this book will be indicated by small circles.) Note that the starting
points of the root loci (the points corresponding to K=0 ) are open-loop poles. The number of
individual root loci for this system is three, which is the same as the number of open-loop poles.
To determine the root loci on the real axis, we select a test point, s.If the test point is on the
positive real axis, then
This shows that the angle condition cannot be satisfied. Hence, there is no root locus on the positive
real axis. Next, select a test point on the negative real axis between 0 and –1.Then
Thus
and the angle condition is satisfied.Therefore, the portion of the negative real axis between 0 and
–1forms a portion of the root locus. If a test point is selected between –1and–2,then
and
-
/
s
-
/
s+1
-
/
s+2
=-360°
/
s
=
/
s+1
=180°,
  
/
s+2
=0°-
/
s
-
/
s+1
-
/
s+2
=-180°
/
s
=180°,
  
/
s+1
=
/
s+2
=0°
/
s
=
/
s+1
=
/
s+2
=0°∑G(s)∑ =
2
K
s(s+1)(s +2)
2
=1 =;180°(2k +1)
  
(k=0, 1, 2, p) =-
/
s
-
/
s+1
-
/
s+2
 
/
G(s)
=
n
K
s(s+1)(s +2)
G(s) =K
s(s+1)(s +2),
  
H(s) =1
Openmirrors.com
274
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
It can be seen that the angle condition is not satisfied. Therefore, the negative real axis from –1
to–2is not a part of the root locus. Similarly, if a test point is located on the negative real axis from
–2to–q, the angle condition is satisfied. Thus, root loci exist on the negative real axis between
0 and –1and between –2and–q.
2.Determine the asymptotes of the root loci. The asymptotes of the root loci as sapproaches
infinity can be determined as follows: If a test point sis selected very far from the origin, then
and the angle condition becomes
or
Since the angle repeats itself as kis varied, the distinct angles for the asymptotes are determined
as 60°, –60°, and 180°. Thus, there are three asymptotes. The one having the angle of 180° is the
negative real axis.
Before we can draw these asymptotes in the complex plane, we must find the point where
they intersect the real axis. Since
if a test point is located very far from the origin, then G(s) may be written as
For large values of s, this last equation may be approximated by
(6–5)
A root-locus diagram of G(s) given by Equation (6–5) consists of three straight lines.This can be
seen as follows: The equation of the root locus is
or
which can be written as
 
/
s+1
=;60°(2k +1) -3
/
s+1
=;180°(2k +1) 
n
K
(s+1)
3
=;180°(2k +1)G(s)/H11216K
(s+1)
3
G(s) =K
s
3
+3s
2
+pG(s) =K
s(s+1)(s +2)Angles of asymptotes =;180°(2k +1)
3
  
(k=0, 1, 2, p)-3
/
s
=;180°(2k +1)
  
(k=0, 1, 2, p)lim
sSq
G(s) =lim
sSq
K
s(s+1)(s +2)=lim
sSq
K
s
3
Openmirrors.com
Section 6–2 / Root-Locus Plots 275jv
sv= 0
–1
–j3j3
s + 1 –  
3v=0
s + 1 +  
3v=00
Figure 6–4
Three asymptotes.By substituting s=s+jvinto this last equation, we obtain
or
Taking the tangent of both sides of this last equation,
which can be written as
These three equations represent three straight lines, as shown in Figure 6–4.The three straight lines
shown are the asymptotes. They meet at point s=–1. Thus, the abscissa of the intersection of
the asymptotes and the real axis is obtained by setting the denominator of the right-hand side
of Equation (6–5) equal to zero and solving for s.The asymptotes are almost parts of the root loci
in regions very far from the origin.
3.Determine the breakaway point. To plot root loci accurately, we must find the breakaway
point, where the root-locus branches originating from the poles at 0 and –1break away (as Kis
increased) from the real axis and move into the complex plane.The breakaway point corresponds
to a point in the splane where multiple roots of the characteristic equation occur.
A simple method for finding the breakaway point is available. We shall present this method
in the following: Let us write the characteristic equation as
(6–6) f(s) =B(s) +KA(s) =0 s+1-v
13=0,  s+1+v
13=0,  v=0 v
s+1=13,  -13,  0 tan-1v
s+1=60°,  -60°,  0° /s+jv+1=;60°(2k +1)
276
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
where A(s) andB(s) do not contain K. Note that f(s)=0 has multiple roots at points where
This can be seen as follows: Suppose that f(s) has multiple roots of order r, where .Then f(s)
may be written as
Now we differentiate this equation with respect to sand evaluate df(s)/ds ats=s
1
.Then we get
(6–7)
This means that multiple roots of f(s) will satisfy Equation (6–7). From Equation (6–6), we
obtain
(6–8)
where
The particular value of Kthat will yield multiple roots of the characteristic equation is obtained
from Equation (6–8) as
If we substitute this value of Kinto Equation (6–6), we get
or
(6–9)
If Equation (6–9) is solved for s, the points where multiple roots occur can be obtained. On the
other hand, from Equation (6–6) we obtain
and
IfdK/dsis set equal to zero, we get the same equation as Equation (6–9). Therefore, the break-
away points can be simply determined from the roots of
It should be noted that not all the solutions of Equation (6–9) or of dK/ds=0 correspond to
actual breakaway points. If a point at which dK/ds=0 is on a root locus, it is an actual breakaway
or break-in point. Stated differently, if at a point at which dK/ds=0 the value of Ktakes a real
positive value, then that point is an actual breakaway or break-in point.dK
ds=0dK
ds=-B¿(s)A(s) -B(s)A ¿(s)
A
2
(s)K=-B(s)
A(s)B(s)A ¿(s)-B¿(s)A(s) =0f(s) =B(s) -B¿(s)
A¿(s)A(s) =0K=-B¿(s)
A¿(s)A¿(s)=dA(s)
ds,
  
B¿(s)=dB(s)
dsdf(s)
ds=B¿(s)+KA¿(s)=0df(s)
ds
2
s=s
1
=0f(s) =As-s
1
B
r
As-s
2
BpAs-s
n
Br/H113502df(s)
ds=0
Openmirrors.com
Section 6–2 / Root-Locus Plots 277For the present example, the characteristic equation G(s)+1=0 is given by
or
By setting dK/ds=0, we obtain
or
Since the breakaway point must lie on a root locus between 0 and –1,it is clear that s=–0.4226
corresponds to the actual breakaway point. Point s=–1.5774 is not on the root locus. Hence, this
point is not an actual breakaway or break-in point. In fact, evaluation of the values of Kcorre-
sponding to s=–0.4226 ands=–1.5774 yields
4.Determine the points where the root loci cross the imaginary axis. These points can be found
by use of Routh’s stability criterion as follows: Since the characteristic equation for the present
system is
the Routh array becomes
The value of Kthat makes the s1term in the first column equal zero is K=6. The crossing points
on the imaginary axis can then be found by solving the auxiliary equation obtained from the s2
row; that is,
which yields
The frequencies at the crossing points on the imaginary axis are thus The gain value
corresponding to the crossing points is K=6.
An alternative approach is to let s=jvin the characteristic equation, equate both the real
part and the imaginary part to zero, and then solve for vandK. For the present system, the char-
acteristic equation, with s=jv,i s
or
Equating both the real and imaginary parts of this last equation to zero, respectively, we obtain
K-3v2=0,  2v-v3=0AK-3v2B+jA2v-v3B=0(jv)3+3(jv)2+2(jv)+K=0v=;12 .s=;j123s2+K=3s2+6=0s3
s2
s1
s01
3
6-K
3
K2
Ks3+3s2+2s+K=0 K=-0.3849,   for s=-1.5774 K=0.3849,    for s=-0.4226s=-0.4226,  s=-1.5774dK
ds=-A3s2+6s+2B=0K=-As3+3s2+2sBK
s(s+1)(s +2)+1=0
278
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
jv
j1
– j1
–1 –2s+ 1
s+ 2
u
2
u
1
u
3
0s
s
Figure 6–5
Construction of root
locus.
jv
j1
– j1
1 –2 –30 s
K= 6K= 6
K= 1.0383
K= 1.0383
K
`
K`
j2
– j260°
–1
Figure 6–6
Root-locus plot.from which
Thus, root loci cross the imaginary axis at and the value of Kat the crossing points is 6.
Also, a root-locus branch on the real axis touches the imaginary axis at v=0 . The value of Kis
zero at this point.
5.Choose a test point in the broad neighborhood of the jvaxis and the origin, as shown in
Figure 6–5, and apply the angle condition. If a test point is on the root loci, then the sum of the
three angles, u
1
+u
2
+u
3
, must be 180°. If the test point does not satisfy the angle condition,
select another test point until it satisfies the condition. (The sum of the angles at the test point will
indicate the direction in which the test point should be moved.) Continue this process and locate
a sufficient number of points satisfying the angle condition.
6.Draw the root loci, based on the information obtained in the foregoing steps, as shown in
Figure 6–6.v=;12
 
,v=;12
,
  
K=6
  
or
  
v=0,
  
K=0
Openmirrors.com
Section 6–2 / Root-Locus Plots 2797.Determine a pair of dominant complex-conjugate closed-loop poles such that the damping
ratiozis 0.5. Closed-loop poles with z=0.5 lie on lines passing through the origin and making
the angles with the negative real axis. From Figure 6–6, such closed-loop poles having z=0.5 are obtained as follows:
The value of Kthat yields such poles is found from the magnitude condition as follows:
Using this value of K, the third pole is found at s=–2.3326.
Note that, from step 4, it can be seen that for K=6 the dominant closed-loop poles lie on the
imaginary axis at With this value of K, the system will exhibit sustained oscillations.
For K>6, the dominant closed-loop poles lie in the right-half splane, resulting in an unstable
system.
Finally, note that, if necessary, the root loci can be easily graduated in terms of Kby use of the
magnitude condition. We simply pick out a point on a root locus, measure the magnitudes of thethree complex quantities s, s+1, ands+2, and multiply these magnitudes; the product is equal
to the gain value Kat that point, or
Graduation of the root loci can be done easily by use of MATLAB. (See Section 6–3.)
EXAMPLE 6–2 In this example, we shall sketch the root-locus plot of a system with complex-conjugate open-
loop poles. Consider the negative feedback system shown in Figure 6–7. For this system,
where K/H113500. It is seen that G(s) has a pair of complex-conjugate poles at
A typical procedure for sketching the root-locus plot is as follows:
1.Determine the root loci on the real axis. For any test point son the real axis, the sum of the
angular contributions of the complex-conjugate poles is 360°, as shown in Figure 6–8.Thus the neteffect of the complex-conjugate poles is zero on the real axis.The location of the root locus on the
real axis is determined from the open-loop zero on the negative real axis.A simple test reveals that
a section of the negative real axis, that between –2and–q, is a part of the root locus. It is noted
that, since this locus lies between two zeros (at s=–2 and s=– q), it is actually a part of two
root loci, each of which starts from one of the two complex-conjugate poles. In other words, tworoot loci break in the part of the negative real axis between –2and–q.s=-1+j12
,  s=-1-j12G(s) =K(s +2)
s2+2s+3,  H(s) =1∑s∑/H11554∑s+1∑/H11554∑s+2∑=Ks=;j12 . =1.0383 K=∑s(s +1)(s +2)∑s=-0.3337 +j0.5780s1=-0.3337 +j0.5780,  s2=-0.3337 -j0.5780;cos-1z=;cos-10.5=;60°
R(s) C(s) K(s+ 2)
s2+ 2s+ 3+–
Figure 6–7
Control system.
280
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
jv
0 s
u9
2
s
–p
2
f
1
f9
1
–z
1
–p
1
u
2
u
1
Figure 6–9
Determination of the
angle of departure.Since there are two open-loop poles and one zero, there is one asymptote, which coincides with
the negative real axis.
2.Determine the angle of departure from the complex-conjugate open-loop poles. The pres-
ence of a pair of complex-conjugate open-loop poles requires the determination of the angle of
departure from these poles. Knowledge of this angle is important, since the root locus near a com-
plex pole yields information as to whether the locus originating from the complex pole migrates
toward the real axis or extends toward the asymptote.
Referring to Figure 6–9, if we choose a test point and move it in the very vicinity of the com-
plex open-loop pole at s=–p
1
,we find that the sum of the angular contributions from the pole
ats=p
2
and zero at s=–z
1
to the test point can be considered remaining the same. If the test
point is to be on the root locus, then the sum of –u
1
, and must be where
k=0 ,1 ,2 , p. Thus, in the example,
or
The angle of departure is then
u
1
=180°-u
2
+f
1
=180°-90°+55°=145°u
1
=180°-u
œ
2
+f
œ
1
=180°-u
2
+f
1
f
œ
1
-Au
1
+u
œ
2
B=;180°(2k +1);180°(2k +1), -u
œ
2
f
œ
1
 
,
jv
–10 –2 s
j2
–j2
Test
pointu
2
u
1
Figure 6–8
Determination of the
root locus on the real
axis.
Openmirrors.com
Section 6–2 / Root-Locus Plots 281jv
j1
– j11 –2 –3 –4 0 sz= 0.7 line
j2
– j2145°
–1
Figure 6–10
Root-locus plot.Since the root locus is symmetric about the real axis, the angle of departure from the pole at
s=–p2is–145°.
3.Determine the break-in point. A break-in point exists where a pair of root-locus branches
coalesces as Kis increased. For this problem, the break-in point can be found as follows: Since
we have
which gives
or
Notice that point s=–3.7320 is on the root locus. Hence this point is an actual break-in point.
(Note that at point s=–3.7320 the corresponding gain value is K=5.4641. ) Since point
s=–0.2680 is not on the root locus, it cannot be a break-in point. (For point s=–0.2680, the cor-
responding gain value is K=–1.4641. )
4.Sketch a root-locus plot, based on the information obtained in the foregoing steps .T o
determine accurate root loci, several points must be found by trial and error between the break-
in point and the complex open-loop poles. (To facilitate sketching the root-locus plot, we should
find the direction in which the test point should be moved by mentally summing up the changeson the angles of the poles and zeros.) Figure 6–10 shows a complete root-locus plot for the systemconsidered.s=-3.7320
  or  s=-0.2680s2+4s+1=0dK
ds=-(2s+2)(s +2)-As2+2s+3B
(s+2)2=0K=-s2+2s+3
s+2
282
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
The value of the gain Kat any point on root locus can be found by applying the magnitude
condition or by use of MATLAB (see Section 6–3). For example, the value of Kat which the
complex-conjugate closed-loop poles have the damping ratio z=0.7 can be found by locating the
roots, as shown in Figure 6–10, and computing the value of Kas follows:
Or use MATLAB to find the value of K. (See Section 6–4.)
It is noted that in this system the root locus in the complex plane is a part of a circle. Such a
circular root locus will not occur in most systems. Circular root loci may occur in systems that in-
volve two poles and one zero, two poles and two zeros, or one pole and two zeros. Even in such
systems, whether circular root loci occur depends on the locations of poles and zeros involved.
To show the occurrence of a circular root locus in the present system, we need to derive the
equation for the root locus. For the present system, the angle condition is
Ifs=s+jvis substituted into this last equation, we obtain
which can be written as
or
Taking tangents of both sides of this last equation using the relationship
(6–10)
we obtain
or
which can be simplified to
or
This last equation is equivalent to
or (s+2)
2
+v
2
=A13
B
2
v=0vC(s+2)
2
+v
2
-3D=02v(s+1)
(s+1)
2
-Av
2
-2B=v
s+2v-12
s+1+v+12
s+1
1-
a
v-12
s+1
ba
v+12
s+1
b
=v
s+2;0
1<v
s+2*0tan
 
c
tan
-1
 
a
v-12
s+1
b
+tan
-1
 
a
v+12
s+1
b
d
=tan
 
c
tan
-1
 
a
v
s+2
b
;180°(2k +1)
d
tan
 
(x;y)=tanx;tany
1<tanxtanytan
-1
 
a
v-12
s+1
b
+tan
-1
 
a
v+12
s+1
b
=tan
-1
 
a
v
s+2
b
;180°(2k +1)tan
-1
 
a
v
s+2
b
-tan
-1
 
a
v-12
s+1
b
-tan
-1
 
a
v+12
s+1
b
=;180°(2k +1)
/
s+2+jv
-
/
s+1+jv-j12
-
/
s+1+jv+j12
=;180°(2k +1)
/
s+2
-
/
s+1-j12
-
/
s+1+j12
=;180°(2k +1)K=
2
As+1-j12
BAs+1+j12
B
s+2
2
s=-1.67+j1.70
=1.34
Openmirrors.com
Section 6–2 / Root-Locus Plots 283These two equations are the equations for the root loci for the present system. Notice that the first
equation, v=0, is the equation for the real axis. The real axis from s=–2 tos=– qcorre-
sponds to a root locus for K/H113500. The remaining part of the real axis corresponds to a root locus
when Kis negative. (In the present system, Kis nonnegative.) (Note that K< 0 corresponds to
the positive-feedback case.) The second equation for the root locus is an equation of a circle withcenter at s=–2, v=0 and the radius equal to That part of the circle to the left of the
complex-conjugate poles corresponds to a root locus for K/H113500. The remaining part of the circle
corresponds to a root locus when Kis negative.
It is important to note that easily interpretable equations for the root locus can be derived for
simple systems only. For complicated systems having many poles and zeros, any attempt to deriveequations for the root loci is discouraged. Such derived equations are very complicated and theirconfiguration in the complex plane is difficult to visualize.
General Rules for Constructing Root Loci. For a complicated system with many
open-loop poles and zeros, constructing a root-locus plot may seem complicated, butactually it is not difficult if the rules for constructing the root loci are applied. By locat-ing particular points and asymptotes and by computing angles of departure from com-plex poles and angles of arrival at complex zeros, we can construct the general form ofthe root loci without difficulty.
We shall now summarize the general rules and procedure for constructing the root
loci of the negative feedback control system shown in Figure 6–11.
First, obtain the characteristic equation
Then rearrange this equation so that the parameter of interest appears as the multiply-
ing factor in the form
(6–11)
In the present discussions, we assume that the parameter of interest is the gain K, where
K>0. (IfK<0, which corresponds to the positive-feedback case, the angle condi-
tion must be modified. See Section 6–4.) Note, however, that the method is still appli-cable to systems with parameters of interest other than gain. (See Section 6–6.)
1.Locate the poles and zeros of G(s)H(s) on the splane.The root-locus branches start
from open-loop poles and terminate at zeros (finite zeros or zeros at infinity). From the
factored form of the open-loop transfer function, locate the open-loop poles and zerosin the splane.CNote that the open-loop zeros are the zeros of G(s)H(s), while the
closed-loop zeros consist of the zeros of G(s) and the poles of H(s) .D1+KAs+z
1BAs+z2BpAs+zmB
As+p1BAs+p2BpAs+pnB=01+G(s)H(s) =013.
H(s)G(s)C(s) R(s)
+–
Figure 6–11
Control system.
284
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Note that the root loci are symmetrical about the real axis of the splane, because the
complex poles and complex zeros occur only in conjugate pairs.
A root-locus plot will have just as many branches as there are roots of the character-
istic equation. Since the number of open-loop poles generally exceeds that of zeros, the
number of branches equals that of poles. If the number of closed-loop poles is the same
as the number of open-loop poles, then the number of individual root-locus branches
terminating at finite open-loop zeros is equal to the number mof the open-loop zeros.
The remaining n-m branches terminate at infinity ( n-m implicit zeros at infinity)
along asymptotes.
If we include poles and zeros at infinity, the number of open-loop poles is equal
to that of open-loop zeros. Hence we can always state that the root loci start at the
poles of G(s)H(s) and end at the zeros of G(s)H(s), asKincreases from zero to in-
finity, where the poles and zeros include both those in the finite splane and those at
infinity.
2.Determine the root loci on the real axis. Root loci on the real axis are determined
by open-loop poles and zeros lying on it. The complex-conjugate poles and complex-
conjugate zeros of the open-loop transfer function have no effect on the location of the
root loci on the real axis because the angle contribution of a pair of complex-conjugate
poles or complex-conjugate zeros is 360° on the real axis. Each portion of the root
locus on the real axis extends over a range from a pole or zero to another pole or zero.
In constructing the root loci on the real axis, choose a test point on it. If the total num-
ber of real poles and real zeros to the right of this test point is odd, then this point lies
on a root locus. If the open-loop poles and open-loop zeros are simple poles and sim-
ple zeros, then the root locus and its complement form alternate segments along the
real axis.
3.Determine the asymptotes of root loci. If the test point sis located far from the ori-
gin, then the angle of each complex quantity may be considered the same. One open-loop
zero and one open-loop pole then cancel the effects of the other. Therefore, the root
loci for very large values of smust be asymptotic to straight lines whose angles (slopes)
are given by
where number of finite poles of G(s)H(s)
number of finite zeros of G(s)H(s)
Here, k=0 corresponds to the asymptotes with the smallest angle with the real axis.Al-
though kassumes an infinite number of values, as kis increased the angle repeats itself,
and the number of distinct asymptotes is n-m.
All the asymptotes intersect at a point on the real axis. The point at which they do
so is obtained as follows: If both the numerator and denominator of the open-loop trans-
fer function are expanded, the result is
G(s)H(s) =KCs
m
+Az
1
+z
2
+p+z
m
Bs
m-1
+p+z
1
 
z
2
pz
m
D
s
n
+Ap
1
+p
2
+p+p
n
Bs
n-1
+p+p
1
 
p
2
pp
n
 m= n=Angles of asymptotes =;180°(2k +1)
n-m
  
(k=0, 1, 2, p)
Openmirrors.com
Section 6–2 / Root-Locus Plots 285If a test point is located very far from the origin, then by dividing the denominator by
the numerator, it is possible to write G(s)H(s) as
or
(6–12)
The abscissa of the intersection of the asymptotes and the real axis is then obtained by
setting the denominator of the right-hand side of Equation (6–12) equal to zero andsolving for s,or
(6–13)
[Example 6–1 shows why Equation (6–13) gives the intersection.] Once this intersection
is determined, the asymptotes can be readily drawn in the complex plane.
It is important to note that the asymptotes show the behavior of the root loci for
A root-locus branch may lie on one side of the corresponding asymptote or may
cross the corresponding asymptote from one side to the other side.
4.Find the breakaway and break-in points. Because of the conjugate symmetry of
the root loci, the breakaway points and break-in points either lie on the real axis oroccur in complex-conjugate pairs.
If a root locus lies between two adjacent open-loop poles on the real axis, then there
exists at least one breakaway point between the two poles. Similarly, if the root locus liesbetween two adjacent zeros (one zero may be located at –q) on the real axis, then there
always exists at least one break-in point between the two zeros. If the root locus lies be-tween an open-loop pole and a zero (finite or infinite) on the real axis, then there mayexist no breakaway or break-in points or there may exist both breakaway and break-inpoints.
Suppose that the characteristic equation is given by
The breakaway points and break-in points correspond to multiple roots of the charac-
teristic equation. Hence, as discussed in Example 6–1, the breakaway and break-in pointscan be determined from the roots of
(6–14)
where the prime indicates differentiation with respect to s. It is important to note that
the breakaway points and break-in points must be the roots of Equation (6–14), but notall roots of Equation (6–14) are breakaway or break-in points. If a real root of Equation(6–14) lies on the root-locus portion of the real axis, then it is an actual breakaway orbreak-in point. If a real root of Equation (6–14) is not on the root-locus portion of thereal axis, then this root corresponds to neither a breakaway point nor a break-in point.dK
ds=-B¿(s)A(s) -B(s)A ¿(s)
A2(s)=0B(s) +KA(s) =0∑s∑/H112711.s=-Ap1+p2+p+pnB-Az1+z2+p+zmB
n-mG(s)H(s) =K
cs+Ap1+p2+p+pnB-Az1+z2+p+zmB
n-mdn-mG(s)H(s) =K
sn-m+CAp1+p2+p+pnB-Az1+z2+p+zmBDsn-m-1+p
286
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
jv
s
Angle of
departure
u
2
u
1
f
0
Figure 6–12
Construction of the
root locus. [Angle of
departure
=180° -
(
u
1
+u
2
)
+f.]
If two roots s=s
1
ands=–s
1
of Equation (6–14) are a complex-conjugate pair and if
it is not certain whether they are on root loci, then it is necessary to check the corre-
sponding Kvalue. If the value of Kcorresponding to a root s=s
1
of is pos-
itive, point s=s
1
is an actual breakaway or break-in point. (Since Kis assumed to be
nonnegative, if the value of Kthus obtained is negative, or a complex quantity, then
point s=s
1
is neither a breakaway nor a break-in point.)
5.Determine the angle of departure (angle of arrival) of the root locus from a com-
plex pole (at a complex zero). To sketch the root loci with reasonable accuracy, we must
find the directions of the root loci near the complex poles and zeros. If a test point is cho-
sen and moved in the very vicinity of a complex pole (or complex zero), the sum of the
angular contributions from all other poles and zeros can be considered to remain the
same. Therefore, the angle of departure (or angle of arrival) of the root locus from a
complex pole (or at a complex zero) can be found by subtracting from 180° the sum of
all the angles of vectors from all other poles and zeros to the complex pole (or complex
zero) in question, with appropriate signs included.
Angle of departure from a complex pole =180°
–(sum of the angles of vectors to a complex pole in question from other poles)
±(sum of the angles of vectors to a complex pole in question from zeros)
Angle of arrival at a complex zero =180°
–(sum of the angles of vectors to a complex zero in question from other zeros)
±(sum of the angles of vectors to a complex zero in question from poles)
The angle of departure is shown in Figure 6–12.
6.Find the points where the root loci may cross the imaginary axis. The points where
the root loci intersect the jvaxis can be found easily by (a) use of Routh’s stability cri-
terion or (b) letting s=jvin the characteristic equation, equating both the real part and
the imaginary part to zero, and solving for vandK.The values of vthus found give the
frequencies at which root loci cross the imaginary axis. The Kvalue corresponding to
each crossing frequency gives the gain at the crossing point.
7.Taking a series of test points in the broad neighborhood of the origin of the splane,
sketch the root loci. Determine the root loci in the broad neighborhood of the jvaxis
and the origin. The most important part of the root loci is on neither the real axis nor
the asymptotes but is in the broad neighborhood of the jvaxis and the origin.The shapedK /H20862ds=0
Openmirrors.com
Section 6–2 / Root-Locus Plots 287of the root loci in this important region in the splane must be obtained with reasonable
accuracy. (If accurate shape of the root loci is needed, MATLAB may be used rather thanhand calculations of the exact shape of the root loci.)
8.Determine closed-loop poles. A particular point on each root-locus branch will be
a closed-loop pole if the value of Kat that point satisfies the magnitude condition. Con-
versely, the magnitude condition enables us to determine the value of the gain Kat any
specific root location on the locus. (If necessary, the root loci may be graduated in termsofK. The root loci are continuous with K.)
The value of Kcorresponding to any point son a root locus can be obtained using
the magnitude condition, or
This value can be evaluated either graphically or analytically. (MATLAB can be used
for graduating the root loci with K. See Section 6–3.)
If the gain Kof the open-loop transfer function is given in the problem, then by ap-
plying the magnitude condition, we can find the correct locations of the closed-looppoles for a given Kon each branch of the root loci by a trial-and-error approach or by
use of MATLAB, which will be presented in Section 6–3.
Comments on the Root-Locus Plots. It is noted that the characteristic equa-
tion of the negative feedback control system whose open-loop transfer function is
is an nth-degree algebraic equation in s. If the order of the numerator of G(s)H(s) is
lower than that of the denominator by two or more (which means that there are two ormore zeros at infinity), then the coefficient a
1is the negative sum of the roots of the
equation and is independent of K. In such a case, if some of the roots move on the locus
toward the left as Kis increased, then the other roots must move toward the right as K
is increased. This information is helpful in finding the general shape of the root loci.
It is also noted that a slight change in the pole–zero configuration may cause signif-
icant changes in the root-locus configurations. Figure 6–13 demonstrates the fact that aslight change in the location of a zero or pole will make the root-locus configurationlook quite different.G(s)H(s) =KAs
m+b1 sm-1+p+bmB
sn+a1 sn-1+p+an  (n/H11350m)K=product of lengths between point s to poles
product of lengths between point s to zeros
jv
sjv
s
Figure 6–13
Root-locus plots.
288
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
C(s) R(s)
(a)1
s
K
(s+ 1) (s+ 2)
C(s) R(s)
(c)1
s+ 1
K
s(s+ 1) (s+ 2)
K
s(s+ 2)
s+ 1
H(s)
C(s) R(s)
(b)
+–
+–
+–
G(s)
+–
Figure 6–14
(a) Control system
with velocity
feedback; (b) and 
(c) modified block
diagrams.
Cancellation of Poles of G(s) with Zeros of H(s).It is important to note that
if the denominator of G(s) and the numerator of H(s) involve common factors, then the
corresponding open-loop poles and zeros will cancel each other, reducing the degree of
the characteristic equation by one or more. For example, consider the system shown in
Figure 6–14(a). (This system has velocity feedback.) By modifying the block diagram of
Figure 6–14(a) to that shown in Figure 6–14(b), it is clearly seen that G(s) and H(s)
have a common factor s+1. The closed-loop transfer function C(s)/R(s) is
The characteristic equation is
Because of the cancellation of the terms (s+1) appearing in G(s) andH(s), however,
we have
The reduced characteristic equation is
The root-locus plot of G(s)H(s) does not show all the roots of the characteristic equa-
tion, only the roots of the reduced equation.
To obtain the complete set of closed-loop poles, we must add the canceled pole of
G(s)H(s) to those closed-loop poles obtained from the root-locus plot of G(s)H(s).
The important thing to remember is that the canceled pole of G(s)H(s) is a closed-loop
pole of the system, as seen from Figure 6–14(c).s(s+2)+K=0 =s(s+2)+K
s(s+2) 1+G(s)H(s) =1+K(s +1)
s(s+1)(s +2)Cs(s+2)+KD(s+1)=0C(s)
R(s)=K
s(s+1)(s +2)+K(s +1)
Openmirrors.com
Section 6–2 / Root-Locus Plots 289Typical Pole–Zero Configurations and Corresponding Root Loci. In summa-
rizing, we show several open-loop pole–zero configurations and their correspondingroot loci in Table 6–1. The pattern of the root loci depends only on the relative separa-tion of the open-loop poles and zeros. If the number of open-loop poles exceeds thenumber of finite zeros by three or more, there is a value of the gain Kbeyond which root
loci enter the right-half splane, and thus the system can become unstable.A stable sys-
tem must have all its closed-loop poles in the left-half splane.
Table 6–1 Open-Loop Pole–Zero Configurations 
and the Corresponding Root Loci
jv
sjv
sjv
s
jv
sjv
sjv
s
jv
sjv
sjv
s
jv
sjv
sjv
s
290
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Note that once we have some experience with the method, we can easily evaluate the
changes in the root loci due to the changes in the number and location of the open-loop
poles and zeros by visualizing the root-locus plots resulting from various pole–zero
configurations.
Summary. From the preceding discussions, it should be clear that it is possible to
sketch a reasonably accurate root-locus diagram for a given system by following simple
rules. (The reader should study the various root-locus diagrams shown in the solved
problems at the end of the chapter.) At preliminary design stages, we may not need the
precise locations of the closed-loop poles. Often their approximate locations are all that
is needed to make an estimate of system performance. Thus, it is important that the
designer have the capability of quickly sketching the root loci for a given system.
6–3 PLOTTING ROOT LOCI WITH MATLAB
In this section we present the MATLAB approach to the generation of root-locus plots
and finding relevant information from the root-locus plots.
Plotting Root Loci with MATLAB. In plotting root loci with MATLAB we
deal with the system equation given in the form of Equation (6–11), which may be
written as
where num is the numerator polynomial and den is the denominator polynomial.
That is,
Note that both vectors num and den must be written in descending powers of s.
A MATLAB command commonly used for plotting root loci is
rlocus(num,den)
Using this command, the root-locus plot is drawn on the screen.The gain vector Kis au-
tomatically determined. (The vector Kcontains all the gain values for which the closed-
loop poles are to be computed.)
For the systems defined in state space, rlocus(A,B,C,D) plots the root locus of the
system with the gain vector automatically determined.
Note that commands
rlocus(num,den,K)     and     rlocus(A,B,C,D,K)
use the user-supplied gain vector K. =s
n
+Ap
1
+p
2
+p+p
n
Bs
n-1
+p+p
1
 
p
2
 p p
n
 den =As+p
1
BAs+p
2
BpAs+p
n
B =s
m
+Az
1
+z
2
+p+z
m
Bs
m-1
+p+z
1
 
z
2
 p z
m
 num =As+z
1
BAs+z
2
BpAs+z
m
B1+Knum
den=0
Openmirrors.com
Section 6–3 / Plotting Root Loci with MATLAB 291K(s+ 3)
s(s+ 1)(s2+ 4s+ 16)+–
Figure 6–15
Control system.If it is desired to plot the root loci with marks 'o'or'x', it is necessary to use the fol-
lowing command:
r = rlocus(num,den)
plot(r,'o')     or     plot(r,'x')
Plotting root loci using marks oorxis instructive, since each calculated closed-loop pole
is graphically shown; in some portion of the root loci those marks are densely placed andin another portion of the root loci they are sparsely placed. MATLAB supplies its own setof gain values used to calculate a root-locus plot. It does so by an internal adaptive step-size routine.Also, MATLAB uses the automatic axis-scaling feature of the plotcommand.
EXAMPLE 6–3
Consider the system shown in Figure 6–15. Plot root loci with a square aspect ratio so that a line
with slope 1 is a true 45° line. Choose the region of root-locus plot to be
where xandyare the real-axis coordinate and imaginary-axis coordinate, respectively.
To set the given plot region on the screen to be square, enter the command
v = [-6  6  -6  6]; axis (v); axis('square')
With this command, the region of the plot is as specified and a line with slope 1 is at a true 45°,not skewed by the irregular shape of the screen.
For this problem, the denominator is given as a product of first- and second-order terms. So
we must multiply these terms to get a polynomial in s.The multiplication of these terms can be
done easily by use of the convolution command, as shown next.
Define
a = s (s + 1): a = [1   1   0]
b = s2+ 4s + 16: b = [1   4   16]
Then we use the following command:
c = conv(a, b)
Note that conv(a, b) gives the product of two polynomials aandb. See the following computer output:-6/H11349x/H113496,  -6/H11349y/H113496
a = [1  1   0];
b = [1  4  16];c = conv (a,b)
c =
1  5  20  16  0
The denominator polynomial is thus found to be
den = [1  5  20  16  0]
292
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
0 −2
Real Axis
Imag Axis
6 4 2 −4 −60
−26
4
2
−4
−6Root-Locus Plot of G(s) = K(s+ 3)/[s(s+ 1)(s
2
+ 4s + 16)]
Figure 6–16
Root-locus plot.
MATLAB Program 6–1
% --------- Root-locus plot ---------
num = [1   3];
den = [1   5  20  16   0];
rlocus(num,den)
v = [-6  6  -6  6];
axis(v); axis('square')
grid;
title ('Root-Locus Plot of G(s) = K(s + 3)/[s(s + 1)(s^2 + 4s + 16)]')
To find the complex-conjugate open-loop poles (the roots of s
2
+4s+16=0 ), we may enter
theroots command as follows:
Note that in MATLAB Program 6–1, instead of
den = [1  5  20  16  0]
we may enter
den = conv ([1  1  0], [1  4  16])
The results are the same.
r = roots(b)
r =
–2.0000 + 3.464li
–2.0000 - 3.464li
Thus, the system has the following open-loop zero and open-loop poles:
Open-loop zero: s=–3
Open-loop poles: s=0, s=–1, s=–2 ;j3.4641
MATLAB Program 6–1 will plot the root-locus diagram for this system. The plot is shown in
Figure 6–16.
Openmirrors.com
Section 6–3 / Plotting Root Loci with MATLAB 293EXAMPLE 6–4 Consider the negative feedback system whose open-loop transfer function G(s)H(s) is
There are no open-loop zeros. Open-loop poles are located at s=–0.3+j3.1480, 
s=–0.3-j3.1480, s=–0.5, ands=0.
Entering MATLAB Program 6–2 into the computer, we obtain the root-locus plot shown in
Figure 6–17. =K
s4+1.1s3+10.3s2+5s G(s)H(s) =K
s(s+0.5)As2+0.6s +10B
MATLAB Program 6–2
% --------- Root-locus plot ---------num = [1];
den = [1  1.1  10.3  5  0];r = rlocus(num,den);plot(r,'o')v = [-6  6  -6  6]; axis(v)gridtitle('Root-Locus Plot of G(s) = K/[s(s + 0.5)(s^2 + 0.6s + 10)]')xlabel('Real Axis')ylabel('Imag Axis')
Real Axis–6 –4 6 4 2 –2 0Imag Axis6
–24
–62
0
–4Root-Locus Plot of G(s)=K/[s(s+0.5)( s2+0.6s+10)]
Figure 6–17
Root-locus plot.Notice that in the regions near x=–0.3, y=2.3 andx=–0.3, y=–2.3 two loci approach
each other. We may wonder if these two branches should touch or not. To explore this situation,we may plot the root loci using smaller increments of Kin the critical region.
294
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Real Axis–4 –2
–3
4 2
1
3
–1
0
Imag Axis
4
–1
3
–3
–4
2
0
1
–2
Root-Locus Plot of G(s)= K/[s(s+0.5)( s
2
+0.6s+10)]
Figure 6–18
Root-locus plot.
MATLAB Program 6–3
% --------- Root-locus plot ---------
num = [1];
den = [1  1.1  10.3  5  0];
K1 = 0:0.2:20;
K2 = 20:0.1:30;
K3 = 30:5:1000;
K = [K1  K2  K3];
r = rlocus(num,den,K);
plot(r, 'o')
v = [-4  4  -4  4]; axis(v)
grid
title('Root-Locus Plot of G(s) = K/[s(s + 0.5)(s^2 + 0.6s + 10)]')
xlabel('Real Axis')
ylabel('Imag Axis')
By a conventional trial-and-error approach or using the command rlocfind to be presented
later in this section, we find the particular region of interest to be 20 /H11349K/H1134930. By entering
MATLAB Program 6–3, we obtain the root-locus plot shown in Figure 6–18. From this plot, it
is clear that the two branches that approach in the upper half-plane (or in the lower half-plane)
do not touch.
EXAMPLE 6–5
Consider the system shown in Figure 6–19. The system equations are
 u=r-y y=Cx+Du x#=Ax+Bu
Openmirrors.com
Section 6–3 / Plotting Root Loci with MATLAB 295ru
By
ACD
xx•
/H20848 +–++++
Figure 6–19
Closed-loop controlsystem.
In this example problem we shall obtain the root-locus diagram of the system defined in state
space. As an example let us consider the case where matrices A,B,C, and Dare
(6–15)
The root-locus plot for this system can be obtained with MATLAB by use of the following
command:
rlocus(A,B,C,D)
This command will produce the same root-locus plot as can be obtained by use of the rlocus
(num,den) command, where num and den are obtained from
[num,den] = ss2tf(A,B,C,D)
as follows:
num = [0  0  1  0]
den = [1  14  56  160]
MATLAB Program 6–4 is a program that will generate the root-locus plot as shown in Figure 6–20. C=[1 0 0],    D=[0] A=C0
0
-1601
0
-560
1
-14S,   B=C0
1
-14S
MATLAB Program 6–4
% --------- Root-locus plot ---------A = [0  1  0;0  0  1;-160  -56  -14];
B = [0;1;-14];C = [1  0  0];D = [0];K = 0:0.1:400;rlocus(A,B,C,D,K);v = [-20  20  -20  20]; axis(v)gridtitle('Root-Locus Plot of System Defined in State Space')
296
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
0jv jv
v
n
v
d
f
s 0 s0.2
0.20.5
0.50.7
0.70.8
0.8z = 0.9
z = 0.9
z = 0z /H11021 0
z /H11021 0z /H11091 1
(a) (b)
Figure 6–21
(a) Complex poles;
(b) lines of constant
damping ratio z.
Real Axis–20 –15 20 01 5 –10
–5
5
10
Imag Axis
20
–5
–20–1015
0
–15
10
5Root-Locus Plot of System Defined in State Space
Figure 6–20
Root-locus plot of
system defined in
state space, where A,
B,C, and Dare as
given by Equation
(6–15).
Constant ZLoci and Constant V
n
Loci. Recall that in the complex plane the
damping ratio zof a pair of complex-conjugate poles can be expressed in terms of the
anglef, which is measured from the negative real axis, as shown in Figure 6–21(a) with
In other words, lines of constant damping ratio zare radial lines passing through the
origin as shown in Figure 6–21(b). For example, a damping ratio of 0.5 requires that
the complex-conjugate poles lie on the lines drawn through the origin making angles
of;60° with the negative real axis. (If the real part of a pair of complex-conjugate
poles is positive, which means that the system is unstable, the corresponding zis
negative.) The damping ratio determines the angular location of the poles, while thez=cosf
Openmirrors.com
Section 6–3 / Plotting Root Loci with MATLAB 297distance of the pole from the origin is determined by the undamped natural frequen-
cy vn. The constant vnloci are circles.
To draw constant zlines and constant vncircles on the root-locus diagram with
MATLAB, use the command sgrid .
Plotting Polar Grids in the Root-Locus Diagram. The command
sgrid
overlays lines of constant damping ratio ( z=0 ~ 1 with 0.1 increment) and circles of
constant vnon the root-locus plot. See MATLAB Program 6–5 and the resulting diagram
shown in Figure 6–22.
MATLAB Program 6–5
sgrid
v = [-3  3  -3  3]; axis(v); axis('square')title('Constant \zeta Lines and Constant \omega_n Circles')xlabel('Real Axis')ylabel('Imag Axis')
If only particular constant zlines (such as the z=0.5 line and z=0.707 line) and
particular constant vncircles (such as the vn=0.5 circle,vn=1 circle, and vn=2 cir-
cle) are desired, use the following command:
sgrid([0.5,  0.707],  [0.5,  1,  2])
If we wish to overlay lines of constant zand circles of constant vnas given above to a
root-locus plot of a negative feedback system with
num = [0  0  0  1]
den = [1  4  5  0]
3 2 1 0 −3 −2 −1013
2
−1
−3−2
Real AxisConstant z Lines and Constant vn CirclesImag Axis2
1
210.16 0.34 0.5 0.64
0.16 0.34 0.5 0.640.76
0.86
0.94
0.985
0.760.860.940.985
Figure 6–22
Constant zlines and
constant vncircles.
298
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
0.5
0.707
0.50.707ω
n
 = 1
ω
n
 = 0.5
ω
n
 = 2
−1−0.5 0 0.5 1 −1.5 −2 −2.5 −300.511.52
−0.5
−1
−1.5
−2
Real AxisRoot-Locus Plot with ζ = 0.5 and 0.707 Lines
andω
n
= 0.5, 1, and 2 Circles
Imag Axis
0.5 1 2
Figure 6–23
Constant zlines and
constant v
n
circles
superimposed on a
root-locus plot.
MATLAB Program 6–6
num = [1];
den = [1  4  5  0];
K = 0:0.01:1000;
r = rlocus(num,den,K);
plot(r,'-'); v = [-3  1  -2  2]; axis(v); axis('square')
sgrid([0.5,0.707], [0.5,1,2])
grid
title('Root-Locus Plot with \zeta = 0.5 and 0.707 Lines and \omega_n = 0.5,1, and 2 Circles')
xlabel('Real Axis'); ylabel('Imag Axis')
gtext('\omega_n = 2')
gtext('\omega_n = 1')
gtext('\omega_n = 0.5')
% Place 'x' mark at each of 3 open-loop poles.
gtext('x')
gtext('x')
gtext('x')
then enter MATLAB Program 6–6 into the computer. The resulting root-locus plot is
shown in Figure 6–23.
If we want to omit either the entire constant zlines or entire constant v
n
circles, we
may use empty brackets [ ] in the arguments of the sgrid command. For example, if we want
to overlay only the constant damping ratio line corresponding to z=0.5 and no constant
v
n
circles on the root-locus plot, then we may use the command
sgrid(0.5,  [])
Openmirrors.com
Section 6–3 / Plotting Root Loci with MATLAB 299Conditionally Stable Systems. Consider the negative feedback system shown
in Figure 6–24.We can plot the root loci for this system by applying the general rules andprocedure for constructing root loci, or use MATLAB to get root-locus plots. MAT-LAB Program 6–7 will plot the root-locus diagram for the system. The plot is shown inFigure 6–25.R(s) C(s)K(s2+ 2s+4)
s(s+ 4) (s+ 6)(s2+ 1.4s+ 1)+–
Figure 6–24
Control system.
MATLAB Program 6–7
num = [1  2  4];
den = conv(conv([1  4  0],[1  6]), [1  1.4  1]);rlocus(num, den)v = [-7  3  -5  5]; axis(v); axis('square')gridtitle('Root-Locus Plot of G(s) = K(s^2 + 2s + 4)/[s(s + 4)(s + 6)(s^2 + 1.4s + 1)]')text(1.0, 0.55,'K = 12')text(1.0,3.0,'K = 73')text(1.0,4.15,'K = 154')
Real Axis−5−4−3−2−1 −6 −73 02 1Imag Axis
−55
43
2
−3−2−1
−401Root-Locus Plot of G(s) = K(s
2+ 2s+ 4)/[ s(s + 4)( s + 6)( s2 + 1.4 s + 1)]
K= 12K= 73K= 154
Figure 6–25
Root-locus plot ofconditionally stable
system.It can be seen from the root-locus plot of Figure 6–25 that this system is stable only
for limited ranges of the value of K—that is, 0<K<12 and73<K<154. The sys-
tem becomes unstable for 12<K<73 and 154<K. (IfKassumes a value corre-
sponding to unstable operation, the system may break down or may become nonlineardue to a saturation nonlinearity that may exist.) Such a system is called conditionallystable.
300
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
In practice, conditionally stable systems are not desirable. Conditional stability is
dangerous but does occur in certain systems—in particular, a system that has an unsta-
ble feedforward path. Such an unstable feedforward path may occur if the system has a
minor loop. It is advisable to avoid such conditional stability since, if the gain drops be-
yond the critical value for any reason, the system becomes unstable. Note that the ad-
dition of a proper compensating network will eliminate conditional stability. [An addition
of a zero will cause the root loci to bend to the left. (See Section 6–5.) Hence condi-
tional stability may be eliminated by adding proper compensation.]
Nonminimum-Phase Systems. If all the poles and zeros of a system lie in the left-
half splane, then the system is called minimum phase. If a system has at least one pole
or zero in the right-half splane, then the system is called nonminimum phase. The term
nonminimum phase comes from the phase-shift characteristics of such a system when
subjected to sinusoidal inputs.
Consider the system shown in Figure 6–26(a). For this system
This is a nonminimum-phase system, since there is one zero in the right-half splane.
For this system, the angle condition becomes
or
(6–16)
The root loci can be obtained from Equation (6–16). Figure 6–26(b) shows a root-locus
plot for this system. From the diagram, we see that the system is stable if the gain Kis
less than 1/ T
a
.
n
KAT
a
 
s-1B
s(Ts +1)
=0°=;180°(2k+1)
  
(k=0, 1, 2, p)=
n
KAT
a
 
s-1B
s(Ts +1)
+180°
/
G(s)
=
n
-KAT
a
 
s-1B
s(Ts +1)
G(s) =KA1-T
a
 
sB
s(Ts +1)
  
AT
a
70B,
  
H(s) =1
(a) (b)R(s) C(s)
jv
K= 0 K= 0K=`
K `
1
T
a
K=1
T
a
K=
1
T
a
1
T
–sK(1–T
a
s)
s(Ts+ 1)
+–
Figure 6–26
(a) Nonminimum-
phase system;
(b) root-locus plot.
Openmirrors.com
Section 6–3 / Plotting Root Loci with MATLAB 301To obtain a root-locus plot with MATLAB, enter the numerator and denominator
as usual. For example, if T=1 sec and enter the following num andden
in the program:
num = [-0.5  1]
den = [1  1  0]
MATLAB Program 6–8 gives the plot of the root loci shown in Figure 6–27.Ta=0.5 sec,
MATLAB Program 6–8
num = [-0.5  1];
den = [1  1  0];k1 = 0:0.01:30;k2 = 30:1:100;K3 = 100:5:500;K = [k1  k2  k3];rlocus(num,den,K)v = [-2  6  -4  4]; axis(v); axis('square')gridtitle('Root-Locus Plot of G(s) = K(1 - 0.5s)/[s(s + 1)]')% Place 'x' mark at each of 2 open-loop poles.% Place 'o' mark at open-loop zero.gtext('x')gtext('x')gtext('o')Root-Locus Plot of G(s) = K(1− 0.5s)/[s(s + 1)]
Real AxisImag Axis1
−3
−4−2 −1 01234562
−1
−2034
Figure 6–27
Root-locus plot of 
G(s) =K(1 -0.5s)
s(s+1).
Orthogonality of Root Loci and Constant-Gain Loci. Consider the negative
feedback system whose open-loop transfer function is G(s)H(s). In the G(s)H(s) plane,
the loci of constant are circles centered at the origin, and the loci corre-sponding to ( k=0, 1, 2, p) lie on the negative real axis
/G(s)H(s) =;180°(2k +1)∑G(s)H(s)∑ =
302
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
of the G(s)H(s) plane, as shown in Figure 6–28. [Note that the complex plane employed
here is not the splane, but the G(s)H(s) plane.]
The root loci and constant-gain loci in the splane are conformal mappings of the loci
of and of constant in the G(s)H(s) plane.
Since the constant-phase and constant-gain loci in the G(s)H(s) plane are orthog-
onal, the root loci and constant-gain loci in the splane are orthogonal. Figure 6–29(a)
shows the root loci and constant-gain loci for the following system:
G(s) =K(s +2)
s
2
+2s+3,
  
H(s) =1∑G(s)H(s)∑ =
/
G(s)H(s)
=;180°(2k +1)
ReIm
0G(s)H(s) Plane
ReIm
0G(s)H(s) Plane
|G(s)H(s)|= constantG(s)H(s)
=/H11006180° (2k+ 1)
Figure 6–28
Plots of constant-
gain and constant-
phase loci in the
G(s)H(s) plane.
(a) (b)sjv
0K= 6
K= 6j4j6
–j4K= 1
K= 2
K= 1–6 –42 4 6K= 10
K= 0.3 j2
–j2
–j6
K= 0.3K= 0.3
–2 sjv
0j2j3
–j2–3 –21 2j1
–j1
–j3–1
B
CA
Figure 6–29
Plots of root loci and constant-gain loci. (a) System with G(s)=K(s+2)/ As
2
+2s+3B,
H(s)=1; (b) system with G(s)=K/Cs(s+1)(s+2)D,H(s)=1.
Openmirrors.com
Section 6–4 / Root-Locus Plots of Positive Feedback Systems 303Notice that since the pole–zero configuration is symmetrical about the real axis, the
constant-gain loci are also symmetrical about the real axis.
Figure 6–29(b) shows the root loci and constant-gain loci for the system:
Notice that since the configuration of the poles in the splane is symmetrical about the
real axis and the line parallel to the imaginary axis passing through point (s=–1,
v=0), the constant-gain loci are symmetrical about the v=0 line (real axis) and the
s=–1 line.
From Figures 6–29(a) and (b), notice that every point in the splane has the corre-
sponding Kvalue. If we use a command rlocfind (presented next), MATLAB will give
theKvalue of the specified point as well as the nearest closed-loop poles corresponding
to this Kvalue.
Finding the Gain Value Kat an Arbitrary Point on the Root Loci. In MAT-
LAB analysis of closed-loop systems, it is frequently desired to find the gain value Kat
an arbitrary point on the root locus. This can be accomplished by using the followingrlocfind command:
[K, r] = rlocfind(num, den)
The rlocfind command, which must follow an rlocus command, overlays movable x-yco-
ordinates on the screen. Using the mouse, we position the origin of the x-ycoordinates
over the desired point on the root locus and press the mouse button. Then MATLABdisplays on the screen the coordinates of that point, the gain value at that point, and theclosed-loop poles corresponding to this gain value.
If the selected point is not on the root locus, such as point A in Figure 6–29(a), the
rlocfind command gives the coordinates of this selected point, the gain value of thispoint, such as K = 2, and the locations of the closed-loop poles, such as points B and C
corresponding to this Kvalue. [Note that every point on the splane has a gain value. See,
for example, Figures 6–29 (a) and (b).]
6–4 ROOT-LOCUS PLOTS OF POSITIVE FEEDBACK SYSTEMS
Root Loci for Positive-Feedback Systems.* In a complex control system, there
may be a positive-feedback inner loop as shown in Figure 6–30. Such a loop is usuallystabilized by the outer loop. In what follows, we shall be concerned only with the positive-feedback inner loop. The closed-loop transfer function of the inner loop is
The characteristic equation is
(6–17) 1-G(s)H(s) =0C(s)
R(s)=G(s)
1-G(s)H(s)G(s) =K
s(s+1)(s +2),  H(s) =1
* Reference W-4
304
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
C(s)
G
1
(s)
H
1
(s)R(s)
H(s)G(s)
+–
++
Figure 6–30
Control system.
This equation can be solved in a manner similar to the development of the root-locus
method for negative-feedback systems presented in Section 6–2. The angle condition,
however, must be altered.
Equation (6–17) can be rewritten as
which is equivalent to the following two equations:
For the positive-feedback case, the total sum of all angles from the open-loop poles and
zeros must be equal to Thus the root locus follows a 0° locus in contrast to
the 180° locus considered previously. The magnitude condition remains unaltered.
To illustrate the root-locus plot for the positive-feedback system, we shall use the fol-
lowing transfer functions G(s) andH(s) as an example.
The gain Kis assumed to be positive.
The general rules for constructing root loci for negative-feedback systems given in
Section 6–2 must be modified in the following way:
Rule 2 is Modified as Follows: If the total number of real poles and real zeros to the right
of a test point on the real axis is even, then this test point lies on the root locus.
Rule 3 is Modified as Follows:
where number of finite poles of G(s)H(s)
number of finite zeros of G(s)H(s)
Rule 5 is Modified as Follows: When calculating the angle of departure (or angle of ar-
rival) from a complex open-loop pole (or at a complex zero), subtract from 0° the sum
of all angles of the vectors from all the other poles and zeros to the complex pole (or com-
plex zero) in question, with appropriate signs included. m= n=Angles of asymptotes =;k360 °
n-m
  
(k=0, 1, 2, p)G(s) =K(s +2)
(s+3)As
2
+2s+2B
 
,
  
H(s) =10°;k360 °. ∑G(s)H(s)∑ =1 
/
G(s)H(s)
=0°;k360 °
  
(k=0, 1, 2, p)G(s)H(s) =1
Openmirrors.com
Section 6–4 / Root-Locus Plots of Positive Feedback Systems 305Other rules for constructing the root-locus plot remain the same.We shall now apply
the modified rules to construct the root-locus plot.
1.Plot the open-loop poles (s=–1+j, s=–1-j, s=–3) and zero (s=–2) in
the complex plane.As Kis increased from 0 to q, the closed-loop poles start at the
open-loop poles and terminate at the open-loop zeros (finite or infinite), just as inthe case of negative-feedback systems.
2.Determine the root loci on the real axis. Root loci exist on the real axis between
–2and±qand between –3and–q.
3.Determine the asymptotes of the root loci. For the present system,
This simply means that asymptotes are on the real axis.
4.Determine the breakaway and break-in points. Since the characteristic equation is
we obtain
By differentiating Kwith respect to s,we obtain
Note that
Point s=–0.8 is on the root locus. Since this point lies between two zeros (a finite
zero and an infinite zero), it is an actual break-in point. Points do not satisfy the angle condition and, therefore, they are neither breakaway norbreak-in points.
5.Find the angle of departure of the root locus from a complex pole. For the com-
plex pole at s=–1+j, the angle of departure uis
or(The angle of departure from the complex pole at s=–1-j is 72°.)
6.Choose a test point in the broad neighborhood of the jvaxis and the origin and
apply the angle condition. Locate a sufficient number of points that satisfy theangle condition.
Figure 6–31 shows the root loci for the given positive-feedback system.The root loci
are shown with dashed lines and a curve.
Note that if
K7(s+3)As
2+2s+2B
s+22
s=0=3u=-72°u=0°-27°-90°+45°s=-2.35 ;j0.77 =2(s+0.8)(s +2.35 +j0.77)(s +2.35 -j0.77) 2s3+11s2+20s +10=2(s+0.8)As2+4.7s +6.24BdK
ds=2s3+11s2+20s +10
(s+2)2K=(s+3)As2+2s+2B
s+2(s+3)As2+2s+2B-K(s +2)=0Angles of asymptote =;k360 °
3-1=;180°
306
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
–5 –4 –3 –2 –11 2 sjv
0j1j2
–j1
–j2
Figure 6–31
Root-locus plot for the
positive-feedback
system with
G(s)=K(s+2)/
C(s+3)As
2
+2s+2BD,
H(s)=1.
one real root enters the right-half splane. Hence, for values of Kgreater than 3, the sys-
tem becomes unstable. (For K>3, the system must be stabilized with an outer loop.)
Note that the closed-loop transfer function for the positive-feedback system is
given by
To compare this root-locus plot with that of the corresponding negative-feedback sys-
tem, we show in Figure 6–32 the root loci for the negative-feedback system whose closed-
loop transfer function is
Table 6–2 shows various root-locus plots of negative-feedback and positive-feedback
systems. The closed-loop transfer functions are given by
for negative-feedback systems
for positive-feedback systemsC
R=G
1-GH,C
R=G
1+GH,C(s)
R(s)=K(s +2)
(s+3)As
2
+2s+2B+K(s +2) =K(s +2)
(s+3)As
2
+2s+2B-K(s +2) C(s)
R(s)=G(s)
1-G(s)H(s)
–5 –4 –3 –2 –11 2 sjv
0j1j2
j3
–j1
–j3–j2
Figure 6–32
Root-locus plot for the
negative-feedback
system with
G(s)=K(s+2)/
C(s+3)As
2
+2s+2BD,
H(s)=1.
Openmirrors.com
Section 6–4 / Root-Locus Plots of Positive Feedback Systems
307
where GH is the open-loop transfer function. In Table 6–2, the root loci for negative-
feedback systems are drawn with heavy lines and curves, and those for positive-feedback
systems are drawn with dashed lines and curves.
jv
sjv
s
jv
sjv
s
jv
sjv
s
jv
sjv
s
jv
sjv
s
Table 6–2
Root-Locus Plots of Negative-Feedback and Positive-
Feedback Systems
Heavy lines and curves correspond to negative-feedback systems; dashed lines and
curves correspond to positive-feedback systems.
Openmirrors.com
308
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
6–5 ROOT-LOCUS APPROACH TO CONTROL-SYSTEMS DESIGN
Preliminary Design Consideration. In building a control system, we know that
proper modification of the plant dynamics may be a simple way to meet the performance
specifications.This, however, may not be possible in many practical situations because the
plant may be fixed and not modifiable.Then we must adjust parameters other than those
in the fixed plant. In this book, we assume that the plant is given and unalterable.
In practice, the root-locus plot of a system may indicate that the desired performance
cannot be achieved just by the adjustment of gain (or some other adjustable parameter).
In fact, in some cases, the system may not be stable for all values of gain (or other ad-
justable parameter). Then it is necessary to reshape the root loci to meet the perform-
ance specifications.
The design problems, therefore, become those of improving system performance by
insertion of a compensator. Compensation of a control system is reduced to the design
of a filter whose characteristics tend to compensate for the undesirable and unalterable
characteristics of the plant.
Design by Root-Locus Method. The design by the root-locus method is based on re-
shaping the root locus of the system by adding poles and zeros to the system’s open-loop
transfer function and forcing the root loci to pass through desired closed-loop poles in the
splane.The characteristic of the root-locus design is its being based on the assumption that
the closed-loop system has a pair of dominant closed-loop poles.This means that the effects
of zeros and additional poles do not affect the response characteristics very much.
In designing a control system, if other than a gain adjustment (or other parameter
adjustment) is required, we must modify the original root loci by inserting a suitable com-
pensator. Once the effects on the root locus of the addition of poles and/or zeros are fully
understood, we can readily determine the locations of the pole(s) and zero(s) of the com-
pensator that will reshape the root locus as desired. In essence, in the design by the root-
locus method, the root loci of the system are reshaped through the use of a compensator
so that a pair of dominant closed-loop poles can be placed at the desired location.
Series Compensation and Parallel (or Feedback) Compensation. Figures
6–33(a) and (b) show compensation schemes commonly used for feedback control sys-
tems. Figure 6–33(a) shows the configuration where the compensator G
c
(s)is placed in
series with the plant. This scheme is called series compensation.
An alternative to series compensation is to feed back the signal(s) from some ele-
ment(s) and place a compensator in the resulting inner feedback path, as shown in Figure
6–33(b). Such compensation is called parallel compensation orfeedback compensation .
In compensating control systems, we see that the problem usually boils down to a
suitable design of a series or parallel compensator. The choice between series compen-
sation and parallel compensation depends on the nature of the signals in the system,
the power levels at various points, available components, the designer’s experience, eco-
nomic considerations, and so on.
In general, series compensation may be simpler than parallel compensation; however,
series compensation frequently requires additional amplifiers to increase the gain and/or
to provide isolation. (To avoid power dissipation, the series compensator is inserted at the
lowest energy point in the feedforward path.) Note that, in general, the number of com-
ponents required in parallel compensation will be less than the number of components
Openmirrors.com
Section 6–5 / Root-Locus Approach to Control Systems Design 309G1(s) G2(s)
H(s)Gc(s)
(b)+–+–Gc(s) G(s)
H(s)
(a)+–
Figure 6–33
(a) Seriescompensation;(b) parallel or feed-back compensation.
in series compensation, provided a suitable signal is available, because the energy trans-
fer is from a higher power level to a lower level. (This means that additional amplifiersmay not be necessary.)
In Sections 6–6 through 6–9 we first discuss series compensation techniques and then
present a parallel compensation technique using a design of a velocity-feedback controlsystem.
Commonly Used Compensators. If a compensator is needed to meet the per-
formance specifications, the designer must realize a physical device that has the pre-scribed transfer function of the compensator.
Numerous physical devices have been used for such purposes. In fact, many noble and
useful ideas for physically constructing compensators may be found in the literature.
If a sinusoidal input is applied to the input of a network, and the steady-state output
(which is also sinusoidal) has a phase lead, then the network is called a lead network.(The amount of phase lead angle is a function of the input frequency.) If the steady-stateoutput has a phase lag, then the network is called a lag network. In a lag–lead network,both phase lag and phase lead occur in the output but in different frequency regions;phase lag occurs in the low-frequency region and phase lead occurs in the high-frequencyregion.A compensator having a characteristic of a lead network, lag network, or lag–leadnetwork is called a lead compensator, lag compensator, or lag–lead compensator.
Among the many kinds of compensators, widely employed compensators are the
lead compensators, lag compensators, lag–lead compensators, and velocity-feedback(tachometer) compensators. In this chapter we shall limit our discussions mostly to thesetypes. Lead, lag, and lag–lead compensators may be electronic devices (such as circuitsusing operational amplifiers) or RC networks (electrical, mechanical, pneumatic,
hydraulic, or combinations thereof) and amplifiers.
Frequently used series compensators in control systems are lead, lag, and lag–lead
compensators. PID controllers which are frequently used in industrial control systemsare discussed in Chapter 8.
310
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
It is noted that in designing control systems by the root-locus or frequency-response
methods the final result is not unique, because the best or optimal solution may not be pre-
cisely defined if the time-domain specifications or frequency-domain specifications are given.
Effects of the Addition of Poles. The addition of a pole to the open-loop transfer
function has the effect of pulling the root locus to the right, tending to lower the system’s
relative stability and to slow down the settling of the response. (Remember that the ad-
dition of integral control adds a pole at the origin, thus making the system less stable.)
Figure 6–34 shows examples of root loci illustrating the effects of the addition of a pole
to a single-pole system and the addition of two poles to a single-pole system.
Effects of the Addition of Zeros. The addition of a zero to the open-loop trans-
fer function has the effect of pulling the root locus to the left, tending to make the system
more stable and to speed up the settling of the response. (Physically, the addition of a
zero in the feedforward transfer function means the addition of derivative control to
the system.The effect of such control is to introduce a degree of anticipation into the sys-
tem and speed up the transient response.) Figure 6–35(a) shows the root loci for a system
(a)jv
s
(b)jv
s
(c)jv
s
Figure 6–34
(a) Root-locus plot
of a single-pole
system;
(b) root-locus plot of
a two-pole system;
(c) root-locus plot of
a three-pole system.
(a)jv
s
(b)jv
s
(c)jv
s
(d)jv
s
Figure 6–35
(a) Root-locus plot
of a three-pole
system; (b), (c), and
(d) root-locus plots
showing effects of
addition of a zero to
the three-pole
system.
Openmirrors.com
Section 6–6 / Lead Compensation 311that is stable for small gain but unstable for large gain. Figures 6–35(b), (c), and (d) show
root-locus plots for the system when a zero is added to the open-loop transfer function.Notice that when a zero is added to the system of Figure 6–35(a), it becomes stable forall values of gain.
6–6 LEAD COMPENSATION
In Section 6–5 we presented an introduction to compensation of control systems and dis-
cussed preliminary materials for the root-locus approach to control-systems design andcompensation. In this section we shall present control-systems design by use of the leadcompensation technique. In carrying out a control-system design, we place a compen-sator in series with the unalterable transfer function G(s) to obtain desirable behavior.
The main problem then involves the judicious choice of the pole(s) and zero(s) of thecompensator G
c(s)to have the dominant closed-loop poles at the desired location in the
splane so that the performance specifications will be met.
Lead Compensators and Lag Compensators. There are many ways to realize
lead compensators and lag compensators, such as electronic networks using operationalamplifiers, electrical RCnetworks, and mechanical spring-dashpot systems.
Figure 6–36 shows an electronic circuit using operational amplifiers. The transfer
function for this circuit was obtained in Chapter 3 as follows [see Equation (3–36)]:
(6–18)
where
T=R
1 C1 ,  aT=R2 C2 ,  Kc=R4 C1
R3 C2 =Kc a Ts+1
aTs+1=Kcs+1
T
s+1
aT Eo(s)
Ei(s)=R2 R4
R1 R3R1 C1 s+1
R2 C2 s+1=R4 C1
R3 C2s+1
R1 C1
s+1
R2 C2
–
+–
+C1C2
R1R2R3R4
Ei(s)
Eo(s)E(s)Figure 6–36
Electronic circuitthat is a lead network
if and a
lag network ifR
1 C16R2 C2 .R1 C17R2 C2
312
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Notice that
This network has a dc gain of 
From Equation (6–18), we see that this network is a lead network if 
or It is a lag network if The pole-zero configurations of this net-
work when and are shown in Figure 6–37(a) and (b),
respectively.
Lead Compensation Techniques Based on the Root-Locus Approach. The
root-locus approach to design is very powerful when the specifications are given in
terms of time-domain quantities, such as the damping ratio and undamped natural
frequency of the desired dominant closed-loop poles, maximum overshoot, rise time,
and settling time.
Consider a design problem in which the original system either is unstable for all val-
ues of gain or is stable but has undesirable transient-response characteristics. In such a
case, the reshaping of the root locus is necessary in the broad neighborhood of the jv
axis and the origin in order that the dominant closed-loop poles be at desired locations
in the complex plane.This problem may be solved by inserting an appropriate lead com-
pensator in cascade with the feedforward transfer function.
The procedures for designing a lead compensator for the system shown in Figure
6–38 by the root-locus method may be stated as follows:
1.From the performance specifications, determine the desired location for the dom-
inant closed-loop poles.R
1
 
C
1
6R
2
 
C
2
 
R
1
 
C
1
7R
2
 
C
2
 
R
1
 
C
1
6R
2
 
C
2
 
. a61.R
1
 
C
1
7R
2
 
C
2
 
,K
c
 
a=R
2
 
R
4
/H20862AR
1
 
R
3
B.K
c
 
a=R
4
 
C
1
R
3
 
C
2
 R
2
 
C
2
R
1
 
C
1
=R
2
 
R
4
R
1
 
R
3
,
  
a=R
2
 
C
2
R
1
 
C
1
jv
s
(a)1
R
2
C
2
–1
R
1
C
1
–
jv
s
(b)1
R
2
C
2
–1
R
1
C
1
–00
Figure 6–37
Pole-zero
configurations:
(a) lead network;
(b) lag network.
G
c
(s) G(s)
+–
Figure 6–38
Control system.
Openmirrors.com
Section 6–6 / Lead Compensation 3132.By drawing the root-locus plot of the uncompensated system (original system),
ascertain whether or not the gain adjustment alone can yield the desired closed-loop poles. If not, calculate the angle deficiency f.This angle must be contributed
by the lead compensator if the new root locus is to pass through the desired loca-tions for the dominant closed-loop poles.
3.Assume the lead compensator G
c(s)to be
whereaand Tare determined from the angle deficiency. Kcis determined from
the requirement of the open-loop gain.
4.If static error constants are not specified, determine the location of the pole and
zero of the lead compensator so that the lead compensator will contribute the nec-essary angle f. If no other requirements are imposed on the system, try to make
the value of aas large as possible. A larger value of agenerally results in a larger
value of K
v,which is desirable. Note that
5.Determine the value of Kc of the lead compensator from the magnitude condition.
Once a compensator has been designed, check to see whether all performance spec-
ifications have been met. If the compensated system does not meet the performancespecifications, then repeat the design procedure by adjusting the compensator pole andzero until all such specifications are met. If a large static error constant is required, cas-cade a lag network or alter the lead compensator to a lag–lead compensator.
Note that if the selected dominant closed-loop poles are not really dominant, or if
the selected dominant closed-loop poles do not yield the desired result, it will be nec-essary to modify the location of the pair of such selected dominant closed-loop poles.(The closed-loop poles other than dominant ones modify the response obtained from thedominant closed-loop poles alone.The amount of modification depends on the locationof these remaining closed-loop poles.) Also, the closed-loop zeros affect the response ifthey are located near the origin.
EXAMPLE 6–6
Consider the position control system shown in Figure 6–39(a). The feedforward transfer
function is
The root-locus plot for this system is shown in Figure 6–39(b). The closed-loop transfer function
for the system is
=10
(s+0.5+j3.1225 )(s+0.5-j3.1225 )C(s)
R(s)=10
s2+s+10G(s) =10
s(s+1)Kv=lim
sS0sGc(s)G(s) =Kca lim
sS0sGc(s)Gc(s)=Kc a Ts+1
aTs+1=Kcs+1
T
s+1
aT,  (06a61)
314
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
The closed-loop poles are located at
The damping ratio of the closed-loop poles is .The undamped natural fre-
quency of the closed-loop poles is 3.1623 rad /H20862sec. Because the damping ratio is small,
this system will have a large overshoot in the step response and is not desirable.
It is desired to design a lead compensator G
c
(s)as shown in Figure 6–40(a) so that the dom-
inant closed-loop poles have the damping ratio and the undamped natural frequency
The desired location of the dominant closed-loop poles can be determined from
as follows:
s=-1.5;j2.5981=(s+1.5+j2.5981)(s +1.5-j 2.5981)s
2
+2zv
n
s+v
n2
=s
2
+3s+9v
n
=3 rad /H20862sec.z=0.5v
n
=210
=z=(1/H208622)/H20862210
=0.1581s=-0.5;j3.1225
R(s) C(s)
(a) (b)10
s(s+ 1)
G(s)
Closed-loop
polejv
1 −3−2−1j3
j2
j1
−j3−j2−j1
+–
s
Figure 6–39
(a) Control system;
(b) root-locus plot.
(a)10
s(s+ 1)
G(s)
R(s) C(s)
G
c
(s)
(b)
Desired
closed-loop
polejv
1 –3 –1.5j2.5981
j2
j1
–j3–j2–j1s
60°v
n
 = 3
+–
Figure 6–40
(a) Compensated
system; (b) desired
closed-loop pole
location.
Openmirrors.com
Section 6–6 / Lead Compensation 315[See Figure 6–40 (b).] In some cases, after the root loci of the original system have been obtained,
the dominant closed- loop poles may be moved to the desired location by simple gain adjustment.
This is, however, not the case for the present system. Therefore, we shall insert a lead compensatorin the feedforward path.
A general procedure for determining the lead compensator is as follows: First, find the sum
of the angles at the desired location of one of the dominant closed-loop poles with the open-looppoles and zeros of the original system, and determine the necessary angle fto be added so that
the total sum of the angles is equal to The lead compensator must contribute this
anglef. (If the angle fis quite large, then two or more lead networks may be needed rather than
a single one.)
Assume that the lead compensator G
c(s)has the transfer function as follows:
The angle from the pole at the origin to the desired dominant closed-loop pole at s=–1.5+j 2.5981
is 120°. The angle from the pole at s=– 1 to the desired closed-loop pole is 100.894°. Hence, the
angle deficiency is
Angle deficiency =180 °– 120 °– 100.894° =– 40.894°
Deficit angle 40.894° must be contributed by a lead compensator.
Note that the solution to such a problem is not unique. There are infinitely many solutions.
We shall present two solutions to the problem in what follows.
Method 1. There are many ways to determine the locations of the zero and pole of the lead
compensator. In what follows we shall introduce a procedure to obtain a largest possible value fora. (Note that a larger value of awill produce a larger value of K
v.In most cases, the larger the Kvis,
the better the system performance.) First, draw a horizontal line passing through point P, the desired
location for one of the dominant closed-loop poles. This is shown as line PAin Figure 6–41. Draw
also a line connecting point Pand the origin. Bisect the angle between the lines PAand PO,a s
shown in Figure 6–41. Draw two lines PCandPDthat make angles with the bisector PB.T he
intersections of PCandPDwith the negative real axis give the necessary locations for the pole and
zero of the lead network.The compensator thus designed will make point Pa point on the root locus
of the compensated system. The open-loop gain is determined by use of the magnitude condition.
In the present system, the angle of G(s) at the desired closed-loop pole is
n10
s(s+1)2
s=-1.5+j2.5981=-220.894 °;f/H208622Gc(s)=Kc a Ts+1
aTs+1=Kcs+1
T
s+1
aT,  (06a61);180°(2k +1).
jv
s OAP
CB D1
aT–1
T–f
2 f
2
Figure 6–41
Determination of thepole and zero of alead network.
316
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Thus, if we need to force the root locus to go through the desired closed-loop pole, the lead com-
pensator must contribute f=40.894° at this point. By following the foregoing design procedure,
we can determine the zero and pole of the lead compensator.
Referring to Figure 6–42, if we bisect angle APO and take 40.894°/2 each side, then the loca-
tions of the zero and pole are found as follows:
zero at s=–1.9432
pole at s=–4.6458
Thus, G
c
(s)can be given as
(For this compensator the value of aisa= 1.9432/4.6458 = 0.418.)
The value of K
c
can be determined by use of the magnitude condition.
or
Hence, the lead compensator G
c
(s)just designed is given by
Then, the open-loop transfer function of the designed system becomes
and the closed-loop transfer function becomes
=12.287 s+23.876
s
3
+5.646 s
2
+16.933 s+23.876C(s)
R(s)=12.287 (s+1.9432 )
s(s+1)(s+4.6458 )+12.287 (s+1.9432 )G
c
(s)G(s) =1.2287
a
s+1.9432
s+4.6458
b
10
s(s+1)G
c
(s)=1.2287s+1.9432
s+4.6458K
c
=
2
(s+4.6458 )s(s +1)
10(s+1.9432 )
2
s=-1.5+j2.5981
=1.2287
2
K
c
s+1.9432
s+4.645810
s(s+1)
2
s=-1.5+j2.5981
=1G
c
(s)=K
c
s+1
T
s+1
/H9251T=K
c
s+1.9432
s+4.6458
jv
1 02 −1.9432 −4.6458APj3
j2
j1
−j2−j1s
20.447°
20.447°
−3
Figure 6–42
Determination of the
pole and zero of the
lead compensator.
Openmirrors.com
Section 6–6 / Lead Compensation 317Figure 6–43 shows the root-locus plot for the designed system.
It is worthwhile to check the static velocity error constant Kvfor the system just designed.
Note that the third closed-loop pole of the designed system is found by dividing the charac-
teristic equation by the known factors as follows:
The foregoing compensation method enables us to place the dominant closed-loop poles at
the desired points in the complex plane. The third pole at s =/H110022.65 is fairly close to the added
zero at /H110021.9432. Therefore, the effect of this pole on the transient response is relatively small.
Since no restriction has been imposed on the nondominant pole and no specification has been
given concerning the value of the static velocity error coefficient, we conclude that the present de-
sign is satisfactory.
Method 2. If we choose the zero of the lead compensator at s =/H110021 so that it will cancel the
plant pole at s =/H110021, then the compensator pole must be located at s =/H110023. (See Figure 6–44.)
Hence the lead compensator becomes
The value of Kccan be determined by use of the magnitude condition.
2Kcs+1
s+310
s(s+1)2
s=-1.5+j2.5981=1Gc(s)=Kcs+1
s+3s3+5.646 s2+16.933 s+23.875 =(s+1.5+j2.5981 )(s+1.5-j2.5981 )(s+2.65)=5.139=lim
sS0sc1.2287s+1.9432
s+4.645810
s(s+1)dKv=lim
sS0sGc(s)G(s)jv
1 –3 –1 –2 –4 –5j2
j1j3
–j3–j2–j1s
Figure 6–43
Root-locus plot of the designed
system.
318
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
or
Hence
The open-loop transfer function of the designed system then becomes
The closed-loop transfer function of the compensated system becomes
Note that in the present case the zero of the lead compensator will cancel a pole of the plant, re-
sulting in the second-order system, rather than the third-order system as we designed using Method 1.
The static velocity error constant for the present case is obtained as follows:
Notice that the system designed by Method 1 gives a larger value of the static velocity error con-
stant.This means that the system designed by Method 1 will give smaller steady-state errors in fol-
lowing ramp inputs than the system designed by Method 2.
For different combinations of a zero and pole of the compensator that contributes 40.894°, the
value of K
v
will be different. Although a certain change in the value of K
v
can be made by alter-
ing the pole-zero location of the lead compensator, if a large increase in the value of K
v
is desired,
then we must alter the lead compensator to a lag–lead compensator.
Comparison of step and ramp responses of the compensated and uncompensated systems.
In what follows we shall compare the unit-step and unit-ramp responses of the three systems: the
original uncompensated system, the system designed by Method 1, and the system designed by
Method 2. The MATLAB program used to obtain unit-step response curves is given in=lim
sS0
s
c
9
s(s+3)
d
=3K
v
=lim
sS0
sG
c
(s)G(s)C(s)
R(s)=9
s
2
+3s+9G
c
(s)G(s) =0.9s+1
s+310
s(s+1)=9
s(s+3)G
c
(s)=0.9s+1
s+3K
c
=
2
s(s+3)
10
2
s=-1.5+j2.5981
=0.9
jv
1 –3 –1 –2 –4j2
j1j3
–j2–j1s
Desired
closed-loop pole
Compensator
pole
Compensator
zero
60°
120°
Figure 6–44
Compensator pole
and zero.
Openmirrors.com
Section 6–6 / Lead Compensation 319MATLAB Program 6–9, where num1 and den1 denote the numerator and denominator of the
system designed by Method 1 and num2 and den2 denote that designed by Method 2. Also, numand den are used for the original uncompensated system.The resulting unit-step response curvesare shown in Figure 6–45.The MATLAB program to obtain the unit-ramp response curves of the
MATLAB Program 6–9
% ***** Unit-Step Response of Compensated and Uncompensated Systems *****num1 = [12.287  23.876];
den1 = [1  5.646  16.933  23.876];num2 = [9];den2 = [1  3  9];num = [10];den = [1  1  10];t = 0:0.05:5;c1 = step(num1,den1,t);c2 = step(num2,den2,t);c = step(num,den,t);plot(t,c1,'-',t,c2,'.',t,c,'x')gridtitle('Unit-Step Responses of Compensated Systems and Uncompensated System')xlabel('t Sec')ylabel('Outputs c1, c2, and c')text(1.51,1.48,'Compensated System (Method 1)')text(0.9,0.48,'Compensated System (Method 2)')text(2.51,0.67,'Uncompensated System')
Outputs c1,c2, and c
0.40.81.8
0
1 0.5 1.5 0 2 2.5
t Sec3 3.5 4 4.5 51.2
0.61
0.21.41.6Unit-Step Responses of Compensated Systems and Uncompensated System
Compensated System (Method 1)
Compensated System (Method 2)Uncompensated System
Figure 6–45
Unit-step responsecurves of designedsystems and originaluncompensatedsystem.
320
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
designed systems is given in MATLAB Program 6–10, where we used the step command to ob-
tain unit-ramp responses by using the numerators and denominators for the systems designed by
Method 1 and Method 2 as follows:
num1 = [12.287  23.876]
den1 = [1  5.646  16.933  23.876  0]
num2 = [9]
den2 = [1  3  9  0]
The resulting unit-ramp response curves are shown in Figure 6–46.
MATLAB Program 6–10
% ***** Unit-Ramp Responses of Compensated Systems *****
num1 = [12.287  23.876];
den1 = [1  5.646  16.933  23.876  0];
num2 = [9];
den2 = [1  3  9  0];
t = 0:0.05:5;
c1 = step(num1,den1,t);
c2 = step(num2,den2,t);
plot(t,c1,'-',t,c2,'.',t,t,'-')
grid
title('Unit-Ramp Responses of Compensated Systems')
xlabel('t Sec')
ylabel('Unit-Ramp Input and Outputs c1 and c2')
text(2.55,3.8,'Input')
text(0.55,2.8,'Compensated System (Method 1)')
text(2.35,1.75,'Compensated System (Method 2)')
Unit-Ramp Input and Outputs c1 and c2
Unit-Ramp Responses of Compensated Systems
Compensated System (Method 1)
Input
Compensated System (Method 2)
1 0.5 1.5 0 2 2.5 3 3.5 4 4.5 5
t Sec5
2
0
3
4.5
1
0.5
4
2.5
3.5
1.5
Figure 6–46
Unit-ramp response
curves of designed
systems.
Openmirrors.com
Section 6–7 / Lag Compensation 321In examining these response curves notice that the compensated system designed by Method 1
exhibits a little bit larger overshoot in the step response than the compensated system designedby Method 2. However, the former has better response characteristics for the ramp input than thelatter. So it is difficult to say which one is better. The decision on which one to choose should bemade by the response requirements (such as smaller overshoots for step type inputs or smallersteady-state errors in following ramp or changing inputs) expected in the designed system. If bothsmaller overshoots in step inputs and smaller steady-state errors in following changing inputs arerequired, then we might use a lag–lead compensator. (See Section 6–8 for the lag–lead compen-
sation techniques.)
6–7 LAG COMPENSATION
Electronic Lag Compensator Using Operational Amplifiers. The configuration of
the electronic lag compensator using operational amplifiers is the same as that for thelead compensator shown in Figure 6–36. If we choose in the circuit shownin Figure 6–36, it becomes a lag compensator. Referring to Figure 6–36, the transferfunction of the lag compensator is given by
where
Note that we use binstead of ain the above expressions. [In the lead compensator we
usedato indicate the ratio which was less than 1, or 0 <a<1. ] In this
book we always assume that 0 <a<1 andb>1.
Lag Compensation Techniques Based on the Root-Locus Approach. Consider
the problem of finding a suitable compensation network for the case where the systemexhibits satisfactory transient-response characteristics but unsatisfactory steady-statecharacteristics. Compensation in this case essentially consists of increasing the open-loop gain without appreciably changing the transient-response characteristics.This meansthat the root locus in the neighborhood of the dominant closed-loop poles should notbe changed appreciably, but the open-loop gain should be increased as much as needed.This can be accomplished if a lag compensator is put in cascade with the givenfeedforward transfer function.
To avoid an appreciable change in the root loci, the angle contribution of the lag
network should be limited to a small amount, say less than  5°. To assure this, we placethe pole and zero of the lag network relatively close together and near the origin of thesplane.Then the closed-loop poles of the compensated system will be shifted only slight-
ly from their original locations. Hence, the transient-response characteristics will bechanged only slightly.R
2 C2/H20862AR1 C1B,T=R1 C1 ,  bT=R2 C2 ,  b=R2 C2
R1 C171,  Kˆc=R4 C1
R3 C2Eo(s)
Ei(s)=Kˆc bTs+1
bTs+1=Kˆcs+1
T
s+1
bTR2 C27R1 C1
322
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Consider a lag compensator where
(6–19)
If we place the zero and pole of the lag compensator very close to each other, then at
where s
1
is one of the dominant closed-loop poles, the magnitudes and
are almost equal, or
To make the angle contribution of the lag portion of the compensator small, we require
This implies that if gain of the lag compensator is set equal to 1, the alteration in the
transient-response characteristics will be very small, despite the fact that the overall gain of
the open-loop transfer function is increased by a factor of b, where b>1. If the pole and
zero are placed very close to the origin, then the value of bcan be made large. (A large
value of bmay be used, provided physical realization of the lag compensator is possible.)
It is noted that the value of Tmust be large, but its exact value is not critical. However,
it should not be too large in order to avoid difficulties in realizing the phase-lag com-
pensator by physical components.
An increase in the gain means an increase in the static error constants. If the open-
loop transfer function of the uncompensated system is G(s), then the static velocity
error constant K
v
of the uncompensated system is
If the compensator is chosen as given by Equation (6–19), then for the compensated
system with the open-loop transfer function the static velocity error constant
where K
v
is the static velocity error constant of the uncompensated system.
Thus if the compensator is given by Equation (6–19), then the static velocity error
constant is increased by a factor of where is approximately unity. K
ˆ
c
K
ˆ
c
b,=K
ˆ
c
 
bK
v
=lim
sS0
G
c
(s)K
v
 K
ˆ
v
=lim
sS0
sG
c
(s)G(s)K
ˆ
v
 becomesG
c
(s)G(s)K
v
=lim
sS0
sG(s)K
ˆ
c
-5°6
n
s
1
+1
T
s
1
+1
bT
60°∑G
c
As
1
B∑=
4
K
ˆ
c
 s
1
+1
T
s
1
+1
bT
4
/H11216K
ˆ
c
s
1
+C1/H20862(bT)Ds
1
+(1/H20862T) s=s
1
 
,G
c
(s)=K
ˆ
c
 
bTs+1
bTs+1=K
ˆ
c
s+1
T
s+1
bTG
c
(s),
Openmirrors.com
Section 6–7 / Lag Compensation 323The main negative effect of the lag compensation is that the compensator zero that
will be generated near the origin creates a closed-loop pole near the origin.This closed-loop pole and compensator zero will generate a long tail of small amplitude in the stepresponse, thus increasing the settling time.
Design Procedures for Lag Compensation by the Root-Locus Method. The
procedure for designing lag compensators for the system shown in Figure 6–47 by theroot-locus method may be stated as follows (we assume that the uncompensated systemmeets the transient-response specifications by simple gain adjustment; if this is not thecase, refer to Section 6–8):
1.Draw the root-locus plot for the uncompensated system whose open-loop trans-
fer function is G(s). Based on the transient-response specifications, locate the
dominant closed-loop poles on the root locus.
2.Assume the transfer function of the lag compensator to be given by Equation (6–19):
Then the open-loop transfer function of the compensated system becomes
3.Evaluate the particular static error constant specified in the problem.
4.Determine the amount of increase in the static error constant necessary to satis-
fy the specifications.
5.Determine the pole and zero of the lag compensator that produce the necessary
increase in the particular static error constant without appreciably altering theoriginal root loci. (Note that the ratio of the value of gain required in the spec-ifications and the gain found in the uncompensated system is the required ratiobetween the distance of the zero from the origin and that of the pole from theorigin.)
6.Draw a new root-locus plot for the compensated system. Locate the desired dom-
inant closed-loop poles on the root locus. (If the angle contribution of the lag net-work is very small—that is, a few degrees—then the original and new root loci arealmost identical. Otherwise, there will be a slight discrepancy between them.Thenlocate, on the new root locus, the desired dominant closed-loop poles based onthe transient-response specifications.)
7.Adjust gain of the compensator from the magnitude condition so that the dom-
inant closed-loop poles lie at the desired location. Awill be approximately 1. B K
ˆcKˆcGc(s)G(s).Gc(s)=Kˆc bTs+1
bTs+1=Kˆcs+1
T
s+1
bT
Gc(s) G(s) +–
Figure 6–47
Control system.
324
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
EXAMPLE 6–7
Consider the system shown in Figure 6–48(a). The feedforward transfer function is
The root-locus plot for the system is shown in Figure 6–48(b). The closed-loop transfer function
becomes
The dominant closed-loop poles are
The damping ratio of the dominant closed-loop poles is The undamped natural
frequency of the dominant closed-loop poles is 0.673 rad /H20862sec.The static velocity error constant is
0.53 sec
–1
.
It is desired to increase the static velocity error constant K
v
to about 5 sec
–1
without appreciably
changing the location of the dominant closed-loop poles.
To meet this specification, let us insert a lag compensator as given by Equation (6–19) in
cascade with the given feedforward transfer function.To increase the static velocity error con-
stant by a factor of about 10, let us choose b=10 and place the zero and pole of the lag com-
pensator at s=–0.05 ands=–0.005 , respectively.The transfer function of the lag compensator
becomes
G
c
(s)=K
ˆ
c
s+0.05
s+0.005z=0.491.s=-0.3307 ;j0.5864 =1.06
(s+0.3307 -j0.5864)(s +0.3307 +j0.5864)(s +2.3386) C(s)
R(s)=1.06
s(s+1)(s +2)+1.06G(s) =1.06
s(s+1)(s +2)
1.06
s(s+ 1) (s+ 2)
Closed-loop poles
j1
–j2–j10 –1 –2 –31jv
s
(a) (b)j2
+–
Figure 6–48
(a) Control system;
(b) root-locus plot.
Openmirrors.com
Section 6–7 / Lag Compensation 325The angle contribution of this lag network near a dominant closed-loop pole is about 4°. Because
this angle contribution is not very small, there is a small change in the new root locus near thedesired dominant closed-loop poles.
The open-loop transfer function of the compensated system then becomes
where
The block diagram of the compensated system is shown in Figure 6–49.The root-locus plot for the
compensated system near the dominant closed-loop poles is shown in Figure 6–50(a), together withthe original root-locus plot. Figure 6–50(b) shows the root-locus plot of the compensated systemK=1.06K
ˆc =K(s +0.05)
s(s+0.005)(s +1)(s +2) Gc(s)G(s) =Kˆc s+0.05
s+0.005 1.06
s(s+1)(s +2)Kcs+ 0.05
s+ 0.005
Kc= 0.9661.06
s(s+ 1) (s+ 2)+–^
^Figure 6–49
Compensatedsystem.
Figure 6–50
(a) Root-locus plots of the compensated system and uncompensated system; (b) root-locus plot of compensated
system near the origin.Real Axis−2.5 −3 0 1 −0.5 0.5 −1.5 −2 −1
(a)Imag Axis2
−21.5
−1
−1.51
00.5
−0.5Root-Locus Plots of Compensated and Uncompensated Systems
Uncompensated system
Original closed-loop pole
Compensated systemNew closed-
loop pole
0.4 0.6 0.2 −0.2 −0.4 0Root-Locus Plot of Compensated System near the Origin
Real AxisImag Axis−0.10.10.5
−0.3
−0.40.3
00.2
−0.20.4
−0.5
(b)
326
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
near the origin.The MATLAB program to generate the root-locus plots shown in Figures 6–50(a)
and (b) is given in MATLAB Program 6–11.
If the damping ratio of the new dominant closed-loop poles is kept the same, then these poles
are obtained from the new root-locus plot as follows:
The open-loop gain Kis determined from the magnitude condition as follows:
 =1.0235 K=
2
s(s+0.005)(s +1)(s +2)
s+0.05
2
s=-0.31+j0.55
s
1
=-0.31 +j0.55,
  
s
2
=-0.31 -j0.55
MATLAB Program 6–11
% ***** Root-locus plots of the compensated system and
% uncompensated system *****
% ***** Enter the numerators and denominators of the
% compensated and uncompensated systems *****
numc = [1  0.05];
denc = [1  3.005  2.015  0.01  0];
num = [1.06];
den = [1  3  2  0];
% ***** Enter rlocus command. Plot the root loci of both
% systems *****
rlocus(numc,denc)
hold
Current plot held
rlocus(num,den)
v = [-3  1  -2  2]; axis(v); axis('square')
grid
text(-2.8,0.2,'Compensated system')
text(-2.8,1.2,'Uncompensated system')
text(-2.8,0.58,'Original closed-loop pole')
text(-0.1,0.85,'New closed-')
text(-0.1,0.62,'loop pole')
title('Root-Locus Plots of Compensated and Uncompensated Systems')
hold
Current plot released
% ***** Plot root loci of the compensated system near the origin *****
rlocus(numc,denc)
v = [-0.6  0.6  -0.6  0.6]; axis(v); axis('square')
grid
title('Root-Locus Plot of Compensated System near the Origin')
Openmirrors.com
Section 6–7 / Lag Compensation 327Then the lag compensator gain is determined as
Thus the transfer function of the lag compensator designed is
(6–20)
Then the compensated system has the following open-loop transfer function:
The static velocity error constant Kvis
In the compensated system, the static velocity error constant has increased to 5.12 sec–1,or
5.12/0.53=9.66 times the original value. (The steady-state error with ramp inputs has decreased
to about 10 %of that of the original system.) We have essentially accomplished the design objective
of increasing the static velocity error constant to 5 sec–1.
Note that, since the pole and zero of the lag compensator are placed close together and are lo-
cated very near the origin, their effect on the shape of the original root loci has been small. Except
for the presence of a small closed root locus near the origin, the root loci of the compensated and theuncompensated systems are very similar to each other. However, the value of the static velocity errorconstant of the compensated system is 9.66 times greater than that of the uncompensated system.
The two other closed-loop poles for the compensated system are found as follows:
The addition of the lag compensator increases the order of the system from 3 to 4, adding one ad-
ditional closed-loop pole close to the zero of the lag compensator. (The added closed-loop poleats=–0.0549 is close to the zero at s=–0.05 .) Such a pair of a zero and pole creates a long tail
of small amplitude in the transient response, as we will see later in the unit-step response. Since
the pole at s=–2.326 is very far from the jvaxis compared with the dominant closed-loop poles,
the effect of this pole on the transient response is also small. Therefore, we may consider theclosed-loop poles at to be the dominant closed-loop poles.
The undamped natural frequency of the dominant closed-loop poles of the compensated sys-
tem is 0.631 rad /H20862sec.This value is about 6 %less than the original value, 0.673 rad /H20862sec.This implies
that the transient response of the compensated system is slower than that of the original system.
The response will take a longer time to settle down.The maximum overshoot in the step responsewill increase in the compensated system. If such adverse effects can be tolerated, the lag com-pensation as discussed here presents a satisfactory solution to the given design problem.
Next, we shall compare the unit-ramp responses of the compensated system against the
uncompensated system and verify that the steady-state performance is much better in the
compensated system than the uncompensated system.
To obtain the unit-ramp response with MATLAB, we use the step command for the system
Since for the compensated system is
 =1.0235s +0.0512
s5+3.005s4+2.015s3+1.0335s2+0.0512s C(s)
sR(s)=1.0235(s +0.05)
sCs(s+0.005)(s +1)(s +2)+1.0235(s +0.05)DC(s) /H20862CsR(s)D C(s) /H20862CsR(s)D.s=-0.31 ;j0.55s3=-2.326,  s4=-0.0549Kv=lim
sS0sG1(s)=5.12 sec-1 =5.12(20s +1)
s(200s +1)(s +1)(0.5s +1) G1(s)=1.0235(s +0.05)
s(s+0.005)(s +1)(s +2)Gc(s)=0.9656s+0.05
s+0.005=9.65620s +1
200s +1Kˆc=K
1.06=1.0235
1.06=0.9656Kˆc
328
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
we have
numc = [1.0235  0.0512]
denc = [1  3.005  2.015  1.0335  0.0512  0]
Also, for the uncompensated system is
Hence,
num = [1.06]
den = [1  3  2  1.06  0]
MATLAB Program 6–12 produces the plot of the unit-ramp response curves. Figure 6–51 shows
the result. Clearly, the compensated system shows much smaller steady-state error (one-tenth of
the original steady-state error) in following the unit-ramp input. =1.06
s
4
+3s
3
+2s
2
+1.06s C(s)
sR(s)=1.06
sCs(s+1)(s +2)+1.06DC(s) /H20862CsR(s)D
MATLAB Program 6–12
% ***** Unit-ramp responses of compensated system and
% uncompensated system *****
% ***** Unit-ramp response will be obtained as the unit-step
% response of C(s)/[sR(s)] *****
% ***** Enter the numerators and denominators of C1(s)/[sR(s)]
% and C2(s)/[sR(s)], where C1(s) and C2(s) are Laplace
% transforms of the outputs of the compensated and un-
% compensated systems, respectively. *****
numc = [1.0235  0.0512];
denc = [1  3.005  2.015  1.0335  0.0512  0];
num = [1.06];
den = [1  3  2  1.06  0];
% ***** Specify the time range (such as t= 0:0.1:50) and enter
% step command and plot command. *****
t = 0:0.1:50;
c1 = step(numc,denc,t);
c2 = step(num,den,t);
plot(t,c1,'-',t,c2,'.',t,t,'--')
grid
text(2.2,27,'Compensated system');
text(26,21.3,'Uncompensated system');
title('Unit-Ramp Responses of Compensated and Uncompensated Systems')
xlabel('t Sec');
ylabel('Outputs c1 and c2')
Openmirrors.com
Section 6–7 / Lag Compensation 329t Sec10 05 35 50 30 40 45 20 15 25Outputs c1 and c250
015
535
2530
2045
40
10Unit-Ramp Responses of Compensated and Uncompensated Systems
Uncompensated systemCompensated system
Figure 6–51
Unit-ramp responsesof compensated and
uncompensated
systems. [Thecompensator is givenby Equation (6–20).]
MATLAB Program 6–13 gives the unit-step response curves of the compensated and un-
compensated systems. The unit-step response curves are shown in Figure 6–52. Notice that the
lag-compensated system exhibits a larger maximum overshoot and slower response than the
original uncompensated system. Notice that a pair of the pole at s=–0.0549 and zero at
MATLAB Program 6–13
% ***** Unit-step responses of compensated system and
% uncompensated system *****
% ***** Enter the numerators and denominators of the
% compensated and uncompensated systems *****
numc = [1.0235  0.0512];
denc = [1  3.005  2.015  1.0335  0.0512];num = [1.06];den = [1  3  2  1.06];
% ***** Specify the time range (such as t = 0:0.1:40) and enter
% step command and plot command. *****
t = 0:0.1:40;
c1 = step(numc,denc,t);c2 = step(num,den,t);plot(t,c1,'-',t,c2,'.')gridtext(13,1.12,'Compensated system')text(13.6,0.88,'Uncompensated system')title('Unit-Step Responses of Compensated and Uncompensated Systems')xlabel('t Sec')ylabel('Outputs c1 and c2')
330
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Unit-Step Responses of Compensated and Uncompensated Systems
Outputs c1 and c2
Uncompensated systemCompensated system
t Sec5
0 30
40 25
35
15
10
20
1.4
0.4
0
1.2
0.8
1
0.6
0.2
Figure 6–52
Unit-step responses
of compensated and
uncompensated
systems. [The
compensator is given
by Equation (6–20).]
s=–0.05 generates a long tail of small amplitude in the transient response. If a larger maximum
overshoot and a slower response are not desired, we need to use a lag–lead compensator as
presented in Section 6–8.
Comments. It is noted that under certain circumstances, however, both lead com-
pensator and lag compensator may satisfy the given specifications (both transient-
response specifications and steady-state specifications.) Then either compensation may
be used.
6–8 LAG–LEAD COMPENSATION
Lead compensation basically speeds up the response and increases the stability of the
system. Lag compensation improves the steady-state accuracy of the system, but reduces
the speed of the response.
If improvements in both transient response and steady-state response are desired,
then both a lead compensator and a lag compensator may be used simultaneously. Rather
than introducing both a lead compensator and a lag compensator as separate units, how-
ever, it is economical to use a single lag–lead compensator.
Lag–lead compensation combines the advantages of lag and lead compensations.
Since the lag–lead compensator possesses two poles and two zeros, such a compensation
increases the order of the system by 2, unless cancellation of pole(s) and zero(s) occurs
in the compensated system.
Electronic Lag–Lead Compensator Using Operational Amplifiers. Figure 6–53
shows an electronic lag–lead compensator using operational amplifiers. The transfer
Openmirrors.com
Section 6–8 / Lag-Lead Compensation 331function for this compensator may be obtained as follows: The complex impedance Z1
is given by
or
Similarly, complex impedance Z2is given by
Hence, we have
The sign inverter has the transfer function
Thus the transfer function of the compensator shown in Figure 6–53 is
(6–21)
Let us define
T1=AR1+R3BC1 ,  T1
g=R1 C1 ,  T2=R2 C2 ,  bT2=AR2+R4BC2Eo(s)
Ei(s)=Eo(s)
E(s)E(s)
Ei(s)=R4 R6
R3 R5cAR1+R3BC1 s+1
R1 C1 s+1dcR2 C2 s+1
AR2+R4BC2 s+1dEo(s)
E(s)=-R6
R5E(s)
Ei(s)=-Z2
Z1=-R4
R3AR1+R3BC1 s+1
R1 C1 s+1/H11554R2 C2 s+1
AR2+R4BC2 s+1Z2=AR2 C2 s+1BR4
AR2+R4BC2 s+1Z1=AR1 C1 s+1BR3
AR1+R3BC1 s+11
Z1=1
R1+1
C1 s+1
R3–
+–
+C1C2
R1
R5
Ei(s)Eo(s)E(s)
Lag–lead network Sign inverterZ1
Z2R2
R3R4R6
Figure 6–53
Lag–leadcompensator.
332
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
G
c
(s) G(s)
+–
Figure 6–54
Control system.
Then Equation (6–21) becomes
(6–22)
where
Note that gis often chosen to be equal to b.
Lag–lead Compensation Techniques Based on the Root-Locus Approach.
Consider the system shown in Figure 6–54. Assume that we use the lag–lead compen sator:
(6–23)
where and (Consider K
c
to belong to the lead portion of the lag–lead
compensator.)
In designing lag–lead compensators, we consider two cases where and 
Case 1.
In this case, the design process is a combination of the design of the
lead compensator and that of the lag compensator.The design procedure for the lag–lead
compensator follows:
1.From the given performance specifications, determine the desired location for the
dominant closed-loop poles.
2.Using the uncompensated open-loop transfer function G(s), determine the angle
deficiency fif the dominant closed-loop poles are to be at the desired location.The
phase-lead portion of the lag–lead compensator must contribute this angle f.
3.Assuming that we later choose sufficiently large so that the magnitude of the lag
portion
4
s
1
+1
T
2
s
1
+1
bT
2
4
T
2
gZb.g=b. gZbg71. b71G
c
(s)=K
c
b
gAT
1
 
s+1BAT
2
 
s+1B
a
T
1
gs+1
b
AbT
2
 
s+1B=K
c
±
s+1
T
1
s+g
T
1
≤±
s+1
T
2
s+1
bT
2
≤
g=R
1
+R
3
R
1
71,
  
b=R
2
+R
4
R
2
71,
  
K
c
=R
2
 
R
4
 
R
6
R
1
 
R
3
 
R
5
 R
1
+R
3
R
2
+R
4
E
o
(s)
E
i
(s)=K
c
b
g
£
T
1
 
s+1
T
1
gs+1
≥a
T
2
 
s+1
bT
2
 
s+1
b
=K
c
a
s+1
T
1
ba
s+1
T
2
b
a
s+g
T
1
ba
s+1
bT
2
b
Openmirrors.com
Section 6–8 / Lag-Lead Compensation 333is approximately unity, where is one of the dominant closed-loop poles,
choose the values of and gfrom the requirement that
The choice of and gis not unique. (Infinitely many sets of and gare possible.)
Then determine the value of Kcfrom the magnitude condition:
4.If the static velocity error constant Kvis specified, determine the value of bto
satisfy the requirement for Kv. The static velocity error constant Kvis given by
where Kcandgare already determined in step 3. Hence, given the value of Kv, the value
ofbcan be determined from this last equation. Then, using the value of bthus deter-
mined, choose the value of such that
(The preceding design procedure is illustrated in Example 6–8.)
Case 2. Ifg=bis required in Equation (6–23), then the preceeding design
procedure for the lag–lead compensator may be modified as follows:
1.From the given performance specifications, determine the desired location for the
dominant closed-loop poles.g=b.-5°6ns1+1
T2
s1+1
bT260°4s1+1
T2
s1+1
bT24/H112161T2 =lim
sS0sKcb
gG(s) =lim
sS0sKc±s+1
T1
s+g
T1≤±s+1
T2
s+1
bT2≤G(s) Kv=lim
sS0sGc(s)G(s)4Kcs1+1
T1
s1+g
T1GAs1B4=1T1 T1ns1+1
T1
s1+g
T1=fT1s=s1
334
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
2.The lag–lead compensator given by Equation (6–23) is modified to
(6–24)
whereb>1. The open-loop transfer function of the compensated system is
G
c
(s)G(s). If the static velocity error constant K
v
is specified, determine the value
of constant K
c
from the following equation:
3.To have the dominant closed-loop poles at the desired location, calculate the angle
contribution fneeded from the phase-lead portion of the lag–lead compensator.
4.For the lag–lead compensator, we later choose sufficiently large so that
is approximately unity, where is one of the dominant closed-loop poles. De-
termine the values of and bfrom the magnitude and angle conditions:
5.Using the value of bjust determined, choose so that
The value of the largest time constant of the lag–lead compensator, should not be
too large to be physically realized. (An example of the design of the lag–lead compen-
sator when is given in Example 6–9.) g=bbT
2
 
,-5°6
n
s
1
+1
T
2
s
1
+1
bT
2
60°
4
s
1
+1
T
2
s
1
+1
bT
2
4
/H112161T
2
 
n
s
1
+1
T
1
s
1
+b
T
1
=f 
4
K
c
±
s
1
+1
T
1
s
1
+b
T
1
≤
GAs
1
B
4
=1T
1
s=s
1
4
s
1
+1
T
2
s
1
+1
bT
2
4
T
2
 =lim
sS0
sK
c
G(s) K
v
=lim
sS0
sG
c
(s)G(s)G
c
(s)=K
c
AT
1
 
s+1BAT
2
 
s+1B
a
T
1
bs+1
b
AbT
2
 
s+1B=K
c
a
s+1
T
1
ba
s+1
T
2
b
a
s+b
T
1
ba
s+1
bT
2
b
Openmirrors.com
Section 6–8 / Lag-Lead Compensation 335EXAMPLE 6–8 Consider the control system shown in Figure 6–55. The feedforward transfer function is
This system has closed-loop poles at
The damping ratio is 0.125, the undamped natural frequency is 2 rad/sec, and the static velocity
error constant is 8 sec–1.
It is desired to make the damping ratio of the dominant closed-loop poles equal to 0.5 and to
increase the undamped natural frequency to 5 rad /H20862sec and the static velocity error constant to
80 sec–1. Design an appropriate compensator to meet all the performance specifications.
Let us assume that we use a lag–lead compensator having the transfer function
wheregis not equal to b.Then the compensated system will have the open-loop transfer function
From the performance specifications, the dominant closed-loop poles must be at
Since
the phase-lead portion of the lag–lead compensator must contribute 55° so that the root locus
passes through the desired location of the dominant closed-loop poles.
To design the phase-lead portion of the compensator, we first determine the location of the
zero and pole that will give 55° contribution. There are many possible choices, but we shall here
choose the zero at s=–0.5 so that this zero will cancel the pole at s=–0.5 of the plant. Once
the zero is chosen, the pole can be located such that the angle contribution is 55°. By simplecalculation or graphical analysis, the pole must be located at s=–5.02. Thus, the phase-lead
portion of the lag–lead compensator becomes
K
cs+1
T1
s+g
T1=Kcs+0.5
s+5.02n4
s(s+0.5)2
s=-2.50+j4.33=-235°s=-2.50 ;j4.33Gc(s)G(s) =Kc±s+1
T1
s+g
T1≤±s+1
T2
s+1
bT2≤G(s)Gc(s)=Kc±s+1
T1
s+g
T1≤±s+1
T2
s+1
bT2≤  (g71,b71)s=-0.2500 ;j1.9843G(s) =4
s(s+0.5)
4
s(s+ 0.5)+–
Figure 6–55
Control system.
336
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Thus
Next we determine the value of K
c
from the magnitude condition:
Hence,
The phase-lag portion of the compensator can be designed as follows: First the value of bis
determined to satisfy the requirement on the static velocity error constant:
Hence, bis determined as
Finally, we choose the value  such that the following two conditions are satisfied:
We may choose several values for T
2
and check if the magnitude and angle conditions are satis-
fied. After simple calculations we find for T
2
= 5 
Since T
2
= 5 satisfies the two conditions, we may choose
Now the transfer function of the designed lag–lead compensator is given by
 =10(2s +1)(5s +1)
(0.1992s +1)(80.19s +1) =6.26
a
s+0.5
s+5.02
ba
s+0.2
s+0.01247
b
 G
c
(s)=(6.26)
±
s+1
2
s+10.04
2
≤±
s+1
5
s+1
16.04 *5
≤
T
2
=517magnitude 70.98, -2.10°6angle 60°-5°6
n
s+1
T
2
s+1
16.04 T
2
4
s=-2.5+j4.33
60°
4
s+1
T
2
s+1
16.04 T
2
4
s=-2.5+j4.33
/H112161,T
2
b=16.04 =lim
sS0
s(6.26) b
10.04 4
s(s+0.5)=4.988b=80 K
v
=lim
sS0
sG
c
(s)G(s) =lim
sS0
sK
c
 b
g G(s)K
c
=
2
(s+5.02)s
4
2
s=-2.5+j4.33
=6.26
2
K
c
s+0.5
s+5.024
s(s+0.5)
2
s=-2.5+j4.33
=1T
1
=2,
  
g=5.02
0.5=10.04
Openmirrors.com
Section 6–8 / Lag-Lead Compensation 337The compensated system will have the open-loop transfer function
Because of the cancellation of the (s+0.5) terms, the compensated system is a third-order system.
(Mathematically, this cancellation is exact, but practically such cancellation will not be exact be-cause some approximations are usually involved in deriving the mathematical model of the sys-tem and, as a result, the time constants are not precise.) The root-locus plot of the compensated
system is shown in Figure 6–56(a).An enlarged view of the root-locus plot near the origin is shown
in Figure 6–56(b). Because the angle contribution of the phase lag portion of the lag–leadcompensator is quite small, there is only a small change in the location of the dominant closed-loop poles from the desired location, The characteristic equation for the com-pensated system is
or
Hence the new closed-loop poles are located at
The new damping ratio is z=0.491.Therefore the compensated system meets all the required per-
formance specifications. The third closed-loop pole of the compensated system is located at
Since this closed-loop pole is very close to the zero at the effect of this pole
on the response is small. (Note that, in general, if a pole and a zero lie close to each other on thenegative real axis near the origin, then such a pole-zero combination will yield a long tail of smallamplitude in the transient response.)s=-0.2, s=-0.2078.s=-2.4123 ;j4.2756=(s+2.4123 +j4.2756 )(s+2.4123 -j4.2756 )(s+0.2078 )=0s
3+5.0325 s2+25.1026 s+5.008s(s+5.02)(s+0.01247 )+25.04 (s+0.2)=0s=-2.5;j4.33.Gc(s)G(s) =25.04(s +0.2)
s(s+5.02)(s +0.01247)
Root-Locus Plot of Compensated SystemImag Axis
10 5 –5 –10 0
Real Axis
(a)–228
6
0410
–10–4
–6
–8Root-Locus Plot of Compensated System near the Origin
RealAxisImag Axis
–0.5 0 –0.1 –0.3 –0.4 –0.2–0.050.050.2
–0.15
–0.250.15
00.1
–0.10.25
–0.2
(b)
Figure 6–56
(a) Root-locus plot of the compensated system; (b) root-locus plot near the origin.
338
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
t Sec1
0 6
8 5
7
3
2
4
(a)
Outputs
0.4
0.81.8
0
1.2
0.6
1
0.2
1.4
1.6
Unit-Step Responses of Compensated and Uncompensated Systems
Uncompensated system
Compensated
system
Steady-state error of compensated system = 0.0125
Steady-state error of uncompensated
system = 0.125
Compensated
systemUncompensated system
t Sec2
1
7
9
6
8
10 0 4
3
5
(b)
Outputs
10
4
0
6
9
2
1
8
5
7
3
Unit-Ramp Responses of Compensated and Uncompensated Systems
Figure 6–57
Transient-response
curves for the
compensated system
and uncompensated
system. (a) Unit-step
response curves;
(b) unit-ramp
response curves.
The unit-step response curves and unit-ramp response curves before and after compensation
are shown in Figure 6–57. (Notice a long tail of a small amplitude in the unit-step response of the
compensated system.)
EXAMPLE 6–9
Consider the control system of Example 6–8 again. Suppose that we use a lag–lead compensator
of the form given by Equation (6–24), or
G
c
(s)=K
c
a
s+1
T
1
ba
s+1
T
2
b
a
s+b
T
1
ba
s+1
bT
2
b
  
(b71)
Openmirrors.com
Section 6–8 / Lag-Lead Compensation 339Assuming the specifications are the same as those given in Example 6–8, design a compensator
Gc(s).
The desired locations for the dominant closed-loop poles are at
The open-loop transfer function of the compensated system is
Since the requirement on the static velocity error constant Kvis 80 sec–1,we have
Thus
The time constant and the value of bare determined from
(The angle deficiency of 55° was obtained in Example 6–8.) Referring to Figure 6–58, we can
easily locate points AandBsuch that
(Use a graphical approach or a trigonometric approach.) The result is
or
The phase-lead portion of the lag–lead network thus becomes
For the phase-lag portion, we choose such that it satisfies the conditions
-5°6ns+1
T2
s+1
3.503 T24
s=-2.50 +j4.3360° 4s+1
T2
s+1
3.503 T24
s=-2.50 +j4.33/H112161,T210as+2.38
s+8.34bT1=1
2.38=0.420,  b=8.34T1=3.503AO =2.38,  BO =8.34/APB =55°,  PA
PB=4.77
8ns+1
T1
s+b
T14
s=-2.5+j4.33=55°4s+1
T1
s+b
T14240
s(s+0.5)2
s=-2.5+j4.33=4s+1
T1
s+b
T148
4.77=1T1Kc=10Kv=lim
sS0sGc(s)G(s) =lim
sS0Kc4
0.5=8Kc=80Gc(s)G(s) =Kcas+1
T1bas+1
T2b
as+b
T1bas+1
bT2b/H115544
s(s+0.5)s=-2.50 ;j4.33
340
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
0jv
sA BP
55°j5
j4
j3
j2
j1
–j4–j3–j2–j1–10 –9–8–7–6–5–4–3–2–11 2
Figure 6–58
Determination of the
desired pole-zero
location.
By simple calculations, we find that if we choose , then
and if we choose , then
Since is one of the time constants of the lag–lead compensator, it should not be too large. If
can be acceptable from practical viewpoint, then we may choose . Then
Thus, the lag–lead compensator becomes
The compensated system will have the open-loop transfer function
No cancellation occurs in this case, and the compensated system is of fourth order. Because the
angle contribution of the phase lag portion of the lag–lead network is quite small, the dominant
closed-loop poles are located very near the desired location. In fact, the location of the dominant
closed-loop poles can be found from the characteristic equation as follows: The characteristic
equation of the compensated system is
which can be simplified to 
=(s+2.4539 +j4.3099 )(s+2.4539 -j4.3099 )(s+0.1003 )(s+3.8604 )=0s
4
+8.8685 s
3
+44.4219 s
2
+99.3188 s+9.52(s+8.34)(s+0.0285 )s(s +0.5)+40(s+2.38)(s+0.1)=0G
c
(s)G(s) =40(s +2.38)(s +0.1)
(s+8.34)(s +0.0285)s(s +0.5)G
c
(s)=(10)
a
s+2.38
s+8.34
ba
s+0.1
s+0.0285
b
1
bT
2
=1
3.503 *10=0.0285T
2
=10 T
2
=10T
2
17magnitude 70.99, -1°6angle 60°T
2
=1017magnitude 70.98, -1.5°6angle 60°T
2
=5
Openmirrors.com
Section 6–8 / Lag-Lead Compensation 341The dominant closed-loop poles are located at
The other closed-loop poles are located at
Since the closed-loop pole at is very close to a zero at they almost cancel
each other.Thus, the effect of this closed-loop pole is very small.The remaining closed-loop pole
does not quite cancel the zero at The effect of this zero is to cause a
larger overshoot in the step response than a similar system without such a zero. The unit-stepresponse curves of the compensated and uncompensated systems are shown in Figure 6–59(a).The
unit-ramp response curves for both systems are depicted in Figure 6–59(b).s=-2.4. (s=-3.8604)s=-0.1, s=-0.1003s=-0.1003;  s=-3.8604s=-2.4539 ;j4.3099
t Sec1 0.5 0 3.5 4.5 3 4 5 2 1.5 2.5
(a)Outputs
0.40.81.8
01.2
0.61
0.21.41.6Unit-Step Responses of Compensated and Uncompensated Systems
Uncompensated systemCompensated
system
t Sec0.5 03 4 2.5 3.5 1.5 1 2
(b)Outputs
1.52.54
0.5
03.5
23
1Unit-Ramp Responses of Compensated and Uncompensated Systems
Uncompensated system Compensated
systemFigure 6–59
(a) Unit-stepresponse curves for
the compensated and
uncompensatedsystems;(b) unit-rampresponse curves for
both systems.
342
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
The maximum overshoot in the step response of the compensated system is approximately
38%. (This is much larger than the maximum overshoot of 21 %in the design presented in Exam-
ple 6–8.) It is possible to decrease the maximum overshoot by a small amount from 38 %, but not
to 20 %ifg=bis required, as in this example. Note that by not requiring g=b, we have an ad-
ditional parameter to play with and thus can reduce the maximum overshoot.
6–9 PARALLEL COMPENSATION
Thus far we have presented series compensation techniques using lead, lag, or lag–lead
compensators. In this section we discuss parallel compensation technique. Because in the
parallel compensation design the controller (or compensator) is in a minor loop, the de-
sign may seem to be more complicated than in the series compensation case. It is, how-
ever, not complicated if we rewrite the characteristic equation to be of the same form
as the characteristic equation for the series compensated system. In this section we pres-
ent a simple design problem involving parallel compensation.
Basic Principle for Designing Parallel Compensated System. Referring to
Figure 6–60(a), the closed-loop transfer function for the system with series compensa-
tion is
The characteristic equation is
Given GandH, the design problem becomes that of determining the compensator G
c
that satisfies the given specification.1+G
c
 
GH =0C
R=G
c
 
G
1+G
c
 
GH
G
1
(s) G
2
(s)
H(s)G
c
(s)
G
c
(s) G(s)
H(s)
(a)
(b)
+–
+–
+–
C RRC
Figure 6–60
(a) Series
compensation;
(b) parallel or
feedback
compensation.
Openmirrors.com
Section 6–9 / Parallel Compensation 343The closed-loop transfer function for the system with parallel compensation 
[Figure 6–60(b)] is
The characteristic equation is
By dividing this characteristic equation by the sum of the terms that do not involve Gc,
we obtain
(6–25)
If we define
then Equation (6–25) becomes
Since Gfis a fixed transfer function, the design of Gcbecomes the same as the case of
series compensation. Hence the same design approach applies to the parallel compen-sated system.
Velocity Feedback Systems. A velocity feedback system (tachometer feedback
system) is an example of parallel compensated systems.The controller (or compensator)in such a system is a gain element.The gain of the feedback element in a minor loop mustbe determined properly so that the entire system satisfies the given design specifica-tions.The characteristic of such a velocity feedback system is that the variable parame-ter does not appear as a multiplying factor in the open-loop transfer function, so thatdirect application of the root-locus design technique is not possible. However, by rewrit-ing the characteristic equation such that the variable parameter appears as a multiply-ing factor, then the root-locus approach to the design is possible.
An example of control system design using parallel compensation technique is pre-
sented in Example 6–10.
EXAMPLE 6–10
Consider the system shown in Figure 6–61. Draw a root-locus diagram.Then determine the value
ofksuch that the damping ratio of the dominant closed-loop poles is 0.4.
Here the system involves velocity feedback. The open-loop transfer function is
Open-loop transfer function =20
s(s+1)(s +4)+20ks1+Gc Gf=0Gf=G2
1+G1 G2 H1+Gc G2
1+G1 G2 H=01+G1 G2 H+G2 Gc=0C
R=G1 G2
1+G2 Gc+G1 G2 H
C(s) R(s)20
(s+1) (s+ 4)1
s+–+–
k
Figure 6–61
Control system.
344
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Notice that the adjustable variable kdoes not appear as a multiplying factor. The characteristic
equation for the system is
(6–26)
Define
Then Equation (6–26) becomes
(6–27)
Dividing both sides of Equation (6–27) by the sum of the terms that do not contain K, we get
or
(6–28)
Equation (6–28) is of the form of Equation (6–11).
We shall now sketch the root loci of the system given by Equation (6–28). Notice that the
open-loop poles are located at s=j2, s=–j2, s=–5, and the open-loop zero is located at s=0.
The root locus exists on the real axis between 0 and –5.Since
we have
The intersection of the asymptotes with the real axis can be found from
as
The angle of departure (angle u) from the pole at s=j2 is obtained as follows:
Thus, the angle of departure from the pole s=j2 is 158.2°. Figure 6–62 shows a root-locus plot
for the system. Notice that two branches of the root locus originate from the poles at and
terminate on the zeros at infinity. The remaining one branch originates from the pole at s=–5
and terminates on the zero at s=0.
Note that the closed-loop poles with z=0.4 must lie on straight lines passing through the
origin and making the angles with the negative real axis. In the present case, there are two
intersections of the root-locus branch in the upper half splane and the straight line of angle 66.42°.
Thus, two values of Kwill give the damping ratio zof the closed-loop poles equal to 0.4.At point P,
the value of Kis
Hence
k=K
20=0.4490
  
at point PK=
2
(s+j2)(s -j2)(s +5)
s
2
s=-1.0490 +j2.4065
=8.9801;66.42 °s=;j2u=180°-90°-21.8°+90°=158.2 °s=-2.5lim
sSq
Ks
s
3
+5s
2
+4s+20=lim
sSq
K
s
2
+5s+p=lim
sSq
K
(s+2.5)
2
Angles of asymptote =;180°(2k +1)
2=; 90°lim
sSq
Ks
(s+j2)(s -j2)(s +5)=lim
sSq
K
s
2
1+Ks
(s+j2)(s -j2)(s +5)=01+Ks
s
3
+5s
2
+4s+20=0s
3
+5s
2
+4s+Ks+20=020k =Ks
3
+5s
2
+4s+20ks+20=0
Openmirrors.com
Section 6–9 / Parallel Compensation 345At point Q, the value of Kis
Hence
Thus, we have two solutions for this problem. For k=0.4490, the three closed-loop poles are
located at
For k=1.4130, the three closed-loop poles are located at
It is important to point out that the zero at the origin is the open-loop zero, but not the
closed-loop zero. This is evident, because the original system shown in Figure 6–61 does not
have a closed-loop zero, since
G(s)
R(s)=20
s(s+1)(s +4)+20(1 +ks)s=-2.1589 +j4.9652,  s=-2.1589 -j4.9652,  s=-0.6823s=-1.0490 +j2.4065,  s=-1.0490 -j2.4065,  s=-2.9021k=K
20=1.4130  at point QK=2(s+j2)(s -j2)(s +5)
s2
s=-2.1589 +j4.9652=28.260jv
j6
j5
j4
j3
j2
j1
–j6–j5–j4–j3–j2–j1s –11 0 –2 –3 –4 –5 –6 –7s=–2.1589 +j4.9652Q
Ps = –1.0490 +j2.4065
s=–2.902166.42 °
Figure 6–62
Root-locus plot forthe system shown in
Figure 6–61.
346
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
The open-loop zero at s=0 was introduced in the process of modifying the characteristic equa-
tion such that the adjustable variable K=20k was to appear as a multiplying factor.
We have obtained two different values of kto satisfy the requirement that the damping ratio
of the dominant closed-loop poles be equal to 0.4. The closed-loop transfer function with
k=0.4490 is given by
The closed-loop transfer function with k= 1.4130 is given by
Notice that the system with k=0.4490 has a pair of dominant complex-conjugate closed-loop
poles, while in the system with k=1.4130 the real closed-loop pole at s=–0.6823 is dominant,
and the complex-conjugate closed-loop poles are not dominant. In this case, the response char-
acteristic is primarily determined by the real closed-loop pole.
Let us compare the unit-step responses of both systems. MATLAB Program 6–14 may be
used for plotting the unit-step response curves in one diagram. The resulting unit-step response
curves for k=0.4490 andc
2
(t)fork=1.4130Dare shown in Figure 6–63. Cc
1
(t) =20
(s+2.1589 +j4.9652)(s +2.1589 -j4.9652)(s +0.6823) C(s)
R(s)=20
s
3
+5s
2
+32.26s +20 =20
(s+1.0490 +j2.4065)(s +1.0490 -j2.4065)(s +2.9021) C(s)
R(s)=20
s
3
+5s
2
+12.98s +20
MATLAB Program 6–14
% ---------- Unit-step response ----------
% ***** Enter numerators and denominators of systems with
% k = 0.4490 and k = 1.4130, respectively. *****
num1 = [20];
den1 = [1  5  12.98  20];
num2 = [20];
den2 = [1  5  32.26  20];
t = 0:0.1:10;
c1 = step(num1,den1,t);
c2 = step(num2,den2,t);
plot(t,c1,t,c2)
text(2.5,1.12,'k = 0.4490')
text(3.7,0.85,'k = 1.4130')
grid
title('Unit-step Responses of Two Systems')
xlabel('t Sec')
ylabel('Outputs c1 and c2')
Openmirrors.com
Example Problems and Solutions 347From Figure 6–63 we notice that the response of the system with k=0.4490 is oscillatory.
(The effect of the closed-loop pole at s=–2.9021 on the unit-step response is small.) For the
system with k=1.4130, the oscillations due to the closed-loop poles at 
damp out much faster than purely exponential response due to the closed-loop pole at s=–0.6823.
The system with k=0.4490 (which exhibits a faster response with relatively small overshoot)
has a much better response characteristic than the system with k=1.4130 (which exhibits a slow
overdamped response). Therefore, we should choose k=0.4490 for the present system.
EXAMPLE PROBLEMS AND SOLUTIONS
A–6–1. Sketch the root loci for the system shown in Figure 6–64(a). (The gain Kis assumed to be posi-
tive.) Observe that for small or large values of Kthe system is overdamped and for medium val-
ues of Kit is underdamped.
Solution. The procedure for plotting the root loci is as follows:
1.Locate the open-loop poles and zeros on the complex plane. Root loci exist on the negative
real axis between 0 and –1and between –2and–3.
2.The number of open-loop poles and that of finite zeros are the same. This means that there
are no asymptotes in the complex region of the splane.
3.Determine the breakaway and break-in points. The characteristic equation for the system is
or
K=-s(s+1)
(s+2)(s +3)1+K(s +2)(s +3)
s(s+1)=0s=-2.1589 ;j4.9652t Sec01 1 0 5 2 3 4 6 7 8 9Outputs c1 and c21.2
0.4
00.6
0.21
0.8Unit-Step Responses of Two Systems
k= 1.4130k= 0.4490
Figure 6–63
Unit-step responsecurves for the system
shown in Figure 6–61
when the dampingratiozof the
dominant closed-loop poles is setequal to 0.4. (Two
possible values of k
give the dampingratiozequal to 0.4.)
348
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
The breakaway and break-in points are determined from
as follows:
Notice that both points are on root loci. Therefore, they are actual breakaway or break-in
points. At point s=–0.634, the value of Kis
Similarly, at s=–2.366,
(Because point s=–0.634 lies between two poles, it is a breakaway point, and because point
s=–2.366 lies between two zeros, it is a break-in point.)K=-(–2.366)(–1.366)
(–0.366)(0.634)=14K=-(-0.634)(0.366)
(1.366)(2.366)=0.0718s=-0.634,
  
s=-2.366 =0 =- 4(s+0.634)(s +2.366)
C(s+2)(s +3)D
2
 dK
ds=- (2s+1)(s +2)(s +3)-s(s+1)(2s +5)
C(s+2)(s +3)D
2
(a) (b)R(s) C(s)jv
sK= 0.0718
K= 14
–3– 2– 1 0 1j1j2
–j1
–j2
K(s+ 2)s+ 3
s(s+ 1)
+–
Figure 6–64
(a) Control system; (b) root-locus plot.
Openmirrors.com
Example Problems and Solutions
3494.Determine a sufficient number of points that satisfy the angle condition. (It can be found
that the root loci involve a circle with center at –1.5 that passes through the breakaway and
break-in points.) The root-locus plot for this system is shown in Figure 6–64(b).
Note that this system is stable for any positive value of Ksince all the root loci lie in the left-
half splane.
Small values of K (0<K<0.0718) correspond to an overdamped system. Medium values
ofK (0.0718<K<14) correspond to an underdamped system. Finally, large values of
K (14<K) correspond to an overdamped system. With a large value of K, the steady state can
be reached in much shorter time than with a small value of K.
The value of Kshould be adjusted so that system performance is optimum according to a
given performance index.
A–6–2. Sketch the root loci for the system shown in Figure 6–65(a).
Solution. A root locus exists on the real axis between points s=–1 and s=–3.6. The asymp-
totes can be determined as follows:
The intersection of the asymptotes and the real axis is found from
s=-0+0+3.6-1
3-1=-1.3Angles of asymptotes =;180°(2k +1)
3-1=90°, -90°
(a)
(b)jv
s –4 –3 –20 1j3
j1
–j1
–j3–1
–j2j2
K(s+ 1)
s
2
(s+ 3.6)
+–
Figure 6–65
(a) Control system; (b) root-locus plot.
Openmirrors.com
350
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Since the characteristic equation is
we have
The breakaway and break-in points are found from
or
from which we get
Point s=0 corresponds to the actual breakaway point. But points are neither
breakaway nor break-in points, because the corresponding gain values Kbecome complex
quantities.
To check the points where root-locus branches may cross the imaginary axis, substitute 
into the characteristic equation, yielding.
or
Notice that this equation can be satisfied only if v=0, K=0. Because of the presence of a dou-
ble pole at the origin, the root locus is tangent to the jvaxis at v=0. The root-locus branches do
not cross the jvaxis. Figure 6–65(b) is a sketch of the root loci for this system.
A–6–3. Sketch the root loci for the system shown in Figure 6–66(a).
Solution. A root locus exists on the real axis between point s=–0.4 ands=–3.6. The angles of
asymptotes can be found as follows:
The intersection of the asymptotes and the real axis is obtained from
Next we shall find the breakaway points. Since the characteristic equation is
we have
K=-s
3
+3.6s
2
s+0.4s
3
+3.6s
2
+Ks+0.4K =0s=-0+0+3.6-0.4
3-1=-1.6Angles of asymptotes =;180°(2k +1)
3-1=90°, -90°AK-3.6v
2
B+jvAK-v
2
B=0(jv)
3
+3.6(jv)
2
+Kjv+K=0s=jvs=1.65 ;j0.9367s=0,
  
s=-1.65 +j0.9367,
  
s=-1.65 -j0.9367s
3
+3.3s
2
+3.6s =0dK
ds=-A3s
2
+7.2sB(s+1)-As
3
+3.6s
2
B
(s+1)
2
=0K=-s
3
+3.6s
2
s+1s
3
+3.6s
2
+K(s +1)=0
Openmirrors.com
Example Problems and Solutions 351The breakaway and break-in points are found from
from which we get
or
Thus, the breakaway or break-in points are at s=0 ands=–1.2. Note that s=–1.2 is a double
root.When a double root occurs in at point s=–1.2, at this point.The
value of gain Kat point s=–1.2 is
This means that with K=4.32 the characteristic equation has a triple root at point s=–1.2. This
can be easily verified as follows:
s3+3.6s2+4.32s +1.728 =(s+1.2)3=0K=-s3+3.6s2
s+42
s=-1.2=4.32d2K/H20862Ads2B=0 dK /H20862ds=0s(s+1.2)2=0s3+2.4s2+1.44s =0dK
ds=-A3s2+7.2sB(s+0.4) -As3+3.6s2B
(s+0.4)2=0(a) (b)jv
s –4 –3 –20 1j3
j1
–j1
–j3–j2j2
K(s+ 0.4)
s2(s+ 3.6)–1
–60°60°
+–
Figure 6–66
(a) Control system; (b) root-locus plot.
352
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Hence, three root-locus branches meet at point s=–1.2. The angles of departures at point
s=–1.2 of the root locus branches that approach the asymptotes are that is, 60° and
–60°. (See Problem A–6–4 .)
Finally, we shall examine if root-locus branches cross the imaginary axis. By substituting s=jv
into the characteristic equation, we have
or
This equation can be satisfied only if v=0, K=0. At point v=0, the root locus is tangent to
thejvaxis because of the presence of a double pole at the origin.There are no points where root-
locus branches cross the imaginary axis.
A sketch of the root loci for this system is shown in Figure 6–66(b).
A–6–4. Referring to Problem A–6–3 , obtain the equations for the root-locus branches for the system
shown in Figure 6–66(a). Show that the root-locus branches cross the real axis at the breakaway
point at angles ;60°.
Solution. The equations for the root-locus branches can be obtained from the angle condition
which can be rewritten as
By substituting we obtain
or
By rearranging, we have
Taking tangents of both sides of this last equation, and noting that
we obtain
which can be simplified to
vs-v(s+0.4)
(s+0.4)s+v
2
=v(s+3.6) +vs
s(s+3.6) -v
2
v
s+0.4-v
s
1+v
s+0.4v
s=v
s+v
s+3.6
1-v
sv
s+3.6tan
 
c
tan
-1
 
a
v
s+3.6
b
;180°(2k +1)
d
=v
s+3.6tan
-1
 
a
v
s+0.4
b
-tan
-1
 
a
v
s
b
=tan
-1
 
a
v
s
b
+tan
-1
 
a
v
s+3.6
b
;180°(2k+1)tan
-1
 
a
v
s+0.4
b
-2tan
-1
 
a
v
s
b
-tan
-1
 
a
v
s+3.6
b
=;180°(2k +1)
/
s+jv+0.4
-2
/
s+jv
-
/
s+jv+3.6
=;180°(2k +1)s=s+jv,
/
s+0.4
-2
/
s
-
/
s+3.6
=;180°(2k +1)
n
K(s +0.4)
s
2
(s+3.6)
=;180°(2k +1)A0.4K -3.6v
2
B+jvAK-v
2
B=0(jv)
3
+3.6(jv)
2
+K(jv)+0.4K =0;180°/H208623,
Openmirrors.com
Example Problems and Solutions 353or
which can be further simplified to
For sZ–1.6, we may write this last equation as
which gives the equations for the root locus as follows:
The equation v=0 represents the real axis. The root locus for 0 /H11349K/H11349qis between points
s=–0.4 and s=–3.6. (The real axis other than this line segment and the origin s=0 corre-
sponds to the root locus for –q/H11349K<0. )
The equations
(6–29)
represent the complex branches for 0 /H11349K/H11349q. These two branches lie between s=–1.6 and
s=0 . [See Figure 6–66(b).] The slopes of the complex root-locus branches at the breakaway
point (s=–1.2) can be found by evaluating of Equation (6–29) at point s=–1.2.
Since the root-locus branches intersect the real axis with angles 
A–6–5. Consider the system shown in Figure 6–67(a). Sketch the root loci for the system. Observe that
for small or large values of Kthe system is underdamped and for medium values of Kit is
overdamped.
Solution. A root locus exists on the real axis between the origin and –q. The angles of asymp-
totes of the root-locus branches are obtained as
The intersection of the asymptotes and the real axis is located on the real axis at
The breakaway and break-in points are found from Since the characteristic equation is
s3+4s2+5s+K=0dK /H20862ds=0.s=-0+2+2
3=-1.3333Angles of asymptotes =;180°(2k +1)
3=60°, -60°, -180°;60°. tan-113=60°,dv
ds2
s=-1.2=;A-s
s+1.62
s=-1.2=;A1.2
0.4=;13dv/H20862dsv=;(s+1.2)A-s
s+1.6 v=-(s+1.2)A-s
s+1.6 v=(s+1.2)A-s
s+1.6 v=0vcv-(s+1.2)A-s
s+1.6dcv+(s+1.2)A-s
s+1.6d=0vCs(s+1.2)2+(s+1.6)v2D=0vAs3+2.4s2+1.44s+1.6v2+sv2B=0
354
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
we have
Now we set
which yields
Since these points are on root loci, they are actual breakaway or break-in points. (At point s=–1,
the value of Kis 2, and at point s=–1.6667, the value of Kis 1.852.)
The angle of departure from a complex pole in the upper-half splane is obtained from
or
The root-locus branch from the complex pole in the upper-half splane breaks into the real axis
ats=–1.6667.
Next we determine the points where root-locus branches cross the imaginary axis. By substi-
tuting s=jvinto the characteristic equation, we have
or
from which we obtain
v=;15
,
  
K=20
  
or
  
v=0,
  
K=0AK-4v
2
B+jvA5-v
2
B=0(jv)
3
+4(jv)
2
+5(jv)+K=0u=-63.43 °u=180°-153.43 °-90°s=-1,
  
s=-1.6667dK
ds=-A3s
2
+8s+5B=0K=-As
3
+4s
2
+5sB
(a)
(b)K
s(s
2
+ 4s+ 5)
jv
s –4 –3 –20 1j3
j2
j1
–j2–j1
–j3–1K= 2 K= 1.852
+–
Figure 6–67
(a) Control system;
(b) root-locus plot.
Openmirrors.com
Example Problems and Solutions 355Root-locus branches cross the imaginary axis at and The root-locus branch
on the real axis touches the jvaxis at v=0. A sketch of the root loci for the system is shown in
Figure 6–67(b).
Note that since this system is of third order, there are three closed-loop poles. The nature of
the system response to a given input depends on the locations of the closed-loop poles.
For 0<K<1.852, there are a set of complex-conjugate closed-loop poles and a real closed-
loop pole. For 1.852 /H11349K/H113492, there are three real closed-loop poles. For example, the closed-
loop poles are located at
For 2<K, there are a set of complex-conjugate closed-loop poles and a real closed-loop pole.
Thus, small values of K (0<K<1.852) correspond to an underdamped system. (Since the real
closed-loop pole dominates, only a small ripple may show up in the transient response.) Mediumvalues of K(1.852 /H11349K/H113492) correspond to an overdamped system. Large values of K (2<K)
correspond to an underdamped system.With a large value of K, the system responds much faster
than with a smaller value of K.
A–6–6. Sketch the root loci for the system shown in Figure 6–68(a).
Solution. The open-loop poles are located at s=0, s=–1, s=–2+j3, ands=–2-j3. A root
locus exists on the real axis between points s=0 and s=–1. The angles of the asymptotes are
found as follows:
Angles of asymptotes =;180°(2k +1)
4=45°, -45°, 135 °, -135° s=-1,    s=-1,    s=-2,    for K=2 s=-1.667,   s=-1.667,   s=-0.667,   for K=1.852v=-15 . v=15
(a) (b)jv
s –4–3 –6–53 –22 01j3j4j5
j1
–j1
–j3
–j4
–j5–1
–j2j2
K
s(s+ 1) (s2+ 4s+13)+–
Figure 6–68
(a) Control system; (b) root-locus plot.
356
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
The intersection of the asymptotes and the real axis is found from
The breakaway and break-in points are found from Noting that
we have
from which we get
Point s=–0.467 is on a root locus. Therefore, it is an actual breakaway point. The gain values K
corresponding to points are complex quantities. Since the gain values are
not real positive, these points are neither breakaway nor break-in points.
The angle of departure from the complex pole in the upper-half splane is
or
Next we shall find the points where root loci may cross the jvaxis. Since the characteristic
equation is
by substituting s=jvinto it we obtain
or
from which we obtain
The root-locus branches that extend to the right-half splane cross the imaginary axis at
Also, the root-locus branch on the real axis touches the imaginary axis at 
Figure 6–68(b) shows a sketch of the root loci for the system. Notice that each root-locus branch
that extends to the right-half splane crosses its own asymptote.v=0. v=;1.6125.v=; 1.6125,
  
K=37.44
  
or
  
v=0,
  
K=0AK+v
4
-17v
2
B+jvA13-5v
2
B=0(jv)
4
+5(jv)
3
+17(jv)
2
+13(jv)+K=0s
4
+5s
3
+17s
2
+13s +K=0u=-142.13 °u=180°-123.69 °-108.44 °-90°s=-1.642 ;j2.067s=-0.467,
  
s=-1.642 +j2.067,
  
s=-1.642 -j2.067dK
ds=-A4s
3
+15s
2
+34s +13B=0K=-s(s+1)As
2
+4s+13B=-As
4
+5s
3
+17s
2
+13sBdK /H20862ds=0.s=-0+1+2+2
4=-1.25
Openmirrors.com
Example Problems and Solutions 357A–6–7. Sketch the root loci of the control system shown in Figure 6–69(a). Determine the range of gain
Kfor stability.
Solution. Open-loop poles are located at s=1, and A root locus
exists on the real axis between points s=1 and s=– q. The asymptotes of the root-locus
branches are found as follows:
The intersection of the asymptotes and the real axis is obtained as
The breakaway and break-in points can be located from Since
we have
which yields
(s+1)2=0dK
ds=-A3s2+6s+3B=0K=-(s-1)As2+4s+7B=-As3+3s2+3s-7BdK /H20862ds=0.s=--1+2+2
3=-1Angles of asymptotes =;180°(2k +1)
3=60°, -60°, 180 °s=-2-j13. s=-2+j13,
jv
sj3
j2
j1
(a) (b)K
(s– 1) (s2+ 4s+ 7)
–j3–j1–4 –3 –20 1K= 7K= 8K= 16
–1
+––j2
Figure 6–69
(a) Control system; (b) root-locus plot.
358
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Thus the equation dK /H20862ds=0 has a double root at s=–1. (This means that the characteristic
equation has a triple root at s=–1. ) The breakaway point is located at s=–1. Three root-locus
branches meet at this breakaway point.The angles of departure of the branches at the breakaway
point are ;180° /H208623—that is, 60° and –60°.
We shall next determine the points where root-locus branches may cross the imaginary axis.
Noting that the characteristic equation is
or
we substitute into it and obtain
By rewriting this last equation, we have
This equation is satisfied when
The root-locus branches cross the imaginary axis at (where K=16 ) and (where
K=7 ). Since the value of gain Kat the origin is 7, the range of gain value Kfor stability is
Figure 6–69(b) shows a sketch of the root loci for the system. Notice that all branches consist of
parts of straight lines.
The fact that the root-locus branches consist of straight lines can be verified as follows: Since
the angle condition is
we have
By substituting into this last equation,
or
which can be rewritten as
tan
-1
 
a
v+13
s+2
b
+tan
-1
 
a
v-13
s+2
b
=-tan
-1
 
a
v
s-1
b
;180°(2k+1)
/
s+2+jAv+13
B
+
/
s+2+jAv-13
B
=-
/
s-1+jv
;180°(2k +1)
/
s-1+jv
+
/
s+2+jv+j13
+
/
s+2+jv-j13
=;180°(2k +1)s=s+jv-
/
s-1
-
/
s+2+j13
-
/
s+2-j13
=;180°(2k +1)
n
K
(s-1)As+2+j13
BAs+2-j13
B
=;180°(2k +1)76K616v=0 v=;13
v=;13
,
  
K=7+3v
2
=16
  
or
  
v=0,
  
K=7AK-7-3v
2
B+jvA3-v
2
B=0(jv)
3
+3(jv)
2
+3(jv)-7+K=0s=jvs
3
+3s
2
+3s-7+K=0(s-1)As
2
+4s+7B+K=0
Openmirrors.com
Example Problems and Solutions 359Taking tangents of both sides of this last equation, we obtain
or
which can be simplified to
or
Further simplification of this last equation yields
which defines three lines:
Thus the root-locus branches consist of three lines. Note that the root loci for K>0 consist of
portions of the straight lines as shown in Figure 6–69(b). (Note that each straight line starts from
an open-loop pole and extends to infinity in the direction of 180°, 60°, or –60° measured from the
real axis.) The remaining portion of each straight line corresponds to K<0.
A–6–8. Consider a unity-feedback control system with the following feedforward transfer function:
Using MATLAB, plot the root loci and their asymptotes.
Solution. We shall plot the root loci and asymptotes on one diagram. Since the feedforward trans-
fer function is given by 
the equation for the asymptotes may be obtained as follows: Noting that
the equation for the asymptotes may be given by
Ga(s)=K
(s+1)3lim
sSqK
s3+3s2+2s/H11216lim
sSqK
s3+3s2+3s+1=K
(s+1)3=K
s3+3s2+2sG(s) =K
s(s+1)(s+2)G(s) =K
s(s+1)(s+2)v=0,  s+1+1
13 v=0,  s+1-1
13 v=0vas+1+1
13vbas+1-1
13vb=0vA3s2+6s+3-v2B=02v(s+2)(s-1)=-vAs2+4s+7-v2B2v(s+2)
s2+4s+4-v2+3=-v
s-1v+13
s+2+v-13
s+2
1-av+13
s+2bav-13
s+2b=-v
s-1
360
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Hence, for the system we have
num = [1]
den = [1  3  2  0]
and for the asymptotes,
numa = [1]
dena = [1  3  3  1]
In using the following root-locus and plot commands
r = rlocus(num,den)
a = rlocus(numa,dena)
plot([r  a])
the number of rows of rand that of amust be the same. To ensure this, we include the gain con-
stant Kin the commands. For example,
K1 = 0:0.1:0.3;
K2 = 0.3:0.005:0.5:
K3 = 0.5:0.5:10;
K4 = 10:5:100;
K = [K1  K2  K3  K4]
r = rlocus(num,den,K)
a = rlocus(numa,dena,K)
y = [r    a]
plot(y, '-')
MATLAB Program 6–15 will generate a plot of root loci and their asymptotes as shown in Figure 6–70.
MATLAB Program 6–15
% ---------- Root-Locus Plots ----------
num = [1];
den = [1  3  2  0];
numa = [1];
dena = [1  3  3  1];
K1 = 0:0.1:0.3;
K2 = 0.3:0.005:0.5;
K3 = 0.5:0.5:10;
K4 = 10:5:100;
K = [K1  K2  K3  K4];
r = rlocus(num,den,K);
a = rlocus(numa,dena,K);
y = [r    a];
plot(y,'-')
v = [-4  4  -4  4]; axis(v)
grid
title('Root-Locus Plot of G(s) = K/[s(s + 1)(s + 2)] and Asymptotes')
xlabel('Real Axis')
ylabel('Imag Axis')
% ***** Manually draw open-loop poles in the hard copy *****
Openmirrors.com
Example Problems and Solutions 361Drawing two or more plots in one diagram can also be accomplished by using the hold com-
mand. MATLAB Program 6–16 uses the hold command. The resulting root-locus plot is shown
in Figure 6–71.Root-Locus Plot of G(s)=K/[(s(s+1)(s+2)] and AsymptotesImag Axis4
–403
2
1
–1
–2
–3
Real Axis–4 1 –3 –2 –1 0 4 2 3 Figure 6–70
Root-locus plot.
MATLAB Program 6–16
% ------------ Root-Locus Plots ------------
num = [1];den = [1  3  2  0];numa = [1];dena = [1  3  3  1];K1 = 0:0.1:0.3;K2 = 0.3:0.005:0.5;K3 = 0.5:0.5:10;K4 = 10:5:100;K = [K1  K2  K3  K4];r = rlocus(num,den,K);a = rlocus(numa,dena,K);plot(r,'o')holdCurrent plot heldplot(a,'-')v = [-4  4  -4  4]; axis(v)gridtitle('Root-Locus Plot of G(s) = K/[s(s+1)(s+2)] and Asymptotes')xlabel('Real Axis')ylabel('Imag Axis')
362
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
A–6–9. Plot the root loci and asymptotes for a unity-feedback system with the following feedforward
transfer function:
Determine the exact points where the root loci cross the jvaxis
Solution. The feedforward transfer function G(s) can be written as
Note that as sapproaches infinity, can be written as 
where we used the following formula:
The expression
gives the equation for the asymptotes.lim
sSq
G(s) =lim
sSq
K
(s+1)
4
(s+a)
4
=s
4
+4as
3
+6a
2
s
2
+4a
3
s+a
4
=lim
sSq
K
(s+1)
4
/H11216lim
sSq
K
s
4
+4s
3
+6s
2
+4s+1lim
sSq
G(s) =lim
sSq
K
s
4
+4s
3
+11s
2
+14s+10lim
sSq
G(s)G(s) =K
s
4
+4s
3
+11s
2
+14s+10G(s) =K
(s
2
+2s+2)(s
2
+2s+5)
Root-Locus Plot of G(s)=K/[s(s+1)(s+2)] and Aysmptotes
Imag Axis
4
–40
3
2
1
–1
–2
–3
Real Axis–4 1 –3
–2
–1
04
2
3
Figure 6–71
Root-locus plot.
Openmirrors.com
Example Problems and Solutions 363The MATLAB program to plot the root loci of G(s) and the asymptotes is given in MATLAB
Program 6–17. Note that the numerator and denominator for G(s) are
num = [1]
den = [1  4  11  14  10]
For the numerator and denominator of the asymptotes we used
numa = [1]
dena = [1  4  6  4  1]
Figure 6–72 shows the plot of the root loci and asymptotes.
Since the characteristic equation for the system is 
(s2+2s+2)(s2+2s+5)+K=0lim
sSqG(s)
MATLAB Program 6–17
% ***** Root-locus plot ***** 
num = [1];
den = [1   4  11  14   10];numa = [1];dena = [1   4  6  4   1];r = rlocus(num,den);plot(r,'-')holdCurrent plot heldplot(r,'o')rlocus(numa,dena);v = [-6  4  -5  5]; axis(v); axis('square')gridtitle('Plot of Root Loci and Asymptotes')
4 2 0 −6 −4 −2015
3
24
−2−1
−5−4−3
Real AxisImag AxisPlot of Root Loci and Asymptotes
Figure 6–72
Plot of root loci andasymptotes.
364
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
the points where the root loci cross the imaginary axis can be found by substituting s=jvwith
the characteristic equation as follows:
and equating the imaginary part to zero. The result is
Thus the exact points where the root loci cross the jvaxis are By equating the real
part to zero, we get the gain value Kat the crossing points to be 16.25.
A–6–10. Consider a unity-feedback control system with the feed-forward transfer function G(s) given by
Plot a root-locus diagram with MATLAB.
Solution. The feedforward transfer function G(s) can be written as
A possible MATLAB program to plot a root-locus diagram is shown in MATLAB Program 6–18.
The resulting root-locus plot is shown in Figure 6–73.G(s) =K(s +1)
s
4
+4s
3
+11s
2
+14s+10G(s) =K(s +1)
(s
2
+2s+2)(s
2
+2s+5)v=;1.8708.v=;1.8708=(v
4
-11v
2
+10+K)+j(-4v
3
+14v)=0[(jv)
2
+2jv+2][(jv)
2
+2jv+5]+K
MATLAB Program 6–18
num = [1  1];
den = [1  4  11  14  10];
K1 = 0:0.1:2;
K2 = 2:0.0.2:2.5;
K3 = 2.5:0.5:10;
K4 = 10:1:50;
K = [K1  K2  K3  K4]
r = rlocus(num,den,K);
plot(r, 'o')
v = [-8  2  -5  5]; axis(v); axis('square')
grid
title('Root-Locus Plot of G(s) = K(s+1)/[(s^2+2s+2)(s^2+2s+5)]')
xlabel('Real Axis')
ylabel('Imag Axis')
Openmirrors.com
Example Problems and Solutions 365A–6–11. Obtain the transfer function of the mechanical system shown in Figure 6–74. Assume that the
displacement xiis the input and displacement xois the output of the system.
Solution. From the diagram we obtain the following equations of motion:
Taking the Laplace transforms of these two equations, assuming zero initial conditions, and then
eliminating Y(s), we obtain
This is the transfer function between and By defining
we obtain
This mechanical system is a mechanical lead network.Xo(s)
Xi(s)=aTs+1
aTs+1=s+1
T
s+1
aTb1
k=T,  b2
b1+b2=a61Xi(s). Xo(s)Xo(s)
Xi(s)=b2
b1+b2b1
ks+1
b2
b1+b2b1
ks+1 b1Ax#
o-y#B=ky b2Ax#
i-x#
oB=b1Ax#
o-y#B−3 −2 −10 1 −4 −5 −8 2 −7 −6013
245
−2−1
−5−4−3
Real AxisImag AxisRoot-Locus Plot of G(s) = K(s + 1)/[( s2 + 2 s + 2)( s2 + 2 s + 5)]
Figure 6–73
Plot of root loci.
b2
b1
kyxi
xo
Figure 6–74
Mechanical system.
366
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
A–6–12. Obtain the transfer function of the mechanical system shown in Figure 6–75.Assume that the dis-
placement x
i
is the input and displacement x
o
is the output.
Solution. The equations of motion for this system are
By taking the Laplace transforms of these two equations, assuming zero initial conditions, we
obtain
If we eliminate Y(s) from the last two equations, the transfer function can be
obtained as
Define
Ifk
1
,k
2
, b
1
,andb
2
are chosen such that there exists a ıthat satisfies the following equation:
(6–30)
then can be obtained as
[Note that depending on the choice of k
1
, k
2
, b
1
, and b
2
,there does not exist a ı that satisfies
Equation (6–30).]
If such a ı exists and if for a given s
1
(where s=s
1
is one of the dominant closed-loop poles
of the control system to which we wish to use this mechanical device) the following conditions are
satisfied:
then the mechanical system shown in Figure 6–75 acts as a lag–lead compensator.-5°6
n
s
1
+1
T
2
s
1
+1
bT
2
60°
4
s
1
+1
T
2
s
1
+1
bT
2
4
/H112161, X
o
(s)
X
i
(s)=AT
1
 
s+1BAT
2
 
s+1B
a
T
1
b s+1
b
AbT
2
 
s+1B=
a
s+1
T
1
ba
s+1
T
2
b
a
s+b
T
1
ba
s+1
bT
2
b
X
o
(s) /H20862X
i
(s)b
1
k
1
+b
2
k
2
+b
1
k
2
=T
1
b+bT
2
  
(b71)T
1
=b
1
k
1
,T
2
=b
2
k
2
, X
o
(s)
X
i
(s)=
a
b
1
k
1
 s+1
ba
b
2
k
2
 s+1
b
a
b
1
k
1
 s+1
ba
b
2
k
2
 s+1
b
+b
1
k
2
 sX
o
(s) /H20862X
i
(s) b
1
CsX
o
(s)-sY(s)D=k
1
Y(s) b
2
CsX
i
(s)-sX
o
(s)D+k
2
CX
i
(s)-X
o
(s)D=b
1
CsX
o
(s)-sY(s)Db
1
Ax#
o
-y#B=k
1
yb
2
Ax#
i
-x#
o
B+k
2
Ax
i
-x
o
B=b
1
Ax#
o
-y#B
b
1
b
2
yx
i
x
o
k
2
k
1
Figure 6–75
Mechanical system.
Openmirrors.com
Example Problems and Solutions 367A–6–13. Consider the model for a space-vehicle control system shown in Figure 6–76. Design a lead
compensator Gc(s)such that the damping ratio zand the undamped natural frequency vnof the
dominant closed-loop poles are 0.5 and 2 rad /H20862sec, respectively.
Solution.
First Attempt: Assume the lead compensator Gc(s)to be
From the given specifications, z=0.5 and vn=2 rad /H20862sec, the dominant closed-loop poles must
be located at
We first calculate the angle deficiency at this closed-loop pole.
This angle deficiency must be compensated by the lead compensator. There are many ways to
determine the locations of the pole and zero of the lead network. Let us choose the zero of the
compensator at s=–1. Then, referring to Figure 6–77, we have the following equation:
1.73205
x-1=tan  (90°-70.8934 °)=0.34641 =-70.8934 ° Angle deficiency =-120°-120°-10.8934 °+180°s=-1;j13Gc(s)=Kc±s+1
T
s+1
aT≤  (06a61)R(s) C(s)
Lead
compensatorGc(s)
Space
vehicle
Sensor1
s2
1
0.1s+ 1+–
Figure 6–76
Space-vehicle controlsystem.
jv
s –1019.1066 °70.8934 °j1.73205
xFigure 6–77
Determination of thepole of the leadnetwork.
368
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
or
Hence,
The value of can be determined from the magnitude condition
as follows:
Thus
Since the open-loop transfer function becomes
a root-locus plot of the compensated system can be obtained easily with MATLAB by entering
num anddenand using rlocus command. The result is shown in Figure 6–78. =11.2(s +1)
0.1s
4
+1.6s
3
+6s
2
 G
c
(s)G(s)H(s) =11.2 s+1
(s+6)s
2
(0.1s +1)G
c
(s)=11.2s+1
s+6K
c
=
2
(s+6)s
2
(0.1s +1)
s+1
2
s=-1+j13
=11.2000K
c
2
s+1
s+61
s
2
1
0.1s +1
2
s=-1+j13
=1K
c
G
c
(s)=K
c
s+1
s+6x=1+1.73205
0.34641=6
Real Axis–10
5
10
–5
0
Imag Axis
0
10
–5
5
–10
Root-Locus Plot of Compensated System
Figure 6–78
Root-locus plot of
the compensated
system.
Openmirrors.com
Example Problems and Solutions 369The closed-loop transfer function for the compensated system becomes
Figure 6–79 shows the unit-step response curve. Even though the damping ratio of the
dominant closed-loop poles is 0.5, the amount of overshoot is very much higher than expected.A
closer look at the root-locus plot reveals that the presence of the zero at s=–1 is increasing the
amount of the maximum overshoot. [In general, if a closed-loop zero or zeros (compensator zeroor zeros) lie to the right of the dominant pair of the complex poles, then the dominant poles areno longer dominant.] If large maximum overshoot cannot be tolerated, the compensator zero(s)should be shifted sufficiently to the left.
In the current design, it is desirable to modify the compensator and make the maximum
overshoot smaller. This can be done by modifying the lead compensator, as presented in thefollowing second attempt.
Second Attempt: To modify the shape of the root loci, we may use two lead networks, each
contributing half the necessary lead angle, which is Let us choose thelocation of the zeros at s=–3. (This is an arbitrary choice. Other choices such as s=–2.5 and
s=–4 may be made.)
Once we choose two zeros at s=–3, the necessary location of the poles can be determined
as shown in Figure 6–80, or
which yields
y=1+1.73205
0.09535=19.1652 =tan5.4466 °=0.09535 1.73205
y-1=tan  (40.89334 °-35.4467 °)70.8934 °/H208622=35.4467 °.C(s)
R(s)=11.2(s +1)(0.1s +1)
(s+6)s2(0.1s +1)+11.2(s +1)t Sec2 1 07 9 6 8 10 4 3 5Output
0.51.5
01Unit-Step Response of Compensated System
Figure 6–79
Unit-step response of
the compensatedsystem.
370
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Hence, the lead compensator will have the following transfer function:
The value of can be determined from the magnitude condition as follows:
or
Then the lead compensator just designed is
Then the open-loop transfer function becomes
A root-locus plot for the compensated system is shown in Figure 6–81(a). Notice that there is no
closed-loop zero near the origin.An expanded view of the root-locus plot near the origin is shown
in Figure 6–81(b).
The closed-loop transfer function becomes
The closed-loop poles are found as follows:
 s=-27.9606 s=-9.1847 ;j7.4814 s=-1;j1.73205C(s)
R(s)=174.3864(s +3)
2
(0.1s +1)
(s+19.1652)
2
s
2
(0.1s +1)+174.3864(s +3)
2
G
c
(s)G(s)H(s) =174.3864
a
s+3
s+19.1652
b
2
1
s
2
1
0.1s +1G
c
(s)=174.3864
a
s+3
s+19.1652
b
2
K
c
=174.3864
2
K
c
a
s+3
s+19.1652
b
2
1
s
2
1
0.1s +1
2
s=-1+j13
=1K
c
G
c
(s)=K
c
a
s+3
s+19.1652
b
2
–20 –16 –12 –8 –4 –10jv
s35.4467 °
40.89334 °j1.73205
y
Figure 6–80
Determination of the
pole of the lead
network.
Openmirrors.com
Example Problems and Solutions 371Figures 6–82(a) and (b) show the unit-step response and unit-ramp response of the compensated
system.The unit-step response curve is reasonable and the unit-ramp response looks acceptable.
Notice that in the unit-ramp response the output leads the input by a small amount.This is becausethe system has a feedback transfer function 1/(0.1s+1). If the feedback signal versus tis plotted,
together with the unit-ramp input, the former will not lead the input ramp at steady state. SeeFigure 6–82(c).Real Axis−41 0 2 −2 −3 −1
(b)Imag Axis
−213
−12
−30Root-Locus Plot of Compensated System near Origin
: Closed-loop polesReal Axis–25 –30 0 10 −5 5 –15 –20 –10
(a)Imag Axis
–10515
010
–15−5
–2020Root-Locus Plot of Compensated System
: Closed-loop poles
Figure 6–81
(a) Root-locus plot of compensated system; (b) root-locus plot near the origin.
372
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
A–6–14. Consider a system with an unstable plant as shown in Figure 6–83(a). Using the root-locus
approach, design a proportional-plus-derivative controller that is, determine the values of K
p
and such that the damping ratio zof the closed-loop system is 0.7 and the undamped natural
frequency v
n
is 0.5 rad /H20862sec.
Solution. Note that the open-loop transfer function involves two poles at s=1.085 ands=–1.085
and one zero at which is unknown at this point.
Since the desired closed-loop poles must have v
n
=0.5 rad /H20862sec and z=0.7, they must be
located at
s=0.5
/
180°;45.573 °
s=-1/H20862T
d
 
,T
d
BA
t Sec2
1
07
9
6
8
10 4
3
5
(a)
Output
0.4
0.81.4
0
1.2
0.6
1
0.2
Unit-Step Response of Compensated System
t Sec1
0
5 4
2
3
(b)
Unit-Ramp Input and Output
1.5
2.5
3.5
2
3
0
0.5
1
4
4.5
5
Unit-Ramp Response of Compensated System
Output
t Sec1
05 4
2
3
(c)
Unit-Ramp Input and Feedback Signal
1.5
2.5
3.5
2
3
0
0.5
1
4
4.5
5Feedback Signal in Unit-Ramp Response
Feedback Signal
Figure 6–82
(a) unit-step
response of the
compensated system;
(b) unit-ramp
response of the
compensated system;
(c) a plot of feedback
signal versus tin the
unit-ramp response.
Openmirrors.com
Example Problems and Solutions 373(z=0.7 corresponds to a line having an angle of 45.573° with the negative real axis.) Hence, the
desired closed-loop poles are at
The open-loop poles and the desired closed-loop pole in the upper half-plane are located in the
diagram shown in Figure 6–83(b). The angle deficiency at point s=–0.35+j0.357 is
This means that the zero at must contribute 11.939°, which, in turn, determines the
location of the zero as follows:
s=-1
Td=-2.039s=-1/H20862Td-166.026 °-25.913 °+180°=-11.939 °s=-0.35 ;j0.357+–
(a)
(b)Kp(1+Tds)1
10000 ( s2– 1.1772)
0jv
s45.573 °j3
j2
j1
–j1
–j3–j225.913 °166.026 °Closed-loop pole
1.085 2 –1.085 – 4 –3 –2.039
Figure 6–83
(a) PD control of anunstable plant;
(b) root-locus
diagram for thesystem.
374
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Hence, we have
(6–31)
The value of is
The value of gain K
p
can be determined from the magnitude condition as follows:
or
Hence,
By substituting the numerical values of and into Equation (6–31), we obtain
which gives the transfer function of the desired proportional-plus-derivative controller.
A–6–15. Consider the control system shown in Figure 6–84. Design a lag compensator G
c
(s)such that the
static velocity error constant K
v
is 50 sec
–1
without appreciably changing the location of the orig-
inal closed-loop poles, which are at 
Solution. Assume that the transfer function of the lag compensator is
G
c
(s)=K
ˆ
c
s+1
T
s+1
bT
  
(b71)s=-2;j16
.K
p
A1+T
d
 
sB=14,273(1 +0.4904s) =6999.5(s +2.039)K
p
T
d
K
p
=6999.5
0.4904=14,273K
p
 
T
d
=6999.5
2
K
p
 
T
d
s+2.039
10000As
2
-1.1772B
2
s=-0.35+j0.357
=1T
d
=1
2.039=0.4904T
d
K
p
A1+T
d
 
sB=K
p
 
T
d
a
1
T
d
+s
b
=K
p
 
T
d
(s+2.039)
G
c
(s)
R(s) C(s)10
s(s+ 4)
+–
Figure 6–84
Control system.
Openmirrors.com
Example Problems and Solutions 375Since Kvis specified as 50 sec–1, we have
Thus
Now choose Then
Choose T=10. Then the lag compensator can be given by
The angle contribution of the lag compensator at the closed-loop pole is
which is small.The magnitude of Gc(s)at is 0.981. Hence the change in the location
of the dominant closed-loop poles is very small.
The open-loop transfer function of the system becomes
The closed-loop transfer function is
To compare the transient-response characteristics before and after the compensation, the unit-step
and unit-ramp responses of the compensated and uncompensated systems are shown in Figures
6–85(a) and (b), respectively.The steady-state error in the unit-ramp response is shown in Figure6–85(c). The designed lag compensator is acceptable.C(s)
R(s)=10s +1
s3+4.005s2+10.02s +1Gc(s)G(s) =s+0.1
s+0.00510
s(s+4)s=-2+j6 =-1.3616 ° /Gc(s) 2
s=-2+j16=tan-1 16
-1.9-tan-1 16
-1.995s=-2+j16Gc(s)=s+0.1
s+0.005b=20Kˆc=1.Kˆc b=20Kv=lim
sS0sGc(s)10
s(s+4)=Kˆc b2.5=50
376
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
t Sec2
1
07
9
6
8
10 4
3
5
(a)
Outputs
0.4
0.8
01.2
0.6
1
0.2
Unit-Step Responses of Compensated and Uncompensated Systems
Uncompensated system
Compensated system
t Sec2
1
07
9
6
8
10 4
3
5
(b)
Input Ramp and Outputs
2
4
0
6
3
5
1
7
8
9
10Unit-Ramp Responses of Compensated and Uncompensated Systems
Uncompensated system has
steady-state error of 0.4
Compensated system has
steady-state error of 0.02
t Sec36
35.5
35 38.5
39.5
38
39
40 37
36.5
37.5
(c)
Input Ramp and Outputs
37.5
38.540
35
39.5
38
39
35.5
37
36.5
36
Unit-Ramp Response (35 /H11021t/H11021 40)
Uncompensated system
Compensated system
Figure 6–85
(a) Unit-step
responses of the
compensated and
uncompensated
systems; (b) unit-
ramp responses of
both systems; (c)
unit-ramp responses
showing steady-state
errors.
Openmirrors.com
Example Problems and Solutions 377A–6–16. Consider a unity-feedback control system whose feedforward transfer function is given by
Design a compensator such that the dominant closed-loop poles are located at 
and the static velocity error constant Kvis equal to 80 sec–1.
Solution. The static velocity error constant of the uncompensated system is 
Since Kv=80 is required, we need to increase the open-loop gain by 128. (This implies that we
need a lag compensator.) The root-locus plot of the uncompensated system reveals that it is not
possible to bring the dominant closed-loop poles to by just a gain adjustment alone.See Figure 6–86. (This means that we also need a lead compensator.) Therefore, we shall employa lag–lead compensator.
Let us assume the transfer function of the lag–lead compensator to be
where K
c=128. This is because
and we obtain Kc=128. The angle deficiency at the desired closed-loop pole is
The lead portion of the lag–lead compensator must contribute . To choose we may use the
graphical method presented in Section 6–8.T1 60°Angle deficiency =- 120°-90°-30°+180°=- 60°s=-2+j213Kv=lim
sS0sGc(s)G(s) =lim
sS0sKcG(s) =Kc10
16=80Gc(s)=Kc±s+1
T1
s+b
T1≤±s+1
T2
s+1
bT2≤-2;j213Kv=10
16=0.625.s=-2;j213G(s) =10
s(s+2)(s +8)
Real Axis−10 5 10 −5 0Imag Axis10
−106
−6
−84
02
−28
−4Root-Locus Plot of G(s) = 10/[ s(s+2)( s+8)]
Desired closed-loop
pole
Complex conjugate
closed-loop pole
Figure 6–86
Root-locus plot of
Cs(s+2)(s +8)D.G(s) =10/H20862
The lead portion must satisfy the following conditions:
and
The first condition can be simplified as
By using the same approach as used in Section 6–8, the zero and pole can
be determined as follows:
See Figure 6–87. The value of bis thus determined as
For the lag portion of the compensator, we may choose
1
bT
2
=0.01b=14.4191
T
1
=3.70,
  
b
T
1
=53.35As=b/H20862T
1
B As=1/H20862T
1
B
4
s
1
+1
T
1
s
1
+b
T
1
4
s
1
=-2+j213
=1
13.3333
n
s
1
+1
T
1
s
1
+b
T
1
5
s
1
=-2+j213
=60°
4
128
±
s
1
+1
T
1
s
1
+b
T
1
≤
GAs
1
B
4
s
1
=-2+j213
=1
378
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
–53.35
13.3333x
–3.7060°
xjv
ss
1
0
Figure 6–87
Graphical
determination of the
zero and pole of
the lead portion
of the compensator.
Openmirrors.com
Example Problems and Solutions 379Then
Noting that
the angle contribution of the lag portion is –1.697° and the magnitude contribution is 0.9837.This
means that the dominant closed-loop poles lie close to the desired locationThus the compensator designed,
is acceptable. The feedforward transfer function of the compensated system becomesA root-locus plot of the compensated system is shown in Figure 6–88(a). An enlarged root-locus
plot near the origin is shown in Figure 6–88(b).G
c(s)G(s) =1280(s +3.7)(s +0.1442)
s(s+53.35)(s +0.01)(s +2)(s +8)Gc(s)=128as+3.70
s+53.35bas+0.1442
s+0.01bs=-2;j213.ns1+0.1442
s1+0.012
s1=-2+j213=-1.697 °2s1+0.1442
s1+0.012
s1=-2+j213=0.98371
T2=0.1442
Real Axis−40 −60 20 60 40 −20 0
(a)Imag Axis60
−60−4040
020
−20Root-Locus Plot of Compensated System
Figure 6–88
(a) Root-locus plot of compensated system; (b) root-locus plot near the origin.Real Axis−10 5 10 −5 0
(b)Imag Axis10
−108
−6
−86
04
−22
−4Root-Locus Plot of Compensated System near the Origin
Desired closed-loop poles
To verify the improved system performance of the compensated system, see the unit-step
responses and unit-ramp responses of the compensated and uncompensated systems shown in
Figures 6–89 (a) and (b), respectively.
A–6–17. Consider the system shown in Figure 6–90. Design a lag–lead compensator such that the 
static velocity error constant K
v
is 50 sec
–1
and the damping ratio zof the dominant closed-
loop poles is 0.5. (Choose the zero of the lead portion of the lag–lead compensator to cancel 
the pole at s=–1 of the plant.) Determine all closed-loop poles of the compensated 
system.
380
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
t Sec2
1
07
9
6
8
10 4
3
5
(a)
Outputs
0.4
0.81.4
0
1.2
0.6
1
0.2
Unit-Step Responses of Compensated and Uncompensated Systems
Uncompensated system
Compensated system
t Sec2
1
07
9
6
8
10 4
3
5
(b)
Outputs
3
5
0
9
4
7
1
8
6
2
10Unit-Ramp Responses of Compensated and Uncompensated Systems
Uncompensated system
Compensated system
Figure 6–89
(a) Unit-step
responses of
compensated and
uncompensated
systems; (b) unit-
ramp responses of
both systems.
Openmirrors.com
Example Problems and Solutions 3811
s(s+ 1) (s+ 5)Gc(s) +–
Figure 6–90
Control system.
Solution. Let us employ the lag–lead compensator given by
whereb>1. Then
The specification that determines the value of Kc,o r
We now choose so that will cancel the (s+1) term of the plant. The lead
portion then becomes
For the lag portion of the lag–lead compensator we require
where s=s1is one of the dominant closed-loop poles. Noting these requirements for the lag por-
tion of the compensator, at s=s1, the open-loop transfer function becomes
GcAs1BGAs1B/H11216Kcas1+1
s1+bb1
s1As1+1BAs1+5B=Kc1
s1As1+bBAs1+5B4s1+1
T2
s1+1
bT24/H112161,  -5°6ns1+1
T2
s1+1
bT260°s+1
s+bs+A1/H20862T1B T1=1Kc=250Kv=50 sec-1 =Kc
5 =lim
sS0s KcAT1 s+1BAT2 s+1B
aT1
b s+1bAbT2 s+1B 1
s(s+1)(s +5) Kv=lim
sS0sGc(s)G(s)Gc(s)=Kc±s+1
T1
s+b
T1≤±s+1
T2
s+1
bT2≤=KcAT1 s+1BAT2 s+1B
aT1
bs+1bAbT2 s+1B
382
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Then at , the following magnitude and angle conditions must be satisfied:
(6–32)
(6–33)
where k= 0, 1, 2, p. In Equations (6–32) and (6–33), bands
1
are unknowns. Since the damping
ratiozof the dominant closed-loop poles is specified as 0.5, the closed-loop pole s=s
1
can be writ-
ten as
where xis as yet undetermined.
Notice that the magnitude condition, Equation (6–32), can be rewritten as
Noting that we have
(6–34)
The angle condition, Equation (6–33), can be rewritten as
or
(6–35)
We need to solve Equations (6–34) and (6–35) for bandx. By several trial-and-error calculations,
it can be found that
Thus
The lag portion of the lag–lead compensator can be determined as follows: Noting that the pole
and zero of the lag portion of the compensator must be located near the origin, we may choose
That is,
1
T
2
=0.16025
  
or
  
T
2
=6.251
bT
2
=0.01s
1
=-1.9054 +j13
(1.9054) =-1.9054 +j3.3002b=16.025,
  
x=1.9054tan
-1
a
13
x
-x+b
b
+tan
-1
a
13
x
-x+5
b
=60°=-120°-tan
-1
a
13
x
-x+b
b
-tan
-1
a
13
x
-x+5
b
=-180°
n
K
c
1
A-x+j13
xBA-x+b+j13
xBA-x+5+j13
xB
x2(b-x)
2
+3x
2
2(5-x)
2
+3x
2
=125K
c
=250,
2
K
c
A-x+j13
xBA-x+b+j13
xBA-x+5+j13
xB
2
=1s
1
=-x+j13
x 
n
K
c
1
s
1
As
1
+bBAs
1
+5B 
=;180°(2k +1) 
2
K
c
1
s
1
As
1
+bBAs
1
+5B
2
=1s=s
1
Openmirrors.com
Example Problems and Solutions 383With the choice of we find
(6–36)
and
(6–37)
Since
our choice of is acceptable. Then the lag–lead compensator just designed can be writ-
ten as
Therefore, the compensated system has the following open-loop transfer function:
A root-locus plot of the compensated system is shown in Figure 6–91(a). An enlarged root-locus
plot near the origin is shown in Figure 6–91(b).
The closed loop transfer function becomes
The closed-loop poles are located at
Notice that the dominant closed-loop poles differ from the dominant
closed-loop poles assumed in the computation of band Small deviations of the dom-
inant closed-loop poles from are due to the
approximations involved in determining the lag portion of the compensator. [See Equations (6–36)and (6–37).]s=;s
1=-1.9054 ;j3.3002 s=-1.8308 ;j3.2359T2 . s=;s1s=-1.8308 ;j3.2359 s=-17.205 s=-0.1684 s=-1.8308 ;j3.2359C(s)
R(s)=250(s +0.16025)
s(s+0.01)(s +5)(s +16.025) +250(s +0.16025)Gc(s)G(s) =250(s +0.16025)
s(s+0.01)(s +5)(s +16.025)Gc(s)=250as+1
s+16.025bas+0.16025
s+0.01bT2=6.25-5°6-1.937 °60°=tan-1a3.3002
-1.74515b-tan-1a3.3002
-1.89054b=-1.937 °ns1+1
T2
s1+1
bT2=n-1.9054 +j3.3002 +0.16025
-1.9054 +j3.3002 +0.01 =2-1.74515 +j3.3002
-1.89054 +j3.30022=0.98/H112161 4s1+1
T2
s1+1
bT24=2-1.9054 +j3.3002 +0.16025
-1.9054 +j3.3002 +0.012T2=6.25,
384
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Real Axis–20 5
0
10 –10
–15
–5
(a)
Imag Axis
–5
515
0
10
–10
–15Root-Locus Plot of Compensated System
Real Axis1 0.5
–0.5
–10
(b)
Imag Axis
–0.6
0
0.6
–0.2
0.2
–1
1
0.8
0.4
–0.8
–0.4
Root-Locus Plot of Compensated System near the Origin
Figure 6–91
(a) Root-locus plot
of compensated
system; (b) root-
locus plot near the
origin.
Figures 6–92(a) and (b) show the unit-step response and unit-ramp response of the designed
system, respectively. Note that the closed-loop pole at s=–0.1684 almost cancels the zero at
s=–0.16025. However, this pair of closed-loop pole and zero located near the origin pro-
duces a long tail of small amplitude. Since the closed-loop pole at s=–17.205 is located very
much farther to the left compared to the closed-loop poles at the effect
of this real pole on the system response is very small. Therefore, the closed-loop poles at
are indeed dominant closed-loop poles that determine the response
characteristics of the closed-loop system. In the unit-ramp response, the steady-state error in
following the unit-ramp input eventually becomes 1/H20862K
v
=
1
50
=0.02.s=-1.8308 ;j3.2359s=-1.8308 ;j3.2359,
Openmirrors.comOpenmirrors.com
Example Problems and Solutions 385A–6–18. Figure 6–93(a) is a block diagram of a model for an attitude-rate control system.The closed-loop
transfer function for this system is
The unit-step response of this system is shown in Figure 6–93(b). The response shows high-
frequency oscillations at the beginning of the response due to the poles at The response is dominated by the pole at The settling time is approximately 240 sec. s=-0.0167.s=-0.0417 ;j2.4489. =2(s+0.05)
(s+0.0417 +j2.4489)(s +0.0417 -j2.4489)(s +0.0167) C(s)
R(s)=2s+0.1
s3+0.1s2+6s+0.1t Sec4 2 0 14 12 8 6 10
(a)Output
0.40.81.4
01.2
0.61
0.2Unit-Step Response of Compensated System
t Sec2 1 07 9 6 8 10 4 3 5
(b)Output
37
09
48
26
5
110Unit-Ramp Response of Compensated System
Figure 6–92
(a) Unit-stepresponse of the
compensated system;
(b) unit-rampresponse of thecompensated system.
386
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Time (sec)50
0 200
300 250
100
150
(b)
Amplitude
0.3
0.6
01
0.4
0.7
0.1
0.9
0.8
0.5
0.2
Unit-Step Response of Uncompensated System
R(s) C(s)
1
Rate gyroHydraulic servo Aircraft1
s
2s+ 0.1
s
2
+ 0.1s+ 4
(a)
+–
Figure 6–93
(a) Attitude-rate
control system;
(b) unit-step
response.
It is desired to speed up the response and also eliminate the oscillatory mode at the beginning
of the response. Design a suitable compensator such that the dominant closed-loop poles are at
Solution. Figure 6–94 shows a block diagram for the compensated system. Note that the open-loop
zero at and the open-loop pole at s=0 generate a closed-loop pole between s=0
ands=–0.05. Such a closed-loop pole becomes a dominant closed-loop pole and makes the re-
sponse quite slow. Hence, it is necessary to replace this zero by a zero that is located far away
from the jvaxis—for example, a zero at s=-4.s=-0.05s=-2;j213
.
G
c
(s)
R(s) C(s)
1
Rate gyroHydraulic servo Aircraft1
s
2s+ 0.1
s
2
+ 0.1s+ 4
+–
Figure 6–94
Compensated
attitude-rate control
system.
Openmirrors.comOpenmirrors.com
Example Problems and Solutions 387We now choose the compensator in the following form:
Then the open-loop transfer function of the compensated system becomes
To determine by the root-locus method, we need to find the angle deficiency at the desired
closed-loop pole The angle deficiency can be found as follows:
Hence, the lead compensator must provide 132.73°. Since the angle deficiency is –132.73°,
we need two lead compensators, each providing 66.365°.Thus will have the following form:
Suppose that we choose two zeros at s=–2. Then the two poles of the lead compensators can be
obtained from
or
(See Figure 6–95.) Hence,
Gˆc(s)=Kcas+2
s+9.9158b2 =9.9158 sp=2+3.4641
0.43761693.4641
sp-2=tan(90°-66.365 °)=0.4376169=Kcas+sz
s+spb2
Gˆc(s)Gˆc(s)Gˆc(s) =-132.73 ° Angle deficiency =-143.088 °-120°-109.642 °+60°+180°s=-2+j213.Gˆc(s) =Gˆc(s) s+4
sAs2+0.1s +4B Gc(s)G(s) =Gˆc(s) s+4
2s+0.1 1
s 2s+0.1
s2+0.1s +4Gc(s)=Gˆc(s)s+4
2s+0.1
2 4 −6 −2 0 −4 −8 −10 −12j4
j2
–j4–j266.365°
sps = −2 + j23jv
s
Figure 6–95
Pole and zero of
. Gˆc(s)
388
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
The entire compensator for the system becomes
The value of can be determined from the magnitude condition. Since the open-loop transfer
function is
the magnitude condition becomes
Hence,
Thus the compensator becomes
The open-loop transfer function is given by
A root-locus plot for the compensated system is shown in Figure 6–96. The closed-loop poles for
the compensated system are indicated in the plot. The closed-loop poles, the roots of the charac-
teristic equation
(s+9.9158)
2
sAs
2
+0.1s +4B+88.0227(s +2)
2
(s+4)=0G
c
(s)G(s) =88.0227(s +2)
2
(s+4)
(s+9.9158)
2
sAs
2
+0.1s +4BG
c
(s)=88.0227(s+2)
2
(s+4)
(s+9.9158)
2
(2s+0.1)G
c
(s) =88.0227 K
c
=
2
(s+9.9158)
2
sAs
2
+0.1s +4B
(s+2)
2
(s+4)
2
s=-2+j213
2
K
c
(s+2)
2
(s+4)
(s+9.9158)
2
sAs
2
+0.1s +4B
2
s=-2+j213
=1G
c
(s)G(s) =K
c
(s+2)
2
(s+4)
(s+9.9158)
2
sAs
2
+0.1s +4BK
c
G
c
(s)=G
ˆ
c
(s)s+4
2s+0.1=K
c
(s+2)
2
(s+9.9158)
2
s+4
2s+0.1G
c
(s)
Real Axis–15 10
5
15 –5
–10
0
Imag Axis
–10
0
10
–5
5
15
–15Root-Locus Plot of Compensated System
Closed-loop poles
Figure 6–96
Root-locus plot of
the compensated
system.
Openmirrors.com
Example Problems and Solutions 389are as follows:
Now that the compensator has been designed, we shall examine the transient-response charac-
teristics with MATLAB. The closed-loop transfer function is given by
Figures 6–97(a) and (b) show the plots of the unit-step response and unit-ramp response of the
compensated system. These response curves show that the designed system is acceptable.C(s)
R(s)=88.0227(s +2)2(s+4)
(s+9.9158)2sAs2+0.1s +4B+88.0227(s +2)2(s+4) s=-0.8868 s=-7.5224 ;j6.5326 s=-2.0000 ;j3.4641
t Sec1 0.5 0 3.5 4.5 3 4 5 2 1.5 2.5
(a)Output
0.40.81.4
01.2
0.61
0.2Unit-Step Response of Compensated System
t Sec05 4 6 2 1 3
(b)Input and Output246
035
1Unit-Ramp Response of Compensated System
Figure 6–97
(a) Unit-stepresponse of the
compensated system;
(b) unit-rampresponse of thecompensated system.
390
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
A–6–19. Consider the system shown in Figure 6–98(a). Determine the value of asuch that the damping ratio
zof the dominant closed poles is 0.5.
Solution. The characteristic equation is
The variable ais not a multiplying factor. Hence, we need to modify the characteristic equation.
Since the characteristic equation can be written as
we rewrite this equation such that aappears as a multiplying factor as follows:
Define
Then the characteristic equation becomes
Notice that the characteristic equation is in a suitable form for the construction of the root loci.1+K
sAs
2
+9s+18B=010a =K1+10a
sAs
2
+9s+18B=0s
3
+9s
2
+18s +10a =01+10(s +a)
s(s+1)(s +8)=0
(a) (b)s+a
s+ 8
10
s(s+ 1)
j4
j3
j2
–j4–j3–j2–j101–1 –3 –5 –7 –22 –4 –6jv
s60° K= 28K= 28
j1j6
–j6j5
–j5
+–
Figure 6–98
(a) Control system; (b) root-locus plot, where K=10a.
Openmirrors.com
Example Problems and Solutions 391This system involves three poles and no zero.The three poles are at s=0, s=–3, ands=–6.
A root-locus branch exists on the real axis between points  s=0 ands=–3. Also, another branch
exists between points s=–6 ands=– q.
The asymptotes for the root loci are found as follows:
The intersection of the asymptotes and the real axis is obtained from
The breakaway and break-in points can be determined from where
Now we set
which yields
or
Point s=–1.268 is on a root-locus branch. Hence, point s=–1.268 is an actual breakaway point. But
point s=–4.732 is not on the root locus and therefore is neither a breakaway nor break-in point.
Next we shall find points where root-locus branches cross the imaginary axis. We substitute
s=jvin the characteristic equation, which is
as follows:
or
from which we get
The crossing points are at and the corresponding value of gain Kis 162. Also, a root-
locus branch touches the imaginary axis at v=0. Figure 6–98(b) shows a sketch of the root loci
for the system.
Since the damping ratio of the dominant closed-loop poles is specified as 0.5, the desired
closed-loop pole in the upper-half splane is located at the intersection of the root-locus branch
in the upper-half splane and a straight line having an angle of 60° with the negative real axis.The
desired dominant closed-loop poles are located at
At these points, the value of gain Kis 28. Hence,
a=K
10=2.8s=-1+j1.732,  s=-1-j1.732v=;312v=;312,  K=9v2=162  or  v=0,  K=0AK-9v2B+jvA18-v2B=0(jv)3+9(jv)2+18(jv)+K=0s3+9s2+18s +K=0s=-1.268,  s=-4.732s2+6s+6=0dK
ds=-A3s2+18s +18B=0K=-As3+9s2+18sBdK /H20862ds=0,s=-0+3+6
3=-3Angles of asymptotes =;180°(2k +1)
3=60°, -60°, 180 °
392
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
Since the system involves two or more poles than zeros (in fact, three poles and no zero), the
third pole can be located on the negative real axis from the fact that the sum of the three closed-
loop poles is –9.Hence, the third pole is found to be at
or
A–6–20. Consider the system shown in Figure 6–99(a). Sketch the root loci of the system as the velocity
feedback gain kvaries from zero to infinity. Determine the value of ksuch that the closed-loop
poles have the damping ratio zof 0.7.
Solution. The open-loop transfer function is
Since kis not a multilying factor, we modify the equation such that kappears as a multiplying
factor. Since the characteristic equation is
we rewrite this equation as follows:
(6–38)
Define
Then Equation (6–38) becomes
1+Ks
s
2
+s+10=010k =K1+10ks
s
2
+s+10=0s
2
+s+10ks +10=0Open-loop transfer function =10
(s+1+10k)ss=-7s=-9-(-1+j1.732) -(-1-j1.732)
R(s) C(s)1
s
kjv
s
(a) (b)10
s+ 1
j4
j3
j2
−j1j1
−j3−j2
−j401 −1 −4 −6 −2 −3 −5 −72K= 3.427
45.57 8
+–
+–
Figure 6–99
(a) Control system; (b) root-locus plot, where K=10k.
Openmirrors.com
Example Problems and Solutions 393Notice that the system has a zero at s=0 and two poles at Since this system
involves two poles and one zero, there is a possibility that a circular root locus exists. In fact, thissystem has a circular root locus, as will be shown. Since the angle condition is
we have
By substituting into this last equation and rearranging, we obtain
which can be rewritten as
Taking tangents of both sides of this last equation, we obtain
which can be simplified to
or
which yields
Notice that v=0 corresponds to the real axis.The negative real axis (between s=0 ands=– q)
corresponds to K/H113500, and the positive real axis corresponds to K<0. The equation
is an equation of a circle with center at s=0,v=0 with the radius equal to A portion of
this circle that lies to the left of the complex poles corresponds to the root locus for K> 0. (The
portion of the circle which lies to the right of the complex poles corresponds to the root locus for
K<0.) Figure 6–99(b) shows a sketch of the root loci for K> 0.
Since we require z=0.7 for the closed-loop poles, we find the intersection of the circular
root locus and a line having an angle of 45.57° (note that cos 45.57° =0.7) with the negative real
axis. The intersection is at s=–2.214+j2.258. The gain Kcorresponding to this point is 3.427.
Hence, the desired value of the velocity feedback gain kis
k=K
10=0.3427110.s2+v2=10v=0  or  s2+v2=10vAs2-10+v2B=02v(s+0.5)
(s+0.5)2-Av2-3.12252B=v
sv+3.1225
s+0.5+v-3.1225
s+0.5
1-av+3.1225
s+0.5bav-3.1225
s+0.5b=v
stan-1
 av+3.1225
s+0.5b+tan-1
 av-3.1225
s+0.5b=tan-1
 av
sb;180°(2k +1)/s+0.5+j(v+3.1225) +/s+0.5+j(v-3.1225) =/s+jv;180°(2k +1)s=s+jv/s-/s+0.5+j3.1225 -/s+0.5-j3.1225 =;180°(2k +1)nKs
s2+s+10=;180°(2k +1)s=-0.5;j3.1225.
PROBLEMS
394
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
B–6–1. Plot the root loci for the closed-loop control sys-
tem with
B–6–2. Plot the root loci for the closed-loop control system
with
B–6–3. Plot the root loci for the system with
B–6–4. Show that the root loci for a control system with
are arcs of the circle centered at the origin with radius equal
to
B–6–5. Plot the root loci for a closed-loop control system
with
B–6–6. Plot the root loci for a closed-loop control system
with
Locate the closed-loop poles on the root loci such that the
dominant closed-loop poles have a damping ratio equal to
0.5. Determine the corresponding value of gain K.
B–6–7. Plot the root loci for the system shown in Figure
6–100. Determine the range of gain Kfor stability.G(s) =K(s +9)
sAs
2
+4s+11B,
  
H(s) =1G(s) =K(s +0.2)
s
2
(s+3.6),
  
H(s) =1110
.G(s) =KAs
2
+6s+10B
s
2
+2s+10,
  
H(s) =1G(s) =K
s(s+0.5)As
2
+0.6s +10B,
  
H(s) =1G(s) =K
s(s+1)(s
2
+4s+5),
  
H(s) =1G(s) =K(s +1)
s
2
,
  
H(s) =1B–6–8. Consider a unity-feedback control system with the
following feedforward transfer function:
Plot the root loci for the system. If the value of gain Kis set
equal to 2, where are the closed-loop poles located?
B–6–9. Consider the system whose open-loop transfer func-
tion is given by
Show that the equation for the asymptotes is given by
Using MATLAB, plot the root loci and asymptotes for
the system.
B–6–10. Consider the unity-feedback system whose feed-
forward transfer function is
The constant-gain locus for the system for a given value of
Kis defined by the following equation:
Show that the constant-gain loci for 0 /H11349K/H11349qmay be
given by
Sketch the constant-gain loci for K= 1, 2, 5, 10, and 20 on
thesplane.
B–6–11. Consider the system shown in Figure 6–101. Plot
the root loci with MATLAB. Locate the closed-loop poles
when the gain Kis set equal to 2.Cs(s+1)+v
2
D
2
+v
2
=K
2
2
K
s(s+1)
2
=1G(s) =K
s(s+1)G
a
(s)H
a
(s)=K
s
3
+4.0068s
2
+5.3515s +2.3825G(s)H(s) =K(s -0.6667 )
s
4
+3.3401 s
3
+7.0325 s
2
G(s) =K
sAs
2
+4s+8B
2
s
2
 (s+ 2)
s+ 1
s+ 5
KR(s) C(s)
+–
Figure 6–100
Control system.
1
s+ 1
K(s+ 1)
s(s
2
+ 2s+ 6)
+–
Figure 6–101
Control system.
Openmirrors.com
Problems 395K(s– 1)
(s+ 2) (s+ 4)+–
G1(s)
(a)
(b)K(1–s)
(s+ 2) (s+ 4)+–
G2(s)B–6–12. Plot root-locus diagrams for the nonminimum-phase
systems shown in Figures 6–102(a) and (b), respectively.
B–6–14. Consider the system shown in Figure 6–104. Plot
the root loci for the system. Determine the value of Ksuch
that the damping ratio zof the dominant closed-loop poles
is 0.5. Then determine all closed-loop poles. Plot the unit-step response curve with MATLAB.Figure 6–102 (a) and (b) Nonminimum-phase systems.
B–6–13. Consider the mechanical system shown in Figure
6–103. It consists of a spring and two dashpots. Obtain the
transfer function of the system. The displacement x
iis the
input and displacement xois the output. Is this system a
mechanical lead network or lag network?
b2
b1kxi
xo
Figure 6–103
Mechanical system.
K
s(s2+ 4s+ 5)+–
Figure 6–104 Control system.B–6–15. Determine the values of K, and of the system
shown in Figure 6–105 so that the dominant closed-looppoles have the damping ratio z=0.5 and the undamped
natural frequency v
n=3 rad /H20862sec.T2 T1 ,
C R T1s+ 1
T2s+ 1K10
s(s+ 1)+–
Figure 6–105 Control system.
B–6–16. Consider the control system shown in Figure 6–106.
Determine the gain Kand time constant Tof the controller
Gc(s) such that the closed-loop poles are located at
s=-2;j2.
1
s(s+ 2)K(Ts+ 1) +–
Gc(s) G(s)
Figure 6–106 Control system.
Gc(s)5
s(0.5s+ 1)+–
Figure 6–107 Control system.B–6–17. Consider the system shown in Figure 6–107. De-
sign a lead compensator such that the dominant closed-looppoles are located at Plot the unit-step re-sponse curve of the designed system with MATLAB.s=-2;j213
.
B–6–18. Consider the system shown in Figure 6–108. De-
sign a compensator such that the dominant closed-loop poles
are located at s=-1;j1.
Gc(s)1
s2
Lead
compensatorSpace
vehicle+–
Figure 6–108 Control system.
396
Chapter 6 / Control Systems Analysis and Design by the Root-Locus Method
B–6–19. Referring to the system shown in Figure 6–109, de-
sign a compensator such that the static velocity error con-
stant is 20 sec
–1
without appreciably changing the original
location of a pair of the complex-conjugate
closed-loop poles.As=-2;j213
BK
v
B–6–20. Consider the angular-positional system shown in
Figure 6–110. The dominant closed-loop poles are located
at The damping ratio zof the dominant
closed-loop poles is 0.6.The static velocity error constant 
is 4.1 sec
–1
, which means that for a ramp input of 360° /H20862sec
the steady-state error in following the ramp input is
It is desired to decrease e
v
to one-tenth of the present
value, or to increase the value of the static velocity error con-
stant to 41 sec
–1
. It is also desired to keep the damping ratio
zof the dominant closed-loop poles at 0.6. A small change in
the undamped natural frequency v
n
of the dominant closed-
loop poles is permissible. Design a suitable lag compensator to
increase the static velocity error constant as desired.K
v
e
v
=u
i
K
v
=360°/H20862sec
4.1 sec
-1
=87.8°K
v
s=-3.60 ;j4.80.
B–6–21. Consider the control system shown in Figure 6–111.
Design a compensator such that the dominant closed-loop
poles are located at and the static velocity
error constant is 50 sec
–1
. K
v
s=-2;j213
G
c
(s)16
s(s+ 4)
+–
Figure 6–109
Control system.
G
c
(s)820
s(s+ 10) ( s+ 20)
+–
Figure 6–110
Angular-positional system.
G
c
(s)10
s(s+ 2) (s+ 5)
+–
Figure 6–111
Control system.B–6–24. Consider the system shown in Figure 6–114, which
involves velocity feedback. Determine the values of the am-
plifier gain Kand the velocity feedback gain so that the
following specifications are satisfied:
1.Damping ratio of the closed-loop poles is 0.5
2.Settling time /H113492 sec
3.Static velocity error constant 
4.0<K
h
<1K
v
/H1135050 sec
-1
K
h
R(s) C(s)1
s
K
h
K
2s+ 1
+–
+–
Figure 6–114
Control system.B–6–23. Consider the control system shown in Figure 6–113.
Design a compensator such that the unit-step response curve
will exhibit maximum overshoot of 25 %or less and settling
time of 5 sec or less.
G
c
(s)2s+ 1
s(s+ 1) (s+ 2)
+–
Figure 6–112
Control system.
G
c
(s)1
s
2
 (s+ 4)
+–
Figure 6–113
Control system.B–6–22. Consider the control system shown in Figure 6–112.
Design a compensator such that the unit-step response curve
will exhibit maximum overshoot of 30 %or less and settling
time of 3 sec or less.
Openmirrors.com
Problems 397B–6–25. Consider the system shown in Figure 6–115. The
system involves velocity feedback. Determine the value ofgain Ksuch that the dominant closed-loop poles have a
damping ratio of 0.5. Using the gain Kthus determined, ob-
tain the unit-step response of the system.
R(s) C(s)1
s
0.2K
(s+ 1) (s+ 2)+–+–
Figure 6–115
Control system.B–6–26. Consider the system shown in Figure 6–116. Plot
the root loci as avaries from 0 to q. Determine the value of
asuch that the damping ratio of the dominant closed-loop
poles is 0.5.
s+a2
s2 (s+ 2)+–
Figure 6–116
Control system.
B–6–28. Consider the system shown in Figure 6–118. As-
suming that the value of gain Kvaries from 0 to q, plot the
root loci when and 0.5.
Compare unit-step responses of the system for the
following three cases:
(1) K=10, Kh=0.1
(2) K=10, Kh=0.3
(3) K=10, Kh=0.5Kh=0.1, 0.3,B–6–27. Consider the system shown in Figure 6–117. Plot
the root loci as the value of kvaries from 0 to q.What value
ofkwill give a damping ratio of the dominant closed-loop
poles equal to 0.5? Find the static velocity error constant ofthe system with this value of k.
s+ 1.4
s+ 510
s(s+ 1)
ks
s+ 10+–+–
Figure 6–117
Control system.
R(s) C(s) 1
s
KhK
s+ 1+–+–
Figure 6–118
Control system.
7
398
Control Systems Analysis
and Design by the
Frequency-Response Method
7–1 INTRODUCTION
By the term frequency response, we mean the steady-state response of a system to a
sinusoidal input. In frequency-response methods, we vary the frequency of the input
signal over a certain range and study the resulting response.
In this chapter we present frequency-response approaches to the analysis and design
of control systems.The information we get from such analysis is different from what we
get from root-locus analysis. In fact, the frequency response and root-locus approaches
complement each other. One advantage of the frequency-response approach is that we
can use the data obtained from measurements on the physical system without deriving
its mathematical model. In many practical designs of control systems both approaches
are employed. Control engineers must be familiar with both.
Frequency-response methods were developed in 1930s and 1940s by Nyquist, Bode,
Nichols, and many others. The frequency-response methods are most powerful in con-
ventional control theory. They are also indispensable to robust control theory.
The Nyquist stability criterion enables us to investigate both the absolute and relative
stabilities of linear closed-loop systems from a knowledge of their open-loop frequency-
response characteristics. An advantage of the frequency-response approach is that
frequency-response tests are, in general, simple and can be made accurately by use of
readily available sinusoidal signal generators and precise measurement equipment. Often
the transfer functions of complicated components can be determined experimentally by
frequency-response tests. In addition, the frequency-response approach has the advan-
tages that a system may be designed so that the effects of undesirable noise are negligible
and that such analysis and design can be extended to certain nonlinear control systems.
Openmirrors.com
Section 7–1 / Introduction 399Although the frequency response of a control system presents a qualitative picture of the
transient response, the correlation between frequency and transient responses is indirect, ex-cept for the case of second-order systems. In designing a closed-loop system, we adjust thefrequency-response characteristic of the open-loop transfer function by using several de-sign criteria in order to obtain acceptable transient-response characteristics for the system.
Obtaining Steady-State Outputs to Sinusoidal Inputs. We shall show that the
steady-state output of a transfer function system can be obtained directly from the si-nusoidal transfer function—that is, the transfer function in which sis replaced by jv,
wherevis frequency.
Consider the stable, linear, time-invariant system shown in Figure 7–1.The input and out-
put of the system, whose transfer function is G(s) , are denoted by x(t)andy(t), respectively.
If the input x(t) is a sinusoidal signal, the steady-state output will also be a sinusoidal sig-
nal of the same frequency, but with possibly different magnitude and phase angle.
Let us assume that the input signal to the system is given by
[In this book “ ”is always measured in rad/sec. When the frequency is measured in
cycle/sec, we use notation “ f”. That is, .] 
Suppose that the transfer function G(s) of the system can be written as a ratio of two
polynomials in s; that is,
The Laplace-transformed output Y(s) of the system is then
(7–1)
where X(s) is the Laplace transform of the input x(t).
It will be shown that, after waiting until steady-state conditions are reached, the fre-
quency response can be calculated by replacing sin the transfer function by jv. It will
also be shown that the steady-state response can be given by
where Mis the amplitude ratio of the output and input sinusoids and fis the phase
shift between the input sinusoid and the output sinusoid. In the frequency-response test,the input frequency vis varied until the entire frequency range of interest is covered.
The steady-state response of a stable, linear, time-invariant system to a sinusoidal
input does not depend on the initial conditions. (Thus, we can assume the zero initialcondition.) If Y(s) has only distinct poles, then the partial fraction expansion of Equa-
tion (7–1) when x(t) = X yields
(7–2)  =a
s+jv+a–
s-jv+b1
s+s1+b2
s+s2+p+bn
s+sn Y(s) =G(s)X(s) =G(s) vX
s2+v2sinvtG(jv)=Mejf=M/fY(s) =G(s)X(s) =p(s)
q(s)X(s)G(s) =p(s)
q(s)=p(s)
As+s1BAs+s2BpAs+snBv=2pfvx(t) =Xsinvt
G(s)
X(s)x(t)
Y(s)y(t)Figure 7–1
Stable, linear, time-invariant system.
400
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
where aand the b
i
(where i=1, 2, p,n)are constants and is the complex conjugate
ofa. The inverse Laplace transform of Equation (7–2) gives
(7–3)
For a stable system, –s
1
,– s
2
,p,–s
n
have negative real parts.Therefore, as tapproaches
infinity, the terms and approach zero.Thus, all the terms on the right-
hand side of Equation (7–3), except the first two, drop out at steady state.
IfY(s) involves multiple poles s
j
of multiplicity m
j
,then y(t) will involve terms such
as For a stable system, the terms approach zero
astapproaches infinity.
Thus, regardless of whether the system is of the distinct-pole type or multiple-pole
type, the steady-state response becomes
(7–4)
where the constant acan be evaluated from Equation (7–2) as follows:
Note that
Since G(jv)is a complex quantity, it can be written in the following form:
where@G(jv)@represents the magnitude and frepresents the angle of G(jv); that is,
The angle fmay be negative, positive, or zero. Similarly, we obtain the following
expression for G(–jv):
Then, noting that
Equation (7–4) can be written
(7–5)  =Ysin
 
(vt+f) =X@G(jv)@sin
 
(vt+f) y
ss
(t)=X@G(jv)@ e
j(vt+f)
-e
-j(vt+f)
2ja=-X@G(jv)@e
-jf
2j,
  
a
–
=X@G(jv)@e
jf
2jG(-jv)=@G(-jv)@e
-jf
=@G(jv)@e
-jf
f=
/
G(jv)
=tan
-1
c
imaginary part of G(jv)
real part of G(jv)
d
G(jv)=@G(jv)@e
jf
a
–
=G(s)vX
s
2
+v
2
(s-jv)
2
s=jv
=XG(jv)
2ja=G(s)vX
s
2
+v
2
(s+jv)
2
s=-jv
=-XG( -jv)
2jy
ss
(t)=ae
-jvt
+a
–
e
jvt
t
h
j
e
-s
j
 
t
t
h
j
e
-s
j
 
t
Ah
j
=0, 1, 2, p,m
j
-1B.e
-s
n
 
t
e
-s
1
 
t
,e
-s
2
 
t
,p,y(t) =ae
-jvt
+a
–
e
jvt
+b
1
 
e
-s
1
 
t
+b
2
 
e
-s
2
 
t
+p+b
n
 
e
-s
n
 
t
  
(t/H113500)a
–
Openmirrors.com
Section 7–1 / Introduction 401XY
tInput x(t)=Xsinvt
Output y(t)=Ysin (vt+f)Figure 7–2
Input and outputsinusoidal signals.
y x
G(s)K
Ts+ 1Figure 7–3
First-order system.where Y=X@G(jv)@. We see that a stable, linear, time-invariant system subjected to a
sinusoidal input will, at steady state, have a sinusoidal output of the same frequency asthe input. But the amplitude and phase of the output will, in general, be different fromthose of the input. In fact, the amplitude of the output is given by the product of that ofthe input and @G(jv)@, while the phase angle differs from that of the input by the amount
An example of input and output sinusoidal signals is shown in Figure 7–2.
On the basis of this, we obtain this important result: For sinusoidal inputs,
Hence, the steady-state response characteristics of a system to a sinusoidal input can be
obtained directly from
The function G(jv)is called the sinusoidal transfer function. It is the ratio of Y(jv)
toX(jv),is a complex quantity, and can be represented by the magnitude and phase
angle with frequency as a parameter.The sinusoidal transfer function of any linear systemis obtained by substituting jvforsin the transfer function of the system.
As already mentioned in Chapter 6, a positive phase angle is called phase lead, and a neg-
ative phase angle is called phase lag.A network that has phase-lead characteristics is calleda lead network, while a network that has phase-lag characteristics is called a lag network.
EXAMPLE 7–1
Consider the system shown in Figure 7–3. The transfer function G(s) is
For the sinusoidal input x(t)=X sinvt, the steady-state output yss(t)can be found as follows:
Substituting jvforsinG(s) yields
G(jv)=K
jTv+1G(s) =K
Ts+1Y(jv)
X(jv)=G(jv)/G(jv)=nY(jv)
X(jv)=phase shift of the output sinusoid with respect
to the input sinusoid@G(jv)@=2Y(jv)
X(jv)2=amplitude ratio of the output sinuisoid to the
input sinusoidf=/G(jv).
402
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
The amplitude ratio of the output to the input is
while the phase angle fis
Thus, for the input x(t)=X sinvt, the steady-state output y
ss
(t)can be obtained from Equation
(7–5) as follows:
(7–6)
From Equation (7–6), it can be seen that for small v, the amplitude of the steady-state output
y
ss
(t)is almost equal to Ktimes the amplitude of the input.The phase shift of the output is small
for small v. For large v, the amplitude of the output is small and almost inversely proportional to
v. The phase shift approaches –90° as vapproaches infinity. This is a phase-lag network.
EXAMPLE 7–2
Consider the network given by
Determine whether this network is a lead network or lag network.
For the sinusoidal input x(t)=X sinvt, the steady-state output y
ss
(t)can be found as follows:
Since
we have
and
Thus the steady-state output is
From this expression, we find that if then Thus, if 
then the network is a lead network. If then the network is a lag network.
Presenting Frequency-Response Characteristics in Graphical Forms. The
sinusoidal transfer function, a complex function of the frequency v, is characterized by
its magnitude and phase angle, with frequency as the parameter. There are three
commonly used representations of sinusoidal transfer functions:
T
1
6T
2
 
,T
1
7T
2
 
, tan
-1
T
1
 
v-tan
-1
T
2
 
v70. T
1
7T
2
 
,y
ss
(t)=XT
2
21+T
2
1
 
v
2
T
1
21+T
2
2
 
v
2
 sin
 
Avt+tan
-1
T
1
 
v-tan
-1
T
2
 
vBf=
/
G(jv)
=tan
-1
T
1
 
v-tan
-1
T
2
 
v@G(jv)@=T
2
21+T
2
1
 
v
2
T
1
21+T
2
2
 
v
2
G(jv)=jv+1
T
1
jv+1
T
2
=T
2
A1+T
1
 
jvB
T
1
A1+T
2
 
jvBG(s) =s+1
T
1
s+1
T
2
y
ss
(t)=XK
21+T
2
v
2
 sin
 
Avt-tan
-1
TvBf=
/
G(jv)
=-tan
-1
Tv@G(jv)@=K
21+T
2
v
2
Openmirrors.com
Section 7–2 / Bode Diagrams 4031.Bode diagram or logarithmic plot
2.Nyquist plot or polar plot
3.Log-magnitude-versus-phase plot (Nichols plots)
We shall discuss these representations in detail in this chapter. We shall include the
MATLAB approach to obtain Bode diagrams, Nyquist plots, and Nichols plots.
Outline of the Chapter. Section 7–1 has presented introductory material on the
frequency response. Section 7–2 presents Bode diagrams of various transfer-functionsystems. Section 7–3 treats polar plots of transfer functions. Section 7–4 discusses log-magnitude-versus-phase plots. Section 7–5 gives a detailed account of the Nyquiststability criterion. Section 7–6 discusses the stability analysis based on the Nyquist sta-bility criterion. Section 7–7 introduces measures of relative stability analysis. Sec-tion 7–8 presents a method for obtaining the closed-loop frequency response fromthe open-loop frequency response by use of the M and N circles. The Nichols chartis introduced here. Section 7–9 treats experimental determination of transfer func-tions. Section 7–10 presents introductory aspects of control systems design by thefrequency- response approach. Sections 7–11, 7–12, and 7–13 give detailed accounts
of lead compensation, lag compensation, and lag–lead compensation techniques,respectively.
7–2 BODE DIAGRAMS
Bode Diagrams or Logarithmic Plots. A Bode diagram consists of two graphs:
One is a plot of the logarithm of the magnitude of a sinusoidal transfer function; theother is a plot of the phase angle; both are plotted against the frequency on a logarithmicscale.
The standard representation of the logarithmic magnitude of G(jv)is 20 log@G(jv)@,
where the base of the logarithm is 10.The unit used in this representation of the magnitudeis the decibel, usually abbreviated dB. In the logarithmic representation, the curves aredrawn on semilog paper, using the log scale for frequency and the linear scale for eithermagnitude (but in decibels) or phase angle (in degrees). (The frequency range of inter-est determines the number of logarithmic cycles required on the abscissa.)
The main advantage of using the Bode diagram is that multiplication of magni-
tudes can be converted into addition. Furthermore, a simple method for sketching anapproximate log-magnitude curve is available. It is based on asymptotic approxima-tions. Such approximation by straight-line asymptotes is sufficient if only rough in-formation on the frequency-response characteristics is needed. Should the exact curvebe desired, corrections can be made easily to these basic asymptotic plots. Expandingthe low-frequency range by use of a logarithmic scale for the frequency is highlyadvantageous, since characteristics at low frequencies are most important in practicalsystems. Although it is not possible to plot the curves right down to zero frequencybecause of the logarithmic frequency (log0=– q), this does not create a serious
problem.
Note that the experimental determination of a transfer function can be made simple
if frequency-response data are presented in the form of a Bode diagram.
404
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Decibels (dB)
Numbers0.01 0.02 0.04 0.1 0.2 0.4 0.6 1 2 3 4 5 6 8 1020
10
0
–10
–20
–30
–40
Figure 7–4
Number–decibel
conversion line.
Basic Factors of G(jV)H(jV).As stated earlier, the main advantage in using the
logarithmic plot is the relative ease of plotting frequency-response curves. The basic
factors that very frequently occur in an arbitrary transfer function G(jv)H(jv)are
1.Gain K
2.Integral and derivative factors (jv)
<1
3.First-order factors (1+jvT)
<1
4.Quadratic factors 
Once we become familiar with the logarithmic plots of these basic factors, it is
possible to utilize them in constructing a composite logarithmic plot for any general
form of G(jv)H(jv)by sketching the curves for each factor and adding individual curves
graphically, because adding the logarithms of the gains corresponds to multiplying them
together.
The Gain K. A number greater than unity has a positive value in decibels, while a
number smaller than unity has a negative value.The log-magnitude curve for a constant
gain Kis a horizontal straight line at the magnitude of 20 log Kdecibels.The phase angle
of the gain Kis zero. The effect of varying the gain Kin the transfer function is that it
raises or lowers the log-magnitude curve of the transfer function by the corresponding
constant amount, but it has no effect on the phase curve.
A number–decibel conversion line is given in Figure 7–4. The decibel value of any
number can be obtained from this line. As a number increases by a factor of 10, the
corresponding decibel value increases by a factor of 20. This may be seen from the
following:
Similarly,
20log
 
AK*10
n
B=20logK+20n20log
 
(K*10) =20logK+20C1+2zAjv/H20862v
n
B+Ajv/H20862v
n
B
2
D
<1
Openmirrors.com
Section 7–2 / Bode Diagrams 405Note that, when expressed in decibels, the reciprocal of a number differs from its value
only in sign; that is, for the number K,
Integral and Derivative Factors (jV)/H115511.The logarithmic magnitude of 1/jvin
decibels is
The phase angle of 1/jvis constant and equal to –90°.
In Bode diagrams, frequency ratios are expressed in terms of octaves or decades.An
octave is a frequency band from v1to 2v1, where v1is any frequency value.A decade is
a frequency band from v1to 10v1, where again v1is any frequency. (On the logarithmic
scale of semilog paper, any given frequency ratio can be represented by the same hori-zontal distance. For example, the horizontal distance from v=1 tov=10 is equal to
that from v=3 tov=30 .)
If the log magnitude –20logvdB is plotted against von a logarithmic scale, it is a
straight line.To draw this straight line, we need to locate one point (0dB,v=1) on it. Since
the slope of the line is –20 dB /H20862decade (or –6dB /H20862octave).
Similarly, the log magnitude of jvin decibels is
The phase angle of jvis constant and equal to 90°.The log-magnitude curve is a straight
line with a slope of 20 dB /H20862decade. Figures 7–5(a) and (b) show frequency-response
curves for 1/jvand jv, respectively. We can clearly see that the differences in the
frequency responses of the factors 1/jvand jvlie in the signs of the slopes of the log-
magnitude curves and in the signs of the phase angles. Both log magnitudes becomeequal to 0 dB at v=1 .
If the transfer function contains the factor (1/jv)
nor(jv)n, the log magnitude
becomes, respectively,
or
The slopes of the log-magnitude curves for the factors (1/jv)nand (jv)nare thus
–20n dB /H20862decade and 20ndB /H20862decade, respectively. The phase angle of (1/jv)nis equal
to–90°*n over the entire frequency range, while that of (jv)nis equal to 90° *n over
the entire frequency range. The magnitude curves will pass through the point(0dB,v=1) .20log
 @(jv)n@=n*20log  ∑jv∑=20nlogv dB20log  21
(jv)n2=-n*20log  ∑jv∑=-20nlogv dB20log  ∑jv∑=20logv dB(-20log10v) dB=(-20logv-20) dB20log21
jv2=-20logv dB20logK=-20log 1
K
406
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
First-Order Factors (1 /H11545jVT)
/H115511
.The log magnitude of the first-order factor
1/(1+j vT)is
For low frequencies, such that v/H112701/T, the log magnitude may be approximated by
Thus, the log-magnitude curve at low frequencies is the constant 0-dB line. For high
frequencies, such that v/H112711/T,
This is an approximate expression for the high-frequency range. At v=1/T , the log
magnitude equals 0 dB; at v=10/T , the log magnitude is –20 dB. Thus, the value of
–20logvTdB decreases by 20 dB for every decade of v. For v/H112711/T, the log-magnitude
curve is thus a straight line with a slope of –20 dB/decade (or –6dB/octave).
Our analysis shows that the logarithmic representation of the frequency-response
curve of the factor 1/(1+j vT)can be approximated by two straight-line asymptotes,
one a straight line at 0 dB for the frequency range 0<v<1/T and the other a straight
line with slope –20dB/decade (or –6dB /H20862octave) for the frequency range 1/T< v<q.
The exact log-magnitude curve, the asymptotes, and the exact phase-angle curve are
shown in Figure 7–6.
The frequency at which the two asymptotes meet is called the corner frequency or
break frequency. For the factor 1/(1+j vT), the frequency v=1/T is the corner fre-
quency, since at v=1/T the two asymptotes have the same value. (The low-frequency
asymptotic expression at v=1/T is 20 log 1 dB =0 dB, and the high-frequency-20log21+v
2
 
T
2
/H11216-20logvT dB-20log21+v
2
 
T
2
/H11216-20log1=0 dB20log
 
2
1
1+jvT
2
=-20log21+v
2
 
T
2
 dB
dB
40
20
0
–40–20
0.1 10 1 100 vSlope = –20 dB/decade
Bode diagram of
G(jv)= 1/jv
(a)
f
0°
–180 °–90°
0.1 10 1 100 v
dB
40
20
0
–40–20
0.1 10 1 100 vSlope = 20 dB/decade
Bode diagram of
G(jv)=jv
(b)
f
180°
0°90°
0.1 10 1 100 v
Figure 7–5
(a) Bode diagram of
G(jv)=1/j v;
(b) Bode diagram of
G(jv)=jv.
Openmirrors.com
Section 7–2 / Bode Diagrams 40710
0
–10
–20
0°
–45°
–90°fdB
v1
20T1
10T1
5T1
T1
2T2
T5
T10
T20
TExact curveAsymptote
AsymptoteCorner frequency
Figure 7–6
Log-magnitudecurve, together withthe asymptotes, andphase-angle curve of
1/(1+j vT).
asymptotic expression at v=1/T is also 20 log 1 dB =0 dB.) The corner frequency
divides the frequency-response curve into two regions: a curve for the low-frequency re-gion and a curve for the high-frequency region.The corner frequency is very importantin sketching logarithmic frequency-response curves.
The exact phase angle fof the factor 1/(1+j vT)is
At zero frequency, the phase angle is 0°. At the corner frequency, the phase angle is
At infinity, the phase angle becomes –90°. Since the phase angle is given by an inverse-
tangent function, the phase angle is skew symmetric about the inflection point atf=–45 °.
The error in the magnitude curve caused by the use of asymptotes can be calculated.
The maximum error occurs at the corner frequency and is approximately equal to –3dB,
since
The error at the frequency one octave below the corner frequency—that is, at
v=1/(2T) —is
The error at the frequency one octave above the corner frequency—that is, at v=2/T —
is
-20log22
2+1+20log2=-20log 15
2=-0.97 dB-20logA1
4+1+20log1=-20log 15
2=-0.97 dB-20log11+1+20log1=-10log2=-3.03 dBf=-tan-1T
T=-tan-11=-45°f=-tan-1vT
408
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
0
–1
–2
–3
–4dBCorner frequency
1
10T
1
5T
1
2T
1
T
2
T
3
T
5
T
10
T
v
Figure 7–7
Log-magnitude error
in the asymptotic
expression of the
frequency-response
curve of
1/(1+j vT).
Thus, the error at one octave below or above the corner frequency is approximately
equal to –1dB. Similarly, the error at one decade below or above the corner frequency
is approximately –0.04 dB. The error in decibels involved in using the asymptotic ex-
pression for the frequency-response curve of 1/(1+j vT)is shown in Figure 7–7. The
error is symmetric with respect to the corner frequency.
Since the asymptotes are quite easy to draw and are sufficiently close to the exact
curve, the use of such approximations in drawing Bode diagrams is convenient in es-
tablishing the general nature of the frequency-response characteristics quickly with a
minimum amount of calculation and may be used for most preliminary design work. If
accurate frequency-response curves are desired, corrections may easily be made by re-
ferring to the curve given in Figure 7–7. In practice, an accurate frequency-response
curve can be drawn by introducing a correction of 3 dB at the corner frequency and a
correction of 1 dB at points one octave below and above the corner frequency and then
connecting these points by a smooth curve.
Note that varying the time constant Tshifts the corner frequency to the left or to the
right, but the shapes of the log-magnitude and the phase-angle curves remain the same.
The transfer function 1/(1+j vT)has the characteristics of a low-pass filter. For
frequencies above v=1/T , the log magnitude falls off rapidly toward –q.This is es-
sentially due to the presence of the time constant. In the low-pass filter, the output
can follow a sinusoidal input faithfully at low frequencies. But as the input frequen-
cy is increased, the output cannot follow the input because a certain amount of time
is required for the system to build up in magnitude. Thus, at high frequencies, the
amplitude of the output approaches zero and the phase angle of the output
approaches –90°. Therefore, if the input function contains many harmonics, then the
low-frequency components are reproduced faithfully at the output, while the high-
frequency components are attenuated in amplitude and shifted in phase.Thus, a first-
order element yields exact, or almost exact, duplication only for constant or slowly
varying phenomena.
An advantage of the Bode diagram is that for reciprocal factors—for example, the
factor 1+jvT—the log-magnitude and the phase-angle curves need only be changed
in sign, since
 20 log
 
∑1+jvT∑=-20 log
 
2
1
1+jvT
2
Openmirrors.com
Section 7–2 / Bode Diagrams 409dB
40
20
0
–40–20
v
f
90°
0°45°
vExact curve
Asymptote
0.01
T0.1
T1
T10
T
0.01
T0.1
T1
T10
TAsymptote
Figure 7–8
Log-magnitudecurve, together with
the asymptotes, and
phase-angle curvefor1+jvT.and
The corner frequency is the same for both cases. The slope of the high-frequency as-
ymptote of 1+jvTis 20 dB /H20862decade, and the phase angle varies from 0° to 90° as the fre-
quency vis increased from zero to infinity. The log-magnitude curve, together with the
asymptotes, and the phase-angle curve for the factor 1+jvTare shown in Figure 7–8.
To draw a phase curve accurately, we have to locate several points on the curve.The
phase angles of (1+jvT)<1are
For the case where a given transfer function involves terms like (1+jvT)<n, a similar
asymptotic construction may be made.The corner frequency is still at v=1/T , and the
asymptotes are straight lines. The low-frequency asymptote is a horizontal straight line <84.3°   at  v=10
T <63.4°   at  v=2
T <5.7°  at  v=1
10T <26.6°   at  v=1
2T <45°  at  v=1
T/1+jvT=tan-1vT=-n1
1+jvT
410
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
at 0 dB, while the high-frequency asymptote has the slope of –20n dB /H20862decade or
20n dB /H20862decade. The error involved in the asymptotic expressions is ntimes that for
(1+jvT)
<1
. The phase angle is ntimes that of (1+jvT)
<1
at each frequency point.
Quadratic Factors C1/H115452ZAjV/V
n
B/H11545AjV/V
n
B
2
D
/H115511
.Control systems often
possess quadratic factors of the form
G(j◊)= (7–7)
Ifz>1 , this quadratic factor can be expressed as a product of two first-order factors
with real poles. If 0<z<1 , this quadratic factor is the product of two complex-
conjugate factors.Asymptotic approximations to the frequency-response curves are not
accurate for a factor with low values of z. This is because the magnitude and phase of
the quadratic factor depend on both the corner frequency and the damping ratio z.
The asymptotic frequency-response curve may be obtained as follows: Since
for low frequencies such that v/H11270v
n
, the log magnitude becomes
The low-frequency asymptote is thus a horizontal line at 0 dB. For high frequencies such
thatv/H11271v
n
, the log magnitude becomes
The equation for the high-frequency asymptote is a straight line having the slope
–40 dB /H20862decade, since
The high-frequency asymptote intersects the low-frequency one at v=v
n
, since at this
frequency
This frequency, v
n
, is the corner frequency for the quadratic factor considered.
The two asymptotes just derived are independent of the value of z. Near the
frequency v=v
n
, a resonant peak occurs, as may be expected from Equation (7–7).
The damping ratiozdetermines the magnitude of this resonant peak. Errors obvi-
ously exist in the approximation by straight-line asymptotes. The magnitude of the
error depends on the value of z. It is large for small values of z. Figure 7–9 shows the
exact log-magnitude curves, together with the straight-line asymptotes and the exact-40log v
n
v
n
=-40log1=0 dB-40log 10v
v
n
=-40-40log v
v
n
-20log v
2
v
2
n
=-40logv
v
n
 dB-20log1=0 dB20log
 
3
1
1+2z
a
j v
v
n
b
+
a
j v
v
n
b
2
3
=-20logB
a
1-v
2
v
2
n
b
2
+
a
2z v
v
n
b
2
1
1+2z
a
jv
v
n
b
+
a
jv
v
n
b
2
Openmirrors.com
Section 7–2 / Bode Diagrams 41120
10
–100
fdB
0°
–90°
–180°
0.4 0.6 0.8 1 2 4 6 8 10 0.1 0.2
v
vnz = 0.1
z = 0.2
z = 0.3
z = 0.5
z = 0.7
z = 1.0
z = 0.1
z = 0.2
z = 0.3
z = 0.5
z = 0.7
z = 1.0Asymptotes
Figure 7–9
Log-magnitudecurves, together with
the asymptotes, and
phase-angle curvesof the quadratictransfer function
given by
Equation (7–7).
phase-angle curves for the quadratic factor given by Equation (7–7) with several values
ofz. If corrections are desired in the asymptotic curves, the necessary amounts of cor-
rection at a sufficient number of frequency points may be obtained from Figure 7–9.
The phase angle of the quadratic factor C1+2zAjv/vnB+Ajv/vnB2D–1is
(7–8)
The phase angle is a function of both vandz. At v=0 , the phase angle equals 0°. At
the corner frequency v=vn, the phase angle is –90° regardless of z, since
Atv=q, the phase angle becomes –180 °. The phase-angle curve is skew symmetric
about the inflection point—the point where f=–90 °.There are no simple ways to sketch
such phase curves. We need to refer to the phase-angle curves shown in Figure 7–9.f=-tan-1a2z
0b=-tan-1q=- 90°f=n1
1+2zaj v
vnb+aj v
vnb2=-tan-1
 ≥2z v
vn
1-av
vnb2¥
412
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
The frequency-response curves for the factor
can be obtained by merely reversing the sign of the log magnitude and that of the phase
angle of the factor
To obtain the frequency-response curves of a given quadratic transfer function, we must
first determine the value of the corner frequency v
n
and that of the damping ratio z.
Then, by using the family of curves given in Figure 7–9, the frequency-response curves
can be plotted.
The Resonant Frequency V
r
and the Resonant Peak Value M
r
.The magnitude of
is
(7–9)
If has a peak value at some frequency, this frequency is called the resonant
frequency. Since the numerator of is constant, a peak value of will occur
when
(7–10)
is a minimum. Since Equation (7–10) can be written
(7–11)
the minimum value of g(v)occurs at Thus the resonant frequency
v
r
is
(7–12)
As the damping ratio zapproaches zero, the resonant frequency approaches v
n
.F o r
0<z/H113490.707, the resonant frequency v
r
is less than the damped natural frequency
which is exhibited in the transient response. From Equation (7–12),
it can be seen that for z>0.707, there is no resonant peak. The magnitude de-
creases monotonically with increasing frequency v. (The magnitude is less than 0 dB
for all values of v>0 . Recall that, for 0.7<z<1 , the step response is oscillatory, but
the oscillations are well damped and are hardly perceptible.)@G(jv)@v
d
=v
n
21-z
2
,v
r
=v
n
21-2z
2
,
  
for 0/H11349z/H113490.707v=v
n
21-2z
2
.g(v)=
c
v
2
-v
2
n
A1-2z
2
B
v
2
n
d
2
+4z
2
A1-z
2
Bg(v)=
a
1-v
2
v
2
n
b
2
+
a
2zv
v
n
b
2
@G(jv)@ @G(jv)@@G(jv)@@G(jv)@=1
B
a
1-v
2
v
2
n
b
2
+
a
2zv
v
n
b
2
G(jv)=1
1+2z
a
j v
v
n
b
+
a
j v
v
n
b
2
1
1+2z
a
jv
v
n
b
+
a
jv
v
n
b
2
1+2z
a
j v
v
n
b
+
a
j v
v
n
b
2
Openmirrors.com
Section 7–2 / Bode Diagrams 41314
12
10
8
6
4
2
0
z0.2 1.0 0.8 0.6 0.4Mr in dB
Figure 7–10
Mr-versus- zcurve for
the second-ordersystem1/C1+2zAjv/H20862v
nB+
Ajv/H20862vnB2D.
For 0 /H11349z/H113490.707, the magnitude of the resonant peak, Mr=|G(j vr)|, can be found
from Equations (7–12) and (7–9). For 0 /H11349z/H113490.707,
(7–13)
For z>0.707 ,
(7–14)
Aszapproaches zero, Mrapproaches infinity. This means that if the undamped system
is excited at its natural frequency, the magnitude of G(jv)becomes infinity. The rela-
tionship between Mrandzis shown in Figure 7–10.
The phase angle of G(jv)at the frequency where the resonant peak occurs can be
obtained by substituting Equation (7–12) into Equation (7–8). Thus, at the resonantfrequency v
r,
General Procedure for Plotting Bode Diagrams. MATLAB provides an easy way
to plot Bode diagrams. (The MATLAB approach is presented later in this section.)Here, however, we consider the case where we want to draw Bode diagrams manuallywithout using MATLAB.
First rewrite the sinusoidal transfer function G(jv)H(jv)as a product of basic factors
discussed above.Then identify the corner frequencies associated with these basic factors.Finally, draw the asymptotic log-magnitude curves with proper slopes between the cornerfrequencies. The exact curve, which lies close to the asymptotic curve, can be obtainedby adding proper corrections.
The phase-angle curve of G(jv)H(jv)can be drawn by adding the phase-angle
curves of individual factors.
The use of Bode diagrams employing asymptotic approximations requires much less
time than other methods that may be used for computing the frequency response of atransfer function. The ease of plotting the frequency-response curves for a given trans-fer function and the ease of modification of the frequency-response curve as compensationis added are the main reasons why Bode diagrams are very frequently used in practice./GAjvrB=-tan-121-2z2
z=-90°+sin-1z
21-z2Mr=1Mr=@G(jv)@max=@GAjvrB@=1
2z21-z2
414
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
EXAMPLE 7–3
Draw the Bode diagram for the following transfer function:
Make corrections so that the log-magnitude curve is accurate.
To avoid any possible mistakes in drawing the log-magnitude curve, it is desirable to put G(jv)
in the following normalized form, where the low-frequency asymptotes for the first-order factors
and the second-order factor are the 0-dB line:
This function is composed of the following factors:
The corner frequencies of the third, fourth, and fifth terms are v=3 ,v=2 , and 
respectively. Note that the last term has the damping ratio of 0.3536.
To plot the Bode diagram, the separate asymptotic curves for each of the factors are shown
in Figure 7–11.The composite curve is then obtained by algebraically adding the individual curves,
also shown in Figure 7–11. Note that when the individual asymptotic curves are added at each fre-
quency, the slope of the composite curve is cumulative. Below the plot has the slope of
–20 dB /H20862decade.At the first corner frequency the slope changes to –60 dB /H20862decade and
continues to the next corner frequency v=2 , where the slope becomes –80 dB /H20862decade. At the
last corner frequency v=3 , the slope changes to –60 dB /H20862decade.
Once such an approximate log-magnitude curve has been drawn, the actual curve can be
obtained by adding corrections at each corner frequency and at frequencies one octave below
and above the corner frequencies. For first-order factors (1+jvT)
<1
, the corrections are ;3d B
at the corner frequency and ;1 dB at the frequencies one octave below and above the corner
frequency. Corrections necessary for the quadratic factor are obtained from Figure 7–9.The exact
log-magnitude curve for G(jv)is shown by a dashed curve in Figure 7–11.
Note that any change in the slope of the magnitude curve is made only at the corner
frequencies of the transfer function G(jv). Therefore, instead of drawing individual magnitude
curves and adding them up, as shown, we may sketch the magnitude curve without sketching
individual curves. We may start drawing the lowest-frequency portion of the straight line (that
is, the straight line with the slope –20 dB /H20862decade for ). As the frequency is increased,
we get the effect of the complex-conjugate poles (quadratic term) at the corner frequency
The complex-conjugate poles cause the slopes of the magnitude curve to change from
–20 to–60 dB /H20862decade. At the next corner frequency, v=2 , the effect of the pole is to change
the slope to –80 dB /H20862decade. Finally, at the corner frequency v=3 , the effect of the zero is to
change the slope from –80 to–60 dB /H20862decade.
For plotting the complete phase-angle curve, the phase-angle curves for all factors have to be
sketched. The algebraic sum of all phase-angle curves provides the complete phase-angle curve,
as shown in Figure 7–11.v=12
.v612
v=12
,v=12
,v=12
,7.5,
  
(jv)
-1
,
  
1+j v
3,
  
a
1+j v
2
b
-1
,
  
c
1+j v
2+(jv)
2
2
d
-1
G(jv)=7.5
a
jv
3+1
b
(jv)
a
jv
2+1
b
c
(jv)
2
2+jv
2+1
d
G(jv)=10(jv+3)
(jv)(jv+2)C(jv)
2
+jv+2D
Openmirrors.com
Section 7–2 / Bode Diagrams 41540
20
0
–20dB
–40Exact curve
0.2 0.4 0.6 0.8 1 2 4 6 8 10v
–270°–180°–90°0°90°
0.2 0.4 0.6 0.8 1 2 4 6 8 10vfG(jv)
2
25
54
431
G(jv)3
1
Figure 7–11
Bode diagram of thesystem considered in
Example 7–3.
Minimum-Phase Systems and Nonminimum-Phase Systems. Transfer func-
tions having neither poles nor zeros in the right-half splane are minimum-phase trans-
fer functions, whereas those having poles and/or zeros in the right-half splane are
nonminimum-phase transfer functions. Systems with minimum-phase transfer functionsare called minimum-phase systems, whereas those with nonminimum-phase transfer
functions are called nonminimum-phase systems.
For systems with the same magnitude characteristic, the range in phase angle of the
minimum-phase transfer function is minimum among all such systems, while the range inphase angle of any nonminimum-phase transfer function is greater than this minimum.
It is noted that for a minimum-phase system, the transfer function can be uniquely
determined from the magnitude curve alone. For a nonminimum-phase system, this isnot the case. Multiplying any transfer function by all-pass filters does not alter themagnitude curve, but the phase curve is changed.
Consider as an example the two systems whose sinusoidal transfer functions are,
respectively,
G
1(jv)=1+jvT
1+jvT1,  G2(jv)=1-jvT
1+jvT1,  06T6T1
416
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
f
0°
–90°
–180°G
1
(jv)
G
2
(jv)
v
Figure 7–13
Phase-angle
characteristics of the
systems G
1
(s)and
G
2
(s)shown in
Figure 7–12.
The pole–zero configurations of these systems are shown in Figure 7–12. The two sinu-
soidal transfer functions have the same magnitude characteristics, but they have differ-
ent phase-angle characteristics, as shown in Figure 7–13. These two systems differ from
each other by the factor
The magnitude of the factor (1-jvT)/(1+j vT)is always unity. But the phase
angle equals –2tan
–1
vTand varies from 0° to –180 ° as vis increased from zero to infinity.
As stated earlier, for a minimum-phase system, the magnitude and phase-angle char-
acteristics are uniquely related. This means that if the magnitude curve of a system is
specified over the entire frequency range from zero to infinity, then the phase-angle
curve is uniquely determined, and vice versa. This, however, does not hold for a non-
minimum-phase system.
Nonminimum-phase situations may arise in two different ways. One is simply when
a system includes a nonminimum-phase element or elements. The other situation may
arise in the case where a minor loop is unstable.
For a minimum-phase system, the phase angle at v=qbecomes –90°(q-p) ,
where pand qare the degrees of the numerator and denominator polynomials of the
transfer function, respectively. For a nonminimum-phase system, the phase angle at
v=qdiffers from –90°(q-p) . In either system, the slope of the log-magnitude curve
atv=qis equal to –20(q-p) dB /H20862decade. It is therefore possible to detect whether
the system is minimum phase by examining both the slope of the high-frequency
asymptote of the log-magnitude curve and the phase angle at v=q. If the slope of the
log-magnitude curve as vapproaches infinity is –20(q-p) dB /H20862decade and the phase
angle at v=qis equal to –90°(q-p) , then the system is minimum phase.G(jv)=1-jvT
1+jvT
jv
1
T
–1
T
1
–1
T
1
–s
G
1
(s)=1+Ts
1+T
1
s
jv
1
T
s
G
2
(s)=1–Ts
1+T
1
s
0 0
Figure 7–12
Pole–zero
configurations of a
minimum-phase
system G
1
(s)and
nonminimum-phase
system G
2
(s).
Openmirrors.com
Section 7–2 / Bode Diagrams 4170°
–100°
–200°
–300°
– 400°
–500°
– 600°
0.1 0.2 0.4 0.6 0.8 1 10 24 6 8
vTe–jvTG
G(jv)=e–jvT
|G(jv)| = 0 dB
Figure 7–14
Phase-anglecharacteristic of
transport lag.Nonminimum-phase systems are slow in responding because of their faulty behavior
at the start of a response. In most practical control systems, excessive phase lag should becarefully avoided. In designing a system, if fast speed of response is of primary importance,we should not use nonminimum-phase components. (A common example of nonmini-mum-phase elements that may be present in control systems is transport lag or dead time.)
It is noted that the techniques of frequency-response analysis and design to be
presented in this and the next chapter are valid for both minimum-phase andnonminimum-phase systems.
Transport Lag. Transport lag, which is also called dead time, is of nonminimum-
phase behavior and has an excessive phase lag with no attenuation at high frequencies.Such transport lags normally exist in thermal, hydraulic, and pneumatic systems.
Consider the transport lag given by
The magnitude is always equal to unity, since
Therefore, the log magnitude of the transport lag e
–jvTis equal to 0 dB. The phase
angle of the transport lag is
The phase angle varies linearly with the frequency v.The phase-angle characteristic
of transport lag is shown in Figure 7–14. =-57.3 vT  (degrees ) /G(jv)=-vT  (radians )@G(jv)@=∑cosvT-jsinvT∑=1G(jv)=e-jvT
418
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
0°–20–1001020
–100°
–200°
–300°0°
–90°
–180°
–270°
0.1 0.2 0.4 0.6 0.8 1 10 24 6 8
v
dB
e
–0.5jv
1 +jv
e
–0.5jv
1
1+jv
e
–0.5jv
1+jv
Figure 7–15
Bode diagram for the
system e
–jvL
/(1+j vT)
with L=0.5 andT=1.
EXAMPLE 7–4
Draw the Bode diagram of the following transfer function:
The log magnitude is
The phase angle of G(jv)is
The log-magnitude and phase-angle curves for this transfer function with L=0.5 andT=1 are
shown in Figure 7–15. =-vL-tan
-1
vT 
/
G(jv)
=
/
e
-jvL
+
n
1
1+jvT
 =0+20log
 
2
1
1+jvT
2
 20log
 
@G(jv)@=20log
 
@e
-jvL
@+20log
 
2
1
1+jvT
2
G(jv)=e
-jvL
1+jvT
Openmirrors.com
Section 7–2 / Bode Diagrams 419R(s) C(s) E(s)
G(s) +–
Figure 7–16
Unity-feedbackcontrol system.
dB
20 log Kp
0–20 dB/decade
–40 dB/decade
v in log scale
Figure 7–17
Log-magnitude curveof a type 0 system.Relationship between System Type and Log-Magnitude Curve. Consider the
unity-feedback control system. The static position, velocity, and acceleration error con-stants describe the low-frequency behavior of type 0, type 1, and type 2 systems,respectively. For a given system, only one of the static error constants is finite andsignificant. (The larger the value of the finite static error constant, the higher the loopgain is as vapproaches zero.)
The type of the system determines the slope of the log-magnitude curve at low
frequencies. Thus, information concerning the existence and magnitude of the steady-state error of a control system to a given input can be determined from the observationof the low-frequency region of the log-magnitude curve.
Determination of Static Position Error Constants. Consider the unity-feedback
control system shown in Figure 7–16. Assume that the open-loop transfer function isgiven by
or
Figure 7–17 shows an example of the log-magnitude plot of a type 0 system. In such a
system, the magnitude of G(jv)equals K
pat low frequencies, or
It follows that the low-frequency asymptote is a horizontal line at 20 log KpdB.lim
vS0G(jv)=K=KpG(jv)=KATa jv+1BATb jv+1B p ATm jv+1B
(jv)NAT1 jv+1BAT2 jv+1B p ATp jv+1BG(s) =KATa s+1BATb s+1BpATm s+1B
sNAT1 s+1BAT2 s+1BpATp s+1B
420
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Determination of Static Velocity Error Constants. Consider the unity-feedback
control system shown in Figure 7–16. Figure 7–18 shows an example of the log-magnitude
plot of a type 1 system. The intersection of the initial –20-dB /H20862decade segment (or its
extension) with the line v=1 has the magnitude 20 log K
v
.This may be seen as follows:
In a type 1 system
Thus,
The intersection of the initial –20-dB /H20862decade segment (or its extension) with the 0-dB
line has a frequency numerically equal to K
v
. To see this, define the frequency at this
intersection to be v
1
; then
or
As an example, consider the type 1 system with unity feedback whose open-loop
transfer function is
If we define the corner frequency to be v
2
and the frequency at the intersection of the
–40-dB /H20862decade segment (or its extension) with 0-dB line to be v
3
, then
v
2
=F
J,
  
v
2
3
=K
JG(s) =K
s(Js +F)K
v
=v
1
2
K
v
jv
1
2
=120log
 
2
K
v
jv
2
v=1
=20logK
v
G(jv)=K
v
jv,
  
for v/H112701
dB
0–20 dB/decade
–40 dB/decadev in log scale
20 log K
v
v
1
v
2
v
3
v = 1
Figure 7–18
Log-magnitude curve
of a type 1 system.
Openmirrors.com
Section 7–2 / Bode Diagrams 421dB
0–20 dB/decade–40 dB/decade
–60 dB/decade
v in log scale20 log Ka
v = 1va =Ka
Figure 7–19
Log-magnitude curveof a type 2 system.Since
it follows that
or
On the Bode diagram,
Thus, the v3point is just midway between the v2andv1points. The damping ratio zof
the system is then
Determination of Static Acceleration Error Constants. Consider the unity-
feedback control system shown in Figure 7–16. Figure 7–19 shows an example of thelog-magnitude plot of a type 2 system. The intersection of the initial –40-dB /H20862decade
segment (or its extension) with the v=1 line has the magnitude of 20 log K
a. Since at
low frequencies
it follows that
20log  2Ka
(jv)22
v=1=20logKaG(jv)=Ka
(jv)2,  for v/H112701z=F
21KJ=v2
2v3logv1-logv3=logv3-logv2v1
v3=v3
v2v1 v2=v2
3v1=Kv=K
F
422
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
The frequency v
a
at the intersection of the initial –40-dB /H20862decade segment (or its
extension) with the 0-dB line gives the square root of K
a
numerically. This can be seen
from the following:
which yields
Plotting Bode Diagrams with MATLAB. The command bode computes magni-
tudes and phase angles of the frequency response of continuous-time, linear, time-
invariant systems.
When the command bode (without left-hand arguments) is entered in the
computer, MATLAB produces a Bode plot on the screen. Most commonly used bode
commands are
bode(num,den)
bode(num,den,w)
bode(A,B,C,D)
bode(A,B,C,D,w)
bode(A,B,C,D,iu,w)
bode(sys)
When invoked with left-hand arguments, such as
[mag,phase,w] = bode(num,den,w)
bode returns the frequency response of the system in matrices mag,phase , and w.N o
plot is drawn on the screen.The matrices mag andphase contain magnitudes and phase
angles of the frequency response of the system, evaluated at user-specified frequency
points.The phase angle is returned in degrees.The magnitude can be converted to deci-
bels with the statement
magdB = 20*log10(mag)
Other Bode commands with left-hand arguments are
[mag,phase,w] = bode(num,den)
[mag,phase,w] = bode(num,den,w)
[mag,phase,w] = bode(A,B,C,D)
[mag,phase,w] = bode(A,B.C,D,w)
[mag,phase,w] = bode(A,B,C,D,iu,w)
[mag,phase,w] = bode(sys)
To specify the frequency range, use the command logspace(d1,d2) orlogspace
(d1,d2,n). logspace(d1,d2) generates a vector of 50 points logarithmically equally spaced
between decades 10
d1
and10
d2
. (50 points include both endpoints. There are 48 points
between the endpoints.) To generate 50 points between 0.1 rad /H20862sec and 100 rad /H20862sec,
enter the command
w = logspace(-1,2)v
a
=1K
a
20log
 
2
K
a
Ajv
a
B
2
2
=20log1=0
Openmirrors.com
Section 7–2 / Bode Diagrams 423MATLAB Program 7–1
num = [25];
den = [1  4  25];bode(num,den)title('Bode Diagram of G(s) = 25/(s^2 + 4s + 25)')
Frequency (rad/sec)Bode Diagram of G(s) = 25/( s2 + 4s + 25)
−200−50
−100
−1500−60−40−20Phase (deg); Magnitude (dB)20
0
100101102Figure 7–20
Bode diagram of
G(s) =25
s2+4s+25.logspace(dl,d2,n) generates npoints logarithmically equally spaced between decades
10d1and10d2.(npoints include both endpoints.) For example, to generate 100 points in-
cluding both endpoints between 1 rad /H20862sec and 1000 rad /H20862sec, enter the following command:
w = logspace(0,3,100)
To incorporate the user-specified frequency points when plotting Bode diagrams,
thebode command must include the frequency vector w, such as bode(num,den,w) and
[mag,phase,w] = bode(A,B,C,D,w) .
EXAMPLE 7–5 Consider the following transfer function:
Plot a Bode diagram for this transfer function.
When the system is defined in the form
use the command bode(num,den) to draw the Bode diagram. [When the numerator and denom-
inator contain the polynomial coefficients in descending powers of s,bode(num,den) draws the
Bode diagram.] MATLAB Program 7–1 shows a program to plot the Bode diagram for this sys-tem. The resulting Bode diagram is shown in Figure 7–20.G(s) =num (s)
den(s)G(s) =25
s2+4s+25
424
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Frequency (rad/sec)Bode Diagram of G(s) = 9( s
2
 + 0.2 s + 1)/[ s(s
2
 + 1.2 s + 9)]
−1000
−50100
50−20
Phase (deg); Magnitude (dB)
−1040
0102030
10
−2
10
−1
10
0
10
1
Figure 7–22
Bode diagram of 
G(s) =9As
2
+0.2s +1B
sAs
2
+1.2s +9B.
EXAMPLE 7–6
Consider the system shown in Figure 7–21. The open-loop transfer function is
Plot a bode diagram.
MATLAB Program 7–2 plots a Bode diagram for the system.The resulting plot is shown in
Figure 7–22. The frequency range in this case is automatically determined to be from 0.01 to
10 rad /H20862sec.G(s) =9As
2
+0.2s +1B
sAs
2
+1.2s +9B
9(s
2
+ 0.2s+ 1)
s(s
2
+ 1.2s+ 9)
+–
Figure 7–21
Control system.
MATLAB Program 7–2
num = [9  1.8  9];
den = [1  1.2  9  0];
bode(num,den)
title('Bode Diagram of G(s) = 9(s^2 + 0.2s + 1)/[s(s^2 + 1.2s + 9)]')
Openmirrors.com
Section 7–2 / Bode Diagrams 425Frequency (rad/sec)Bode Diagram of G(s) = 9( s2 + 0.2 s + 1)/[ s(s2 + 1.2 s + 9)]
−100−50050100−50Phase (deg); Magnitude (dB)050
10−210−1100101102103Figure 7–23
Bode diagram of
G(s) =9As2+0.2s +1B
sAs2+1.2s +9B.MATLAB Program 7–3
num = [9  1.8  9];
den = [1  1.2  9  0];w = logspace(-2,3,100);bode(num,den,w)title('Bode Diagram of G(s) = 9(s^2 + 0.2s + 1)/[s(s^2 + 1.2s + 9)]')If it is desired to plot the Bode diagram from 0.01 to 1000 rad /H20862sec, enter the following 
command:
w = logspace(-2,3,100)
This command generates 100 points logarithmically equally spaced between 0.01 and 100 rad /H20862sec.
(Note that such a vector wspecifies the frequencies in radians per second at which the frequency
response will be calculated.)
If we use the command
bode(num,den,w)
then the frequency range is as the user specified, but the magnitude range and phase-angle
range will be automatically determined. See MATLAB Program 7–3 and the resulting plot inFigure 7–23.
426
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Obtaining Bode Diagrams of Systems Defined in State Space. Consider the
system defined by
where state vector ( n-vector)
output vector ( m-vector)
control vector ( r-vector)
state matrix ( n*n matrix)
control matrix ( n*r matrix)
output matrix ( m*n matrix)
direct transmission matrix ( m*r matrix)
A Bode diagram for this system may be obtained by entering the command
bode(A,B,C,D)
or others listed earlier in this section.
The command bode(A,B,C,D) produces a series of Bode plots, one for each input of
the system, with the frequency range automatically determined. (More points are used
when the response is changing rapidly.)
The command bode(A,B,C,D,iu) , where iuis the ith input of the system, produces
the Bode diagrams from the input iu to all the outputs Ay
1
,y
2
,p,y
m
Bof the system,
with a frequency range automatically determined. (The scalar iuis an index into the in-
puts of the system and specifies which input is to be used for plotting Bode diagrams).
If the control vector uhas three inputs such that
then iumust be set to either 1, 2, or 3.
If the system has only one input u, then either of the following commands may be
used:
bode(A,B,C,D)
or
bode(A,B,C,D,1)
EXAMPLE 7–7
Consider the following system:
This system has one input uand one output y. By using the command
bode(A,B,C,D)
 y=[1
 
0]
B
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
0
-251
-4
RB
x
1
x
2
R
+
B
0
25
R
 u
u=
C
u
1
u
2
u
3
S
 D= C= B= A= u= y= x=y=Cx+Dux#=Ax+Bu
Openmirrors.com
Section 7–3 / Polar Plots 427Frequency (rad/sec)Bode Diagram
−200−50
−100
−1500−60−40−20Phase (deg); Magnitude (dB)20
0
100101102Figure 7–24
Bode diagram of thesystem considered inExample 7–7.MATLAB Program 7–4
A = [0  1;-25  -4];
B = [0;25];C = [1  0];D = [0];bode(A,B,C,D)title('Bode Diagram')and entering MATLAB Program 7–4 into the computer, we obtain the Bode diagram shown
in Figure 7–24.
7–3 POLAR PLOTS
The polar plot of a sinusoidal transfer function G(jv)is a plot of the magnitude of G(jv)
versus the phase angle of G(jv)on polar coordinates as vis varied from zero to infin-
ity.Thus, the polar plot is the locus of vectors as vis varied from zero to
infinity. Note that in polar plots a positive (negative) phase angle is measured counter-clockwise (clockwise) from the positive real axis.The polar plot is often called the Nyquistplot.An example of such a plot is shown in Figure 7–25. Each point on the polar plot ofG(jv)represents the terminal point of a vector at a particular value of v. In the polar
plot, it is important to show the frequency graduation of the locus. The projections ofG(jv)on the real and imaginary axes are its real and imaginary components.@G(jv)@
 /G(jv)If we replace the command bode(A,B,C,D) in MATLAB Program 7–4 with
bode(A,B,C,D,1)
then MATLAB will produce the Bode diagram identical to that shown in Figure 7–24.
428
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
MATLAB may be used to obtain a polar plot G(jv)or to obtain and 
accurately for various values of vin the frequency range of interest.
An advantage in using a polar plot is that it depicts the frequency-response charac-
teristics of a system over the entire frequency range in a single plot. One disadvantage
is that the plot does not clearly indicate the contributions of each individual factor of the
open-loop transfer function.
Integral and Derivative Factors (jV)
/H115511
.The polar plot of G(jv)=1/j vis the
negative imaginary axis, since
The polar plot of G(jv)=jvis the positive imaginary axis.
First-Order Factors (1/H11545jVT)
/H115511
.For the sinusoidal transfer function
the values of G(jv)atv=0 andv=1/T are, respectively,
and
Ifvapproaches infinity, the magnitude of G(jv)approaches zero and the phase angle
approaches –90°. The polar plot of this transfer function is a semicircle as the frequen-
cy vis varied from zero to infinity, as shown in Figure 7–26(a). The center is located at
0.5 on the real axis, and the radius is equal to 0.5.
To prove that the polar plot of the first-order factor is a semi-
circle, define
G(jv)=X+jYG(jv)=1/H20862(1+jvT)G
a
j1
T
b
=1
12
/
-45°
G(j0) =1
/
0°
G(jv)=1
1+jvT=1
21+v
2
 
T
2
 
/
-tan
-1
vT
G(jv)=1
jv=-j 1
v=1
v 
/
-90°
/
G(jv)
@G(jv)@
Im
Re
G(jv)
v = 0v =`
v
1
v
2
v
3
G(jv)
Im [G(jv)]Re [G(jv)]
Figure 7–25
Polar plot.
Openmirrors.com
Section 7–3 / Polar Plots 429where
Then we obtain
Thus, in the X-Yplane G(jv)is a circle with center at and with radius 
as shown in Figure 7–26(b). The lower semicircle corresponds to 0 /H11349v/H11349q, and the
upper semicircle corresponds to –q/H11349v/H113490.
The polar plot of the transfer function 1+jvTis simply the upper half of the straight
line passing through point (1,0) in the complex plane and parallel to the imaginary axis,
as shown in Figure 7–27. The polar plot of 1+jvThas an appearance completely
different from that of 1/(1+j vT).
Quadratic Factors C1/H115452ZAjV/VnB/H11545AjV/VnB2D/H115511.The low- and high-fre-
quency portions of the polar plot of the following sinusoidal transfer function
are given, respectively, by
and
The polar plot of this sinusoidal transfer function starts at and ends at as
vincreases from zero to infinity. Thus, the high-frequency portion of G(jv)is tangent
to the negative real axis.0/-180° 1/0°lim
vSqG(jv)=0/-180° lim
vS0G(jv)=1/0°G(jv)=1
1+2zaj v
vnb+aj v
vnb2,  for z701
2, X=1
2,Y=0aX-1
2b2
+Y2=a1
21-v2
 T2
1+v2
 T2b2
+a-vT
1+v2
 T2b2
=a1
2b2 Y=-vT
1+v2
 T2=imaginary part of G(jv) X=1
1+v2
 T2=real part of G(jv)Im
Re
v = 00 0.5
0.5v =/H11009
(a) (b)v
vv1
1+v2T2
1
1
vT= 1G   j1
T/H20849 /H20849
G   j1
T/H20849 /H208490Y
Xv =–/H11009
v =/H11009 v =  0vT
1+v2T2
Figure 7–26
(a) Polar plot of1/(1+j vT); (b) plot
ofG(jv)inX-Y
plane.
Im
Rev = 0v`
1 0
Figure 7–27
Polar plot of1+jvT.
430
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Im
Rev =`
v = 0
Resonant
peak
v
n
v
r
0
Figure 7–29
Polar plot showing
the resonant peak
and resonant
frequency v
r
.
Examples of polar plots of the transfer function just considered are shown in Figure
7–28. The exact shape of a polar plot depends on the value of the damping ratio z, but
the general shape of the plot is the same for both the underdamped case (1>z>0)
and overdamped case (z>1) .
For the underdamped case at v=v
n
, we have G(jv
n
)=1/(j2 z), and the phase
angle at v=v
n
is–90°. Therefore, it can be seen that the frequency at which the
G(jv)locus intersects the imaginary axis is the undamped natural frequency v
n
.I n
the polar plot, the frequency point whose distance from the origin is maximum cor-
responds to the resonant frequency v
r
. The peak value of G(jv)is obtained as the
ratio of the magnitude of the vector at the resonant frequency v
r
to the magnitude
of the vector at v=0 .The resonant frequency v
r
is indicated in the polar plot shown
in Figure 7–29.
For the overdamped case, as zincreases well beyond unity, the G(jv)locus
approaches a semicircle. This may be seen from the fact that, for a heavily damped
system, the characteristic roots are real, and one is much smaller than the other. Since,
for sufficiently large z, the effect of the larger root (larger in the absolute value) on the
response becomes very small, the system behaves like a first-order one.
v = 0Im
Re 01v =/H11009
(z: Large)
(z: Small)v
n
v
n
v
n
v
n
Figure 7–28
Polar plots of
forz>0.1
1+2z
a
jv
v
n
b
+
a
jv
v
n
b
2
Openmirrors.com
Section 7–3 / Polar Plots 431Im
Rev = 0
01v`
Figure 7–30
Polar plot of
forz>0. 1+2zajv
vnb+ajv
vnb2
Next, consider the following sinusoidal transfer function:
The low-frequency portion of the curve is
and the high-frequency portion is
Since the imaginary part of G(jv)is positive for v>0 and is monotonically increasing,
and the real part of G(jv)is monotonically decreasing from unity, the general shape of
the polar plot of G(jv)is as shown in Figure 7–30. The phase angle is between 0° and
180°.
EXAMPLE 7–8 Consider the following second-order transfer function:
Sketch a polar plot of this transfer function.
Since the sinusoidal transfer function can be written
the low-frequency portion of the polar plot becomes
and the high-frequency portion becomes
lim
vSqG(jv)=0-j0lim
vS0G(jv)=-T-jqG(jv)=1
jv(1+jvT)=- T
1+v2
 T2-j 1
vA1+v2
 T2BG(s) =1
s(Ts +1)lim
vSqG(jv)=q  /180°lim
vS0G(jv)=1/0° =a1-v2
v2
nb+ja2zv
vnb G(jv)=1+2zaj v
vnb+aj v
vnb2
432
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
The general shape of the polar plot of G(jv)is shown in Figure 7–31. The G(jv)plot is asymp-
totic to the vertical line passing through the point (–T,0). Since this transfer function involves an
integrator (1/s) , the general shape of the polar plot differs substantially from those of second-order
transfer functions that do not have an integrator.
EXAMPLE 7–9
Obtain the polar plot of the following transfer function:
Since G(jv)can be written
the magnitude and phase angle are, respectively,
and
Since the magnitude decreases from unity monotonically and the phase angle also decreases
monotonically and indefinitely, the polar plot of the given transfer function is a spiral, as shown
in Figure 7–32.
/
G(jv)
=
/
e
-jvL
+
n
1
1+jvT
=-vL-tan
-1
vT@G(jv)@=@e
-jvL
@/H11554
2
1
1+jvT
2
=1
21+v
2
 
T
2
G(jv)=Ae
-jvL
B
a
1
1+jvT
b
G(jv)=e
-jvL
1+jvT
Im
Re
0
0
v
v`
–T
Figure 7–31
Polar plot of
1/Cjv(1+jvT)D.
Im
Re1
Figure 7–32
Polar plot of
e
-jvL
/H20862(1+jvT).
Openmirrors.com
Section 7–3 / Polar Plots 433Im
Re 0
00v = 0
vvvv
v``
`Type 2 system
Type 1 system Type 0 systemFigure 7–33
Polar plots of type 0,type 1, and type 2systems.General Shapes of Polar Plots. The polar plots of a transfer function of the form
where n>m or the degree of the denominator polynomial is greater than that of the
numerator, will have the following general shapes:
1.Forl=0 or type 0systems: The starting point of the polar plot (which corre-
sponds to v=0 ) is finite and is on the positive real axis. The tangent to the 
polar plot at v=0 is perpendicular to the real axis. The terminal point, which
corresponds to v=q, is at the origin, and the curve is tangent to one of the
axes.
2.Forl=1 or type 1systems: thejvterm in the denominator contributes –90°t o
the total phase angle of G(jv)for 0 /H11349v/H11349q.At v=0 , the magnitude of G(jv)
is infinity, and the phase angle becomes –90°.At low frequencies, the polar plot is
asymptotic to a line parallel to the negative imaginary axis.At v=q, the magni-
tude becomes zero, and the curve converges to the origin and is tangent to one ofthe axes.
3.Forl=2 or type 2systems: The (jv)
2term in the denominator contributes
–180 ° to the total phase angle of G(jv)for 0 /H11349v/H11349q. At v=0 , the magni-
tude of G(jv)is infinity, and the phase angle is equal to –180 °. At low
frequencies, the polar plot may be asymptotic to the negative real axis. Atv=q, the magnitude becomes zero, and the curve is tangent to one of the axes.
The general shapes of the low-frequency portions of the polar plots of type 0, type
1, and type 2 systems are shown in Figure 7–33. It can be seen that, if the degree of the =b
0(jv)m+b1(jv)m-1+p
a0(jv)n+a1(jv)n-1+p G(jv)=KA1+jvTaBA1+jvTbB p
(jv)lA1+jvT1BA1+jvT2B p
434
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
denominator polynomial of G(jv)is greater than that of the numerator, then the G(jv)
loci converge to the origin clockwise.At v=q, the loci are tangent to one or the other
axes, as shown in Figure 7–34.
Note that any complicated shapes in the polar plot curves are caused by the nu-
merator dynamics—that is, by the time constants in the numerator of the transfer func-
tion. Figure 7–35 shows examples of polar plots of transfer functions with numerator
dynamics. In analyzing control systems, the polar plot of G(jv)in the frequency range
of interest must be accurately determined.
Table 7–1 shows sketches of polar plots of several transfer functions.
Im
Re
0
v =/H11009
n–m= 1n–m= 2n–m= 3
G(jv)=b
o
(jv)
m
+…
a
o
(jv)
n
+…
Figure 7–34
Polar plots in the high-frequency range.
Im
Re
0
0v=`
v
Im
Re
0
0v=`
v
Figure 7–35
Polar plots of transfer functions with numerator dynamics.
Openmirrors.com
Section 7–3 / Polar Plots 435vIm
ReIm
Re 0
00
Im
ReIm
Re 0 0
Im
ReIm
Re 0
Im
ImIm
ImRe
ReRe
Re0
00
010v
v v
v
0 0vv0 0v =/H11009
v =/H11009
v =/H11009
v =/H11009v =/H11009
v =/H11009v =/H110091
jv1
1
11+jvT
jvT
1+jvT jv
jvT
1+jvT
1
av =/H11009
v = 0 v = 0
v = 0
v = 0
v = 0/H11009 /H11009
1
(jv)2
1+jvT
1+jvaT
(a/H11022 1)1
(1+jvT1) (1 +jvT2) (1 +jvT3)
vn2
jv[(jv)2+ 2zvn(jv)+vn2]1 + jvT1
jv (1+jvT2) (1 +jvT3)1Table 7–1 Polar Plots of Simple Transfer Functions
Drawing Nyquist Plots with MATLAB. Nyquist plots, just like Bode diagrams,
are commonly used in the frequency-response representation of linear, time-invariant,feedback control systems. Nyquist plots are polar plots, while Bode diagrams arerectangular plots. One plot or the other may be more convenient for a particular opera-tion, but a given operation can always be carried out in either plot.
The MATLAB command nyquist computes the frequency response for continuous-
time, linear, time-invariant systems.When invoked without left-hand arguments, nyquist
produces a Nyquist plot on the screen.
436
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
The command
nyquist(num,den)
draws the Nyquist plot of the transfer function
where num anddencontain the polynomial coefficients in descending powers of s. Other
commonly used nyquist commands are
nyquist(num,den,w)
nyquist(A,B,C,D)
nyquist(A,B,C,D,w)
nyquist(A,B,C,D,iu,w)
nyquist(sys)
The command involving the user-specified frequency vector w, such as
nyquist(num,den,w)
calculates the frequency response at the specified frequency points in radians per
second.
When invoked with left-hand arguments such as
[re,im,w] = nyquist(num,den)
[re,im,w] = nyquist(num,den,w)
[re,im,w] = nyquist(A,B,C,D)
[re,im,w] = nyquist(A,B,C,D,w)
[re,im,w] = nyquist(A,B,C,D,iu,w)
[re,im,w] = nyquist(sys)
MATLAB returns the frequency response of the system in the matrices re,im,andw.
No plot is drawn on the screen. The matrices reandimcontain the real and imaginary
parts of the frequency response of the system, evaluated at the frequency points speci-
fied in the vector w. Note that reandimhave as many columns as outputs and one row
for each element in w.
EXAMPLE 7–10
Consider the following open-loop transfer function:
Draw a Nyquist plot with MATLAB.
Since the system is given in the form of the transfer function, the command
nyquist(num,den)
may be used to draw a Nyquist plot. MATLAB Program 7–5 produces the Nyquist plot shown
in Figure 7–36. In this plot, the ranges for the real axis and imaginary axis are automatically
determined.G(s) =1
s
2
+0.8s +1
G(s) =num (s)
den(s)
Openmirrors.com
Section 7–3 / Polar Plots 437MATLAB Program 7–5
num = [1];
den = [1  0.8  1];nyquist(num,den)gridtitle('Nyquist Plot of G(s) = 1/(s^2 + 0.8s + 1)')
MATLAB Program 7–6
% ---------- Nyquist plot ----------num = [1];
den = [1  0.8  1];nyquist(num,den)v = [-2  2  -2  2]; axis(v)gridtitle('Nyquist Plot of G(s) = 1/(s^2 + 0.8s + 1)')Real Axis−0.5 −1 1.5 0.5 1 0Imaginary Axis
−1.51.5
−0.5
−100.51Nyquist Plot of G(s) = 1/( s2+ 0.8 s+ 1)
Figure 7–36
Nyquist plot of
G(s) =1
s2+0.8s +1.
If we wish to draw the Nyquist plot using manually determined ranges—for example, from –2
to 2 on the real axis and from –2to 2 on the imaginary axis—enter the following command into
the computer:
v = [-2  2  -2  2];
axis(v);
or, combining these two lines into one,
axis([-2  2  -2  2]);
See MATLAB Program 7–6 and the resulting Nyquist plot shown in Figure 7–37.
438
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Caution. In drawing a Nyquist plot, where a MATLAB operation involves “Divide
by zero,” the resulting Nyquist plot may have an erroneous or undesirable appearance.
For example, if the transfer function G(s) is given by
then the MATLAB command
num = [1];
den = [1  1  0];
nyquist(num,den)
produces an undesirable Nyquist plot. An example of an undesirable Nyquist plot is
shown in Figure 7–38. If such an undesirable Nyquist plot appears on the computer,G(s) =1
s(s+1)
Real Axis−2 2 −1.5
1.5
1
0.5
0
−0.5
−1
Imaginary Axis
−1
0.5
−22
−0.5
−1.5
0
1
1.5
Nyquist Plot of G(s) = 1/( s
2
+ 0.8 s+ 1)
Figure 7–37
Nyquist plot of
G(s) =1
s
2
+0.8s +1.
Real Axis−1.2 −1.4 0 −0.4 −0.2 −0.8 −1 −0.6
Imaginary Axis
−150150
−50
−100050100Nyquist Diagram
Figure 7–38
Undesirable Nyquist
plot.
Openmirrors.com
Section 7–3 / Polar Plots 439Real Axis−1.5 −21 2 0.5 1.5 −0.5 −10Imaginary Axis
−21
−55
−12
−3
−4034Nyquist Plot of G(s) = 1/[ s(s+1)]
Figure 7–39
Nyquist plot of
G(s) =1
s(s+1).then it can be corrected if we specify the axis(v) . For example, if we enter the axis
command
v = [-2  2  -5  5]; axis(v)
in the computer, then a desirable form of Nyquist plot can be obtained. See Example 7–11.
EXAMPLE 7–11 Draw a Nyquist plot for the following G(s) :
MATLAB Program 7–7 will produce a desirable form of Nyquist plot on the computer, even
though a warning message “Divide by zero” may appear on the screen.The resulting Nyquist plotis shown in Figure 7–39.G(s) =1
s(s+1)
MATLAB Program 7–7
% ---------- Nyquist plot----------num = [1];
den = [1  1  0];nyquist(num,den)v = [-2  2  -5  5]; axis(v)gridtitle('Nyquist Plot of G(s) = 1/[s(s + 1)]')
Notice that the Nyquist plot shown in Figure 7–39 includes the loci for both v>0 andv<0 .
If we wish to draw the Nyquist plot for only the positive frequency region (v>0) , then we need
to use the command
[re,im,w]=nyquist(num,den,w)
440
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Drawing Nyquist Plots of a System Defined in State Space. Consider the
system defined by
where state vector ( n-vector)
output vector ( m-vector)
control vector ( r-vector)
state matrix ( n*n matrix)
control matrix ( n*r matrix)
output matrix ( m*n matrix)
direct transmission matrix ( m*r matrix)  D= C= B= A= u= y= x=y=Cx+Dux#=Ax+BuMATLAB Program 7–8
% ---------- Nyquist plot----------
num = [1];
den = [1  1  0];
w = 0.1:0.1:100;
[re,im,w] = nyquist(num,den,w);
plot(re,im)
v = [-2  2  -5  5]; axis(v)
grid
title('Nyquist Plot of G(s) = 1/[s(s + 1)]')
xlabel('Real Axis')
ylabel('Imag Axis')
Real Axis–1.5
–21
2 0.5
1.5
–0.5
–1
0
Imag Axis
–2
1
–55
–1
2
–3
–4
0
3
4
Nyquist Plot of G(s)=1/[s(s+1)]
Figure 7–40
Nyquist plot of
forv70.G(s) =1
s(s+1)
A MATLAB program using this nyquist command is shown in MATLAB Program 7–8. The
resulting Nyquist plot is presented in Figure 7–40.
Openmirrors.com
Section 7–3 / Polar Plots 441MATLAB Program 7–9
A = [0  1;-25  -4];
B = [0;25];C = [1  0];D = [0];nyquist(A,B,C,D)gridtitle('Nyquist Plot')Nyquist plots for this system may be obtained by the use of the command
nyquist(A,B,C,D)
This command produces a series of Nyquist plots, one for each input and output com-
bination of the system. The frequency range is automatically determined.
The command
nyquist(A,B,C,D,iu)
produces Nyquist plots from the single input iuto all the outputs of the system, with
the frequency range determined automatically. The scalar iuis an index into the inputs
of the system and specifies which input to use for the frequency response.
The command
nyquist(A,B,C,D,iu,w)
uses the user-supplied frequency vector w. The vector wspecifies the frequencies in
radians per second at which the frequency response should be calculated.
EXAMPLE 7–12 Consider the system defined by
Draw a Nyquist plot.
This system has a single input uand a single output y. A Nyquist plot may be obtained by
entering the command
nyquist(A,B,C,D)
or
nyquist(A,B,C,D,1)
MATLAB Program 7–9 will provide the Nyquist plot. (Note that we obtain the identical result byusing either of these two commands.) Figure 7–41 shows the Nyquist plot produced by MATLABProgram 7–9. y=[1
 0]Bx1
x2R+[0] u Bx#
1
x#
2R=B0
-251
-4RBx1
x2R+B0
25Ru
442
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
EXAMPLE 7–13
Consider the system defined by
This system involves two inputs and two outputs. There are four sinusoidal output–input re-
lationships: and Draw Nyquist
plots for the system. (When considering input u
1
, we assume that input u
2
is zero, and vice
versa.)
The four individual Nyquist plots can be obtained by the use of the command
nyquist(A,B,C,D)
MATLAB Program 7–10 produces the four Nyquist plots. They are shown in Figure 7–42.Y
2
(jv)/H20862U
2
(jv). Y
1
(jv)/H20862U
2
(jv), Y
2
(jv)/H20862U
1
(jv), Y
1
(jv)/H20862U
1
(jv), 
B
y
1
y
2
R
=
B
1
00
1
RB
x
1
x
2
R
+
B
0
00
0
RB
u
1
u
2
R
 
B
x#
1
x#
2
R
=
B
-1
6.5-1
0
RB
x
1
x
2
R
+
B
1
11
0
RB
u
1
u
2
R
Real Axis–0.4
–0.6 0.6
1
0.4
0.8
0
–0.2
0.2
1.2
Imag Axis
–1
01.5
–0.5
0.5
–1.5
1
Nyquist Plot
Figure 7–41
Nyquist plot of
system considered in
Example 7–12.
MATLAB Program 7–10
A = [-1  -1;6.5  0];
B = [1  1;1  0];
C = [1  0;0  1];
D = [0  0;0  0];
nyquist(A,B,C,D)
Openmirrors.com
Section 7–4 / Log-Magnitude-versus-Phase Plots 4437–4 LOG-MAGNITUDE-VERSUS-PHASE PLOTS
Another approach to graphically portraying the frequency-response characteristics is
to use the log-magnitude-versus-phase plot, which is a plot of the logarithmicmagnitude in decibels versus the phase angle or phase margin for a frequency rangeof interest. [The phase margin is the difference between the actual phase angle f
and –180 °; that is, f-(–180 °)=180 °+f.] The curve is graduated in terms of the
frequency v. Such log-magnitude-versus-phase plots are commonly called Nichols
plots.
In the Bode diagram, the frequency-response characteristics of G(jv)are shown on
semilog paper by two separate curves, the log-magnitude curve and the phase-anglecurve, while in the log-magnitude-versus-phase plot, the two curves in the Bode dia-gram are combined into one. In the manual approach the log-magnitude-versus-phaseplot can easily be constructed by reading values of the log magnitude and phase anglefrom the Bode diagram. Notice that in the log-magnitude-versus-phase plot a change inthe gain constant of G(jv)merely shifts the curve up (for increasing gain) or down (for
decreasing gain), but the shape of the curve remains the same.
Advantages of the log-magnitude-versus-phase plot are that the relative stability of
the closed-loop system can be determined quickly and that compensation can be workedout easily.
The log-magnitude-versus-phase plot for the sinusoidal transfer function G(jv)and
that for 1/G(jv)are skew symmetrical about the origin, since
21
G(jv)2 in dB =-@G(jv)@ in dB4
20
−2
−41
0.5
0
−0.5
−14
2
0
−2
−4
4
2
0
−2
−412 0 −1
Real Axis312 0 −13 01 −1 −22
01 −1 −22From: U
1 From: U2
From: U1 From: U2
Real AxisReal Axis Real AxisTo:Y2Imaginary Axis
To:Y1
To:Y2 To:Y1Nyquist Diagrams
Figure 7–42
Nyquist plot ofsystem considered in
Example 7–13.
444
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
and
Figure 7–43 compares frequency-response curves of
in three different representations. In the log-magnitude-versus-phase plot, the vertical
distance between the points v=0 andv=v
r
, where v
r
is the resonant frequency, is the
peak value of G(jv)in decibels.
Since log-magnitude and phase-angle characteristics of basic transfer functions have
been discussed in detail in Sections 7–2 and 7–3, it will be sufficient here to give exam-
ples of some log-magnitude-versus-phase plots. Table 7–2 shows such examples. (How-
ever, more on Nichols charts will be discussed in Section 7–6.)G(jv)=1
1+2z
a
j v
v
n
b
+
a
j v
v
n
b
2
n
1
G(jv)
=-
/
G(jv)
05
–5
–10
0°
–90°
–180°
|G| in dB G
M
r
M
r
0.2v
n
0.5v
n
v
n
2v
n
v
r
(a)v = 0v = 0v =`
∞v
vIm
Re
v
r
v
n
v
r
v
n
M
r
(b) (c)–12
–156
3
0
1
–6–3
–9
–90° –180° 0°
|G| in dB
G
Figure 7–43
Three representations of the frequency response of for z>0.
(a) Bode diagram; (b) polar plot; (c) log-magnitude-versus-phase plot.1
1+2z
a
jv
v
n
b
+
a
jv
v
n
b
2
,
Openmirrors.com
Section 7–5 / Nyquist Stability Criterion 445|G| in dB20
10
0
–10
–20
–180 ° 0° 180°
G
|G| in dB20
10
0
–10
–20
–180 ° 0° 180°
G|G| in dB20
10
0
–10
–20
–180 ° 0° 180°
G
|G| in dB20
10
0
–10
–20
–180 ° 0° 180°
G|G| in dB20
10
0
–10
–20
–180 ° 0° 180°
G
|G| in dB20
10
0
–10
–20
–180 ° 0° 180°
Gv
v0
v = 1
/H11009/H11009G =1
jvG =1
1 + jvT
v v = 0
G =(jv)2 + 2zvn(jv) + vn2
vn2G = 1 + jvTG =e–jvL
G =1
jv(1 + jvT)/H11009 vv = 0/H11009
v v = 0
/H11009
vv = 0
/H11009vv0Table 7–2 Log-Magnitude-versus-Phase Plots of Simple Transfer Functions
7–5 NYQUIST STABILITY CRITERION
The Nyquist stability criterion determines the stability of a closed-loop system from its
open-loop frequency response and open-loop poles.
This section presents mathematical background for understanding the Nyquist sta-
bility criterion. Consider the closed-loop system shown in Figure 7–44.The closed-looptransfer function is
C(s)
R(s)=G(s)
1+G(s)H(s)
446
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
For stability, all roots of the characteristic equation
must lie in the left-half splane. [It is noted that, although poles and zeros of the open-loop
transfer function G(s)H(s) may be in the right-half splane, the system is stable if all the
poles of the closed-loop transfer function (that is, the roots of the characteristic equation)
are in the left-half splane.] The Nyquist stability criterion relates the open-loop frequency
response G(jv)H(jv)to the number of zeros and poles of 1+G(s)H(s) that lie in the
right-half splane.This criterion, derived by H. Nyquist, is useful in control engineering be-
cause the absolute stability of the closed-loop system can be determined graphically from
open-loop frequency-response curves, and there is no need for actually determining the
closed-loop poles. Analytically obtained open-loop frequency-response curves, as well as
those experimentally obtained, can be used for the stability analysis.This is convenient be-
cause, in designing a control system, it often happens that mathematical expressions for
some of the components are not known; only their frequency-response data are available.
The Nyquist stability criterion is based on a theorem from the theory of complex
variables.To understand the criterion, we shall first discuss mappings of contours in the
complex plane.
We shall assume that the open-loop transfer function G(s)H(s) is representable as
a ratio of polynomials in s. For a physically realizable system, the degree of the denom-
inator polynomial of the closed-loop transfer function must be greater than or equal to
that of the numerator polynomial.This means that the limit of G(s)H(s) assapproaches
infinity is zero or a constant for any physically realizable system.
Preliminary Study. The characteristic equation of the system shown in Figure 7–44 is
We shall show that, for a given continuous closed path in the splane that does not go
through any singular points, there corresponds a closed curve in the F(s) plane. The
number and direction of encirclements of the origin of the F(s) plane by the closed
curve play a particularly important role in what follows, for later we shall correlate the
number and direction of encirclements with the stability of the system.
Consider, for example, the following open-loop transfer function:
The characteristic equation is
(7–15) =1+2
s-1=s+1
s-1=0F(s) =1+G(s)H(s)G(s)H(s) =2
s-1F(s) =1+G(s)H(s) =01+G(s)H(s) =0
R(s) C(s)
G(s)
H(s)
+–
Figure 7–44
Closed-loop system.
Openmirrors.com
Section 7–5 / Nyquist Stability Criterion 447s PlaneF(s) Plane3
2
0 –22 34
–2
–3ReIm
jv
v=–2
s=–1s=–2
s= 1sv= 0
v= 2v=–1
v= 1s= 2s= 0
–2 –10 1 2j2
j1
–j1
–j21
–13
–1
(a) (b)Figure 7–45
Conformal mapping of thes-plane grids into the F(s)
plane, whereF(s)=(s+1)/(s-1).
The function F(s) is analytic#everywhere in the splane except at its singular points.
For each point of analyticity in the splane, there corresponds a point in the F(s) plane.
For example, if s=2+j1 , then F(s) becomes
Thus, point s=2+j1 in the splane maps into point 2-j1 in the F(s) plane.
Thus, as stated previously, for a given continuous closed path in the splane, which does
not go through any singular points, there corresponds a closed curve in the F(s) plane.
For the characteristic equation F(s) given by Equation (7–15), the conformal map-
ping of the lines and the lines [see Figure 7–45(a)] yield cir-cles in the F(s) plane, as shown in Figure 7–45(b). Suppose that representative point s
traces out a contour in the splane in the clockwise direction. If the contour in the s
plane encloses the pole of F(s) , there is one encirclement of the origin of the F(s) plane
by the locus of F(s) in the counterclockwise direction. [See Figure 7–46(a).] If the con-
tour in the splane encloses the zero of F(s), there is one encirclement of the origin of
theF(s) plane by the locus of F(s) in the clockwise direction. [See Figure 7–46(b).] If
the contour in the splane encloses both the zero and the pole or if the contour enclos-
es neither the zero nor the pole, then there is no encirclement of the origin of the F(s)
plane by the locus of F(s). [See Figures 7–46(c) and (d).]
From the foregoing analysis, we can say that the direction of encirclement of the ori-
gin of the F(s) plane by the locus of F(s) depends on whether the contour in the splane
encloses a pole or a zero. Note that the location of a pole or zero in the splane, whether
in the right-half or left-half splane, does not make any difference, but the enclosure of
a pole or zero does. If the contour in the splane encloses equal numbers of poles and
zeros, then the corresponding closed curve in the F(s) plane does not encircle the ori-
gin of the F(s) plane.The foregoing discussion is a graphical explanation of the mapping
theorem, which is the basis for the Nyquist stability criterion.s=0, ;1, ;2 v=0, ;1, 
;2F(2 +j1)=2+j1+1
2+j1-1=2-j1
#A complex function F(s) is said to be analytic in a region if F(s) and all its derivatives exist in that region.
448
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
jv
s Plane j2
j1
0
–j1
–j23 1 –12 –2A B
CDs
jv
j2
j1
0
–j1
–j23 1 –12A B
C Ds
jv
j2
0
–j23 1 –1AB
C Ds
jv
03 1 –12 –2G HF E
C DB As
Im
F(s) Plane 2
1
0
–1
–212
A/H11032
A/H11032D/H11032
D/H11032
A/H11032C/H11032
B/H11032
B/H11032C/H11032D/H11032
E/H11032F/H11032G/H11032B/H11032C/H11032 D/H11032
C/H11032
B/H11032Re
Im
2
1
0
–1
–212 Re
Im
2
1
0
–1
–21 –12 Re
Im
2
1
0
–1
–23 1 –12 Re
3 –1
3 –1 –2
2 –2j1
–j1
j2
j1
–j1
–j23
H/H11032A/H11032(a)
(b)
(c)
(d)
Figure 7–46
Closed contours in the s
plane and their
corresponding closed curves
in the F(s) plane, where
F(s)=(s+1)/(s-1).
Mapping Theorem. LetF(s) be a ratio of two polynomials in s. Let Pbe the num-
ber of poles and Zbe the number of zeros of F(s) that lie inside some closed contour in
thesplane, with multiplicity of poles and zeros accounted for. Let the contour be such
that it does not pass through any poles or zeros of F(s) .This closed contour in the splane
is then mapped into the F(s) plane as a closed curve. The total number Nof clockwise
encirclements of the origin of the F(s) plane, as a representative point straces out the
entire contour in the clockwise direction, is equal to Z-P . (Note that by this mapping
theorem, the numbers of zeros and of poles cannot be found—only their difference.)
Openmirrors.com
Section 7–5 / Nyquist Stability Criterion 449We shall not present a formal proof of this theorem here, but leave the proof to
Problem A–7–6 . Note that a positive number Nindicates an excess of zeros over poles
of the function F(s) and a negative Nindicates an excess of poles over zeros. In control
system applications, the number Pcan be readily determined for F(s)=1+G(s)H(s)
from the function G(s)H(s) . Therefore, if Nis determined from the plot of F(s) , the
number of zeros in the closed contour in the splane can be determined readily. Note that
the exact shapes of the s-plane contour and F(s) locus are immaterial so far as encir-
clements of the origin are concerned, since encirclements depend only on the enclosureof poles and/or zeros of F(s) by the s-plane contour.
Application of the Mapping Theorem to the Stability Analysis of Closed-Loop
Systems. For analyzing the stability of linear control systems, we let the closed con-
tour in the splane enclose the entire right-half splane. The contour consists of the en-
tire jvaxis from v=– qto±qand a semicircular path of infinite radius in the
right-half splane. Such a contour is called the Nyquist path. (The direction of the path
is clockwise.) The Nyquist path encloses the entire right-half splane and encloses all
the zeros and poles of 1+G(s)H(s) that have positive real parts. [If there are no zeros
of1+G(s)H(s) in the right-half splane, then there are no closed-loop poles there,
and the system is stable.] It is necessary that the closed contour, or the Nyquist path, notpass through any zeros and poles of 1+G(s)H(s) . If G(s)H(s) has a pole or poles at
the origin of the splane, mapping of the point s=0 becomes indeterminate. In such
cases, the origin is avoided by taking a detour around it. (A detailed discussion of thisspecial case is given later.)
If the mapping theorem is applied to the special case in which F(s) is equal to
1+G(s)H(s) , then we can make the following statement: If the closed contour in the
s plane encloses the entire right-half splane, as shown in Figure 7–47, then the num-
ber of right-half plane zeros of the function F(s)=1+G(s)H(s) is equal to the num-
ber of poles of the function F(s)=1+G(s)H(s) in the right-half splane plus the
number of clockwise encirclements of the origin of the 1+G(s)H(s) plane by the
corresponding closed curve in this latter plane.
Because of the assumed condition that
the function of 1+G(s)H(s) remains constant as straverses the semicircle of infinite
radius. Because of this, whether the locus of 1+G(s)H(s) encircles the origin of the
1+G(s)H(s) plane can be determined by considering only a part of the closed contour
in the splane—that is, the jvaxis. Encirclements of the origin, if there are any, occur onlylim
sSq C1+G(s)H(s)D=constant
jv
s 0s Plane
`
Figure 7–47
Closed contour inthesplane.
450
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Im
Re 01
1+G(jv)H(jv)Im
Re 0–1
1+G(jv)H(jv)
G(jv)H(jv)GH Plane 1+GH Plane
Figure 7–48
Plots of
in
the1+GH plane
andGH plane.1+G(jv)H(jv)
while a representative point moves from –jqto±jqalong the jvaxis, provided that no
zeros or poles lie on the jvaxis.
Note that the portion of the  1+G(s)H(s) contour from v=– qtov=qis sim-
ply1+G(j v)H(jv). Since 1+G(j v)H(jv)is the vector sum of the unit vector and
the vector G(jv)H(jv),1+G(j v)H(jv)is identical to the vector drawn from the
–1+j0 point to the terminal point of the vector G(jv)H(jv), as shown in Figure 7–48.
Encirclement of the origin by the graph of 1+G(j v)H(jv)is equivalent to encir-
clement of the –1+j0 point by just the G(jv)H(jv)locus.Thus, the stability of a closed-
loop system can be investigated by examining encirclements of the –1+j0 point by
the locus of G(jv)H(jv). The number of clockwise encirclements of the –1+j0 point
can be found by drawing a vector from the –1+j0 point to the G(jv)H(jv)locus,
starting from v=– q, going through v=0 , and ending at v=± q, and by counting
the number of clockwise rotations of the vector.
Plotting G(jv)H(jv)for the Nyquist path is straightforward. The map of the nega-
tivejvaxis is the mirror image about the real axis of the map of the positive jvaxis.That
is, the plot of G(jv)H(jv)and the plot of G(–jv)H(–jv)are symmetrical with each
other about the real axis. The semicircle with infinite radius maps into either the origin
of the GH plane or a point on the real axis of the GH plane.
In the preceding discussion, G(s)H(s) has been assumed to be the ratio of two poly-
nomials in s. Thus, the transport lag e
–Ts
has been excluded from the discussion. Note,
however, that a similar discussion applies to systems with transport lag, although a proof
of this is not given here. The stability of a system with transport lag can be determined
from the open-loop frequency-response curves by examining the number of encir-
clements of the –1+j0 point, just as in the case of a system whose open-loop transfer
function is a ratio of two polynomials in s.
Nyquist Stability Criterion. The foregoing analysis, utilizing the encirclement of
the–1+j0 point by the G(jv)H(jv)locus, is summarized in the following Nyquist
stability criterion:
Nyquist stability criterion [for a special case when G(s)H(s) has neither poles nor
zeros on the jvaxis]: In the system shown in Figure 7–44, if the open-loop transfer func-
tion G(s)H(s) haskpoles in the right-half splane and 
then for stability, the G(jv)H(jv)locus, as vvaries from –qtoq, must encircle the
–1+j0 point ktimes in the counterclockwise direction.lim
sSq
G(s)H(s) =constant ,
Openmirrors.com
Section 7–5 / Nyquist Stability Criterion 451Im
Re 0 –1GH Plane
Figure 7–49
Region enclosed by aNyquist plot.Remarks on the Nyquist Stability Criterion
1.This criterion can be expressed as
where number of zeros of 1+G(s)H(s) in the right-half splane
number of clockwise encirclements of the –1+j0 point
number of poles of G(s)H(s) in the right-half splane
IfPis not zero, for a stable control system, we must have Z=0 ,o r  N=–P , which
means that we must have Pcounterclockwise encirclements of the –1+j0 point.
IfG(s)H(s) does not have any poles in the right-half splane, then Z=N .
Thus, for stability there must be no encirclement of the –1+j0 point by the
G(jv)H(jv)locus. In this case it is not necessary to consider the locus for the en-
tirejvaxis, only for the positive-frequency portion. The stability of such a system
can be determined by seeing if the –1+j0 point is enclosed by the Nyquist plot
ofG(jv)H(jv). The region enclosed by the Nyquist plot is shown in Figure 7–49.
For stability, the –1+j0 point must lie outside the shaded region.
2.We must be careful when testing the stability of multiple-loop systems since they
may include poles in the right-half splane. (Note that although an inner loop may
be unstable, the entire closed-loop system can be made stable by proper design.)Simple inspection of encirclements of the –1+j0 point by the G(jv)H(jv)locus
is not sufficient to detect instability in multiple-loop systems. In such cases, how-ever, whether any pole of 1+G(s)H(s) is in the right-half splane can be deter-
mined easily by applying the Routh stability criterion to the denominator ofG(s)H(s) .
If transcendental functions, such as transport lag e
–Ts, are included in G(s)H(s) ,
they must be approximated by a series expansion before the Routh stabilitycriterion can be applied.
3.If the locus of G(jv)H(jv)passes through the –1+j0 point, then zeros of the
characteristic equation, or closed-loop poles, are located on the jvaxis.This is not
desirable for practical control systems. For a well-designed closed-loop system,none of the roots of the characteristic equation should lie on the jvaxis. P= N= Z=Z=N+P
452
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
jvjv
ss 0s Planes Plane
j 0+
j 0–`
s=e e
ju
e
Figure 7–50
Contour near the
origin of the splane
and closed contour in
thesplane avoiding
poles and zeros at
the origin.
Special Case when G(s)H(s) Involves Poles and /or Zeros on the jVAxis. In
the previous discussion, we assumed that the open-loop transfer function G(s)H(s) has
neither poles nor zeros at the origin.We now consider the case where G(s)H(s) involves
poles and/or zeros on the jvaxis.
Since the Nyquist path must not pass through poles or zeros of G(s)H(s) , if the func-
tion G(s)H(s) has poles or zeros at the origin (or on the jvaxis at points other than the
origin), the contour in the splane must be modified. The usual way of modifying the
contour near the origin is to use a semicircle with the infinitesimal radius e, as shown in
Figure 7–50. [Note that this semicircle may lie in the right-half splane or in the left-half
splane. Here we take the semicircle in the right-half splane.] A representative point s
moves along the negative jvaxis from –jqtoj0–. From s=j0– tos=j0±, the point
moves along the semicircle of radius e(wheree/H112701)and then moves along the posi-
tivejvaxis from j0±tojq. From s=j q, the contour follows a semicircle with infinite
radius, and the representative point moves back to the starting point, s=–j q.The area
that the modified closed contour avoids is very small and approaches zero as the radius
eapproaches zero. Therefore, all the poles and zeros, if any, in the right-half splane are
enclosed by this contour.
Consider, for example, a closed-loop system whose open-loop transfer function is
given by
The points corresponding to s=j0± and s=j0– on the locus of G(s)H(s) in the
G(s)H(s) plane are –jqand jq, respectively. On the semicircular path with radius e
(where e/H112701), the complex variable scan be written
whereuvaries from –90° to ±90°. Then G(s)H(s) becomes
GAee
ju
BHAee
ju
B=K
ee
ju
=K
e e
-ju
s=ee
ju
G(s)H(s) =K
s(Ts +1)
Openmirrors.com
Section 7–5 / Nyquist Stability Criterion 453jv
ss PlaneD
C
AB E
Fj 0+
j 0–+j`
–j`` `
(e /H11021/H11021 1)
v = 0 +–1D/H11032,E/H11032,F/H11032v =–`
v =`GHPlane
ReA/H11032
B/H11032
C/H11032Im
v = 0–
Figure 7–51
s-Plane contour and the
G(s)H(s) locus in the GH
plane, where
G(s)H(s) =K/H20862Cs(Ts +1)D.
The value K/H20862eapproaches infinity as eapproaches zero, and –uvaries from 90° to –90°
as a representative point smoves along the semicircle in the splane. Thus, the points
G(j0–)H(j0–)=j qandG(j0±)H(j0±)=–j qare joined by a semicircle of infinite
radius in the right-half GH plane.The infinitesimal semicircular detour around the ori-
gin in the splane maps into the GH plane as a semicircle of infinite radius. Figure 7–51
shows the s-plane contour and the G(s)H(s) locus in the GH plane. Points A, B , and
Con the s-plane contour map into the respective points A¿,B¿, and C¿on the G(s)H(s)
locus.As seen from Figure 7–51, points D, E , and Fon the semicircle of infinite radius
in the splane map into the origin of the GH plane. Since there is no pole in the right-
half splane and the G(s)H(s) locus does not encircle the –1+j0 point, there are no
zeros of the function 1+G(s)H(s) in the right-half splane. Therefore, the system is
stable.
For an open-loop transfer function G(s)H(s) involving a 1/snfactor (where
n=2 ,3 ,p), the plot of G(s)H(s) hasnclockwise semicircles of infinite radius about
the origin as a representative point smoves along the semicircle of radius e(where
e/H112701). For example, consider the following open-loop transfer function:
ThenAsuvaries from –90° to 90° in the splane, the angle of G(s)H(s) varies from 180° to
–180 °, as shown in Figure 7–52. Since there is no pole in the right-half splane and the
locus encircles the –1+j0 point twice clockwise for any positive value of K, there are
two zeros of 1+G(s)H(s) in the right-half splane. Therefore, this system is always
unstable.lim
sSeejuG(s)H(s) =K
e2e2ju=K
e2e-2juG(s)H(s) =K
s2(Ts +1)
454
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Note that a similar analysis can be made if G(s)H(s) involves poles and/or zeros on
thejvaxis. The Nyquist stability criterion can now be generalized as follows:
Nyquist stability criterion [for a general case when G(s)H(s) has poles and/or zeros
on the jvaxis]: In the system shown in Figure 7–44, if the open-loop transfer function
G(s)H(s) haskpoles in the right-half splane, then for stability the G(s)H(s) locus,
as a representative point straces on the modified Nyquist path in the clockwise di-
rection, must encircle the –1+j0 point ktimes in the counterclockwise direction.
7–6 STABILITY ANALYSIS
In this section, we shall present several illustrative examples of the stability analysis of
control systems using the Nyquist stability criterion.
If the Nyquist path in the splane encircles Zzeros and Ppoles of 1+G(s)H(s) and
does not pass through any poles or zeros of 1+G(s)H(s) as a representative point s
moves in the clockwise direction along the Nyquist path, then the corresponding con-
tour in the G(s)H(s) plane encircles the –1+j0 point N=Z-P times in the clock-
wise direction. (Negative values of Nimply counterclockwise encirclements.)
In examining the stability of linear control systems using the Nyquist stability crite-
rion, we see that three possibilities can occur:
1.There is no encirclement of the –1+j0 point. This implies that the system is sta-
ble if there are no poles of G(s)H(s) in the right-half splane; otherwise, the sys-
tem is unstable.
2.There are one or more counterclockwise encirclements of the –1+j0 point. In this
case the system is stable if the number of counterclockwise encirclements is the
same as the number of poles of G(s)H(s) in the right-half splane; otherwise, the
system is unstable.
3.There are one or more clockwise encirclements of the –1+j0 point. In this case
the system is unstable.
In the following examples, we assume that the values of the gain Kand the time con-
stants (such as T, and ) are all positive. T
2
T
1
 
,
jv
s Plane
sGH Plane
Rej 0+
j 0–`+j`
–j`e /H11021/H11021 1v = 0+
v = 0––1`Im
v =–`v =`
Figure 7–52
s-Plane contour and the
G(s)H(s) locus in the GH
plane, where
G(s)H(s) =K/H20862Cs
2
(Ts +1)D.
Openmirrors.com
Section 7–6 / Stability Analysis 455Im
Re –1GH Plane
G(jv)H(jv)v = 0 v = –`
v =`
Figure 7–53
Polar plot ofG(jv)H(jv)
considered in
Example 7–14.
Im
Re Re –1–1GH Plane
v = 0–
v = 0+ImGH Plane
v = 0–
v = 0+
Small K Large K(Stable) (Unstable)P= 0 P= 0
N= 0
Z= 0
v =–/H11009v =/H11009
v =–/H11009v =/H11009N= 2
Z= 2
Figure 7–54
Polar plots of thesystem considered in
Example 7–15.EXAMPLE 7–14 Consider a closed-loop system whose open-loop transfer function is given by
Examine the stability of the system.
A plot of G(jv)H(jv)is shown in Figure 7–53. Since G(s)H(s) does not have any poles in
the right-half splane and the –1+j0 point is not encircled by the G(jv)H(jv)locus, this system
is stable for any positive values of K, and T2 . T1 ,G(s)H(s) =K
AT1 s+1BAT2 s+1B
EXAMPLE 7–15 Consider the system with the following open-loop transfer function:
Determine the stability of the system for two cases: (1) the gain Kis small and (2) Kis large.
The Nyquist plots of the open-loop transfer function with a small value of Kand a large value
ofKare shown in Figure 7–54.The number of poles of G(s)H(s) in the right-half splane is zero.G(s)H(s) =K
sAT1 s+1BAT2 s+1B
456
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Im
ReGH Plane
v = 0–
v = 0+v =–/H11009
v =/H11009Im
ReGH Plane
v = 0–
v = 0+v =–/H11009
v =/H11009Im
ReGH Plane
v = 0+
v = 0–v =/H11009
v =–/H11009
T
1
/H11021 T
2
(Stable)T
1
= T
2
G(jv)H(jv) locus
passes through the
–1+j0 pointT
1
/H11022 T
2
(Unstable)
Figure 7–55
Polar plots of the
system considered in
Example 7–16.Therefore, for this system to be stable, it is necessary that N=Z=0 or that the G(s)H(s) locus
not encircle the –1+j0 point.
For small values of K, there is no encirclement of the –1+j0 point. Hence, the system is sta-
ble for small values of K. For large values of K, the locus of G(s)H(s) encircles the –1+j0 point
twice in the clockwise direction, indicating two closed-loop poles in the right-half splane, and the
system is unstable. (For good accuracy, Kshould be large. From the stability viewpoint, however,
a large value of Kcauses poor stability or even instability.To compromise between accuracy and
stability, it is necessary to insert a compensation network into the system. Compensating tech-
niques in the frequency domain are discussed in Sections 7–11 through 7–13.)
EXAMPLE 7–16
The stability of a closed-loop system with the following open-loop transfer function
depends on the relative magnitudes of and Draw Nyquist plots and determine the stability
of the system.
Plots of the locus G(s)H(s) for three cases, and are shown 
in Figure 7–55. For the locus of G(s)H(s) does not encircle the –1+j0 point,
and the closed-loop system is stable. For , the G(s)H(s) locus passes through 
the–1+j0 point, which indicates that the closed-loop poles are located on the jvaxis. For
the locus of G(s)H(s) encircles the –1+j0 point twice in the clockwise direction.
Thus, the closed-loop system has two closed-loop poles in the right-half splane, and the system
is unstable.T
1
7T
2
 
,T
1
=T
2
T
1
 
6T
2
 
,T
1
7T
2
 
, T
1
6T
2
 
,T
1
=T
2
 
,T
2
 
. T
1
G(s)H(s) =KAT
2
 
s+1B
s
2
AT
1
 
s+1B
EXAMPLE 7–17
Consider the closed-loop system having the following open-loop transfer function:
Determine the stability of the system.G(s)H(s) =K
s(Ts -1)
Openmirrors.com
Section 7–6 / Stability Analysis 457Im
ReGH Plane
v = 0–v = 0+
–1v =`
v =–`
Figure 7–56
Polar plot of thesystem considered in
Example 7–17.
Im
ReGH Plane
v = 0–v = 0+
–1v =–`
v =`
Figure 7–57
Polar plot of thesystem considered in
Example 7–18.The function G(s)H(s) has one pole (s=1/T) in the right-half splane.Therefore, P=1 .T he
Nyquist plot shown in Figure 7–56 indicates that the G(s)H(s) plot encircles the –1+j0 point
once clockwise. Thus, N=1 . Since Z=N+P , we find that Z=2 . This means that the closed-
loop system has two closed-loop poles in the right-half splane and is unstable.
EXAMPLE 7–18 Investigate the stability of a closed-loop system with the following open-loop transfer function:
The open-loop transfer function has one pole (s=1) in the right-half splane, or P=1 .T h e
open-loop system is unstable. The Nyquist plot shown in Figure 7–57 indicates that the –1+j0
point is encircled by the G(s)H(s) locus once in the counterclockwise direction. Therefore,
N=–1 . Thus, Zis found from Z=N+P to be zero, which indicates that there is no zero of
1+G(s)H(s) in the right-half splane, and the closed-loop system is stable. This is one of the
examples for which an unstable open-loop system becomes stable when the loop is closed.G(s)H(s) =K(s +3)
s(s-1)  (K71)
458
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
R(s) C(s)G(s)
G
1
(s) G
2
(s)
H
1
(s)H
2
(s)
+–
+–
Figure 7–59
Multiple-loop
system.
Conditionally Stable Systems. Figure 7–58 shows an example of a G(jv)H(jv)
locus for which the closed-loop system can be made unstable by varying the open-loop
gain. If the open-loop gain is increased sufficiently, the G(jv)H(jv)locus encloses the
–1+j0 point twice, and the system becomes unstable. If the open-loop gain is decreased
sufficiently, again the G(jv)H(jv)locus encloses the –1+j0 point twice. For stable
operation of the system considered here, the critical point –1+j0 must not be located
in the regions between OAand BCshown in Figure 7–58. Such a system that is stable
only for limited ranges of values of the open-loop gain for which the –1+j0 point is
completely outside the G(jv)H(jv)locus is a conditionally stable system.
A conditionally stable system is stable for the value of the open-loop gain lying be-
tween critical values, but it is unstable if the open-loop gain is either increased or de-
creased sufficiently. Such a system becomes unstable when large input signals are applied,
since a large signal may cause saturation, which in turn reduces the open-loop gain of
the system. It is advisable to avoid such a situation.
Multiple-Loop System. Consider the system shown in Figure 7–59.This is a mul-
tiple-loop system. The inner loop has the transfer function
G(s) =G
2
(s)
1+G
2
(s)H
2
(s)
Im
ReGH Plane
0
0A B Cv =`
v
Figure 7–58
Polar plot of a
conditionally stable
system.
Openmirrors.com
Section 7–6 / Stability Analysis 459Figure 7–60
Control system.IfG(s) is unstable, the effects of instability are to produce a pole or poles in the right-half
splane.Then the characteristic equation of the inner loop, 1+ G2(s)H2(s)=0 , has a zero
or zeros in the right-half splane. If G2(s)andH2(s)have poles here, then the number
Z1of right-half plane zeros of 1+ G2(s)H2(s)can be found from where
N1is the number of clockwise encirclements of the –1+j0 point by the G2(s)H2(s)
locus. Since the open-loop transfer function of the entire system is given byG
1(s)G(s) H1(s), the stability of this closed-loop system can be found from the Nyquist
plot of G1(s)G(s) H1(s)and knowledge of the right-half plane poles of G1(s)G(s) H1(s).
Notice that if a feedback loop is eliminated by means of block diagram reductions,
there is a possibility that unstable poles are introduced; if the feedforward branch iseliminated by means of block diagram reductions, there is a possibility that right-halfplane zeros are introduced.Therefore, we must note all right-half plane poles and zerosas they appear from subsidiary loop reductions. This knowledge is necessary in deter-mining the stability of multiple-loop systems.
EXAMPLE 7–19
Consider the control system shown in Figure 7–60.The system involves two loops. Determine the
range of gain Kfor stability of the system by the use of the Nyquist stability criterion. (The gain
Kis positive.)
To examine the stability of the control system, we need to sketch the Nyquist locus of G(s) , where
However, the poles of G(s) are not known at this point.Therefore, we need to examine the minor
loop if there are right-half s-plane poles. This can be done easily by use of the Routh stability
criterion. Since
the Routh array becomes as follows:
Notice that there are two sign changes in the first column. Hence, there are two poles of G2(s)in
the right-half splane.
Once we find the number of right-half splane poles of G2(s), we proceed to sketch the Nyquist
locus of G(s) , where
G(s) =G1(s)G2(s)=K(s +0.5)
s3+s2+1s3
s2
s1
s01
1
-1
10
10G
2(s)=1
s3+s2+1G(s) =G1(s)G2(s)Z1=N1+P1 ,P1
R(s) C(s)
K(s+ 0.5)
G1(s)
G2(s)1
s2(s+ 1)+–+–
460
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Im
v = 0.8
v = 0.7j1.5G
K
Plane
v = 0.6
v = 0.9j1
G(jv)
K
v = 0.4 v = 1 j0.5
v = 1.5v = 1.4
v = 3
v = 0v =/H11009v = 0.2
v = 0.1
–1 –0.5 0 0.5 1 Re
v = 2v =–/H11009
–j0.5
–j1
–j1.5
Figure 7–61
Polar plot of
G(jv)/K.Our problem is to determine the range of the gain Kfor stability. Hence, instead of plotting
Nyquist loci of G(jv)for various values of K, we plot the Nyquist locus of G(jv)/K. Figure 7–61
shows the Nyquist plot or polar plot of G(jv)/K.
Since G(s) has two poles in the right-half splane, we have Noting that
Z=N+P
for stability, we require Z=0 orN=–2 . That is, the Nyquist locus of G(jv)must encircle the
–1+j0 point twice counterclockwise. From Figure 7–61, we see that, if the critical point lies
between 0 and –0.5 , then the G(jv)/K locus encircles the critical point twice counterclockwise.
Therefore, we require
–0.5K<–1
The range of the gain Kfor stability is
2<KP=2.
Openmirrors.com
Section 7–6 / Stability Analysis 461Nyquist Stability Criterion Applied to Inverse Polar Plots. In the previous
analyses, the Nyquist stability criterion was applied to polar plots of the open-loop trans-fer function G(s)H(s) .
In analyzing multiple-loop systems, the inverse transfer function may sometimes be
used in order to permit graphical analysis; this avoids much of the numerical calculation.(The Nyquist stability criterion can be applied equally well to inverse polar plots. Themathematical derivation of the Nyquist stability criterion for inverse polar plots is thesame as that for direct polar plots.)
The inverse polar plot of G(jv)H(jv)is a graph of 1/CG(jv)H(jv)Das a function of
v. For example, if G(jv)H(jv)is
thenThe inverse polar plot for v/H113500 is the lower half of the vertical line starting at the point
(1, 0) on the real axis.
The Nyquist stability criterion applied to inverse plots may be stated as follows: For
a closed-loop system to be stable, the encirclement, if any, of the –1+j0 point by the
1/CG(s)H(s)Dlocus (as smoves along the Nyquist path) must be counterclockwise, and
the number of such encirclements must be equal to the number of poles of 1/CG(s)H(s)D
[that is, the zeros of G(s)H(s) ] that lie in the right-half splane. [The number of zeros
ofG(s)H(s) in the right-half splane may be determined by the use of the Routh sta-
bility criterion.] If the open-loop transfer function G(s)H(s) has no zeros in the right-
half splane, then for a closed-loop system to be stable, the number of encirclements of
the–1+j0 point by the 1/CG(s)H(s)Dlocus must be zero.
Note that although the Nyquist stability criterion can be applied to inverse polar
plots, if experimental frequency-response data are incorporated, counting the numberof encirclements of the 1/CG(s)H(s)Dlocus may be difficult because the phase shift cor-
responding to the infinite semicircular path in the splane is difficult to measure. For
example, if the open-loop transfer function G(s)H(s) involves transport lag such that
then the number of encirclements of the –1+j0 point by the 1/CG(s)H(s)Dlocus be-
comes infinite, and the Nyquist stability criterion cannot be applied to the inverse polarplot of such an open-loop transfer function.
In general, if experimental frequency-response data cannot be put into analytical
form, both the 
G(jv)H(jv)and 1/CG(jv)H(jv)Dloci must be plotted. In addition,
the number of right-half plane zeros of G(s)H(s) must be determined. It is more dif-
ficult to determine the right-half plane zeros of G(s)H(s) (in other words, to deter-
mine whether a given component is minimum phase) than it is to determine theright-half plane poles of G(s)H(s) (in other words, to determine whether the com-
ponent is stable).G(s)H(s) =Ke
-jvL
s(Ts +1)1
G(jv)H(jv)=1
jvT+1G(jv)H(jv)=jvT
1+jvT
462
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Depending on whether the data are graphical or analytical and whether nonmini-
mum-phase components are included, an appropriate stability test must be used for
multiple-loop systems. If the data are given in analytical form or if mathematical ex-
pressions for all the components are known, the application of the Nyquist stability cri-
terion to inverse polar plots causes no difficulty, and multiple-loop systems may be
analyzed and designed in the inverse GH plane. (See Problem A–7–15 .)
7–7 RELATIVE STABILITY ANALYSIS
Relative Stability. In designing a control system, we require that the system be
stable. Furthermore, it is necessary that the system have adequate relative stability.
In this section, we shall show that the Nyquist plot indicates not only whether a sys-
tem is stable, but also the degree of stability of a stable system.The Nyquist plot also gives
information as to how stability may be improved, if this is necessary.
In the following discussion, we shall assume that the systems considered have
unity feedback. Note that it is always possible to reduce a system with feedback ele-
ments to a unity-feedback system, as shown in Figure 7–62. Hence, the extension of
relative stability analysis for the unity-feedback system to nonunity-feedback sys-
tems is possible.
We shall also assume that, unless otherwise stated, the systems are minimum-phase
systems; that is, the open-loop transfer function has neither poles nor zeros in the right-
half splane.
Relative Stability Analysis by Conformal Mapping. One of the important prob-
lems in analyzing a control system is to find all closed-loop poles or at least those clos-
est to the jvaxis (or the dominant pair of closed-loop poles). If the open-loop
frequency-response characteristics of a system are known, it may be possible to esti-
mate the closed-loop poles closest to the jvaxis. It is noted that the Nyquist locus G(jv)
need not be an analytically known function of v. The entire Nyquist locus may be ex-
perimentally obtained. The technique to be presented here is essentially graphical and
is based on a conformal mapping of the splane into the G(s) plane.
R(s) C(s)
G
H
R(s)
GHC(s)1
H
+–
+–
Figure 7–62
Modification of a
system with feedback
elements to a unity-
feedback system.
Openmirrors.com
Section 7–7 / Relative Stability Analysis 463s Planejv
G(jv)s 0jv4
jv3
jv2
jv1
–s4–s3–s2–s1GPlaneIm
Re –10
Constant s
curvesConstant v
curvesv4
v3
v2
v1–s4
–s3–s2–s1 Figure 7–63
Conformal mappingofs-plane grids into
theG(s) plane.
s Planejv
s 0
(a) (b)s Planejv
s 0
Figure 7–64
Two systems withtwo closed-looppoles each.Consider the conformal mapping of constant- slines (lines s=s+jv, where sis
constant and vvaries) and constant- vlines (lines s=s+jv, where vis constant and
svaries) in the splane.The s=0 line (the jvaxis) in the splane maps into the Nyquist
plot in the G(s) plane.The constant- slines in the splane map into curves that are sim-
ilar to the Nyquist plot and are in a sense parallel to the Nyquist plot, as shown in Fig-ure 7–63.The constant- vlines in the splane map into curves, also shown in Figure 7–63.
Although the shapes of constant- sand constant- vloci in the G(s) plane and the
closeness of approach of the G(jv)locus to the –1+j0 point depend on a particular
G(s) , the closeness of approach of the G(jv)locus to the –1+j0 point is an indication
of the relative stability of a stable system. In general, we may expect that the closer theG(jv)locus is to the –1+j0 point, the larger the maximum overshoot is in the step
transient response and the longer it takes to damp out.
Consider the two systems shown in Figures 7–64(a) and (b). (In Figure 7–64, the :’s
indicate closed-loop poles.) System (a) is obviously more stable than system (b) becausethe closed-loop poles of system (a) are located farther left than those of system (b).Figures 7–65(a) and (b) show the conformal mapping of s-plane grids into the G(s)
plane. The closer the closed-loop poles are located to the jvaxis, the closer the G(jv)
locus is to the –1+j0 point.
464
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Phase and Gain Margins. Figure 7–66 shows the polar plots of G(jv)for three
different values of the open-loop gain K. For a large value of the gain K, the system is
unstable.As the gain is decreased to a certain value, the G(jv)locus passes through the
–1+j0 point. This means that with this gain value the system is on the verge of insta-
bility, and the system will exhibit sustained oscillations. For a small value of the gain K,
the system is stable.
In general, the closer the G(jv)locus comes to encircling the –1+j0 point, the
more oscillatory is the system response.The closeness of the G(jv)locus to the –1+j0
point can be used as a measure of the margin of stability. (This does not apply, however,
to conditionally stable systems.) It is common practice to represent the closeness in
terms of phase margin and gain margin.
Phase margin: The phase margin is that amount of additional phase lag at the gain
crossover frequency required to bring the system to the verge of instability.The gain
crossover frequency is the frequency at which @G(jv)@, the magnitude of the open-
loop transfer function, is unity. The phase margin gis 180° plus the phase angle f
of the open-loop transfer function at the gain crossover frequency, or
g=180 °+f
Im
ReG Plane
0 –1
K : Large
K : Small
K= open-loop gain
Figure 7–66
Polar plots of
KA1+jvT
a
BA1+jvT
b
B p
(jv)A1+jvT
1
BA1+jvT
2
B p.
Im
ReG Plane
0–1
G(jv)
(a) (b)Im
ReG Plane
0 –1
G(jv)
Figure 7–65
Conformal mappings
ofs-plane grids for
the systems shown in
Figure 7–64 into the
G(s) plane.
Openmirrors.com
Section 7–7 / Relative Stability Analysis 465|G| in dB
|G| in dB0+
–0+
–|G| in dB+
–|G| in dB+
––90°
–180°
–270°–90°
–180°
–270°G
GLogv
LogvLogv
LogvPositive
gain margin
Positive
phase marginNegative
gain margin
Negative
phase margin
Stable systemIm Im
Re Re
Unstable system
Stable system Unstable systemStable system Unstable system
(a)
(b)
(c)Negative
phase margin
Negative
phase
marginPositive
gain
margin
Positive
gain
marginPositive
phase
margin
Positive
phase
marginNegative
gain
margin
Negative
gain
margin1
Kg
fg
G(jv)Gplane Gplane
1
Kgfg
G(jv)1 1
–1 –1
0 0
–270° –180° –90° –270° –180° –90°
G GFigure 7–67
Phase and gainmargins of stable and
unstable systems.
(a) Bode diagrams;(b) polar plots;(c) log-magnitude-versus-phase plots.Figures 7–67(a), (b), and (c) illustrate the phase margin of both a stable system and
an unstable system in Bode diagrams, polar plots, and log-magnitude-versus-phase plots.In the polar plot, a line may be drawn from the origin to the point at which the unit cir-cle crosses the G(jv)locus. If this line lies below (above) the negative real axis, then the
466
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
anglegis positive (negative).The angle from the negative real axis to this line is the phase
margin.The phase margin is positive for g>0 and negative for g<0 . For a minimum-
phase system to be stable, the phase margin must be positive. In the logarithmic plots,
the critical point in the complex plane corresponds to the 0-dB and –180 ° lines.
Gain margin: The gain margin is the reciprocal of the magnitude @G(jv)@at the
frequency at which the phase angle is –180 °. Defining the phase crossover fre-
quency v
1
to be the frequency at which the phase angle of the open-loop transfer
function equals –180 ° gives the gain margin K
g
:
In terms of decibels,
The gain margin expressed in decibels is positive if K
g
is greater than unity and nega-
tive if K
g
is smaller than unity.Thus, a positive gain margin (in decibels) means that the
system is stable, and a negative gain margin (in decibels) means that the system is
unstable. The gain margin is shown in Figures 7–67(a), (b), and (c).
For a stable minimum-phase system, the gain margin indicates how much the gain can
be increased before the system becomes unstable. For an unstable system, the gain mar-
gin is indicative of how much the gain must be decreased to make the system stable.
The gain margin of a first- or second-order system is infinite since the polar plots for
such systems do not cross the negative real axis. Thus, theoretically, first- or second-
order systems cannot be unstable. (Note, however, that so-called first- or second-order
systems are only approximations in the sense that small time lags are neglected in de-
riving the system equations and are thus not truly first- or second-order systems. If these
small lags are accounted for, the so-called first- or second-order systems may become
unstable.)
It is noted that for a nonminimum-phase system with unstable open loop the stability
condition will not be satisfied unless the G(jv)plot encircles the –1+j0 point. Hence,
such a stable nonminimum-phase system will have negative phase and gain margins.
It is also important to point out that conditionally stable systems will have two or
more phase crossover frequencies, and some higher-order systems with complicated
numerator dynamics may also have two or more gain crossover frequencies, as shown
in Figure 7–68. For stable systems having two or more gain crossover frequencies, the
phase margin is measured at the highest gain crossover frequency.
A Few Comments on Phase and Gain Margins. The phase and gain margins of
a control system are a measure of the closeness of the polar plot to the –1+j0 point.
Therefore, these margins may be used as design criteria.
It should be noted that either the gain margin alone or the phase margin alone does
not give a sufficient indication of the relative stability. Both should be given in the
determination of relative stability.
For a minimum-phase system, both the phase and gain margins must be positive for
the system to be stable. Negative margins indicate instability.
Proper phase and gain margins ensure us against variations in the system components
and are specified for definite positive values.The two values bound the behavior of theK
g
 dB =20logK
g
=-20log
 
@GAjv
1
B@K
g
=1
@GAjv
1
B@
Openmirrors.com
Section 7–7 / Relative Stability Analysis 467v =` v =`
vIm Im
Re Re
0v
0v1
v1v2
v2v3
v3Phase crossover
frequencies
(v1,v2,v3)
Gain crossover
frequencies
(v1,v2,v3)Figure 7–68
Polar plots showingmore than two phase
or gain crossover
frequencies.
Figure 7–69
Control system.closed-loop system near the resonant frequency. For satisfactory performance, the phase
margin should be between 30° and 60°, and the gain margin should be greater than 6 dB.With these values, a minimum-phase system has guaranteed stability, even if the open-loop gain and time constants of the components vary to a certain extent. Although thephase and gain margins give only rough estimates of the effective damping ratio of theclosed-loop system, they do offer a convenient means for designing control systems oradjusting the gain constants of systems.
For minimum-phase systems, the magnitude and phase characteristics of the open-
loop transfer function are definitely related.The requirement that the phase margin bebetween 30° and 60° means that in a Bode diagram the slope of the log-magnitude curveat the gain crossover frequency should be more gradual than –40 dB /H20862decade. In most
practical cases, a slope of –20dB /H20862decade is desirable at the gain crossover frequency for
stability. If it is –40 dB /H20862decade, the system could be either stable or unstable. (Even if
the system is stable, however, the phase margin is small.) If the slope at the gain crossoverfrequency is –60 dB /H20862decade or steeper, the system is most likely unstable.
For nonminimum-phase systems, the correct interpretation of stability margins re-
quires careful study.The best way to determine the stability of nonminimum-phase sys-tems is to use the Nyquist diagram approach rather than Bode diagram approach.
EXAMPLE 7–20
Obtain the phase and gain margins of the system shown in Figure 7–69 for the two cases where
K=10 andK=100 .
R(s) C(s) K
s(s+ 1) (s+ 5)+–
468
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
The phase and gain margins can easily be obtained from the Bode diagram.A Bode diagram of
the given open-loop transfer function with K=10 is shown in Figure 7–70(a). The phase and gain
margins for K=10 are
Phase margin =21 °, Gain margin =8 dB
Therefore, the system gain may be increased by 8 dB before the instability occurs.
Increasing the gain from K=10 toK=100 shifts the 0-dB axis down by 20 dB, as shown in
Figure 7–70(b). The phase and gain margins are
Phase margin =–30 °, Gain margin =–12 dB
Thus, the system is stable for K=10, but unstable for K=100 .
Notice that one of the very convenient aspects of the Bode diagram approach is the ease with
which the effects of gain changes can be evaluated. Note that to obtain satisfactory performance, we
must increase the phase margin to 30° ~60°. This can be done by decreasing the gain K. Decreas-
ingKis not desirable, however, since a small value of Kwill yield a large error for the ramp input.
This suggests that reshaping of the open-loop frequency-response curve by adding compensation may
be necessary. Compensation techniques are discussed in detail in Sections 7–11 through 7–13.
Obtaining Gain Margin, Phase Margin, Phase-Crossover Frequency, and Gain-
Crossover Frequency with MATLAB. The gain margin, phase margin, phase-crossover
frequency, and gain-crossover frequency can be obtained easily with MATLAB.The com-
mand to be used is
[Gm,pm,wcp,wcg] = margin(sys)
30
20
10
0
–30–20–10
0°
–90°
–180°
–270°
|G| in dB
|G| in dBG
0.2 0.4 0.6 0.8 1 2 4 6 8 100°
–90°
–30°–180°
–270°
G
0.2 0.4 0.6 0.8 1 2 4 6 8 10K= 10 K= 100
+ 8 dB (Gain margin)
(Phase margin) +21°
vv30
20
10
0
–1050
40
(Gain margin) –12 dB
(Phase margin)
(a) (b)
Figure 7–70
Bode diagrams of the system shown in Figure 7–69; (a) with K=10 and (b) with K=100.
Openmirrors.com
Section 7–7 / Relative Stability Analysis 469G(s)20(s+ 1)
s(s+ 5)(s2+ 2s+ 10)+–
Figure 7–71
Closed-loop system.
Frequency (rad/sec)Bode Diagram
−300−100
−150
−200
−2500
−50−100Phase (deg); Magnitude (dB)50
−500
10−11001014.0131 0.4426 1029.9293 dB
103.6573
Figure 7–72
Bode diagram of
G(s) shown in 
Figure 7–71.MATLAB Program 7–11
num = [20  20];
den = conv([1  5  0],[1  2  10]);sys = tf(num,den);w = logspace(-1,2,100);bode(sys,w)[Gm,pm,wcp,wcg] = margin(sys);GmdB = 20*log10(Gm);[GmdB  pm  wcp  wcg]
ans =
9.9293  103.6573  4.0131  0.4426where Gm is the gain margin, pmis the phase margin, wcp is the phase-crossover fre-
quency, and wcg is the gain-crossover frequency. For details of how to use this com-
mand, see Example 7–21.
EXAMPLE 7–21 Draw a Bode diagram of the open-loop transfer function G(s) of the closed-loop system shown
in Figure 7–71. Determine the gain margin, phase margin, phase-crossover frequency, and gain-
crossover frequency with MATLAB.
A MATLAB program to plot a Bode diagram and to obtain the gain margin, phase margin,
phase-crossover frequency, and gain-crossover frequency is shown in MATLAB Program 7–11.The Bode diagram of G(s) is shown in Figure 7–72.
470
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Resonant Peak Magnitude M
r
and Resonant Frequency V
r
.Consider the
standard second-order system shown in Figure 7–73.The closed-loop transfer function
is
(7–16)
wherezandv
n
are the damping ratio and the undamped natural frequency, respectively.
The closed-loop frequency response is
where
As given by Equation (7–12), for 0 /H11349z/H113490.707, the maximum value of Moccurs at
the frequency v
r
, where
(7–17)
The frequency v
r
is the resonant frequency. At the resonant frequency, the value of M
is maximum and is given by Equation (7–13), rewritten
(7–18)
where M
r
is defined as the resonant peak magnitude . The resonant peak magnitude is
related to the damping of the system.
The magnitude of the resonant peak gives an indication of the relative stability of the
system. A large resonant peak magnitude indicates the presence of a pair of dominant
closed-loop poles with small damping ratio, which will yield an undesirable transient
response.A smaller resonant peak magnitude, on the other hand, indicates the absence
of a pair of dominant closed-loop poles with small damping ratio, meaning that the
system is well damped.
Remember that v
r
is real only if z<0.707 . Thus, there is no closed-loop resonance
ifz>0.707 . [The value of M
r
is unity only if z>0.707 . See Equation (7–14).] Since
the values of M
r
andv
r
can be easily measured in a physical system, they are quite useful
for checking agreement between theoretical and experimental analyses.M
r
=1
2z21-z
2
v
r
=v
n
21-2z
2
M=1
B
a
1-v
2
v
2
n
b
2
+
a
2zv
v
n
b
2
,
  
a=-tan
-1
2zv
v
n
1-v
2
v
2
n
C(jv)
R(jv)=1
a
1-v
2
v
2
n
b
+j2zv
v
n
=Me
ja
C(s)
R(s)=v
2
n
s
2
+2zv
n
 
s+v
2
n
R(s) C(s)v
n
s(s+ 2z v
n
)
2
+–
Figure 7–73
Standard second-
order system.
Openmirrors.com
Section 7–7 / Relative Stability Analysis 471It is noted, however, that in practical design problems the phase margin and gain
margin are more frequently specified than the resonant peak magnitude to indicate thedegree of damping in a system.
Correlation between Step Transient Response and Frequency Response in
the Standard Second-Order System. The maximum overshoot in the unit-step re-
sponse of the standard second-order system, as shown in Figure 7–73, can be exactlycorrelated with the resonant peak magnitude in the frequency response. Hence, essen-tially the same information about the system dynamics is contained in the frequency re-sponse as is in the transient response.
For a unit-step input, the output of the system shown in Figure 7–73 is given by Equa-
tion (5–12), or
where
(7–19)
On the other hand, the maximum overshoot M
pfor the unit-step response is given by
Equation (5–21), or
(7–20)
This maximum overshoot occurs in the transient response that has the damped natural
frequency The maximum overshoot becomes excessive for values ofz<0.4.
Since the second-order system shown in Figure 7–73 has the open-loop transfer function
for sinusoidal operation, the magnitude of G(jv)becomes unity when
which can be obtained by equating @G(jv)@to unity and solving for v.At this frequency,
the phase angle of G(jv)is
Thus, the phase margin gis
(7–21)
Equation (7–21) gives the relationship between the damping ratio zand the phase margin
g. (Notice that the phase margin gis a function only of the damping ratio z.) =tan
-12z
32 1+4z4-2z2 =90°-tan-132 1+4z4-2z2
2z g=180°+/G(jv)/G(jv)=-/jv-/jv+2zvn=-90°-tan-132 1+4z4-2z2
2zv=vn32 1+4z4-2z2G(s) =v2
n
sAs+2zvnBvd=vn21-z2.Mp=e-Az/H2086221-z2Bpvd=vn21-z2c(t) =1-e-zvn tacosvd t+z
21-z2 sinvd tb,  fort/H113500
472
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
In the following, we shall summarize the correlation between the step transient response
and frequency response of the standard second-order system given by Equation (7–16):
1.The phase margin and the damping ratio are directly related. Figure 7–74 shows a plot
of the phase margin gas a function of the damping ratio z. It is noted that for the stan-
dard second-order system shown in Figure 7–73, the phase margin gand the damping
ratiozare related approximately by a straight line for 0 /H11349z/H113490.6, as follows:
Thus a phase margin of 60° corresponds to a damping ratio of 0.6. For higher-order
systems having a dominant pair of closed-loop poles, this relationship may be used
as a rule of thumb in estimating the relative stability in the transient response (that
is, the damping ratio) from the frequency response.
2.Referring to Equations (7–17) and (7–19), we see that the values of v
r
andv
d
are
almost the same for small values of z.Thus, for small values of z, the value of v
r
is
indicative of the speed of the transient response of the system.
3.From Equations (7–18) and (7–20), we note that the smaller the value of zis, the
larger the values of M
r
andM
p
are.The correlation between M
r
andM
p
as a func-
tion of zis shown in Figure 7–75. A close relationship between M
r
andM
p
can be
seen for z>0.4 . For very small values of z,M
r
becomes very large AM
r
/H112711B, while
the value of M
p
does not exceed 1.
Correlation between Step Transient Response and Frequency Response in
General Systems. The design of control systems is very often carried out on the basis
of the frequency response. The main reason for this is the relative simplicity of this ap-
proach compared with others. Since in many applications it is the transient response of
the system to aperiodic inputs rather than the steady-state response to sinusoidal in-
puts that is of primary concern, the question of correlation between transient response
and frequency response arises.z=g
100°
90°
60°
30°
0°0 0.4 0.8 1.2 1.6 2.0
zg
Straight-line
approximation
Figure 7–74
Curveg(phase
margin) versus zfor
the system shown in
Figure 7–73.
Openmirrors.com
For the standard second-order system shown in Figure 7–73, mathematical rela-
tionships correlating the step transient response and frequency response can be obtainedeasily.The time response of the standard second-order system can be predicted exactlyfrom a knowledge of the M
randvrof its closed-loop frequency response.
For nonstandard second-order systems and higher-order systems, the correlation is
more complex, and the transient response may not be predicted easily from the fre-quency response because additional zeros and/or poles may change the correlation be-tween the step transient response and the frequency response existing for the standardsecond-order system. Mathematical techniques for obtaining the exact correlation areavailable, but they are very laborious and of little practical value.
The applicability of the transient-response–frequency-response correlation existing for
the standard second-order system shown in Figure 7–73 to higher-order systems depends onthe presence of a dominant pair of complex-conjugate closed-loop poles in the latter systems.Clearly, if the frequency response of a higher-order system is dominated by a pair of com-plex-conjugate closed-loop poles, the transient-response– frequency-response correlationexisting for the standard second-order system can be extended to the higher-order system.
For linear, time-invariant, higher-order systems having a dominant pair of complex-
conjugate closed-loop poles, the following relationships generally exist between the steptransient response and frequency response:
1.The value of M
ris indicative of the relative stability. Satisfactory transient per-
formance is usually obtained if the value of Mris in the range 1.0< Mr<1.4
A0d B <Mr<3 dBB, which corresponds to an effective damping ratio of
0.4<z<0.7 . For values of Mrgreater than 1.5, the step transient response may
exhibit several overshoots. (Note that, in general, a large value of Mrcorresponds
to a large overshoot in the step transient response. If the system is subjected tonoise signals whose frequencies are near the resonant frequency v
r, the noise will
be amplified in the output and will present serious problems.)
2.The magnitude of the resonant frequency vris indicative of the speed of the tran-
sient response. The larger the value of vr, the faster the time response is. In other
words, the rise time varies inversely with vr. In terms of the open-loop frequency
Section 7–7 / Relative Stability Analysis 4733
Mr
2
1
Mp
00.2 0.4 0.6 0.8 1.0
zMr=1
2z    1–z2
Mp=c(tp)–1
[Equation (5-21)]
Figure 7–75
Curves Mrversusz
andMpversuszfor
the system shown inFigure 7–73.
474
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
response, the damped natural frequency in the transient response is somewhere
between the gain crossover frequency and phase crossover frequency.
3.The resonant peak frequency v
r
and the damped natural frequency v
d
for the step
transient response are very close to each other for lightly damped systems.
The three relationships just listed are useful for correlating the step transient re-
sponse with the frequency response of higher-order systems, provided that they can be
approximated by the standard second-order system or a pair of complex-conjugate
closed-loop poles. If a higher-order system satisfies this condition, a set of time-domain
specifications may be translated into frequency-domain specifications. This simplifies
greatly the design work or compensation work of higher-order systems.
In addition to the phase margin, gain margin, resonant peak M
r
, and resonant fre-
quency v
r
, there are other frequency-domain quantities commonly used in performance
specifications. They are the cutoff frequency, bandwidth, and the cutoff rate. These will
be defined in what follows.
Cutoff Frequency and Bandwidth. Referring to Figure 7–76, the frequency v
b
at
which the magnitude of the closed-loop frequency response is 3 dB below its zero-fre-
quency value is called the cutoff frequency . Thus
For systems in which 
The closed-loop system filters out the signal components whose frequencies are greater
than the cutoff frequency and transmits those signal components with frequencies lower
than the cutoff frequency.
The frequency range 0 /H11349v/H11349v
b
in which the magnitude of is greater
than –3dB is called the bandwidth of the system. The bandwidth indicates the frequency
where the gain starts to fall off from its low-frequency value.Thus, the bandwidth indicates
how well the system will track an input sinusoid. Note that for a given v
n
, the rise time in-
creases with increasing damping ratio z. On the other hand, the bandwidth decreases with
the increase in z. Therefore, the rise time and the bandwidth are inversely proportional to
each other.C(jv)/H20862R(jv)
2
C(jv)
R(jv)
2
6-3 dB,
  
for v7v
b
@C(j0) /H20862R(j0)@=0 dB,
2
C(jv)
R(jv)
2
6
2
C(j0)
R(j0)
2
-3 dB,
  
forv7v
b
dB
0
–3
Bandwidth
v
b
v in log scale
Figure 7–76
Plot of a closed-loop
frequency response
curve showing cutoff
frequency v
b
and
bandwidth.
Openmirrors.com
Section 7–7 / Relative Stability Analysis 475dB
0
–20
0.33I
II
II
IIII
1
1
11
v (in log scale)
(a) (b)
(c)00
c(t) r(t)c(t) r(t)
r(t)t
tFigure 7–77
Comparison ofdynamic
characteristics of the
two systemsconsidered inExample 7–22.(a) Closed-loop
frequency-response
curves; (b) unit-stepresponse curves;(c) unit-rampresponse curves.The specification of the bandwidth may be determined by the following factors:
1.The ability to reproduce the input signal.A large bandwidth corresponds to a small rise
time, or fast response. Roughly speaking, we can say that the bandwidth is proportionalto the speed of response. (For example, to decrease the rise time in the step responseby a factor of 2, the bandwidth must be increased by approximately a factor of 2.)
2.The necessary filtering characteristics for high-frequency noise.
For the system to follow arbitrary inputs accurately, it must have a large bandwidth.
From the viewpoint of noise, however, the bandwidth should not be too large.Thus, thereare conflicting requirements on the bandwidth, and a compromise is usually necessary forgood design. Note that a system with large bandwidth requires high-performancecomponents, so the cost of components usually increases with the bandwidth.
Cutoff Rate. The cutoff rate is the slope of the log-magnitude curve near the cutoff fre-
quency.The cutoff rate indicates the ability of a system to distinguish the signal from noise.
It is noted that a closed-loop frequency response curve with a steep cutoff charac-
teristic may have a large resonant peak magnitude, which implies that the system has arelatively small stability margin.
EXAMPLE 7–22
Consider the following two systems:
Compare the bandwidths of these two systems. Show that the system with the larger bandwidth has a
faster speed of response and can follow the input much better than the one with the smaller bandwidth.
Figure 7–77(a) shows the closed-loop frequency-response curves for the two systems. (Asymptot-
ic curves are shown by dashed lines.) We find that the bandwidth of system I is 0 /H11349v/H113491 rad /H20862sec and
that of system II is 0 /H11349v/H113490.33 rad /H20862sec. Figures 7–77(b) and (c) show, respectively, the unit-step re-
sponse and unit-ramp response curves for the two systems. Clearly, system I, whose bandwidth is threetimes wider than that of system II, has a faster speed of response and can follow the input much better.System I: C(s)
R(s)=1
s+1,  System II:  C(s)
R(s)=1
3s+1
476
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
MATLAB Approach to Get Resonant Peak, Resonant Frequency, and Band-
width. The resonant peak is the value of the maximum magnitude (in decibels) of the
closed-loop frequency response.The resonant frequency is the frequency that yields the
maximum magnitude. MATLAB commands to be used for obtaining the resonant peak
and resonant frequency are as follows:
[mag,phase,w] = bode(num,den,w); or [mag,phase,w] = bode(sys,w);
[Mp,k] = max(mag);
resonant_peak = 20*log10(Mp);
resonant_frequency = w(k)
The bandwidth can be obtained by entering the following lines in the program:
n = 1;
while 20*log10(mag(n)) > = -3; n = n + 1;
end
bandwidth = w(n)
For a detailed MATLAB program, see Example 7–23.
EXAMPLE 7–23
Consider the system shown in Figure 7–78. Using MATLAB, obtain a Bode diagram for the closed-
loop transfer function. Obtain also the resonant peak, resonant frequency, and bandwidth.
MATLAB Program 7–12 produces a Bode diagram for the closed-loop system as well as the
resonant peak, resonant frequency, and bandwidth. The resulting Bode diagram is shown in
MATLAB Program 7–12
nump = [1];
denp = [0.5  1.5  1  0];
sysp = tf(nump,denp);
sys = feedback(sysp,1);
w = logspace(-1,1);
bode(sys,w)
[mag,phase,w] = bode(sys,w);
[Mp,k] = max(mag);
resonant_peak = 20*log10(Mp)
resonant_peak = 
5.2388
resonant_frequency = w(k)
resonant_frequency =
0.7906
n = 1;
while 20*log(mag(n))> = -3; n = n + 1;
end
bandwidth = w(n)
bandwidth =
1.2649
Openmirrors.com
Section 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 477Figure 7–79.The resonant peak is obtained as 5.2388 dB.The resonant frequency is 0.7906 rad /H20862sec.
The bandwidth is 1.2649 rad /H20862sec. These values can be verified from Figure 7–78.
7–8 CLOSED-LOOP FREQUENCY RESPONSE OF UNITY-
FEEDBACK SYSTEMS
Closed-Loop Frequency Response. For a stable, unity-feedback closed-loop sys-
tem, the closed-loop frequency response can be obtained easily from that of the open-loop frequency response. Consider the unity-feedback system shown in Figure 7–80(a).The closed-loop transfer function is
In the Nyquist or polar plot shown in Figure 7–80(b), the vector represents GAjv
1B,
wherev1is the frequency at point A. The length of the vector is @GAjv1B@and the
angle of the vector is The vector the vector from the –1+j0 point
to the Nyquist locus, represents 1+GAjv1B. Therefore, the ratio of to repre-
sents the closed-loop frequency response, or
OA!
PA!=GAjv1B
1+GAjv1B=CAjv1B
RAjv1BPA!
OA!
,PA!
, /GAjv1B. OA!OA!OA!C(s)
R(s)=G(s)
1+G(s)1
s(0.5s+ 1) (s+ 1)+–R(s) C(s)
Figure 7–78
Closed-loop system.
Frequency (rad/sec)Bode Diagram
−300−50
−100
−150
−200
−2500−60−40−20Phase (deg); Magnitude (dB)20
0
10−1100101Figure 7–79
Bode diagram of theclosed-loop transfer
function of the
system shown inFigure 7–78.
478
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
The magnitude of the closed-loop transfer function at v=v
1
is the ratio of the magni-
tudes of to . The phase angle of the closed-loop transfer function at v=v
1
is
the angle formed by the vectors to —that is f-u, shown in Figure 7–80(b). By
measuring the magnitude and phase angle at different frequency points, the closed-loop
frequency-response curve can be obtained.
Let us define the magnitude of the closed-loop frequency response as Mand the
phase angle as a,o r
In the following, we shall find the constant-magnitude loci and constant-phase-angle
loci. Such loci are convenient in determining the closed-loop frequency response from
the polar plot or Nyquist plot.
Constant-Magnitude Loci ( Mcircles). To obtain the constant-magnitude loci, let
us first note that G(jv) is a complex quantity and can be written as follows:
where XandYare real quantities. Then Mis given by
andM
2
is
Hence
(7–22)
IfM=1 , then from Equation (7–22), we obtain This is the equation of a
straight line parallel to the Yaxis and passing through the point A-
1
2
,0B.X=-
1
2
.X
2
A1-M
2
B-2M
2
X-M
2
+A1-M
2
BY
2
=0M
2
=X
2
+Y
2
(1+X)
2
+Y
2
M=∑X+jY∑
∑1+X+jY∑G(jv)=X+jYC(jv)
R(jv)=Me
ja
PA
!
OA
!PA
!
OA
!
(a) (b)G(s)Im
ReO
P–1+j0
A
G(jv)uf
v
1
f –u
+–
Figure 7–80
(a) Unity-feedback
system;
(b) determination of
closed-loop
frequency response
from open-loop
frequency response.
Openmirrors.com
Section 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 479– 4 –3 –2 –1 01 2 XYM= 1.2
M= 1.3M= 1
M= 1.4
M= 1.6
M= 2.0
M= 3.0
M= 5.0
–1
–212M= 0.8
M= 0.4M= 0.6
Figure 7–81
A family of constantMcircles.If Equation (7–22) can be written
If the term M2/AM2-1B2is added to both sides of this last equation, we obtain
(7–23)
Equation (7–23) is the equation of a circle with center at X=–M2/AM2-1B,Y=0
and with radius @M/AM2-1B@.
The constant Mloci on the G(s) plane are thus a family of circles.The center and ra-
dius of the circle for a given value of Mcan be easily calculated. For example, for
M=1.3 , the center is at (–2.45, 0) and the radius is 1.88. A family of constant Mcir-
cles is shown in Figure 7–81. It is seen that as Mbecomes larger compared with 1, the
Mcircles become smaller and converge to the –1+j0 point. For M>1 , the centers of
theMcircles lie to the left of the –1+j0 point. Similarly, as Mbecomes smaller com-
pared with 1, the Mcircle becomes smaller and converges to the origin. For 0<M<1 ,
the centers of the Mcircles lie to the right of the origin. M=1 corresponds to the locus
of points equidistant from the origin and from the –1+j0 point. As stated earlier, it is
a straight line passing through the point and parallel to the imaginary axis. (Theconstant Mcircles corresponding to M>1 lie to the left of the M=1 line, and those
corresponding to 0<M<1 lie to the right of the M=1 line.) The Mcircles are sym-
metrical with respect to the straight line corresponding to M=1 and with respect to the
real axis.A-
1
2,0BaX+M2
M2-1b2
+Y2=M2
AM2-1B2X2+2M2
M2-1X+M2
M2-1+Y2=0MZ1,
480
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Constant-Phase-Angle Loci ( NCircles). We shall obtain the phase angle ain
terms of XandY. Since
the phase angle ais
If we define
then
Since
we obtain
or
The addition of to both sides of this last equation yields
(7–24)
This is an equation of a circle with center at Y=1 /H20862(2N) and with radius
For example, if a=30°, then N= tana=0.577, and the center and
the radius of the circle corresponding to a=30° are found to be (–0.5, 0.866) and unity,
respectively. Since Equation (7–24) is satisfied when X=Y=0 and X=–1 ,Y=0
regardless of the value of N, each circle passes through the origin and the –1+j0 point.
The constant aloci can be drawn easily, once the value of Nis given.A family of constant
Ncircles is shown in Figure 7–82 with aas a parameter.
It should be noted that the constant Nlocus for a given value of ais actually not the
entire circle, but only an arc. In other words, the a=30° and a=–150 ° arcs are parts
of the same circle. This is so because the tangent of an angle remains the same if ;180°
(or multiples thereof) is added to the angle.
The use of the Mand Ncircles enables us to find the entire closed-loop frequency
response from the open-loop frequency response G(jv)without calculating the magni-
tude and phase of the closed-loop transfer function at each frequency.The intersections
3
1
4
+1/H20862(2N)
2
.X=-
1
2
,
a
X+1
2
b
2
+
a
Y-1
2N
b
2
=1
4+
a
1
2N
b
2
A
1
4
B+1/H20862(2N)
2
X
2
+X+Y
2
-1
NY=0N=Y
X-Y
1+X
1+Y
X
a
Y
1+X
b
=Y
X
2
+X+Y
2
tan
 
(A-B)=tanA-tanB
1+tanA tanBN=tan
 
c
tan
-1
 
a
Y
X
b
-tan
-1
 
a
Y
1+X
b
d
tana=Na=tan
-1
 
a
Y
X
b
-tan
-1
 
a
Y
1+X
b
/
e
ja
=
n
X+jY
1+X+jY
Openmirrors.com
Section 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 481–33
–3
–2–2
–111
22
XY
a= 20°
a= 30°
a= 40°
a= 100°60°
120°80°
–60°–120 °
–80° a=–100°
a=–40°
a=–30°
a=–20°Figure 7–82
A family of constantNcircles.
of the G(jv)locus and the Mcircles and Ncircles give the values of Mand Nat fre-
quency points on the G(jv)locus.
The Ncircles are multivalued in the sense that the circle for a=a1and that for
a=a1;180° n (n=1, 2, p)are the same. In using the Ncircles for the determination
of the phase angle of closed-loop systems, we must interpret the proper value of a.T o
avoid any error, start at zero frequency, which corresponds to a=0 °, and proceed to
higher frequencies. The phase-angle curve must be continuous.
Graphically, the intersections of the G(jv)locus and Mcircles give the values of M
at the frequencies denoted on the G(jv)locus. Thus, the constant Mcircle with the
smallest radius that is tangent to the G(jv)locus gives the value of the resonant peak
magnitude Mr. If it is desired to keep the resonant peak value less than a certain value,
then the system should not enclose the critical point (–1+j0 point )and, at the same
time, there should be no intersections with the particular Mcircle and the G(jv)locus.
Figure 7–83(a) shows the G(jv)locus superimposed on a family of Mcircles. Figure
7–83(b) shows the G(jv)locus superimposed on a family of Ncircles. From these plots,
it is possible to obtain the closed-loop frequency response by inspection. It is seen thattheM=1.1 circle intersects the G(jv)locus at frequency point v=v
1. This means
that at this frequency the magnitude of the closed-loop transfer function is 1.1. In Fig-ure 7–83(a), the M=2 circle is just tangent to the G (jv)locus. Thus, there is only one
point on the G(jv)locus for which @C(jv)/R(jv)@is equal to 2. Figure 7–83(c) shows the
closed-loop frequency-response curve for the system.The upper curve is the M-versus-
frequency vcurve, and the lower curve is the phase angle a-versus-frequency vcurve.
The resonant peak value is the value of Mcorresponding to the Mcircle of small-
est radius that is tangent to the G(jv)locus. Thus, in the Nyquist diagram, the resonant
482
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
peak value M
r
and the resonant frequency v
r
can be found from the M-circle tangency
to the G(jv)locus. (In the present example, M
r
=2 andv
r
=v
4
.)
Nichols Chart. In dealing with design problems, we find it convenient to construct
theMandNloci in the log-magnitude-versus-phase plane. The chart consisting of the
Mand Nloci in the log-magnitude-versus-phase diagram is called the Nichols chart.
The G(jv)locus drawn on the Nichols chart gives both the gain characteristics and
a=
G
1+G
M=G
1+G
Im
ReIm
Re2
0
0
–2–2
–4–4
–2 –42
–2
–4M= 1.2
M= 1.4M= 1.1
M= 1.1M= 2M= 0.6
M= 1.2
G(jv)
G(jv) v
1
(a) (b)
(c)20°
60°
–20°–40°
–10°
v
1
v
2
v
2
v
3
v
3
v
4
v
4
v
5
v
5
2
1.5
1
0.5
0
0°
–90°
–180°
–270°v
1
v
2
v
3
v
4
v
5
vv
Figure 7–83
(a)G(jv)locus
superimposed on a
family of Mcircles;
(b)G(jv)locus
superimposed on a
family of Ncircles;
(c) closed-loop
frequency-response
curves.
Openmirrors.com
Section 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 483+–RCG
0.25 dB
0.5 dB
1 dB
2 dB
3 dB
4 dB
5 dB
6 dB
9 dB
–18 dB–12 dB–6 dB–5 dB–4 dB–3 dB–2 dB–1 dB–0.5 dB–0.25 dB–0.1 dB0.1 dB
0 dB
12 dB120°
150°
–180°
–150°
–120°
–90°
–60°
–30°
–20°
–10°
–5° –2°
90°60°30°20°10°5°2°
0°–2°
–5°
–10°
–20°
–30°
–60°36
32
28
24
20
1612
8
4
0
–16–12–8–4
–240°–210°–180°–150°–120°–90°–60°–30° 0°
GH|GH| in dB
Figure 7–84
Nichols chart.phase characteristics of the closed-loop transfer function at the same time.The Nichols
chart is shown in Figure 7–84, for phase angles between 0° and –240 °.
Note that the critical point (–1+j0 point )is mapped to the Nichols chart as the
point (0d B , –180 °). The Nichols chart contains curves of constant closed-loop magni-
tude and phase angle. The designer can graphically determine the phase margin, gainmargin, resonant peak magnitude, resonant frequency, and bandwidth of the closed-loop system from the plot of the open-loop locus, G(jv).
The Nichols chart is symmetric about the –180 ° axis. The Mand Nloci repeat for
every 360°, and there is symmetry at every 180° interval.The Mloci are centered about
the critical point (0dB,–180 °).The Nichols chart is useful for determining the frequency
response of the closed loop from that of the open loop. If the open-loop frequency-re-sponse curve is superimposed on the Nichols chart, the intersections of the open-loopfrequency-response curve G(jv)and the Mand Nloci give the values of the magni-
tude Mand phase angle aof the closed-loop frequency response at each frequency
point. If the G(jv)locus does not intersect the M= M
rlocus, but is tangent to it, then
the resonant peak value of Mof the closed-loop frequency response is given by Mr.T he
resonant frequency is given by the frequency at the point of tangency.
As an example, consider the unity-feedback system with the following open-loop
transfer function:
To find the closed-loop frequency response by use of the Nichols chart, the G(jv)locus
is constructed in the log-magnitude-versus-phase plane by use of MATLAB or fromG(jv)=K
s(s+1)(0.5s +1),  K=1
484
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
the Bode diagram. Figure 7–85(a) shows the G(jv)locus together with the MandNloci.
The closed-loop frequency-response curves may be constructed by reading the magni-
tudes and phase angles at various frequency points on the G(jv)locus from the Mand
Nloci, as shown in Figure 7–85(b). Since the largest magnitude contour touched by the
G(jv)locus is 5 dB, the resonant peak magnitude M
r
is 5 dB. The corresponding reso-
nant peak frequency is 0.8 rad /H20862sec.
Notice that the phase crossover point is the point where the G(jv)locus intersects
the–180 ° axis (for the present system, v=1.4 rad /H20862sec), and the gain crossover point is
the point where the locus intersects the 0-dB axis (for the present system,
v=0.76 rad /H20862sec). The phase margin is the horizontal distance (measured in degrees)
between the gain crossover point and the critical point (0d B , –180 °). The gain margin
is the distance (in decibels) between the phase crossover point and the critical point.
The bandwidth of the closed-loop system can easily be found from the G(jv)locus
in the Nichols diagram. The frequency at the intersection of the G(jv)locus and the
M=–3 dB locus gives the bandwidth.
If the open-loop gain Kis varied, the shape of the G(jv)locus in the log-magnitude-
versus-phase diagram remains the same, but it is shifted up (for increasing K) or down
(for decreasing K) along the vertical axis. Therefore, the G(jv)locus intersects the M
20
16
12
8
4
0
–16–12–8–4
–240° –210° –180° –150° –120° –90°
(a) (b)G
1 dB
3 dB0.25 dB
5 dB
12 dB
|G| in dB
–1 dB
–5 dB
–12 dB1.81.4
1.2
1
0.80.6
0.40.2
–30°–20°–10°
–60°
–120°
–150° –90°
v in rad/sec
G
1+G
G
1+G
in dB
–270°–180°–90°–15–10–50510
0°
0.1 0.2 0.4 0.6 0.8 1 2
Figure 7–85
(a) Plot of G(jv)superimposed on Nichols chart; (b) closed-loop frequency-response curves.
Openmirrors.com
Section 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 485|G| in dB
G15
10
5
0
–5
–10
–15
–90° –120° –150° –180°Mr= 1.4
20 log K= 4G(jv)
G(jv)
K
Figure 7–86
Determination of thegain Kusing the
Nichols chart.andNloci differently, resulting in a different closed-loop frequency-response curve. For
a small value of the gain K, the G(jv)locus will not be tangent to any of the Mloci, which
means that there is no resonance in the closed-loop frequency response.
EXAMPLE 7–24 Consider the unity-feedback control system whose open-loop transfer function is
Determine the value of the gain Kso that Mr=1.4 .
The first step in the determination of the gain Kis to sketch the polar plot of
Figure 7–86 shows the Mr=1.4 locus and the G(jv)/K locus. Changing the gain has no effect on
the phase angle, but merely moves the curve vertically up for K>1 and down for K<1 .
In Figure 7–86, the G(jv)/K locus must be raised by 4 dB in order that it be tangent to the
desired Mrlocus and that the entire G(jv)/K locus be outside the Mr=1.4 locus.The amount of
vertical shift of the G(jv)/K locus determines the gain necessary to yield the desired value of
Mr. Thus, by solving
we obtain
K=1.5920logK=4G(jv)
K=1
jv(1+jv)G(jv)=K
jv(1+jv)
486
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
7–9 EXPERIMENTAL DETERMINATION 
OF TRANSFER FUNCTIONS
The first step in the analysis and design of a control system is to derive a mathematical
model of the plant under consideration. Obtaining a model analytically may be quite dif-
ficult.We may have to obtain it by means of experimental analysis.The importance of the
frequency-response methods is that the transfer function of the plant, or any other com-
ponent of a system, may be determined by simple frequency-response measurements.
If the amplitude ratio and phase shift have been measured at a sufficient number of
frequencies within the frequency range of interest, they may be plotted on the Bode di-
agram.Then the transfer function can be determined by asymptotic approximations.We
build up asymptotic log-magnitude curves consisting of several segments. With some
trial-and-error juggling of the corner frequencies, it is usually possible to find a very
close fit to the curve. (Note that if the frequency is plotted in cycles per second rather
than radians per second, the corner frequencies must be converted to radians per sec-
ond before computing the time constants.)
Sinusoidal-Signal Generators. In performing a frequency-response test, suitable
sinusoidal-signal generators must be available. The signal may have to be in mechani-
cal, electrical, or pneumatic form. The frequency ranges needed for the test are ap-
proximately 0.001 to 10 Hz for large-time-constant systems and 0.1 to 1000 Hz for
small-time-constant systems. The sinusoidal signal must be reasonably free from har-
monics or distortion.
For very low frequency ranges (below 0.01 Hz), a mechanical signal generator
(together with a suitable pneumatic or electrical transducer if necessary) may be used.
For the frequency range from 0.01 to 1000 Hz, a suitable electrical-signal generator
(together with a suitable transducer if necessary) may be used.
Determination of Minimum-Phase Transfer Functions from Bode Diagrams.
As stated previously, whether a system is minimum phase can be determined from the
frequency-response curves by examining the high-frequency characteristics.
To determine the transfer function, we first draw asymptotes to the experimental-
ly obtained log-magnitude curve. The asymptotes must have slopes of multiples of
;20 dB /H20862decade. If the slope of the experimentally obtained log-magnitude curve
changes from –20 to–40 dB /H20862decade at v=v
1
, it is clear that a factor 1/C1+jAv/v
1
BD
exists in the transfer function. If the slope changes by –40 dB /H20862decade at v=v
2
, there
must be a quadratic factor of the form
in the transfer function. The undamped natural frequency of this quadratic factor is
equal to the corner frequency v
2
. The damping ratio zcan be determined from the
experimentally obtained log-magnitude curve by measuring the amount of resonant
peak near the corner frequency v
2
and comparing this with the curves shown in
Figure 7–9.
Once the factors of the transfer function G(jv)have been determined, the gain can
be determined from the low-frequency portion of the log-magnitude curve. Since such1
1+2z
a
jv
v
2
b
+
a
jv
v
2
b
2
Openmirrors.com
terms as 1+jAv/v1Band1+2zAjv/v2B+Ajv/v2B2become unity as vapproaches zero,
at very low frequencies the sinusoidal transfer function G(jv)can be written
In many practical systems, lequals 0, 1, or 2.
1.For l=0 , or type 0 systems,
or
The low-frequency asymptote is a horizontal line at 20 log KdB. The value of K
can thus be found from this horizontal asymptote.
2.For l=1 , or type 1 systems,
or
which indicates that the low-frequency asymptote has the slope –20 dB /H20862decade.
The frequency at which the low-frequency asymptote (or its extension) intersectsthe 0-dB line is numerically equal to K.
3.For l=2 , or type 2 systems,
or
The slope of the low-frequency asymptote is –40 dB /H20862decade. The frequency at
which this asymptote (or its extension) intersects the 0-dB line is numerically equalto
Examples of log-magnitude curves for type 0, type 1, and type 2 systems are shown
in Figure 7–87, together with the frequency to which the gain Kis related.
The experimentally obtained phase-angle curve provides a means of checking the
transfer function obtained from the log-magnitude curve. For a minimum-phase system,the experimental phase-angle curve should agree reasonably well with the theoreticalphase-angle curve obtained from the transfer function just determined.These two phase-angle curves should agree exactly in both the very low and very high frequency ranges.If the experimentally obtained phase angle at very high frequencies (compared with thecorner frequencies) is not equal to –90°(q-p) , where pandqare the degrees of the nu-
merator and denominator polynomials of the transfer function, respectively, then thetransfer function must be a nonminimum-phase transfer function.1K
.20log  @G(jv)@=20logK-40logv,  for v/H112701G(jv)=K
(jv)2,  for v/H11270120log  @G(jv)@=20logK-20logv,  for v/H112701G(jv)=K
jv,  for v/H11270120log  @G(jv)@=20logK,  for v/H112701G(jv)=K,  for v/H112701lim
vS0G(jv)=K
(jv)l
Section 7–9 / Experimental Determination of Transfer Functions 487
488
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Nonminimum-Phase Transfer Functions. If, at the high-frequency end, the com-
puted phase lag is 180° less than the experimentally obtained phase lag, then one of the
zeros of the transfer function should have been in the right-half splane instead of the
left-half splane.
If the computed phase lag differed from the experimentally obtained phase lag by a
constant rate of change of phase, then transport lag, or dead time, is present. If we assume
the transfer function to be of the form
where G(s) is a ratio of two polynomials in s, then
where we used the fact that constant. Thus, from this last equation, we
can evaluate the magnitude of the transport lag T.lim
vSq
/
G(jv)
= =0-T=-T =lim
vSq
 d
dv C
/
G(jv)
-vTD lim
vSq
 d
dv 
/
G(jv)e
-jvT
=lim
vSq
 d
dv C
/
G(jv)
+
/
e
-jvT
DG(s)e
-Ts
(a)0–20
20 log K
–40
–40dB
v =K v =Kv in log scale
(b)
(c)0–20
–20
–20
–20–40
–40
–40
–40dB
v in log scale0dB
v in log scale
0dB
v in log scale0dB
v in log scalev =K
v =K
Figure 7–87
(a) Log-magnitude
curve of a type 0
system; (b) log-
magnitude curves of
type 1 systems;
(c) log-magnitude
curves of type 2
systems. (The slopes
shown are in
dB /H20862decade.)
Openmirrors.com
A Few Remarks on the Experimental Determination of Transfer Functions
1.It is usually easier to make accurate amplitude measurements than accurate phase-
shift measurements. Phase-shift measurements may involve errors that may becaused by instrumentation or by misinterpretation of the experimental records.
2.The frequency response of measuring equipment used to measure the system out-
put must have a nearly flat magnitude-versus-frequency curve. In addition, thephase angle must be nearly proportional to the frequency.
3.Physical systems may have several kinds of nonlinearities. Therefore, it is nec-
essary to consider carefully the amplitude of input sinusoidal signals. If the am-plitude of the input signal is too large, the system will saturate, and thefrequency-response test will yield inaccurate results. On the other hand, a smallsignal will cause errors due to dead zone. Hence, a careful choice of the ampli-tude of the input sinusoidal signal must be made. It is necessary to sample thewaveform of the system output to make sure that the waveform is sinusoidaland that the system is operating in the linear region during the test period. (Thewaveform of the system output is not sinusoidal when the system is operating inits nonlinear region.)
4.If the system under consideration is operating continuously for days and weeks,
then normal operation need not be stopped for frequency-response tests. The si-nusoidal test signal may be superimposed on the normal inputs.Then, for linear sys-tems, the output due to the test signal is superimposed on the normal output. Forthe determination of the transfer function while the system is in normal opera-tion, stochastic signals (white noise signals) also are often used. By use of corre-lation functions, the transfer function of the system can be determined withoutinterrupting normal operation.
EXAMPLE 7–25
Determine the transfer function of the system whose experimental frequency-response curves
are as shown in Figure 7–88.
The first step in determining the transfer function is to approximate the log-magnitude curve
by asymptotes with slopes ;20 dB /H20862decade and multiples thereof, as shown in Figure 7–88. We
then estimate the corner frequencies. For the system shown in Figure 7–88, the following form of
the transfer function is estimated:
The value of the damping ratio zis estimated by examining the peak resonance near v=6 rad /H20862sec.
Referring to Figure 7–9, zis determined to be 0.5. The gain Kis numerically equal to the frequency
at the intersection of the extension of the low-frequency asymptote that has 20 dB/decade slope and
the 0-dB line. The value of Kis thus found to be 10. Therefore, G(jv)is tentatively determined as
or
G(s) =320(s +2)
s(s+1)As2+8s+64BG(jv)=10(1 +0.5jv)
jv(1+jv)c1+aj v
8b+aj v
8b2
dG(jv)=K(1 +0.5jv)
jv(1+jv)c1+2zaj v
8b+aj v
8b2
d
Section 7–9 / Experimental Determination of Transfer Functions 489
490
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
This transfer function is tentative because we have not examined the phase-angle curve yet.
Once the corner frequencies are noted on the log-magnitude curve, the corresponding phase-
angle curve for each component factor of the transfer function can easily be drawn.The sum of
these component phase-angle curves is that of the assumed transfer function. The phase-angle
curve for G(jv)is denoted by in Figure 7–88. From Figure 7–88, we clearly notice a dis-
crepancy between the computed phase-angle curve and the experimentally obtained phase-
angle curve. The difference between the two curves at very high frequencies appears to be a
constant rate of change. Thus, the discrepancy in the phase-angle curves must be caused by
transport lag.
Hence, we assume the complete transfer function to be G(s)e
–Ts
. Since the discrepancy be-
tween the computed and experimental phase angles is –0.2vrad for very high frequencies, we can
determine the value of Tas follows:
or
The presence of transport lag can thus be determined, and the complete transfer function deter-
mined from the experimental curves is
G(s)e
-Ts
=320(s +2)e
-0.2s
s(s+1)As
2
+8s+64BT=0.2 sec.lim
vSq
d
dv
/
G(jv)e
-jvT
=-T=-0.2
/
G
40
20
0
–20
–40
–60dB
–80
–100
0.1 0.2 0.4 0.6 1 4 2 6 10 20 40–500°–400°–300°–200°–100°0°
v in rad/sec
G
Magnitude
(asymptotic)
(K= 10) Magnitude
(experimental)
Phase angle
(experimental)
Figure 7–88
Bode diagram of a
system. (Solid curves
are experimentally
obtained curves.)
Openmirrors.com
Section 7–10 / Control Systems Design by Frequency-Response Approach 4917–10 CONTROL SYSTEMS DESIGN BY FREQUENCY-
RESPONSE APPROACH
In Chapter 6 we presented root-locus analysis and design. The root-locus method
was shown to be very useful to reshape the transient-response characteristics of closed-loop control systems. The root-locus approach gives us direct information on the tran-sient response of the closed-loop system.The frequency-response approach, on the otherhand, gives us this information only indirectly. However, as we shall see in the remain-ing three sections of this chapter, the frequency-response approach is very useful in de-signing control systems.
For any design problem, the designer will do well to use both approaches to the design
and choose the compensator that most closely produces the desired closed-loop response.
In most control systems design, transient-response performance is usually very im-
portant. In the frequency-response approach, we specify the transient-response per-formance in an indirect manner.That is, the transient-response performance is specifiedin terms of the phase margin, gain margin, resonant peak magnitude (they give a roughestimate of the system damping); the gain crossover frequency, resonant frequency, band-width (they give a rough estimate of the speed of transient response); and static errorconstants (they give the steady-state accuracy). Although the correlation between thetransient response and frequency response is indirect, the frequency-domain specifica-tions can be easily met in the Bode diagram approach.
After the open loop has been designed, the closed-loop poles and zeros can be de-
termined. Then, the transient-response characteristics must be checked to see whetherthe designed system satisfies the requirements in the time domain. If it does not, thenthe compensator must be modified and the analysis repeated until a satisfactory resultis obtained.
Design in the frequency domain is simple and straightforward. The frequency-
response plot indicates clearly the manner in which the system should be modified, al-though the exact quantitative prediction of the transient-response characteristics cannotbe made. The frequency-response approach can be applied to systems or componentswhose dynamic characteristics are given in the form of frequency-response data. Notethat because of difficulty in deriving the equations governing certain components, suchas pneumatic and hydraulic components, the dynamic characteristics of such compo-nents are usually determined experimentally through frequency-response tests.The ex-perimentally obtained frequency-response plots can be combined easily with other suchplots when the Bode diagram approach is used. Note also that in dealing with high-frequency noises we find that the frequency-response approach is more convenient thanother approaches.
There are basically two approaches in the frequency-domain design. One is the polar
plot approach and the other is the Bode diagram approach. When a compensator isadded, the polar plot does not retain the original shape, and, therefore, we need to drawa new polar plot, which will take time and is thus inconvenient. On the other hand, a Bodediagram of the compensator can be simply added to the original Bode diagram, andthus plotting the complete Bode diagram is a simple matter.Also, if the open-loop gainis varied, the magnitude curve is shifted up or down without changing the slope of thecurve, and the phase curve remains the same. For design purposes, therefore, it is bestto work with the Bode diagram.
A common approach to the design based on the Bode diagram is that we first adjust
the open-loop gain so that the requirement on the steady-state accuracy is met.Then the
magnitude and phase curves of the uncompensated open loop (with the open-loop gain
just adjusted) are plotted. If the specifications on the phase margin and gain margin are
not satisfied, then a suitable compensator that will reshape the open-loop transfer func-
tion is determined. Finally, if there are any other requirements to be met, we try to sat-
isfy them, unless some of them are mutually contradictory.
Information Obtainable from Open-Loop Frequency Response. The low-
frequency region (the region far below the gain crossover frequency) of the locus indi-
cates the steady-state behavior of the closed-loop system.The medium-frequency region
(the region near the gain crossover frequency) of the locus indicates relative stability.
The high-frequency region (the region far above the gain crossover frequency) indi-
cates the complexity of the system.
Requirements on Open-Loop Frequency Response. We might say that, in many
practical cases, compensation is essentially a compromise between steady-state accura-
cy and relative stability.
To have a high value of the velocity error constant and yet satisfactory relative sta-
bility, we find it necessary to reshape the open-loop frequency-response curve.
The gain in the low-frequency region should be large enough, and near the gain
crossover frequency, the slope of the log-magnitude curve in the Bode diagram should
be–20 dB /H20862decade.This slope should extend over a sufficiently wide frequency band to
assure a proper phase margin. For the high-frequency region, the gain should be atten-
uated as rapidly as possible to minimize the effects of noise.
Examples of generally desirable and undesirable open-loop and closed-loop
frequency-response curves are shown in Figure 7–89.
Referring to Figure 7–90, we see that the reshaping of the open-loop frequency-
response curve may be done if the high-frequency portion of the locus follows the G
1
(jv)
locus, while the low-frequency portion of the locus follows the G
2
(jv)locus.The reshaped
locus G
c
(jv)G(jv)should have reasonable phase and gain margins or should be tangent
to a proper Mcircle, as shown.
492
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Im
Re –10
DesirableUndesirable
Im
dB
Re
Logv–1
0
DesirableUndesirable
(a) (b)
Desirable
Undesirable
Figure 7–89
(a) Examples of desirable and undesirable open-loop frequency-response curves;
(b) examples of desirable and undesirable closed-loop frequency-response curves.
Openmirrors.com
Basic Characteristics of Lead, Lag, and Lag–Lead Compensation. Lead com-
pensation essentially yields an appreciable improvement in transient response and asmall change in steady-state accuracy. It may accentuate high-frequency noise effects. Lagcompensation, on the other hand, yields an appreciable improvement in steady-stateaccuracy at the expense of increasing the transient-response time. Lag compensationwill suppress the effects of high-frequency noise signals. Lag–lead compensation com-bines the characteristics of both lead compensation and lag compensation.The use of alead or lag compensator raises the order of the system by 1 (unless cancellation occursbetween the zero of the compensator and a pole of the uncompensated open-loop trans-fer function).The use of a lag–lead compensator raises the order of the system by 2 [un-less cancellation occurs between zero(s) of the lag–lead compensator and pole(s) of theuncompensated open-loop transfer function], which means that the system becomesmore complex and it is more difficult to control the transient-response behavior.The par-ticular situation determines the type of compensation to be used.
7–11 LEAD COMPENSATION
We shall first examine the frequency characteristics of the lead compensator. Then we
present a design technique for the lead compensator by use of the Bode diagram.
Characteristics of Lead Compensators. Consider a lead compensator having the
following transfer function:
whereais the attenuation factor of the lead compensator. It has a zero at s=–1/T
and a pole at s=–1/( aT).Since 0<a<1, we see that the zero is always located to
the right of the pole in the complex plane. Note that for a small value of athe pole is lo-
cated far to the left. The minimum value of ais limited by the physical construction ofK
c a Ts+1
aTs+1=Kcs+1
T
s+1
aT  (06a61)
Section 7–11 / Lead Compensation 493Im
Re –10MCircle
G2(jv)
G1(jv)Gc(jv)G(jv)
Figure 7–90
Reshaping of theopen-loop
frequency-response
curve.
the lead compensator. The minimum value of ais usually taken to be about 0.05. (This
means that the maximum phase lead that may be produced by a lead compensator is
about 65°.) [See Equation (7–25).]
Figure 7–91 shows the polar plot of
with K
c
=1. For a given value of a, the angle between the positive real axis and the tan-
gent line drawn from the origin to the semicircle gives the maximum phase-lead angle,
f
m
.We shall call the frequency at the tangent point v
m
.From Figure 7–91 the phase
angle at v=v
m
isf
m
,where
(7–25)
Equation (7–25) relates the maximum phase-lead angle and the value of a.
Figure 7–92 shows the Bode diagram of a lead compensator when K
c
=1 anda=0.1.
The corner frequencies for the lead compensator are v=1/T andv=1/(aT)=10/T.
By examining Figure 7–92, we see that v
m
is the geometric mean of the two corner fre-
quencies, or
logv
m
=1
2 
a
log 1
T+log 1
aT
b
sinf
m
=1-a
2
1+a
2=1-a
1+aK
c
 
a jvT+1
jvaT+1
  
(06a61)
494
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Im
Rev
m
01v =` v = 0f
m
1
2
(1+a)a
1
2
(1–a)
Figure 7–91
Polar plot of a lead
compensator
a(jvT+1)/(j vaT+1) ,
where 0<a<1.
10
0
v in rad/sec–10
–20
90°
0°dB
0.1
T
1
T
10
T
100
T
/H2088110
T
f
m
Figure 7–92
Bode diagram of a 
lead compensator 
a(jvT+1)/(j vaT+1),
wherea=0.1.
Openmirrors.com
Hence,
(7–26)
As seen from Figure 7–92, the lead compensator is basically a high-pass filter. (The
high frequencies are passed, but low frequencies are attenuated.)
Lead Compensation Techniques Based on the Frequency-Response Approach.
The primary function of the lead compensator is to reshape the frequency-responsecurve to provide sufficient phase-lead angle to offset the excessive phase lag associatedwith the components of the fixed system.
Consider the system shown in Figure 7–93. Assume that the performance specifica-
tions are given in terms of phase margin, gain margin, static velocity error constants,and so on. The procedure for designing a lead compensator by the frequency-responseapproach may be stated as follows:
1.Assume the following lead compensator:
Define
Then
The open-loop transfer function of the compensated system is
where
Determine gain Kto satisfy the requirement on the given static error constant.
2.Using the gain Kthus determined, draw a Bode diagram of G
1(jv),the gain-
adjusted but uncompensated system. Evaluate the phase margin.
3.Determine the necessary phase-lead angle to be added to the system. Add an
additional 5° to 12° to the phase-lead angle required, because the addition of theG1(s)=KG(s)Gc(s)G(s) =KTs+1
aTs+1G(s) =Ts+1
aTs+1KG(s) =Ts+1
aTs+1G1(s)Gc(s)=KTs+1
aTs+1Kc a=KGc(s)=Kc a Ts+1
aTs+1=Kcs+1
T
s+1
aT  (06a61)vm=1
1aT
Section 7–11 / Lead Compensation 495Gc(s) G(s) +–
Figure 7–93
Control system.
lead compensator shifts the gain crossover frequency to the right and decreases the
phase margin.
4.Determine the attenuation factor aby use of Equation (7–25). Determine the
frequency where the magnitude of the uncompensated system G
1
(jv)is equal to
Select this frequency as the new gain crossover frequency. This
frequency corresponds to and the maximum phase shift f
m
occurs
at this frequency.
5.Determine the corner frequencies of the lead compensator as follows:
Zero of lead compensator:
Pole of lead compensator:
6.Using the value of Kdetermined in step 1 and that of adetermined in step 4,
calculate constant K
c
from
7.Check the gain margin to be sure it is satisfactory. If not, repeat the design process
by modifying the pole–zero location of the compensator until a satisfactory result
is obtained.
EXAMPLE 7–26
Consider the system shown in Figure 7–94. The open-loop transfer function is
It is desired to design a compensator for the system so that the static velocity error constant K
v
is 20 sec
–1
,the phase margin is at least 50°, and the gain margin is at least 10 dB.
We shall use a lead compensator of the form
The compensated system will have the open-loop transfer function G
c
(s)G(s) .
Define
where K= K
c
a.G
1
(s)=KG(s) =4K
s(s+2)G
c
(s)=K
c
 
a Ts+1
aTs+1=K
c
s+1
T
s+1
aTG(s) =4
s(s+2)
K
c
=K
a v=1
aT v=1
Tv
m
=1/H20862A1a
TB,-20logA1/H208621a
B.
496
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
4
s(s+ 2)
+–
Figure 7–94
Control system.
Openmirrors.com
The first step in the design is to adjust the gain Kto meet the steady-state performance spec-
ification or to provide the required static velocity error constant. Since this constant is given as20 sec
–1, we obtain
or
With K=10 , the compensated system will satisfy the steady-state requirement.
We shall next plot the Bode diagram of
Figure 7–95 shows the magnitude and phase-angle curves of G1(jv). From this plot, the phase
and gain margins of the system are found to be 17° and ±qdB, respectively. (A phase margin of
17° implies that the system is quite oscillatory.Thus, satisfying the specification on the steady stateyields a poor transient-response performance.) The specification calls for a phase margin of at
least 50°. We thus find the additional phase lead necessary to satisfy the relative stability re-
quirement is 33°.To achieve a phase margin of 50° without decreasing the value of K, the lead com-
pensator must contribute the required phase angle.
Noting that the addition of a lead compensator modifies the magnitude curve in the Bode di-
agram, we realize that the gain crossover frequency will be shifted to the right.We must offset the
increased phase lag of G
1(jv)due to this increase in the gain crossover frequency. Considering
the shift of the gain crossover frequency, we may assume that fm,the maximum phase lead re-
quired, is approximately 38°. (This means that 5° has been added to compensate for the shift inthe gain crossover frequency.)
Since
sinf
m=1-a
1+aG1(jv)=40
jv(jv+2)=20
jv(0.5jv+1)K=10Kv=lim
sS0sGc(s)G(s) =lim
sS0sTs+1
aTs+1G1(s)=lim
sS0s4K
s(s+2)=2K=20
Section 7–11 / Lead Compensation 49712 4 8
v in rad/sec40
20
0
–20
–40
0°
–90°
–180°
10 20 40 60 10017°dB
Figure 7–95
Bode diagram forG
1(jv)=10G(j v)
=40/Cjv(jv+2)D
f
m
=38 ° corresponds to a=0.24. Once the attenuation factor ahas been determined on the
basis of the required phase-lead angle, the next step is to determine the corner frequencies v=1/T
andv=1/(aT)of the lead compensator. To do so, we first note that the maximum phase-lead
anglef
m
occurs at the geometric mean of the two corner frequencies, or [See Equa-
tion (7–26).] The amount of the modification in the magnitude curve at due to the
inclusion of the term (Ts+1)/( aTs+1) is
Note that
and@G
1
(jv)@=–6.2 dB corresponds to v=9 rad /H20862sec.We shall select this frequency to be the new
gain crossover frequency v
c
. Noting that this frequency corresponds to or
we obtain
and
The lead compensator thus determined is
where the value of K
c
is determined as
Thus, the transfer function of the compensator becomes
Note that
The magnitude curve and phase-angle curve for G
c
(jv)/10 are shown in Figure 7–96. The
compensated system has the following open-loop transfer function:
G
c
(s)G(s) =41.7s+4.41
s+18.44
s(s+2)G
c
(s)
KG
1
(s)=G
c
(s)
1010G(s) =G
c
(s)G(s)G
c
(s)=41.7s+4.41
s+18.4=100.227s +1
0.054s +1K
c
=K
a=10
0.24=41.7G
c
(s)=K
c
s+4.41
s+18.4=K
c
 
a0.227s +1
0.054s +11
aT=v
c
1a
=18.41
T=1a
v
c
=4.41v
c
=1/H20862A1a
TB,1/H20862A1a
TB,1
1a
=1
10.24
=1
0.49=6.2 dB
2
1+jvT
1+jvaT
2
v=1/H20862A1a
TB
=
4
1+j 1
1a
1+ja 1
1a
4
=1
1a
v=1/H20862A1a
TBv=1/H20862A1a
TB.
498
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Openmirrors.com
The solid curves in Figure 7–96 show the magnitude curve and phase-angle curve for the compen-
sated system. Note that the bandwidth is approximately equal to the gain crossover frequency. The
lead compensator causes the gain crossover frequency to increase from 6.3 to 9 rad /H20862sec. The in-
crease in this frequency means an increase in bandwidth.This implies an increase in the speed ofresponse.The phase and gain margins are seen to be approximately 50° and ±qdB, respectively.
The compensated system shown in Figure 7–97 therefore meets both the steady-state and the
relative-stability requirements.
Note that for type 1 systems, such as the system just considered, the value of the static veloc-
ity error constant K
vis merely the value of the frequency corresponding to the intersection of
the extension of the initial –20-dB /H20862decade slope line and the 0-dB line, as shown in Figure 7–96.
Note also that we have changed the slope of the magnitude curve near the gain crossover frequencyfrom –40 dB /H20862decade to –20 dB /H20862decade.
Section 7–11 / Lead Compensation 49940
20
0
–20
–40
0°
–90°
–180°Gc
10
Kv
50°
124 6
v in rad/sec10 20 40 60 100Gc
10GcG
GcG–6 dB
G1= 10G
G1= 10GdB
Figure 7–96
Bode diagram for thecompensated system.
4
s(s+ 2)41.7( s+ 4.41)
s+ 18.4+–
Figure 7–97
Compensatedsystem.
Figure 7–98 shows the polar plots of the gain-adjusted but uncompensated open-loop trans-
fer function G
1
(jv)=10 G(j v)and the compensated open-loop transfer function G
c
(jv)G(jv).
From Figure 7–98, we see that the resonant frequency of the uncompensated system is about
6 rad /H20862sec and that of the compensated system is about 7 rad /H20862sec. (This also indicates that the
bandwidth has been increased.)
From Figure 7–98, we find that the value of the resonant peak M
r
for the uncompensated sys-
tem with K=10 is 3.The value of M
r
for the compensated system is found to be 1.29.This clear-
ly shows that the compensated system has improved relative stability.
Note that, if the phase angle of G
1
(jv)decreases rapidly near the gain crossover frequency,
lead compensation becomes ineffective because the shift in the gain crossover frequency to the
right makes it difficult to provide enough phase lead at the new gain crossover frequency. This
means that, to provide the desired phase margin, we must use a very small value for a. The value
ofa, however, should not be too small (smaller than 0.05) nor should the maximum phase lead
f
m
be too large (larger than 65°), because such values will require an additional gain of excessive
value. [If more than 65° is needed, two (or more) lead networks may be used in series with an iso-
lating amplifier.]
Finally, we shall examine the transient-response characteristics of the designed system. We
shall obtain the unit-step response and unit-ramp response curves of the compensated and
uncompensated systems with MATLAB. Note that the closed-loop transfer functions of the
uncompensated and compensated systems are given, respectively, by
and
C(s)
R(s)=166.8s +735.588
s
3
+20.4s
2
+203.6s +735.588C(s)
R(s)=4
s
2
+2s+4
500
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
M
r
= 1.29
–4–3–2–1–1 –2 –3 – 401
M
r
= 3Im
Re 1
44
66
1010
v =3v =3G
1
(jv)
G
c
(jv)G(jv)
Figure 7–98
Polar plots of the
gain-adjusted but
uncompensated
open-loop transfer
function G
1
and
compensated open-
loop transfer
function G
c
G.
Openmirrors.com
MATLAB programs for obtaining the unit-step response and unit-ramp response curves are given
in MATLAB Program 7–13. Figure 7–99 shows the unit-step response curves of the system before
and after compensation. Also, Figure 7–100 depicts the unit-ramp response curves before andafter compensation. These response curves indicate that the designed system is satisfactory.
Section 7–11 / Lead Compensation 501MATLAB Program 7–13
%*****Unit-step responses*****
num = [4];
den = [1  2  4];numc = [166.8  735.588];denc = [1  20.4  203.6  735.588];t = 0:0.02:6;[c1,x1,t] = step(num,den,t);[c2,x2,t] = step(numc,denc,t);plot (t,c1,'.',t,c2,'-')gridtitle('Unit-Step Responses of Compensated and Uncompensated Systems')xlabel('t Sec')ylabel('Outputs')text(0.4,1.31,'Compensated system')text(1.55,0.88,'Uncompensated system')
%*****Unit-ramp responses*****num1 = [4];
den1 = [1  2  4  0];num1c = [166.8  735.588];den1c = [1  20.4  203.6  735.588  0];t = 0:0.02:5;[y1,z1,t] = step(num1,den1,t);[y2,z2,t] = step(num1c,den1c,t);plot(t,y1,'.',t,y2,'-',t,t,'--')gridtitle('Unit-Ramp Responses of Compensated and Uncompensated Systems')xlabel('t Sec')ylabel('Outputs')text(0.89,3.7,'Compensated system')text(2.25,1.1,'Uncompensated system')
It is noted that the closed-loop poles for the compensated system are located as follows:
Because the dominant closed-loop poles are located far from the jvaxis, the response damps out
quickly.s=-6.4918s=-6.9541 ;j8.0592
502
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
7–12 LAG COMPENSATION
In this section we first discuss the Nyquist plot and Bode diagram of the lag compensator.
Then we present lag compensation techniques based on the frequency-response approach.
Characteristics of Lag Compensators. Consider a lag compensator having the
following transfer function:
G
c
(s)=K
c
 
b Ts+1
bTs+1=K
c
s+1
T
s+1
bT
  
(b71)
Outputs
5
2
0
3.5
4.5
1.5
0.5
3
4
2.5
1
t Sec01
0.5
5 3.5
4.5
3
4
2
1.5
2.5
Unit-Ramp Responses of Compensated and Uncompensated Systems
Compensated system
Uncompensated system
Figure 7–100
Unit-ramp response
curves of the
compensated and
uncompensated
systems.
Outputs
1.4
0.6
0
1
1.2
0.4
0.2
0.8
t Sec01
6 4
5
2
3
Unit-Step Responses of Compensated and Uncompensated Systems
Compensated system
Uncompensated system
Figure 7–99
Unit-step response
curves of the
compensated and
uncompensated
systems.
Openmirrors.com
Section 7–12 / Lag Compensation 503In the complex plane, a lag compensator has a zero at s=–1/T and a pole at
s=–1/( bT).The pole is located to the right of the zero.
Figure 7–101 shows a polar plot of the lag compensator. Figure 7–102 shows a Bode
diagram of the compensator, where Kc=1 andb=10. The corner frequencies of the
lag compensator are at v=1/T andv=1/(bT).As seen from Figure 7–102, where
the values of Kcandbare set equal to 1 and 10, respectively, the magnitude of the lag
compensator becomes 10 (or 20 dB) at low frequencies and unity (or 0 dB) at high fre-quencies. Thus, the lag compensator is essentially a low-pass filter.
Lag Compensation Techniques Based on the Frequency-Response Approach.
The primary function of a lag compensator is to provide attenuation in the high-frequency range to give a system sufficient phase margin. The phase-lag characteristicis of no consequence in lag compensation.
The procedure for designing lag compensators for the system shown in Figure 7–93
by the frequency-response approach may be stated as follows:
1.Assume the following lag compensator:
G
c(s)=Kc b Ts+1
bTs+1=Kcs+1
T
s+1
bT  (b71)Im
0R ev = 0 v =`Kc Kcb
Figure 7–101
Polar plot of a lagcompensatorK
cb(jvT+1)/H20862(jvbT+1).
30
20
v in rad/sec10
0
0°
–90°dB
0.01
T0.1
T1
T10
TFigure 7–102
Bode diagram of a lag compensator 
b(jvT+1)/(j vbT+1),
withb=10.
Define
Then
The open-loop transfer function of the compensated system is
where
Determine gain Kto satisfy the requirement on the given static velocity error
constant.
2.If the gain-adjusted but uncompensated system G
1
(jv)=KG(j v)does not sat-
isfy the specifications on the phase and gain margins, then find the frequency point
where the phase angle of the open-loop transfer function is equal to –180 ° plus the
required phase margin. The required phase margin is the specified phase margin
plus 5° to 12°. (The addition of 5° to 12° compensates for the phase lag of the lag
compensator.) Choose this frequency as the new gain crossover frequency.
3.To prevent detrimental effects of phase lag due to the lag compensator, the pole
and zero of the lag compensator must be located substantially lower than the new
gain crossover frequency. Therefore, choose the corner frequency v=1/T (cor-
responding to the zero of the lag compensator) 1 octave to 1 decade below the
new gain crossover frequency. (If the time constants of the lag compensator do
not become too large, the corner frequency v=1/T may be chosen 1 decade
below the new gain crossover frequency.)
Notice that we choose the compensator pole and zero sufficiently small. Thus
the phase lag occurs at the low-frequency region so that it will not affect the phase
margin.
4.Determine the attenuation necessary to bring the magnitude curve down to 0 dB
at the new gain crossover frequency. Noting that this attenuation is de-
termine the value of b. Then the other corner frequency (corresponding to the
pole of the lag compensator) is determined from v=1/(bT).
5.Using the value of Kdetermined in step 1 and that of bdetermined in step 4, cal-
culate constant K
c
from
K
c
=K
b-20logb,G
1
(s)=KG(s)G
c
(s)G(s) =KTs+1
bTs+1G(s) =Ts+1
bTs+1KG(s) =Ts+1
bTs+1G
1
(s)G
c
(s)=KTs+1
bTs+1K
c
b=K
504
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Openmirrors.com
Section 7–12 / Lag Compensation 505EXAMPLE 7–27 Consider the system shown in Figure 7–103. The open-loop transfer function is given by
It is desired to compensate the system so that the static velocity error constant Kvis 5 sec–1, the
phase margin is at least 40°, and the gain margin is at least 10 dB.
We shall use a lag compensator of the form
Define
Define also
The first step in the design is to adjust the gain Kto meet the required static velocity error con-
stant. Thus,
or
With K=5, the compensated system satisfies the steady-state performance requirement.
We shall next plot the Bode diagram of
G1(jv)=5
jv(jv+1)(0.5jv+1)K=5 =lim
sS0 sK
s(s+1)(0.5s +1)=K=5 Kv=lim
sS0sGc(s)G(s) =lim
sS0s Ts+1
bTs+1 G1(s)=lim
sS0sG1(s)G1(s)=KG(s) =K
s(s+1)(0.5s +1)Kc b=KGc(s)=Kc b Ts+1
bTs+1=Kcs+1
T
s+1
bT  (b71)G(s) =1
s(s+1)(0.5s +1)
1
s(s+1) (0.5 s+ 1)+–
Figure 7–103
Control system.
The magnitude curve and phase-angle curve of G
1
(jv)are shown in Figure 7–104. From this plot,
the phase margin is found to be –20°, which means that the gain-adjusted but uncompensated
system is unstable.
Noting that the addition of a lag compensator modifies the phase curve of the Bode diagram, we
must allow 5° to 12° to the specified phase margin to compensate for the modification of the phase
curve. Since the frequency corresponding to a phase margin of 40° is 0.7 rad /H20862sec, the new gain crossover
frequency (of the compensated system) must be chosen near this value. To avoid overly large time
constants for the lag compensator, we shall choose the corner frequency v=1/T (which corresponds
to the zero of the lag compensator) to be 0.1 rad /H20862sec. Since this corner frequency is not too far below
the new gain crossover frequency, the modification in the phase curve may not be small. Hence, we add
about 12° to the given phase margin as an allowance to account for the lag angle introduced by the lag
compensator.The required phase margin is now 52°.The phase angle of the uncompensated open-loop
transfer function is –128 ° at about v=0.5 rad /H20862sec. So we choose the new gain crossover frequency
to be 0.5 rad /H20862sec.To bring the magnitude curve down to 0 dB at this new gain crossover frequency, the
lag compensator must give the necessary attenuation, which in this case is –20dB. Hence,
or
The other corner frequency v=1(bT), which corresponds to the pole of the lag compen-
sator, is then determined as
1
bT=0.01 rad /H20862secb=1020log 1
b=-20
11 dB0 dB
0°
–90°
–180°
–270°
v in rad/sec0.02 0.004G
1
G
1
G
c
G
G
c
K
G
c
40
20
–20
–40
40°
0.01 0.04 0.1 0.6 0.2 0.4 1 2 4G
c
G
Figure 7–104
Bode diagrams for
G
1
(gain-adjusted but
uncompensated
open-loop transfer
function), G
c
(compensator), and
G
c
G(compensated
open-loop transfer
function).
506
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Openmirrors.com
Section 7–12 / Lag Compensation 507Thus, the transfer function of the lag compensator is
Since the gain Kwas determined to be 5 and bwas determined to be 10, we have
The open-loop transfer function of the compensated system is
The magnitude and phase-angle curves of Gc(jv)G(jv)are also shown in Figure 7–104.
The phase margin of the compensated system is about 40°, which is the required value. The
gain margin is about 11 dB, which is quite acceptable.The static velocity error constant is 5 sec–1,
as required. The compensated system, therefore, satisfies the requirements on both the steady
state and the relative stability.
Note that the new gain crossover frequency is decreased from approximately 1 to 0.5 rad /H20862sec.
This means that the bandwidth of the system is reduced.
To further show the effects of lag compensation, the log-magnitude-versus-phase plots of the gain-
adjusted but uncompensated system G1(jv)and of the compensated system Gc(jv)G(jv)are shown
in Figure 7–105.The plot of G1(jv)clearly shows that the gain-adjusted but uncompensated system is
unstable. The addition of the lag compensator stabilizes the system. The plot of Gc(jv)G(jv)is tan-
gent to the M=3 dB locus. Thus, the resonant peak value is 3 dB, or 1.4, and this peak occurs at
v=0.5 rad /H20862sec.
Compensators designed by different methods or by different designers (even using the same ap-
proach) may look sufficiently different. Any of the well-designed systems, however, will give similartransient and steady-state performance. The best among many alternatives may be chosen from the
economic consideration that the time constants of the lag compensator should not be too large.G
c(s)G(s) =5(10s +1)
s(100s +1)(s +1)(0.5s +1)Kc=K
b=5
10=0.5Gc(s)=Kc(10)10s +1
100s +1=Kcs+1
10
s+1
100
8
4
0
–4
–90/H1103424
1620
12
–8
–12
–16
–20
–240/H11034–210/H11034–180/H11034–150/H11034–120/H11034
G1G1in dB0.60.4
0.8
10.1
0.2
2
0.60.4
0.8
G1
GcG3 dB
1
24Figure 7–105
Log-magnitude-versus-phase plots ofG
1(gain-adjusted but
uncompensatedopen-loop transferfunction) and G
cG
(compensated open-loop transferfunction).
508
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Finally, we shall examine the unit-step response and unit-ramp response of the compensated
system and the original uncompensated system without gain adjustment. The closed-loop trans-
fer functions of the compensated and uncompensated systems are
and
respectively. MATLAB Program 7–14 will produce the unit-step and unit-ramp responses of the
compensated and uncompensated systems.The resulting unit-step response curves and unit-ramp
response curves are shown in Figures 7–106 and 7–107, respectively. From the response curves
we find that the designed system satisfies the given specifications and is satisfactory.C(s)
R(s)=1
0.5s
3
+1.5s
2
+s+1C(s)
R(s)=50s +5
50s
4
+150.5s
3
+101.5s
2
+51s +5
MATLAB Program 7–14
%*****Unit-step response*****
num = [1];
den = [0.5  1.5  1  1];
numc = [50  5];
denc = [50  150.5  101.5  51  5];
t = 0:0.1:40;
[c1,x1,t] = step(num,den,t);
[c2,x2,t] = step(numc,denc,t);
plot(t,c1,'.',t,c2,'-')
grid
title('Unit-Step Responses of Compensated and Uncompensated Systems')
xlabel('t Sec')
ylabel('Outputs')
text(12.7,1.27,'Compensated system')
text(12.2,0.7,'Uncompensated system')
%*****Unit-ramp response*****
num1 = [1];
den1 = [0.5  1.5  1  1  0];
num1c = [50  5];
den1c = [50  150.5  101.5  51  5  0];
t = 0:0.1:20;
[y1,z1,t] = step(num1,den1,t);
[y2,z2,t] = step(num1c,den1c,t);
plot(t,y1,'.',t,y2,'-',t,t,'--');
grid
title('Unit-Ramp Responses of Compensated and Uncompensated Systems')
xlabel('t Sec')
ylabel('Outputs')
text(8.3,3,'Compensated system')
text(8.3,5,'Uncompensated system')
Openmirrors.com
Section 7–12 / Lag Compensation 509Note that the zero and poles of the designed closed-loop system are as follows:
The dominant closed-loop poles are very close to the jvaxis with the result that the response
is slow. Also, a pair of the closed-loop pole at s=–0.1228 and the zero at s=–0.1 produces a
slowly decreasing tail of small amplitude. Poles at s=-0.2859 ;j0.5196,  s=-0.1228,  s=-2.3155 Zero at s=-0.1Outputs1.4
0.6
011.2
0.4
0.20.8
t Sec01 0 5 40 30 35 25 15 20Unit-Step Responses of Compensated and Uncompensated Systems
Compensated system
Uncompensated system
Figure 7–106
Unit-step responsecurves for the
compensated and
uncompensatedsystems (Example7–27).
Outputs20
8
01218
4
216
1014
6
t Sec04 2 20 14 18 12 16 8 6 10Unit-Ramp Responses of Compensated  and Uncompensated Systems
Compensated systemUncompensated systemFigure 7–107
Unit-ramp responsecurves for the
compensated and
uncompensatedsystems (Example7–27).
A Few Comments on Lag Compensation.
1.Lag compensators are essentially low-pass filters. Therefore, lag compensation
permits a high gain at low frequencies (which improves the steady-state per-
formance) and reduces gain in the higher critical range of frequencies so as to im-
prove the phase margin. Note that in lag compensation we utilize the attenuation
characteristic of the lag compensator at high frequencies rather than the phase-
lag characteristic. (The phase-lag characteristic is of no use for compensation
purposes.)
2.Suppose that the zero and pole of a lag compensator are located at s=–z and
s=–p, respectively.Then the exact locations of the zero and pole are not critical
provided that they are close to the origin and the ratio z/pis equal to the required
multiplication factor of the static velocity error constant.
It should be noted, however, that the zero and pole of the lag compensator
should not be located unnecessarily close to the origin, because the lag compen-
sator will create an additional closed-loop pole in the same region as the zero and
pole of the lag compensator.
The closed-loop pole located near the origin gives a very slowly decaying tran-
sient response, although its magnitude will become very small because the zero of
the lag compensator will almost cancel the effect of this pole. However, the tran-
sient response (decay) due to this pole is so slow that the settling time will be ad-
versely affected.
It is also noted that in the system compensated by a lag compensator the trans-
fer function between the plant disturbance and the system error may not involve
a zero that is near this pole. Therefore, the transient response to the disturbance
input may last very long.
3.The attenuation due to the lag compensator will shift the gain crossover 
frequency to a lower frequency point where the phase margin is accept-
able. Thus, the lag compensator will reduce the bandwidth of the system 
and will result in slower transient response. [The phase angle curve of
G
c
(jv)G(jv)is relatively unchanged near and above the new gain crossover 
frequency.]
4.Since the lag compensator tends to integrate the input signal, it acts approximately
as a proportional-plus-integral controller. Because of this, a lag-compensated sys-
tem tends to become less stable. To avoid this undesirable feature, the time con-
stant Tshould be made sufficiently larger than the largest time constant of the
system.
5.Conditional stability may occur when a system having saturation or limiting is
compensated by use of a lag compensator.When the saturation or limiting takes
place in the system, it reduces the effective loop gain. Then the system becomes
less stable and unstable operation may even result, as shown in Figure 7–108.
To avoid this, the system must be designed so that the effect of lag compensa-
tion becomes significant only when the amplitude of the input to the saturat-
ing element is small. (This can be done by means of minor feedback-loop
compensation.)
510
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Openmirrors.com
Section 7–13 / Lag–Lead Compensation 5117–13 LAG–LEAD COMPENSATION
We shall first examine the frequency-response characteristics of the lag–lead compen-
sator. Then we present the lag–lead compensation technique based on the frequency-response approach.
Characteristic of Lag–Lead Compensator. Consider the lag–lead compensator
given by
(7–27)
whereg>1 andb>1. The term
produces the effect of the lead network, and the termproduces the effect of the lag network.s+1
T2
s+1
bT2=baT2 s+1
bT2 s+1b  (b71)s+1
T1
s+g
T1=1
g°T1 s+1
T1
gs+1¢  (g71)Gc(s)=Kc±s+1
T1
s+g
T1≤±s+1
T2
s+1
bT2≤dB40
30
20
10
0
–10
–20
–90°
–180°
–270°
0.7 1 2 4 6 8 10 20Large gain
Small
 gain
v in rad/secf /H11022  0f /H11021  0
Figure 7–108
Bode diagram of aconditionally stablesystem.
In designing a lag–lead compensator, we frequently chose g=b. (This is not
necessary. We can, of course, choose gZb.) In what follows, we shall consider the
case where g=b.The polar plot of the lag–lead compensator with K
c
=1 andg=b
becomes as shown in Figure 7–109. It can be seen that, for 0<v<v
1
,the
compensator acts as a lag compensator, while for v
1
<v<qit acts as a lead
compensator. The frequency v
1
is the frequency at which the phase angle is zero. It
is given by
(To derive this equation, see Problem A–7–21 .)
Figure 7–110 shows the Bode diagram of a lag–lead compensator when K
c
=1,
g=b=10, and Notice that the magnitude curve has the value 0 dB at the
low- and high-frequency regions.T
2
=10T
1
 
.v
1
=1
1T
1
 
T
2
512
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Im
Re 01v =v
1
v = 0v =`
Figure 7–109
Polar plot of a
lag–lead
compensator given
by Equation (7–27),
with K
c
=1 and
g=b.
10
0
–10
–20
–30
90°
0°
–90°
v in rad/secdB
0.01
T
1
1
T
1
10
T
1
0.1
T
1
0.001
T
1
100
T
1
Figure 7–110
Bode diagram of a
lag–lead
compensator given
by Equation (7–27)
with K
c
=1,
g=b=10, and
T
2
=10T
1
 
.
Openmirrors.com
Section 7–13 / Lag–Lead Compensation 513Lag–Lead Compensation Based on the Frequency-Response Approach. The
design of a lag–lead compensator by the frequency-response approach is based on thecombination of the design techniques discussed under lead compensation and lagcompensation.
Let us assume that the lag–lead compensator is of the following form:
(7–28)
whereb>1. The phase-lead portion of the lag–lead compensator (the portion involv-
ing ) alters the frequency-response curve by adding phase-lead angle and increasingthe phase margin at the gain crossover frequency.The phase-lag portion (the portion in-volving ) provides attenuation near and above the gain crossover frequency and there-by allows an increase of gain at the low-frequency range to improve the steady-stateperformance.
We shall illustrate the details of the procedures for designing a lag–lead compen-
sator by an example.
EXAMPLE 7–28
Consider the unity-feedback system whose open-loop transfer function is
It is desired that the static velocity error constant be 10 sec–1,the phase margin be 50°, and the
gain margin be 10 dB or more.
Assume that we use the lag–lead compensator given by Equation (7–28). [Note that the phase-
lead portion increases both the phase margin and the system bandwidth (which implies increas-ing the speed of response). The phase-lag portion maintains the low-frequency gain.]
The open-loop transfer function of the compensated system is G
c(s)G(s). Since the gain Kof
the plant is adjustable, let us assume that Kc=1. Then,
From the requirement on the static velocity error constant, we obtain
Hence,
We shall next draw the Bode diagram of the uncompensated system with K=20, as shown in
Figure 7–111. The phase margin of the gain-adjusted but uncompensated system is found to be
–32°, which indicates that the gain-adjusted but uncompensated system is unstable.
The next step in the design of a lag–lead compensator is to choose a new gain crossover fre-
quency. From the phase-angle curve for G(jv),we notice that at v=1.5 rad /H20862sec.
It is convenient to choose the new gain crossover frequency to be 1.5 rad /H20862sec so that the phase-
lead angle required at v=1.5 rad /H20862sec is about 50°, which is quite possible by use of a single
lag–lead network.
Once we choose the gain crossover frequency to be 1.5 rad /H20862sec, we can determine the corner
frequency of the phase-lag portion of the lag–lead compensator. Let us choose the corner fre-quency (which corresponds to the zero of the phase-lag portion of the compensator) tobe 1 decade below the new gain crossover frequency, or at v=0.15 rad /H20862sec.v=1/H20862T
2/G(jv)=-180°K=20Kv=lim
sS0sGc(s)G(s) =lim
sS0sGc(s)K
s(s+1)(s +2)=K
2=10lim
sS0Gc(s)=1.G(s) =K
s(s+1)(s +2)T2T1Gc(s)=Kc(T1 s+1)(T2 s+1)
aT1
bs+1b(bT2 s+1)=Kcas+1
T1bas+1
T2b
as+b
T1bas+1
bT2b
Recall that for the lead compensator the maximum phase-lead angle f
m
is given by Equation
(7–25), where ais1/bin the present case. By substituting a=1/bin Equation (7–25), we have
Notice that b=10 corresponds to f
m
=54.9 °. Since we need a 50° phase margin, we may choose
b=10 . (Note that we will be using several degrees less than the maximum angle, 54.9°.) Thus,
b=10
Then the corner frequency (which corresponds to the pole of the phase-lag portion of
the compensator) becomes v=0.015 rad /H20862sec. The transfer function of the phase-lag portion of
the lag–lead compensator then becomes
The phase-lead portion can be determined as follows: Since the new gain crossover frequen-
cy is v=1.5 rad /H20862sec, from Figure 7–111, G(j1.5) is found to be 13 dB. Hence, if the lag–lead com-
pensator contributes –13 dB at v=1.5 rad /H20862sec, then the new gain crossover frequency is as
desired. From this requirement, it is possible to draw a straight line of slope 20 dB /H20862decade, pass-
ing through the point (1.5 rad /H20862sec,–13 dB). The intersections of this line and the 0-dB line and
–20-dB line determine the corner frequencies. Thus, the corner frequencies for the lead portions+0.15
s+0.015=10
a
6.67s +1
66.7s +1
b
v=1/H20862bT
2
sinf
m
=1-1
b
1+1
b=b-1
b+1
514
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
v in rad/secdB60
40
20
0
–40–20
90°
0
–90°
–180°
–270°
0.02 0.01 0.04 0.1 0.2 0.4 0.6GG
c
GG
G
c
G
G
c
G
c
16 dB
124 6 1 0–32°50°
Figure 7–111
Bode diagrams for G
(gain-adjusted but
uncompensated
open-loop transfer
function), G
c
(compensator), and
G
c
G(compensated
open-loop transfer
function).
Openmirrors.com
Section 7–13 / Lag–Lead Compensation 515arev=0.7 rad /H20862sec and v=7 rad /H20862sec. Thus, the transfer function of the lead portion of the
lag–lead compensator becomes
Combining the transfer functions of the lag and lead portions of the compensator, we obtain the
transfer function of the lag–lead compensator. Since we chose Kc=1, we have
The magnitude and phase-angle curves of the lag–lead compensator just designed are shown in
Figure 7–111. The open-loop transfer function of the compensated system is
(7–29)
The magnitude and phase-angle curves of the system of Equation (7–29) are also shown in Fig-
ure 7–111. The phase margin of the compensated system is 50°, the gain margin is 16 dB, and thestatic velocity error constant is 10 sec
–1. All the requirements are therefore met, and the design
has been completed.
Figure 7–112 shows the polar plots of G(jv)(gain-adjusted but uncompensated open-loop
transfer function) and Gc(jv)G(jv)(compensated open-loop transfer function).The Gc(jv)G(jv)
locus is tangent to the M=1.2 circle at about v=2 rad /H20862sec. Clearly, this indicates that the com-
pensated system has satisfactory relative stability. The bandwidth of the compensated system is
slightly larger than 2 rad /H20862sec. =10(1.43s +1)(6.67s +1)
s(0.143s +1)(66.7s +1)(s +1)(0.5s +1) Gc(s)G(s) =(s+0.7)(s +0.15)20
(s+7)(s +0.015)s(s +1)(s +2)Gc(s)=as+0.7
s+7bas+0.15
s+0.015b=a1.43s +1
0.143s +1ba6.67s +1
66.7s +1bs+0.7
s+7=1
10a1.43s +1
0.143s +1b
M= 1.2
v = 0.15v = 1Im
Re
G
GcG 0.20.4
–8–7–6–5–4–3–2–1021
12 –22
–1 –4 –3 –5 –8 –712
–6
Figure 7–112
Polar plots of G(gain
adjusted) and GcG.
In the following we shall examine the transient-response characteristics of the compensated
system. (The gain-adjusted but uncompensated system is unstable.) The closed-loop transfer func-
tion of the compensated system is
The unit-step and unit-ramp response curves obtained with MATLAB are shown in Figures 7–113
and 7–114, respectively.C(s)
R(s)=95.381s
2
+81s +10
4.7691s
5
+47.7287s
4
+110.3026s
3
+163.724s
2
+82s +10
516
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Output
1.6
0.6
0
1
1.4
0.4
0.2
1.2
0.8
t Sec04
2
20 14
18
12
16
8
6
10
Unit-Step Response of Compensated System
Figure 7–113
Unit-step response of
the compensated
system (Example
7–28).
Output
20
8
0
12
18
4
2
16
10
14
6
t Sec04
2
20 14
18
12
16
8
6
10
Unit-Ramp Response of Compensated System
Figure 7–114
Unit-ramp response
of the compensated
system (Example
7–28).
Openmirrors.com
Section 7–13 / Lag–Lead Compensation 517Note that the designed closed-loop control system has the following closed-loop zeros and poles:
The pole at s=–0.1785 and zero at s=–0.1499 are located very close to each other. Such a pair
of pole and zero produces a long tail of small amplitude in the step response, as seen in Figure 7–113.Also, the pole at s=–0.5425 and zero at s=–0.6993 are located fairly close to each other.This pair
adds amplitude to the long tail.
Summary of Control Systems Design by Frequency-Response Approach.
The last three sections presented detailed procedures for designing lead, lag, andlag–lead compensators by the use of simple examples. We have shown that the designof a compensator to satisfy the given specifications (in terms of the phase margin andgain margin) can be carried out in the Bode diagram in a simple and straightforwardmanner. It is noted that not every system can be compensated with a lead, lag, orlag–lead compensator. In some cases compensators with complex poles and zeros maybe used. For systems that cannot be designed by use of the root-locus or frequency-response methods, the pole-placement method may be used. (See Chapter 10.) In agiven design problem if both conventional design methods and the pole-placementmethod can be used, conventional methods (root-locus or frequency-response methods)usually result in a lower-order stable compensator. Note that a satisfactory design of acompensator for a complex system may require a creative application of all availabledesign methods.
Comparison of Lead, Lag, and Lag–Lead Compensation
1.Lead compensation is commonly used for improving stability margins. Lag com-
pensation is used to improve the steady-state performance. Lead compensationachieves the desired result through the merits of its phase-lead contribution, where-as lag compensation accomplishes the result through the merits of its attenuationproperty at high frequencies.
2.In some design problems both lead compensation and lag compensation may sat-
isfy the specifications. Lead compensation yields a higher gain crossover frequen-cy than is possible with lag compensation. The higher gain crossover frequencymeans a larger bandwidth.A large bandwidth means reduction in the settling time.The bandwidth of a system with lead compensation is always greater than thatwith lag compensation.Therefore, if a large bandwidth or fast response is desired,lead compensation should be employed. If, however, noise signals are present, thena large bandwidth may not be desirable, since it makes the system more suscepti-ble to noise signals because of an increase in the high-frequency gain. Hence, lagcompensation should be used for such a case.
3.Lead compensation requires an additional increase in gain to offset the attenua-
tion inherent in the lead network.This means that lead compensation will requirea larger gain than that required by lag compensation.A larger gain, in most cases,implies larger space, greater weight, and higher cost. s=-0.1785,  s=-0.5425,  s=-7.4923 Poles at s=-0.8973 ;j1.4439 Zeros at s=-0.1499,  s=-0.6993
4.Lead compensation may generate large signals in the system. Such large signals
are not desirable because they will cause saturation in the system.
5.Lag compensation reduces the system gain at higher frequencies without reduc-
ing the system gain at lower frequencies. Since the system bandwidth is reduced,
the system has a slower speed to respond. Because of the reduced high-frequen-
cy gain, the total system gain can be increased, and thereby low-frequency gain
can be increased and the steady-state accuracy can be improved. Also, any high-
frequency noises involved in the system can be attenuated.
6.Lag compensation will introduce a pole-zero combination near the origin that will
generate a long tail with small amplitude in the transient response.
7.If both fast responses and good static accuracy are desired, a lag–lead compensator
may be employed. By use of the lag–lead compensator, the low-frequency gain can
be increased (which means an improvement in steady-state accuracy), while at the
same time the system bandwidth and stability margins can be increased.
8.Although a large number of practical compensation tasks can be accomplished
with lead, lag, or lag–lead compensators, for complicated systems, simple
compensation by use of these compensators may not yield satisfactory results.
Then, different compensators having different pole–zero configurations must be
employed.
Graphical Comparison. Figure 7–115(a) shows a unit-step response curve and
unit-ramp response curve of an uncompensated system. Typical unit-step response and
unit-ramp response curves for the compensated system using a lead, lag, and lag–lead
compensator, respectively, are shown in Figures 7–115(b), (c), and (d). The system with
a lead compensator exhibits the fastest response, while that with a lag compensator ex-
hibits the slowest response, but with marked improvements in the unit-ramp response.
The system with a lag–lead compensator will give a compromise; reasonable improve-
518
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
c(t)
1
0 t
c(t)
1
0 t
c(t)
1
0 t
c(t)
1
0 t
c(t)
0 t
c(t)
0 t
c(t)
0 t
c(t)
0 t
e
ss
e
ss
e
ss
e
ss
(a) (b) (c) (d)
Figure 7–115
Unit-step response
curves and unit-ramp
response curves.
(a) Uncompensated
system; (b) lead
compensated system;
(c) lag compensated
system; (d) lag–lead
compensated system.
Openmirrors.com
Section 7–13 / Lag–Lead Compensation 519ments in both the transient response and steady-state response can be expected. The
response curves shown depict the nature of improvements that may be expected fromusing different types of compensators.
Feedback Compensation. A tachometer is one of the rate feedback devices.
Another common rate feedback device is the rate gyro. Rate gyros are commonly usedin aircraft autopilot systems.
Velocity feedback using a tachometer is very commonly used in positional servo
systems. It is noted that, if the system is subjected to noise signals, velocity feedbackmay generate some difficulty if a particular velocity feedback scheme performsdifferentiation of the output signal. (The result is the accentuation of the noise effects.)
Cancellation of Undesirable Poles. Since the transfer function of elements in
cascade is the product of their individual transfer functions, it is possible to cancel someundesirable poles or zeros by placing a compensating element in cascade, with its polesand zeros being adjusted to cancel the undesirable poles or zeros of the original system.For example, a large time constant may be canceled by use of the lead network
as follows:
If is much smaller than we can effectively eliminate the large time constant 
Figure 7–116 shows the effect of canceling a large time constant in step transientresponse.
If an undesirable pole in the original system lies in the right-half splane, this com-
pensation scheme should not be used since, although mathematically it is possible tocancel the undesirable pole with an added zero, exact cancellation is physically impos-sible because of inaccuracies involved in the location of the poles and zeros. A pole inthe right-half splane not exactly canceled by the compensator zero will eventually lead
to unstable operation, because the response will involve an exponential term that in-creases with time.
It is noted that if a left-half plane pole is almost canceled but not exactly can-
celed, as is almost always the case, the uncanceled pole-zero combination will causethe response to have a small amplitude but long-lasting transient-response compo-nent. If the cancellation is not exact but is reasonably good, then this component willbe small.
It should be noted that the ideal control system is not the one that has a transfer
function of unity. Physically, such a control system cannot be built since it cannotT
1 . T1 , T2a1
T1 s+1baT1 s+1
T2 s+1b=1
T2 s+1AT1 s+1B/H20862AT2 s+1BT1
x
xy zyz
tt t1
T1s+ 1T1s+ 1
T2s+ 1Figure 7–116
Step-response curvesshowing the effect of
canceling a large
time constant.
instantaneously transfer energy from the input to the output. In addition, since
noise is almost always present in one form or another, a system with a unity transfer
function is not desirable. A desired control system, in many practical cases, may
have one set of dominant complex-conjugate closed-loop poles with a reasonable
damping ratio and undamped natural frequency.The determination of the significant
part of the closed-loop pole-zero configuration, such as the location of the domi-
nant closed-loop poles, is based on the specifications that give the required system
performance.
Cancellation of Undesirable Complex-Conjugate Poles. If the transfer func-
tion of a plant contains one or more pairs of complex-conjugate poles, then a lead, lag,
or lag–lead compensator may not give satisfactory results. In such a case, a network that
has two zeros and two poles may prove to be useful. If the zeros are chosen so as to
cancel the undesirable complex-conjugate poles of the plant, then we can essentially
replace the undesirable poles by acceptable poles. That is, if the undesirable complex-
conjugate poles are in the left-half splane and are in the form
then the insertion of a compensating network having the transfer function
will result in an effective change of the undesirable complex-conjugate poles to ac-
ceptable poles. Note that even though the cancellation may not be exact, the com-
pensated system will exhibit better response characteristics. (As stated earlier, this
approach cannot be used if the undesirable complex-conjugate poles are in the right-
half splane.)
Familiar networks consisting only of RCcomponents whose transfer functions pos-
sess two zeros and two poles are the bridged- Tnetworks. Examples of bridged- Tnet-
works and their transfer functions are shown in Figure 7–117. (The derivations of the
transfer functions of the bridged- Tnetworks were given in Problem A–3–5 .)s
2
+2z
1
 
v
1
 
s+v
2
1
s
2
+2z
2
 
v
2
 
s+v
2
2
1
s
2
+2z
1
 
v
1
 
s+v
2
1
520
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
C
2
RR
C
1
R
2
CC
R
1
e
i
e
o
e
i
e
o
(a) (b)E
o
(s)
E
i
(s)RC
1
RC
2
s
2
+ 2RC
2
s+ 1
RC
1
RC
2
s
2
+ (RC
1
+ 2RC
2
)s+ 1
=
E
o
(s)
E
i
(s)R
1
CR
2
Cs
2
+ 2R
1
Cs+ 1
R
1
CR
2
Cs
2
+ (R
2
C+ 2R
1
C)s+ 1
=
Figure 7–117
Bridged- Tnetworks.
Openmirrors.com
Example Problems and Solutions 521Concluding Comments. In the design examples presented in this chapter, we
have been primarily concerned only with the transfer functions of compensators. In ac-tual design problems, we must choose the hardware. Thus, we must satisfy additionaldesign constraints such as cost, size, weight, and reliability.
The system designed may meet the specifications under normal operating condi-
tions but may deviate considerably from the specifications when environmental changesare considerable. Since the changes in the environment affect the gain and time con-stants of the system, it is necessary to provide automatic or manual means to adjust thegain to compensate for such environmental changes, for nonlinear effects that were nottaken into account in the design, and also to compensate for manufacturing tolerancesfrom unit to unit in the production of system components. (The effects of manufactur-ing tolerances are suppressed in a closed-loop system; therefore, the effects may not becritical in closed-loop operation but critical in open-loop operation.) In addition to this,the designer must remember that any system is subject to small variations due mainlyto the normal deterioration of the system.
15
10
5
0
–5
–10
–15
90°
45°
0°
–45°
–90°
0.2 0.4 0.6 1 2 4 6 10 20 40
v in rad/secC(jv)
R(jv)C(jv)
R(jv)in dBAsymptote
Figure 7–118
Bode diagram for10(1 +jv)/H20862C(2+jv)(5+jv)D.EXAMPLE PROBLEMS AND SOLUTIONS
A–7–1. Consider a system whose closed-loop transfer function is
Clearly, the closed-loop poles are located at s=–2 ands=–5 , and the system is not oscillatory.
Show that the closed-loop frequency response of this system will exhibit a resonant peak, al-
though the damping ratio of the closed-loop poles is greater than unity.
Solution. Figure 7–118 shows the Bode diagram for the system. The resonant peak value is ap-
proximately 3.5 dB. (Note that, in the absence of a zero, the second-order system with z>0.7 will
not exhibit a resonant peak; however, the presence of a closed-loop zero will cause such a peak.)C(s)
R(s)=10(s +1)
(s+2)(s +5)
A–7–2. Consider the system defined by
Obtain the sinusoidal transfer functions and
In deriving and we assume that Simi-
larly, in obtaining and we assume that 
Solution. The transfer matrix expression for the system defined by
is given by
where G(s)is the transfer matrix and is given by
For the system considered here, the transfer matrix becomes
Hence
Assuming that U
2
(jv)=0 , we find and as follows:
Similarly, assuming that U
1
(jv)=0 , we find and as follows:
Notice that is a nonminimum-phase transfer function. Y
2
(jv)/H20862U
2
(jv)Y
2
(jv)
U
2
(jv)=jv-25
(jv)
2
+4jv+25Y
1
(jv)
U
2
(jv)=jv+5
(jv)
2
+4jv+25Y
2
(jv)/H20862U
2
(jv) Y
1
(jv)/H20862U
2
(jv)Y
2
(jv)
U
1
(jv)=-25
(jv)
2
+4jv+25Y
1
(jv)
U
1
(jv)=jv+4
(jv)
2
+4jv+25Y
2
(jv)/H20862U
1
(jv) Y
1
(jv)/H20862U
1
(jv)
B
Y
1
(s)
Y
2
(s)
R
=
D
s+4
s
2
+4s+25
-25
s
2
+4s+25s+5
s
2
+4s+25
s-25
s
2
+4s+25
TB
U
1
(s)
U
2
(s)
R
 =
D
s+4
s
2
+4s+25
-25
s
2
+4s+25s+5
s
2
+4s+25
s-25
s
2
+4s+25
T
 =1
s
2
+4s+25
B
s+4
-251
s
RB
1
01
1
R
 C(s
 
I-A)
-1
 
B+D=
B
1
00
1
RB
s
25-1
s+4
R
-1
B
1
01
1
R
G(s)=C(s
 
I-A)
-1
 
B+DY(s)=G(s)U(s)y#=Cx+Dux#=Ax+BuU
1
(jv)=0. Y
2
(jv)/H20862U
2
(jv), Y
1
(jv)/H20862U
2
(jv)U
2
(jv)=0. Y
2
(jv)/H20862U
1
(jv), Y
1
(jv)/H20862U
1
(jv) Y
2
(jv)/H20862U
2
(jv).Y
1
(jv)/H20862U
2
(jv), Y
2
(jv)/H20862U
1
(jv), Y
1
(jv)/H20862U
1
(jv), 
B
y
1
y
2
R
=
B
1
00
1
RB
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
0
-251
-4
RB
x
1
x
2
R
+
B
1
01
1
RB
u
1
u
2
R
522
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Openmirrors.com
Example Problems and Solutions 523Frequency (rad/sec)Phase (deg); Magnitude (dB)Bode Diagrams
100101102100101102From: U1 From: U2
−40−200
−1000100
−1000100
−2000200To:Y1 To:Y2
Figure 7–119
Bode diagrams.A–7–3. Referring to Problem A–7–2, plot Bode diagrams for the system, using MATLAB.
Solution. MATLAB Program 7–15 produces Bode diagrams for the system. There are four
sets of Bode diagrams: two for input 1 and two for input 2. These Bode diagrams are shown inFigure 7–119.
MATLAB Program 7–15
A = [0  1;-25  -4];
B = [1  1;0  1];C = [1  0;0  1];D = [0  0;0  0];bode(A,B,C,D)
524
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
K
s(s+ 1) (s+ 5)
+–
R(s) C(s)
Figure 7–120
Closed-loop system.
A–7–4. Using MATLAB, plot Bode diagrams for the closed-loop system shown in Figure 7–120 for K=1,
K=10, andK=20. Plot three magnitude curves in one diagram and three phase-angle curves
in another diagram.
Solution. The closed-loop transfer function of the system is given by
Hence the numerator and denominator of C(s) /H20862R(s) are
num = [K]
den = [1  6  5  K]
A possible MATLAB program is shown in MATLAB Program 7–16.The resulting Bode diagrams
are shown in Figures 7–121(a) and (b). =K
s
3
+6s
2
+5s+K C(s)
R(s)=K
s(s+1)(s +5)+K
MATLAB Program 7–16
w = logspace(-1,2,200);
for i = 1:3;
if i = 1; K = 1;[mag,phase,w] = bode([K],[1  6  5  K],w);
mag1dB = 20*log10(mag); phase1 = phase; end;
if i = 2; K = 10;[mag,phase,w] = bode([K],[1  6  5  K],w);
mag2dB = 20*log10(mag); phase2 = phase; end;
if i = 3; K = 20;[mag,phase,w] = bode([K],[1  6  5  K],w);
mag3dB = 20*log10(mag); phase3 = phase; end;
end
semilogx(w,mag1dB,'-',w,mag2dB,'-',w,mag3dB,'-')
grid
title('Bode Diagrams of G(s) = K/[s(s + 1)(s + 5)], where K = 1, K = 10, and K = 20')
xlabel('Frequency (rad/sec)')
ylabel('Gain (dB)')
text(1.2,-31,'K = 1')
text(1.1,-8,'K = 10')
text(11,-31,'K = 20')
semilogx(w,phase1,'-',w,phase2,'-',w,phase3,'-')
grid
xlabel('Frequency (rad/sec)')
ylabel('Phase (deg)')
text(0.2,-90,'K = 1')
text(0.2,-20,'K =10')
text(1.6,-20,'K = 20')
Openmirrors.com
Example Problems and Solutions 525Frequency (rad/sec)Bode Diagrams of G(s) = K/[s(s + 1)( s + 5)], where K = 1, K = 10, and K = 20
−140Gain (dB)
−120−100−80−60−40−2020
0
10−1100101102K = 10
K = 20 K = 1
(a)
Frequency (rad/sec)−300−200−150−100−50
−2500Phase (deg)
10−1100101102K = 10 K = 20
K = 1
(b)Figure 7–121
Bode diagrams:(a) Magnitude-
versus-frequency
curves; (b) phase-angle-versus-frequency curves.
A–7–5. Prove that the polar plot of the sinusoidal transfer function
is a semicircle. Find the center and radius of the circle.G(jv)=jvT
1+jvT,  for 0/H11349v/H11349q
526
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Solution. The given sinusoidal transfer function G(jv)can be written as follows:
where
Then
Hence, we see that the plot of G(jv)is a circle centered at (0.5,0) with radius equal to 0.5. The
upper semicircle corresponds to 0 /H11349v/H11349q, and the lower semicircle corresponds to
–q/H11349v/H113490.
A–7–6. Prove the following mapping theorem: Let F(s) be a ratio of polynomials in s. Let Pbe the num-
ber of poles and Zbe the number of zeros of F(s) that lie inside a closed contour in the splane,
with multiplicity accounted for. Let the closed contour be such that it does not pass through any
poles or zeros of F(s) .The closed contour in the splane then maps into the F(s) plane as a closed
curve. The number Nof clockwise encirclements of the origin of the F(s) plane, as a representa-
tive point straces out the entire contour in the splane in the clockwise direction, is equal to Z-P .
Solution. To prove this theorem, we use Cauchy’s theorem and the residue theorem. Cauchy’s
theorem states that the integral of F(s) around a closed contour in the splane is zero if F(s) is
analytic
#
within and on the closed contour, or
Suppose that F(s) is given by
where X(s) is analytic in the closed contour in the splane and all the poles and zeros are located
in the contour. Then the ratio F¿(s)/F(s) can be written
(7–30)
This may be seen from the following consideration: If is given by
then has a zero of kth order at s=–z
1
. Differentiating F(s) with respect to syields
Hence,
(7–31)
We see that by taking the ratio , the kth-order zero of becomes a simple pole of
. F
ˆ
¿(s) /H20862F
ˆ
(s)F
ˆ
(s) F
ˆ
¿(s) /H20862F
ˆ
(s)F
ˆ
¿(s)
F
ˆ
(s)=k
s+z
1
+X¿(s)
X(s)F
ˆ
¿(s)=kAs+z
1
B
k-1
X(s) +As+z
1
B
k
X¿(s)F
ˆ
(s)F
ˆ
(s)=As+z
1
B
k
X(s)F
ˆ
(s)F¿(s)
F(s)=
a
k
1
s+z
1
+k
2
s+z
2
+p
b
-
a
m
1
s+p
1
+m
2
s+p
2
+p
b
+X¿(s)
X(s)F(s) =As+z
1
B
k
1
As+z
2
B
k
2
p
As+p
1
B
m
1
As+p
2
B
m
2
pX(s)IF(s) ds=0
a
X-1
2
b
2
+Y
2
=Av
2
 
T
2
-1B
2
4A1+v
2
 
T
2
B
2
+v
2
 
T
2
A1+v
2
 
T
2
B
2
=1
4X=v
2
 
T
2
1+v
2
 
T
2
,
  
Y=vT
1+v
2
 
T
2
G(jv)=X+jY
#
For the definition of an analytic function, see the footnote on page 447.
Openmirrors.com
Example Problems and Solutions 527If the last term on the right-hand side of Equation (7–31) does not contain any poles or zeros
in the closed contour in the splane, F¿(s)/F(s) is analytic in this contour except at point s=–z1.
Then, referring to Equation (7–30) and using the residue theorem, which states that the integralofF¿(s)/F(s) taken in the clockwise direction around a closed contour in the splane is equal to
–2pjtimes the residues at the simple poles of F¿(s)/F(s) ,o r
we have
where total number of zeros of F(s) enclosed in the closed 
contour in the splane
total number of poles of F(s) enclosed in the closed 
contour in the splane
[The kmultiple zeros (or poles) are considered kzeros (or poles) located at the same point.]
Since F(s) is a complex quantity, F(s) can be written
andNoting that F¿(s)/F(s) can be written
we obtain
If the closed contour in the splane is mapped into the closed contour in the F(s) plane, then
The integral is zero since the magnitude is the same at the initial point and the final
point of the contour Thus we obtain
The angular difference between the final and initial values of uis equal to the total change in
the phase angle of F¿(s)/F(s) as a representative point in the splane moves along the closed
contour. Noting that Nis the number of clockwise encirclements of the origin of the F(s) plane
andu
2-u1is zero or a multiple of 2 prad, we obtain
u2-u1
2p=-Nu2-u1
2p=P-ZG.ln  ∑F∑DGdln  ∑F∑IF¿(s)
F(s)ds=
IG  dln  ∑F∑+j
IGdu=j
3du=2pj(P -Z)GF¿(s)
F(s)=dln  ∑F∑
ds+jdu
dsF¿(s)
F(s)=dlnF(s)
dslnF(s) =ln  ∑F∑+juF(s) =∑F∑eju P=m1+m2+p=Z=k1+k2+p=IF¿(s)
F(s)ds=-2pjCAk1+k2+pB-Am1+m2+pBD=-2pj(Z -P)IF¿(s)
F(s)ds=-2pjaa residuesb
528
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
0 Re
(a)Im
v=/H11009
–1
v= 0
ReIm
–1
G Plane
v=/H11009
v= 0+v= 0–
/H11009
(b)
Figure 7–123
(a) Nyquist plot;
(b) complete Nyquist
plot in the Gplane.Thus, we have the relationship
This proves the theorem.
Note that by this mapping theorem, the exact numbers of zeros and of poles cannot be found—
only their difference. Note also that, from Figures 7–122(a) and (b), we see that if udoes not
change through 2 prad, then the origin of the F(s) plane cannot be encircled.
A–7–7. The Nyquist plot (polar plot) of the open-loop frequency response of a unity-feedback control
system is shown in Figure 7–123(a). Assuming that the Nyquist path in the splane encloses the
entire right-half splane, draw a complete Nyquist plot in the Gplane.Then answer the following
questions:
(a) If the open-loop transfer function has no poles in the right-half splane, is the closed-loop
system stable?
(b) If the open-loop transfer function has one pole and no zeros in right-half splane, is the closed-
loop system stable?
(c) If the open-loop transfer function has one zero and no poles in the right-half splane, is the
closed-loop system stable?N=Z-P
ReIm
u
1
u
2
u
2
Origin encircled
u
2
–u
1
= 2pOrigin not encircled
u
2
–u
1
= 0F(s) Plane F(s) Plane
0
(a) (b)
ReIm
0
u
1
Figure 7–122
Determination of
encirclement of the
origin of F(s) plane.
Openmirrors.com
Example Problems and Solutions 529Solution. Figure 7–123(b) shows a complete Nyquist plot in the Gplane.The answers to the three
questions are as follows:
(a) The closed-loop system is stable, because the critical point (–1+j0) is not encircled by the
Nyquist plot. That is, since P=0 andN=0 , we have Z=N+P=0 .
(b) The open-loop transfer function has one pole in the right-half splane. Hence, P=1 .( T h e
open-loop system is unstable.) For the closed-loop system to be stable, the Nyquist plot must
encircle the critical point (–1+j0) once counterclockwise. However, the Nyquist plot does
not encircle the critical point. Hence, N=0 .Therefore, Z=N+P=1 .The closed-loop sys-
tem is unstable.
(c) Since the open-loop transfer function has one zero, but no poles, in the right-half splane, we
have Z=N+P=0 . Thus, the closed-loop system is stable. (Note that the zeros of the
open-loop transfer function do not affect the stability of the closed-loop system.)
A–7–8. Is a closed-loop system with the following open-loop transfer function and with K=2 stable?
Find the critical value of the gain Kfor stability.
Solution. The open-loop transfer function is
This open-loop transfer function has no poles in the right-half splane. Thus, for stability, the
–1+j0 point should not be encircled by the Nyquist plot. Let us find the point where the Nyquist
plot crosses the negative real axis. Let the imaginary part of G(jv)H(jv)be zero, or
from which
Substituting into G(jv)H(jv), we obtain
The critical value of the gain Kis obtained by equating –2K/3 to–1,o r
Hence,
The system is stable if Hence, the system with K=2 is unstable. 06K63
2.K=3
2-2
3K=-1Gaj1
12bHaj1
12b=-2K
3v=1/H2086212v=; 1
121-2v2=0 =K
-3v2+jvA1-2v2B G(jv)H(jv)=K
jv(jv+1)(2jv+1)G(s)H(s) =K
s(s+1)(2s +1)
530
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
ReIm
Re ReIm Im
–1 –1
G Plane
G Plane G Plane
(Stable) (Unstable)(a)
(b)v=/H11009
v=/H11009 v=/H11009v=–/H11009
v=–/H11009 v=–/H11009v= 0
v= 0
v= 0
P= 1
N=–1
Z= 0P= 1
N= 0
K/H11021 1 K/H11022 1Z= 1
K
2
K
2
–
Figure 7–125
(a) Polar plot of
K/(jv-1) ;
(b) polar plots of
K/(jv-1) for
stable and unstable
cases.A–7–9. Consider the closed-loop system shown in Figure 7–124. Determine the critical value of Kfor
stability by the use of the Nyquist stability criterion.
Solution. The polar plot of
is a circle with center at –K/2 on the negative real axis and radius K/2 , as shown in Figure
7–125(a). As vis increased from –qtoq, the G(jv)locus makes a counterclockwise rotation.
In this system, P=1 because there is one pole of G(s) in the right-half splane. For the closed-
loop system to be stable, Zmust be equal to zero.Therefore, N=Z-P must be equal to –1,o r
there must be one counterclockwise encirclement of the –1+j0 point for stability. (If there is no
encirclement of the –1+j0 point, the system is unstable.) Thus, for stability, Kmust be greater
than unity, and K=1 gives the stability limit. Figure 7–125(b) shows both stable and unstable cases
ofG(jv)plots.G(jv)=K
jv-1
R(s) C(s)K
s– 1
+–
Figure 7–124
Closed-loop system.
Openmirrors.com
Example Problems and Solutions 531ReIm
4
3
v= 2.45
v= 2
v= 1.5–1
–2–11
123
v= 1v= 06
8910
v= 0.52.65
1+jv
2.65 e–0.8jv
1+jvFigure 7–126
Polar plots of
and2.65/(1+j v).2.65e-0.8jv/H20862(1+jv)A–7–10. Consider a unity-feedback system whose open-loop transfer function is
Using the Nyquist plot, determine the critical value of Kfor stability.
Solution. For this system,
The imaginary part of G(jv)is equal to zero if
Hence,Solving this equation for the smallest positive value of v, we obtain
Substituting v=2.4482 into G(jv), we obtain
The critical value of Kfor stability is obtained by letting G(j2.4482) equal –1. Hence,
or
Figure 7–126 shows the Nyquist or polar plots of 2.65e
–0.8jv/(1+j v)and2.65/(1+j v).The first-
order system without transport lag is stable for all values of K, but the one with a transport lag of
0.8 sec becomes unstable for K>2.65 .K=2.650.378K =1G(j2.4482) =K
1+2.44822(cos1.9586 -2.4482 sin1.9586) =-0.378Kv=2.4482v=-tan0.8vsin0.8v+vcos0.8v=0 =K
1+v2C(cos0.8v-vsin0.8v)-j(sin0.8v+vcos0.8v)D =K(cos0.8v-jsin0.8v)(1-jv)
1+v2 G(jv)=Ke-0.8jv
jv+1G(s) =Ke-0.8s
s+1
532
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
A–7–11. Consider a unity-feedback system with the following open-loop transfer function:
Draw a Nyquist plot with MATLAB and examine the stability of the closed-loop system.
Solution. MATLAB Program 7–17 produces the Nyquist diagram shown in Figure 7–127. From
this figure, we see that the Nyquist plot does not encircle the –1+j0 point. Hence, N=0 in the
Nyquist stability criterion. Since no open-loop poles lie in the right-half splane, P=0. Therefore,
Z=N+P=0. The closed-loop system is stable.G(s) =20As
2
+s+0.5B
s(s+1)(s +10)
A–7–12. Consider the same system as discussed in Problem A–7–11 . Draw the Nyquist plot for only the
positive-frequency region.
Solution. Drawing a Nyquist plot for only the positive-frequency region can be done by the use
of the following command:
[re,im,w] = nyquist(num,den,w)
The frequency region may be divided into several subregions by using different increments. For
example, the frequency region of interest may be divided into three subregions as follows:
w1 = 0.1:0.1:10;
w2 = 10:2:100;
w3 = 100:10:500;
w = [w1  w2  w3]
MATLAB Program 7–17
num = [20  20  10];
den = [1  11  10  0];
nyquist(num,den)
v = [-2  3  -3  3]; axis(v)
grid
Real Axis−1−0.5 −1.5 −23 1 1.5 0.5 2 2.5 0
Imaginary Axis
−33
2
1
−2−10Nyquist Diagram
Figure 7–127
Nyquist plot of
G(s) =20As
2
+s+0.5B
s(s+1)(s +10).
Openmirrors.com
Example Problems and Solutions 533Real Axis–3 3 2 1 0 –1 –2Imag Axis
–3
–51
–1
–4–20Nyquist Plot of G(s)= 20(s2+s+0.5)/[ s(s+1)(s+10)]
Figure 7–128
Nyquist plot for thepositive-frequency
region.MATLAB Program 7–18
num = [20  20  10];
den = [1  11  10  0];w1 = 0.1:0.1:10; w2 = 10:2:100; w3 = 100:10:500;w = [w1  w2  w3];[re,im,w] = nyquist(num,den,w);plot(re,im)v = [-3  3  -5  1]; axis(v);gridtitle('Nyquist Plot of G(s) = 20(s^2 + s + 0.5)/[s(s + 1)(s + 10)]')xlabel('Real Axis')ylabel('Imag Axis')
A–7–13. Referring to Problem A–7–12 , plot the polar locus of G(s) where
Locate on the polar locus frequency points where v=0.2, 0.3, 0.5, 1, 2, 6, 10, and 20 rad /H20862sec.
Also, find the magnitudes and phase angles of G(jv)at the specified frequency points.
Solution. In MATLAB Program 7–19 we used the frequency vector w, which consists of
three frequency subvectors: w1,w2, and w3. Instead of such a w, we may simply use theG(s) =20As2+s+0.5B
s(s+1)(s +10)MATLAB Program 7–18 uses this frequency region. Using this program, we obtain the Nyquist
plot shown in Figure 7–128.
534
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
MATLAB Program 7–19
num = [20  20  10];
den = [1  11  10  0];
ww = logspace(-1,2,100);
nyquist(num,den,ww)
v = [-2  3  -5  0]; axis(v);
grid
hold
Current plot held
w = [0.2  0.3  0.5  1  2  6  10  20];
[re,im,w] = nyquist(num,den,w);
plot(re,im,'o')
text(1.1,-4.8,'w = 0.2')
text(1.1,-3.1,'0.3')
text(1.25,-1.7,'0.5')
text(1.37,-0.4,'1')
text(1.8,-0.3,'2')
text(1.4,-1.1,'6')
text(0.77,-0.8,'10')
text(0.037,-0.8,'20')
% ----- To get the values of magnitude and phase (in degrees) of G(jw)
% at the specified w values, enter the command [mag,phase,w]
% = bode(num,den,w) ------
[mag,phase,w] = bode(num,den,w);
% ----- The following table shows the specified frequency values w and
% the corresponding values of magnitude and phase (in degrees) -----
[w  mag  phase]
ans =
0.2000  4.9176  -78.9571
0.3000  3.2426  -72.2244
0.5000  1.9975  -55.9925
1.0000  1.5733  -24.1455
2.0000  1.7678  -14.4898
6.0000  1.6918  -31.0946
10.0000  1.4072  -45.0285
20.0000  0.8933  -63.4385
frequency vector w = logscale(d
1
,d
2
,n ). MATLAB Program 7–19 uses the following fre-
quency vector:
w = logscale(-1,2,100)
This MATLAB program plots the polar locus and locates the specified frequency points on the
polar locus, as shown in Figure 7–129.
Openmirrors.com
Example Problems and Solutions 535MATLAB Program 7–20
num = [-1  -4  -6];
den = [1  5  4];nyquist(num,den);gridtitle('Nyquist Plot of G(s) = -(s^2 + 4s + 6)/(s^2 + 5s + 4)')A–7–14. Consider a unity-feedback, positive-feedback system with the following open-loop transfer
function:
Draw a Nyquist plot.
Solution. The Nyquist plot of the positive-feedback system can be obtained by defining num and
denas
num = [-1  -4  -6]
den = [1  5  4]
and using the command nyquist(num,den) . MATLAB Program 7–20 produces the Nyquist plot,
as shown in Figure 7–130.
This system is unstable, because the –1+j0 point is encircled once clockwise. Note that this
is a special case where the Nyquist plot passes through –1+j0 point and also encircles this point
once clockwise. This means that the closed-loop system is degenerate; the system behaves as if itwere an unstable first-order system. See the following closed-loop transfer function of the positive-feedback system:
 =s
2+4s+6
s-2 C(s)
R(s)=s2+4s+6
s2+5s+4-As2+4s+6BG(s) =s2+4s+6
s2+5s+4Real Axis−1−0.5 −1.5 −23 1 1.5 0.5 2 2.5 0Imaginary Axis
−50
−0.5
−1
−2.5
−3
−3.5
−4
−4.5−2−1.5Nyquist Diagram
w = 0.20.30.5621
10 20
Figure 7–129
Polar plot of G(jv)
given in Problem
A–7–13 .
536
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Note that the Nyquist plot for the positive-feedback case is a mirror image about the imaginary
axis of the Nyquist plot for the negative-feedback case.This may be seen from Figure 7–131, which
was obtained by use of MATLAB Program 7–21. (Note that the positive-feedback case is unsta-
ble, but the negative-feedback case is stable.)
MATLAB Program 7–21
num1 = [1  4  6];
den1 = [1  5  4];
num2 = [-1  -4  -6];
den2 = [1  5  4];
nyquist(num1,den1);
hold on
nyquist(num2,den2);
v = [-2  2  -1  1];
axis(v);
grid
title('Nyquist Plots of G(s) and -G(s)')
text(1.0,0.5,'G(s)')
text(0.57,-0.48,'Use this Nyquist')
text(0.57,-0.61,'plot for negative')
text(0.57,-0.73,'feedback system')
text(-1.3,0.5,'-G(s)')
text(-1.7,-0.48,'Use this Nyquist')
text(-1.7,-0.61,'plot for positive')
text(-1.7,-0.73,'feedback system')
Real Axis–1.4
–1.5 –0.9
–0.7 –1
–0.8
–1.2
–1.3
–1.1
Imag Axis
–0.2
0.1
–0.50.5
–0.1
0.2
–0.3
–0.4
0
0.3
0.4
Nyquist Plot of G(s)= –(s
2
+4s+6)/(s
2
+5s+4)
Figure 7–130
Nyquist plot for
positive-feedback
system.
Openmirrors.com
Example Problems and Solutions 537Real Axis–1.5 –2 1 2 0.5 1.5 –0.5 –1 0Imag Axis
–0.40.2
–11
–0.20.4
–0.6
–0.800.60.8Nyquist Plots of G(s) and –G(s)
–G(s) G(s)
Use this Nyquist
plot for positive
feedback systemUse this Nyquist
plot for negative
feedback systemFigure 7–131
Nyquist plots forpositive-feedback
system and negative-
feedback system.
A–7–15. Consider the control system shown in Figure 7–60. (Refer to Example 7–19.) Using the inverse
polar plot, determine the range of gain Kfor stability.
Solution. Since
we have
Hence, the inverse of the feedforward transfer function is
Notice that 1/G(s) has a pole at s=–0.5 . It does not have any pole in the right-half splane.
Therefore, the Nyquist stability equation
reduces to Z=N since P=0 . The reduced equation states that the number Zof the zeros of
1+C1/G(s)Din the right-half splane is equal to N, the number of clockwise encirclements of
the–1+j0 point. For stability, Nmust be equal to zero, or there should be no encirclement. Fig-
ure 7–132 shows the Nyquist plot or polar plot of K/G(jv).
Notice that since
 =0.5-0.5v
2-v4+jvA-1+0.5v2B
0.25 +v2 K
G(jv)=c(jv)3+(jv)2+1
jv+0.5da0.5-jv
0.5-jvbZ=N+P1
G(s)=s3+s2+1
K(s +0.5)G(s) =G1(s)G2(s)=K(s +0.5)
s3+s2+1G2(s)=1
s3+s2+1
538
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Figure 7–132
Polar plot of
K/G(jv).
theK/G(jv)locus crosses the negative real axis at and the crossing point at the nega-
tive real axis is –2.
From Figure 7–132, we see that if the critical point lies in the region between –2and–q, then
the critical point is not encircled. Hence, for stability, we require
Thus, the range of gain Kfor stability is
2<K
which is the same result as we obtained in Example 7–19.
A–7–16. Figure 7–133 shows a block diagram of a space-vehicle control system. Determine the gain Ksuch
that the phase margin is 50°. What is the gain margin in this case?
Solution. Since
we have
The requirement that the phase margin be 50° means that must be equal to –130 °, where
v
c
is the gain crossover frequency, or
/
GAjv
c
B
=-130°
/
GAjv
c
B
/
G(jv)
=
/
jv+2
-2
/
jv
=tan
-1
v
2-180°G(jv)=K(jv+2)
(jv)
2
-16-2
Kv=12
,
Im
ReK
G
PlaneK
G
Locus
/H11009
/H11009
–/H11009–20 2v = 0v =     2
vv
Openmirrors.com
Example Problems and Solutions 539Hence, we set
from which we obtain
Since the phase curve never crosses the –180 ° line, the gain margin is ±qdB. Noting that the
magnitude of G(jv)must be equal to 0 dB at v=2.3835 , we have
from which we get
This Kvalue will give the phase margin of 50°.
A–7–17. For the standard second-order system
show that the bandwidth vbis given by
Note that vb/vnis a function only of z. Plot a curve of vb/vnversusz.
Solution. The bandwidth vbis determined from @CAjvbB/RAjvbB@=–3 dB. Quite often, instead of
–3dB, we use –3.01 dB, which is equal to 0.707. Thus,
Then
from which we get
v4
n=0.5CAv2
n-v2
bB2+4z2v2
n v2bDv2
n
3Av2
n-v2
bB2+A2zvn vbB2=0.7072CAjvbB
RAjvbB2=2v2
n
AjvbB2+2zvnAjvbB+v2
n2=0.707vb=vnA1-2z2+24z4-4z2+2B1/H208622C(s)
R(s)=v2
n
s2+2zvn s+v2
nK=2.38352
222+2.38352=1.82592K(jv+2)
(jv)22
v=2.3835=1vc=2.3835 rad /H20862sectan-1vc
2=50°G(s)K(s+ 2)1
s2+–
Figure 7–133
Space-vehicle controlsystem.
540
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
2.0
1.8
1.6
1.4
1.2
1.0
0.8
0.6
0.4
0.2
0
0 0.2 0.4 0.6 0.8 1.0
zv
b
v
n
Figure 7–134
Curve of v
b
/v
n
versusz, where v
b
is
the bandwidth.
By dividing both sides of this last equation by v
4
n
, we obtain
Solving this last equation for Av
b
/v
n
B
2
yields
SinceAv
b
/v
n
B
2
>0 , we take the plus sign in this last equation. Then
or
Figure 7–134 shows a curve relating v
b
/v
n
versusz.
A–7–18. A Bode diagram of the open-loop transfer function G(s) of a unity-feedback control system is
shown in Figure 7–135. It is known that the open-loop transfer function is minimum phase. From
the diagram, it can be seen that there is a pair of complex-conjugate poles at v=2 rad /H20862sec.
Determine the damping ratio of the quadratic term involving these complex-conjugate poles.
Also, determine the transfer function G(s) .
Solution. Referring to Figure 7–9 and examining the Bode diagram of Figure 7–135, we find the
damping ratio zand undamped natural frequency v
n
of the quadratic term to be
z=0.1,
  
v
n
=2 rad /H20862secv
b
=v
n
A1-2z
2
+24z
4
-4z
2
+2
B
1/H208622
v
2
b
=v
2
n
A1-2z
2
+24z
4
-4z
2
+2
B
a
v
b
v
n
b
2
=-2z
2
+1;24z
4
-4z
2
+2
1=0.5
e
c
1-
a
v
b
v
n
b
2
d
2
+4z
2
a
v
b
v
n
b
2
f
Openmirrors.com
Example Problems and Solutions 54140
20
–20
dB0
–40
–60
–80
0.1 0.2 0.4 0.6 1 4 2 6 10 20 60 40 100–270°–180°–90°0°
v in rad/secFigure 7–135
Bode diagram of theopen-loop transfer
function of a unity-
feedback controlsystem.
Noting that there is another corner frequency at v=0.5 rad /H20862sec and the slope of the magnitude
curve in the low-frequency region is –40 dB /H20862decade, G(jv)can be tentatively determined as
follows:
Since, from Figure 7–135 we find @G(j0.1)@=40 dB, the gain value Kcan be determined to be
unity.Also, the calculated phase curve, versus v, agrees with the given phase curve. Hence,
the transfer function G(s) can be determined to be
A–7–19. A closed-loop control system may include an unstable element within the loop.When the Nyquist
stability criterion is to be applied to such a system, the frequency-response curves for the unsta-ble element must be obtained.
How can we obtain experimentally the frequency-response curves for such an unstable ele-
ment? Suggest a possible approach to the experimental determination of the frequency response
of an unstable linear element.
Solution. One possible approach is to measure the frequency-response characteristics of the un-
stable element by using it as a part of a stable system.G(s) =4(2s +1)
s2As2+0.4s +4B/G(jv)G(jv)=Kajv
0.5+1b
(jv)2cajv
2b2
+0.1(jv)+1d
542
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Consider the system shown in Figure 7–136. Suppose that the element G
1
(s)is unstable. The
complete system may be made stable by choosing a suitable linear element G
2
(s). We apply a si-
nusoidal signal at the input. At steady state, all signals in the loop will be sinusoidal. We measure
the signals e(t), the input to the unstable element, and x(t), the output of the unstable element.
By changing the frequency [and possibly the amplitude for the convenience of measuring e(t)
andx(t)] of the input sinusoid and repeating this process, it is possible to obtain the frequency re-
sponse of the unstable linear element.
A–7–20. Show that the lead network and lag network inserted in cascade in an open loop act as
proportional-plus-derivative control (in the region of small v) and proportional-plus-integral
control (in the region of large v), respectively.
Solution. In the region of small v, the polar plot of the lead network is approximately the same
as that of the proportional-plus-derivative controller. This is shown in Figure 7–137(a).
Similarly, in the region of large v, the polar plot of the lag network approximates the
proportional-plus-integral controller, as shown in Figure 7–137(b).
A–7–21. Consider a lag–lead compensator G
c
(s)defined by
Show that at frequency v
1
,where
the phase angle of G
c
(jv)becomes zero. (This compensator acts as a lag compensator for
0<v<v
1
and acts as a lead compensator for v
1
<v<q.) (Refer to Figure 7–109.)v
1
=1
1T
1
 
T
2
G
c
(s)=K
c
a
s+1
T
1
ba
s+1
T
2
b
a
s+b
T
1
ba
s+1
bT
2
b
G
1
(s) G
2
(s)re x c
+–
Figure 7–136
Control system.
Im Im
Re 0PD controller
Lead network
av = 0 v =`v =`v  = 0
(a) (b)PI controller1Re 01
Lag network1
b
Figure 7–137
(a) Polar plots of a
lead network and a
proportional-plus-
derivative controller;
(b) polar plots of a
lag network and a
proportional-plus-
integral controller.
Openmirrors.com
Example Problems and Solutions 543Solution. The angle of Gc(jv)is given by
At we have
Since
or
and also
we have
Thus, the angle of GcAjv1Bbecomes 0° at 
A–7–22. Consider the control system shown in Figure 7–138. Determine the value of gain Ksuch that the
phase margin is 60°. What is the gain margin with this value of gain K?
Solution. The open-loop transfer function is
 =K(10s +1)
s3+1.5s2+0.5s G(s) =K s+0.1
s+0.5 10
s(s+1)v=v1=1/H208621T1 T2./GcAjv1B=0°tan-11
bBT1
T2+tan-1bBT2
T1=90°tan-1
BT1
T2+tan-1
BT2
T1=90°tan  atan-1
BT1
T2+tan-1
BT2
T1b=BT1
T2+BT2
T1
1-BT1
T2BT2
T1=q/GcAjv1B=tan-1
BT1
T2+tan-1
BT2
T1-tan-1 1
b BT1
T2-tan-1bBT2
T1v=v1=1/H208621T1 T2, =tan-1vT1+tan-1vT2-tan-1vT1/H20862b-tan-1vT2 b /Gc(jv)=njv+1
T1+njv+1
T2-njv+b
T1-njv+1
bT2
Ks+ 0.1
s+ 0.510
s(s+ 1)+–
Figure 7–138
Control system.
544
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
MATLAB Program 7–22
num = [10  1];
den = [1  1.5  0.5  0];
bode(num,den)
title('Bode Diagram of G(s) = (10s + 1)/[s(s + 0.5)(s + 1)]')
Let us plot the Bode diagram of G(s) when K=1 . MATLAB Program 7–22 may be used for this
purpose. Figure 7–139 shows the Bode diagram produced by this program. From this diagram the
required phase margin of 60° occurs at the frequency v=1.15 rad /H20862sec. The magnitude of G(jv)
at this frequency is found to be 14.5 dB. Then gain Kmust satisfy the following equation:
or
K=0.18820logK=-14.5 dB
Frequency (rad/sec)Bode Diagram of G(s) = (10 s + 1)/[ s(s + 0.5)( s + 1)]
−200−150−50
−100−50
Phase (deg); Magnitude (dB)
0100
50
10
−3
10
−2
10
−1
10
0
10
1
Figure 7–139
Bode diagram of
G(s) =10s +1
s(s+0.5)(s +1).Thus, we have determined the value of gain K. Since the angle curve does not cross the –180 ° line,
the gain margin is ±qdB.
To verify the results, let us draw a Nyquist plot of Gfor the frequency range
w = 0.5:0.01:1.15
The end point of the locus (v=1.15 rad /H20862sec)will be on a unit circle in the Nyquist plane.To check
the phase margin, it is convenient to draw the Nyquist plot on a polar diagram, using polar grids.
To draw the Nyquist plot on a polar diagram, first define a complex vector zby
z = re + i *im = re
iu
where randu(theta) are given by
r = abs(z)
theta = angle(z)
The absmeans the square root of the sum of the real part squared and imaginary part squared;
angle means tan
–1
(imaginary part/real part).
Openmirrors.com
Example Problems and Solutions 545If we use the command
polar(theta,r)
MATLAB will produce a plot in the polar coordinates. Subsequent use of the grid command
draws polar grid lines and grid circles.
MATLAB Program 7–23 produces the Nyquist plot of G(jv), where vis between 0.5 and
1.15 rad /H20862sec.The resulting plot is shown in Figure 7–140. Notice that point G(j1.15) lies on the unit
MATLAB Program 7–23
%*****Nyquist plot in rectangular coordinates*****
num = [1.88  0.188];
den = [1  1.5  0.5  0];w = 0.5:0.01:1.15;[re,im,w] = nyquist(num,den,w);
%*****Convert rectangular coordinates into polar coordinates
% by defining z, r, theta as follows*****
z = re + i*im;
r = abs(z);theta = angle(z);
%*****To draw polar plot, enter command 'polar(theta,r)'*****polar(theta,r)
text(-1,3,'Check of Phase Margin')text(0.3,-1.7,'Nyquist plot')text(-2.2,-0.75,'Phase margin')text(-2.2,-1.1,'is 60 degrees')text(1.45,-0.7,'Unit circle')
Nyquist plotPhase margin
is 60 degreesUnit circle
27024021018015012090
60
30
0
3003302
1
0.5Check of Phase Margin
2.5
1.5
Figure 7–140
Nyquist plot of G(jv)showing that 
the phase margin is 60°.
circle, and the phase angle of this point is –120 °. Hence, the phase margin is 60°. The fact that
point G(j1.15) is on the unit circle verifies that at v=1.15 rad /H20862sec the magnitude is equal to 1
or 0 dB. (Thus, v=1.15 is the gain crossover frequency.) Thus, K=0.188 gives the desired phase
margin of 60°.
Note that in writing ‘text’ in the polar diagram we enter the textcommand as follows:
text(x,y,' ')
For example, to write ‘Nyquist plot’ starting at point (0.3, –1.7) , enter the command
text(0.3, –1.7,'Nyquist plot')
The text is written horizontally on the screen.
A–7–23. If the open-loop transfer function G(s) involves lightly damped complex-conjugant poles, then
more than one Mlocus may be tangent to the G(jv)locus.
Consider the unity-feedback system whose open-loop transfer function is
(7–32)
Draw the Bode diagram for this open-loop transfer function. Draw also the log-magnitude-versus-
phase plot, and show that two Mloci are tangent to the G(jv)locus. Finally, plot the Bode diagram
for the closed-loop transfer function.
Solution. Figure 7–141 shows the Bode diagram of G(jv). Figure 7–142 shows the log-magni-
tude-versus-phase plot of G(jv). It is seen that the G(jv)locus is tangent to the M=8 -dB locus
atv=0.97 rad /H20862sec, and it is tangent to the M=–4 -dB locus at v=2.8 rad /H20862sec.G(s) =9
s(s+0.5)As
2
+0.6s +10B
546
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
40
20
0dB
–20
–40
0/H11034
–90/H11034
–180/H11034
–270/H11034
–360/H11034
0.1 0.2 0.4 1 2 4 10
v in rad/sec
Figure 7–141
Bode diagram of
G(s) given by
Equation (7–32).
Openmirrors.com
Example Problems and Solutions 547Figure 7–143 shows the Bode diagram of the closed-loop transfer function. The magnitude
curve of the closed-loop frequency response shows two resonant peaks. Note that such a caseoccurs when the closed-loop transfer function involves the product of two lightly damped second-order terms and the two corresponding resonant frequencies are sufficiently separated from each
other. As a matter of fact, the closed-loop transfer function of this system can be written
 =9
As2+0.487s +1BAs2+0.613s +9B C(s)
R(s)=G(s)
1+G(s)30
2418
12
6
0
–18–12–6
–360/H11034 –270/H11034 –180/H11034 –90/H11034M= 0.5 dB
M=–2 dB
M= 8 dBM= 2 dB
M=–4 dB0.1
0.3
0.5
1
1.5 2 2.53
3.5
GGin dB
Figure 7–142
Log-magnitude-versus-phase plot of
G(s) given by
Equation (7–32).
20
0
–20
–40
0°
–90°
–180°
–270°
–360°
0.1 0.2 0.4 0.6 1 2 4 6 10
v in rad/secdB
Figure 7–143
Bode diagram of
where G(s) is given
by Equation (7–32).G(s) /H20862C1+G(s)D,
Clearly, the denominator of the closed-loop transfer function is a product of two lightly damped
second-order terms (the damping ratios are 0.243 and 0.102), and the two resonant frequencies are
sufficiently separated.
A–7–24. Consider the system shown in Figure 7–144(a). Design a compensator such that the closed-loop
system will satisfy the requirements that the static velocity error constant =20 sec
–1
,phase
margin =50 °, and gain margin G10 dB.
Solution. To satisfy the requirements, we shall try a lead compensator G
c
(s)of the form
(If the lead compensator does not work, then we need to employ a compensator of different
form.) The compensated system is shown in Figure 7–144(b).
Define
where K= K
c
a. The first step in the design is to adjust the gain Kto meet the steady-state per-
formance specification or to provide the required static velocity error constant. Since the static ve-
locity error constant K
v
is given as 20 sec
–1
, we have
or
K=2
With K=2, the compensated system will satisfy the steady-state requirement.
We shall next plot the Bode diagram of
G
1
(s)=20
s(s+1) =10K =20 =lim
sS0
 s10K
s(s+1) =lim
sS0
s Ts+1
aTs+1 G
1
(s) K
v
=lim
sS0
sG
c
(s)G(s)G
1
(s)=KG(s) =10K
s(s+1) =K
c
s+1
T
s+1
aT G
c
(s)=K
c
 
a Ts+1
aTs+1
548
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
G
c
(s)
G(s) G(s)10
s(s+ 1)
(b)
10
s(s+ 1)
(a)
+–
+–
Figure 7–144
(a) Control system;
(b) compensated
system.
Openmirrors.com
Example Problems and Solutions 549MATLAB Program 7–24 produces the Bode diagram shown in Figure 7–145. From this plot, the
phase margin is found to be 14°. The gain margin is ±qdB.
Frequency (rad/sec)Bode Diagram of G1(s) = 20/[ s(s + 1)]
−200−100
−150−50−100Phase (deg); Magnitude (dB)50
−500
10−1100101102Figure 7–145
Bode diagram ofG
1(s).MATLAB Program 7–24
num = [20];
den = [1  1  0];w = logspace(-1,2,100);bode(num,den,w)title('Bode Diagram of G1(s) = 20/[s(s + 1)]')
Since the specification calls for a phase margin of 50°, the additional phase lead necessary to
satisfy the phase-margin requirement is 36°. A lead compensator can contribute this amount.
Noting that the addition of a lead compensator modifies the magnitude curve in the Bode di-
agram, we realize that the gain crossover frequency will be shifted to the right.We must offset theincreased phase lag of G
1(jv)due to this increase in the gain crossover frequency.Taking the shift
of the gain crossover frequency into consideration, we may assume that fm,the maximum phase
lead required, is approximately 41°. (This means that approximately 5° has been added to com-
pensate for the shift in the gain crossover frequency.) Since
fm=41 ° corresponds to a=0.2077. Note that a=0.21 corresponds to fm=40.76 °. Whether
we choose fm=41 ° or fm=40.76 ° does not make much difference in the final solution. Hence,
let us choose a=0.21.sinfm=1-a
1+a
Once the attenuation factor ahas been determined on the basis of the required phase-lead
angle, the next step is to determine the corner frequencies v=1/T andv=1/(aT)of the lead
compensator. Notice that the maximum phase-lead angle f
m
occurs at the geometric mean of the
two corner frequencies, or 
The amount of the modification in the magnitude curve at due to the inclusion
of the term (Ts+1)/( aTs+1) is
Note that
We need to find the frequency point where, when the lead compensator is added, the total mag-
nitude becomes 0 dB.
From Figure 7–145 we see that the frequency point where the magnitude of G
1
(jv)is
–6.7778 dB occurs between v=1 and 10 rad /H20862sec. Hence, we plot a new Bode diagram of
G
1
(jv)in the frequency range between v=1 and 10 to locate the exact point where
G
1
(jv)=–6.7778 dB. MATLAB Program 7–25 produces the Bode diagram in this frequency
range, which is shown in Figure 7–146. From this diagram, we find the frequency point where
occurs at v=6.5686 rad /H20862sec. Let us select this frequency to be the new
gain crossover frequency, or v
c
=6.5686 rad /H20862sec. Noting that this frequency corresponds to
or
we obtain
and
1
aT=v
c
1a
=6.5686
10.21
=14.33391
T=v
c
1a
=6.568610.21
=3.0101v
c
=1
1a
T1/H20862A1a
TB,@G
1
(jv)@=-6.7778 dB1
1a
=1
10.21
=6.7778  dB
2
1+jvT
1+jvaT
2
v=1
1a
T
=
4
1+j1
1a
1+ja1
1a
4
=1
1a
v=1/H20862A1a
TBv=1/H20862A1a
TB.
550
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
MATLAB Program 7–25
num = [20];
den = [1  1  0];
w = logspace(0,1,100);
bode(num,den,w)
title('Bode Diagram of G1(s) = 20/[s(s + 1)]')
Openmirrors.com
Example Problems and Solutions 551The lead compensator thus determined is
where Kcis determined as
Thus, the transfer function of the compensator becomes
MATLAB Program 7–26 produces the Bode diagram of this lead compensator, which is shown
in Figure 7–147.Gc(s)=9.5238s+3.0101
s+14.3339=20.3322 s+1
0.06976 s+1Kc=K
a=2
0.21=9.5238Gc(s)=Kcs+3.0101
s+14.3339=Kca0.3322 s+1
0.06976 s+1Frequency (rad/sec)Bode Diagram of G1(s) = 20/[ s(s + 1)]
−180−140−130
−150
−160
−170−120−20−100Phase (deg); Magnitude (dB)40
30
20
10
100101Figure 7–146
Bode diagram ofG
1(s).
MATLAB Program 7–26
numc = [9.5238  28.6676];
denc = [1  14.3339];w = logspace(-1,3,100);bode(numc,denc,w)title('Bode Diagram of Gc(s) = 9.5238(s + 3.0101)/(s + 14.3339')
552
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Frequenc
y
 (rad/sec)Bode Diagram of Gc(s) = 9.5238( s + 3.0101)/( s + 14.3339)
040
30
20
1060
505
Phase (deg); Magnitude (dB)
1020
15
10
−1
10
0
10
1
10
2
10
3
Figure 7–147
Bode diagram of
G
c
(s).
The open-loop transfer function of the designed system is
MATLAB Program 7–27 will produce the Bode diagram of G
c
(s)G(s) , which is shown in 
Figure 7–148.=95.238 s+286.6759
s
3
+15.3339 s
2
+14.3339 sG
c
(s)G(s) =9.5238s+3.0101
s+14.333910
s(s+1)
MATLAB Program 7–27
num = [95.238  286.6759];
den = [1  15.3339  14.3339  0];
sys = tf(num,den);
w = logspace( –1,3,100);
bode(sys,w);
grid;
title('Bode Diagram of Gc(s)G(s)')
[Gm,pm,wcp,wcg] = margin(sys);
GmdB = 20*log10(Gm);
[Gmdb,pm,wcp,wcg]
ans = 
Inf    49.4164    Inf    6.5686
Openmirrors.com
Example Problems and Solutions 553From MATLAB Program 7–27 and Figure 7–148 it is clearly seen that the phase margin is ap-
proximately 50° and the gain margin is ±q dB. Since the static velocity error constant Kvis
20 sec–1, all the specifications are met. Before we conclude this problem, we need to check the
transient-response characteristics.
Unit-Step Response: We shall compare the unit-step response of the compensated system with
that of the original uncompensated system.
The closed-loop transfer function of the original uncompensated system is
The closed-loop transfer function of the compensated system is
MATLAB Program 7–28 produces the unit-step responses of the uncompensated and compen-
sated systems. The resulting response curves are shown in Figure 7–149. Clearly, the compensat-ed system exhibits a satisfactory response. Note that the closed-loop zero and poles are located
as follows:
Zero at s=–3.0101
Poles at s=–5.2880 ;j5.6824 ,s=–4.7579
Unit-Ramp Response: It is worthwhile to check the unit-ramp response of the compensated
system. Since K
v=20 sec–1, the steady-state error following the unit-ramp input will beC(s)
R(s)=95.238 s+286.6759
s3+15.3339 s2+110.5719 s+286.6759C(s)
R(s)=10
s2+s+10Frequenc y (rad/sec)Bode Diagram of Gc(s)G(s)
−200−100
−150−50−100Phase (deg); Magnitude (dB)−5050
0
10−1100101102103Figure 7–148
Bode diagram ofG
c(s)G(s).
MATLAB Program 7–29 produces the unit-ramp response curves. [Note that the unit-ramp
response is obtained as the unit-step response of C(s)/sR(s) .] The resulting curves are shown in
Figure 7–150.The compensated system has a steady-state error equal to one-half that of the orig-
inal uncompensated system.
554
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
Outputs
1.8
0.8
0
1.2
1.6
0.6
0.2
1
1.4
0.4
t Sec01
6 4
5
2
3
Unit-Step Responses of Uncompensated System and Compensated System
Uncompensated system
Compensated system
Figure 7–149
Unit-step responses
of the uncompensated
and compensated
systems.
MATLAB Program 7–28
%*****Unit-step responses*****
num1 = [10];
den1 = [1  1  10];
num2 = [95.238  286.6759];
den2 = [1  15.3339  110.5719  286.6759];
t = 0:0.01:6;
[c1,x1,t] = step(num1,den1,t);
[c2,x2,t] = step(num2,den2,t);
plot(t,c1,'.',t,c2,'-')
grid;
title('Unit-Step Responses of Uncompensated System and Compensated System')
xlabel('t Sec');
ylabel('Outputs')
text(1.70,1.45,'Uncompensated System')
text(1.1,0.5,'Compensated System')
1/K
v
=0.05 . The static velocity error constant of the uncompensated system is 10 sec
–1
. Hence,
the original uncompensated system will have twice as large a steady-state error in following the
unit-ramp input.
Openmirrors.com
Example Problems and Solutions 555A–7–25. Consider a unity-feedback system whose open-loop transfer function is
Design a lag–lead compensator Gc(s)such that the static velocity error constant is 10 sec–1, the
phase margin is 50°, and the gain margin is 10 dB or more.G(s) =K
s(s+1)(s +4)MATLAB Program 7–29
%*****Unit-ramp responses*****num1 = [10];
den1 = [1  1  10  0];num2 = [95.238  286.6759];den2 = [1  15.3339  110.5719  286.6759  0];t = 0:0.01:3;[c1,x1,t] = step(num1,den1,t);[c2,x2,t] = step(num2,den2,t);plot(t,c1,'.',t,c2,'-',t,t,'--');grid;title('Unit-Ramp Responses of Uncompensated System and Compensated System');xlabel('t Sec');ylabel('Outputs')text(1.2,0.65,'Uncompensated System')text(0.1,1.3,'Compensated System')
Outputs3
022.5
1
0.51.5
t Sec0 0.5 3 2 2.5 1 1.5Unit-Ramp Responses of Uncompensated System and Compensated System
Compensated System
Uncompensated SystemFigure 7–150
Unit-ramp responsesof the uncompensated
and compensated
systems.
Solution. We shall design a lag–lead compensator of the form
Then the open-loop transfer function of the compensated system is G
c
(s)G(s) . Since the gain K
of the plant is adjustable, let us assume that K
c
=1 . Then From the requirement
on the static velocity error constant, we obtain
Hence,
K=40
We shall first plot a Bode diagram of the uncompensated system with K=40 . MATLAB Pro-
gram 7–30 may be used to plot this Bode diagram.The diagram obtained is shown in Figure 7–151. =K
4=10 K
v
=lim
sS0
sG
c
(s)G(s) =lim
sS0
sG
c
(s) K
s(s+1)(s +4)lim
sS0
G
c
(s)=1.G
c
(s)=K
c
a
s+1
T
1
ba
s+1
T
2
b
a
s+b
T
1
ba
s+1
bT
2
b
556
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
MATLAB Program 7–30
num = [40];
den = [1  5  4  0];
w = logspace(-1,1,100);
bode(num,den,w)
title('Bode Diagram of G(s) = 40/[s(s + 1)(s + 4)]')
Frequency (rad/sec)
Bode Diagram of G(s) = 40/[ s(s + 1)( s + 4)]
−250−100
−150
−200−50−40−200
Phase (deg); Magnitude (dB)
40
20
10
−1
10
0
10
1
Figure 7–151
Bode diagram of
G(s) =40/H20862Cs(s+1)(s +4)D.
Openmirrors.com
Example Problems and Solutions 557From Figure 7–151, the phase margin of the gain-adjusted but uncompensated system is
found to be –16°, which indicates that this system is unstable. The next step in the design of a
lag–lead compensator is to choose a new gain crossover frequency. From the phase-angle curveforG(jv), we notice that the phase crossover frequency is v=2 rad /H20862sec. We may choose the
new gain crossover frequency to be 2 rad /H20862sec so that the phase-lead angle required at
v=2 rad /H20862sec is about 50°. A single lag–lead compensator can provide this amount of phase-
lead angle quite easily.
Once we choose the gain crossover frequency to be 2 rad /H20862sec, we can determine the corner
frequencies of the phase-lag portion of the lag–lead compensator. Let us choose the corner
frequency (which corresponds to the zero of the phase-lag portion of the compensator)to be 1 decade below the new gain crossover frequency, or at v=0.2 rad /H20862sec. For another corner
frequency we need the value of b. The value of bcan be determined from the
consideration of the lead portion of the compensator, as shown next.
For the lead compensator, the maximum phase-lead angle f
mis given by
Notice that b=10 corresponds to fm=54.9 °. Since we need a 50° phase margin, we may
choose b=10 . (Note that we will be using several degrees less than the maximum angle, 54.9°.)
Thus,
b=10
Then the corner frequency (which corresponds to the pole of the phase-lag portion
of the compensator) becomes
v=0.02
The transfer function of the phase-lag portion of the lag–lead compensator becomes
The phase-lead portion can be determined as follows: Since the new gain crossover frequency
isv=2 rad /H20862sec, from Figure 7–151, @G(j2)@is found to be 6 dB. Hence, if the lag–lead compen-
sator contributes –6dB at v=2 rad /H20862sec, then the new gain crossover frequency is as desired. From
this requirement, it is possible to draw a straight line of slope 20 dB/decade passing through the
point (2 rad /H20862sec,–6dB). (Such a line has been manually drawn on Figure 7–151.) The intersec-
tions of this line and the 0-dB line and –20-dB line determine the corner frequencies. From this
consideration, the corner frequencies for the lead portion can be determined as v=0.4 rad /H20862sec
andv=4 rad /H20862sec. Thus, the transfer function of the lead portion of the lag–lead compensator
becomes
Combining the transfer functions of the lag and lead portions of the compensator, we can obtain
the transfer function Gc(s)of the lag–lead compensator. Since we chose Kc=1 , we have
Gc(s)=s+0.4
s+4s+0.2
s+0.02=(2.5s+1)(5s+1)
(0.25s+1)(50s+1)s+0.4
s+4=1
10a2.5s +1
0.25s +1bs+0.2
s+0.02=10a5s+1
50s +1bv=1/H20862AbT2Bsinfm=b-1
b+1v=1/H20862AbT2B,v=1/H20862T2
The open-loop transfer function of the compensated system is
Using MATLAB Program 7–32 the magnitude and phase-angle curves of the designed open-loop
transfer function G
c
(s)G(s) can be obtained as shown in Figure 7–153. Note that the denominator
polynomial den1 was obtained using the conv command, as follows: =40s
2
+24s +3.2
s
5
+9.02s
4
+24.18s
3
+16.48s
2
+0.32s G
c
(s)G(s) =(s+0.4)(s +0.2)
(s+4)(s +0.02) 40
s(s+1)(s +4)
558
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
MATLAB Program 7–31
numc = [1  0.6  0.08];
denc = [1  4.02  0.08];
bode(numc,denc)
title('Bode Diagram of Lag–Lead Compensator')
Frequency (rad/sec)Bode Diagram of Lag-Lead Compensator
−50050−20−15
Phase (deg); Magnitude (dB)
−100
−5
10
−3
10
−2
10
−1
10
0
10
1
10
2
Figure 7–152
Bode diagram of the
designed lag–lead
compensator.
a = [1  4.02  0.08];
b = [1  5  4  0];
conv(a,b)
ans = 
1.0000  9.0200  24.1800  16.4800  0.320000  0
The Bode diagram of the lag–lead compensator G
c
(s)can be obtained by entering MATLAB
Program 7–31 into the computer. The resulting plot is shown in Figure 7–152.
Openmirrors.com
Example Problems and Solutions 559Since the phase margin of the compensated system is 50°, the gain margin is 12 dB, and the
static velocity error constant is 10 sec–1, all the requirements are met.
We shall next investigate the transient-response characteristics of the designed system.
Unit-Step Response: Noting that
we have
To determine the denominator polynomial with MATLAB, we may proceed as follows:
Define
 c(s) =40(s +0.4)(s +0.2) =40s2+24s +3.2 b(s) =s(s+1)(s +4)=s3+5s2+4s a(s) =(s+4)(s +0.02) =s2+4.02s +0.08 =40(s +0.4)(s +0.2)
(s+4)(s +0.02)s(s +1)(s +4)+40(s +0.4)(s +0.2) C(s)
R(s)=Gc(s)G(s)
1+Gc(s)G(s)Gc(s)G(s) =40(s +0.4)(s +0.2)
(s+4)(s +0.02)s(s +1)(s +4)MATLAB Program 7–32
num1 = [40  24  3.2];
den1 = [1  9.02  24.18  16.48  0.32  0];bode(num1,den1)title('Bode Diagram of Gc(s)G(s)')
Frequency (rad/sec)Bode Diagram of Gc(s)G(s)
−300−250−200−150−100−500−100Phase (deg); Magnitude (dB)−50050100
10−410−310−210−1100101102Figure 7–153
Bode diagram of theopen-loop transfer
function G
c(s)G(s)
of the compensatedsystem.
Then we have
a = [1  4.02  0.08]
b = [1  5  4  0]
c = [40  24  3.2]
Using the following MATLAB program, we obtain the denominator polynomial.
560
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
a = [1  4.02  0.08];
b = [1  5  4  0];
c = [40  24  3.2];
p = [conv(a,b)] + [0  0  0  c]
p =
1.0000  9.0200  24.1800  56.4800  24.3200  3.2000
MATLAB Program 7–33
%*****Unit-step response****
num = [40  24  3.2];
den = [1  9.02  24.18  56.48  24.32  3.2];
t = 0:0.2:40;
step(num,den,t)
grid
title('Unit-Step Response of Compensated System')
Amplitude
1.2
0.4
0
1
0.2
0.6
0.8Unit-Step Response of Compensated System
Time (sec)01 0
5
40 30
35
25
15
20
Figure 7–154
Unit-step response
curve of the
compensated system.MATLAB Program 7–33 is used to obtain the unit-step response of the compensated system.
The resulting unit-step response curve is shown in Figure 7–154. (Note that the gain-adjusted but
uncompensated system is unstable.)
Openmirrors.com
Problems 561Unit-Ramp Response: The unit-ramp response of the compensated system may be obtained by
entering MATLAB Program 7–34 into the computer. Here we converted the unit-ramp responseofG
cG/A1+ GcGBinto the unit-step response of GcG/CsA1+ GcGBD. The unit-ramp response
curve obtained using this program is shown in Figure 7–155.
MATLAB Program 7–34
%*****Unit-ramp response*****num = [40  24  3.2];
den = [1  9.02  24.18  56.48  24.32  3.2  0];t = 0:0.05:20;c = step(num,den,t);plot(t,c,'-',t,t,'.')gridtitle('Unit-Ramp Response of Compensated System')xlabel('Time (sec)')ylabel('Unit-Ramp Input and Output c(t)')Unit-Ramp Input and Output c(t)20
8
01218
4
216
1014
6
Time (sec)04 2 20 14 18 12 16 8 6 10Unit-Ramp Response of Compensated System
Figure 7–155
Unit-ramp responseof the compensated
system.
PROBLEMS
B–7–1. Consider the unity-feedback system with the open-
loop transfer function:
G(s) =10
s+1Obtain the steady-state output of the system when it is sub-
jected to each of the following inputs:
(a) r(t)= sin(t+30 °)
(b) r(t)=2 cos(2t-45 °)
(c) r(t)= sin(t+30 °)- 2 cos (2t-45 °)
562
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
B–7–2. Consider the system whose closed-loop transfer
function is
Obtain the steady-state output of the system when it is sub-
jected to the input r(t)=R sinvt.
B–7–3. Using MATLAB, plot Bode diagrams of G
1
(s)and
G
2
(s)given below.
G
1
(s)is a minimum-phase system and G
2
(s)is a nonmini-
mum-phase system.
B–7–4. Plot the Bode diagram of
B–7–5. Given
show that
B–7–6. Consider a unity-feedback control system with the
following open-loop transfer function:
This is a nonminimum-phase system. Two of the three
open-loop poles are located in the right-half splane as
follows:
Plot the Bode diagram of G(s) with MATLAB. Explain why
the phase-angle curve starts from 0° and approaches ±180 °. s=0.2328 -j0.7926 s=0.2328 +j0.7926 Open-loop poles at s=-1.4656G(s) =s+0.5
s
3
+s
2
+1@GAjv
n
B@=1
2zG(s) =v
2
n
s
2
+2zv
n
 
s+v
2
n
G(s) =10As
2
+0.4s +1B
sAs
2
+0.8s +9B G
2
(s)=1-s
1+2s G
1
(s)=1+s
1+2sC(s)
R(s)=KAT
2
 
s+1B
T
1
 
s+1B–7–7. Sketch the polar plots of the open-loop transfer
function
for the following two cases:
(a)
(b)
B–7–8. Draw a Nyquist locus for the unity-feedback control
system with the open-loop transfer function
Using the Nyquist stability criterion, determine the stabili-
ty of the closed-loop system.
B–7–9. A system with the open-loop transfer function
is inherently unstable.This system can be stabilized by adding
derivative control. Sketch the polar plots for the open-loop
transfer function with and without derivative control.
B–7–10. Consider the closed-loop system with the following
open-loop transfer function:
Plot both the direct and inverse polar plots of G(s)H(s)
with K=1 and K=10 . Apply the Nyquist stability crite-
rion to the plots, and determine the stability of the system
with these values of K.
B–7–11. Consider the closed-loop system whose open-loop
transfer function is
Find the maximum value of Kfor which the system is stable.
B–7–12. Draw a Nyquist plot of the following G(s) :
B–7–13. Consider a unity-feedback control system with the
following open-loop transfer function:
Draw a Nyquist plot of G(s) and examine the stability of
the system.G(s) =1
s
3
+0.2s
2
+s+1G(s) =1
sAs
2
+0.8s +1BG(s)H(s) =Ke
-2s
sG(s)H(s) =10K(s +0.5)
s
2
(s+2)(s +10)G(s)H(s) =K
s
2
AT
1
 
s+1BG(s) =K(1 -s)
s+1T7T
a
70,
  
T7T
b
70T
a
7T70,
  
T
b
7T70G(s)H(s) =KAT
a
 
s+1BAT
b
 
s+1B
s
2
(Ts +1)
Openmirrors.com
Problems 563B–7–14. Consider a unity-feedback control system with the
following open-loop transfer function:
Draw a Nyquist plot of G(s) and examine the stability of
the closed-loop system.
B–7–15. Consider the unity-feedback system with the fol-
lowing G(s) :
Suppose that we choose the Nyquist path as shown in Fig-
ure 7–156. Draw the corresponding G(jv)locus in the G(s)
plane. Using the Nyquist stability criterion, determine thestability of the system.G(s) =1
s(s-1)G(s) =s2+2s+1
s3+0.2s2+s+1
B–7–16. Consider the closed-loop system shown in Figure
7–157. G(s) has no poles in the right-half splane.
If the Nyquist plot of G(s) is as shown in Figure
7–158(a), is this system stable?
If the Nyquist plot is as shown in Figure 7–158(b), is this
system stable?jv
s`
e
Figure 7–156
Nyquist path.
G(s) +–
Figure 7–157
Closed-loop system.B–7–17. A Nyquist plot of a unity-feedback system with the
feedforward transfer function G(s) is shown in Figure 7–159.
IfG(s) has one pole in the right-half splane, is the sys-
tem stable?
IfG(s) has no pole in the right-half splane, but has one
zero in the right-half splane, is the system stable?Figure 7–158
Nyquist plots.
0 –1R eIm
G(jv)
Figure 7–159
Nyquist plot.0R eIm
–1
(a)
ReIm
0 –1
(b)
B–7–18. Consider the unity-feedback control system with
the following open-loop transfer function G(s) :
Plot Nyquist diagrams of G(s) forK=1, 10 , and 100.
B–7–19. Consider a negative-feedback system with the fol-
lowing open-loop transfer function:
Plot the Nyquist diagram of G(s). If the system were a pos-
itive-feedback one with the same open-loop transfer func-
tion G(s), what would the Nyquist diagram look like?
B–7–20. Consider the control system shown in Figure 7–160.
Plot Nyquist diagrams of G(s), where
fork=0.3, 0.5 , and 0.7. =10
s
3
+6s
2
+(5+10k)s G(s) =10
sC(s+1)(s +5)+10kDG(s) =2
s(s+1)(s +2)G(s) =K(s +2)
s(s+1)(s +10)
564
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
k
1
s
10
(s+ 1) (s+ 5)
+–
+–
Figure 7–160
Control system.B–7–22. Referring to Problem B–7–21 , it is desired to plot
only for v>0 . Write a MATLAB program
to produce such a plot.
If it is desired to plot for –q<v<q,
what changes must be made in the MATLAB program?
B–7–23. Consider the unity-feedback control system whose
open-loop transfer function is
Determine the value of aso that the phase margin is 45°.
B–7–24. Consider the system shown in Figure 7–161. Draw
a Bode diagram of the open-loop transfer function G(s) .
Determine the phase margin and gain margin.G(s) =as+1
s
2
Y
1
(jv)/H20862U
1
(jv)Y
1
(jv)/H20862U
1
(jv)
G(s)
25
s(s+ 1) (s+ 10)
+–
Figure 7–161
Control system.
G(s)
20(s+ 1)
s(s
2
+ 2s+ 10) ( s+ 5)
+–
Figure 7–162
Control system.B–7–21. Consider the system defined by
There are four individual Nyquist plots involved in this sys-
tem. Draw two Nyquist plots for the input u
1
in one dia-
gram and two Nyquist plots for the input u
2
in another
diagram. Write a MATLAB program to obtain these two
diagrams. 
B
y
1
y
2
R
=
B
1
00
1
RB
x
1
x
2
R
+
B
0
00
0
RB
u
1
u
2
R
 
B
x#
1
x#
2
R
=
B
-1
6.5-1
0
RB
x
1
x
2
R
+
B
1
11
0
RB
u
1
u
2
R
B–7–25. Consider the system shown in Figure 7–162.
Draw a Bode diagram of the open-loop transfer function
G(s) . Determine the phase margin and gain margin with
MATLAB.
Openmirrors.com
Problems 565B–7–26. Consider a unity-feedback control system with the
open-loop transfer function
Determine the value of the gain Ksuch that the phase
margin is 50°. What is the gain margin with this gain K?
B–7–27. Consider the system shown in Figure 7–163. Draw
a Bode diagram of the open-loop transfer function, and
determine the value of the gain Ksuch that the phase
margin is 50°. What is the gain margin of this system withthis gain K?G(s) =K
sAs2+s+4B
10
s(s+ 1)Ks+ 0.1
s+ 0.5+–
Figure 7–163
Control system.B–7–28. Consider a unity-feedback control system whose
open-loop transfer function is
Determine the value of the gain Ksuch that the resonant
peak magnitude in the frequency response is 2 dB, or
Mr=2 dB.
B–7–29. A Bode diagram of the open-loop transfer function
G(s) of a unity-feedback control system is shown in Figure
7–164. It is known that the open-loop transfer function isminimum phase. From the diagram, it can be seen that thereis a pair of complex-conjugate poles at v=2 rad /H20862sec.
Determine the damping ratio of the quadratic term involv-ing these complex-conjugate poles. Also, determine the
transfer function G(s) .G(s) =K
sAs2+s+0.5B
40
20
–20
dB0
–40
–60
–80
0.1 0.2 0.4 0.6 1 4 2 6 10 20 60 40 100–270°–180°–90°0°
v in rad/sec
Figure 7–164
Bode diagram of the open-loop transfer function of a unity-
feedback control system.
566
Chapter 7 / Control Systems Analysis and Design by the Frequency-Response Method
B–7–30. Draw Bode diagrams of the PI controller given by
and the PD controller given by
B–7–31. Figure 7–165 shows a block diagram of a space-
vehicle attitude-control system. Determine the proportional
gain constant K
p
and derivative time such that the band-
width of the closed-loop system is 0.4 to 0.5 rad /H20862sec. (Note
that the closed-loop bandwidth is close to the gain crossover
frequency.) The system must have an adequate phase mar-
gin. Plot both the open-loop and closed-loop frequency re-
sponse curves on Bode diagrams.T
d
G
c
(s)=5(1 +0.5s)G
c
(s)=5
a
1+1
2s
b
K
p
(1+T
d
s)1
s
2
+–
G
c
(s)K
s(0.1s+ 1)(s+ 1) 
+–
Figure 7–166
Closed-loop system.B–7–32. Referring to the closed-loop system shown in Fig-
ure 7–166, design a lead compensator G
c
(s)such that the
phase margin is 45°, gain margin is not less than 8 dB, and the
static velocity error constant K
v
is 4.0 sec
–1
. Plot unit-step
and unit-ramp response curves of the compensated system
with MATLAB.
B–7–33. Consider the system shown in Figure 7–167. It is
desired to design a compensator such that the static
velocity error constant is 4 sec
–1
, phase margin is 50°, and
gain margin is 8 dB or more. Plot the unit-step and unit-
ramp response curves of the compensated system with
MATLAB.
G
c
(s)
1Hydraulic servo1
s
Aircraft2s+ 0.1
s
2
+ 0.1s+ 4
Rate gyroC R
+–
Figure 7–167
Control system.
G
c
(s)1
s(s+ 1)(s+ 5) 
+–
Figure 7–168
Control system.B–7–34. Consider the system shown in Figure 7–168. De-
sign a lag–lead compensator such that the static velocity
error constant K
v
is 20 sec
–1
, phase margin is 60°, and gain
margin is not less than 8 dB. Plot the unit-step and unit-
ramp response curves of the compensated system with
MATLAB.Figure 7–165
Block diagram of space-vehicle attitude-control system.
Openmirrors.com
8
567PID Controllers and
Modified PID 
Controllers
8–1 INTRODUCTION
In previous chapters, we occasionally discussed the basic PID controllers. For example,
we presented electronic, hydraulic, and pneumatic PID controllers. We also designedcontrol systems where PID controllers were involved.
It is interesting to note that more than half of the industrial controllers in use today
are PID controllers or modified PID controllers.
Because most PID controllers are adjusted on-site, many different types of tuning
rules have been proposed in the literature. Using these tuning rules, delicate and fine tun-ing of PID controllers can be made on-site. Also, automatic tuning methods have beendeveloped and some of the PID controllers may possess on-line automatic tuningcapabilities. Modified forms of PID control, such as I-PD control and multi-degrees-of-freedom PID control, are currently in use in industry. Many practical methods for bump-less switching (from manual operation to automatic operation) and gain scheduling arecommercially available.
The usefulness of PID controls lies in their general applicability to most control sys-
tems. In particular, when the mathematical model of the plant is not known and there-fore analytical design methods cannot be used, PID controls prove to be most useful. Inthe field of process control systems, it is well known that the basic and modified PID con-trol schemes have proved their usefulness in providing satisfactory control, although inmany given situations they may not provide optimal control.
In this chapter we first present the design of a PID controlled system using Ziegler
and Nichols tuning rules.We next discuss a design of PID controller with the conventional
568
Chapter 8 / PID Controllers and Modified PID Controllers
Plant K
p
(1++ T
d
s)1
T
i
s
+–
Figure 8–1
PID control 
of a plant.
frequency-response approach, followed by the computational optimization approach to
design PID controllers. Then we introduce modified PID controls such as PI-D control
and I-PD control.Then we introduce multi-degrees-of-freedom control systems, which can
satisfy conflicting requirements that single-degree-of-freedom control systems cannot.
(For the definition of multi-degrees-of-freedom control systems, see Section 8–6.)
In practical cases, there may be one requirement on the response to disturbance
input and another requirement on the response to reference input. Often these two re-
quirements conflict with each other and cannot be satisfied in the single-degree-of-
freedom case. By increasing the degrees of freedom, we are able to satisfy both. In this
chapter we present two-degrees-of-freedom control systems in detail.
The computational optimization approach presented in this chapter to design con-
trol systems (such as to search optimal sets of parameter values to satisfy given transient
response specifications) can be used to design both single-degree-of-freedom control sys-
tems and multi-degrees-of-freedom control systems, provided a fairly precice mathe-
matical model of the plant is known.
Outline of the Chapter. Section 8–1 has presented introductory material for the
chapter. Section 8–2 deals with a design of a PID controller with Ziegler–Nichols Rules.
Section 8–3 treats a design of a PID controller with the frequency-response approach.
Section 8–4 presents a computational optimization approach to obtain optimal param-
eter values of PID controllers. Section 8–5 discusses multi-degrees-of-freedom control
systems including modified PID control systems.
8–2 ZIEGLER–NICHOLS RULES FOR TUNING 
PID CONTROLLERS
PID Control of Plants. Figure 8–1 shows a PID control of a plant. If a mathe-
matical model of the plant can be derived, then it is possible to apply various design
techniques for determining parameters of the controller that will meet the transient and
steady-state specifications of the closed-loop system. However, if the plant is so com-
plicated that its mathematical model cannot be easily obtained, then an analytical or
computational approach to the design of a PID controller is not possible.Then we must
resort to experimental approaches to the tuning of PID controllers.
The process of selecting the controller parameters to meet given performance spec-
ifications is known as controller tuning. Ziegler and Nichols suggested rules for tuning
PID controllers (meaning to set values and ) based on experimental step
responses or based on the value of that results in marginal stability when only pro-
portional control action is used. Ziegler–Nichols rules, which are briefly presented in
the following, are useful when mathematical models of plants are not known. (These
rules can, of course, be applied to the design of systems with known mathematicalK
p
T
d
T
i
 
, K
p
 
,
Openmirrors.com
Section 8–2 / Ziegler–Nichols Rules for Tuning PID Controllers 569Plant
u(t) c(t)1Figure 8–2
Unit-step response of a plant.
Tangent line at
inflection point
K
0c(t)
t
LTFigure 8–3
S-shaped responsecurve.models.) Such rules suggest a set of values of and that will give a stable oper-
ation of the system. However, the resulting system may exhibit a large maximum over-shoot in the step response, which is unacceptable. In such a case we need series of finetunings until an acceptable result is obtained. In fact, the Ziegler–Nichols tuning rulesgive an educated guess for the parameter values and provide a starting point for fine tun-ing, rather than giving the final settings for and in a single shot.
Ziegler–Nichols Rules for Tuning PID Controllers. Ziegler and Nichols pro-
posed rules for determining values of the proportional gain integral time and de-rivative time based on the transient response characteristics of a given plant. Suchdetermination of the parameters of PID controllers or tuning of PID controllers can bemade by engineers on-site by experiments on the plant. (Numerous tuning rules for PIDcontrollers have been proposed since the Ziegler–Nichols proposal. They are availablein the literature and from the manufacturers of such controllers.)
There are two methods called Ziegler–Nichols tuning rules: the first method and the
second method. We shall give a brief presentation of these two methods.
First Method. In the first method, we obtain experimentally the response of the
plant to a unit-step input, as shown in Figure 8–2. If the plant involves neither integra-tor(s) nor dominant complex-conjugate poles, then such a unit-step response curve maylook S-shaped, as shown in Figure 8–3. This method applies if the response to a stepinput exhibits an S-shaped curve. Such step-response curves may be generated experi-mentally or from a dynamic simulation of the plant.
The S-shaped curve may be characterized by two constants, delay time Land time
constant T.The delay time and time constant are determined by drawing a tangent line
at the inflection point of the S-shaped curve and determining the intersections of thetangent line with the time axis and line c(t)=K, as shown in Figure 8–3. The transferT
dTi , Kp ,Td Kp ,Ti ,Td Kp ,Ti ,
570
Chapter 8 / PID Controllers and Modified PID Controllers
K
p
Plantr(t) c(t) u(t)
+–
Figure 8–4
Closed-loop system
with a proportional
controller.
function C(s)/U(s) may then be approximated by a first-order system with a transport
lag as follows:
Ziegler and Nichols suggested to set the values of and according to the formula
shown in Table 8–1.
Notice that the PID controller tuned by the first method of Ziegler–Nichols rules
gives
Thus, the PID controller has a pole at the origin and double zeros at s=–1/L.
Second Method. In the second method, we first set and Using the
proportional control action only (see Figure 8–4), increase K
p
from 0 to a critical value
K
cr
at which the output first exhibits sustained oscillations. (If the output does not ex-
hibit sustained oscillations for whatever value K
p
may take, then this method does not
apply.) Thus, the critical gain K
cr
and the corresponding period are experimentally P
cr
T
d
=0. T
i
=q =0.6T 
a
s+1
L
b
2
s =1.2 T
L 
a
1+1
2Ls+0.5Ls
b
 G
c
(s)=K
p
a
1+1
T
i
 
s+T
d
 
s
b
T
d
T
i
 
, K
p
 
,C(s)
U(s)=Ke
-Ls
Ts+1
Type of
Controller
P q 0
PI 0
PID 2L 0.5L 1.2T
LL
0.30.9T
LT
LT
d
T
i
K
p
Table 8–1
Ziegler–Nichols Tuning Rule Based on Step Response
of Plant (First Method)
Openmirrors.com
Section 8–2 / Ziegler–Nichols Rules for Tuning PID Controllers 571Pcr
0 tc(t)
Figure 8–5
Sustained oscillationwith period 
( is measured in
sec.)P
cr Pcr .
Type of
Controller
P 0.5 Kcr q 0
PI 0.45 Kcr 0
PID 0.6 Kcr 0.125Pcr 0.5Pcr1
1.2PcrTd Ti KpTable 8–2 Ziegler–Nichols Tuning Rule Based on Critical Gain
Kcrand Critical Period (Second Method) Pcrdetermined (see Figure 8–5). Ziegler and Nichols suggested that we set the values of
the parameters and according to the formula shown in Table 8–2. Td Kp ,Ti ,
Notice that the PID controller tuned by the second method of Ziegler–Nichols rules
gives
Thus, the PID controller has a pole at the origin and double zeros at 
Note that if the system has a known mathematical model (such as the transfer func-
tion), then we can use the root-locus method to find the critical gain Kcrand the fre-
quency of the sustained oscillations vcr, where These values can be found
from the crossing points of the root-locus branches with the jvaxis. (Obviously, if the
root-locus branches do not cross the jvaxis, this method does not apply.)2p/H20862vcr=Pcr .s=-4/H20862Pcr . =0.075Kcr Pcr as+4
Pcrb2
s =0.6Kcra1+1
0.5Pcr s+0.125Pcr sb Gc(s)=Kpa1+1
Ti s+Td sb
572
Chapter 8 / PID Controllers and Modified PID Controllers
G
c
(s)
PID
controller1
s(s+ 1)(s+ 5) 
C(s) R(s)
+–
Figure 8–6
PID-controlled
system.
Comments. Ziegler–Nichols tuning rules (and other tuning rules presented in the
literature) have been widely used to tune PID controllers in process control systems
where the plant dynamics are not precisely known. Over many years, such tuning rules
proved to be very useful. Ziegler–Nichols tuning rules can, of course, be applied to plants
whose dynamics are known. (If the plant dynamics are known, many analytical and
graphical approaches to the design of PID controllers are available, in addition to
Ziegler–Nichols tuning rules.)
EXAMPLE 8–1
Consider the control system shown in Figure 8–6 in which a PID controller is used to control the
system. The PID controller has the transfer function
Although many analytical methods are available for the design of a PID controller for the pres-
ent system, let us apply a Ziegler–Nichols tuning rule for the determination of the values of pa-
rameters and Then obtain a unit-step response curve and check to see if the designed
system exhibits approximately 25 %maximum overshoot. If the maximum overshoot is excessive
(40%or more), make a fine tuning and reduce the amount of the maximum overshoot to ap-
proximately 25 %or less.
Since the plant has an integrator, we use the second method of Ziegler–Nichols tuning rules.
By setting and we obtain the closed-loop transfer function as follows:
The value of K
p
that makes the system marginally stable so that sustained oscillation occurs can
be obtained by use of Routh’s stability criterion. Since the characteristic equation for the
closed-loop system is
s
3
+6s
2
+5s+ K
p
=0
the Routh array becomes as follows:
s
3
s
2
s
1
s
0
1
6
30-K
p
6
K
p
5
K
p
C(s)
R(s)=K
p
s(s+1)(s +5)+K
p
T
d
=0, T
i
=qT
d
 
. T
i
 
, K
p
 
,G
c
(s)=K
p
a
1+1
T
i
 
s+T
d
 
s
b
Openmirrors.com
Section 8–2 / Ziegler–Nichols Rules for Tuning PID Controllers 573PID controller1
s(s+ 1)(s+ 5) 6.3223 ( s+ 1.4235)2
sC(s) R(s)
+–Figure 8–7
Block diagram of thesystem with PID
controller designed
by use of theZiegler–Nicholstuning rule (secondmethod).Examining the coefficients of the first column of the Routh table, we find that sustained oscilla-
tion will occur if Thus, the critical gain K
cris
Kcr=30
With gain Kpset equal to the characteristic equation becomes
s3+6s2+5s+30=0
To find the frequency of the sustained oscillation, we substitute s=jvinto this characteristic
equation as follows:
(jv)3+6(jv)2+5(jv)+30=0
or
6A5-v2B+jvA5-v2B=0
from which we find the frequency of the sustained oscillation to be or Hence, the
period of sustained oscillation is
Referring to Table 8–2, we determine and as follows:
The transfer function of the PID controller is thus
The PID controller has a pole at the origin and double zero at s=–1.4235. A block diagram of
the control system with the designed PID controller is shown in Figure 8–7. =6.3223(s +1.4235)2
s =18a1+1
1.405s+0.35124sb Gc(s)=Kpa1+1
Ti s+Td sb Td=0.125Pcr=0.35124 Ti=0.5Pcr=1.405 Kp=0.6Kcr=18Td Ti , Kp ,Pcr=2p
v=2p
15=2.8099v=15. v2=5Kcr(=30),Kp=30.
574
Chapter 8 / PID Controllers and Modified PID Controllers
Next, let us examine the unit-step response of the system. The closed-loop transfer function
C(s)/R(s) is given by
The unit-step response of this system can be obtained easily with MATLAB. See MATLAB
Program 8–1. The resulting unit-step response curve is shown in Figure 8–8. The maximum
overshoot in the unit-step response is approximately 62 %.The amount of maximum overshoot is
excessive. It can be reduced by fine tuning the controller parameters. Such fine tuning can be
made on the computer. We find that by keeping and by moving the double zero of the
PID controller to s=–0.65 —that is, using the PID controller
(8–1)
the maximum overshoot in the unit-step response can be reduced to approximately 18 %(see
Figure 8–9). If the proportional gain K
p
is increased to 39.42, without changing the location of
the double zero (s=–0.65), that is, using the PID controller
(8–2) G
c
(s)=39.42
a
1+1
3.077s+0.7692s
b
=30.322(s+0.65)
2
sG
c
(s)=18
a
1+1
3.077s+0.7692s
b
=13.846(s+0.65)
2
sK
p
=18C(s)
R(s)=6.3223s
2
+18s +12.811
s
4
+6s
3
+11.3223s
2
+18s +12.811
MATLAB Program 8–1
% ---------- Unit-step response ----------
num = [6.3223  18  12.811];
den = [1  6  11.3223  18  12.811];
step(num,den)
grid
title('Unit-Step Response')
Unit-Step Response
Time (sec)02
14 12
8
10
4
6
Amplitude
00.81.8
1.2
0.6
0.2
1.4
1.6
1
0.4
Figure 8–8
Unit-step response
curve of PID-
controlled system
designed by use of
the Ziegler–Nichols
tuning rule (second
method).
Openmirrors.com
Section 8–2 / Ziegler–Nichols Rules for Tuning PID Controllers 575Unit-Step ResponseAmplitude
00.61.2
0.8
0.4
0.21
Time (sec)01 7 6 4 5 2 3Figure 8–9
Unit-step response ofthe system shown inFigure 8–6 with PIDcontroller havingparameters
and
T
d=0.7692.Ti=3.077,Kp=18,
Amplitude1.4
0.8
0.4
011.2
0.6
0.2Unit-Step Response
Time (sec)0 0.5 5 4.5 3 3.5 4 1 1.5 2 2.5Figure 8–10
Unit-step response ofthe system shown inFigure 8–6 with PIDcontroller havingparameters
and
T
d=0.7692.Ti=3.077,Kp=39.42,then the speed of response is increased, but the maximum overshoot is also increased to approxi-
mately 28 %, as shown in Figure 8–10. Since the maximum overshoot in this case is fairly close to 25 %
and the response is faster than the system with given by Equation (8–1), we may consider as given by Equation (8–2) as acceptable. Then the tuned values of and become
It is interesting to observe that these values respectively are approximately twice the values sug-
gested by the second method of the Ziegler–Nichols tuning rule.The important thing to note hereis that the Ziegler–Nichols tuning rule has provided a starting point for fine tuning.
It is instructive to note that, for the case where the double zero is located at s=–1.4235, in-
creasing the value of K
pincreases the speed of response, but as far as the percentage maximum
overshoot is concerned, varying gain Kphas very little effect.The reason for this may be seen fromKp=39.42,  Ti=3.077,  Td=0.7692Td Ti , Kp ,Gc(s) Gc(s)
576
Chapter 8 / PID Controllers and Modified PID Controllers
the root-locus analysis. Figure 8–11 shows the root-locus diagram for the system designed by use of
the second method of Ziegler–Nichols tuning rules. Since the dominant branches of root loci are
along the lines for a considerable range of K,varying the value of K(from 6 to 30) will not
change the damping ratio of the dominant closed-loop poles very much. However, varying the lo-
cation of the double zero has a significant effect on the maximum overshoot, because the damping
ratio of the dominant closed-loop poles can be changed significantly.This can also be seen from the
root-locus analysis. Figure 8–12 shows the root-locus diagram for the system where the PID controller
has the double zero at s=–0.65. Notice the change of the root-locus configuration.This change in
the configuration makes it possible to change the damping ratio of the dominant closed-loop poles.
In Figure 8–12, notice that, in the case where the system has gain K=30.322, the closed-loop
poles at s=–2.35_j4.82 act as dominant poles.Two additional closed-loop poles are very near the
double zero at s=–0.65, with the result that these closed-loop poles and the double zero almost can-
cel each other.The dominant pair of closed-loop poles indeed determines the nature of the response.
On the other hand, when the system has K=13.846, the closed-loop poles at s=–2.35_j2.62 are
not quite dominant because the two other closed-loop poles near the double zero at s=–0.65 have
considerable effect on the response. The maximum overshoot in the step response in this case (18 %)
is much larger than the case where the system is of second order and having only dominant closed-loop
poles. (In the latter case the maximum overshoot in the step response would be approximately 6 %.)
It is possible to make a third, a fourth, and still further trials to obtain a better response. But
this will take a lot of computations and time. If more trials are desired, it is desirable to use the
computational approach presented in Section 10–3. Problem A–8–12 solves this problem with
the computational approach with MATLAB. It finds sets of parameter values that will yield the
maximum overshoot of 10 %or less and the settling time of 3 sec or less.A solution to the present
problem obtained in Problem A–8–12 is that for the PID controller defined by
G
c
(s)=K(s+a)
2
sz=0.3
1
s(s+ 1)(s+ 5) jv
j3
j2
j1
–j3–j2–j1–3 –2 –1 –4 –51 0 sK= 6.32
K= 6.32K= 6.32 K= 6.32z= 0.3
z= 0.3K(s+ 1.4235)
2
s+–
Figure 8–11
Root-locus diagram
of system when PID
controller has double
zero at s=–1.4235.
Openmirrors.com
Section 8–3 / Design of PID Controllers with Frequency-Response Approach 5771
s(s+ 1)(s+5)K(s+ 0.65)2
sjv
j8
j6
j4
j2
–j6
–j8–j4–j2–6 –4 –2 –8 –10 2 0 sK= 60
K= 30.322
K= 30.322K= 13.846
K= 13.846K= 13.846
K= 60z= 0.358
z= 0.67+–
Figure 8–12
Root-locus diagram of system when PID 
controller has double 
zero at s=–0.65.
K=13.846corresponds to 
given by Equation (8–1)
andK=30.322
corresponds to given by Equation (8–2).G
c(s)Gc(s)
the values of Kandaare
K=29, a=0.25
with the maximum overshoot equal to 9.52 %and settling time equal to 1.78 sec.Another possible
solution obtained there is that
K=27, a=0.2
with the 5.5 %maximum overshoot and 2.89 sec of settling time. See Problem A–8–12 for details.
8–3 DESIGN OF PID CONTROLLERS WITH FREQUENCY-RESPONSE
APPROACH
In this section we present a design of a PID controller based on the frequency-response
approach.
Consider the system shown in Figure 8–13. Using a frequency-response approach, de-
sign a PID controller such that the static velocity error constant is 4 sec−1, phase margin
is 50° or more, and gain margin is 10 dB or more. Obtain the unit-step and unit-rampresponse curves of the PID controlled system with MATLAB.
Let us choose the PID controller to be
G
c(s)=K(as +1)(bs +1)
s
Since the static velocity error constant K
v
is specified as 4 sec
–1
, we have
Thus
Next, we plot a Bode diagram of
MATLAB Program 8–2 produces a Bode diagram of G(s) .The resulting Bode diagram
is shown in Figure 8–14.G(s) =4
sAs
2
+1BG
c
(s)=4(as+1)(bs +1)
s=K=4K
v
=lim
sS0
sG
c
(s)1
s
2
+1=lim
sS0
sK(as +1)(bs +1)
s1
s
2
+1
578
Chapter 8 / PID Controllers and Modified PID Controllers
Figure 8–13
Control system.
G
c
(s)1
s
2
+ 1
+–
MATLAB Program 8–2
num = [4];
den = [1  0.00000000001  1  0];
w = logspace(-1,1,200);
bode(num,den,w)
title('Bode Diagram of 4/[s(s^2+1)]')
Frequency (rad/sec)
Bode Diagram of 4/[ s(s
2
 + 1)]
−300−100−50
−150
−200
−2500−500
Phase (deg); Magnitude (dB)
50
10
−1
10
0
10
1
Figure 8–14
Bode diagram of
4/CsAs
2
+1BD.
Openmirrors.com
Section 8–3 / Design of PID Controllers with Frequency-Response Approach 579MATLAB Program 8–3
num = [20  4];
den = [1 0.00000000001  1  0];w = logspace(-2,1,101);bode(num,den,w)title('Bode Diagram of G(s) = 4(5s+1)/[s(s^2+1)]')
Frequency (rad/sec)Bode Diagram of G(s) = 4(5 s + 1)/[ s(s2 + 1)]
−200−50
−100
−1500−200Phase (deg); Magnitude (dB)60
2040
10−210−1100101Figure 8–15
Bode diagram ofG(s)=4(5s+1)/CsAs
2+1BD.We need the phase margin of at least 50° and gain margin of 10 dB or more.
From the Bode diagram of Figure 8–14, we notice that the gain crossover frequency is approximately v=1.8 rad /H20862sec. Let us assume the gain crossover frequency 
of the compensated system to be somewhere between v=1 andv=10 rad /H20862sec.
Noting that
we choose a=5. Then, (as+1) will contribute up to 90° phase lead in the high-
frequency region. MATLAB Program 8–3 produces the Bode diagram of
The resulting Bode diagram is shown in Figure 8–15.4(5s+1)
sAs2+1BGc(s)=4(as+1)(bs +1)
s
Based on the Bode diagram of Figure 8–15, we choose the value of b.The term
(bs+1) needs to give the phase margin of at least 50°. By simple MATLAB trials, we
find b=0.25 to give the phase margin of at least 50° and gain margin of ±qdB.There-
fore, by choosing b=0.25, we have
and the open-loop transfer function of the designed system becomes
MATLAB Program 8–4 produces the Bode diagram of the open-loop transfer function.
The resulting Bode diagram is shown in Figure 8–16. From it we see that the static ve-
locity error constant is 4 sec
–1
, the phase margin is 55°, and the gain margin is ±qdB.=5s
2
+21s+4
s
3
+s Open-loop transfer function =4(5s+1)(0.25s+1)
s1
s
2
+1G
c
(s)=4(5s+1)(0.25s+1)
s
580
Chapter 8 / PID Controllers and Modified PID Controllers
MATLAB Program 8–4
num = [5  21  4];
den = [1  0  1  0];
w = logspace(-2,2,100);
bode(num,den,w)
title('Bode Diagram of 4(5s+1)(0.25s+1)/[s(s^2+1)]')
Frequency (rad/sec)Bode Diagram of 4(5 s + 1)(0.25 s + 1)/[ s(s
2
 + 1)]
−200−100−50050
−150100−50
Phase (deg); Magnitude (dB)
0100
50
10
–2
10
–1
10
0
10
1
10
2
Figure 8–16
Bode diagram of
4(5s+1)(0.25s+1)/
CsAs
2
+1BD.
Openmirrors.com
Section 8–3 / Design of PID Controllers with Frequency-Response Approach 581Therefore, the designed system satisfies all the requirements.Thus, the designed system
is acceptable. (Note that there exist infinitely many systems that satisfy all the require-ments. The present system is just one of them.)
Next, we shall obtain the unit-step response and the unit-ramp response of the de-
signed system. The closed-loop transfer function is
Note that the closed-loop zeros are located at
The closed-loop poles are located at
Notice that the complex-conjugate closed-loop poles have the damping ratio of 0.5237.
MATLAB Program 8–5 produces the unit-step response and the unit-ramp response.s=-0.1897s=-2.4052 -j3.9119s=-2.4052 +j3.9119s=-4,  s=-0.2C(s)
R(s)=5s2+21s+4
s3+5s2+22s+4
MATLAB Program 8–5
%***** Unit-step response *****num = [5  21  4];
den = [1  5  22  4];t = 0:0.01:14;c = step(num,den,t);plot(t,c)gridtitle('Unit-Step Response of Compensated System')xlabel('t (sec)')ylabel('Output c(t)')
%***** Unit-ramp response *****num1 = [5  21  4];
den1 = [1  5  22  4  0];t = 0:0.02:20;c = step(num1,den1,t);plot(t,c,'-',t,t,'--')title('Unit-Ramp Response of Compensated System')xlabel('t (sec)')ylabel('Unit-Ramp Input and Output c(t)')text(10.8,8,'Compensated System')
582
Chapter 8 / PID Controllers and Modified PID Controllers
Output c(t)
t (sec)Unit-Step Response of Compensated System
1.4
1.2
1
0.8
0.6
0.4
0.2
0
02468 1 0 1 2 1 4
Figure 8–17
Unit-step response
curve.
Unit-Ramp Input and Output c(t)
t (sec)Unit-Ramp Response of Compensated System
20
18
16
14
12
10
8
6
4
2
0
02468 1 0 1 2 1 4 1 6 1 8 2 0
Compensated System
Figure 8–18
Unit-ramp input and
the output curve.
The resulting unit-step response curve is shown in Figure 8–17 and the unit-
ramp response curve in Figure 8–18. Notice that the closed-loop pole at s=/H110020.1897
and the zero at s=/H110020.2 produce a long tail of small amplitude in the unit-step 
response.
For an additional example of design of a PID controller based on the frequency-
response approach, see Problem A–8–7 .
Openmirrors.com
Section 8–4 / Design of PID Controllers with Computational Optimization Approach 5838–4 DESIGN OF PID CONTROLLERS WITH COMPUTATIONAL
OPTIMIZATION APPROACH
In this section we shall explore how to obtain an optimal set (or optimal sets) of
parameter values of PID controllers to satisfy the transient response specifications byuse of MATLAB.We shall present two examples to illustrate the approach in this section.
EXAMPLE 8–2
Consider the PID-controlled system shown in Figure 8–19. The PID controller is given by
It is desired to find a combination of Kandasuch that the closed-loop system will have 10 %(or
less) maximum overshoot in the unit-step response. (We will not include any other condition inthis problem. But other conditions can easily be included, such as that the settling time be less thana specified value. See, for example, Example 8–3.)
There may be more than one set of parameters that satisfy the specifications. In this example,
we shall obtain all sets of parameters that satisfy the given specifications.
To solve this problem with MATLAB, we first specify the region to search for appropriate K
anda.We then write a MATLAB program that, in the unit-step response, will find a combination
ofKandawhich will satisfy the criterion that the maximum overshoot is 10 %or less.
Note that the gain Kshould not be too large, so as to avoid the possibility that the system re-
quire an unnecessarily large power unit.
Assume that the region to search for Kandais
2/H11349K/H113493 and 0.5/H11349a/H113491.5
If a solution does not exist in this region, then we need to expand it. In some problems, however,
there is no solution, no matter what the search region might be.
In the computational approach, we need to determine the step size for each of Kanda. In the
actual design process, we need to choose step sizes small enough. However, in this example, to avoidan overly large number of computations, we choose the step sizes to be reasonable—say, 0.2 for
both Kanda.
To solve this problem it is possible to write many different MATLAB programs.We present here
one such program, MATLAB Program 8–6. In this program, notice that we use two “for” loops.Westart the program with the outer loop to vary the “ K” values. Then we vary the “ a” values in the
inner loop. We proceed by writing the MATLAB program such that the nested loops in the pro-
gram begin with the lowest values of “ K” and “ a” and step toward the highest. Note that, depend-
ing on the system and the ranges of search for “ K” and “ a” and the step sizes chosen, it may take
from several seconds to a few minutes for MATLAB to compute the desired sets of the values.
In this program the statement
solution(k,:) = [K(i)  a(j)  m]
will produce a table of K, a, m values. (In the present system there are 15 sets of Kandathat will
exhibit m<1.10 —that is, the maximum overshoot is less than 10 %.)Gc(s)=K(s+a)2
s
R(s)
KC(s)
PID
controller1.2
0.36s3+ 1.86 s2+ 2.5s+ 1(s+a)2
s+–
Figure 8–19
PID-controlledsystem.
584
Chapter 8 / PID Controllers and Modified PID Controllers
To sort out the solution sets in the order of the magnitude of the maximum overshoot  (starting
from the smallest value of mand ending at the largest value of min the table), we use the command
sortsolution = sortrows(solution,3)
MATLAB Program 8–6
%'K' and 'a' values to test
K = [2.0  2.2  2.4  2.6  2.8  3.0];
a = [0.5  0.7  0.9  1.1  1.3  1.5];
% Evaluate closed-loop unit-step response at each 'K' and 'a' combination
% that will yield the maximum overshoot less than 10%
t = 0:0.01:5;
g = tf([1.2],[0.36  1.86  2.5  1]);
k = 0;
for i = 1:6;
for j = 1:6;
gc = tf(K(i)*[1  2*a(j)  a(j)^2], [1  0]);  % controller
G = gc*g/(1 + gc*g);  % closed-loop transfer function
y = step(G,t);
m = max(y);
if m < 1.10
k = k+1;
solution(k,:) = [K(i)  a(j)  m];
end
end
end
solution  % Print solution table
solution =
2.0000  0.5000  0.9002
2.0000  0.7000  0.9807
2.0000  0.9000  1.0614
2.2000  0.5000  0.9114
2.2000  0.7000  0.9837
2.2000  0.9000  1.0772
2.4000  0.5000  0.9207
2.4000  0.7000  0.9859
2.4000  0.9000  1.0923
2.6000  0.5000  0.9283
2.6000  0.7000  0.9877
2.8000  0.5000  0.9348
2.8000  0.7000  1.0024
3.0000  0.5000  0.9402
3.0000  0.7000  1.0177
sortsolution = sortrows(solution,3)  % Print solution table sorted by
% column 3
(continues on next page )
Openmirrors.com
Section 8–4 / Design of PID Controllers with Computational Optimization Approach 585sortsolution =
2.0000  0.5000  0.9002
2.2000  0.5000  0.91142.4000  0.5000  0.92072.6000  0.5000  0.92832.8000  0.5000  0.93483.0000  0.5000  0.94022.0000  0.7000  0.98072.2000  0.7000  0.98372.4000  0.7000  0.98592.6000  0.7000  0.98772.8000  0.7000  1.00243.0000  0.7000  1.01772.0000  0.9000  1.06142.2000  0.9000  1.07722.4000  0.9000  1.0923
% Plot the response with the largest overshoot that is less than 10%K = sortsolution(k,1)K =
2.4000
a = sortsolution(k,2)a =
0.9000
gc = tf(K*[1  2*a  a^2], [1  0]);
G = gc*g/(1 + gc*g);step(G,t)grid  % See Figure 8–20
% If you wish to plot the response with the smallest overshoot that is
% greater than 0%, then enter the following values of 'K' and 'a'
K = sortsolution(11,1)K =
2.8000
a = sortsolution(11,2)a =
0.7000
gc = tf(K*[1  2*a  a^2], [1  0]);
G = gc*g/(1 + gc*g);step(G,t)grid  % See Figure 8–21
586
Chapter 8 / PID Controllers and Modified PID Controllers
Amplitude
Time (sec)Step Response
1.4
1.2
1
0.8
0.6
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5
Figure 8–20
Unit-step response of
the system with
K=2.4 anda=0.9.
(The maximum
overshoot is 9.23 %.)
To plot the unit-step response curve of the last set of the Kand avalues in the sorted table,
we enter the commands
K = sortsolution (k,1)
a = sortsolution (k,2)
and use the step command. (The resulting unit-step response curve is shown in Figure 8–20.) To
plot the unit-step response curve with the smallest overshoot that is greater than 0 %found in the
sorted table, enter the commands
K = sortsolution (11,1)
a = sortsolution (11,2)
and use the step command. (The resulting unit-step response curve is shown in Figure 8–21.)
Amplitude
Time (sec)Step Response
1.21.4
1
0.8
0.6
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5
Figure 8–21
Unit-step response of
the system with
K=2.8 anda=0.7.
(The maximum
overshoot is 0.24 %.)
Openmirrors.com
Section 8–4 / Design of PID Controllers with Computational Optimization Approach 587To plot the unit-step response curve of the system with any set shown in the sorted table, we spec-
ify the Kandavalues by entering an appropriate sortsolution command.
Note that for a specification that the maximum overshoot be between 10 %and 5 %,there
would be three sets of solutions:
K=2.0000, a=0.9000, m=1.0614K=2.2000, a=0.9000, m=1.0772K=2.4000, a=0.9000, m=1.0923
Unit-step response curves for these three cases are shown in Figure 8–22. Notice that the sys-
tem with a larger gain Khas a smaller rise time and larger maximum overshoot.Which one of these
three systems is best depends on the system’s objective.
EXAMPLE 8–3 Consider the system shown in Figure 8–23. We want to find all combinations of Kand avalues
such that the closed-loop system has a maximum overshoot of less than 15 %, but more than 10 %,
in the unit-step response. In addition, the settling time should be less than 3 sec. In this problem,assume that the search region is
3/H11349K/H113495and 0.1/H11349a/H113493
Determine the best choice of the parameters Kanda.Amplitude
Time (sec)Unit-Step Response Curves
1.4
1.2
1
0.80.60.4
0.2
0
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5K = 2.4, a = 0.9 
K = 2.2, a = 0.9 
K = 2, a = 0.9 
Figure 8–22
Unit-step responsecurves of system withK=2, a=0.9;K=2.2, a=0.9;
andK=2.4,
a=0.9.
R(s) C(s)
PID
controller4
s3+ 6s2 + 8s + 4+–
Plant(s+ a)2
sK
Figure 8–23
PID-controlledsystem with a
simplified PID
controller.
588
Chapter 8 / PID Controllers and Modified PID Controllers
In this problem, we choose the step sizes to be reasonable, — say 0.2 for Kand 0.1 for a. MATLAB
Program 8–7 gives the solution to this problem. From the sortsolution table, it looks like the first row
is a good choice. Figure 8–24 shows the unit step response curve for K= 3.2 and a= 0.9. Since this choice
requires a smaller Kvalue than most other choices, we may decide that the first row is the best choice.
MATLAB Program 8–7
t = 0:0.01:8;
k = 0;
for K = 3:0.2:5;
for a = 0.1:0.1:3; 
num = [4*K  8*K*a  4*K*a^2];
den = [1  6  8+4*K  4+8*K*a  4*K*a^2];
y = step(num,den,t);
s = 801;while y(s)>0.98 & y(s)<1.02; s = s – 1;end;
ts = (s–1)*0.01; % ts = settling time;
m = max(y);
if m<1.15 & m>1.10; if ts<3.00;
k = k+1;
solution(k,:) = [K  a  m  ts];
end
end
end
end
solution
solution =
3.0000 1.0000 1.1469 2.7700
3.2000 0.9000 1.1065 2.8300
3.4000 0.9000 1.1181 2.7000
3.6000 0.9000 1.1291 2.5800
3.8000 0.9000 1.1396 2.4700
4.0000 0.9000 1.1497 2.3800
4.2000 0.8000 1.1107 2.8300
4.4000 0.8000 1.1208 2.5900
4.6000 0.8000 1.1304 2.4300
4.8000 0.8000 1.1396 2.3100
5.0000 0.8000 1.1485 2.2100
sortsolution = sortrows(solution,3)
sortsolution =
3.2000 0.9000 1.1065 2.8300
4.2000 0.8000 1.1107 2.8300
3.4000 0.9000 1.1181 2.7000
4.4000 0.8000 1.1208 2.5900
3.6000 0.9000 1.1291 2.5800
4.6000 0.8000 1.1304 2.4300
4.8000 0.8000 1.1396 2.3100
3.8000 0.9000 1.1396 2.4700
(continues on next page )
Openmirrors.com
Section 8–4 / Design of PID Controllers with Computational Optimization Approach 5893.0000 1.0000 1.1469 2.7700
5.0000 0.8000 1.1485 2.21004.0000 0.9000 1.1497 2.3800
% Plot the response curve with the smallest overshoot shown in
sortsolution table.
K = sortsolution(1,1), a = sortsolution(1,2)
K =
3.2000
a =
0.9000num = [4*K 8*K*a 4*K*a^2];
den = [1 6 8+4*K 4+8*K*a 4*K*a^2];num
num = 
12.8000 23.0400 10.3680den
den = 
1.0000 6.0000 20.8000 27.0400 10.3680y = step(num,den,t);
plot(t,y) % See Figure 8–24.gridtitle('Unit-Step Response')xlabel('t sec')ylabel('Output y(t)')
000.20.40.60.811.21.4
2468
t secOutput y(t)Unit-Step Response
Figure 8–24
Unit-step responsecurve of the systemwith K= 3.2 and 
a= 0.9.
590
Chapter 8 / PID Controllers and Modified PID Controllers
8–5 MODIFICATIONS OF PID CONTROL SCHEMES
Consider the basic PID control system shown in Figure 8–25(a), where the system is sub-
jected to disturbances and noises. Figure 8–25(b) is a modified block diagram of the same
system. In the basic PID control system such as the one shown in Figure 8–25(b), if the ref-
erence input is a step function, then, because of the presence of the derivative term in the
control action, the manipulated variable u(t) will involve an impulse function (delta func-
tion). In an actual PID controller, instead of the pure derivative term , we employ
where the value of gis somewhere around 0.1.Therefore, when the reference input is a
step function, the manipulated variable u(t) will not involve an impulse function, but will
involve a sharp pulse function. Such a phenomenon is called set-point kick .
PI-D Control. To avoid the set-point kick phenomenon, we may wish to operate
the derivative action only in the feedback path so that differentiation occurs only on
the feedback signal and not on the reference signal.The control scheme arranged in this
way is called the PI-D control. Figure 8–26 shows a PI-D-controlled system.
From Figure 8–26, it can be seen that the manipulated signal U(s) is given by
U(s) =K
p
a
1+1
T
i
 
s
b
R(s) -K
p
a
1+1
T
i
 
s+T
d
 
s
b
B(s)T
d
 
s
1+gT
d
 
sT
d
 
s
PID
controllerPlant
G
p
(s)
1
T
i
s
1
T
d
sOutput
Y(s)
Noise
N(s)Reference
input R(s)
(a)
(b)Disturbance
D(s)
G
p
(s)Y(s)
N(s)R(s) E(s)
B(s)Observed signal B(s)
U(s)D(s)
K
p
+–
++
++
++
++
+
++
+–
Figure 8–25
(a) PID-controlled
system;
(b) equivalent block
diagram.
Openmirrors.com
Section 8–5 / Modifications of PID Control Schemes 591Notice that in the absence of the disturbances and noises, the closed-loop transfer
function of the basic PID control system [shown in Figure 8–25(b)] and the PI-D controlsystem (shown in Figure 8–26) are given, respectively, by
and
It is important to point out that in the absence of the reference input and noises, the
closed-loop transfer function between the disturbance D(s) and the output Y(s) in
either case is the same and is given by
I-PD Control. Consider the case where the reference input is a step function. Both
PID control and PI-D control involve a step function in the manipulated signal. Such astep change in the manipulated signal may not be desirable in many occasions. There-fore, it may be advantageous to move the proportional action and derivative action tothe feedback path so that these actions affect the feedback signal only. Figure 8–27 showssuch a control scheme. It is called the I-PD control. The manipulated signal is given by
Notice that the reference input R(s) appears only in the integral control part. Thus, in
I-PD control, it is imperative to have the integral control action for proper operation ofthe control system.U(s) =K
p1
Ti sR(s) -Kpa1+1
Ti s+Td sbB(s)Y(s)
D(s)=Gp(s)
1+Kp Gp(s)a1+1
Ti s+Td sbY(s)
R(s)=a1+1
Ti sbKp Gp(s)
1+a1+1
Ti s+Td sbKp Gp(s)Y(s)
R(s)=a1+1
Ti s+Td sbKp Gp(s)
1+a1+1
Ti s+Td sbKp Gp(s)1
Tis1
Gp(s)Y(s)
N(s)R(s) E(s)
B(s)U(s)D(s)
Kp
Tds
B(s)+–+–+++
++Figure 8–26
PI-D-controlledsystem.
592
Chapter 8 / PID Controllers and Modified PID Controllers
1
T
i
s
G
p
(s)Y(s)
N(s)R(s)
B(s)
B(s)U(s)D(s)
K
p
T
d
s
1
+–
+
–
++
++
Figure 8–27
I-PD-controlled
system.
The closed-loop transfer function Y(s)/R(s) in the absence of the disturbance input
and noise input is given by
It is noted that in the absence of the reference input and noise signals, the closed-loop
transfer function between the disturbance input and the output is given by
This expression is the same as that for PID control or PI-D control.
Two-Degrees-of-Freedom PID Control. We have shown that PI-D control is ob-
tained by moving the derivative control action to the feedback path, and I-PD control
is obtained by moving the proportional control and derivative control actions to the
feedback path. Instead of moving the entire derivative control action or proportional
control action to the feedback path, it is possible to move only portions of these control
actions to the feedback path, retaining the remaining portions in the feedforward path.
In the literature, PI-PD control has been proposed. The characteristics of this control
scheme lie between PID control and I-PD control. Similarly, PID-PD control can be
considered. In these control schemes, we have a controller in the feedforward path and
another controller in the feedback path. Such control schemes lead us to a more gener-
al two-degrees-of-freedom control scheme.We shall discuss details of such a two-degrees-
of-freedom control scheme in subsequent sections of this chapter.
8–6 TWO-DEGREES-OF-FREEDOM CONTROL
Consider the system shown in Figure 8–28, where the system is subjected to the
disturbance input D(s) and noise input N(s), in addition to the reference input R(s).
is the transfer function of the controller and is the transfer function of the
plant. We assume that is fixed and unalterable. G
p
(s)G
p
(s) G
c
(s)Y(s)
D(s)=G
p
(s)
1+K
p
 
G
p
(s)
a
1+1
T
i
 
s+T
d
 
s
b
Y(s)
R(s)=
a
1
T
i
 
s
b
K
p
 
G
p
(s)
1+K
p
 
G
p
(s)
a
1+1
T
i
 
s+T
d
 
s
b
Openmirrors.com
Section 8–6 / Two-Degrees-of-Freedom Control 593For this system, three closed-loop transfer functions Y(s)/R(s)= Gyr,
Y(s)/D(s)= Gyd,andY(s)/N(s)= Gynmay be derived. They are
[In deriving Y(s)/R(s), we assumed D(s)=0 andN(s)=0. Similar comments apply
to the derivations of Y(s)/D(s) andY(s)/N(s). ] The degrees of freedom of the control
system refers to how many of these closed-loop transfer functions are independent. Inthe present case, we have
Among the three closed-loop transfer functions G
yr,Gyn,and Gyd, if one of them is
given, the remaining two are fixed. This means that the system shown in Figure 8–28 isa one-degree-of-freedom control system.
Next consider the system shown in Figure 8–29, where is the transfer function
of the plant. For this system, closed-loop transfer functions G
yr,Gyn,andGydare given,
respectively, by
 Gyn=Y(s)
N(s)=- AGc1+Gc2BGp
1+AGc1+Gc2BGp Gyd=Y(s)
D(s)=Gp
1+AGc1+Gc2BGp Gyr=Y(s)
R(s)=Gc1 Gp
1+AGc1+Gc2BGpGp(s) Gyn=Gyd-Gp
Gp Gyr=Gp-Gyd
Gp Gyn=Y(s)
N(s)=- Gc Gp
1+Gc Gp Gyd=Y(s)
D(s)=Gp
1+Gc Gp Gyr=Y(s)
R(s)=Gc Gp
1+Gc GpGp(s)Y(s)
N(s)R(s)
B(s)U(s)D(s)
Gc(s) +–++
++Figure 8–28
One-degree-of-freedom control
system.
594
Chapter 8 / PID Controllers and Modified PID Controllers
Hence, we have
In this case, if G
yd
is given, then G
yn
is fixed, but G
yr
is not fixed, because G
c1
is
independent of G
yd
.Thus, two closed-loop transfer functions among three closed-loop
transfer functions G
yr
,G
yd
,andG
yn
are independent. Hence, this system is a two-degrees-
of-freedom control system.
Similarly, the system shown in Figure 8–30 is also a two-degrees-of-freedom control
system, because for this system
 G
yn
=Y(s)
N(s)=- G
c1
 
G
p
1+G
c1
 
G
p
 G
yd
=Y(s)
D(s)=G
p
1+G
c1
 
G
p
 G
yr
=Y(s)
R(s)=G
c1
 
G
p
1+G
c1
 
G
p
+G
c2
 
G
p
1+G
c1
 
G
p
 G
yn
=G
yd
-G
p
G
p
 G
yr
=G
c1
 
G
yd
G
p
(s)
G
c1
(s)Y(s)
N(s)R(s)
B(s)U(s)D(s)
G
c2
(s)
B(s)
++
++
+–
+–
Figure 8–29
Two-degrees-of-
freedom control
system.
G
p
(s)
G
c1
(s)
G
c2
(s)
Y(s)
N(s)U(s)D(s)
R(s)
B(s)
+–
++
++
++
Figure 8–30
Two-degrees-of-
freedom control
system.
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 595Hence,
Clearly, if Gydis given, then Gynis fixed, but Gyris not fixed, because Gc2is independ-
ent of Gyd.
It will be seen in Section 8–7 that, in such a two-degrees-of-freedom control system,
both the closed-loop characteristics and the feedback characteristics can be adjustedindependently to improve the system response performance.
8–7 ZERO-PLACEMENT APPROACH TO IMPROVE 
RESPONSE CHARACTERISTICS
We shall show here that by use of the zero-placement approach presented later in this
section, we can achieve the following:
The responses to the ramp reference input and acceleration reference input exhibit
no steady-state errors.
In high-performance control systems it is always desired that the system output follow
the changing input with minimum error. For step, ramp, and acceleration inputs, it isdesired that the system output exhibit no steady-state error.
In what follows, we shall demonstrate how to design control systems that will exhibit
no steady-state errors in following ramp and acceleration inputs and at the same timeforce the response to the step disturbance input to approach zero quickly.
Consider the two-degrees-of-freedom control system shown in Figure 8–31. Assume
that the plant transfer function is a minimum-phase transfer function and isgiven by
G
p(s)=KA(s)
B(s)Gp(s) Gyn=Gyd-Gp
Gp Gyr=Gc2 Gyd+Gp-Gyd
Gp
Gp(s) Gc1(s)Y(s) R(s)D(s)
Gc2(s)+++–+–
Figure 8–31
Two-degrees-of-freedom control
system.
596
Chapter 8 / PID Controllers and Modified PID Controllers
where
A(s)=As+z
1
BAs+z
2
BpAs+z
m
B
B(s)=s
N
As+p
N±1
BAs+p
N±2
BpAs+p
n
B
where Nmay be 0, 1, 2 and n/H11350m.Assume also that G
c1
is a PID controller followed
by a filter 1/A(s), or
andG
c2
is a PID, PI, PD, I, D, or P controller followed by a filter 1/A(s). That is
where some of a
2
,b
2
, and g
2
may be zero. Then it is possible to write as
(8–3)
wherea,b, andgare constants. Then
Because of the presence of sin the numerator, the response y(t) to a step disturbance
input approaches zero as tapproaches infinity, as shown below. Since
if the disturbance input is a step function of magnitude d,or
and assuming the system is stable, then
 =0 =lim
sS0
 sKA(0)d
sB(0) +bK y(q)=lim
sS0
s
c
sKA(s)
sB(s) +Aas+b+gs
2
BK
d
 d
sD(s) =d
sY(s) =sKA(s)
sB(s) +Aas+b+gs
2
BKD(s) =sKA(s)
sB(s) +Aas+b+gs
2
BK Y(s)
D(s)=G
p
1+AG
c1
+G
c2
BG
p
=K A(s)
B(s)
1+as+b+gs
2
s K
B(s)G
c1
+G
c2
=as+b+gs
2
s1
A(s)G
c1
+G
c2
G
c2
(s)=a
2
 
s+b
2
+g
2
 
s
2
s1
A(s)G
c1
(s)=a
1
 
s+b
1
+g
1
 
s
2
s1
A(s)
Openmirrors.com
The response y(t) to a step disturbance input will have the general form shown in
Figure 8–32.
Note that Y(s)/R(s) andY(s)/D(s) are given by
Notice that the denominators of Y(s)/R(s) andY(s)/D(s) are the same. Before we
choose the poles of Y(s)/R(s), we need to place the zeros of Y(s)/R(s).
Zero Placement. Consider the system
If we choose p(s) as
p(s)=a2s2+a1s+a0=a2As+s1BAs+s2B
that is, choose the zeros s=–s1ands=–s2such that, together with a2, the numerator
polynomial p(s) is equal to the sum of the last three terms of the denominator
polynomial—then the system will exhibit no steady-state errors in response to the stepinput, ramp input, and acceleration input.
Requirement Placed on System Response Characteristics. Suppose that it is
desired that the maximum overshoot in the response to the unit-step reference input bebetween arbitrarily selected upper and lower limits—for example,
2%< maximum overshoot <10%
where we choose the lower limit to be slightly above zero to avoid having overdamped
systems. The smaller the upper limit, the harder it is to determine the coefficient a’s. In
some cases, no combination of the a’s may exist to satisfy the specification, so we must
allow a higher upper limit for the maximum overshoot. We use MATLAB to search atleast one set of the a’s to satisfy the specification. As a practical computational matter,
instead of searching for the a’s, we try to obtain acceptable closed-loop poles by search-
ing a reasonable region in the left-half splane for each closed-loop pole. Once we
determine all closed-loop poles, then all coefficients a
n,an–1,p,a1,a0will be determined.Y(s)
R(s)=p(s)
sn+1+an sn+an-1 sn-1+p+a2 s2+a1 s+a0Y(s)
R(s)=Gc1 Gp
1+AGc1+Gc2BGp,  Y(s)
D(s)=Gp
1+AGc1+Gc2BGp
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 5970 ty
Figure 8–32
Typical responsecurve to a step
disturbance input.
598
Chapter 8 / PID Controllers and Modified PID Controllers
Determination of G
c2
.Now that the coefficients of the transfer function Y(s)/R(s)
are all known and Y(s)/R(s) is given by
(8–4)
we have
Since G
c1
is a PID controller and is given by
Y(s)/R(s) can be written as
Therefore, we choose
so that
(8–5)
The response of this system to the unit-step reference input can be made to exhibit the
maximum overshoot between the chosen upper and lower limits, such as
2%< maximum overshoot <10%
The response of the system to the ramp reference input or acceleration reference input
can be made to exhibit no steady-state error. The characteristic of the system of Equa-
tion (8–4) is that it generally exhibits a short settling time. If we wish to further shorten
the settling time, then we need to allow a larger maximum overshoot—for example,
2%< maximum overshoot <20%
The controller G
c2
can now be determined from Equations (8–3) and (8–5). Since
G
c1
+G
c2
=as+b+gs
2
s1
A(s)G
c1
=a
1
 
s+a
0
+a
2
 
s
2
Ks1
A(s)Kg
1
=a
2
 
,
  
Ka
1
=a
1
 
,
  
Kb
1
=a
0
Y(s)
R(s)=KAa
1
 
s+b
1
+g
1
 
s
2
B
s
n+1
+a
n
 
s
n
+a
n-1
 
s
n-1
+p+a
2
 
s
2
+a
1
 
s+a
0
G
c1
=a
1
 
s+b
1
+g
1
 
s
2
s1
A(s) =G
c1
 
sKA(s)
s
n+1
+a
n
 
s
n
+a
n-1
 
s
n-1
+p+a
2
 
s
2
+a
1
 
s+a
0
 =G
c1
 
sKA(s)
sB(s) +Aas+b+gs
2
BK Y(s)
R(s)=G
c1
Y(s)
D(s)Y(s)
R(s)=a
2
 
s
2
+a
1
 
s+a
0
s
n+1
+a
n
 
s
n
+a
n-1
 
s
n-1
+p+a
2
 
s
2
+a
1
 
s+a
0
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 599we have
(8–6)
The two controllers Gc1andGc2can be determined from Equations (8–5) and (8–6).
EXAMPLE 8–4 Consider the two-degrees-of-freedom control system shown in Figure 8–33. The plant transfer
function is given by
Design controllers and such that the maximum overshoot in the response to the
unit-step reference input be less than 19 %, but more than 2 %, and the settling time be less than
1 sec. It is desired that the steady-state errors in following the ramp reference input and acceler-ation reference input be zero.The response to the unit-step disturbance input should have a smallamplitude and settle to zero quickly.
To design suitable controllers and first note that
To simplify the notation, let us define
G
c=Gc1+Gc2
Then
 =10
s(s+1)+10Gc Y(s)
D(s)=Gp
1+Gp Gc=10
s(s+1)
1+10
s(s+1) GcY(s)
D(s)=Gp
1+GpAGc1+Gc2BGc2(s), Gc1(s)Gc2(s) Gc1(s)Gp(s)=10
s(s+1)Gp(s) =AKa-a1Bs+AKb-a0B+AKg-a2Bs2
Ks 1
A(s) Gc2=cas+b+gs2
s-a1 s+a0+a2 s2
Ksd 1
A(s)
Gp(s) Gc1(s)Y(s) R(s) U(s)D(s)
Gc2(s)+++–+–
Figure 8–33
Two-degrees-of-freedom control
system.
600
Chapter 8 / PID Controllers and Modified PID Controllers
Second, note that
Notice that the characteristic equation for Y(s)/D(s) and the one for Y(s)/R(s) are identical.
We may be tempted to choose a zero of at s=–1 to cancel a pole at s=–1 of the
plant However, the canceled pole s=–1 becomes a closed-loop pole of the entire system,
as seen below. If we define as a PID controller such that
(8–7)
then
The closed-loop pole at s=–1 is a slow-response pole, and if this closed-loop pole is included in
the system, the settling time will not be less than 1 sec. Therefore, we should not choose as
given by Equation (8–7).
The design of controllers and consists of two steps.
Design Step 1: We design to satisfy the requirements on the response to the step-
disturbance input D(s). In this design stage, we assume that the reference input is zero.
Suppose that we assume that is a PID controller of the form
Then the closed-loop transfer function Y(s)/D(s) becomes
Note that the presence of “ s” in the numerator of Y(s)/D(s) assures that the steady-state response
to the step disturbance input is zero.
Let us assume that the desired dominant closed-loop poles are complex conjugates and are
given by
s=–a_jb =10s
s
2
(s+1)+10K(s +a)(s+b) =10
s(s+1)+10K(s +a)(s+b)
s Y(s)
D(s)=10
s(s+1)+10G
c
G
c
(s)=K(s +a)(s+b)
sG
c
(s)G
c
(s)G
c2
(s) G
c1
(s)G
c
(s) =10s
(s+1)Cs
2
+10K(s +b)D Y(s)
D(s)=10
s(s+1)+10K(s +1)(s +b)
sG
c
(s)=K(s +1)(s +b)
sG
c
(s)G
p
(s).G
c
(s)Y(s)
R(s)=G
p
 
G
c1
1+G
p
 
G
c
=10G
c1
s(s+1)+10G
c
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 601and the remaining closed-loop pole is real and is located at
s=–c
Note that in this problem there are three requirements. The first requirement is that the
response to the step disturbance input damp out quickly.The second requirement is that the max-
imum overshoot in the response to the unit-step reference input be between 19 %and 2 %and the
settling time be less than 1 sec. The third requirement is that the steady-state errors in the re-sponses to both the ramp and acceleration reference inputs be zero.
A set (or sets) of reasonable values of a, b, and cmust be searched using a computational
approach. To satisfy the first requirement, we choose the search region for a, b, andcto be
2/H11349a/H113496, 2 /H11349b/H113496, 6 /H11349c/H1134912
This region is shown in Figure 8–34. If the dominant closed-loop poles s=–a_jb are located
anywhere in the shaded region, the response to a step disturbance input will damp out quickly. (Thefirst requirement will be met.)
Notice that the denominator of Y(s)/D(s) can be written as
 =s
3+(2a +c)s2+Aa2+b2+2acBs+Aa2+b2Bc =(s+a+jb)(s +a-jb)(s +c) =s3+(1+10K)s2+10K(a+b)s+10Kabs2(s+1)+10K(s +a)(s+b)
0j6
j4
j2
–j6–j4–j2–6 –4 –2 –8 –10 –12 2 sRegion for
a and b
Region for cjv
Figure 8–34
Search regions fora, b, andc.
602
Chapter 8 / PID Controllers and Modified PID Controllers
Since the denominators of Y(s)/D(s) andY(s)/R(s) are the same, the denominator of Y(s)/D(s)
determines also the response characteristics for the reference input. To satisfy the third require-
ment, we refer to the zero-placement method and choose the closed-loop transfer function
Y(s)/R(s) to be of the following form:
in which case the third requirement is automatically satisfied.
Our problem then becomes a search of a set or sets of desired closed-loop poles in terms
ofa, b, and cin the specified region, such that the system will satisfy the requirement on the re-
sponse to the unit-step reference input that the maximum overshoot be between 19 %and 2 %and
the settling time be less than 1 sec. (If an acceptable set cannot be found in the search region, we
need to widen the region.)
In the computational search, we need to assume a reasonable step size. In this problem, we
assume it to be 0.2.
MATLAB Program 8–8 produces a table of sets of acceptable values of a, b, andc.Using this
program, we find that the requirement on the response to the unit-step reference input is met by
any of the 23 sets shown in the table in MATLAB Program 8–8. Note that the last row in the
table corresponds to the last search point. This point does not satisfy the requirement and thus it
should simply be ignored. (In the program written, the last search point produces the last row in
the table whether or not it satisfies the requirement.)Y(s)
R(s)=(2a +c)s
2
+Aa
2
+b
2
+2acBs+Aa
2
+b
2
Bc
s
3
+(2a +c)s
2
+Aa
2
+b
2
+2acBs+Aa
2
+b
2
Bc
MATLAB Program 8–8
t = 0:0.01:4;
k = 0;
for i = 1:21;
a(i) = 6.2-i*0.2;
for j = 1:21;
b(j) = 6.2-j*0.2;
for h = 1:31;
c(h) = 12.2-h*0.2;
num = [0  2*a(i)+c(h)  a(i)^2+b(j)^2+2*a(i)*c(h)  (a(i)^2+b(j)^2)*c(h)];
den = [1  2*a(i)+c(h)  a(i)^2+b(j)^2+2*a(i)*c(h)  (a(i)^2+b(j)^2)*c(h)];
y = step(num,den,t);
m = max(y);
s = 401; while y(s) > 0.98 & y(s) < 1.02;
s = s-1; end;
ts = (s-1)*0.01;
if m < 1.19 & m > 1.02 & ts < 1.0;
k = k+1;
table(k,:) = [a(i)  b(j)  c(h)  m  ts];
end
end
end
end
(continues on next page )
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 603As noted above, 23 sets of variables a, b, and csatisfy the requirement. Unit-step response
curves of the system with any of the 23 sets are about the same.The unit-step response curve with
a=4.2, b=2, c=12
is shown in Figure 8–35(a). The maximum overshoot is 18.96 %and the settling time is 0.85 sec.
Using these values of a, b, andc,the desired closed-loop poles are located at
s=–4.2_j2, s=–12
Using these closed-loop poles, the denominator of Y(s)/D(s) becomes
or
=s3+20.4s2+122.44s +259.68 s3+(1+10K)s2+10K(a+b)s+10Kab=(s+4.2+j2)(s +4.2-j2)(s +12) s2(s+1)+10K(s +a)(s+b)table(k,:) = [a(i)  b(j)  c(h)  m  ts]
table =
4.2000  2.0000  12.0000  1.1896  0.8500
4.0000  2.0000  12.0000  1.1881  0.87004.0000  2.0000  11.8000  1.1890  0.89004.0000  2.0000  11.6000  1.1899  0.90003.8000  2.2000  12.0000  1.1883  0.93003.8000  2.2000  11.8000  1.1894  0.94003.8000  2.0000  12.0000  1.1861  0.89003.8000  2.0000  11.8000  1.1872  0.91003.8000  2.0000  11.6000  1.1882  0.93003.8000  2.0000  11.4000  1.1892  0.94003.6000  2.4000  12.0000  1.1893  0.99003.6000  2.2000  12.0000  1.1867  0.96003.6000  2.2000  11.8000  1.1876  0.98003.6000  2.2000  11.6000  1.1886  0.99003.6000  2.0000  12.0000  1.1842  0.92003.6000  2.0000  11.8000  1.1852  0.94003.6000  2.0000  11.6000  1.1861  0.95003.6000  2.0000  11.4000  1.1872  0.97003.6000  2.0000  11.2000  1.1883  0.98003.4000  2.0000  12.0000  1.1820  0.94003.4000  2.0000  11.8000  1.1831  0.96003.4000  2.0000  11.6000  1.1842  0.98003.2000  2.0000  12.0000  1.1797  0.96002.0000  2.0000    6.0000  1.2163  1.8900
604
Chapter 8 / PID Controllers and Modified PID Controllers
By equating the coefficients of equal powers of son both sides of this last equation, we obtain
1+10K=20.4
10K(a+b)=122.44
10Kab=259.68
Output
t (sec)
(a)Unit-Step Response ( a = 4.2, b = 2, c = 12)
0.60.811.21.4
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3 3.5 4
Figure 8–35
(a) Response to unit-
step reference input
(a=4.2, b=2, c=12);
(b) response to unit-step
disturbance input
(a=4.2, b=2, c=12).
(b)
Output
t (sec)Response to Unit-Step Disturbance Input
0.020.030.040.050.060.07
0.01
0
−0.01
0 0.5 1 1.5 2 2.5 3 3.5 4
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 605Hence
Then can be written as
The closed-loop transfer function Y(s)/D(s) becomes
Using this expression, the response y(t) to a unit-step disturbance input can be obtained as shown
in Figure 8–35(b).
Figure 8–36(a) shows the response of the system to the unit-step reference input when a, b,
andcare chosen as
a=3.2, b=2, c=12
Figure 8–36(b) shows the response of this system when it is subjected to a unit-step disturbance
input. Comparing Figures 8–35(a) and Figure 8–36(a), we find that they are about the same. How-ever, comparing Figures 8–35(b) and 8–36(b), we find the former to be a little bit better than the
latter. Comparing the responses of systems with each set in the table, we conclude the first set of
values (a=4.2, b=2, c=12) to be one of the best. Therefore, as the solution to this problem,
we choose
a=4.2, b=2, c=12
Design Step 2: Next, we determine G
c1. Since Y(s)/R(s) can be given by
 =10sGc1
s3+20.4s2+122.44s +259.68 =10
s(s+1) Gc1
1+10
s(s+1) 1.94s2+12.244s +25.968
s Y(s)
R(s)=Gp Gc1
1+Gp Gc =10s
s3+20.4s2+122.44s +259.68 =10
s(s+1)+10 1.94s2+12.244s +25.968
s Y(s)
D(s)=10
s(s+1)+10Gc =1.94s2+12.244s +25.968
s =KCs2+(a+b)s+abD
s Gc(s)=K (s+a)(s+b)
sGc(s)K=1.94,  a+b=122.44
19.4,  ab=259.68
19.4
606
Chapter 8 / PID Controllers and Modified PID Controllers
our problem becomes that of designing to satisfy the requirements on the responses to the
step, ramp, and acceleration inputs.
Since the numerator involves “ s”, must include an integrator to cancel this “ s”.
[Although we want “ s” in the numerator of the closed-loop transfer function Y(s)/D(s) to obtain
zero steady-state error to the step disturbance input, we do not want to have “ s” in the numera-G
c1
(s)G
c1
(s)
(a)
Output
t (sec)Unit-Step Response ( a = 3.2, b = 2, c = 12)
0.60.811.21.4
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3 3.5 4
Figure 8–36
(a) Response to unit-step
reference input
(a=3.2, b=2, c=12);
(b) response to unit-step
disturbance input
(a=3.2, b=2, c=12).
(b)
Output
t (sec)Response to Unit-Step Disturbance Input
0.020.030.040.050.060.070.080.09
0.01
0
−0.01
0 0.5 1 1.5 2 2.5 3 3.5 4
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 607tor of the closed-loop transfer function Y(s)/R(s). ] To eliminate the offset in the response to the
step reference input and eliminate the steady-state errors in following the ramp reference inputand acceleration reference input, the numerator of Y(s)/R(s) must be equal to the last three
terms of the denominator, as mentioned earlier. That is,
or
Thus, is a PID controller. Since is given as
we obtain
Thus, is a derivative controller. A block diagram of the designed system is shown in 
Figure 8–37.
The closed-loop transfer function Y(s)/R(s) now becomes
Y(s)
R(s)=20.4s2+122.44s +259.68
s3+20.4s2+122.44s +259.68Gc2(s) =-0.1s =a1.94s +12.244 +25.968
sb-a2.04s +12.244 +25.968
sb Gc2(s)=Gc(s)-Gc1(s)Gc(s)=Gc1(s)+Gc2(s)=1.94s2+12.244s +25.968
sGc(s) Gc1(s) Gc1(s)=2.04s +12.244 +25.968
s 10sGc1(s)=20.4s2+122.44s +259.68
Y(s) R(s)D(s)
Gc2(s)Gc1(s)
0.1s+–++++10
s(s+1)25.968
s2.04s+12.244 +
Figure 8–37
Block diagram of thedesigned system.
608
Chapter 8 / PID Controllers and Modified PID Controllers
The response to the unit-ramp reference input and that to the unit-acceleration reference input
are shown in Figures 8–38(a) and (b), respectively. The steady-state errors in following the ramp
input and acceleration input are zero. Thus, all the requirements of the problem are satisfied.
Hence, the designed controllers and are acceptable.
EXAMPLE 8–5
Consider the control system shown in Figure 8–39. This is a two-degrees-of-freedom system. In the
design problem considered here, we assume that the noise input 
N(s)
is zero. Assume that the
plant transfer function is given by
G
p
(s)=5
(s+1)(s +5)G
p
(s)G
c2
(s) G
c1
(s)
Unit-Ramp Response
t (sec)0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
Unit-Ramp Input and Output
2
00.4
0.20.60.811.21.41.61.8
(a)
Output
Unit-Ramp Input
Figure 8–38
(a) Response to unit-
ramp reference
input; (b) response to
unit-acceleration
reference input.
Unit-Acceleration Response
t (sec)0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
Unit-Acceleration Input and Output
2.5
00.511.52
(b)
Unit-Acceleration Input
Output
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 609Assume also that the controller is of PID type. That is,
The controller is of P or PD type. [If involves integral control action, then this will
introduce a ramp component in the input signal, which is not desirable. Therefore, shouldnot include the integral control action.] Thus, we assume that
where may be zero.
Let us design controllers and such that the responses to the step-disturbance
input and the step-reference input are of “desirable characteristics” in the sense that
1.The response to the step-disturbance input will have a small peak and eventually approach
zero. (That is, there will be no steady-state error.)
2.The response to the step reference input will exhibit less than 25 %overshoot with a settling
time less than 2 sec.The steady-state errors to the ramp reference input and acceleration ref-erence input should be zero.
The design of this two-degrees-of-freedom control system may be carried out by following the
steps 1and2below.
1.Determine so that the response to the step-disturbance input is of desirable characteristics.
2.Design so that the responses to the reference inputs are of desirable characteristics
without changing the response to the step disturbance considered in step 1.
Design of First, note that we assumed the noise input 
N(s) to be zero.To obtain the re-
sponse to the step-disturbance input, we assume that the reference input is zero. Then the blockdiagram which relates Y(s) and D(s) can be drawn as shown in Figure 8–40. The transfer func-
tion Y(s)/D(s) is given by
Y(s)
D(s)=Gp
1+Gc1 GpGc1(s):Gc2(s)Gc1(s)Gc2(s) Gc1(s)TˆdGc2(s)=KˆpA1+Tˆd sBGc2(s)Gc2(s) Gc2(s)Gc1(s)=Kpa1+1
Ti s+Td sbGc1(s)Gp(s) Gc1(s)Gc2(s)
Y(s)
N(s)U(s)D(s)
R(s)
B(s)+–++++
++Figure 8–39
Two-degrees-of-freedom control
system.
D(s) Y(s)
+–Gp(s)
Gc1(s) Figure 8–40
Control system.
610
Chapter 8 / PID Controllers and Modified PID Controllers
where
This controller involves one pole at the origin and two zeros. If we assume that the two zeros are
located at the same place (a double zero), then can be written as
Then the characteristic equation for the system becomes
or
s(s+1)(s+5)+5K(s+a)
2
=0
which can be rewritten as
s
3
+(6+5K)s
2
+(5+10Ka)s+5Ka
2
=0 (8–8)
If we place the double zero between s=–3 ands=–6, then the root-locus plot of 
may look like the one shown in Figure 8–41. The speed of response should be fast, but not faster
than necessary, because faster response generally implies larger or more expensive components.
Therefore, we may choose the dominant closed-loop poles at
s=–3_j2
(Note that this choice is not unique. There are infinitely many possible closed-loop poles that we
may choose from.)
Since the system is of third order, there are three closed-loop poles. The third one is located
on the negative real axis to the left of point s=–5.
Let us substitute s=–3+j2 into Equation (8–8).
(–3+j2)
3
+(6+5K)(–3+j2)
2
+(5+10Ka)(–3+j2)+5Ka
2
=0G
c1
(s)G
p
(s)1+G
c1
(s)G
p
(s)=1+K(s +a)
2
s5
(s+1)(s +5)=0G
c1
(s)=K(s+a)
2
sG
c1
(s)G
c1
(s)=K
p
a
1+1
T
i
 
s+T
d
 
s
b
Root-Locus Plots of ( s + a)
2
/(s
3
 + 6s
2
 + 5s)
with a = 3, a = 4, a = 4.5, and a = 6
Real Axis
Imag Axis
2
−4
−6
−8−14 −12 −10 −8 −6 −4 −20 24
−2068
a = 6
a = 4.5
a = 4
a = 3
Figure 8–41
Root-locus plots of
5K(s+a)
2
/Cs(s+1)
(s+5)Dwhen a=3,
a=4, a=4.5, and
a=6.
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 611which can be simplified to
24+25K-30Ka+5Ka2+j(–16-60K+20Ka)=0
By equating the real part and imaginary part to zero, respectively, we obtain
24+25K-30Ka+5Ka2=0 (8–9)
–16-60K+20Ka=0 (8–10)
From Equation (8–10), we have
(8–11)
Substituting Equation (8–11) into Equation (8–9), we get
a2=13
ora=3.6056 or–3.6056. Notice that the values of Kbecome
K=1.3210 fora=3.6056
K=–0.1211 fora=–3.6056
Since is in the feedforward path, the gain Kshould be positive. Hence, we choose
K=1.3210, a=3.6056
Then can be given by
To determine and we proceed as follows:
(8–12)
Thus,
To check the response to a unit-step disturbance input, we obtain the closed-loop transfer
function Y(s)/D(s).
 =5s
s3+12.605s2+52.63s +85.8673 =5s
s(s+1)(s +5)+5K(s +a)2 Y(s)
D(s)=Gp
1+Gc1 GpKp=9.5260,  Ti=0.5547,  Td=0.1387 =9.5260a1+1
0.5547s+0.1387sb Gc1(s)=1.3210As2+7.2112s +13B
sTd , Kp ,Ti , =1.3210s2+9.5260s +17.1735
s =1.3210 (s+3.6056)2
s Gc1(s)=K (s+a)2
sGc1(s)Gc1(s)K=4
5a-15
612
Chapter 8 / PID Controllers and Modified PID Controllers
The response to the unit-step disturbance input is shown in Figure 8–42. The response curve seems
good and acceptable. Note that the closed-loop poles are located at s=–3_j2 ands=–6.6051.
The complex-conjugate closed-loop poles act as dominant closed-loop poles.
Design of We now design to obtain the desired responses to the reference inputs.
The closed-loop transfer function Y(s)/R(s) can be given by
Zero placement. We place two zeros together with the dc gain constant such that the numera-
tor is the same as the sum of the last three terms of the denominator. That is,
By equating the coefficients of s
2
terms and sterms on both sides of this last equation,
from which we get
Therefore,
(8–13) G
c2
(s)=1+1.2sK
ˆ
p
=1,
  
T
ˆ
d
=1.2 47.63 +5K
ˆ
p
=52.63 6.6051 +5K
ˆ
p
 
T
ˆ
d
=12.6051=12.6051s
2
+52.63s +85.8673 A6.6051 +5K
ˆ
p
 
T
ˆ
d
Bs
2
+A47.63 +5K
ˆ
p
Bs+85.8673 =A6.6051 +5K
ˆ
p
 
T
ˆ
d
Bs
2
+A47.63 +5K
ˆ
p
Bs+85.8673
s
3
+12.6051s
2
+52.63s +85.8673 =
c
1.321s
2
+9.526s +17.1735
s+K
ˆ
p
A1+T
ˆ
d
 
sB
d
 5
(s+1)(s +5)
1+1.321s
2
+9.526s +17.1735
s 5
(s+1)(s +5) Y(s)
R(s)=AG
c1
+G
c2
BG
p
1+G
c1
 
G
p
G
c2
(s) G
c2
(s):
y
d
(t)
t (sec)Unit-Step Response of Y(s)/D(s)
0.030.040.050.060.070.080.090.1
0.02
0.01
0
0 0.5 1 1.5 2 2.5 3
Figure 8–42
Response to unit-
step disturbance
input.
Openmirrors.com
Section 8–7 / Zero-Placement Approach to Improve Response Characteristics 613With this controller the closed-loop transfer function Y(s)/R(s) becomes
The response to the unit-step reference input becomes as shown in Figure 8–43(a).Y(s)
R(s)=12.6051s2+52.63s +85.8673
s3+12.6051s2+52.63s +85.8673Gc2(s),
(a)yr(t)
t (sec)Response to Unit-Step Reference Input
0.60.811.21.4
0.4
0.2
0
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
Figure 8–43
(a) Response to unit-step reference input;
(b) response to unit-
ramp referenceinput; (c) response tounit-accelerationreference input.
(b)yr(t)
t (sec)Response to Unit-Ramp Reference Input
0.60.811.21.41.61.82
0.4
0.2
0
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2Input
Output
614
Chapter 8 / PID Controllers and Modified PID Controllers
Figure 8–43
(continued)
(c)
y
r
(t)
t (sec)Response to Unit-Acceleration Reference Input
0.60.811.21.41.61.82
0.4
0.2
0
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
Input
Output
The response exhibits the maximum overshoot of 21 %and the settling time is approximately
1.6 sec. Figures 8–43(b) and (c) show the ramp response and acceleration response. The steady-
state errors in both responses are zero.The response to the step disturbance was satisfactory.Thus,
the designed controllers and given by Equations (8–12) and (8–13), respectively, are
satisfactory.
If the response characteristics to the unit-step reference input are not satisfactory, we need to
change the location of the dominant closed-loop poles and repeat the design process. The domi-
nant closed-loop poles should lie in a certain region in the left-half splane (such as 2/H11349a/H113496,
2/H11349b/H113496, 6/H11349c/H1134912). If the computational search is desired, write a computer program (sim-
ilar to MATLAB Program 8–8) and execute the search process. Then a desired set or sets of val-
ues of a, b, and cmay be found such that the system response to the unit-step reference input
satisfies all requirements on maximum overshoot and settling time.
EXAMPLE PROBLEMS AND SOLUTIONS
A–8–1. Describe briefly the dynamic characteristics of the PI controller, PD controller, and PID
controller.
Solution. The PI controller is characterized by the transfer function
The PI controller is a lag compensator. It possesses a zero at and a pole at s=0. Thus,
the characteristic of the PI controller is infinite gain at zero frequency. This improves the
steady-state characteristics. However, inclusion of the PI control action in the system increases thes=-1/H20862T
i
G
c
(s)=K
p
a
1+1
T
i
 
s
b
G
c2
(s) G
c1
(s)
Openmirrors.com
Example Problems and Solutions 615KE(s) U(s)
1
K0T1s
1+T1s1
1+T2s+–
Figure 8–44
PID controller.type number of the compensated system by 1, and this causes the compensated system to be less
stable or even makes the system unstable.Therefore, the values of must be chosen care-
fully to ensure a proper transient response. By properly designing the PI controller, it is possibleto make the transient response to a step input exhibit relatively small or no overshoot.The speedof response, however, becomes much slower. This is because the PI controller, being a low-passfilter, attenuates the high-frequency components of the signal.
The PD controller is a simplified version of the lead compensator. The PD controller has the
transfer function where
The value of K
pis usually determined to satisfy the steady-state requirement. The corner
frequency is chosen such that the phase lead occurs in the neighborhood of the gain
crossover frequency. Although the phase margin can be increased, the magnitude of the com-pensator continues to increase for the frequency region (Thus, the PD controller is ahigh-pass filter.) Such a continued increase of the magnitude is undesirable, since it amplifieshigh-frequency noises that may be present in the system. Lead compensation can provide a
sufficient phase lead, while the increase of the magnitude for the high-frequency region is
very much smaller than that for PD control. Therefore, lead compensation is preferred overPD control.
Because the transfer function of the PD controller involves one zero, but no pole, it is not
possible to electrically realize it by passive RLC elements only. Realization of the PD controller
using op amps, resistors, and capacitors is possible, but because the PD controller is a high-pass
filter, as mentioned earlier, the differentiation process involved may cause serious noise problemsin some cases.There is, however, no problem if the PD controller is realized by use of the hydraulicor pneumatic elements.
The PD control, as in the case of the lead compensator, improves the transient-response
characteristics, improves system stability, and increases the system bandwidth, which implies fast
rise time.
The PID controller is a combination of the PI and PD controllers. It is a lag–lead compensator.
Note that the PI control action and PD control action occur in different frequency regions. The
PI control action occurs at the low-frequency region and PD control action occurs at the high-
frequency region. The PID control may be used when the system requires improvements in bothtransient and steady-state performances.
A–8–2. Show that the transfer function U(s)/E(s) of the PID controller shown in Figure 8–44 is
Assume that the gain Kis very large compared with unity, or K/H112711.U(s)
E(s)=K0T1+T2
T1c1+1
AT1+T2Bs+T1 T2 s
T1+T2d1/H20862Td6v.1/H20862TdGc(s)=KpA1+Td sBGc(s),Kp and Ti
616
Chapter 8 / PID Controllers and Modified PID Controllers
+–
+–
E
i
(s)E(s)E
o
(s)Z
1
Z
2
C
1
C
2
R
1
R
2
R
4
R
3
R
5
Figure 8–45
Modified PID
controller.Solution
A–8–3. Consider the electronic circuit involving two operational amplifiers shown in Figure 8–45. This is
a modified PID controller in that the transfer function involves an integrator and a first-order
lag term. Obtain the transfer function of this PID controller.
Solution. Since
and
we have
Also,
E
o
(s)
E(s)=-R
5
R
4
E(s)
E
i
(s)=-Z
2
Z
1
=-AR
2
 
C
2
s+1BAR
1
 
C
1
 
s+1B
C
2
 
sAR
1
+R
3
+R
1
 
R
3
 
C
1
 
sBZ
2
=R
2
+1
C
2
 
sZ
1
=1
1
R
1
+C
1
 
s+R
3
=R
1
+R
3
+R
1
 
R
3
 
C
1
 
s
1+R
1
 
C
1
 
s=K
0
T
1
+T
2
T
1
c
1+1
AT
1
+T
2
Bs+T
1
 
T
2
 
s
T
1
+T
2
d
=K
0
a
1+1
T
1
 
s+T
2
 
s+T
2
T
1
b
=K
0
a
1+1
T
1
 
s
b
A1+T
2
 
sB=K
0
A1+T
1
 
sBA1+T
2
 
sB
T
1
 
s/H11216K
K
a
1
K
0
T
1
 
s
1+T
1
 
s1
1+T
2
 
s
b
U(s)
E(s)=K
1+K
a
1
K
0
T
1
 
s
1+T
1
 
s1
1+T
2
 
s
b
Openmirrors.com
Example Problems and Solutions 617R(s) C(s) 1
g
1
Tds+–
Figure 8–46
Approximatedifferentiator.
PID controller Plant G(s)C(s) R(s)D(s)
K(as+ 1) (bs+ 1)
s1
s2+ 3.6s+ 9+–++
Figure 8–47
PID-controlledsystem.Consequently,
Notice that R
1C1andR2C2determine the locations of the zeros of the controller, while R1,R3,and
C1affect the location of the pole on the negative real axis. R5/R4adjusts the gain of the controller.
A–8–4. In practice, it is impossible to realize the true differentiator. Hence, we always have to approxi-
mate the true differentiator by something like
One way to realize such an approximate differentiator is to utilize an integrator in the feedback path.
Show that the closed-loop transfer function of the system shown in Figure 8–46 is given by the pre-ceding expression. (In the commercially available differentiator, the value of gmay be set as 0.1.)
Solution. The closed-loop transfer function of the system shown in Figure 8–46 is
Note that such a differentiator with first-order delay reduces the bandwidth of the closed-loop
control system and reduces the detrimental effect of noise signals.
A–8–5. Consider the system shown in Figure 8–47. This is a PID control of a second-order plant G(s). As-
sume that disturbances D(s) enter the system as shown in the diagram. It is assumed that the ref-
erence input R(s) is normally held constant, and the response characteristics to disturbances are
a very important consideration in this system.C(s)
R(s)=1
g
1+1
gTd s=Td s
1+gTd sTd s
1+gTd sTd s=R5 R2
R4 R3as+1
R1 C1bas+1
R2 C2b
sas+R1+R3
R1 R3 C1b Eo(s)
Ei(s)=Eo(s)
E(s) E(s)
Ei(s)=R5
R4AR1+R3BC2 AR1 C1 s+1BAR2 C2 s+1B
saR1 R3
R1+R3 C1 s+1b
618
Chapter 8 / PID Controllers and Modified PID Controllers
Design a control system such that the response to any step disturbance will be damped out
quickly (in 2 to 3 sec in terms of the 2 %settling time). Choose the configuration of the closed-loop
poles such that there is a pair of dominant closed-loop poles. Then obtain the response to the
unit-step disturbance input. Also, obtain the response to the unit-step reference input.
Solution. The PID controller has the transfer function
For the disturbance input in the absence of the reference input, the closed-loop transfer function
becomes
(8–14)
The specification requires that the response to the unit-step disturbance be such that the settling
time be 2 to 3 sec and the system have a reasonable damping. We may interpret the specification
as and v
n
=4 rad /H20862sec for the dominant closed-loop poles.We may choose the third pole
ats=–10 so that the effect of this real pole on the response is small. Then the desired charac-
teristic equation can be written as
(s+10)As
2
+2*0.5*4s+4
2
B=(s+10)As
2
+4s+16B=s
3
+14s
2
+56s+160
The characteristic equation for the system given by Equation (8–14) is
s
3
+(3.6+Kab)s
2
+(9+Ka+Kb)s+K=0
Hence, we require
3.6+Kab=14
9+Ka+Kb=56
K=160
which yields
ab=0.065, a+b=0.29375
The PID controller now becomes
With this PID controller, the response to the disturbance is given by
 =s
(s+10)As
2
+4s+16B D(s) C
d
(s)=s
s
3
+14s
2
+56s +160 D(s) =10.4As
2
+4.5192s +15.385B
s =160A0.065s
2
+0.29375s +1B
s G
c
(s)=KCabs
2
+(a+b)s+1D
sz=0.5 =s
s
3
+(3.6 +Kab)s
2
+(9+Ka+Kb)s +K C
d
(s)
D(s)=s
sAs
2
+3.6s +9B+K(as +1)(bs +1)G
c
(s)=K(as +1)(bs +1)
s
Openmirrors.com
Example Problems and Solutions 619Clearly, for a unit-step disturbance input, the steady-state output is zero, since
The response to a unit-step disturbance input can be obtained easily with MATLAB. MATLAB
Program 8–9 produces a response curve as shown in Figure 8–48(a). From the response curve, we
see that the settling time is approximately 2.7 sec.The response damps out quickly.Therefore, the
system designed here is acceptable.lim
tSqcd(t)=lim
sS0sCd(s)=lim
sS0s2
(s+10)As2+4s+16B1
s=0
MATLAB Program 8–9
% ***** Response to unit-step disturbance input *****numd = [1  0];
dend = [1  14  56  160];t = 0:0.01:5;[c1,x1,t] = step(numd,dend,t);plot(t,c1)gridtitle('Response to Unit-Step Disturbance Input')xlabel('t Sec')ylabel('Output to Disturbance Input')
% ***** Response to unit-step reference input *****numr = [10.4  47  160];
denr = [1  14  56  160];[c2,x2,t] = step(numr,denr,t);plot(t,c2)gridtitle('Response to Unit-Step Reference Input')xlabel('t Sec')ylabel('Output to Reference Input')
For the reference input r(t), the closed-loop transfer function is
The response to a unit-step reference input can also be obtained by use of MATLAB Program 8–9.
The resulting response curve is shown in Figure 8–48(b).The response curve shows that the max-imum overshoot is 7.3 %and the settling time is 1.2 sec.The system has quite acceptable response
characteristics. =10.4s
2+47s +160
s3+14s2+56s +160 Cr(s)
R(s)=10.4As2+4.5192s +15.385B
s3+14s2+56s +160
620
Chapter 8 / PID Controllers and Modified PID Controllers
A–8–6. Consider the system shown in Figure 8–49. It is desired to design a PID controller such that
the dominant closed-loop poles are located at For the PID controller,
choose a=1 and then determine the values of Kand b.Sketch the root-locus diagram for the
designed system.
Solution. Since
G
c
(s)G(s) =K(s+1)(s +b)
s1
s
2
+1s=-1;j13
.G
c
(s)
Output to Disturbance Input
14
6
2
–4
8
12
4
10
0
–2 10
–3
Response to Unit-Step Disturbance Input
t Sec0 0.5
5 4.5
3
3.5
4
1
1.5
2
2.5
(a)
Output to Reference Input
1.2
0.6
0
0.8
1.0
0.4
0.2Response to Unit-Step Reference Input
t Sec0 0.5
5 4.5
3
3.5
4
1
1.5
2
2.5
(b)
Figure 8–48
(a) Response to
unit-step disturbance
input; (b) response to
unit-step reference
input.
Openmirrors.com
Example Problems and Solutions 621Real Axis–5 0 –1 1 –3 –4 –2Imag Axis
–203
–32
–11Root-Locus Plot of Gc(s)G(s)
Figure 8–50
Root-locus plot ofthe compensatedsystem.R(s) C(s)
PID controller Plant
Gc(s) G(s)(s+a ) (s+b)
sK1
s2+ 1+–
Figure 8–49
PID-controlledsystem.
the sum of the angles at one of the desired closed-loop poles, from the zero at
s=–1 and poles at s=0, s=j, ands=–j is
90°-143.794 °-120 °-110.104 °=–283.898 °
Hence the zero at s=–b must contribute 103.898°. This requires that the zero be located at
b=0.5714
The gain constant Kcan be determined from the magnitude condition.
or
K=2.3333
Then the compensator can be written as follows:
The open-loop transfer function becomes
From this equation a root-locus plot for the compensated system can be drawn. Figure 8–50 is a
root-locus plot.G
c(s)G(s) =2.3333(s +1)(s +0.5714)
s1
s2+1Gc(s)=2.3333(s+1)(s +0.5714)
s2K(s+1)(s +0.5714)
s1
s2+12
s=-1+j13=1s=-1+j13,
622
Chapter 8 / PID Controllers and Modified PID Controllers
The closed-loop transfer function is given by
The closed-loop poles are located at and s=–0.3333. A unit-step response curve
is shown in Figure 8–51. The closed-loop pole at s=–0.3333 and a zero at s=–0.5714 produce
a long tail of small amplitude.
A–8–7. Consider the system shown in Figure 8–52. Design a compensator such that the static velocity
error constant is 4 sec
−1
, phase margin is 50°, and gain margin is 10 dB or more. Plot unit-step and
unit-ramp response curves of the compensated system with MATLAB.Also, draw a Nyquist plot
of the compensated system with MATLAB. Using the Nyquist stability criterion, verify that the
designed system is stable.
Solution. Since the plant does not have an integrator, it is necessary to have an integrator in the
compensator. Let us choose the compensator to be
where is to be determined later. Since the static velocity error constant is specified as 
4 sec
−1
, we have
K
v
=lim
sS0
sG
c
(s)s+0.1
s
2
+1=lim
sS0
sK
sG
ˆ
c
(s)s+0.1
s
2
+1=0.1K=4G
ˆ
c
(s)G
c
(s)=K
sG
ˆ
c
(s),      lim
sS0
G
ˆ
c
(s)=1s=-1;j13
C(s)
R(s)=2.3333(s +1)(s +0.5714)
s
3
+s+2.3333(s +1)(s +0.5714)
Time (sec)08
12 10
4
2
6
Amplitude
0.4
0.81.2
0.6
1
0.2
0Unit-Step Response of Compensated System
Figure 8–51
Unit-step response of
the compensated
system.
G
c
(s)s+ 0.1
s
2
+ 1
+−
Figure 8–52
Control system.
Openmirrors.com
Example Problems and Solutions 623Thus, K= 40. Hence
Next, we plot a Bode diagram of
MATLAB Program 8–10 produces a Bode diagram of G(s) as shown in Figure 8–53.G(s) =40(s+0.1)
s(s2+1)Gc(s)=40
sGˆc(s)
We need the phase margin of 50° and gain margin of 10 dB or more. Let us choose to be
Then Gc(s)will contribute up to 90° phase lead in the high-frequency region. By simple MATLAB
trials, we find that a= 0.1526 gives the phase margin of 50° and gain margin of dB. +qGˆc(s)=as+1(a70)Gˆc(s)MATLAB Program 8–10
% ***** Bode Diagram ***** num = [40  4];
den = [1  0.000000001  1  0];bode(num,den)title('Bode Diagram of G(s) = 40(s+0.1)/[s(s^2+1)]')
Figure 8–53
Bode diagram of G(s)=40(s+0.1)/[s(s
2+1) ]. Frequenc y (rad/sec)Bode Diagram of G(s) = 40( s + 0.1)/[ s(s2 + 1)]
−200−50
−100
−1500−100Phase (deg); Magnitude (dB)0300
200
100
10−310−210−1100101
624
Chapter 8 / PID Controllers and Modified PID Controllers
MATLAB Program 8–11
% ***** Bode Diagram *****
num = conv([40  4],[0.1526  1]);
den = [1  0.000000001  1  0];
sys = tf(num,den);
w = logspace(-2,2,100);
bode(sys,w)
[Gm,pm,wcp,wcg] = margin(sys);
GmdB = 20*log10(Gm);
[GmdB,pm,wcp,wcg]
ans = 
Inf 50.0026 NaN 8.0114
title('Bode Diagram of G(s) = 40(s+0.1)(0.1526s+1)/[s(s^2+1)]')
Figure 8–54
Bode diagram of
G(s)=40(s+0.1)
(0.1526s+1)/
[s(s
2
+1)].
Frequenc
y
 (rad/sec)Bode Diagram of G(s) = 40( s + 0.1)(0.1526 s + 1)/[ s(s
2
 + 1)]
−20050
−500
−100
−150100−50
Phase (deg); Magnitude (dB)
0100
50
10
−2
10
−1
10
0
10
1
10
2
The designed compensator has the following transfer function:
G
c
(s)=40
sG
ˆ
c
(s)=40(0.1526 s+1)
sSee MATLAB Program 8–11 and the resulting Bode diagram shown in Figure 8–54. From this
Bode diagram we see that the static velocity error constant is 4 sec
−1
, phase margin is 50° and gain
margin is dB. Therefore, the designed system satisfies all the requirements. +q
Openmirrors.com
Example Problems and Solutions 625The open-loop transfer function of the designed system is
Open-loop transfer function
We shall next check the unit-step response and the unit-ramp response of the designed system.
The closed-loop transfer function is
The closed-loop poles are located at
s= /H110023.0032+j5.6573
s= /H110023.0032-j5.6573
s= /H110020.0975
MATLAB Program 8–12 will produce the unit-step response curve of the designed system.The re-
sulting unit-step response curve is shown in Figure 8–55. Notice that the closed-loop pole at 
s=−0.0975 and the plant zero at s=−0.1 produce a long tail of small amplitude.C(s)
R(s)=6.104 s2+40.6104 s+4
s3+6.104 s2+41.6104 s+4=6.104 s2+40.6104 s+4
s(s2+1)=40(0.1526 s+1)
ss+0.1
s2+1
MATLAB Program 8–12
% ***** Unit-Step Response *****num = [6.104  40.6104  4];
den = [1  6.104  41.6104  4];t = 0:0.01:10;step(num,den,t)grid
Figure 8–55
Unit-step response ofC(s)/R(s)=(6.104s
2+
40.6104s+4)/(s3+
6.104s2+41.6104s+4). Time (sec)2 1 79 6 8 10 0 4 3 5Amplitude1.4
0.8
01.2
0.4
0.21
0.6Step Response
MATLAB Program 8–13 produces the unit-ramp response curve of the designed system. The
resulting response curve is shown in Figure 8–56.
626
Chapter 8 / PID Controllers and Modified PID Controllers
MATLAB Program 8–13
% ***** Unit-Ramp Response *****
num = [0  0  6.104  40.6104  4];
den = [1  6.104  41.6104  4  0];
t = 0:0.01:20;
c = step(num,den,t);
plot(t,c,'-.',t,t,'-')
title('Unit-Ramp Response')
xlabel('t(sec)')
ylabel('Input Ramp Function and Output')
text(3,11.5,'Input Ramp Function')
text(13.8,11.2,'Output')
Figure 8–56
Unit-ramp response 
ofC(s)/R(s)=
(6.104s
2
+40.6104s+
4)/(s
3
+6.104s
2
+
41.6104s+4).
Output Input Ramp Function
t (sec)4 2 14 18 12 16 20 0 8 6 10
Input Ramp Function and Output
20
8
012
18
4
216
1014
6Unit-Ramp Response
Nyquist Plot.
Earlier we found that the three closed-loop poles of the designed system are
all in the left-half splane. Hence the designed system is stable. The purpose of plotting Nyquist
diagram here is not to test the stability of the system, but to enhance our understanding of Nyquist
stability analysis. For a complicated system, Nyquist plot will look complicated enough that it is
not easy to count the number of encirclements of the −1+j0 point.
Openmirrors.com
Example Problems and Solutions 627Because the designed system involves three open-loop poles on the jwaxis, the Nyquist dia-
gram will look quite complicated as we will see in what follows:
Define the open-loop transfer function of the designed system as G(s) . Then
Let us choose a modified Nyquist path in the splane as shown in Figure 8–57(a). The modified
path encloses three open-loop poles (s=0, s=j1, s= /H11002j1). Now define s1=s+ . Then,
the Nyquist path in the s1plane becomes as shown in Figure 8–57(b). In the s1plane, the open-
loop transfer function has three poles in the right-half s1plane.
Let us choose Since we have
Open-loop transfer function in the s1plane
A MATLAB program to obtain the Nyquist plot is shown in MATLAB Program 8–14. The re-
sulting Nyquist plot is shown in Figure 8–58.=6.104 s12+40.48832 s1+3.5945064
s13-0.03s12+1.0003 s1-0.010001=6.104 (s12-0.02s1+0.0001 )+40.6104 (s1-0.01)+4
(s1-0.01)(s12-0.02s1+1.0001 )G(s) =G(s1-0.01)s=s1-s0, s0=0.01.s0G(s) =Gc(s)s+0.1
s2+1=6.104 s2+40.6104 s+4
s(s2+1)Figure 8–57
(a) ModifiedNyquist path in thesplane;
(b) Nyquist path inthes
1plane.s plane s1 planejv
(a) (b)0 s
s0jv
0 s
MATLAB Program 8–14
% ***** Nyquist Plot *****num = [6.104  40.48832  3.5945064];
den = [1  -0.03  1.0003  -0.010001];nyquist(num,den)v = [-1500  1500  -2500  2500]; axis(v)
628
Chapter 8 / PID Controllers and Modified PID Controllers
Figure 8–58
Nyquist plot.
−1500 −1000 −500 0 500 1000 1500
Real AxisNyquest Diagram
Imaginary Axis
2500
2000
1500
1000
500
0
−500
−1000
−1500
−2000
−2500
Figure 8–59
Redrawn Nyquist
plot.
Im
Rev= 0+v= 0−
v=−`v=+`
Using the Nyquist plot obtained here, it is not easy to determine the encirclements of the −1+j0
point by the Nyquist locus. Therefore, we need to redraw this Nyquist plot qualitatively to show
the details near the −1+j0 point. Such a redrawn Nyquist diagram is shown in Figure 8–59.
From this diagram we find that the −1+j0 point is encircled counterclockwise three times.
Hence, N/H11005−3. Since the open-loop transfer function has three poles in the right-half s
1
plane,
we have P/H110053.Then, we have Z/H11005N+P /H110050.This means that there are no closed-loop poles in
the right-half s
1
plane. The system is therefore stable.
A–8–8. Show that the I-PD-controlled system shown in Figure 8–60(a) is equivalent to the PID-controlled
system with input filter shown in Figure 8–60(b).
Openmirrors.com
Example Problems and Solutions 629Solution. The closed-loop transfer function C(s)/R(s) of the I-PD-controlled system is
The closed-loop transfer function C(s)/R(s) of the PID-controlled system with input filter
shown in Figure 8–60(b) is
The closed-loop transfer functions of both systems are the same.Thus, the two systems are equivalent.
A–8–9. The basic idea of the I-PD control is to avoid large control signals (which will cause a saturation
phenomenon) within the system. By bringing the proportional and derivative control actions to
the feedback path, it is possible to choose larger values for than those possible by thePID control scheme.
Compare, qualitatively, the responses of the PID-controlled system and I-PD-controlled system
to the disturbance input and to the reference input.
Solution. Consider first the response of the I-PD-controlled system to the disturbance input.
Since, in the I-PD control of a plant, it is possible to select larger values for than thoseof the PID-controlled case, the I-PD-controlled system will attenuate the effect of disturbance
faster than the PID-controlled case.
Next, consider the response of the I-PD-controlled system to a reference input. Since the
I-PD-controlled system is equivalent to the PID-controlled system with input filter (refer to Prob-lemA–8–8 ), the PID-controlled system will have faster responses than the corresponding I-PD-con-
trolled system, provided a saturation phenomenon does not occur in the PID-controlled system.K
p and TdKp and Td =Kp
Ti s Gp(s)
1+Kpa1+1
Ti s+Td sbGp(s) C(s)
R(s)=1
1+Ti s+Ti Td s2 Kpa1+1
Ti s+Td sbGp(s)
1+Kpa1+1
Ti s+Td sbGp(s)C(s)
R(s)=Kp
Ti sGp(s)
1+Kpa1+1
Ti s+Td sbGp(s)(b)Gp(s)C(s) R(s)
Kp(1++ Tds)1
Tis1
1+Tis+TiTds2+–(a)Kp
TisGp(s)C(s) R(s)
Kp(1+Tds)+–+–
Figure 8–60
(a) I-PD-controlledsystem;(b) PID-controlledsystem with input
filter.
630
Chapter 8 / PID Controllers and Modified PID Controllers
A–8–10. In some cases it is desirable to provide an input filter as shown in Figure 8–61(a). Notice that the
input filter is outside the loop. Therefore, it does not affect the stability of the closed-
loop portion of the system.An advantage of having the input filter is that the zeros of the closed-loop
transfer function can be modified (canceled or replaced by other zeros) so that the closed-
loop response is acceptable.
Show that the configuration in Figure 8–61(a) can be modified to that shown in Figure 8–61(b),
where The compensation structure shown in Figure 8–61(b) is some-
times called command compensation.
Solution. For the system of Figure 8–61(a), we have
(8–15)
For the system of Figure 8–61(b), we have
Thus
or
(8–16)
By substituting into Equation (8–16), we obtain
 =G
f
(s) G
c
(s)G
p
(s)
1+G
c
(s)G
p
(s) C(s)
R(s)=CG
f
(s)G
c
(s)-G
c
(s)+G
c
(s)DG
p
(s)
1+G
c
(s)G
p
(s)CG
f
(s)-1DG
c
(s) G
d
(s)=C(s)
R(s)=CG
d
(s)+G
c
(s)DG
p
(s)
1+G
c
(s)G
p
(s)C(s) =G
p
(s)EG
d
(s)R(s) +G
c
(s)CR(s) -C(s)DF C(s) =G
p
(s)U(s) E(s) =R(s) -C(s) U(s) =G
d
(s)R(s) +G
c
(s)E(s)C(s)
R(s)=G
f
(s)G
c
(s)G
p
(s)
1+G
c
(s)G
p
(s)CG
f
(s)-1DG
c
(s). G
d
(s)=G
f
(s)
(a)
(b)
G
c
(s)C(s) R(s)
G
p
(s)
G
f
(s)
G
c
(s)C(s) R(s) E(s)
G
d
(s)
G
p
(s)
U(s)
+–
+–
++
Figure 8–61
(a) Block diagram of
control system with
input filter;
(b) modified block
diagram.
Openmirrors.com
which is the same as Equation (8–15). Hence, we have shown that the systems shown in Figures
8–61(a) and (b) are equivalent.
It is noted that the system shown in Figure 8–61(b) has a feedforward controller In
such a case, does not affect the stability of the closed-loop portion of the system.
A–8–11. A closed-loop system has the characteristic that the closed-loop transfer function is nearly equal
to the inverse of the feedback transfer function whenever the open-loop gain is much greaterthan unity.
The open-loop characteristic may be modified by adding an internal feedback loop with a
characteristic equal to the inverse of the desired open-loop characteristic. Suppose that a
unity-feedback system has the open-loop transfer function
Determine the transfer function H(s) of the element in the internal feedback loop so that the inner
loop becomes ineffective at both low and high frequencies.
Solution. Figure 8–62(a) shows the original system. Figure 8–62(b) shows the addition of the in-
ternal feedback loop around G(s). Since
if the gain around the inner loop is large compared with unity, then is
approximately equal to unity, and the transfer function C(s)/E(s) is approximately equal to 1/H(s).
On the other hand, if the gain is much less than unity, the inner loop becomes
ineffective and C(s)/E(s) becomes approximately equal to G(s).
To make the inner loop ineffective at both the low- and high-frequency ranges, we require that
Since, in this problem,
G(jv)=K
A1+jvT1BA1+jvT2B|G(jv)H(jv)|/H112701,for v/H112701 and v/H112711@G(s)H(s)@G(s)H(s) /H20862C1+G(s)H(s)DC(s)
E(s)=G(s)
1+G(s)H(s)=1
H(s)G(s)H(s)
1+G(s)H(s)G(s) =K
AT1 s+1BAT2 s+1BGd(s)Gd(s).
Example Problems and Solutions 631(a)
(b)G(s)C R
G(s)
H(s)C E R
GH(s)1
H(s)C E R
=+–
+–+–+–+–Figure 8–62
(a) Control system;
(b) addition of the
internal feedbackloop to modify theclosed-loopcharacteristic.
632
Chapter 8 / PID Controllers and Modified PID Controllers
the requirement can be satisfied if H(s) is chosen to be
H(s)=ks
because
Thus, with H(s)=ks (velocity feedback), the inner loop becomes ineffective at both the low-
and high-frequency regions. It becomes effective only in the intermediate-frequency region.
A–8–12. Consider the control system shown in Figure 8–63. This is the same system as that considered in
Example 8–1. In that example we designed a PID controller , starting with the second method
of the Ziegler–Nichols tuning rule. Here we design a PID controller using the computational
approach with MATLAB. We shall determine the values of Kandaof the PID controller
such that the unit-step response will exhibit the maximum overshoot between 10 %and 2 %
(1.02 /H11349maximum output /H113491.10) and the settling time will be less than 3 sec.The search region is
2/H11349K/H1134950, 0.05 /H11349a/H113492
Let us choose the step size for Kto be 1 and that for ato be 0.05.
Write a MATLAB program to find the first set of variables Kandathat will satisfy the given
specifications. Also, write a MATLAB program to find all possible sets of variables Kandathat
will satisfy the given specifications. Plot the unit-step response curves of the designed system with
the chosen sets of variables Kanda.
Solution. The transfer function of the plant is
The closed-loop transfer function C(s)/R(s) is given by
A possible MATLAB program that will produce the first set of variables Kand athat
will satisfy the given specifications is given in MATLAB Program 8–15. In this program we C(s)
R(s)=Ks
2
+2Kas +Ka
2
s
4
+6s
3
+(5+K)s
2
+2Kas +Ka
2
G
p
(s)=1
s
3
+6s
2
+5sG
c
(s)=K(s+a)
2
sG
c
(s) lim
vSq
G(jv)H(jv)=lim
vSq
 Kkjv
A1+jvT
1
BA1+jvT
2
B=0 lim
vS0
G(jv)H(jv)=lim
vS0
 Kkjv
A1+jvT
1
BA1+jvT
2
B=0
R(s) C(s)
PID
controller1
s(s+ 1) (s+ 5)
+–
G
c
(s)
Figure 8–63
Control system.
Openmirrors.com
Example Problems and Solutions 633MATLAB Program 8–15
t = 0:0.01:5;
for K = 50:-1:2;
for a = 2:-0.05:0.05;
num = [K  2*K*a  K*a^2];den = [1  6  5+K  2*K*a  K*a^2];
y = step(num,den,t);m = max(y);s = 501; while y(s) > 0.98 & y(s) < 1.02;s = s-1; end;ts = (s-1)*0.01;
if m < 1.10 & m > 1.02 & ts < 3.0break;endend
if m < 1.10 & m > 1.02 & ts < 3.0breakendend
plot(t,y)gridtitle('Unit-Step Response')xlabel('t sec')ylabel('Output')solution = [K;a;m;ts]
solution =32.0000
0.20001.09692.6400use two ‘for’ loops. The specification for the settling time is interpreted by the following four
lines:
.
Note that for t=0 : 0.01 : 5, we have 501 computing time points. s=501 corresponds to the last
computing time point.
The solution obtained by this program is 
K=32, a=0.2
with the maximum overshoot equal to 9.69 %and the settling time equal to 2.64 sec.The resulting
unit-step response curve is shown in Figure 8–64.ts63.0ts=(s-1) * 0.01s=s-1; end;s=501; while y (s)70.98 and y (s)61.02;
634
Chapter 8 / PID Controllers and Modified PID Controllers
Output
t (sec)Unit-Step Response
1.4
1.2
1
0.8
0.6
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5
Figure 8–64
Unit-step response
curve.
MATLAB Program 8–16
t = 0:0.01:5;
k = 0;
for i = 1:49;
K(i) = 51-i*1;
for j = 1:40;
a(j) = 2.05-j*0.05;
num = [K(i)  2*K(i)*a(j)  K(i)*a(j)*a(j)];
den = [1  6  5+K(i)  2*K(i)*a(j)  K(i)*a(j)*a(j)];
y = step(num,den,t);
m = max(y);
s = 501; while y(s) > 0.98 & y(s) < 1.02;
s = s-1; end;
ts = (s-1)*0.01;
if m < 1.10 & m > 1.02 & ts < 3.0
k = k+1;
table(k,:) = [K(i)  a(j)  m  ts];
end
end
end
table(k,:) = [K(i)  a(j)  m  ts]
table =
(continues on next page )
Next, we shall consider the case where we want to find all sets of variables that will satisfy the
given specifications. A possible MATLAB program for this purpose is given in MATLAB Pro-
gram 8–16. Note that in the table shown in the program, the last row of the table (k, :) or the first
row of the sorttable should be ignored. (These are the last Kandavalues for searching purposes.)
Openmirrors.com
Example Problems and Solutions 63532.0000  0.2000  1.0969  2.6400
31.0000  0.2000  1.0890  2.690030.0000  0.2000  1.0809  2.730029.0000  0.2500  1.0952  1.780029.0000  0.2000  1.0726  2.780028.0000  0.2000  1.0639  2.830027.0000  0.2000  1.0550  2.8900
2.0000  0.0500  0.3781  5.0000
sorttable = sortrows(table,3)sorttable =
2.0000  0.0500  0.3781  5.0000
27.0000  0.2000  1.0550  2.890028.0000  0.2000  1.0639  2.830029.0000  0.2000  1.0726  2.780030.0000  0.2000  1.0809  2.730031.0000  0.2000  1.0890  2.690029.0000  0.2500  1.0952  1.780032.0000  0.2000  1.0969  2.6400
K = sorttable(7,1)K =
29
a = sorttable(7,2)a=
0.2500
num = [K  2*K*a  K*a^2];
den = [1  6  5+K  2*K*a  K*a^2];y = step(num,den,t);plot(t,y)gridholdCurrent plot heldK = sorttable(2,1)
K=
27
a = sorttable(2,2)a=
0.2000
(continues on next page )
636
Chapter 8 / PID Controllers and Modified PID Controllers
From the sorttable, it seems that
K=29, a=0.25 (max overshoot =9.52% , settling time =1.78 sec)
and
K=27, a=0.2 (max overshoot =5.5% , settling time =2.89 sec)
are two of the best choices.The unit-step response curves for these two cases are shown in Figure 8–65.
From these curves, we might conclude that the best choice depends on the system objective. If a small
maximum overshoot is desired, K=27, a=0.2 will be the best choice. If the shorter settling time is
more important than a small maximum overshoot, then K=29, a=0.25 will be the best choice.
A–8–13. Consider the two-degrees-of-freedom control system shown in Figure 8–66. The plant is
given by
Assuming that the noise input 
N(s)
is zero, design controllers and such that the
designed system satisfies the following:
1.The response to the step disturbance input has a small amplitude and settles to zero quickly
(on the order of 1 sec to 2 sec).G
c2
(s) G
c1
(s)G
p
(s)=100
s(s+1)G
p
(s)
num = [K  2*K*a  K*a^2];
den = [1  6  5+K  2*K*a  K*a^2];
y = step(num,den,t);
plot(t,y)
title('Unit-Step Response Curves')
xlabel('t (sec)')
ylabel('Output')
text(1.22,1.22,'K = 29, a = 0.25')
text(1.22,0.72,'K = 27, a = 0.2')
Output
t (sec)Unit-Step Response Curves
1.4
1.2
1
0.8
0.6
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5
K= 29, a = 0.25
K= 27, a = 0.2
Figure 8–65
Unit-step response
curves.
Openmirrors.com
Example Problems and Solutions 637Gp(s) Gc1(s)Gc2(s)
Y(s)
N(s)U(s)D(s)
R(s)
B(s)+–++++
++Figure 8–66
Two-degrees-of-freedom control
system.
2.The response to the unit-step reference input has a maximum overshoot of 25 %or less, and
the settling time is 1 sec or less.
3.The steady-state errors in following ramp reference input and acceleration reference input
are zero.
Solution. The closed-loop transfer functions for the disturbance input and reference input are
given, respectively, by
Let us assume that is a PID controller and has the following form:
The characteristic equation for the system is
Notice that the open-loop poles are located at s=0 (a double pole) and s=–1. The zeros are
located at s=–a (a double zero).
In what follows, we shall use the root-locus approach to determine the values of aandK. Let
us choose the dominant closed-loop poles at s=–5_j5. Then, the angle deficiency at the desired
closed-loop pole at s=–5+j5 is
–135 °-135 °-128.66 °+180 °=–218.66 °
The double zero at s=–a must contribute 218.66°. (Each zero must contribute 109.33°.) By a
simple calculation, we find
a=–3.2460
The controller is then determined as
The constant Kmust be determined by use of the magnitude condition. This condition is
@G
c1(s)Gp(s)@s=-5+j5=1Gc1(s)=K(s +3.2460)2
sGc1(s)1+Gc1(s)Gp(s)=1+K(s +a)2
s100
s(s+1)Gc1(s)=K(s +a)2
sGc1(s) Y(s)
R(s)=CGc1(s)+Gc2(s)DGp(s)
1+Gc1(s)Gp(s) Y(s)
D(s)=Gp(s)
1+Gc1(s)Gp(s)
638
Chapter 8 / PID Controllers and Modified PID Controllers
Since
we obtain
The controller thus becomes
(8–17)
Then, the closed-loop transfer function Y(s)/D(s) is obtained as follows:
The response curve when D(s) is a unit-step disturbance is shown in Figure 8–67.=100s
s
3
+12.403 s
2
+74.028 s+120.148=100
s(s+1)
1+0.11403 (s+3.2460 )
2
s100
s(s+1)Y(s)
D(s)=G
p
(s)
1+G
c1
(s)G
p
(s)=0.74028 +1.20148
s+0.11403 s=0.11403 s
2
+0.74028 s+1.20148
sG
c1
(s)=0.11403 (s+3.2460 )
2
sG
c1
(s) =0.11403 K=
2
s
2
(s+1)
100(s +3.2460)
2
2
s=-5+j5
G
c1
(s)G
p
(s)=K(s +3.2460)
2
s100
s(s+1)
y
d
(t)
t (sec)Response to Unit-Step Disturbance Input
0.60.811.21.41.61.82
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3 3.5 4
Figure 8–67
Response to unit-
step disturbance
input.
Openmirrors.com
Example Problems and Solutions 639(a)t (sec)Response to Unit-Step Reference Input
0.60.811.21.4
0.4
0.2
0
0 0.5 1 1.5 2 2.5 3yr(t)
Figure 8–68
(a) Response to unit-step reference input;
(b) response to unit-
ramp referenceinput; (c) response tounit-accelerationreference input.Next, we consider the responses to reference inputs. The closed-loop transfer function
Y(s)/R(s) is
Let us define
Then
To satisfy the requirements on the responses to the ramp reference input and acceleration
reference input, we use the zero-placement approach. That is, we choose the numerator ofY(s)/R(s) to be the sum of the last three terms of the denominator, or
from which we get
(8–18)
Hence, the closed-loop transfer function Y(s)/R(s) becomes as
The response curves to the unit-step reference input, unit-ramp reference input, and unit-
acceleration reference input are shown in Figures 8–68(a), (b), and (c), respectively.The maximumY(s)
R(s)=12.403 s2+74.028 s+120.148
s3+12.403 s2+74.028 s+120.148=0.74028 +1.20148
s+0.12403 sGc(s)=0.12403 s2+0.74028 s+1.20148
s100sGc(s)=12.403 s2+74.028 s+120.148=100sGc(s)
s3+12.403 s2+74.028 s+120.148Y(s)
R(s)=Gc(s)Gp(s)
1+Gc1(s)Gp(s)Gc1(s)+Gc2(s)=Gc(s)Y(s)
R(s)=CGc1(s)+Gc2(s)DGp(s)
1+Gc1(s)Gp(s)
overshoot in the unit-step response is approximately 25 %and the settling time is approximately
1.2 sec. The steady-state errors in the ramp response and acceleration response are zero. There-
fore, the designed controller given by Equation (8–18) is satisfactory.
Finally, we determine Noting that
G
c2
(s)=G
c
(s)-G
c1
(s)G
c2
(s).G
c
(s)
640
Chapter 8 / PID Controllers and Modified PID Controllers
(b)t (sec)Response to Unit-Ramp Reference Input
1.522.53
1
0.5
0
0 0.5 1 1.5 2 2.5 3
Input
Output
y
r
(t)
(c)
y
r
(t)
t (sec)Response to Unit-Acceleration Reference Input
0.60.811.21.41.61.82
0.4
0.2
0
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
Input
Output
Figure 8–68
(continued)
Openmirrors.com
and from Equation (8–17)
we obtain
(8–19)
Equations (8–17) and (8–19) give the transfer functions of the controllers re-
spectively. The block diagram of the designed system is shown in Figure 8–69.
Note that if the maximum overshoot were much higher than 25 %and/or the settling time
were much larger than 1.2 sec, then we might assume a search region (such as 3/H11349a/H113496,
3/H11349b/H113496,and 6/H11349c/H1134912) and use the computational method presented in Example 8–4 to
find a set or sets of variables that would give the desired response to the unit-step reference input.
PROBLEMSGc1(s) and Gc2(s), =0.01s - a0.7403 +1.20148
s+0.11403sb Gc2(s)=a0.7403 +1.20148
s+0.12403sbGc1(s)=0.7403 +1.20148
s+0.11403s
Problems 641100
s(s+1)0.01s
Y(s)D(s)
R(s)
+–++++ 1.20148
s0.7403 ++  0.11403 s
Figure 8–69
Block diagram of thedesigned system.
B–8–1. Consider the electronic PID controller shown in
Figure 8–70. Determine the values of R
1,R2,R3,R4,C1,
and C2of the controller such that the transfer function
is Gc(s)=Eo(s) /H20862Ei(s) =30.3215 (s+0.65)2
s Gc(s)=39.42a1+1
3.077s+0.7692sb
+–
+–
Ei(s)E(s)Eo(s)C1 C2
R1R2
R3R4
Figure 8–70
Electronic PID controller.
642
Chapter 8 / PID Controllers and Modified PID Controllers
B–8–2. Consider the system shown in Figure 8–71.
Assume that disturbances D(s) enter the system as shown
in the diagram. Determine parameters K, a, and bsuch
that the response to the unit-step disturbance input and
the response to the unit-step reference input satisfy the
following specifications: The response to the step distur-
bance input should attenuate rapidly with no steady-state
error, and the response to the step reference input exhibits
a maximum overshoot of 20 %or less and a settling time
of 2 sec.B–8–3. Show that the PID-controlled system shown in
Figure 8–72(a) is equivalent to the I-PD-controlled system
with feedforward control shown in Figure 8–72(b).
B–8–4. Consider the systems shown in Figures 8–73(a) 
and (b). The system shown in Figure 8–73(a) is the system
designed in Example 8–1. The response to the unit-step
reference input in the absence of the disturbance input is
shown in Figure 8–10. The system shown in Figure 8–73(b)
is the I-PD-controlled system using the same K
p
,
as the system shown in Figure 8–73(a).T
i
 
, and T
d
C(s) R(s)
D(s)
K(as+ 1) (bs+ 1)
s
2(s+ 2)
(s+ 1) (s+ 10)
+–
++
Figure 8–71
Control system.
(a)
(b)
K
p
Tis
G
p
(s)
C(s) R(s)
K
p
(1+T
d
s)
K
p
(1+T
d
s)
G
p
(s)
C(s) R(s)
K
p
(1++ T
d
s)1
T
i
s
+–
+–
+–
+
Figure 8–72
(a) PID-controlled system; (b) I-PD-controlled system with
feedforward control.
Openmirrors.com
Problems 643Obtain the response of the I-PD-controlled system to
the unit-step reference input with MATLAB. Compare theunit-step response curves of the two systems.
B–8–5. Referring to Problem B–8–4, obtain the response
of the PID-controlled system shown in Figure 8–73(a) to the
unit-step disturbance input.
Show that for the disturbance input, the responses of
the PID-controlled system shown in Figure 8–73(a) and ofthe I-PD-controlled system shown in Figure 8–73(b) areexactly the same. [When considering D(s) to be the input, as-
sume that the reference input R(s) is zero, and vice versa.]
Also, compare the closed-loop transfer function C(s)/R(s)
of both systems.
B–8–6. Consider the system shown in Figure 8–74.This sys-
tem is subjected to three input signals: the reference input,disturbance input, and noise input. Show that the charac-teristic equation of this system is the same regardless ofwhich input signal is chosen as input.
(a)
(b)C(s) R(s)D(s)
PID contoller39.42 (1 +1
3.077 s+ 0.7692 s)1
s(s+ 1) (s+ 5)
D(s)
C(s) R(s)
1+ 0.7692 s39.421
s(s+ 1) (s+ 5)1
3.077 s+–++
+–+–++
Figure 8–73
(a) PID-controlled system; (b) I-PD-controlled system.
G2(s)
H(s)C(s)
Noise
N(s)R(s)Disturbance
D(s)
G1(s) ++
+++–
Figure 8–74
Control system.
644
Chapter 8 / PID Controllers and Modified PID Controllers
B–8–7. Consider the system shown in Figure 8–75. Obtain
the closed-loop transfer function C(s)/R(s) for the refer-
ence input and the closed-loop transfer function C(s)/D(s)
for the disturbance input. When considering R(s) as the
input, assume that D(s) is zero, and vice versa.
B–8–8. Consider the system shown in Figure 8–76(a),
where Kis an adjustable gain and G(s) andH(s) are fixedcomponents. The closed-loop transfer function for the
disturbance is
To minimize the effect of disturbances, the adjustable gain
Kshould be chosen as large as possible.
Is this true for the system in Figure 8–76(b), too?C(s)
D(s)=1
1+KG(s)H(s)
G
1
(s) G
2
(s)R(s) C(s)D(s)
G
3
(s)
H
1
(s)H
2
(s)
+–
+–
++
Figure 8–75
Control system.
G(s)R(s) C(s)
D(s)D(s)
K
H(s)
G(s)R(s) C(s)
K
H(s)(a)
(b)
++
+–
++
+–
Figure 8–76
(a) Control system with disturbance entering in the
feedforward path; (b) control system with disturbance
entering in the feedback path.
Openmirrors.com
D(s)
R(s) Y(s)
N(s)Gc2
Gc1 Gc3 G1 G2 +– ––++
– ––++
++
Problems 645B–8–9. Show that the control systems shown in Fig-
ures 8–77(a), (b), and (c) are two-degrees-of-freedomsystems. In the diagrams, G
c1andGc2are controllers and Gp
is the plant.B–8–10. Show that the control system shown in Figure 8–78
is a three-degrees-of freedom system. The transfer func-tions G
c1,Gc2,andGc3are controllers.The plant consists of
transfer functions G1andG2.
(c)D(s)
Y(s)
N(s)Gp Gc1
Gc2R(s)
+++–++(b)D(s)
Y(s)
N(s)Gp Gc1 Gc2R(s)
+–++
++D(s)
R(s) Y(s)
Gp Gc1
Gc2
(a)+–++
++ N(s)
Figure 8–77
(a), (b), (c) Twodegrees-of-freedom
systems.
Figure 8–78
Three-degrees-of-freedom system.
646
Chapter 8 / PID Controllers and Modified PID Controllers
B–8–11. Consider the control system shown in Figure 8–79.
Assume that the PID controller is given by
It is desired that the unit-step response of the system exhibit
the maximum overshoot of less than 10 %, but more than 2 %
(to avoid an almost overdamped system), and the settling
time be less than 2 sec.
Using the computational approach presented in Section
8–4, write a MATLAB program to determine the values
ofKandathat will satisfy the given specifications. Choose
the search region to be
1/H11349K/H113494, 0.4 /H11349a/H113494
Choose the step size for Kand ato be 0.05. Write the
program such that the nested loops start with the highest
values of Kandaand step toward the lowest.
Using the first-found solution, plot the unit-step
response curve.
B–8–12. Consider the same control system as treated in
Problem B–8–11 (Figure 8–79). The PID controller is given
by
It is desired to determine the values of Kand asuch that
the unit-step response of the system exhibits the maximumG
c
(s)=K(s+a)
2
sG
c
(s)=K(s+a)
2
sovershoot of less than 8 %, but more than 3 %, and the settling
time is less than 2 sec. Choose the search region to be
2/H11349K/H113494, 0.5 /H11349a/H113493
Choose the step size for Kandato be 0.05.
First, write a MATLAB program such that the nested
loops in the program start with the highest values of Kand
aand step toward the lowest and the computation stops
when a successful set of Kandais found for the first time.
Next, write a MATLAB program that will find all pos-
sible sets of Kandathat will satisfy the given specifications.
Among multiple sets of Kand athat satisfy the given
specifications, determine the best choice.Then, plot the unit-
step response curves of the system with the best choice
ofKanda.
B–8–13. Consider the two-degrees-of-freedom control
system shown in Figure 8–80. The plant is given by
Design controllers and such that the
response to the unit-step disturbance input should have
small amplitude and settle to zero quickly (in approximately
2 sec).The response to the unit-step reference input should
be such that the maximum overshoot is 25 %(or less) and
the settling time is 2 sec. Also, the steady-state errors in the
response to the ramp and acceleration reference inputs
should be zero.G
c2
(s) G
c1
(s)G
p
(s)=3(s+5)
s(s+1)As
2
+4s+13BG
p
(s)
R(s) C(s)
PID
controller1.2
(0.3s+ 1) (s+ 1) (1.2 s+ 1)
+–
G
c
(s)
Figure 8–79
Control system.
G
p
(s)
G
c1
(s)
G
c2
(s)
Y(s) U(s)D(s)
R(s)
B(s)
+–
++
++
Figure 8–80
Two-degrees-of-freedom control system.
Openmirrors.com
Problems 647B–8–14. Consider the system shown in Figure 8–81. The
plant is given by
Determine the controllers and such that, for
the step disturbance input, the response shows a small am-
plitude and approaches zero quickly (in a matter of 1 to
2 sec). For the response to the unit-step reference input, it isdesired that the maximum overshoot be 20 %or less and the
settling time 1 sec or less. For the ramp reference input andacceleration reference input, the steady-state errors shouldbe zero.G
c2(s) Gc1(s)Gp(s)=2(s+1)
s(s+3)(s +5)Gp(s)B–8–15. Consider the two-degrees-of-freedom control
system shown in Figure 8–82. Design controllers and
such that the response to the step disturbance input
shows a small amplitude and settles to zero quickly (in 1 to2 sec) and the response to the step reference input ex-
hibits 25 %or less maximum overshoot and the settling time
is less than 1 sec.The steady-state error in following the rampreference input or acceleration reference input should bezero.G
c2(s)Gc1(s)
Gp(s) Gc1(s)Y(s) R(s) U(s)D(s)
Gc2(s)+++–+–
Figure 8–81
Two-degrees-of-freedom control system.
1
s2C1(s)Y(s) R(s)D(s)
C2(s)+++–+–
Figure 8–82
Two-degrees-of-freedom control system.
9
648
Control Systems Analysis
in State Space
9–1 INTRODUCTION*
A modern complex system may have many inputs and many outputs, and these may be
interrelated in a complicated manner.To analyze such a system, it is essential to reduce
the complexity of the mathematical expressions, as well as to resort to computers for most
of the tedious computations necessary in the analysis.The state-space approach to system
analysis is best suited from this viewpoint.
While conventional control theory is based on the input–output relationship, or trans-
fer function, modern control theory is based on the description of system equations in
terms of nfirst-order differential equations, which may be combined into a first-order
vector-matrix differential equation.The use of vector-matrix notation greatly simplifies
the mathematical representation of systems of equations.The increase in the number of
state variables, the number of inputs, or the number of outputs does not increase the
complexity of the equations. In fact, the analysis of complicated multiple-input, multiple-
output systems can be carried out by procedures that are only slightly more compli-
cated than those required for the analysis of systems of first-order scalar differential
equations.
This chapter and the next deal with the state-space analysis and design of control sys-
tems. Basic materials of state-space analysis, including the state-space representation of
* It is noted that in this book an asterisk used as a superscript of a matrix, such as A*, implies that it is a con-
jugate transpose of matrix A.The conjugate transpose is the conjugate of the transpose of a matrix. For a real
matrix (a matrix whose elements are all real), the conjugate transpose A* is the same as the transpose A
T
.
Openmirrors.com
Section 9–2 / State-Space Representations of Transfer-Function Systems 649systems, controllability, and observability are presented in this chapter. Useful design
methods based on state-feedback control are given in Chapter 10.
Outline of the Chapter. Section 9–1 has presented an introduction to state-space
analysis of control systems. Section 9–2 deals with the state-space representation oftransfer-function systems. Here we present various canonical forms of state-space equa-tions. Section 9–3 discusses the transformation of system models (such as from transfer-function to state-space models, and vice versa) with MATLAB. Section 9–4 presentsthe solution of time-invariant state equations. Section 9–5 gives some useful results invector-matrix analysis that are necessary in studying the state-space analysis of controlsystems. Section 9–6 discusses the controllability of control systems and Section 9–7treats the observability of control systems.
9–2 STATE-SPACE REPRESENTATIONS OF 
TRANSFER-FUNCTION SYSTEMS
Many techniques are available for obtaining state-space representations of
transfer-function systems. In Chapter 2 we presented a few such methods. This sectionpresents state-space representations in the controllable, observable, diagonal, or Jordancanonical forms. (Methods for obtaining such state-space representations from transferfunctions are discussed in detail in Problems A–9–1 through A–9–4 .)
State-Space Representations in Canonical Forms. Consider a system defined
by
(9–1)
where uis the input and yis the output. This equation can also be written as
(9–2)
In what follows we shall present state-space representations of the system defined by
Equation (9–1) or (9–2) in controllable canonical form, observable canonical form, anddiagonal (or Jordan) canonical form.
Controllable Canonical Form. The following state-space representation is called
a controllable canonical form:
(9–3)  
Gx#
1
x#
2
/H11080
/H11080/H11080
x#
n-1
x#
nW=G0
0
/H11080/H11080/H11080
0
-a
n1
0
/H11080/H11080/H11080
0
-a
n-10
1
/H11080/H11080/H11080
0
-a
n-2p
p
p
p0
0
/H11080/H11080/H11080
1
-a
1WGx1
x2
/H11080
/H11080/H11080
x
n-1
xnW+G0
0
/H11080/H11080/H11080
01WuY(s)
U(s)=b0 sn+b1 sn-1+p+bn-1 s+bn
sn+a1 sn-1+p+an-1 s+any(n)
+a1 y(n-1)
+p+an-1 y#+an y=b0 u(n)
+b1 u(n-1)
+p+bn-1 u#+bn u
650
Chapter 9 / Control Systems Analysis in State Space
(9–4)
The controllable canonical form is important in discussing the pole-placement approach
to control systems design.
Observable Canonical Form. The following state-space representation is called
an observable canonical form:
(9–5)
(9–6)
Note that the n*n state matrix of the state equation given by Equation (9–5) is the
transpose of that of the state equation defined by Equation (9–3).
Diagonal Canonical Form. Consider the transfer-function system defined by Equa-
tion  (9–2). Here we consider the case where the denominator polynomial involves only
distinct roots. For the distinct-roots case, Equation (9–2) can be written as
(9–7)
The diagonal canonical form of the state-space representation of this system is given by =b
0
+c
1
s+p
1
+c
2
s+p
2
+p+c
n
s+p
n
 Y(s)
U(s)=b
0
 
s
n
+b
1
 
s
n-1
+p+b
n-1
 
s+b
n
As+p
1
BAs+p
2
B p As+p
n
B y=[0
 
0
 
p
 
0
 
1]
G
x
1
x
2
/H11080
/H11080
/H11080
x
n-1
x
n
W
+b
0
 
u 
F
x#
1
x#
2
/H11080
/H11080
/H11080
x#
n
V
=
F
0
1
/H11080
/H11080
/H11080
00
0
/H11080
/H11080
/H11080
0p
p
p0
0
/H11080
/H11080
/H11080
1-a
n
-a
n-1
/H11080
/H11080
/H11080
-a
1
VF
x
1
x
2
/H11080
/H11080
/H11080
x
n
V
+
F
b
n
-a
n
 
b
0
b
n-1
-a
n-1
 
b
0
/H11080
/H11080
/H11080
b
1
-a
1
 
b
0
V
u y=Cb
n
-a
n
 
b
0
/H21752b
n-1
-a
n-1
 
b
0
/H21752p/H21752b
1
-a
1
 
b
0
D
F
x
1
x
2
/H11080
/H11080
/H11080
x
n
V
+b
0
 
u
Openmirrors.com
(9–8)
(9–9)
Jordan Canonical Form. Next we shall consider the case where the denominator
polynomial of Equation (9–2) involves multiple roots. For this case, the precedingdiagonal canonical form must be modified into the Jordan canonical form. Suppose, forexample, that the p
i’s are different from one another, except that the first three pi’s are
equal, or p1=p2=p3.Then the factored form of Y(s)/U(s) becomes
The partial-fraction expansion of this last equation becomesA state-space representation of this system in the Jordan canonical form is given by
(9–10)
(9–11) y=Cc
1 c2 p cnDFx1
x2
/H11080
/H11080/H11080
x
nV+b0 uHx#
1
x#
2
x#
3
x#
4
/H11080
/H11080/H11080
x#
nX=H-p1
0
00
/H11080/H11080/H11080
01
-p
1
0
p
p0
1
-p1
0
/H11080/H11080/H11080
00
:
0
-p
4
0p
p
/H11080
/H11080
/H110800
:
00
-p
nXHx1
x2
x3
x4
/H11080
/H11080/H11080
x
nX+H0011
/H11080/H11080/H11080
1
XuY(s)
U(s)=b0+c1
As+p1B3+c2
As+p1B2+c3
s+p1+c4
s+p4+p+cn
s+pnY(s)
U(s)=b0 sn+b1 sn-1+p+bn-1 s+bn
As+p1B3As+p4BAs+p5BpAs+pnB y=Cc1 c2 p cnDFx1
x2
/H11080
/H11080/H11080
x
nV+b0 u Fx#
1
x#
2
/H11080
/H11080/H11080
x#
nV=F-p1
0-p2
/H11080
/H11080
/H110800
-pnVFx1
x2
/H11080
/H11080/H11080
x
nV+F11
/H11080/H11080/H11080
1Vu
Section 9–2 / State-Space Representations of Transfer-Function Systems 651
652
Chapter 9 / Control Systems Analysis in State Space
EXAMPLE 9–1
Consider the system given by
Obtain state-space representations in the controllable canonical form, observable canonical form,
and diagonal canonical form.
Controllable Canonical Form:
Observable Canonical Form:
Diagonal Canonical Form:
Eigenvalues of an n/H11547nMatrix A. The eigenvalues of an n*n matrix Aare the
roots of the characteristic equation
|lI-A|=0
The eigenvalues are also called the characteristic roots.
Consider, for example, the following matrix A:
The characteristic equation is
|lI-A|=
=l
3
+6l
2
+11l+6
=(l+1)(l+2)(l+3)=0
The eigenvalues of Aare the roots of the characteristic equation, or –1, –2, and–3.
Diagonalization of n/H11547nMatrix. Note that if an n*n matrix Awith distinct
eigenvalues is given by
3
l
0
6-1
l
110
-1
l+6
3
A=
C
0
0
-61
0
-110
1
-6
S
 y(t) =[2
 
-1]
B
x
1
(t)
x
2
(t)
R
 
B
x#
1
(t)
x#
2
(t)
R
=
B
-1
00
-2
RB
x
1
(t)
x
2
(t)
R
+
B
1
1
R
u(t) y(t) =[0
 
1]
B
x
1
(t)
x
2
(t)
R
 
B
x#
1
(t)
x#
2
(t)
R
=
B
0
1-2
-3
RB
x
1
(t)
x
2
(t)
R
+
B
3
1
R
u(t) y(t) =[3
 
1]
B
x
1
(t)
x
2
(t)
R
 
B
x#
1
(t)
x#
2
(t)
R
=
B
0
-21
-3
RB
x
1
(t)
x
2
(t)
R
+
B
0
1
R
u(t)Y(s)
U(s)=s+3
s
2
+3s+2
Openmirrors.com
Section 9–2 / State-Space Representations of Transfer-Function Systems 653(9–12)
the transformation x=Pz, where
P=
l1,l2,p,ln=n distinct eigenvalues of A
will transform P–1APinto the diagonal matrix, or
If the matrix Adefined by Equation (9–12) involves multiple eigenvalues, then
diagonalization is impossible. For example, if the 3*3 matrix A, where
has the eigenvalues l1,l1,l3,then the transformation x=Sz, where
will yield
This is in the Jordan canonical form.S-1
 AS=Cl1
0
01
l1
00
0
l3SS=C1
l1
l120
1
2l11
l3
l32SA=C0
0
-a31
0
-a20
1
-a1SP-1
 AP =Fl1
0l2
/H11080
/H11080
/H110800
lnVG1
l1
l12
/H11080
/H11080/H11080
l
1n-11
l2
l22
/H11080
/H11080/H11080
l
2n-1p
pp
p1
l
n
ln2
/H11080
/H11080/H11080
l
nn-1WA=G0
0
/H11080/H11080/H11080
0
-a
n1
0
/H11080/H11080/H11080
0
-a
n-10
1
/H11080/H11080/H11080
0
-a
n-2p
p
p
p0
0
/H11080/H11080/H11080
1
-a
1W
654
Chapter 9 / Control Systems Analysis in State Space
EXAMPLE 9–2
Consider the following state-space representation of a system.
(9–13)
(9–14)
Equations (9–13) and (9–14) can be put in a standard form as
(9–15)
(9–16)
where
The eigenvalues of matrix Aare
l
1
=–1, l
2
=–2, l
3
=–3
Thus, three eigenvalues are distinct. If we define a set of new state variables z
1
,z
2
,andz
3
by the
transformation
or
x=Pz (9–17)
where
(9–18)
then, by substituting Equation (9–17) into Equation (9–15), we obtain
By premultiplying both sides of this last equation by P
–1
,we get
(9–19)
or
 +
C
3
-3
12.5
-4
1.50.5
-1
0.5
SC
0
0
6
S
u 
C
z#
1
z#
2
z#
3
S
=
C
3
-3
12.5
-4
1.50.5
-1
0.5
SC
0
0
-61
0
-110
1
-6
SC
1
-1
11
-2
41
-3
9
SC
z
1
z
2
z
3
S
z#=P
-1
 
APz +P
-1
 
BuPz#=APz +BuP=
C
1
l
1
l
12
1
l
2
l
22
1
l
3
l
32
S
=
C
1
-1
11
-2
41
-3
9
SC
x
1
x
2
x
3
S
=
C
1
-1
11
-2
41
-3
9
SC
z
1
z
2
z
3
S
A=
C
0
0
-61
0
-110
1
-6
S
,
  
B=
C
0
0
6
S
,
  
C=[1
 
0
 
0]y=Cxx#=Ax+Bu y=[1
 
0
 
0]
C
x
1
x
2
x
3
S
 
C
x#
1
x#
2
x#
3
S
=
C
0
0
-61
0
-110
1
-6
SC
x
1
x
2
x
3
S
+
C
0
0
6
S
u
Openmirrors.com
Section 9–2 / State-Space Representations of Transfer-Function Systems 655Simplifying gives
(9–20)
Equation (9–20) is also a state equation that describes the same system as defined by Equation
(9–13).
The output equation, Equation (9–16), is modified to
y= CPz
or
(9–21)
Notice that the transformation matrix P, defined by Equation (9–18), modifies the coefficient
matrix of zinto the diagonal matrix.As is clearly seen from Equation (9–20), the three scalar state
equations are uncoupled. Notice also that the diagonal elements of the matrix P–1APin Equation
(9–19) are identical with the three eigenvalues of A. It is very important to note that the eigen-
values of Aand those of P–1APare identical.We shall prove this for a general case in what follows.
Invariance of Eigenvalues. To prove the invariance of the eigenvalues under a
linear transformation, we must show that the characteristic polynomials ∑lI-A∑and
@lI-P–1AP@are identical.
Since the determinant of a product is the product of the determinants, we obtain
Noting that the product of the determinants @P–1@and∑P∑is the determinant of the prod-
uct@P–1P@, we obtain
Thus, we have proved that the eigenvalues of Aare invariant under a linear
transformation.
Nonuniqueness of a Set of State Variables. It has been stated that a set of state vari-
ables is not unique for a given system. Suppose that x1,x2,p,xnare a set of state variables. =∑l I-A∑ @l I-P-1
 AP@=@P-1
 P@@l I-A@ =@P-1@@P@@l I-A@ =@P-1@@l I-A@@P@ =@P-1(l I-A) P@ @l I-P-1
 AP@=@l P-1
 P-P-1
 AP@ =[1 1 1]Cz1
z2
z3S y=[1 0 0]C1
-1
11
-2
41
-3
9SCz1
z2
z3SCz#
1
z#
2
z#
3S=C-1
000
-2
00
0
-3SCz1
z2
z3S+C3
-6
3Su
656
Chapter 9 / Control Systems Analysis in State Space
Then we may take as another set of state variables any set of functions
provided that, for every set of values there corresponds a unique set of
values x
1
,x
2
,p,x
n
,and vice versa. Thus, if xis a state vector, then where 
is also a state vector, provided the matrix Pis nonsingular. Different state vectors convey
the same information about the system behavior.
9–3 TRANSFORMATION OF SYSTEM MODELS WITH MATLAB
In this section we shall consider the transformation of the system model from transfer
function to state space, and vice versa. We shall begin our discussion with the
transformation from transfer function to state space.
Let us write the closed-loop transfer function as
Once we have this transfer-function expression, the MATLAB command
[A, B, C, D] = tf2ss(num,den)
will give a state-space representation. It is important to note that the state-space repre-
sentation for any system is not unique. There are many (indeed, infinitely many) state-
space representations for the same system.The MATLAB command gives one possible
such state-space representation.
State-Space Formulation of Transfer-Function Systems. Consider the
transfer-function system
(9–22)
There are many (again, infinitely many) possible state-space representations for this
system. One possible state-space representation is
 y=[1
 
0
 
0]
C
x
1
x
2
x
3
S
+[0] u 
C
x#
1
x#
2
x#
3
S
=
C
0
0
-101
0
-50
1
-6
SC
x
1
x
2
x
3
S
+
C
0
10
-50
S
uY(s)
U(s)=10s +10
s
3
+6s
2
+5s+10Y(s)
U(s)=numerator polynomial in s
denominator polynomial in s=num
denx
ˆ
=Pxx
ˆ
,x
ˆ
1
 
,x
ˆ
2
 
,p,x
ˆ
n
 
, x
ˆ
n
=X
n
Ax
1
 
, x
2
 
,p, x
n
B /H11080 /H11080 /H11080 x
ˆ
2
=X
2
Ax
1
 
, x
2
 
,p, x
n
B x
ˆ
1
=X
1
Ax
1
 
, x
2
 
,p, x
n
B
Openmirrors.com
Section 9–3 / Transformation of System Models with MATLAB 657Another possible state-space representation (among infinitely many alternatives) is
(9–23)
(9–24)
MATLAB transforms the transfer function given by Equation (9–22) into the state-space
representation given by Equations (9–23) and (9–24). For the example system consideredhere, MATLAB Program 9–1 will produce matrices A,B,C, and D. y=[0 10 10]Cx1
x2
x3S+[0] u Cx#
1
x#
2
x#
3S=C-6
10-5
01-10
00
SCx1
x2
x3S+C100
Su
MATLAB Program 9–1
num = [10  10];
den = [1  6  5  10];[A,B,C,D] = tf2ss(num,den)
A=
-6 -5 -10
1-0-0
0-1-0
B =
1
00
C =
01 01 0
D =
0
Transformation from State Space to Transfer Function. To obtain the transfer
function from state-space equations, use the following command:
[num,den] = ss2tf(A,B,C,D,iu)
iumust be specified for systems with more than one input. For example, if the system
has three inputs (u1, u2, u3), then iumust be either 1, 2, or 3, where 1 implies u1,2
implies u2,and 3 implies u3.
If the system has only one input, then either
[num,den] = ss2tf(A,B,C,D)
or
[num,den] = ss2tf(A,B,C,D,1)
may be used. (See Example 9–3 and MATLAB Program 9–2.)
658
Chapter 9 / Control Systems Analysis in State Space
For the case where the system has multiple inputs and multiple outputs, see
Example 9–4.
EXAMPLE 9–3
Obtain the transfer function of the system defined by the following state-space equations:
MATLAB Program 9–2 will produce the transfer function for the given system. The transfer
function obtained is given by
Y(s)
U(s)=25.04s +5.008
s
3
+5.0325s
2
+25.1026s +5.008 y=[1
 
0
 
0]
C
x
1
x
2
x
3
S
 
C
x#
1
x#
2
x#
3
S
=
C
0
0
-5.0081
0
-25.10260
1
-5.03247
SC
x
1
x
2
x
3
S
+
C
0
25.04
-121.005
S
u
MATLAB Program 9–2
A = [0  1  0;0  0  1;-5.008  -25.1026  -5.03247];
B = [0;25.04; -121.005];
C = [1  0  0];
D = [0];
[num,den] = ss2tf(A,B,C,D)
num =
0 -0.0000 25.0400 5.0080
den =
1.0000 5.0325 25.1026 5.0080
% ***** The same result can be obtained by entering the following command *****
[num,den] = ss2tf(A,B,C,D,1)
num =
0 -0.0000 25.0400 5.0080
den =
1.0000 5.0325 25.1026 5.0080
Openmirrors.com
Section 9–3 / Transformation of System Models with MATLAB 659EXAMPLE 9–4 Consider a system with multiple inputs and multiple outputs.When the system has more than one
output, the command
[NUM,den] = ss2tf(A,B,C,D,iu)
produces transfer functions for all outputs to each input. (The numerator coefficients are returnedto matrix NUM with as many rows as there are outputs.)
Consider the system defined by
This system involves two inputs and two outputs. Four transfer functions are involved:
and (When considering input u
1,we assume that input u2
is zero and vice versa.) See the output of MATLAB Program 9–3.Y2(s) /H20862U2(s). Y1(s) /H20862U2(s), Y2(s) /H20862U1(s),Y1(s) /H20862U1(s), By1
y2R=B1
00
1RBx1
x2R+B000
0RBu1
u2R Bx#
1
x#
2R=B0
-251
-4RBx1
x2R+B1
01
1RBu1
u2R
MATLAB Program 9–3
A = [0  1;-25  -4];
B = [1  1;0  1];C = [1  0;0  1];D = [0  0;0  0];[NUM,den] = ss2tf(A,B,C,D,1)
NUM =
01 4
0 0 -25
den =
1  4  25
[NUM,den] = ss2tf(A,B,C,D,2)NUM =
0   1.0000 5.0000
0   1.0000 -25.0000
den =
142 5
This is the MATLAB representation of the following four transfer functions:
 Y1(s)
U2(s)=s+5
s2+4s+25,   Y2(s)
U2(s)=s-25
s2+4s+25 Y1(s)
U1(s)=s+4
s2+4s+25,   Y2(s)
U1(s)=-25
s2+4s+25
660
Chapter 9 / Control Systems Analysis in State Space
9–4 SOLVING THE TIME-INVARIANT STATE EQUATION
In this section, we shall obtain the general solution of the linear time-invariant state equa-
tion. We shall first consider the homogeneous case and then the nonhomogeneous case.
Solution of Homogeneous State Equations. Before we solve vector-matrix
differential equations, let us review the solution of the scalar differential equation
(9–25)
In solving this equation, we may assume a solution x(t) of the form
x(t)=b
0
+b
1
t+b
2
t
2
+p+b
k
t
k
+p (9–26)
By substituting this assumed solution into Equation (9–25), we obtain
(9–27)
If the assumed solution is to be the true solution, Equation (9–27) must hold for any t.
Hence, equating the coefficients of the equal powers of t,we obtain
The value of b
0
is determined by substituting t=0 into Equation (9–26), or
x(0)=b
0
Hence, the solution x(t) can be written as
We shall now solve the vector-matrix differential equation
(9–28)
where
By analogy with the scalar case, we assume that the solution is in the form of a vector
power series in t,or
x(t)= b
0
+b
1
t+b
2
t
2
+p+b
k
t
k
+p (9–29) A=n*n constant matrix x=n-vectorx#=Ax =e
at
x(0) x(t) =
a
1+at+1
2! a
2
t
2
+p+1
k! a
k
t
k
+p
b
x(0) b
k
=1
k! a
k
b
0
 /H11080 /H11080 /H11080 b
3
=1
3 ab
2
=1
3*2 a
3
b
0
 b
2
=1
2 ab
1
=1
2 a
2
b
0
 b
1
=ab
0
=aAb
0
+b
1
 
t+b
2
 
t
2
+p+b
k
 
t
k
+pBb
1
+2b
2
 
t+3b
3
 
t
2
+p+kb
k
 
t
k-1
+px#=ax
Openmirrors.com
Section 9–4 / Solving the Time-Invariant State Equation 661By substituting this assumed solution into Equation (9–28), we obtain
(9–30)
If the assumed solution is to be the true solution, Equation (9–30) must hold for all t.Thus,
by equating the coefficients of like powers of ton both sides of Equation (9–30), we obtain
By substituting t=0 into Equation (9–29), we obtain
x(0)= b0
Thus, the solution x(t)can be written as
The expression in the parentheses on the right-hand side of this last equation is an n*n
matrix. Because of its similarity to the infinite power series for a scalar exponential, wecall it the matrix exponential and write
In terms of the matrix exponential, the solution of Equation (9–28) can be written as
(9–31)
Since the matrix exponential is very important in the state-space analysis of linear
systems, we shall next examine its properties.
Matrix Exponential. It can be proved that the matrix exponential of an n*n
matrix A,
converges absolutely for all finite t.(Hence, computer calculations for evaluating the
elements of e
Atby using the series expansion can be easily carried out.)eAt=aq
k=0Aktk
k!x(t)=eAt
 x(0)I+At+1
2! A2t2+p+1
k! Aktk+p=eAtx(t)=aI+At+1
2! A2t2+p+1
k! Aktk+pb x(0) bk=1
k!Ak
 b0 /H11080 /H11080 /H11080 b3=1
3Ab2=1
3*2A3
 b0 b2=1
2Ab1=1
2A2
 b0 b1=Ab0=AAb0+b1 t+b2 t2+p+bk tk+pBb1+2 b2 t+3 b3 t2+p+k bk tk-1+p
662
Chapter 9 / Control Systems Analysis in State Space
Because of the convergence of the infinite series the series can be
differentiated term by term to give
The matrix exponential has the property that
This can be proved as follows:
In particular, if s=–t, then
Thus, the inverse of is Since the inverse of always exists, is nonsingular.
It is very important to remember that
To prove this, note that
 +A
2
 
Bt
3
2!+AB
2
t
3
2!+B
3
t
3
3!+p =I+(A+B)t+A
2
t
2
2!+ABt
2
+B
2
t
2
2!+A
3
t
3
3! e
At
e
Bt
=
a
I+At+A
2
t
2
2!+A
3
t
3
3!+p
ba
I+Bt+B
2
t
2
2!+B
3
t
3
3!+p
b
 e
(A+B)t
=I+(A+B)t+(A+B)
2
2! t
2
+(A+B)
3
3! t
3
+pe
(A+B)t
Ze
At
e
Bt
,
  
ifAB ZBAe
(A+B)t
=e
At
e
Bt
,
  
ifAB =BAe
At
e
At
e
-
 
At
. e
At
e
At
e
-
 
At
=e
-
 
At
e
At
=e
A(t-t)
=I =e
A(t+s)
 =a
q
k=0
A
k
(t+s)
k
k! =a
q
k=0
A
k
a
a
q
i=0
t
i
s
k-i
i! (k -i)!
b
 e
At
e
As
=
a
a
q
k=0
 A
k
t
k
k!
ba
a
q
k=0
 A
k
s
k
k!
b
e
A(t+s)
=e
At
e
As
 =
c
I+At+A
2
t
2
2!+p+A
k-1
t
k-1
(k-1)!+p
d
 
A=e
At
 
A =A
c
I+At+A
2
t
2
2!+p+A
k-1
t
k-1
(k-1)!+p
d
=Ae
At
 d
dt e
At
=A+A
2
t+A
3
t
2
2!+p+A
k
t
k-1
(k-1)!+pg
q
k=0 
A
k
t
k
/H20862k!,
Openmirrors.com
Section 9–4 / Solving the Time-Invariant State Equation 663Hence,
The difference between and vanishes if AandBcommute.
Laplace Transform Approach to the Solution of Homogeneous State
Equations. Let us first consider the scalar case:
(9–32)
Taking the Laplace transform of Equation (9–32), we obtain
sX(s)-x(0)=aX(s) (9–33)
where Solving Equation (9–33) for X(s) gives
The inverse Laplace transform of this last equation gives the solution
x(t)=eatx(0)
The foregoing approach to the solution of the homogeneous scalar differential
equation can be extended to the homogeneous state equation:
(9–34)
Taking the Laplace transform of both sides of Equation (9–34), we obtain
sX(s)- x(0)= AX(s)
where Hence,
(sI-A)X(s)= x(0)
Premultiplying both sides of this last equation by (sI-A)–1,we obtain
X(s)=(s I-A)–1x(0)
The inverse Laplace transform of gives the solution Thus,
x(t)=l–1C(sI-A)–1Dx(0) (9–35)
Note that
Hence, the inverse Laplace transform of (sI-A)–1gives
(9–36) l-1C(s  I-A)-1D=I+At+A2t2
2!+A3t3
3!+p=eAt(s  I-A)-1=I
s+A
s2+A2
s3+px(t). X(s)X(s)=l[x].x#(t)=Ax(t)X(s) =x(0)
s-a=(s-a)-1x(0)X(s) =l[x].x#=axeAteBte(A+B)t+BA2+ABA +B2
 A+BAB -2 A2
 B-2 AB2
3!t3+pe(A+B)t-eAteBt=BA -AB
2! t2
664
Chapter 9 / Control Systems Analysis in State Space
(The inverse Laplace transform of a matrix is the matrix consisting of the inverse Laplace
transforms of all elements.) From Equations (9–35) and (9–36), the solution of Equation
(9–34) is obtained as
The importance of Equation (9–36) lies in the fact that it provides a convenient
means for finding the closed solution for the matrix exponential.
State-Transition Matrix. We can write the solution of the homogeneous state
equation
(9–37)
as
(9–38)
where is an n*n matrix and is the unique solution of
To verify this, note that
and
We thus confirm that Equation (9–38) is the solution of Equation (9–37).
From Equations (9–31), (9–35), and (9–38), we obtain
Note that
From Equation (9–38), we see that the solution of Equation (9–37) is simply a
transformation of the initial condition. Hence, the unique matrix is called the state-
transition matrix.The state-transition matrix contains all the information about the free
motions of the system defined by Equation (9–37).
If the eigenvalues l
1
,l
2
,p, l
n
of the matrix Aare distinct, than will contain
thenexponentials
In particular, if the matrix Ais diagonal, then
/H9021(t)=e
At
=
F
e
l
1
 
t
0e
l
2
 
t
/H11080
/H11080
/H110800
e
l
n
 
t
V
  
(A: diagonal )e
l
1
 
t
, e
l
2
 
t
,p,e
l
n
 
t
/H9021(t)/H9021(t)/H9021
-1
(t)=e
-
 
At
=/H9021(-t)/H9021(t)=e
At
=l
-1
C(s
 
I-A)
-1
Dx#(t)=/H9021#
(t)
 
x(0)=A/H9021(t)
 
x(0)=Ax(t)x(0)=/H9021(0)
 
x(0)=x(0)/H9021#(t)=A/H9021(t),
  
/H9021(0)=I/H9021(t)x(t)=/H9021(t)
 
x(0)x#=Axx(t)=e
At
 
x(0)
Openmirrors.com
Section 9–4 / Solving the Time-Invariant State Equation 665If there is a multiplicity in the eigenvalues—for example, if the eigenvalues of Aare
l1,l1,l1,l4,l5,p,ln,
then will contain, in addition to the exponentials terms like
and
Properties of State-Transition Matrices. We shall now summarize the important
properties of the state-transition matrix For the time-invariant system
for which
we have the following:
1.
2. or
3.4.5.
EXAMPLE 9–5
Obtain the state-transition matrix of the following system:
Obtain also the inverse of the state-transition matrix,
For this system,
The state-transition matrix is given by
Since
the inverse of (sI-A)is given by
 =Ds+3
(s+1)(s +2)
-2
(s+1)(s +2)1
(s+1)(s +2)
s
(s+1)(s +2)T (s  I-A)-1=1
(s+1)(s +2)Bs+3
-21
sRs I-A=Bs
00
sR-B0
-21
-3R=Bs
2-1
s+3R/H9021(t)=eAt=l-1C(s  I-A)-1D/H9021(t)A=B0
-21
-3R/H9021-1(t).Bx#
1
x#
2R=B0
-21
-3RBx1
x2R/H9021(t)/H9021At2-t1B /H9021At1-t0B=/H9021At2-t0B=/H9021At1-t0B /H9021At2-t1BC/H9021(t)Dn=/H9021(nt)/H9021At1+t2B=eAAt1+t2B=eAt1eAt2=/H9021At1B /H9021At2B=/H9021At2B /H9021At1B/H9021-1(t)=/H9021(-t) /H9021(t)=eAt=Ae- AtB-1=C/H9021(-t)D-1/H9021(0)=eA0=I/H9021(t)=eAtx#=Ax/H9021(t).t2el1 t. tel1 tel1 t, el4 t, el5 t,p,eln t, /H9021(t)
666
Chapter 9 / Control Systems Analysis in State Space
Hence,
Noting that we obtain the inverse of the state-transition matrix as follows:
Solution of Nonhomogeneous State Equations. We shall begin by considering
the scalar case
(9–39)
Let us rewrite Equation (9–39) as
Multiplying both sides of this equation by e
–at
,we obtain
Integrating this equation between 0 and tgives
or
The first term on the right-hand side is the response to the initial condition and the
second term is the response to the input u(t).
Let us now consider the nonhomogeneous state equation described by
(9–40)
where
By writing Equation (9–40) as
and premultiplying both sides of this equation by e
–At
,we obtain
e
-
 
At
Cx#(t)-Ax(t)D=d
dt Ce
-
 
At
 
x(t)D=e
-
 
At
 
Bu(t)x#(t)-Ax(t)=Bu(t) B=n*r constant matrix A=n*n constant matrix u=r-vector x=n-vectorx#=Ax+Bux(t) =e
at
x(0) +e
at
3
t
0
e
-at
bu(t)dte
-at
x(t) -x(0) =
3
t
0
e
-at
bu(t)dte
-at
Cx#(t)-ax(t)D=d
dt Ce
-at
x(t)D=e
-at
bu(t)x#-ax=bux#=ax+bu
/H9021
-1
(t)=e
-
 
At
=
B
2e
t
-e
2t
-2e
t
+2e
2t
e
t
-e
2t
-e
t
+2e
2t
R
/H9021
-1
(t)=/H9021(-t), =
B
2e
-t
-e
-2t
-2e
-t
+2e
-2t
e
-t
-e
-2t
-e
-t
+2e
-2t
R
 /H9021(t)=e
At
=l
-1
C(s
 
I-A)
-1
D
Openmirrors.com
Section 9–4 / Solving the Time-Invariant State Equation 667Integrating the preceding equation between 0 and tgives
or
(9–41)
Equation (9–41) can also be written as
(9–42)
where Equation (9–41) or (9–42) is the solution of Equation (9–40). The
solution x(t)is clearly the sum of a term consisting of the transition of the initial state
and a term arising from the input vector.
Laplace Transform Approach to the Solution of Nonhomogeneous State
Equations. The solution of the nonhomogeneous state equation
can also be obtained by the Laplace transform approach.The Laplace transform of this
last equation yields
sX(s)- x(0)= AX(s)+ BU(s)
or
(sI-A)X(s)= x(0)+ BU(s)
Premultiplying both sides of this last equation by (sI-A)–1,we obtain
X(s)=(s I-A)–1x(0)+(s I-A)–1BU(s)
Using the relationship given by Equation (9–36) gives
X(s)=lCeAtDx(0)+lCeAtDBU(s)
The inverse Laplace transform of this last equation can be obtained by use of the
convolution integral as follows:
Solution in Terms of Thus far we have assumed the initial time to be zero.
If, however, the initial time is given by t0instead of 0,then the solution to Equation
(9–40) must be modified to
(9–43) x(t)=eAAt-t0B
 xAt0B+
3t
t0eA(t-t)
 Bu(t)dtxAt0B.x(t)=eAt
 x(0)+
3t
0eA(t-t)
 Bu(t)dtx#=Ax+Bu/H9021(t)=eAt.x(t)=/H9021(t)  x(0)+
3t
0/H9021(t-t) Bu(t)dtx(t)=eAt
 x(0)+
3t
0eA(t-t)
 Bu(t)dte- At
 x(t)-x(0)=
3t
0e- At
 Bu(t)dt
668
Chapter 9 / Control Systems Analysis in State Space
EXAMPLE 9–6
Obtain the time response of the following system:
where u(t) is the unit-step function occurring at t=0, or
u(t)=1(t)
For this system,
The state-transition matrix was obtained in Example 9–5 as
The response to the unit-step input is then obtained as
or
If the initial state is zero, or x(0)= 0, then x(t)can be simplified to
9–5 SOME USEFUL RESULTS IN VECTOR-MATRIX ANALYSIS
In this section we present some useful results in vector-matrix analysis that we use in
Section 9–6. Specifically, we present the Cayley–Hamilton theorem, the minimal poly-
nomial, Sylvester’s interpolation method for calculating and the linear independence
of vectors.
Cayley–Hamilton Theorem. The Cayley–Hamilton theorem is very useful in
proving theorems involving matrix equations or solving problems involving matrix
equations.
Consider an n*n matrix Aand its characteristic equation:
|lI-A|=l
n
+a
1
l
n–1
+p+a
n–1
l+a
n
=0
The Cayley–Hamilton theorem states that the matrix Asatisfies its own characteristic
equation, or that
A
n
+a
1
A
n–1
+p+a
n–1
A+a
n
I=0 (9–44)
To prove this theorem, note that is a polynomial in lof degree n-1.
That is,
adj(l
 
I-A)=B
1
 
l
n-1
+B
2
 
l
n-2
+p+B
n-1
 
l+B
n
adj(l
 
I-A)e
At
,
B
x
1
(t)
x
2
(t)
R
=
C
1
2-e
-t
+1
2e
-2t
e
-t
-e
-2t
SB
x
1
(t)
x
2
(t)
R
=
B
2e
-t
-e
-2t
-2e
-t
+2e
-2t
e
-t
-e
-2t
-e
-t
+2e
-2t
RB
x
1
(0)
x
2
(0)
R
+
B
1
2
-e
-t
+
1
2
e
-2t
e
-t
-e
-2t
R
x(t)=e
At
 
x(0)+
3
t
0
B
2e
-(t-t)
-e
-2(t-t)
-2e
-(t-t)
+2e
-2(t-t)
e
-(t-t)
-e
-2(t-t)
-e
-(t-t)
+2e
-2(t-t)
RB
0
1
R
[1]dt/H9021(t)=e
At
=
B
2e
-t
-e
-2t
-2e
-t
+2e
-2t
e
-t
-e
-2t
-e
-t
+2e
-2t
R
/H9021(t)=e
At
A=
B
0
-21
-3
R
,
  
B=
B
0
1
RB
x#
1
x#
2
R
=
B
0
-21
-3
RB
x
1
x
2
R
+
B
0
1
R
u
Openmirrors.com
Section 9–5 / Some Useful Results in Vector-Matrix Analysis 669where Since
(lI-A)adj(lI-A)=Cadj(lI-A)D(lI-A)=|lI-A|I
we obtain
From this equation, we see that Aand (i=1, 2, p,n )commute. Hence, the product
of(lI-A)and becomes zero if either of these is zero. If Ais substitut-
ed for lin this last equation, then clearly lI-Abecomes zero. Hence, we obtain
An+a1An–1+p+an–1A+anI=0
This proves the Cayley–Hamilton theorem, or Equation (9–44).
Minimal Polynomial. Referring to the Cayley–Hamilton theorem, every n*n
matrix Asatisfies its own characteristic equation. The characteristic equation is not,
however, necessarily the scalar equation of least degree that Asatisfies.The least-degree
polynomial having Aas a root is called the minimal polynomial . That is, the minimal
polynomial of an n*n matrix Ais defined as the polynomial of least degree,
f(l)=lm+a1lm–1+p+am–1l+am,m /H11349n
such that or
f(A)= Am+a1Am–1+p+am–1A+amI=0
The minimal polynomial plays an important role in the computation of polynomials in
ann*n matrix.
Let us suppose that a polynomial in l, is the greatest common divisor of all the
elements of We can show that if the coefficient of the highest-degree terminlof is chosen as 1, then the minimal polynomial is given by
(9–45)
[See Problem A–9–8 for the derivation of Equation (9–45).]
It is noted that the minimal polynomial of an n*n matrix Acan be determined
by the following procedure:
1.Form and write the elements of as factored polynomials
inl.
2.Determine as the greatest common divisor of all the elements of 
Choose the coefficient of the highest-degree term in lof to be 1. If there is no
common divisor,
3.The minimal polynomial is then given as divided by 
Matrix Exponential In solving control engineering problems, it often becomes
necessary to compute If matrix Ais given with all elements in numerical values,
MATLAB provides a simple way to compute , where Tis a constant. e
ATeAt.eAt.d(l). ∑l I-A∑ f(l)d(l)=1.d(l)adj(l I-A). d(l)adj(l I-A) adj(l I-A)f(l)f(l)=∑l I-A∑
d(l)f(l) d(l)adj(l I-A).d(l),f(A)=0,f(l)adj(l I-A)Bi =AB1 ln-1+B2 ln-2+p+Bn-1 l+BnB(l I-A) =(l I-A)AB1 ln-1+B2 ln-2+p+Bn-1 l+BnB ∑l I-A∑ I=Iln+a1  Iln-1+p+an-1  Il+an  IB1=I.
670
Chapter 9 / Control Systems Analysis in State Space
Aside from computational methods, several analytical methods are available for the
computation of We shall present three methods here.
Computation of e
At
: Method 1. If matrix Acan be transformed into a diagonal
form, then can be given by
(9–46)
where Pis a diagonalizing matrix for A. [For the derivation of Equation (9–46), see
Problem A–9–11 .]
If matrix Acan be transformed into a Jordan canonical form, then can be given by
where Sis a transformation matrix that transforms matrix Ainto a Jordan canonical
form J.
As an example, consider the following matrix A:
The characteristic equation is
|lI-A|=l
3
-3l
2
+3l-1=( l-1)
3
=0
Thus, matrix Ahas a multiple eigenvalue of order 3 at It can be shown that matrix
Ahas a multiple eigenvector of order 3. The transformation matrix that will transform
matrix Ainto a Jordan canonical form can be given by
The inverse of matrix Sis
Then it can be seen that
 =
C
1
0
01
1
00
1
1
S
=J S
-1
 
AS=
C
1
-1
10
1
-20
0
1
SC
0
0
11
0
-30
1
3
SC
1
1
10
1
20
0
1
S
S
-1
=
C
1
-1
10
1
-20
0
1
S
S=
C
1
1
10
1
20
0
1
S
l=1.A=
C
0
0
11
0
-30
1
3
S
e
At
=Se
Jt
 
S
-1
e
At
e
At
=Pe
Dt
 
P
-1
=P
F
e
l
1
 
t
0e
l
2
 
t
/H11080
/H11080
/H110800
e
l
n
 
t
V
P
-1
e
At
e
At
.
Openmirrors.com
Section 9–5 / Some Useful Results in Vector-Matrix Analysis 671Noting that
we find
Computation of eAt: Method 2. The second method of computing uses the
Laplace transform approach. Referring to Equation (9–36), can be given as follows:
Thus, to obtain first invert the matrix This results in a matrix whose
elements are rational functions of s.Then take the inverse Laplace transform of each
element of the matrix.
EXAMPLE 9–7 Consider the following matrix A:
Compute by use of the two analytical methods presented previously.
Method 1. The eigenvalues of Aare 0 and –2 A necessary transformation
matrix Pmay be obtained as
Then, from Equation (9–46), is obtained as follows:
Method 2. Since
we obtain
(s  I-A)-1=D1
s
01
s(s+2)
1
s+2Ts I-A=Bs
00
sR-B001
-2R=Bs
0-1
s+2ReAt=B1
01
-2RBe0
00
e-2tRB1
01
2
-1
2R=B101
2A1-e-2tB
e-2tReAtP=B1
01
-2RAl1=0, l2=-2B.eAtA=B0
01
-2R(s  I-A). eAt,eAt=l-1C(s  I-A)-1DeAteAt =Cet-tet+1
2t2et
1
2t2et
tet+1
2t2ettet-t2et
et-tet-t2et
-3tet-t2et1
2t2et
tet+1
2t2et
et+2tet+1
2t2etS =C1
110
120
01
SCet
00te
t
et
01
2t2et
tet
etSC1
-1
10
1
-20
01S eAt=SeJt
 S-1eJt=Cet
0
0tet
et
01
2t2et
tet
etS
672
Chapter 9 / Control Systems Analysis in State Space
Hence,
Computation of e
At
: Method 3. The third method is based on Sylvester’s interpo-
lation method. (For Sylvester’s interpolation formula, see Problem A–9–12 .) We shall first
consider the case where the roots of the minimal polynomial of Aare distinct.
Then we shall deal with the case of multiple roots.
Case 1:
Minimal Polynomial of AInvolves Only Distinct Roots. We shall assume
that the degree of the minimal polynomial of Aism.By using Sylvester’s interpolation
formula, it can be shown that can be obtained by solving the following determinant
equation:
(9–47)
By solving Equation (9–47) for can be obtained in terms of the A
k
(k=0, 1,
2,p, m-1) and the (i=1, 2, 3, p,m ). [Equation (9–47) may be expanded, for ex-
ample, about the last column.]
Notice that solving Equation (9–47) for is the same as writing
(9–48)
and determining the ( k = 0 ,1 ,2 , p,m - 1 ) by solving the following set of m
equations for the 
IfAis an n*n matrix and has distinct eigenvalues, then the number of to be
determined is m=n. IfAinvolves multiple eigenvalues, but its minimal polynomial has
only simple roots, however, then the number mof to be determined is less than n.
Case 2:
Minimal Polynomial of AInvolves Multiple Roots. As an example, consider
the case where the minimal polynomial of Ainvolves three equal roots 
and has other roots that are all distinct. By applying Sylvester’s
interpolation formula, it can be shown that can be obtained from the following
determinant equation:e
At
Al
4
 
, l
5
 
,p, l
m
BAl
1
=l
2
=l
3
Ba
k
(t)’sa
k
(t)’s a
0
(t)+a
1
(t)l
m
+a
2
(t)l
m2
+p+a
m-1
(t)l
mm-1
=e
l
m
 
t
 /H11080 /H11080 /H11080 a
0
(t)+a
1
(t)l
2
+a
2
(t)l
22
+p+a
m-1
(t)l
2m-1
=e
l
2
 
t
 a
0
(t)+a
1
(t)l
1
+a
2
(t)l
12
+p+a
m-1
(t)l
1m-1
=e
l
1
 
t
a
k
(t):a
k
(t)e
At
=a
0
(t)
 
I+a
1
(t)
 
A+a
2
(t)
 
A
2
+p+a
m-1
(t)
 
A
m-1
e
At
e
l
i
 
t
e
At
e
At
,
7
1
1
/H11080
/H11080
/H11080
1
Il
1
l
2
/H11080
/H11080
/H11080
l
m
Al
12
l
22
/H11080
/H11080
/H11080
l
m2
A
2
p
p
p
pl
1m-1
l
2m-1
/H11080
/H11080
/H11080
l
mm-1
A
m-1
e
l
1
 
t
e
l
2
 
t
/H11080
/H11080
/H11080
e
l
m
 
t
e
At
7
=0e
At
f(l)
e
At
=l
-1
C(s
 
I-A)
-1
D=
B
1
0
1
2
A1-e
-2t
B
e
-2t
R
Openmirrors.com
Section 9–5 / Some Useful Results in Vector-Matrix Analysis 673=0 (9–49)
Equation (9–49) can be solved for by expanding it about the last column.
It is noted that, just as in case 1, solving Equation (9–49) for is the same as writing
(9–50)
and determining the ak(t)’s (k= 0, 1, 2, p, m-1) from
The extension to other cases where, for example, there are two or more sets of multiple
roots will be apparent. Note that if the minimal polynomial of Ais not found, it is possible
to substitute the characteristic polynomial for the minimal polynomial. The number ofcomputations may, of course, be increased.
EXAMPLE 9–8
Consider the matrix
Compute using Sylvester’s interpolation formula.
From Equation (9–47), we get
31
1
Il1
l2
Ael1 t
el2 t
eAt3=0eAtA=B0
01
-2R a0(t)+a1(t)lm+a2(t)lm2+p+am-1(t)lmm-1=elm t /H11080 /H11080 /H11080 a0(t)+a1(t)l4+a2(t)l42+p+am-1(t)l4m-1=el4 t a0(t)+a1(t)l1+a2(t)l12+p+am-1(t)l1m-1=el1 t a1(t)+2a2(t)l1+3a3(t)l12+p+(m-1)am-1(t)l1m-2=tel1 t a2(t)+3a3(t)l1+p+(m-1)(m -2)
2am-1(t)l1m-3=t2
2el1 teAt=a0(t)  I+a1(t)  A+a2(t)  A2+p+am-1(t)  Am-1eAteAt(m-1)(m -2)
2l1m-3
(m-1)l1m-2
l1m-1
l4m-1
/H11080
/H11080/H11080
l
mm-1
Am-1t2
2el1 t
tel1 t
el1 t
el4 t
/H11080
/H11080/H11080
e
lmt
eAt0
0
11
/H11080/H11080/H11080
1
I0
1
l
1
l4
/H11080/H11080/H11080
l
m
A1
2l1
l12
l42
/H11080
/H11080/H11080
l
m2
A23l1
3l12
l13
l43
/H11080
/H11080/H11080
l
m3
A3p
p
ppppppp
674
Chapter 9 / Control Systems Analysis in State Space
Substituting 0 for l
1
and–2forl
2
in this last equation, we obtain
Expanding the determinant, we obtain
or
An alternative approach is to use Equation (9–48). We first determine a
0
(t)anda
1
(t)from
Sincel
1
=0 andl
2
=–2, the last two equations become
Solving for a
0
(t)anda
1
(t)gives
Then can be written as
Linear Independence of Vectors. The vectors x
1
,x
2
,p,x
n
are said to be linearly
independent if
where c
1
,c
2
,p,c
n
are constants, implies that
Conversely, the vectors x
1
,x
2
,p,x
n
are said to be linearly dependent if and only if x
i
can
be expressed as a linear combination of x
j
(j=1, 2, p,n; jZi),or
x
i
=a
n
j=1
jZi
c
j
  
x
j
c
1
=c
2
=p=c
n
=0c
1
  
x
1
+c
2
  
x
2
+p+c
n
  
x
n
=0
e
At
=a
0
(t)
 
I+a
1
(t)
 
A=I+1
2A1-e
-2t
B
 
A=
B
1
0
1
2
A1-e
-2t
B
e
-2t
R
e
At
a
0
(t)=1,
  
a
1
(t)=1
2 A1-e
-2t
B a
0
(t)-2a
1
(t)=e
-2t
 a
0
(t)=1 a
0
(t)+a
1
(t)l
2
=e
l
2
 
t
 a
0
(t)+a
1
(t)l
1
=e
l
1
 
t
 =
B
1
0
1
2
A1-e
-2t
B
e
-2t
R
 =1
2
b
B
0
01
-2
R
+
B
2
00
2
R
-
B
0
01
-2
R
e
-2t
r
 e
At
=
1
2
AA+2
 
I-Ae
-2t
B-2e
At
+A+2
 
I-Ae
-2t
=0
3
1
1
I0
-2
A1
e
-2t
e
At
3
=0
Openmirrors.com
Section 9–6 / Controllability 675for some set of constants cj.This means that if xican be expressed as a linear combination
of the other vectors in the set, it is linearly dependent on them or it is not an independentmember of the set.
EXAMPLE 9–9
The vectors
are linearly dependent since
The vectors
are linearly independent since
implies that
Note that if an n*n matrix is nonsingular (that is, the matrix is of rank nor the determinant
is nonzero) then ncolumn (or row) vectors are linearly independent. If the n*n matrix is singular
(that is, the rank of the matrix is less than nor the determinant is zero), then ncolumn (or row)
vectors are linearly dependent. To demonstrate this, notice that
9–6 CONTROLLABILITY
Controllability and Observability. A system is said to be controllable at time t0
if it is possible by means of an unconstrained control vector to transfer the system from
any initial state x(t0)to any other state in a finite interval of time.
A system is said to be observable at time t0if, with the system in state x(t0),it is possible
to determine this state from the observation of the output over a finite time interval.
The concepts of controllability and observability were introduced by Kalman. They
play an important role in the design of control systems in state space. In fact, theconditions of controllability and observability may govern the existence of a completesolution to the control system design problem. The solution to this problem may not Cy1/H21752y2/H21752y3D=C1
231
012
22
S=nonsingular Cx1/H21752x2/H21752x3D=C1
231
012
24
S=singularc1=c2=c3=0c1  y1+c2  y2+c3  y3=0y1=C1
23S,  y2=C101
S,  y3=C222
Sx1+x2-x3=0x1=C1
23S,  x2=C101
S,  x3=C224
S
676
Chapter 9 / Control Systems Analysis in State Space
exist if the system considered is not controllable. Although most physical systems are
controllable and observable, corresponding mathematical models may not possess the
property of controllability and observability.Then it is necessary to know the conditions
under which a system is controllable and observable. This section deals with controlla-
bility and the next section discusses observability.
In what follows, we shall first derive the condition for complete state controllability.
Then we derive alternative forms of the condition for complete state controllability
followed by discussions of complete output controllability. Finally, we present the concept
of stabilizability.
Complete State Controllability of Continuous-Time Systems. Consider the
continuous-time system.
(9–51)
where
The system described by Equation (9–51) is said to be state controllable at t=t
0
if it is
possible to construct an unconstrained control signal that will transfer an initial state to
any final state in a finite time interval If every state is controllable, then the
system is said to be completely state controllable.
We shall now derive the condition for complete state controllability.Without loss of
generality, we can assume that the final state is the origin of the state space and that the
initial time is zero, or t
0
=0.
The solution of Equation (9–51) is
Applying the definition of complete state controllability just given, we have
or
(9–52)
Referring to Equation (9–48) or (9–50), can be written
(9–53)
Substituting Equation (9–53) into Equation (9–52) gives
(9–54) x(0)=-a
n-1
k=0
A
k
 
B
3
t
1
0
a
k
(t)u(t)dte
-At
=a
n-1
k=0
a
k
(t)
 
A
k
e
-At
x(0)=-
3
t
1
0
e
-At
 
Bu(t)dtxAt
1
B=0=e
At
1
 
x(0)+
3
t
1
0
e
A(t
1
-t)
 
Bu(t)dtx(t)=e
At
 
x(0) +
3
t
0
e
A(t-t)
 
Bu(t)dtt
0
/H11349t/H11349t
1
 
. B=n*1 matrix A=n*n matrix u=control signal (scalar ) x=state vector (n-vector )x#=Ax+Bu
Openmirrors.com
Section 9–6 / Controllability 677Let us put
Then Equation (9–54) becomes
(9–55)
If the system is completely state controllable, then, given any initial state x(0),Equation
(9–55) must be satisfied. This requires that the rank of the n*n matrix
ben.
From this analysis, we can state the condition for complete state controllability as fol-
lows: The system given by Equation (9–51) is completely state controllable if and onlyif the vectors are linearly independent, or the n*n matrix
is of rank n.
The result just obtained can be extended to the case where the control vector uis
r-dimensional. If the system is described by
where uis an r-vector, then it can be proved that the condition for complete state
controllability is that the n*nr matrix
be of rank n,or contain nlinearly independent column vectors. The matrix
is commonly called the controllability matrix.
EXAMPLE 9–10
Consider the system given by
Since
the system is not completely state controllable.CB/H21752ABD=B1
01
0R=singularBx#
1
x#
2R=B1
01
-1RBx1
x2R+B1
0RuCB /H21752 AB /H21752 p /H21752 An-1
 BDCB /H21752 AB /H21752 p /H21752 An-1
 BDx#=Ax+BuCB /H21752 AB /H21752 p /H21752 An-1
 BDB, AB,p, An-1
 BCB /H21752 AB /H21752 p /H21752 An-1
 BD =-CB/H21752AB/H21752p/H21752An-1
 BDFb0
b1
/H11080
/H11080/H11080
b
n-1V x(0)=-an-1
k=0Ak
 Bbk3t1
0ak(t)u(t)dt=bk
678
Chapter 9 / Control Systems Analysis in State Space
EXAMPLE 9–11
Consider the system given by
For this case,
The system is therefore completely state controllable.
Alternative Form of the Condition for Complete State Controllability. Consider
the system defined by
(9–56)
where
If the eigenvectors of Aare distinct, then it is possible to find a transformation matrix
Psuch that
Note that if the eigenvalues of Aare distinct, then the eigenvectors of Aare distinct; how-
ever, the converse is not true. For example, an n*n real symmetric matrix having
multiple eigenvalues has ndistinct eigenvectors. Note also that each column of the P
matrix is an eigenvector of Aassociated with 
Let us define
(9–57)
Substituting Equation (9–57) into Equation (9–56), we obtain
(9–58)
By defining
P
-1
 
B=F=Af
ij
Bz#=P
-1
 
APz +P
-1
 
Bux=Pzl
i
(i=1, 2, p,n).P
-1
 
AP =D=
F
l
1
0l
2
/H11080
/H11080
/H110800
l
n
V
 B=n*r matrix A=n*n matrix u=control vector (r-vector ) x=state vector (n-vector )x#=Ax+Bu
CB/H21752ABD=
B
0
11
-1
R
=nonsingular
B
x#
1
x#
2
R
=
B
1
21
-1
RB
x
1
x
2
R
+
B
0
1
R
[u]
Openmirrors.com
Section 9–6 / Controllability 679we can rewrite Equation (9–58) as
If the elements of any one row of the n*r matrix Fare all zero, then the corresponding
state variable cannot be controlled by any of the ui.Hence, the condition of complete
state controllability is that if the eigenvectors of Aare distinct, then the system is com-
pletely state controllable if and only if no row of has all zero elements. It is im-portant to note that, to apply this condition for complete state controllability, we mustput the matrix in Equation (9–58) in diagonal form.
If the Amatrix in Equation (9–56) does not possess distinct eigenvectors, then
diagonalization is impossible. In such a case, we may transform Ainto a Jordan canonical
form. If, for example, Ahas eigenvalues and has n-3 distinct
eigenvectors, then the Jordan canonical form of Ais
The square submatrices on the main diagonal are called Jordan blocks.
Suppose that we can find a transformation matrix Ssuch that
If we define a new state vector zby
(9–59)
then substitution of Equation (9–59) into Equation (9–56) yields
(9–60)
The condition for complete state controllability of the system of Equation (9–56) may
then be stated as follows: The system is completely state controllable if and only if (1) =Jz+S
-1
 Bu z#=S-1
 ASz +S-1
 Bux=SzS-1
 AS=JJ=Il1
0
0
01
l1
00
1
l1
l4
01
l4
l6
/H11080
/H11080
/H110800
lnYl1 ,l1 ,l1 ,l4 ,l4 ,l6 ,p, lnP-1
 APP-1
 B z#
n=ln zn+fn1 u1+fn2 u2+p+fnr ur /H11080 /H11080 /H11080 z#
2=l2 z2+f21 u1+f22 u2+p+f2r ur z#
1=l1 z1+f11 u1+f12 u2+p+f1r ur
680
Chapter 9 / Control Systems Analysis in State Space
no two Jordan blocks in Jof Equation (9–60) are associated with the same eigenvalues,
(2) the elements of any row of that correspond to the last row of each Jordan block
are not all zero, and (3) the elements of each row of that correspond to distinct
eigenvalues are not all zero.
EXAMPLE 9–12
The following systems are completely state controllable:
The following systems are not completely state controllable:
Condition for Complete State Controllability in the sPlane. The condition for
complete state controllability can be stated in terms of transfer functions or transfer
matrices.
It can be proved that a necessary and sufficient condition for complete state con-
trollability is that no cancellation occur in the transfer function or transfer matrix. If
cancellation occurs, the system cannot be controlled in the direction of the canceled
mode.
EXAMPLE 9–13
Consider the following transfer function:
Clearly, cancellation of the factor (s+2.5) occurs in the numerator and denominator of this
transfer function. (Thus one degree of freedom is lost.) Because of this cancellation, this system
is not completely state controllable.X(s)
U(s)=s+2.5
(s+2.5)(s -1) 
E
x#
1
x#
2
x#
3
x#
4
x#
5
U
=
E
-2
0
0
01
-2
00
1
-2
-5
00
1
-5
UE
x
1
x
2
x
3
x
4
x
5
U
+
E
4
2
1
3
0
U
u 
C
x#
1
x#
2
x#
3
S
=
C
-1
0
01
-1
00
0
-2
SC
x
1
x
2
x
3
S
+
C
4
0
32
0
0
SB
u
1
u
2
R
 
B
x#
1
x#
2
R
=
B
-1
00
-2
RB
x
1
x
2
R
+
B
2
0
R
u 
E
x#
1
x#
2
x#
3
x#
4
x#
5
U
=
E
-2
0
0
01
-2
00
1
-2
-5
00
1
-5
UE
x
1
x
2
x
3
x
4
x
5
U
+
E
0
0
3
0
21
0
0
0
1
UB
u
1
u
2
R
 
C
x#
1
x#
2
x#
3
S
=
C
-1
0
01
-1
00
0
-2
SC
x
1
x
2
x
3
S
+
C
0
4
3
S
u 
B
x#
1
x#
2
R
=
B
-1
00
-2
RB
x
1
x
2
R
+
B
2
5
R
u
S
-1
 
BS
-1
 
B
Openmirrors.com
Section 9–6 / Controllability 681The same conclusion can be obtained by writing this transfer function in the form of a state
equation. A state-space representation is
Since
the rank of the matrix is 1. Therefore, we arrive at the same conclusion: The system is
not completely state controllable.
Output Controllability. In the practical design of a control system, we may want
to control the output rather than the state of the system. Complete state controllabilityis neither necessary nor sufficient for controlling the output of the system. For thisreason, it is desirable to define separately complete output controllability.
Consider the system described by
(9–61)
(9–62)
where
The system described by Equations (9–61) and (9–62) is said to be completely output
controllable if it is possible to construct an unconstrained control vector u(t)that will
transfer any given initial output yAt
0Bto any final output yAt1Bin a finite time interval
t0/H11349t/H11349t1.
It can be proved that the condition for complete output controllability is as follows:
The system described by Equations (9–61) and (9–62) is completely output controllableif and only if the m*(n+1)r matrix
is of rank m.(For a proof, see Problem A–9–16 .) Note that the presence of the Duterm
in Equation (9–62) always helps to establish output controllability.
Uncontrollable System. An uncontrollable system has a subsystem that is
physically disconnected from the input.CCB /H21752 CAB  /H21752 CA
2
 B /H21752 p /H21752 CAn-1
 B /H21752 DD D=m*r matrix C=m*n matrix B=n*r matrix A=n*n matrix y=output vector (m-vector )u=control vector (r-vector ) x=state vector (n-vector ) y=Cx+Du x#=Ax+BuCB /H21752 ABDCB/H21752ABD=B1
11
1RBx#
1
x#
2R=B0
2.51
-1.5RBx1
x2R+B1
1Ru
682
Chapter 9 / Control Systems Analysis in State Space
Stabilizability. For a partially controllable system, if the uncontrollable modes are
stable and the unstable modes are controllable, the system is said to be stabilizable. For
example, the system defined by
is not state controllable.The stable mode that corresponds to the eigenvalue of –1is not
controllable.The unstable mode that corresponds to the eigenvalue of 1 is controllable.
Such a system can be made stable by the use of a suitable feedback. Thus this system is
stabilizable.
9–7 OBSERVABILITY
In this section we discuss the observability of linear systems. Consider the unforced
system described by the following equations:
(9–63)
(9–64)
where
The system is said to be completely observable if every state xAt
0
Bcan be determined
from the observation of y(t)over a finite time interval, The system is, there-
fore, completely observable if every transition of the state eventually affects every ele-
ment of the output vector.The concept of observability is useful in solving the problem
of reconstructing unmeasurable state variables from measurable variables in the mini-
mum possible length of time. In this section we treat only linear, time-invariant systems.
Therefore, without loss of generality, we can assume that t
0
=0.
The concept of observability is very important because, in practice, the difficulty
encountered with state feedback control is that some of the state variables are not
accessible for direct measurement, with the result that it becomes necessary to estimate
the unmeasurable state variables in order to construct the control signals. It will be
shown in Section 10–5 that such estimates of state variables are possible if and only if
the system is completely observable.
In discussing observability conditions, we consider the unforced system as given by
Equations (9–63) and (9–64).The reason for this is as follows: If the system is described
by
then
x(t)=e
At
 
x(0) +
3
t
0
e
A(t-t)
 
Bu(t)dt y=Cx+Du x#=Ax+But
0
/H11349t/H11349t
1
 
. C=m*n matrix A=n*n matrix y=output vector (m-vector ) x=state vector (n-vector ) y=Cx x#=Ax
B
x#
1
x#
2
R
=
B
1
00
-1
RB
x
1
x
2
R
+
B
1
0
R
u
Openmirrors.com
Section 9–7 / Observability 683andy(t)is
Since the matrices A,B,C, and Dare known and u(t)is also known, the last two terms
on the right-hand side of this last equation are known quantities. Therefore, they maybe subtracted from the observed value of y(t).Hence, for investigating a necessary and
sufficient condition for complete observability, it suffices to consider the system describedby Equations (9–63) and (9–64).
Complete Observability of Continuous-Time Systems. Consider the system
described by Equations (9–63) and (9–64). The output vector y(t)is
Referring to Equation (9–48) or (9–50), we have
where nis the degree of the characteristic polynomial. [Note that Equations (9–48) and
(9–50) with mreplaced by ncan be derived using the characteristic polynomial.]
Hence, we obtain
or
(9–65)
If the system is completely observable, then, given the output y(t)over a time interval
x(0)is uniquely determined from Equation (9–65). It can be shown that this
requires the rank of the nm*n matrix
to be n.(See Problem A–9–19 for the derivation of this condition.)
From this analysis, we can state the condition for complete observability as follows:
The system described by Equations (9–63) and (9–64) is completely observable if andonly if the n*nm matrix
is of rank nor has nlinearly independent column vectors. This matrix is called the
observability matrix.CC*/H21752A*C*/H21752p/H21752(A*)
n-1
 C*DFC
CA
/H11080/H11080/H11080
CA
n-1V0/H11349t/H11349t1 ,y(t)=a0(t)  Cx(0)+a1(t)  CAx (0)+p+an-1(t)  CAn-1
 x(0)y(t)=an-1
k=0ak(t)  CAk
 x(0)eAt=an-1
k=0ak(t)  Aky(t)=CeAt
 x(0)y(t)=CeAt
 x(0)+C
3t
0eA(t-t)
 Bu(t)dt+Du
684
Chapter 9 / Control Systems Analysis in State Space
EXAMPLE 9–14
Consider the system described by
Is this system controllable and observable?
Since the rank of the matrix
is 2, the system is completely state controllable.
For output controllability, let us find the rank of the matrix Since
the rank of this matrix is 1. Hence, the system is completely output controllable.
To test the observability condition, examine the rank of Since
the rank of is 2. Hence, the system is completely observable.
Conditions for Complete Observability in the s Plane. The conditions for com-
plete observability can also be stated in terms of transfer functions or transfer matrices.
The necessary and sufficient conditions for complete observability is that no cancella-
tion occur in the transfer function or transfer matrix. If cancellation occurs, the canceled
mode cannot be observed in the output.
EXAMPLE 9–15
Show that the following system is not completely observable:
where
Note that the control function udoes not affect the complete observability of the system. To
examine complete observability, we may simply set u=0. For this system, we have
CC*/H21752A*C*/H21752(A*)
2
 
C*D=
C
4
5
1-6
-7
-16
5
-1
S
x=
C
x
1
x
2
x
3
S
,
  
A=
C
0
0
-61
0
-110
1
-6
S
,
  
B=
C
0
0
1
S
,
  
C=[4
 
5
 
1] y=Cx x#=Ax+BuCC*/H21752A*C*DCC*/H21752A*C*D=
B
1
01
1
R
[C*/H21752A*C*].CCB /H21752 CABD=[0
 
1]CCB /H21752 CABD.CB/H21752ABD=
B
0
11
-1
R
 y=[1
 
0]
B
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
1
-21
-1
RB
x
1
x
2
R
+
B
0
1
R
u
Openmirrors.com
Section 9–7 / Observability 685Note that
Hence, the rank of the matrix is less than 3.Therefore, the system is not
completely observable.
In fact, in this system, cancellation occurs in the transfer function of the system. The transfer
function between X1(s)andU(s) is
and the transfer function between Y(s) andX1(s)is
Therefore, the transfer function between the output Y(s) and the input U(s) is
Clearly, the two factors (s+1) cancel each other.This means that there are nonzero initial states
x(0), which cannot be determined from the measurement of y(t).
Comments. The transfer function has no cancellation if and only if the system is com-
pletely state controllable and completely observable.This means that the canceled transferfunction does not carry along all the information characterizing the dynamic system.
Alternative Form of the Condition for Complete Observability. Consider the
system described by Equations (9–63) and (9–64), rewritten
(9–66)(9–67)
Suppose that the transformation matrix Ptransforms Ainto a diagonal matrix, or
where Dis a diagonal matrix. Let us define
Then Equations (9–66) and (9–67) can be written
Hence,
y(t)=CPe
Dt
 z(0) y=CPz z#=P-1
 APz =Dzx=PzP-1
 AP =D y=Cx x#=AxY(s)
U(s)=(s+1)(s +4)
(s+1)(s +2)(s +3)Y(s)
X1(s)=(s+1)(s +4)X1(s)
U(s)=1
(s+1)(s +2)(s +3)CC*/H21752A*C*/H21752(A*)2
 C*D34
51-6
-7
-16
5
-13=0
or
The system is completely observable if none of the columns of the m*n matrix CP
consists of all zero elements. This is because, if the ith column of CPconsists of all zero
elements, then the state variable z
i
(0)will not appear in the output equation and there-
fore cannot be determined from observation of y(t).Thus, x(0),which is related to z(0)
by the nonsingular matrix P, cannot be determined. (Remember that this test applies only
if the matrix is in diagonal form.)
If the matrix Acannot be transformed into a diagonal matrix, then by use of a suitable
transformation matrix S, we can transform Ainto a Jordan canonical form, or
where Jis in the Jordan canonical form.
Let us define
Then Equations (9–66) and (9–67) can be written
Hence,
The system is completely observable if (1) no two Jordan blocks in Jare associated with
the same eigenvalues, (2) no columns of CSthat correspond to the first row of each
Jordan block consist of zero elements, and (3) no columns of CSthat correspond to
distinct eigenvalues consist of zero elements.
To clarify condition (2), in Example 9–16 we have encircled by dashed lines the
columns of CSthat correspond to the first row of each Jordan block.
EXAMPLE 9–16
The following systems are completely observable.
 
E
x#
1
x#
2
x#
3
x#
4
x#
5
U
=
E
2
0
0
01
2
00
1
2
-3
00
1
-3
UE
x
1
x
2
x
3
x
4
x
5
U
,
  
c
y
1
y
2
d
=
B
1
01
11
10
10
0
RE
x
1
x
2
x
3
x
4
x
5
U
 
C
x#
1
x#
2
x#
3
S
=
C
2
0
01
2
00
1
2
SC
x
1
x
2
x
3
S
,
  
c
y
1
y
2
d
=
B
3
40
00
0
RC
x
1
x
2
x
3
S
 
B
x#
1
x#
2
R
=
B
-1
00
-2
RB
x
1
x
2
R
,
  
y=[1
 
3]
B
x
1
x
2
R
y(t)=CSe
Jt
 
z(0) y=CSz z#=S
-1
 
ASz =Jzx=SzS
-1
 
AS=JP
-1
 
APy(t)=CP
F
e
l
1
 
t
0e
l
2
 
t
/H11080
/H11080
/H110800
e
l
n
 
t
V
z(0)=CP
F
e
l
1
 
t
z
1
(0)
e
l
2
 
t
z
2
(0)
/H11080
/H11080
/H11080
e
l
n
 
t
z
n
(0)
V
686
Chapter 9 / Control Systems Analysis in State Space
Openmirrors.com
The following systems are not completely observable.
Principle of Duality. We shall now discuss the relationship between controllability
and observability. We shall introduce the principle of duality, due to Kalman, to clarifyapparent analogies between controllability and observability.
Consider the system S
1described by
where
and the dual system S2defined by
where
The principle of duality states that the system S1is completely state controllable
(observable) if and only if system S2is completely observable (state controllable).
To verify this principle, let us write down the necessary and sufficient conditions for
complete state controllability and complete observability for systems S1andS2. C*=conjugate transpose of C B*=conjugate transpose of B A*=conjugate transpose of A n=output vector (r-vector ) v=control vector (m-vector ) z=state vector (n-vector )n=B*zz#=A*z+C*v C=m*n matrix B=n*r matrix A=n*n matrix y=output vector (m-vector ) u=control vector (r-vector ) x=state vector (n-vector ) y=Cx x#=Ax+Bu Ex#
1
x#
2
x#
3
x#
4
x#
5U=E2
00
01
200
12
-3
00
1
-3
UEx1
x2
x3
x4
x5U,  cy1
y2d=B1
01
11
10
00
0REx1
x2
x3
x4
x5U Cx#
1
x#
2
x#
3S=C2
001
200
12
SCx1
x2
x3S,  cy1
y2d=B001
23
4RCx1
x2
x3S Bx#
1
x#
2R=B-1
00
-2RBx1
x2R,  y=[0 1]Bx1
x2R
Section 9–7 / Observability 687
688
Chapter 9 / Control Systems Analysis in State Space
For system S
1
:
1.A necessary and sufficient condition for complete state controllability is that the
rank of the n*nr matrix
ben.
2.A necessary and sufficient condition for complete observability is that the rank of
then*nm matrix
ben.
For system S
2
:
1.A necessary and sufficient condition for complete state controllability is that the
rank of the n*nm matrix
ben.
2.A necessary and sufficient condition for complete observability is that the rank of
then*nr matrix
ben.
By comparing these conditions, the truth of this principle is apparent. By use of this
principle, the observability of a given system can be checked by testing the state con-
trollability of its dual.
Detectability. For a partially observable system, if the unobservable modes are
stable and the observable modes are unstable, the system is said to be detectable. Note
that the concept of detectability is dual to the concept of stabilizability.
EXAMPLE PROBLEMS AND SOLUTIONS
A–9–1. Consider the transfer function system defined by Equation (9–2), rewritten
(9–68)
Derive the following controllable canonical form of the state-space representation for this
transfer-function system:
(9–69)
G
x#
1
x#
2
/H11080
/H11080
/H11080
x#
n-1
x#
n
W
=
G
0
0
/H11080
/H11080
/H11080
0
-a
n
1
0
/H11080
/H11080
/H11080
0
-a
n-1
0
1
/H11080
/H11080
/H11080
0
-a
n-2
p
p
p
p0
0
/H11080
/H11080
/H11080
1
-a
1
WG
x
1
x
2
/H11080
/H11080
/H11080
x
n-1
x
n
W
+
G
0
0
/H11080
/H11080
/H11080
0
1
W
uY(s)
U(s)=b
0
 
s
n
+b
1
 
s
n-1
+p+b
n-1
 
s+b
n
s
n
+a
1
 
s
n-1
+p+a
n-1
 
s+a
n
CB /H21752 AB /H21752 p /H21752 A
n-1
 
BDCC*/H21752A*C*/H21752p/H21752(A*)
n-1
 
C*DCC*/H21752A*C*/H21752p/H21752(A*)
n-1
 
C*DCB /H21752 AB /H21752 p /H21752 A
n-1
 
BD
Openmirrors.com
Example Problems and Solutions 689(9–70)
Solution. Equation (9–68) can be written as
which can be modified to
(9–71)
where
Let us rewrite this last equation in the following form:
From this last equation, the following two equations may be obtained:
(9–72)
(9–73)
Now define state variables as follows:
Then, clearly,
 sXn-1(s)=Xn(s) /H11080 /H11080 /H11080 sX2(s)=X3(s) sX1(s)=X2(s) Xn(s)=sn-1Q(s) Xn-1(s)=sn-2Q(s) /H11080 /H11080 /H11080 X2(s)=sQ(s) X1(s)=Q(s) +Abn-an b0BQ(s) Yˆ(s)=Ab1-a1 b0Bsn-1Q(s) +p+Abn-1-an-1 b0BsQ(s) snQ(s) =-a1 sn-1Q(s) -p-an-1 sQ(s) -an Q(s) +U(s) =U(s)
sn+a1 sn-1+p+an-1 s+an=Q(s)Yˆ(s)
Ab1-a1 b0Bsn-1+p+Abn-1-an-1 b0Bs+Abn-an b0BYˆ(s)=Ab1-a1 b0Bsn-1+p+Abn-1-an-1 b0Bs+Abn-an b0B
sn+a1 sn-1+p+an-1 s+anU(s)Y(s) =b0 U(s) +Yˆ(s)Y(s)
U(s)=b0+Ab1-a1 b0Bsn-1+p+Abn-1-an-1 b0Bs+Abn-an b0B
sn+a1 sn-1+p+an-1 s+an y=Cbn-an b0/H21752bn-1-an-1 b0/H21752p/H21752b1-a1 b0DFx1
x2
/H11080
/H11080/H11080
x
nV+b0 u
690
Chapter 9 / Control Systems Analysis in State Space
which may be rewritten as
(9–74)
Noting that we can rewrite Equation (9–72) as
or
(9–75)
Also, from Equations (9–71) and (9–73), we obtain
The inverse Laplace transform of this output equation becomes
(9–76)
Combining Equations (9–74) and (9–75) into one vector–matrix differential equation, we obtain
Equation (9–69). Equation (9–76) can be rewritten as given by Equation (9–70). Equations (9–69)
and (9–70) are said to be in the controllable canonical form. Figure 9–1 shows the block diagram
representation of the system defined by Equations (9–69) and (9–70).y=Ab
n
-a
n
 
b
0
Bx
1
+Ab
n-1
-a
n-1
 
b
0
Bx
2
+p+Ab
1
-a
1
 
b
0
Bx
n
+b
0
 
u +Ab
n
-a
n
 
b
0
BX
1
(s) =b
0
 
U(s) +Ab
1
-a
1
 
b
0
BX
n
(s)+p+Ab
n-1
-a
n-1
 
b
0
BX
2
(s) +Ab
n
-a
n
 
b
0
BQ(s) Y(s) =b
0
 
U(s) +Ab
1
-a
1
 
b
0
Bs
n-1
Q(s) +p+Ab
n-1
-a
n-1
 
b
0
BsQ(s)x#
n
=-a
n
 
x
1
-a
n-1
 
x
2
-p-a
1
 
x
n
+usX
n
(s)=-a
1
 
X
n
(s)-p-a
n-1
 
X
2
(s)-a
n
 
X
1
(s)+U(s)s
n
Q(s) =sX
n
(s), x#
n-1
=x
n
 /H11080 /H11080 /H11080 x#
2
=x
3
 x#
1
=x
2
b
0
y
u
a
1
a
2
a
n–1
a
n
x
n–1
x
n
x
1
x
2
b
1
–a
1
b
0
b
2
–a
2
b
0
b
n–1
–a
n–1
b
0
b
n
–a
n
b
0
/H20848/H20848 /H20848
++
++
++
++
++
++
++
+–
Figure 9–1
Block diagram
representation of the
system defined by
Equations (9–69)
and (9–70)
(controllable
canonical form).
Openmirrors.com
Example Problems and Solutions 691A–9–2. Consider the following transfer-function system:
(9–77)
Derive the following observable canonical form of the state-space representation for this transfer-
function system:
(9–78)
(9–79)
Solution. Equation (9–77) can be modified into the following form:
By dividing the entire equation by snand rearranging, we obtain
(9–80)
Now define state variables as follows:
(9–81)
 X1 (s)=1
s Cbn U(s) -an Y(s)D X2 (s)=1
s Cbn-1 U(s) -an-1 Y(s) +X1 (s)D /H11080 /H11080 /H11080 Xn-1 (s)=1
s Cb2 U(s) -a2 Y(s) +Xn-2 (s)D Xn (s)=1
s Cb1 U(s) -a1 Y(s) +Xn-1 (s)D+1
sn-1Cbn-1 U(s) -an-1 Y(s)D+1
snCbn U(s) -an Y(s)DY(s) =b0 U(s) +1
sCb1 U(s) -a1 Y(s)D+p+sCan-1 Y(s) -bn-1 U(s)D+an Y(s) -bn U(s) =0snCY(s) -b0 U(s)D+sn-1Ca1 Y(s) -b1 U(s)D+py=[0 0 p 0 1]Gx1
x2
/H11080
/H11080/H11080
x
n-1
xnW+b0 uFx#
1
x#
2
/H11080
/H11080/H11080
x#
nV=F0
1
/H11080/H11080/H11080
00
0
/H11080/H11080/H11080
0p
p
p0
0
/H11080/H11080/H11080
1-a
n
-an-1
/H11080
/H11080/H11080
-a
1VFx1
x2
/H11080
/H11080/H11080
x
nV+Fbn-an b0
bn-1-an-1 b0
/H11080
/H11080/H11080
b
1-a1 b0Vu Y(s)
U(s)=b0 sn+b1 sn-1+p+bn-1 s+bn
sn+a1 sn-1+p+an-1 s+an
692
Chapter 9 / Control Systems Analysis in State Space
Then Equation (9–80) can be written as
(9–82)
By substituting Equation (9–82) into Equation (9–81) and multiplying both sides of the equations
bys, we obtain
Taking the inverse Laplace transforms of the preceding nequations and writing them in the
reverse order, we get
Also, the inverse Laplace transform of Equation (9–82) gives
Rewriting the state and output equations in the standard vector-matrix forms gives Equations
(9–78) and (9–79). Figure 9–2 shows a block diagram representation of the system defined by
Equations (9–78) and (9–79).y=x
n
+b
0
ux#
n
=x
n-1
-a
1
 
x
n
+Ab
1
-a
1
 
b
0
Bux#
n-1
=x
n-2
-a
2
 
x
n
+Ab
2
-a
2
 
b
0
Bu/H11080/H11080/H11080x#
2
=x
1
-a
n-1
 
x
n
+Ab
n-1
-a
n-1
 
b
0
Bux#
1
=-a
n
 
x
n
+Ab
n
-a
n
 
b
0
Bu sX
1
(s)=-a
n
 
X
n
(s)+Ab
n
-a
n
 
b
0
BU(s) sX
2
(s)=X
1
(s)-a
n-1
 
X
n
(s)+Ab
n-1
-a
n-1
 
b
0
BU(s) /H11080 /H11080 /H11080 sX
n-1
(s)=X
n-2
(s)-a
2
 
X
n
(s)+Ab
2
-a
2
 
b
0
BU(s) sX
n
(s)=X
n-1
(s)-a
1
 
X
n
(s)+Ab
1
-a
1
 
b
0
BU(s)Y(s) =b
0
 
U(s) +X
n
(s)
yu
a
n–1
a
1
a
n
x
n–1
x
1
x
2
x
n
b
0
b
n
–a
n
b
0
b
n–1
–a
n–1
b
0
b
1
–a
1
b
0
/H20848/H20848 /H20848
+
–
++
–
++
–
++
Figure 9–2
Block diagram
representation of the
system defined by
Equations (9–78)
and (9–79)
(observable
canonical form).
Openmirrors.com
Example Problems and Solutions 693A–9–3. Consider the transfer-function system defined by
(9–83)
where Derive the state-space representation of this system in the following diagonal
canonical form:
(9–84)
(9–85)
Solution. Equation (9–83) may be written as
(9–86)
Define the state variables as follows:
which may be rewritten as
 sXn(s)=-pn Xn(s)+U(s) /H11080 /H11080 /H11080 sX2(s)=-p2 X2(s)+U(s) sX1(s)=-p1 X1(s)+U(s) Xn(s)=1
s+pn U(s) /H11080 /H11080 /H11080 X2(s)=1
s+p2 U(s) X1(s)=1
s+p1 U(s)Y(s) =b0 U(s) +c1
s+p1U(s) +c2
s+p2U(s) +p+cn
s+pnU(s)y=Cc1 c2 p cnDFx1
x2
/H11080
/H11080/H11080
x
nV+b0 uFx#
1
x#
2
/H11080
/H11080/H11080
x#
nV=F-p1
0-p2
/H11080
/H11080
/H110800
-pnVFx1
x2
/H11080
/H11080/H11080
x
nV+F1
1
/H11080/H11080/H11080
1VupiZpj . =b0+c1
s+p1+c2
s+p2+p+cn
s+pn Y(s)
U(s)=b0 sn+b1 sn-1+p+bn-1 s+bn
As+p1BAs+p2B p As+pnB
694
Chapter 9 / Control Systems Analysis in State Space
The inverse Laplace transforms of these equations give
(9–87)
These nequations make up a state equation.
In terms of the state variables X
1
(s),X
2
(s),p,X
n
(s), Equation (9–86) can be written as
The inverse Laplace transform of this last equation is
(9–88)
which is the output equation.
Equation (9–87) can be put in the vector-matrix equation as given by Equation (9–84). Equa-
tion (9–88) can be put in the form of Equation (9–85).
Figure 9–3 shows a block diagram representation of the system defined by Equations (9–84)
and (9–85).
It is noted that if we choose the state variables as
 X
ˆ
n
(s)=c
n
s+p
n
 U(s) /H11080 /H11080 /H11080 X
ˆ
2
(s)=c
2
s+p
2
 U(s) X
ˆ
1
(s)=c
1
s+p
1
 U(s)y=c
1
 
x
1
+c
2
 
x
2
+p+c
n
 
x
n
+b
0
 
uY(s) =b
0
 
U(s) +c
1
 
X
1
(s)+c
2
 
X
2
(s)+p+c
n
 
X
n
(s) x#
n
=-p
n
 
x
n
+u /H11080 /H11080 /H11080 x#
2
=-p
2
 
x
2
+u x#
1
=-p
1
 
x
1
+u
u
y
x
n
x
2
x
1
c
2
1
s+p
2
c
1
b
0
c
n
1
s+p
1
…
…
1
s+p
n
++
+
++
Figure 9–3
Block diagram
representation of the
system defined by
Equations (9–84)
and (9–85) (diagonal
canonical form).
Openmirrors.com
Example Problems and Solutions 695then we get a slightly different state-space representation. This choice of state variables gives
from which we obtain
(9–89)
Referring to Equation (9–86), the output equation becomes
from which we get
(9–90)
Equations (9–89) and (9–90) give the following state-space representation for the system:
A–9–4. Consider the system defined by
(9–91)
where the system involves a triple pole at s=–p1. (We assume that, except for the first three
pi’s being equal, the pi’s are different from one another.) Obtain the Jordan canonical form of the
state-space representation for this system.Y(s)
U(s)=b0 sn+b1 sn-1+p+bn-1 s+bn
As+p1B3As+p4BAs+p5BpAs+pnBy=[1 1 p 1]Fxˆ1
xˆ2
/H11080
/H11080/H11080
x
ˆnV+b0 uFxˆ#
1
xˆ#
2
/H11080
/H11080/H11080
x
ˆ#
nV=F-p1
0-p2
/H11080
/H11080
/H110800
-pnVFxˆ1
xˆ2
/H11080
/H11080/H11080
x
ˆnV+Fc1
c2
/H11080/H11080/H11080
c
nVuy=xˆ1+xˆ2+p+xˆn+b0 uY(s) =b0 U(s) +Xˆ1(s)+Xˆ2(s)+p+Xˆn(s)xˆ#
n=-pn xˆn+cn u/H11080/H11080/H11080xˆ#
2=-p2 xˆ2+c2 uxˆ#
1=-p1 xˆ1+c1 u sXˆn(s)=-pn Xˆn(s)+cn U(s) /H11080 /H11080 /H11080 sXˆ2(s)=-p2 Xˆ2(s)+c2 U(s) sXˆ1(s)=-p1 Xˆ1(s)+c1 U(s)
696
Chapter 9 / Control Systems Analysis in State Space
Solution. The partial-fraction expansion of Equation (9–91) becomes
which may be written as
(9–92)
Define
Notice that the following relationships exist among X
1
(s),X
2
(s), and X
3
(s):
Then, from the preceding definition of the state variables and the preceding relationships, we
obtain
 sX
n
(s)=-p
n
 
X
n
(s)+U(s) /H11080 /H11080 /H11080 sX
4
(s)=-p
4
 
X
4
(s)+U(s) sX
3
(s)=-p
1
 
X
3
(s)+U(s) sX
2
(s)=-p
1
 
X
2
(s)+X
3
(s) sX
1
(s)=-p
1
 
X
1
(s)+X
2
(s)X
2
(s)
X
3
(s)=1
s+p
1
X
1
(s)
X
2
(s)=1
s+p
1
 X
n
(s)=1
s+p
n
 U(s) /H11080 /H11080 /H11080 X
4
(s)=1
s+p
4
 U(s) X
3
(s)=1
s+p
1
 U(s) X
2
(s)=1
As+p
1
B
2
 U(s) X
1
(s)=1
As+p
1
B
3
 U(s)+c
3
s+p
1
U(s) +c
4
s+p
4
U(s) +p+c
n
s+p
n
U(s)Y(s) =b
0
 
U(s) +c
1
As+p
1
B
3
U(s) +c
2
As+p
1
B
2
U(s)Y(s)
U(s)=b
0
+c
1
As+p
1
B
3
+c
2
As+p
1
B
2
+c
3
s+p
1
+c
4
s+p
4
+p+c
n
s+p
n
Openmirrors.com
Example Problems and Solutions 697The inverse Laplace transforms of the preceding nequations give
The output equation, Equation (9–92), can be rewritten as
The inverse Laplace transform of this output equation is
Thus, the state-space representation of the system for the case when the denominator polynomial
involves a triple root –p1can be given as follows:
(9–93)
(9–94)
The state-space representation in the form given by Equations (9–93) and (9–94) is said to be in
the Jordan canonical form. Figure 9–4 shows a block diagram representation of the system givenby Equations (9–93) and (9–94).
A–9–5. Consider the transfer-function system
Obtain a state-space representation of this system with MATLAB.Y(s)
U(s)=25.04s +5.008
s3+5.03247s2+25.1026s +5.008 y=Cc1 c2 p cnDFx1
x2
/H11080
/H11080/H11080
x
nV+b0 uHx#
1
x#
2
x#
3
x#
4
/H11080
/H11080/H11080
x#
nX=H-p1
0
0
0
/H11080
/H11080/H11080
01
-p
1
0
p
p0
1
-p1
0
/H11080
/H11080/H11080
00
/H11080
0
-p
4
0p
p
/H11080
/H11080
/H110800
/H11080
0
-pnXHx1
x2
x3
x4
/H11080
/H11080/H11080
x
nX+H0011
/H11080/H11080/H11080
1
Xuy=c1 x1+c2 x2+c3 x3+c4 x4+p+cn xn+b0 uY(s) =b0 U(s) +c1 X1(s)+c2 X2(s)+c3 X3(s)+c4 X4(s)+p+cn Xn(s) x#
n=-pn xn+u /H11080 /H11080 /H11080 x#
4=-p4 x4+u x#
3=-p1 x3+u x#
2=-p1 x2+x3 x#
1=-p1 x1+x2
698
Chapter 9 / Control Systems Analysis in State Space
y u
c
1
1
s+p
1
1
s+p
1
1
s+p
1
c
4
1
s+p
4
c
2
c
3
x
3
x
4
x
n
x
2
x
1
b
0
c
n
…
…
1
s+p
n
++
++
+++
++
Figure 9–4
Block diagram
representation of the
system defined by
Equations (9–93)
and (9–94) (Jordan
canonical form).
Solution. MATLAB command
[A,B,C,D] = tf2ss(num,den)
will produce a state-space representation for the system. See MATLAB Program 9–4.
MATLAB Program 9–4
num = [25.04  5.008];
den = [1  5.03247  25.1026  5.008];
[A,B,C,D] = tf2ss(num,den)
A=
-5.0325 -25.1026 -5.0080
1.0000 0 0
0 1.0000 0
B =
1
0
0
C =
0 25.0400 5.0080
D  =
0
Openmirrors.com
Example Problems and Solutions 699This is the MATLAB representation of the following state-space equations:
A–9–6. Consider the system defined by
where
Obtain the response of the system to each of the following inputs:
(a) The rcomponents of uare impulse functions of various magnitudes.
(b) The rcomponents of uare step functions of various magnitudes.
(c) The rcomponents of uare ramp functions of various magnitudes.
Solution.
(a)Impulse response: Referring to Equation (9–43), the solution to the given state equation is
Substituting t0=0– into this solution, we obtain
Let us write the impulse input u(t)as
where wis a vector whose components are the magnitudes of rimpulse functions applied at
t=0 . The solution of the state equation when the impulse input d(t)wis given at t=0 is
(9–95)
(b)Step response: Let us write the step input u(t)as
u(t)=k =eAt
 x(0-)+eAt
 Bw x(t)=eAt
 x(0-)+
3t
0-eA(t-t)
 Bd(t) wdtu(t)=d(t)  wx(t)=eAt
 x(0-)+
3t
0-eA(t-t)
 Bu(t)dtx(t)=eAAt-t0B
 xAt0B+
3t
t0eA(t-t)
 Bu(t)dt B=n*r constant matrix A=n*n constant matrix u=control vector (r-vector ) x=state vector (n-vector )x#=Ax+Bu y=[0 25.04 5.008]Cx1
x2
x3S+[0]u Cx#
1
x#
2
x#
3S=C-5.0325
10-25.1026
01-5.008
00
SCx1
x2
x3S+C100
Su
700
Chapter 9 / Control Systems Analysis in State Space
where kis a vector whose components are the magnitudes of rstep functions applied at
t=0 . The solution to the step input at t=0 is given by
IfAis nonsingular, then this last equation can be simplified to give
(9–96)
(c)Ramp response: Let us write the ramp input u(t)as
where vis a vector whose components are magnitudes of ramp functions applied at t=0 .T he
solution to the ramp input tvgiven at t=0 is
IfAis nonsingular, then this last equation can be simplified to give
(9–97)
A–9–7. Obtain the response y(t) of the following system:
where u(t) is the unit-step input occurring at t=0 ,o r
u(t)=1(t)
Solution. For this system
The state transition matrix can be obtained as follows:
/H9021(t)=e
At
=l
-1
C(s
 
I-A)
-1
D/H9021(t)=e
At
A=
B
-1
1-0.5
0
R
,
  
B=
B
0.5
0
R
 y=[1
 
0]
C
x
1
x
2
S
 
B
x#
1
x#
1
R
=
B
-1
1-0.5
0
RB
x
1
x
2
R
+
B
0.5
0
R
u,
  
B
x
1
(0)
x
2
(0)
R
=
B
0
0
R
=e
At
 
x(0)+CA
-2
Ae
At
-IB-A
-1
tD
 
Bvx(t)=e
At
 
x(0)+AA
-2
BAe
At
-I-AtB
 
Bv=e
At
 
x(0)+e
At
a
I
2t
2
-2
 
A
3!t
3
+3
 
A
2
4!t
4
-4
 
A
3
5!t
5
+p
b
 
Bv=e
At
 
x(0)+e
At
3
t
0
e
-At
tdt
 
Bvx(t)=e
At
 
x(0)+
3
t
0
e
A(t-t)
 
Bt
 
vdtu(t)=t
 
v =e
At
 
x(0)+A
-1
Ae
At
-IB
 
Bk x(t)=e
At
 
x(0)+e
At
C-AA
-1
BAe
-At
-IBD
 
Bk =e
At
 
x(0)+e
At
a
It-At
2
2!+A
2
t
3
3!-p
b
 
Bk =e
At
 
x(0)+e
At
c
3
t
0
a
I-At+A
2
t
2
2!-p
b
dt
d
 
Bk x(t)=e
At
 
x(0)+
3
t
0
e
A(t-t)
 
Bkdt
Openmirrors.com
Example Problems and Solutions 701Since
we have
Since x(0)=0andk=1, referring to Equation (9–96), we have
Hence, the output y(t) can be given by
A–9–8. The Cayley–Hamilton theorem states that every n*n matrix Asatisfies its own characteristic
equation. The characteristic equation is not, however, necessarily the scalar equation of least
degree that Asatisfies. The least-degree polynomial having Aas a root is called the minimal
polynomial . That is, the minimal polynomial of an n*n matrix Ais defined as the polynomial
f(l)of least degree,
such that or
The minimal polynomial plays an important role in the computation of polynomials in an n*n
matrix.
Let us suppose that d(l), a polynomial in l, is the greatest common divisor of all the elements
of adj (lI-A). Show that, if the coefficient of the highest-degree term in lofd(l)is chosen as
1, then the minimal polynomial f(l)is given by
Solution. By assumption, the greatest common divisor of the matrix adj (lI-A)isd(l).Therefore,
adj(lI-A)=d(l)B(l)f(l)=2l I-A
d(l)2f(A)=Am+a1  Am-1+p+am-1  A+am  I=0f(A)=0,f(l)=lm+a1 lm-1+p+am-1 l+am ,  m/H11349ny(t) =[1 0]Bx1
x2R=x1=e-0.5tsin0.5t=Be-0.5tsin 0.5 t
-e-0.5t(cos 0.5 t+sin 0.5 t)+1R=B0
-21
-2RB0.5e-0.5t(cos 0.5 t-sin 0.5 t)-0.5
e-0.5tsin 0.5 tR=A-1AeAt-IB Bx(t)=eAt
 x(0)+A-1AeAt-IB Bk =Be-0.5t(cos0.5t -sin0.5t)
2e-0.5tsin0.5t-e-0.5tsin0.5t
e-0.5t(cos0.5t +sin0.5t)R /H9021(t)=eAt=l-1C(s  I-A)-1D=Ds+0.5-0.5
(s+0.5)2+0.52
1
(s+0.5)2+0.52-0.5
(s+0.5)2+0.52
s+0.5+0.5
(s+0.5)2+0.52T(s  I-A)-1=Bs+1
-10.5
sR-1
=1
s2+s+0.5Bs
1-0.5
s+1R
702
Chapter 9 / Control Systems Analysis in State Space
where the greatest common divisor of the n
2
elements (which are functions of l) of B(l)is unity.
Since
(lI-A)adj(lI-A)=|lI-A|I
we obtain
(9–98)
from which we find that is divisible by d(l). Let us put
(9–99)
Because the coefficient of the highest-degree term in lofd(l)has been chosen to be 1, the
coefficient of the highest-degree term in lofc(l)is also 1. From Equations (9–98) and (9–99),
we have
Hence,
Note that c(l)can be written as
wherea(l)is of lower degree than f(l). Since c(A)= 0andf(A)= 0, we must have a(A)= 0.
Also, since f(l)is the minimal polynomial, a(l)must be identically zero, or
Note that because f(A)= 0, we can write
Hence,
Noting that , we obtain
Since the greatest common divisor of the n
2
elements of B(l)is unity, we have
Therefore,
Then, from this last equation and Equation (9–99), we obtain
f(l)=∑l
 
I-A∑
d(l)c(l)=f(l)g(l)=1B(l)=g(l)
 
C(l)(l
 
I-A)
 
B(l)=c(l)
 
Ic(l)
 
I=g(l)f(l)
 
I=g(l)(l
 
I-A)
 
C(l)f(l)
 
I=(l
 
I-A)
 
C(l)c(l)=g(l)f(l)c(l)=g(l)f(l)+a(l)c(A)=0(l
 
I-A)
 
B(l)=c(l)
 
I∑l
 
I-A∑=d(l)c(l)∑l
 
I-A∑d(l)(l
 
I-A)
 
B(l)=∑l
 
I-A∑
 
I
Openmirrors.com
Example Problems and Solutions 703A–9–9. If an n*n matrix Ahasndistinct eigenvalues, then the minimal polynomial of Ais identical to
the characteristic polynomial. Also, if the multiple eigenvalues of Aare linked in a Jordan chain,
the minimal polynomial and the characteristic polynomial are identical. If, however, the multiple
eigenvalues of Aare not linked in a Jordan chain, the minimal polynomial is of lower degree than
the characteristic polynomial.
Using the following matrices AandBas examples, verify the foregoing statements about the
minimal polynomial when multiple eigenvalues are involved:
Solution. First, consider the matrix A. The characteristic polynomial is given by
Thus, the eigenvalues of Aare 2, 2, and 1. It can be shown that the Jordan canonical form of Ais
and the multiple eigenvalues are linked in the Jordan chain as shown.
To determine the minimal polynomial, let us first obtain adj (lI-A). It is given by
Notice that there is no common divisor of all the elements of Hence, d(l)=1 .
Thus, the minimal polynomial f(l)is identical to the characteristic polynomial, or
A simple calculation proves that
=C0
000
000
00
S=0=C8
0072
  82128
  0  1
S-5C4
0016
  4  912
  0  1
S+8C2
001
234
01
S-4C1
000
100
01
SA3-5 A2+8 A-4 I =l3-5l2+8l-4 f(l)=∑l I-A∑=(l-2)2(l-1)adj(l I-A).adj(l I-A)=C(l-2)(l-1)
00(l+11)
(l-2)(l-1)
3(l-2)4(l-2)
0
(l-2)
2SC2
001
200
01
S∑l I-A∑=3l-2
00-1
l-2
-3-4
0
l-13=(l-2)2(l-1)A=C2
001
234
01
S,  B=C2
000
230
01
S
704
Chapter 9 / Control Systems Analysis in State Space
but
Thus, we have shown that the minimal polynomial and the characteristic polynomial of this matrix
Aare the same.
Next, consider the matrix B. The characteristic polynomial is given by
A simple computation reveals that matrix Bhas three eigenvectors, and the Jordan canonical
form of Bis given by
Thus, the multiple eigenvalues are not linked.To obtain the minimal polynomial, we first compute
:
from which it is evident that
Hence,
As a check, let us compute :
For the given matrix B, the degree of the minimal polynomial is lower by 1 than that of the char-
acteristic polynomial.As shown here, if the multiple eigenvalues of an n*n matrix are not linked
in a Jordan chain, the minimal polynomial is of lower degree than the characteristic polynomial.f(B)=B
2
-3
 
B+2
 
I=
C
4
0
00
4
90
0
1
S
-3
C
2
0
00
2
30
0
1
S
+2
C
1
0
00
1
00
0
1
S
=
C
0
0
00
0
00
0
0
S
=0f(B)f(l)=∑l
 
I-B∑
d(l)=(l-2)
2
(l-1)
l-2=l
2
-3l+2d(l)=l-2adj(l
 
I-B)=
C
(l-2)(l-1)
0
00
(l-2)(l-1)
3(l-2)0
0
(l-2)
2
S
adj(l
 
I-B)
C
2
0
00
2
00
0
1
S
∑l
 
I-B∑=
3
l-2
0
00
l-2
-30
0
l-1
3
=(l-2)
2
(l-1)=
C
0
0
013
 0
 00
0
0
S
Z0=
C
4
0
016
  4
  912
  0
  1
S
-3
C
2
0
01
2
34
0
1
S
+2
C
1
0
00
1
00
0
1
S
A
2
-3
 
A+2
 
I
Openmirrors.com
Example Problems and Solutions 705A–9–10. Show that by use of the minimal polynomial, the inverse of a nonsingular matrix Acan be ex-
pressed as a polynomial in Awith scalar coefficients as follows:
(9–100)
where a1,a2,p,amare coefficients of the minimal polynomial
Then obtain the inverse of the following matrix A:
Solution. For a nonsingular matrix A, its minimal polynomial f(A)can be written as
where amZ0. Hence,
Premultiplying by A–1, we obtain
which is Equation (9–100).
For the given matrix A, adj(lI-A)can be given as
Clearly, there is no common divisor d(l)of all elements of adj (lI-A). Hence, d(l)=1 .
Consequently, the minimal polynomial f(l)is given by
Thus, the minimal polynomial f(l)is the same as the characteristic polynomial.
Since the characteristic polynomial is
we obtain
f(l)=l3+3l2-7l-17∑l I-A∑=l3+3l2-7l-17f(l)=∑l I-A∑
d(l)=∑l I-A∑adj(/H9261I-A)=Cl2+4l+3
3l+7
l+12l+6
l2+2l-3
2-4
-2l+2
l2-7SA-1=-1
amAAm-1+a1  Am-2+p+am-2  A+am-1  IBI=- 1
am AAm+a1  Am-1+p+am-2  A2+am-1  ABf(A)=Am+a1  Am-1+p+am-1  A+am  I=0A=C1
312
-1
00
-2
-3Sf(l)=lm+a1 lm-1+p+am-1 l+amA-1=-1
amAAm-1+a1  Am-2+p+am-2  A+am-1  IB
706
Chapter 9 / Control Systems Analysis in State Space
By identifying the coefficients a
i
of the minimal polynomial (which is the same as the characteristic
polynomial in this case), we have
The inverse of Acan then be obtained from Equation (9–100) as follows:
A–9–11. Show that if matrix Acan be diagonalized, then
where Pis a diagonalizing transformation matrix that transforms Ainto a diagonal matrix, or
P
–1
AP=D, where Dis a diagonal matrix.
Show also that if matrix Acan be transformed into a Jordan canonical form, then
where Sis a transformation matrix that transforms Ainto a Jordan canonical form J, or S
–1
AS=J.
Solution. Consider the state equation
If a square matrix can be diagonalized, then a diagonalizing matrix (transformation matrix) exists
and it can be obtained by a standard method. Let Pbe a diagonalizing matrix for A. Let us define
Then
where Dis a diagonal matrix. The solution of this last equation is
Hence,
x(t)=Px
ˆ
(t)=Pe
Dt
 
P
-1
 
x(0)x
ˆ
(t)=e
Dt
 
x
ˆ
(0)x
ˆ
#
=P
-1
 
APx
ˆ
=Dx
ˆ
x=Px
ˆ
x#=Axe
At
=Se
Jt
 
S
-1
e
At
=Pe
Dt
 
P
-1
 =
C
3
17
7
17
1
176
17
-
3
17
2
17
-
4
17
2
17
-
7
17
S
 =1
17
C
3
7
16
-3
2-4
2
-7
S
 =1
17
c
C
7
-2
-20
7
2-4
8
9
S
+3
C
1
3
12
-1
00
-2
-3
S
-7
C
1
0
00
1
00
0
1
S
s
 A
-1
=-1
a
3
AA
2
+a
1
  
A+a
2
  
IB=1
17AA
2
+3
 
A-7
 
IBa
1
=3,
  
a
2
=-7,
  
a
3
=-17
Openmirrors.com
Example Problems and Solutions 707Noting that x(t)can also be given by the equation
we obtain or
(9–101)
Next, we shall consider the case where matrix Amay be transformed into a Jordan canonical
form. Consider again the state equation
First obtain a transformation matrix Sthat will transform matrix Ainto a Jordan canonical form
so that
where Jis a matrix in a Jordan canonical form. Now define
Then
The solution of this last equation is
Hence,
Since the solution x(t)can also be given by the equation
we obtain
Note that eJtis a triangular matrix [which means that the elements below (or above, as the case
may be) the principal diagonal line are zeros] whose elements are elt,telt, , and so forth. For
example, if matrix Jhas the following Jordan canonical form:
then
eJt=Cel1 t
0
0tel1 t
el1 t
01
2t2el1 t
tel1 t
el1 tSJ=Cl1
0
01
l1
00
1
l1S1
2t2elteAt=SeJt
 S-1x(t)=eAt
 x(0)x(t)=Sxˆ(t)=SeJt
 S-1
 x(0)xˆ(t)=eJt
 xˆ(0)xˆ#
=S-1
 AS  xˆ=Jxˆx=SxˆS-1
 AS=Jx#=AxeAt=PeDt
 P-1=PFel1 t
0el2 t
/H11080
/H11080
/H110800
eln tVP-1eAt=PeDt
 P-1,x(t)=eAt
 x(0)
708
Chapter 9 / Control Systems Analysis in State Space
Similarly, if
then
A–9–12. Consider the following polynomial in lof degree m-1 , where we assume l
1
,l
2
,p,l
m
to be
distinct:
where k=1, 2,p,m. Notice that
Then the polynomial f(l)of degree m-1 ,
takes on the values fAl
k
Bat the points l
k
. This last equation is commonly called Lagrange’s
interpolation formula . The polynomial f(l)of degree m-1 is determined from mindependent
data fAl
1
B,fAl
2
B,p,fAl
m
B. That is, the polynomial f(l)passes through mpoints
fAl
1
B,fAl
2
B,p,fAl
m
B. Since f(l)is a polynomial of degree m-1 , it is uniquely determined.
Any other representations of the polynomial of degree m-1 can be reduced to the Lagrange
polynomial f(l). =a
m
k=1
fAl
k
BAl-l
1
BpAl-l
k-1
BAl-l
k+1
BpAl-l
m
B
Al
k
-l
1
BpAl
k
-l
k-1
BAl
k
-l
k+1
BpAl
k
-l
m
B f(l)=a
m
k=1
fAl
k
Bp
k
(l)p
k
Al
i
B=
b
1,
0,ifi=k
ifiZkp
k
(l)=Al-l
1
BpAl-l
k-1
BAl-l
k+1
BpAl-l
m
B
Al
k
-l
1
BpAl
k
-l
k-1
BAl
k
-l
k+1
BpAl
k
-l
m
Be
Jt
=
G
e
l
1
 
t
0
0
0te
l
1
 
t
e
l
1
 
t
0
1
2
t
2
e
l
1
 
t
te
l
1
 
t
e
l
1
 
t
e
l
4
 
t
0te
l
4
 
t
e
l
4
 
t
e
l
6
 
t
00
0
e
l
7
 
t
W
J=
G
l
1
0
0
01
l
1
00
1
l
1
l
4
01
l
4
l
6
0
l
7
W
Openmirrors.com
Example Problems and Solutions 709Assuming that the eigenvalues of an n*n matrix Aare distinct, substitute Aforlin the
polynomial pk(l). Then we get
Notice that pk(A)is a polynomial in Aof degree m-1 . Notice also that
Now define
(9–102)
Equation (9–102) is known as Sylvester’s interpolation formula. Equation (9–102) is equivalent
to the following equation:
(9–103)
Equations (9–102) and (9–103) are frequently used for evaluating functions f(A)of matrix A—
for example, (lI-A)–1,eAt, and so forth. Note that Equation (9–103) can also be written as
(9–104)
Show that Equations (9–102) and (9–103) are equivalent. To simplify the arguments, assume
that m=4 .71
1
/H11080/H11080/H11080
1
Il
1
l2
/H11080
/H11080/H11080
l
m
Al2
1
l22
/H11080
/H11080/H11080
l
2
m
A2p
p
p
ppl
m-1
1
lm-1
2
/H11080
/H11080/H11080
l
m-1
m
Am-1fAl1B
fAl2B
/H11080/H11080/H11080
fAl
mB
f(A)7=081
l1
l2
1
/H11080
/H11080/H11080
l
m-1
1
fAl1B1
l2
l2
2
/H11080
/H11080/H11080
l
m-1
2
fAl2Bp
pp
p
p1
l
m
l2
m
/H11080
/H11080/H11080
l
m-1
m
fAlmBI
A
A2
/H11080/H11080/H11080
A
m-1
f(A)8=0 =am
k=1fAlkBAA-l1  IBpAA-lk-1  IBAA-lk+1  IBpAA-lm  IB
Alk-l1BpAlk-lk-1BAlk-lk+1BpAlk-lmB f(A)=am
k=1fAlkBpk(A)pkAli  IB=bI,
0,ifi=k
ifiZkpk(A)=AA-l1  IB p AA-lk-1  IBAA-lk+1  IB p AA-lm  IB
Alk-l1BpAlk-lk-1BAlk-lk+1BpAlk-lmB
710
Chapter 9 / Control Systems Analysis in State Space
Solution. Equation (9–103), where m=4 , can be expanded as follows:
Since
and
we obtain
 =0 +fAl
1
BCAA-l
4
  
IBAA-l
3
  
IBAA-l
2
  
IBAl
4
-l
3
BAl
4
-l
2
BAl
3
-l
2
BD -fAl
2
BCAA-l
4
  
IBAA-l
3
  
IBAA-l
1
  
IBAl
4
-l
3
BAl
4
-l
1
BAl
3
-l
1
BD +fAl
3
BCAA-l
4
  
IBAA-l
2
  
IBAA-l
1
  
IBAl
4
-l
2
BAl
4
-l
1
BAl
2
-l
1
BD -fAl
4
BCAA-l
3
  
IBAA-l
2
  
IBAA-l
1
  
IBAl
3
-l
2
BAl
3
-l
1
BAl
2
-l
1
BD ¢= f(A)CAl
4
-l
3
BAl
4
-l
2
BAl
4
-l
1
BAl
3
-l
2
BAl
3
-l
1
BAl
2
-l
1
BD
4
1
l
i
l
2
i
l
3
i
1
l
j
l
2
j
l
3
j
1
l
k
l
2
k
l
3
k
I
A
A
2
A
3
4
=AA-l
k
  
IBAA-l
j
  
IBAA-l
i
  
IBAl
k
-l
j
BAl
k
-l
i
BAl
j
-l
i
B
4
1
l
1
l
2
1
l
3
1
1
l
2
l
2
2
l
3
2
1
l
3
l
2
3
l
3
3
1
l
4
l
2
4
l
3
4
4
=Al
4
-l
3
BAl
4
-l
2
BAl
4
-l
1
BAl
3
-l
2
BAl
3
-l
1
BAl
2
-l
1
B +fAl
1
B
4
1
l
2
l
2
2
l
3
2
1
l
3
l
2
3
l
3
3
1
l
4
l
2
4
l
3
4
I
A
A
2
A
3
4
 +fAl
3
B
4
1
l
1
l
2
1
l
3
1
1
l
2
l
2
2
l
3
2
1
l
4
l
2
4
l
3
4
I
A
A
2
A
3
4
-fAl
2
B
4
1
l
1
l
2
1
l
3
1
1
l
3
l
2
3
l
3
3
1
l
4
l
2
4
l
3
4
I
A
A
2
A
3
4
 =f(A)
4
1
l
1
l
2
1
l
3
1
1
l
2
l
2
2
l
3
2
1
l
3
l
2
3
l
3
3
1
l
4
l
2
4
l
3
4
4
-fAl
4
B
4
1
l
1
l
2
1
l
3
1
1
l
2
l
2
2
l
3
2
1
l
3
l
2
3
l
3
3
I
A
A
2
A
3
4
 ¢=
5
1
l
1
l
2
1
l
3
1
fAl
1
B1
l
2
l
2
2
l
3
2
fAl
2
B1
l
3
l
2
3
l
3
3
fAl
3
B1
l
4
l
2
4
l
3
4
fAl
4
BI
A
A
2
A
3
f(A)
5
Openmirrors.com
Example Problems and Solutions 711Solving this last equation for f(A), we obtain
where m=4 .Thus, we have shown the equivalence of Equations (9–102) and (9–103).Although
we assumed m=4 , the entire argument can be extended to an arbitrary positive integer m.( F o r
the case when the matrix Ainvolves multiple eigenvalues, refer to Problem A–9–13 .)
A–9–13. Consider Sylvester’s interpolation formula in the form given by Equation (9–104):
This formula for the determination of f(A)applies to the case where the minimal polynomial of
Ainvolves only distinct roots.
Suppose that the minimal polynomial of Ainvolves multiple roots. Then the rows in the
determinant that correspond to the multiple roots become identical, and therefore modification
of the determinant in Equation (9–104) becomes necessary.
Modify the form of Sylvester’s interpolation formula given by Equation (9–104) when the
minimal polynomial of Ainvolves multiple roots. In deriving a modified determinant equation,
assume that there are three equal roots in the minimal polynomial of Aand that
there are other roots that are distinct.
Solution. Since the minimal polynomial of Ainvolves three equal roots, the minimal polynomial
f(l)can be written as
An arbitrary function f(A)of an n*n matrix Acan be written as
where the minimal polynomial f(A)is of degree manda(A)is a polynomial in Aof degree
m-1 or less. Hence we have
wherea(l)is a polynomial in lof degree m-1 or less, which can thus be written as
(9–105) a(l)=a0+a1 l+a2 l2+p+am-1 lm-1f(l)=g(l)f(l)+a(l)f(A)=g(A)f(A)+a(A)=Al-l1B3Al-l4BAl-l5BpAl-lmBf(l)=lm+a1 lm-1+p+am-1 l+amAl4, l5,p, lmBAl1=l2=l3B71
1
/H11080/H11080/H11080
1
Il
1
l2
/H11080
/H11080/H11080
l
m
Al2
1
l22
/H11080
/H11080/H11080
l
2
m
A2p
p
p
ppl
m-1
1
lm-1
2
/H11080
/H11080/H11080
l
m-1
m
Am-1fAl1B
fAl2B
/H11080/H11080/H11080
fAl
mB
f(A)7=0 =am
k=1fAlkBAA-l1  IBpAA-lk-1  IBAA-lk+1  IBpAA-lm  IB
Alk-l1BpAlk-lk-1BAlk-lk+1BpAlk-lmB  +fAl3BAA-l1  IBAA-l2  IBAA-l4  IB
Al3-l1BAl3-l2BAl3-l4B+fAl4BAA-l1  IBAA-l2  IBAA-l3  IB
Al4-l1BAl4-l2BAl4-l3B f(A)=fAl1BAA-l2  IBAA-l3  IBAA-l4  IB
Al1-l2BAl1-l3BAl1-l4B+fAl2BAA-l1  IBAA-l3  IBAA-l4  IB
Al2-l1BAl2-l3BAl2-l4B
712
Chapter 9 / Control Systems Analysis in State Space
In the present case we have
(9–106)
By substituting l
1
,l
4
,p,l
m
forlin Equation (9–106), we obtain the following m-2 equations:
(9–107)
By differentiating Equation (9–106) with respect to l, we obtain
(9–108)
where
Substitution of l
1
forlin Equation (9–108) gives
Referring to Equation (9–105), this last equation becomes
(9–109)
Similarly, differentiating Equation (9–106) twice with respect to land substituting l
1
forl,w e
obtain
This last equation can be written as
(9–110)
Rewriting Equations (9–110), (9–109), and (9–107), we get
(9–111)
a
0
+a
1
 
l
m
+a
2
 
l
2
m
+p+a
m-1
 
l
m-1
m
=fAl
m
B/H11080/H11080/H11080a
0
+a
1
 
l
4
+a
2
 
l
2
4
+p+a
m-1
 
l
m-1
4
=fAl
4
Ba
0
+a
1
 
l
1
+a
2
 
l
2
1
+p+a
m-1
 
l
m-1
1
=fAl
1
Ba
1
+2a
2
 
l
1
+p+(m-1)a
m-1
 
l
m-2
1
=f¿Al
1
Ba
2
+3a
3
 
l
1
+p+(m-1)(m-2)
2a
m-1
 
l
m-3
1
=f–Al
1
B
2f–Al
1
B=2a
2
+6a
3
 
l
1
+p+(m-1)(m -2)a
m-1
 
l
m-3
1
d
2
d
2
lf(l)
2
l=l
1
=f–Al
1
B=d
2
dl
2
a(l)
2
l=l
1
f¿Al
1
B=a
1
+2a
2
 
l
1
+p+(m-1)a
m-1
 
l
m-2
1
d
dlf(l)
2
l=l
1
=f¿Al
1
B=d
dla(l)
2
l=l
1
Al-l
1
B
2
h(l)=d
dl Cg(l)Al-l
1
B
3
Al-l
4
BpAl-l
m
BDd
dlf(l)=Al-l
1
B
2
h(l)+d
dla(l)fAl
m
B=aAl
m
B/H11080/H11080/H11080fAl
4
B=aAl
4
BfAl
1
B=aAl
1
B =g(l)CAl-l
1
B
3
Al-l
4
BpAl-l
m
BD+a(l) f(l)=g(l)f(l)+a(l)
Openmirrors.com
Example Problems and Solutions 713These msimultaneous equations determine the akvalues (where k=0 ,1 ,2 , p,m-1 ). Noting
thatf(A)= 0because it is a minimal polynomial, we have f(A)as follows:
Hence, referring to Equation (9–105), we have
(9–112)
where the akvalues are given in terms of fAl1B,f¿Al1B,f–Al1B,fAl4B,fAl5B,p,fAlmB. In terms of
the determinant equation, f(A)can be obtained by solving the following equation:
(9–113)
Equation (9–113) shows the desired modification in the form of the determinant. This equation
gives the form of Sylvester’s interpolation formula when the minimal polynomial of Ainvolves
three equal roots. (The necessary modification of the form of the determinant for other cases willbe apparent.)
A–9–14. Using Sylvester’s interpolation formula, compute e
At, where
Solution. Referring to Problem A–9–9 , the characteristic polynomial and the minimal polynomial
are the same for this A. The minimal polynomial (characteristic polynomial) is given by
Note that l1=l2=2 andl3=1 . Referring to Equation (9–112) and noting that f(A)in this
problem is eAt, we have
wherea0(t),a1(t), and a2(t)are determined from the equations
 a0(t)+a1(t)l3+a2(t)l2
3=el3 t a0(t)+a1(t)l1+a2(t)l2
1=el1 t a1(t)+2a2(t)l1=tel1 teAt=a0(t)  I+a1(t)  A+a2(t)  A2f(l)=(l-2)2(l-1)A=C2
001
234
01
Sf–Al1B
2
f¿Al1B
fAl1B
fAl4B
/H11080/H11080/H11080
fAl
mB
f(A) =00
0
11
/H11080/H11080/H11080
1
I0
1
l
1
l4
/H11080/H11080/H11080
l
m
A1
2l1
l2
1
l24
/H11080
/H11080/H11080
l
2
m
A23l1
3l2
1
l31
l34
/H11080
/H11080/H11080
l
3
m
A3p
p
pp
p
p(m-1)(m -2)
2lm-3
1
(m-1)lm-2
1
lm-1
1
lm-1
4
/H11080
/H11080/H11080
l
m-1
m
Am-1f(A)=a(A)=a0  I+a1  A+a2  A2+p+am-1  Am-1f(A)=g(A)f(A)+a(A)=a(A)
714
Chapter 9 / Control Systems Analysis in State Space
Substituting l
1
=2 , and l
3
=1 into these three equations gives
Solving for a
0
(t),a
1
(t), and a
2
(t), we obtain
Hence,
A–9–15. Show that the system described by
(9–114)
(9–115)
where
is completely output controllable if and only if the composite m*nr matrix P, where
is of rank m. (Notice that complete state controllability is neither necessary nor sufficient for
complete output controllability.)
Solution. Suppose that the system is output controllable and the output y(t)starting from any y(0),
the initial output, can be transferred to the origin of the output space in a finite time interval
0/H11349t/H11349T. That is,
(9–116) y(T) =Cx(T) =0P=CCB /H21752 CAB  /H21752 CA
2
 
B /H21752 p /H21752 CA
n-1
 
BD C=m*n matrix B=n*r matrix A=n*n matrix y=output vector (m-vector )
 
(m/H11349n) u=control vector (r-vector ) x=state vector (n-vector )y=Cxx#=Ax+Bu =
C
e
2t
0
012e
t
-12e
2t
+13te
2t
e
2t
-3e
t
+3e
2t
-4e
t
+4e
2t
0
e
t
S
 +Ae
t
-e
2t
+te
2t
B
C
4
0
016
4
912
0
1
S
 e
At
=A4e
t
-3e
2t
+2te
2t
B
C
1
0
00
1
00
0
1
S
+A-4e
t
+4e
2t
-3te
2t
B
C
2
0
01
2
34
0
1
S
 a
2
(t)=e
t
-e
2t
+te
2t
a
1
(t)=-4e
t
+4e
2t
-3te
2t
 a
0
(t)=4e
t
-3e
2t
+2te
2t
 a
0
(t)+a
1
(t)+a
2
(t)=e
t
 a
0
(t)+2a
1
(t)+4a
2
(t)=e
2t
 a
1
(t)+4a
2
(t)=te
2t
Openmirrors.com
Example Problems and Solutions 715Since the solution of Equation (9–114) is
att=T , we have
(9–117)
Substituting Equation (9–117) into Equation (9–116), we obtain
(9–118)
On the other hand, y(0)= Cx(0). Notice that the complete output controllability means that the
vector Cx(0)spans the m-dimensional output space. Since eATis nonsingular, if Cx(0)spans the
m-dimensional output space, so does CeATx(0), and vice versa. From Equation (9–118) we obtain
Note that can be expressed as the sum of AiBj; that is,
where
andai(t)satisfies
(p: degree of the minimal polynomial of A)
andBjis the jth column of B. Therefore, we can write CeATx(0)as
From this last equation, we see that is a linear combination of CAiBj (i=0, 1, 2, p,
p-1; j=1, 2 ,p,r). Note that if the rank of Q, where
ism, then so is the rank of P, and vice versa. [This is obvious if p=n . If p<n , then the CAhBj
(where p/H11349h/H11349n-1) are linearly dependent on CBj,CABj,p,CAp-1Bj. Hence, the rank ofQ=CCB /H21752 CAB  /H21752 CA2
 B /H21752 p /H21752 CAp-1
 BD  (p/H11349n)CeAT
 x(0)CeAT
 x(0)=-ap-1
i=0ar
j=1gij  CAi
 BjeAt=ap-1
i=0ai(t) Aigij=
3T
0ai(t)uj(T-t)dt=scalar3T
0eAt
 Bu(T-t)dt=ap-1
i=0ar
j=1gij  Ai
 Bj1T
0eAt
 Bu(T-t)dt =-  C
3T
0eAt
 Bu(T-t)dt CeAT
 x(0)=-  CeAT
3T
0e-At
 Bu(t)dt =CeATcx(0)+
3T
0e- At
 Bu(t)dtd=0 y(T) =Cx(T)x(T) =eATcx(0)+
3T
0e- At
 Bu(t)dtdx(t)=eAtcx(0)+
3t
0e- At
 Bu(t)dtd
716
Chapter 9 / Control Systems Analysis in State Space
Pis equal to that of Q.] If the rank of Pism, then Ce
AT
x(0)spans the m-dimensional output
space.This means that if the rank of Pism, then Cx(0)also spans the m-dimensional output space
and the system is completely output controllable.
Conversely, suppose that the system is completely output controllable, but the rank of Pisk,
where k<m . Then the set of all initial outputs that can be transferred to the origin is of
k-dimensional space. Hence, the dimension of this set is less than m. This contradicts the as-
sumption that the system is completely output controllable. This completes the proof.
Note that it can be immediately proved that, in the system of Equations (9–114) and (9–115),
complete state controllability on 0 /H11349t/H11349Timplies complete output controllability on 0 /H11349t/H11349T
if and only if mrows of Care linearly independent.
A–9–16. Discuss the state controllability of the following system:
(9–119)
Solution. For this system,
Since
we see that vectors BandABare not linearly independent and the rank of the matrix [ B/H21752AB]
is 1. Therefore, the system is not completely state controllable. In fact, elimination of x
2
from
Equation (9–119), or the following two simultaneous equations,
yields
or, in the form of a transfer function,
Notice that cancellation of the factor (s+2.5) occurs in the numerator and denominator of the
transfer function. Because of this cancellation, this system is not completely state controllable.
This is an unstable system. Remember that stability and controllability are quite different things.
There are many systems that are unstable, but are completely state controllable.
A–9–17. A state-space representation of a system in the controllable canonical form is given by
(9–120)
(9–121) y=[0.8
 
1]
B
x
1
x
2
RB
x#
1
x#
2
R
=
B
0
-0.41
-1.3
RB
x
1
x
2
R
+
B
0
1
R
uX
1
(s)
U(s)=s+2.5
(s+2.5)(s -1)x$
1
+1.5x#
1
-2.5x
1
=u#+2.5ux#
2
=-2x
1
+1.5x
2
+4ux#
1
=-3x
1
+x
2
+uAB =
B
-3
-21
1.5
RB
1
4
R
=
B
1
4
R
A=
B
-3
-21
1.5
R
,
  
B=
B
1
4
RB
x#
1
x#
2
R
=
B
-3
-21
1.5
RB
x
1
x
2
R
+
B
1
4
R
u
Openmirrors.com
Example Problems and Solutions 717The same system may be represented by the following state-space equation, which is in the
observable canonical form:
(9–122)
(9–123)
Show that the state-space representation given by Equations (9–120) and (9–121) gives a sys-
tem that is state controllable, but not observable. Show, on the other hand, that the state-space rep-resentation defined by Equations (9–122) and (9–123) gives a system that is not completely statecontrollable, but is observable. Explain what causes the apparent difference in the controllabilityand observability of the same system.
Solution. Consider the system defined by Equations (9–120) and (9–121). The rank of the
controllability matrix
is 2. Hence, the system is completely state controllable. The rank of the observability matrix
is 1. Hence the system is not observable.
Next consider the system defined by Equations (9–122) and (9–123). The rank of the
controllability matrix
is 1. Hence, the system is not completely state controllable. The rank of the observability matrix
is 2. Hence, the system is observable.
The apparent difference in the controllability and observability of the same system is caused
by the fact that the original system has a pole-zero cancellation in the transfer function. Referring
to Equation (2–29), for D=0 we have
If we use Equations (9–120) and (9–121), then
[Note that the same transfer function can be obtained by using Equations (9–122) and (9–123).]
Clearly, cancellation occurs in this transfer function. =s+0.8
(s+0.8)(s +0.5) =1
s2+1.3s +0.4[0.8 1]Bs+1.3
-0.41
sRB01R G(s) =[0.8 1]Bs
0.4-1
s+1.3R-1
B0
1RG(s) =C(s  I-A)-1
 B[C*/H21752A* C*]=B0
11
-1.3R[B/H21752AB]=B0.8
1-0.4
-0.5R[C*/H21752A* C*]=B0.8
1-0.4
-0.5R[B/H21752AB]=B0
11
-1.3Ry=[0 1]Bx1
x2RBx#
1
x#
2R=B0
1-0.4
-1.3RBx1
x2R+B0.8
1Ru
718
Chapter 9 / Control Systems Analysis in State Space
If a pole-zero cancellation occurs in the transfer function, then the controllability and observability
vary, depending on how the state variables are chosen. Remember that, to be completely state con-
trollable and observable, the transfer function must not have any pole-zero cancellations.
A–9–18. Prove that the system defined by
where
is completely observable if and only if the composite mn*n matrix P, where
is of rank n.
Solution. We shall first obtain the necessary condition. Suppose that
Then there exists x(0)such that
or
Hence, we obtain, for a certain x(0),
Notice that from Equation (9–48) or (9–50), we have
where m(m /H11349n)is the degree of the minimal polynomial for A. Hence, for a certain x(0), we have
Ce
At
 
x(0)=CCa
0
(t)
 
I+a
1
(t)
 
A+a
2
(t)
 
A
2
+p+a
m-1
(t)
 
A
m-1
D
 
x(0)=0e
At
=a
0
(t)
 
I+a
1
(t)
 
A+a
2
(t)
 
A
2
+p+a
m-1
(t)
 
A
m-1
CA
i
 
x(0)=0,
  
fori=0, 1, 2, p,n-1Px(0)=
F
C
CA
/H11080
/H11080
/H11080
CA
n-1
V
x(0)=
F
Cx(0)
CAx (0)
/H11080
/H11080
/H11080
CA
n-1
 
x(0)
V
=0Px(0)=0rank  P6nP=
F
C
CA
/H11080
/H11080
/H11080
CA
n-1
V
 C=m*n matrix A=n*n matrix y=output vector (m-vector )
  
(m/H11349n) x=state vector (n-vector )y=Cxx#=Ax
Openmirrors.com
Example Problems and Solutions 719Consequently, for a certain x(0),
which implies that, for a certain x(0),x(0)cannot be determined from y(t). Therefore, the rank
of matrix Pmust be equal to n.
Next we shall obtain the sufficient condition. Suppose that rank P=n . Since
by premultiplying both sides of this last equation by eA*tC*, we get
If we integrate this last equation from 0 to t, we obtain
(9–124)
Notice that the left-hand side of this equation is a known quantity. Define
(9–125)
Then, from Equations (9–124) and (9–125), we have
(9–126)
where
It can be established that W(t)is a nonsingular matrix as follows: If @W(t)@were equal to 0, then
which means that
which implies that rank P<n . Therefore,@W(t)@Z0, or W(t)is nonsingular. Then, from Equa-
tion (9–126), we obtain
(9–127)
andx(0)can be determined from Equation (9–127).
Hence, we have proved that x(0)can be determined from y(t)if and only if rank P=n . Note
that x(0)andy(t)are related by
y(t)=CeAt
 x(0)=a0(t)  Cx(0)+a1(t)  CAx (0)+p+an-1(t)  CAn-1
 x(0)x(0)=CW(t)D-1
 Q(t)CeAt
 x=0,  for 0/H11349t/H11349t1x* WAt1B x=
3t1
07CeAt
 x72dt=0W(t)=
3t
0eA*t
 C*CeAtdtQ(t)=W(t)  x(0)Q(t)=
3t
0eA*t
 C* y(t)dt=known quantity3t
0eA*t
 C* y(t)dt=
3t
0eA*t
 C* CeAt
 x(0)dteA*t
 C* y(t)=eA*t
 C* CeAt
 x(0)y(t)=CeAt
 x(0)y(t)=Cx(t)=CeAt
 x(0)=0
720
Chapter 9 / Control Systems Analysis in State Space
PROBLEMS
B–9–1. Consider the following transfer-function system:
Obtain the state-space representation of this system in (a)
controllable canonical form and (b) observable canonical
form.
B–9–2. Consider the following system:
Obtain a state-space representation of this system in a di-
agonal canonical form.
B–9–3. Consider the system defined by
where
Transform the system equations into the controllable canon-
ical form.
B–9–4. Consider the system defined by
where
Obtain the transfer function Y(s)/U(s) .
B–9–5. Consider the following matrix A:
Obtain the eigenvalues l
1
,l
2
,l
3
, and l
4
of the matrix A.
Then obtain a transformation matrix Psuch that
P
-1
 
AP =diagAl
1
 
, l
2
 
, l
3
 
, l
4
BA=
D
0
0
0
11
0
0
00
1
0
00
0
1
0
T
A=
C
-1
1
00
-2
01
0
-3
S
,
 
 B=
C
0
0
1
S
,
 
 C=[1
 
1
 
0]y=Cxx#=Ax+BuA=
B
1
-42
-3
R
,
  
B=
B
1
2
R
,
  
C=[1
 
1]y=Cxx#=Ax+Buy%+6y$+11y#+6y=6uY(s)
U(s)=s+6
s
2
+5s+6B–9–6. Consider the following matrix A:
Compute e
At
by three methods.
B–9–7. Given the system equation
find the solution in terms of the initial conditions x
1
(0),
x
2
(0), and x
3
(0).
B–9–8. Find x
1
(t)andx
2
(t)of the system described by
where the initial conditions are
B–9–9. Consider the following state equation and output
equation:
Show that the state equation can be transformed into the
following form by use of a proper transformation matrix:
Then obtain the output yin terms of z
1
, z
2
, and z
3
.
B–9–10. Obtain a state-space representation of the follow-
ing system with MATLAB:
Y(s)
U(s)=10.4s
2
+47s +160
s
3
+14s
2
+56s +160
C
z#
1
z#
2
z#
3
S
=
C
0
1
00
0
1-6
-11
-6
SC
z
1
z
2
z
3
S
+
C
1
0
0
S
u y=[1
 
0
 
0]
C
x
1
x
2
x
3
S
 
C
x#
1
x#
2
x#
3
S
=
C
-6
-11
-61
0
00
1
0
SC
x
1
x
2
x
3
S
+
C
2
6
2
S
u
B
x
1
(0)
x
2
(0)
R
=
B
1
-1
RB
x#
1
x#
2
R
=
B
0
-31
-2
RB
x
1
x
2
RC
x#
1
x#
2
x#
3
S
=
C
2
0
01
2
00
1
2
SC
x
1
x
2
x
3
S
A=
B
0
-21
-3
R
Openmirrors.com
Problems 721B–9–11. Obtain a transfer-function representation of the
following system with MATLAB:
B–9–12. Obtain a transfer-function representation of the
following system with MATLAB:
B–9–13. Consider the system defined by
Is the system completely state controllable and completely
observable?
B–9–14. Consider the system given by
Is the system completely state controllable and completely
observable? Is the system completely output controllable? By1
y2R=B1
00
10
0RCx1
x2
x3S Cx#
1
x#
2
x#
3S=C2
000
230
01
SCx1
x2
x3S+C0101
01
SBu1
u2R y=[1 1 0]Cx1
x2
x3SCx#
1
x#
2
x#
3S=C-1
01-2
-1
0-2
1
-1SCx1
x2
x3S+C2
01Su y=[1 0 0]Cx1
x2
x3S Cx#
1
x#
2
x#
3S=C2
001
210
03
SCx1
x2
x3S+C0101
01
SBu1
u2R y=[0 0 1]Cx1
x2
x3S Cx#
1
x#
2
x#
3S=C0
-1
11
-1
00
00SCx1
x2
x3S+C010
SuB–9–15. Is the following system completely state control-
lable and completely observable?
B–9–16. Consider the system defined by
Except for an obvious choice of c1=c2=c3=0 , find an
example of a set of c1, c2, c3that will make the system
unobservable.
B–9–17. Consider the system
The output is given by
(a)Show that the system is not completely observable.
(b)Show that the system is completely observable if the
output is given by
By1
y2R=B1
11
21
3RCx1
x2
x3Sy=[1 1 1]Cx1
x2
x3SCx#
1
x#
2
x#
3S=C2
000
230
01
SCx1
x2
x3S y=Cc1 c2 c3DCx1
x2
x3SCx#
1
x#
2
x#
3S=C0
0
-61
0
-110
1
-6SCx1
x2
x3S+C0
01Su y=[20 9 1]Cx1
x2
x3SCx#
1
x#
2
x#
3S=C0
0
-61
0
-110
1
-6SCx1
x2
x3S+C0
01Su
10
722
Control Systems Design
in State Space
10–1 INTRODUCTION
This chapter discusses state-space design methods based on the pole-placement method,
observers, the quadratic optimal regulator systems, and introductory aspects of robust
control systems.The pole-placement method is somewhat similar to the root-locus method
in that we place closed-loop poles at desired locations.The basic difference is that in the
root-locus design we place only the dominant closed-loop poles at the desired locations,
while in the pole-placement design we place all closed-loop poles at desired locations.
We begin by presenting the basic materials on pole placement in regulator systems.
We then discuss the design of state observers, followed by the design of regulator sys-
tems and control systems using the pole-placement-with-state-observer approach.Then,
we discuss the quadratic optimal regulator systems. Finally, we present an introduction
to robust control systems.
Outline of the Chapter. Section 10–1 has presented introductory material. Section
10–2 discusses the pole-placement approach to the design of control systems. We begin
with the derivation of the necessary and sufficient conditions for arbitrary pole placement.
Then we derive equations for the state feedback gain matrix Kfor pole placement. Section
10–3 presents the solution of the pole-placement problem with MATLAB. Section 10–4
discusses the design of servo systems using the pole-placement approach. Section 10–5
presents state observers.We discuss both full-order and minimum-order state observers.
Also, transfer functions of observer controllers are derived. Section 10–6 presents the
design of regulator systems with observers. Section 10–7 treats the design of control
Openmirrors.com
Section 10–2 / Pole Placement 723systems with observers. Section 10–8 discusses quadratic optimal regulator systems. Note
that the state feedback gain matrix Kcan be obtained by both the pole-placement method
and the quadratic optimal control method. Finally, Section 10–9 presents robust controlsystems. The discussions here are limited to introductory subjects only.
10–2 POLE PLACEMENT
In this section we shall present a design method commonly called the pole-placement or
pole-assignment technique. We assume that all state variables are measurable and are
available for feedback. It will be shown that if the system considered is completely statecontrollable, then poles of the closed-loop system may be placed at any desired locationsby means of state feedback through an appropriate state feedback gain matrix.
The present design technique begins with a determination of the desired closed-loop
poles based on the transient-response and/or frequency-response requirements, such asspeed, damping ratio, or bandwidth, as well as steady-state requirements.
Let us assume that we decide that the desired closed-loop poles are to be at s=m
1,
s=m2,p, s=mn.By choosing an appropriate gain matrix for state feedback, it is pos-
sible to force the system to have closed-loop poles at the desired locations, providedthat the original system is completely state controllable.
In this chapter we limit our discussions to single-input, single-output systems. That
is, we assume the control signal u(t) and output signal y(t) to be scalars. In the deriva-
tion in this section we assume that the reference input r(t) is zero. [In Section 10–7 we
discuss the case where the reference input r(t) is nonzero.]
In what follows we shall prove that a necessary and sufficient condition that the
closed-loop poles can be placed at any arbitrary locations in the splane is that the sys-
tem be completely state controllable. Then we shall discuss methods for determiningthe required state feedback gain matrix.
It is noted that when the control signal is a vector quantity, the mathematical aspects
of the pole-placement scheme become complicated. We shall not discuss such a case inthis book. (When the control signal is a vector quantity, the state feedback gain matrixis not unique. It is possible to choose freely more than nparameters; that is, in addition
to being able to place nclosed-loop poles properly, we have the freedom to satisfy some
or all of the other requirements, if any, of the closed-loop system.)
Design by Pole Placement. In the conventional approach to the design of a single-
input, single-output control system, we design a controller (compensator) such that thedominant closed-loop poles have a desired damping ratio zand a desired undamped
natural frequency v
n.In this approach, the order of the system may be raised by 1 or 2
unless pole–zero cancellation takes place. Note that in this approach we assume the ef-fects on the responses of nondominant closed-loop poles to be negligible.
Different from specifying only dominant closed-loop poles (the conventional design
approach), the present pole-placement approach specifies all closed-loop poles. (There isa cost associated with placing all closed-loop poles, however, because placing all closed-loop poles requires successful measurements of all state variables or else requires the in-clusion of a state observer in the system.) There is also a requirement on the part of thesystem for the closed-loop poles to be placed at arbitrarily chosen locations.The requirementis that the system be completely state controllable. We shall prove this fact in this section.
724
Chapter 10 / Control Systems Design in State Space
Consider a control system
(10–1)
where
We shall choose the control signal to be
(10–2)
This means that the control signal uis determined by an instantaneous state. Such a
scheme is called state feedback. The 1*n matrix Kis called the state feedback gain
matrix. We assume that all state variables are available for feedback. In the following
analysis we assume that uis unconstrained.A block diagram for this system is shown in
Figure 10–1.
This closed-loop system has no input. Its objective is to maintain the zero output.
Because of the disturbances that may be present, the output will deviate from zero.The
nonzero output will be returned to the zero reference input because of the state feed-
back scheme of the system. Such a system where the reference input is always zero is
called a regulator system. (Note that if the reference input to the system is always a
nonzero constant, the system is also called a regulator system.)
Substituting Equation (10–2) into Equation (10–1) gives
The solution of this equation is given by
(10–3)
where x(0) is the initial state caused by external disturbances.The stability and transient-
response characteristics are determined by the eigenvalues of matrix A-BK. If matrixx(t)=e
(A-BK)t
x(0)x#(t)=(A-BK)
 
x(t)u=-Kx D=constant (scalar ) C=1*n constant matrix B=n*1 constant matrix A=n*n constant matrix u=control signal (scalar )y=output signal (scalar ) x=state vector (n-vector )y=Cx+Dux#=Ax+Bu
u
AB
C
–K/H20848
++
++
D
x x.
Figure 10–1
Closed-loop control
system with
u=– Kx.
Openmirrors.com
Section 10–2 / Pole Placement 725Kis chosen properly, the matrix A-BKcan be made an asymptotically stable matrix,
and for all x(0)Z0, it is possible to make x(t)approach 0astapproaches infinity. The
eigenvalues of matrix A-BKare called the regulator poles. If these regulator poles are
placed in the left-half splane, then x(t)approaches 0astapproaches infinity.The prob-
lem of placing the regulator poles (closed-loop poles) at the desired location is called apole-placement problem.
In what follows, we shall prove that arbitrary pole placement for a given system is
possible if and only if the system is completely state controllable.
Necessary and Sufficient Condition for Arbitrary Pole Placement We shall now
prove that a necessary and sufficient condition for arbitrary pole placement is that thesystem be completely state controllable.We shall first derive the necessary condition.Webegin by proving that if the system is not completely state controllable, then there areeigenvalues of matrix A-BKthat cannot be controlled by state feedback.
Suppose that the system of Equation (10–1) is not completely state controllable.
Then the rank of the controllability matrix is less than n,or
This means that there are qlinearly independent column vectors in the controllability
matrix. Let us define such qlinearly independent column vectors as f
1,f2,p,fq.Also,
let us choose n-q additional n-vectors vq+1,vq+2,p,vnsuch that
is of rank n.Then it can be shown that
(See Problem A–10–1 for the derivation of these equations.) Now define
Then we have
where Iqis a q-dimensional identity matrix and In-q is an (n-q) -dimensional identity
matrix.=@s Iq-A11+B11  k1@/H11554@s In-q-A22@=0=2s Iq-A11+B11  k1
0-A12+B11  k2
s In-q-A222=2s I-cA11
0 A12
A22d+cB11
0dCk1/H21752k2D2=@s I-Aˆ+BˆKˆ@=@s I-P-1
 AP +P-1
 BKP@∑s I-A+BK∑=@P-1(s  I-A+BK)P@Kˆ=KP =Ck1/H21752k2DAˆ=P-1
 AP =cA11
0 A12
A22d,  Bˆ=P-1B=cB11
0dP=Cf1/H21752f2/H21752p/H21752fq/H21752vq+1/H21752vq+2/H21752p/H21752vnDrankCB /H21752 AB /H21752 p /H21752 An-1
 BD=q6n
726
Chapter 10 / Control Systems Design in State Space
Notice that the eigenvalues of A
22
do not depend on K. Thus, if the system is not
completely state controllable, then there are eigenvalues of matrix Athat cannot be
arbitrarily placed.Therefore, to place the eigenvalues of matrix A-BKarbitrarily, the
system must be completely state controllable (necessary condition).
Next we shall prove a sufficient condition: that is, if the system is completely state
controllable, then all eigenvalues of matrix Acan be arbitrarily placed.
In proving a sufficient condition, it is convenient to transform the state equation
given by Equation (10–1) into the controllable canonical form.
Define a transformation matrix Tby
(10–4)
where Mis the controllability matrix
(10–5)
and
(10–6)
where the a
i
’s are coefficients of the characteristic polynomial
Define a new state vector by
If the rank of the controllability matrix Misn(meaning that the system is completely
state controllable), then the inverse of matrix Texists, and Equation (10–1) can be
modified to
(10–7)
where
(10–8)  T
-1
 
AT =
G
0
0
/H11080
/H11080
/H11080
0
-a
n
1
0
/H11080
/H11080
/H11080
0
-a
n-1
0
1
/H11080
/H11080
/H11080
0
-a
n-2
p
p
p
p0
0
/H11080
/H11080
/H11080
1
-a
1
W
x
ˆ
#
=T
-1
 
ATx
ˆ
+T
-1
 
Bux=Tx
ˆ
x
ˆ
∑s
 
I-A∑=s
n
+a
1
 
s
n-1
+p+a
n-1
 
s+a
n
W=
G
a
n-1
a
n-2
/H11080
/H11080
/H11080
a
1
1a
n-2
a
n-3
/H11080
/H11080
/H11080
1
0p
p
p
pa
1
1
/H11080
/H11080
/H11080
0
01
0
/H11080
/H11080
/H11080
0
0
W
M=CB /H21752 AB /H21752 p /H21752 A
n-1
 
BDT=MW
Openmirrors.com
Section 10–2 / Pole Placement 727(10–9)
[See Problems A–10–2 andA–10–3 for the derivation of Equations (10–8) and (10–9).]
Equation (10–7) is in the controllable canonical form.Thus, given a state equation, Equa-tion (10–1), it can be transformed into the controllable canonical form if the system iscompletely state controllable and if we transform the state vector xinto state vector 
by use of the transformation matrix Tgiven by Equation (10–4).
Let us choose a set of the desired eigenvalues as m
1,m2,p,mn.Then the desired
characteristic equation becomes
(10–10)
Let us write
(10–11)
When is used to control the system given by Equation (10–7), the system
equation becomes
The characteristic equation is
This characteristic equation is the same as the characteristic equation for the system,
defined by Equation (10–1), when is used as the control signal. This can beseen as follows: Since
the characteristic equation for this system is
∑s
 I-A+BK∑=@T-1(s  I-A+BK) T@=@s I-T-1
 AT +T-1
 BKT@=0x#=Ax+Bu=(A-BK) xu=-Kx@s I-T-1
 AT +T-1
 BKT@=0xˆ#
=T-1
 ATxˆ-T-1
 BKTx ˆu=-KTxˆKT =Cdn dn-1pd1DAs-m1BAs-m2B p As-mnB=sn+a1 sn-1+p+an-1 s+an=0xˆT-1
 B=G0
0
/H11080/H11080/H11080
01W
728
Chapter 10 / Control Systems Design in State Space
Now let us simplify the characteristic equation of the system in the controllable canonical
form. Referring to Equations (10–8), (10–9), and (10–11), we have
(10–12)
This is the characteristic equation for the system with state feedback.Therefore, it must
be equal to Equation (10–10), the desired characteristic equation. By equating the
coefficients of like powers of s,we get
Solving the preceding equations for the d
i
’s and substituting them into Equation (10–11),
we obtain
(10–13)
Thus, if the system is completely state controllable, all eigenvalues can be arbitrarily
placed by choosing matrix Kaccording to Equation (10–13) (sufficient condition).
We have thus proved that a necessary and sufficient condition for arbitrary pole
placement is that the system be completely state controllable.
It is noted that if the system is not completely state controllable, but is stabilizable,
then it is possible to make the entire system stable by placing the closed-loop poles at
desired locations for qcontrollable modes.The remaining n-q uncontrollable modes
are stable. So the entire system can be made stable.=Ca
n
-a
n
/H21752a
n-1
-a
n-1
/H21752p/H21752a
2
-a
2
/H21752a
1
-a
1
D
 
T
-1
K=Cd
n
 d
n-1
pd
1
D
 
T
-1
 a
n
+d
n
=a
n
 /H11080 /H11080 /H11080 a
2
+d
2
=a
2
 a
1
+d
1
=a
1
 =s
n
+Aa
1
+d
1
Bs
n-1
+p+Aa
n-1
+d
n-1
Bs+Aa
n
+d
n
B=0 =
6
s
0
/H11080
/H11080
/H11080
a
n
+d
n
-1
s
/H11080
/H11080
/H11080
a
n-1
+d
n-1
p
p
p0
0
/H11080
/H11080
/H11080
s+a
1
+d
1
6
=
6
s
 
I-
F
0
/H11080
/H11080
/H11080
0
-a
n
1
/H11080
/H11080
/H11080
0
-a
n-1
p
p
p0
/H11080
/H11080
/H11080
1
-a
1
V
+
F
0
/H11080
/H11080
/H11080
0
1
V
Cd
n
 d
n-1
pd
1
D
6
@s
 
I-T
-1
 
AT +T
-1
 
BKT@
Openmirrors.com
Section 10–2 / Pole Placement 729Determination of Matrix K Using Transformation Matrix T. Suppose that the
system is defined by
and the control signal is given by
The feedback gain matrix Kthat forces the eigenvalues of A-BKto be m1,m2,p,mn
(desired values) can be determined by the following steps (if miis a complex eigenvalue,
then its conjugate must also be an eigenvalue of A-BK):
Step 1: Check the controllability condition for the system. If the system is completely
state controllable, then use the following steps:
Step 2: From the characteristic polynomial for matrix A, that is,
determine the values of a1,a2,p,an.
Step 3: Determine the transformation matrix Tthat transforms the system state equa-
tion into the controllable canonical form. (If the given system equation is already in thecontrollable canonical form, then T=I.) It is not necessary to write the state equation
in the controllable canonical form. All we need here is to find the matrix T.T h e
transformation matrix Tis given by Equation (10–4), or
where Mis given by Equation (10–5) and Wis given by Equation (10–6).
Step 4: Using the desired eigenvalues (desired closed-loop poles), write the desired
characteristic polynomial:
and determine the values of a
1,a2,p,an.
Step 5: The required state feedback gain matrix Kcan be determined from Equation
(10–13), rewritten thus:
Determination of Matrix K Using Direct Substitution Method. If the system
is of low order ( n/H113493), direct substitution of matrix Kinto the desired characteristic
polynomial may be simpler. For example, if n=3, then write the state feedback gain
matrix Kas
Substitute this Kmatrix into the desired characteristic polynomial and
equate it to As-m1BAs-m2BAs-m3B,o r
∑s I-A+BK∑=As-m1BAs-m2BAs-m3B∑s I-A+BK∑K=Ck1 k2 k3DK=Can-an /H21752 an-1-an-1 /H21752 p /H21752 a2-a2 /H21752 a1-a1D T-1As-m1BAs-m2BpAs-mnB=sn+a1 sn-1+p+an-1 s+anT=MW∑s I-A∑=sn+a1 sn-1+p+an-1 s+anu=-Kxx#=Ax+Bu
730
Chapter 10 / Control Systems Design in State Space
Since both sides of this characteristic equation are polynomials in s,by equating the
coefficients of the like powers of son both sides, it is possible to determine the values
ofk
1
, k
2
,and k
3
.This approach is convenient if n=2 or 3. (For n=4, 5, 6 ,p, this
approach may become very tedious.)
Note that if the system is not completely controllable, matrix Kcannot be determined.
(No solution exists.)
Determination of Matrix K Using Ackermann’s Formula. There is a well-known
formula, known as Ackermann’s formula, for the determination of the state feedback
gain matrix K. We shall present this formula in what follows.
Consider the system
where we use the state feedback control u=– Kx. We assume that the system is
completely state controllable. We also assume that the desired closed-loop poles are at
s=m
1
,s=m
2
,p,s=m
n
.
Use of the state feedback control
modifies the system equation to
(10–14)
Let us define
The desired characteristic equation is
Since the Cayley–Hamilton theorem states that satisfies its own characteristic
equation, we have
(10–15)
We shall utilize Equation (10–15) to derive Ackermann’s formula. To simplify the
derivation, we consider the case where n=3. (For any other positive integer n,the
following derivation can be easily extended.)
Consider the following identities:
 A/H33522
3
=(A-BK)
3
=A
3
-A
2
 
BK -ABKA/H33522-BKA/H33522
2
 A/H33522
2
=(A-BK)
2
=A
2
-ABK -BKA/H33522 A/H33522=A-BK I=IfAA/H33522B=A/H33522
n
+a
1
  
A/H33522
n-1
+p+a
n-1
  
A/H33522+a
n
  
I=0A/H33522 =s
n
+a
1
 
s
n-1
+p+a
n-1
 
s+a
n
=0 ∑s
 
I-A+BK∑=@s
 
I-A/H33522@=As-m
1
BAs-m
2
B p As-m
n
BA/H33522=A-BKx#=(A-BK)
 
xu=-Kxx#=Ax+Bu
Openmirrors.com
Section 10–2 / Pole Placement 731Multiplying the preceding equations in order by a3,a2,a1, and a0(where a0=1 ),
respectively, and adding the results, we obtain
(10–16)
Referring to Equation (10–15), we have
Also, we have
Substituting the last two equations into Equation (10–16), we have
Since we obtain
(10–17)
Since the system is completely state controllable, the inverse of the controllability matrix
exists. Premultiplying both sides of Equation (10–17) by the inverse of the controllability
matrix, we obtain
Premultiplying both sides of this last equation by [0 0 1], we obtain
which can be rewritten as
This last equation gives the required state feedback gain matrix K.
For an arbitrary positive integer n,we have
(10–18) K=[0 0 p 0 1]CB /H21752 AB /H21752 p /H21752 An-1
 BD-1f(A)K=[0 0 1]CB /H21752 AB /H21752 A2
 BD-1f(A)[0 0 1]CB/H21752AB/H21752A2
 BD-1f(A)=[0 0 1]Ca2  K+a1  KA/H33522+KA/H335222
a1  K+KA/H33522
KS=KCB/H21752AB/H21752A2
 BD-1f(A)=Ca2  K+a1  KA/H33522+KA/H335222
a1  K+KA/H33522
KSCB /H21752 AB /H21752 A2
 BD=CB/H21752AB/H21752A2
 BDCa2  K+a1  KA/H33522+KA/H335222
a1  K+KA/H33522
KSf(A)=BAa2  K+a1  KA/H33522+KA/H335222B+ABAa1  K+KA/H33522B+A2
 BKfAA/H33522B=0,fAA/H33522B=f(A)-a2  BK -a1  BKA/H33522-BKA/H335222-a1  ABK -ABKA/H33522-A2
 BKa3  I+a2  A+a1  A2+A3=f(A)Z0a3  I+a2  A/H33522+a1  A/H335222+A/H335223=fAA/H33522B=0 - ABKA/H33522-BKA/H335222 =a3  I+a2  A+a1  A2+A3-a2  BK -a1  ABK -a1  BKA/H33522-A2
 BK - ABKA/H33522-BKA/H335222 =a3  I+a2(A-BK)+a1AA2-ABK -BKA/H33522B+A3-A2BKa3  I+a2  A/H33522+a1  A/H335222+A/H335223
732
Chapter 10 / Control Systems Design in State Space
x u
AB
–K/H20848
++
Figure 10–2
Regulator system.
Equation (10–18) is known as Ackermann’s formula for the determination of the state
feedback gain matrix K.
Regulator Systems and Control Systems. Systems that include controllers can
be divided into two categories: regulator systems (where the reference input is constant,
including zero) and control systems (where the reference input is time varying). In what
follows we shall consider regulator systems. Control systems will be treated in Section
10–7.
Choosing the Locations of Desired Closed-Loop Poles. The first step in the
pole-placement design approach is to choose the locations of the desired closed-loop
poles. The most frequently used approach is to choose such poles based on experience
in the root-locus design, placing a dominant pair of closed-loop poles and choosing other
poles so that they are far to the left of the dominant closed-loop poles.
Note that if we place the dominant closed-loop poles far from the jvaxis, so that the
system response becomes very fast, the signals in the system become very large, with
the result that the system may become nonlinear. This should be avoided.
Another approach is based on the quadratic optimal control approach.This approach
will determine the desired closed-loop poles such that it balances between the acceptable
response and the amount of control energy required. (See Section 10–8.) Note that
requiring a high-speed response implies requiring large amounts of control energy.Also,
in general, increasing the speed of response requires a larger, heavier actuator, which will
cost more.
EXAMPLE 10–1
Consider the regulator system shown in Figure 10–2. The plant is given by
where
The system uses the state feedback control u=– Kx.Let us choose the desired closed-loop poles
at
(We make such a choice because we know from experience that such a set of closed-loop poles
will result in a reasonable or acceptable transient response.) Determine the state feedback gain
matrix K.s=-2+j4,
  
s=-2-j4,
  
s=-10A=
C
0
0
-11
0
-50
1
-6
S
,
  
B=
C
0
0
1
S
x#=Ax+Bu
Openmirrors.com
Section 10–2 / Pole Placement 733First, we need to check the controllability matrix of the system. Since the controllability matrix
Mis given by
we find that |M|=–1, and therefore, rank M=3. Thus, the system is completely state control-
lable and arbitrary pole placement is possible.
Next, we shall solve this problem.We shall demonstrate each of the three methods presented
in this chapter.
Method 1: The first method is to use Equation (10–13).The characteristic equation for the system is
Hence,
The desired characteristic equation is
Hence,
Referring to Equation (10–13), we have
where T=Ifor this problem because the given state equation is in the controllable canonical form.
Then we have
Method 2: By defining the desired state feedback gain matrix Kas
and equating with the desired characteristic equation, we obtain
=s3+14s2+60s+200=s3+A6+k3Bs2+A5+k2Bs+1+k1=3s
0
1+k1-1
s
5+k20
-1
s+6+k33∑s I-A+BK∑=3Cs
000
s
00
0
sS-C00
-11
0
-50
1
-6S+C0
01SCk1 k2 k3D3∑s I-A+BK∑K=Ck1 k2 k3D =[199 55 8] K=[200 -1/H2175260-5/H2175214-6]K=Ca3-a3 /H21752 a2-a2 /H21752 a1-a1D T-1a1=14,  a2=60,  a3=200 =s3+a1 s2+a2 s+a3=0 (s+2-j4)(s +2+j4)(s +10) =s3+14s2+60s +200a1=6,  a2=5,  a3=1=s3+a1 s2+a2 s+a3=0=s3+6s2+5s+1∑s I-A∑=3s
01-1
s
50
-1
s+63M=CB/H21752AB/H21752A2
 BD=C0
010
1
-61
-6
31S
734
Chapter 10 / Control Systems Design in State Space
Thus,
from which we obtain
or
Method 3: The third method is to use Ackermann’s formula. Referring to Equation (10–18), we
have
Since
and
we obtain
As a matter of course, the feedback gain matrix Kobtained by the three methods are the same.
With this state feedback, the closed-loop poles are placed at s=–2 ;j4ands=–10, as desired.
It is noted that if the order nof the system were 4 or higher, methods 1 and 3 are recom-
mended, since all matrix computations can be carried out by a computer. If method 2 is used,
hand computations become necessary because a computer may not handle the characteristic
equation with unknown parameters k
1
,k
2
,p,k
n
. =[199
 
55
 
8] =[0
 
0
 
1]
C
5
6
16
1
01
0
0
SC
199
-8
-755
159
-438
7
117
S
 K=[0
 
0
 
1]
C
0
0
10
1
-61
-6
31
S
-1
C
199
-8
-755
159
-438
7
117
S
CB/H21752AB/H21752A
2
 
BD=
C
0
0
10
1
-61
-6
31
S
 =
C
199
-8
-755
159
-438
7
117
S
 +60
C
0
0
-11
0
-50
1
-6
S
+200
C
1
0
00
1
00
0
1
S
 =
C
0
0
-11
0
-50
1
-6
S
3
+14
C
0
0
-11
0
-50
1
-6
S
2
 f(A)=A
3
+14
 
A
2
+60
 
A+200
 
IK=[0
 
0
 
1]CB /H21752 AB /H21752 A
2
 
BD
-1
f(A)K=[199
 
55
 
8]k
1
=199,
  
k
2
=55,
  
k
3
=86+k
3
=14,
  
5+k
2
=60,
  
1+k
1
=200
Openmirrors.com
Section 10–3 / Solving Pole-placement Problems with MATLAB 735Comments. It is important to note that matrix Kis not unique for a given system,
but depends on the desired closed-loop pole locations (which determine the speed anddamping of the response) selected. Note that the selection of the desired closed-looppoles or the desired characteristic equation is a compromise between the rapidity of theresponse of the error vector and the sensitivity to disturbances and measurement nois-es. That is, if we increase the speed of error response, then the adverse effects of distur-bances and measurement noises generally increase. If the system is of second order,then the system dynamics (response characteristics) can be precisely correlated to thelocation of the desired closed-loop poles and the zero(s) of the plant. For higher-ordersystems, the location of the closed-loop poles and the system dynamics (response char-acteristics) are not easily correlated. Hence, in determining the state feedback gain ma-trixKfor a given system, it is desirable to examine by computer simulations the response
characteristics of the system for several different matrices K(based on several different
desired characteristic equations) and to choose the one that gives the best overall systemperformance.
10–3 SOLVING POLE-PLACEMENT PROBLEMS WITH MATLAB
Pole-placement problems can be solved easily with MATLAB. MATLAB has two
commands— acker andplace —for the computation of feedback-gain matrix K.The
command acker is based on Ackermann’s formula.This command applies to single-input
systems only.The desired closed-loop poles can include multiple poles (poles located atthe same place).
If the system involves multiple inputs, for a specified set of closed-loop poles the
state-feedback gain matrix Kis not unique and we have an additional freedom (or free-
doms) to choose K.There are many approaches to constructively utilize this additional
freedom (or freedoms) to determine K. One common use is to maximize the stability
margin.The pole placement based on this approach is called the robust pole placement.The MATLAB command for the robust pole placement is place .
Although the command place can be used for both single-input and multiple-input
systems, this command requires that the multiplicity of poles in the desired closed-looppoles be no greater than the rank of B. That is, if matrix Bis an n*1 matrix, the
command place requires that there be no multiple poles in the set of desired closed-
loop poles.
For single-input systems, the commands acker andplace yield the same K. (But for
multiple-input systems, one must use the command place instead of acker .)
It is noted that when the single-input system is barely controllable, some computa-
tional problem may occur if the command acker is used. In such a case the use of the
place command is preferred, provided that no multiple poles are involved in the de-
sired set of closed-loop poles.
To use the command acker orplace , we first enter the following matrices in the
program:
Amatrix, Bmatrix, Jmatrix
where Jmatrix is the matrix consisting of the desired closed-loop poles such that
J=Cm
1 m2 p mnD
736
Chapter 10 / Control Systems Design in State Space
Then we enter
K = acker(A,B,J)
or
K = place(A,B,J)
It is noted that the command eig (A-B*K) may be used to verify that Kthus obtained
gives the desired eigenvalues.
EXAMPLE 10–2
Consider the same system as treated in Example 10–1. The system equation is
where
By using state feedback control it is desired to have the closed-loop poles at s=m
i
(i=1, 2, 3), where
Determine the state feedback-gain matrix Kwith MATLAB.
MATLAB programs that generate matrix Kare shown in MATLAB Programs 10–1 and 10–2.
MATLAB Program 10–1 uses command acker and MATLAB Program 10–2 uses command place.m
1
=-2+j4,
  
m
2
=-2-j4,
  
m
3
=-10u=-Kx,A=
C
0
0
-11
0
-50
1
-6
S
,
  
B=
C
0
0
1
S
x#=Ax+Bu
MATLAB Program 10–1
A = [0  1  0;0  0  1;-1  -5  -6];
B = [0;0;1];
J = [-2+j*4  -2-j*4  -10];
K = acker(A,B,J)
K =
199    55    8
MATLAB Program 10–2
A = [0  1  0;0  0  1;-1  -5  -6];
B = [0;0;1];
J = [-2+j*4  -2-j*4  -10];
K = place(A,B,J)
place: ndigits = 15
K =
199.0000    55.0000    8.0000
Openmirrors.com
Section 10–3 / Solving Pole-placement Problems with MATLAB 737EXAMPLE 10–3 Consider the same system as discussed in Example 10–1. It is desired that this regulator system
have closed-loop poles at
The necessary state feedback gain matrix Kwas obtained in Example 10–1 as follows:
Using MATLAB, obtain the response of the system to the following initial condition:
Response to Initial Condition: To obtain the response to the given initial condition x(0), we
substitute u=– Kxinto the plant equation to get
To plot the response curves ( x1versus t, x2versus t,and x3versus t), we may use the command
initial . We first define the state-space equations for the system as follows:
where we included u(a three-dimensional input vector). This uvector is considered 0in the
computation of the response to the initial condition. Then we define
sys = ss(A - BK, eye(3), eye(3), eye(3))
and use the initial command as follows:
x = initial(sys, [1;0;0],t)
where tis the time duration we want to use, such as
t = 0:0.01:4;
Then obtain x1, x2, andx3as follows:
x1 = [1  0  0]*x';
x2 = [0  1  0]*x';x3 = [0  0  1]*x';
and use the plot command. This program is shown in MATLAB Program 10–3. The resulting
response curves are shown in Figure 10–3.y=Ix+Iux#=(A-BK) x+Iux#=(A-BK) x,  x(0)=C1
00Sx(0)=C1
00SK=[199 55 8]s=-2+j4,  s=-2-j4,  s=-10
738
Chapter 10 / Control Systems Design in State Space
Response to Initial Condition
state variable x
1
−0.50 0.5 1 1.5 2 2.5 3 3.5 4
0 0.5 1 1.5 2 2.5 3 3.5 4
0 0.5 1 1.5 2 2.5 3 3.5 400.51
state variable x
2
−3−1
−201
state variable x
3
−100
−5510
t (sec)
Figure 10–3
Response to initial
condition.
MATLAB Program 10–3
% Response to initial condition:
A = [0  1  0;0  0  1;-1  -5  -6];
B = [0;0;1];
K = [199  55  8];
sys = ss(A-B*K, eye(3), eye(3), eye(3));
t = 0:0.01:4;
x = initial(sys,[1;0;0],t);
x1 = [1  0  0]*x';
x2 = [0  1  0]*x';
x3 = [0  0  1]*x';
subplot(3,1,1); plot(t,x1), grid
title('Response to Initial Condition')
ylabel('state variable x1')
subplot(3,1,2); plot(t,x2),grid
ylabel('state variable x2')
subplot(3,1,3); plot(t,x3),grid
xlabel('t (sec)')
ylabel('state variable x3')
Openmirrors.com
Section 10–4 / Design of Servo Systems 739x=Ax+Bu.y=Cx
x2
x3
xnk2k1
k3
knr
…ux
y=x1
+–+–
Figure 10–4
Type 1 servo systemwhen the plant hasan integrator.10–4 DESIGN OF SERVO SYSTEMS
In this section we shall discuss the pole-placement approach to the design of type 1
servo systems. Here we shall limit our systems each to have a scalar control signal uand
a scalar output y.
In what follows we shall first discuss a problem of designing a type 1 servo system
when the plant involves an integrator.Then we shall discuss the design of a type 1 servosystem when the plant has no integrator.
Design of Type 1 Servo System when the Plant Has An Integrator. Assume
that the plant is defined by
(10–19)
(10–20)
where
As stated earlier, we assume that both the control signal uand the output signal yare
scalars. By a proper choice of a set of state variables, it is possible to choose the outputto be equal to one of the state variables. ASee the method presented in Chapter 2 for
obtaining a state-space representation of the transfer function system in which the outputybecomes equal to x
1.B
Figure 10–4 shows a general configuration of the type 1 servo system when the plant
has an integrator. Here we assumed that y=x1.In the present analysis we assume that C=1*n constant matrix B=n*1 constant matrix A=n*n constant matrix y=output signal (scalar ) u=control signal (scalar ) x=state vector for the plant (n-vector ) y=Cx x#=Ax+Bu
740
Chapter 10 / Control Systems Design in State Space
the reference input ris a step function. In this system we use the following state-feedback
control scheme:
(10–21)
where
Assume that the reference input (step function) is applied at t=0. Then, for t>0, the
system dynamics can be described by Equations (10–19) and (10–21), or
(10–22)
We shall design the type 1 servo system such that the closed-loop poles are located at
desired positions. The designed system will be an asymptotically stable system, y(q)
will approach the constant value r, and u(q) will approach zero. ( ris a step input.)
Notice that at steady state we have
(10–23)
Noting that r(t) is a step input, we have r(q)=r(t)=r (constant) for t>0. By
subtracting Equation (10–23) from Equation (10–22), we obtain
(10–24)
Define
Then Equation (10–24) becomes
(10–25)
Equation (10–25) describes the error dynamics.
The design of the type 1 servo system here is converted to the design of an asymp-
totically stable regulator system such that e(t)approaches zero, given any initial condi-
tion e(0). If the system defined by Equation (10–19) is completely state controllable,
then, by specifying the desired eigenvalues m
1
,m
2
,p,m
n
for the matrix A-BK, matrix
Kcan be determined by the pole-placement technique presented in Section 10–2.
The steady-state values of x(t)and u(t) can be found as follows: At steady state
(t=q), we have, from Equation (10–22),
x#(q)=0=(A-BK)
 
x(q)+Bk
1
 
re#=(A-BK)
 
ex(t)-x(q)=e(t)x#(t)-x#(q)=(A-BK)Cx(t)-x(q)Dx#(q)=(A-BK)
 
x(q)+Bk
1
 
r(q)x#=Ax+Bu=(A-BK)
 
x+Bk
1
 
rK=Ck
1
 
k
2
pk
n
D=-Kx+k
1
 
ru=-C0
 
k
2
 
k
3
pk
n
D
F
x
1
x
2
/H11080
/H11080
/H11080
x
n
V
+k
1
Ar-x
1
B
Openmirrors.com
Section 10–4 / Design of Servo Systems 741Since the desired eigenvalues of A-BKare all in the left-half splane, the inverse of
matrix A-BKexists. Consequently, x(q) can be determined as
Also, u(q) can be obtained as
(See Example 10–4 to verify this last equation.)
EXAMPLE 10–4 Design a type 1 servo system when the plant transfer function has an integrator.Assume that the
plant transfer function is given by
The desired closed-loop poles are and s=–10. Assume that the system
configuration is the same as that shown in Figure 10–4 and the reference input ris a step function.
Obtain the unit-step response of the designed system.
Define state variables x1, x2,andx3as follows:
Then the state-space representation of the system becomes
(10–26)(10–27)
where
Referring to Figure 10–4 and noting that n=3, the control signal uis given by
(10–28)
where
The state-feedback gain matrix Kcan be obtained easily with MATLAB. See MATLAB 
Program 10–4.K=Ck
1 k2 k3Du=-Ak2 x2+k3 x3B+k1Ar-x1B=-Kx+k1 rA=C0
001
0
-20
1
-3S,  B=C0
01S,  C=[1 0 0] y=Cx x#=Ax+Bu x3=x#
2 x2=x#
1 x1=ys=-2;j213Y(s)
U(s)=1
s(s+1)(s +2)u(q)=-Kx(q)+k1 r=0x(q)=-(A-BK)-1
 Bk1 r
MATLAB Program 10–4
A = [0  1  0;0  0  1;0  -2  -3];
B = [0;0;1];J = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)  -10];K = acker(A,B,J)
K =
160.0000    54.0000    11.0000
742
Chapter 10 / Control Systems Design in State Space
The state feedback gain matrix Kis thus
K = [160  54  11]
Unit-Step Response of the Designed System: The unit-step response of the designed system can
be obtained as follows:
Since
from Equation (10–22) the state equation for the designed system is
(10–29)
and the output equation is
(10–30)
Solving Equations (10–29) and (10–30) for y(t) when ris a unit-step function gives the unit-step
response curve y(t) versus t.MATLAB Program 10–5 yields the unit-step response. The result-
ing unit-step response curve is shown in Figure 10–5.y=[1
 
0
 
0]
C
x
1
x
2
x
3
SC
x#
1
x#
2
x#
3
S
=
C
0
0
-1601
0
-560
1
-14
SC
x
1
x
2
x
3
S
+
C
  0
  0
160
S
rA-BK =
C
0
0
01
0
-20
1
-3
S
-
C
0
0
1
S
[160
 
54
 
11]=
C
0
0
-1601
0
-560
1
-14
S
MATLAB Program 10–5
% ---------- Unit-step response ----------
% ***** Enter the state matrix, control matrix, output matrix,
% and direct transmission matrix of the designed system *****
AA = [0  1  0;0  0  1;-160  -56  -14];
BB = [0;0;160];
CC = [1  0  0];
DD = [0];
% ***** Enter step command and plot command *****
t = 0:0.01:5;
y = step(AA,BB,CC,DD,1,t);
plot(t,y)
grid
title('Unit-Step Response')
xlabel('t Sec')
ylabel('Output y')
Openmirrors.com
Section 10–4 / Design of Servo Systems 743Unit-Step ResponseOutput y
00.61.2
0.8
0.4
0.21
t Sec0 3.5 1 0.5 2.5 5 4 4.5 1.5 2 3Figure 10–5
Unit-step responsecurve y(t) versus t
for the system
designed in Example 10–4.
Note that since
we have
At steady state the control signal ubecomes zero.
Design of Type 1 Servo System when the Plant Has No Integrator. If the plant
has no integrator (type 0 plant), the basic principle of the design of a type 1 servo sys-tem is to insert an integrator in the feedforward path between the error comparatorand the plant, as shown in Figure 10–6. (The block diagram of Figure 10–6 is a basicform of the type 1 servo system where the plant has no integrator.) From the diagram,we obtain
(10–31)
(10–32)(10–33)
(10–34)
where  x=state vector of the plant (n-vector ) j#
=r-y=r-Cx u=-Kx+k
I j y=Cx x#=Ax+Bu =-[160 54 11]Cr
00S+160r =0 u(q)=-[160 54 11]Cx1(q)
x2(q)
x3(q)S+160ru(q)=-Kx(q)+k1 r(q)=-Kx(q)+k1 r
744
Chapter 10 / Control Systems Design in State Space
We assume that the plant given by Equation (10–31) is completely state controllable.The
transfer function of the plant can be given by
To avoid the possibility of the inserted integrator being canceled by the zero at the origin
of the plant, we assume that G
p
(s)has no zero at the origin.
Assume that the reference input (step function) is applied at t=0. Then, for t>0,
the system dynamics can be described by an equation that is a combination of Equations
(10–31) and (10–34):
(10–35)
We shall design an asymptotically stable system such that x(q),j(q), and u(q) approach
constant values, respectively. Then, at steady state, and we get y(q)=r.
Notice that at steady state we have
(10–36)
Noting that r(t) is a step input, we have r(q)=r(t)=r (constant) for t>0. By
subtracting Equation (10–36) from Equation (10–35), we obtain
(10–37)
B
x#(t)-x#(q)
j#(t)-j#(q)
R
=
B
A
-C0
0
RB
x(t)-x(q)
j(t)-j(q)
R
+
B
B
0
R
Cu(t) -u(q)D
B
x#(q)
j#(q)
R
=
B
A
-C0
0
RB
x(q)
j(q)
R
+
B
B
0
R
u(q)+
B
0
1
R
r(q)j#(t)=0,
B
x#(t)
j#(t)
R
=
B
A
-C0
0
RB
x(t)
j(t)
R
+
B
B
0
R
u(t) +
B
0
1
R
r(t)G
p
(s)=C(s
 
I-A)
-1
 
BC=1*n constant matrix B=n*1 constant matrix A=n*n constant matrix r=reference input signal (step function, scalar ) j=output of the integrator (state variable of the system, scalar ) y=output signal (scalar ) u=control signal (scalar )
y
K
AB
k
I
C /H20848 /H20848
x rj.
ju
+–
+–
++
Figure 10–6
Type 1 servo system.
Openmirrors.com
Section 10–4 / Design of Servo Systems 745Define
Then Equation (10–37) can be written as
(10–38)
where
(10–39)
Define a new (n+1) th-order error vector e(t)by
-vector
Then Equation (10–38) becomes
(10–40)
where
and Equation (10–39) becomes
(10–41)
where
The state error equation can be obtained by substituting Equation (10–41) into
Equation (10–40):
(10–42)
If the desired eigenvalues of matrix (that is, the desired closed-loop poles) are
specified as m1,m2,p,mn+1,then the state-feedback gain matrix Kand the integral
gain constant kIcan be determined by the pole-placement technique presented in Section
10–2, provided that the system defined by Equation (10–40) is completely statecontrollable. Note that if the matrix
has rank n+1, then the system defined by Equation (10–40) is completely state
controllable. (See Problem A–10–12 .)BA
-CB
0RAˆ-BˆKˆe#=AAˆ-BˆKˆBeKˆ=CK/H21752-kIDue=-KˆeAˆ=BA
-C0
0R,  Bˆ=BB
0Re#=Aˆe+Bˆuee(t)=Bxe(t)
je(t)R=(n+1)ue(t)=-Kxe(t)+kI je(t)Bx#
e(t)
j#
e(t)R=BA
-C0
0RBxe(t)
je(t)R+BB
0Rue(t) u(t) -u(q)=ue(t) j(t)-j(q)=je(t) x(t)-x(q)=xe(t)
746
Chapter 10 / Control Systems Design in State Space
0
MP
z
umgm/H5129 sin u
x
x
/H5129 cos u
/H5129u
Figure 10–8
Inverted-pendulum
control system.
As is usually the case, not all state variables can be directly measurable. If this is the
case, we need to use a state observer. Figure 10–7 shows a block diagram of a type 1
servo system with a state observer. [In the figure, each block with an integral symbol
represents an integrator (1/s) .] Detailed discussions of state observers are given in
Section 10–5.
EXAMPLE 10–5
Consider the inverted-pendulum control system shown in Figure 10–8. In this example, we are
concerned only with the motion of the pendulum and motion of the cart in the plane of the page.
It is desired to keep the inverted pendulum upright as much as possible and yet control the
position of the cart—for instance, move the cart in a step fashion. To control the position of
the cart, we need to build a type 1 servo system. The inverted-pendulum system mounted on a
cart does not have an integrator.Therefore, we feed the position signal y(which indicates the po-
sition of the cart) back to the input and insert an integrator in the feedforward path, as shown
y
K
AB
k
I
C /H20848 /H20848
x rj.
ju
Observer
+–
+–
++
Figure 10–7
Type 1 servo system with state observer.
Openmirrors.com
Section 10–4 / Design of Servo Systems 747x=Ax+Bu.y=Cx
k1kI /H20848
k2
k3
k4rux
y j j.
+–+–
Figure 10–9
Inverted-pendulumcontrol system. (Type
1 servo system when
the plant has nointegrator.)
in Figure 10–9.We assume that the pendulum angle uand the angular velocity are small, so that
and We also assume that the numerical values for M, m, and lare
given as
Earlier in Example 3–6 we derived the equations for the inverted-pendulum system shown in
Figure 3–6, which is the same as that in Figure 10–8. Referring to Figure 3–6, we started with the
force-balance and torque-balance equations and ended up with Equations (3–20) and (3–21) to
model the inverted-pendulum system. Referring to Equations (3–20) and (3–21), the equations forthe inverted-pendulum control system shown in Figure 10–8 are
(10–43)
(10–44)
When the given numerical values are substituted, Equations (10–43) and (10–44) become
(10–45)
(10–46)
Let us define the state variables x
1,x2,x3,andx4as
Then, referring to Equations (10–45) and (10–46) and Figure 10–9 and considering the cart position
xas the output of the system, we obtain the equations for the system as follows:
(10–47)
(10–48)
(10–49)(10–50)  j#
=r-y=r-Cx u=-Kx+k
I j y=Cx x#=Ax+Bu x4=x# x3=x x2=u# x1=ux$=0.5u-0.4905uu$=20.601u-u Mx$=u-mgu Mlu$=(M +m)gu-uM=2 kg,  m=0.1 kg,  l=0.5 muu#2/H112160. cosu/H112161, sinu/H11216u,u#
748
Chapter 10 / Control Systems Design in State Space
where
For the type 1 servo system, we have the state error equation as given by Equation (10–40):
(10–51)
where
and the control signal is given by Equation (10–41):
where
To obtain a reasonable speed and damping in the response of the designed system (for
example, the settling time of approximately 4 ~5 sec and the maximum overshoot of 15 %~ 16%
in the step response of the cart), let us choose the desired closed-loop poles at s=m
i
(i=1, 2, 3, 4, 5), where
We shall determine the necessary state-feedback gain matrix by the use of MATLAB.
Before we proceed further, we must examine the rank of matrix P, where
Matrix Pis given by
(10–52)
The rank of this matrix can be found to be 5. Therefore, the system defined by Equation (10–51)
is completely state controllable, and arbitrary pole placement is possible. MATLAB Program
10–6 produces the state feedback gain matrix K
ˆ
.P=
B
A
-CB
0
R
=
E
0
20.601
0
-0.4905
01
0
0
0
00
0
0
0
-10
0
1
0
00
-1
0
0.5
0
U
P=
B
A
-CB
0
R
m
1
=-1+j13
,
  
m
2
=-1-j13
,
  
m
3
=-5,
  
m
4
=-5,
  
m
5
=-5K
ˆ
=CK/H21752-k
I
D=Ck
1
 
k
2
 
k
3
 
k
4
/H21752-k
I
Du
e
=-K
ˆ
eA
ˆ
=
B
A
-C0
0
R
=
E
0
20.601
0
-0.4905
01
0
0
0
00
0
0
0
-10
0
1
0
00
0
0
0
0
U
,
  
B
ˆ
=
B
B
0
R
=
E
0
-1
0
0.5
0
U
e#=A
ˆ
e+B
ˆ
u
e
A=
D
0
20.601
0
-0.49051
0
0
00
0
0
00
0
1
0
T
,
  
B=
D
0
-1
0
0.5
T
,
  
C=[0
 
0
 
1
 
0]
Openmirrors.com
Section 10–4 / Design of Servo Systems 749MATLAB Program 10–6
A = [0  1  0  0; 20.601  0  0  0;  0  0  0  1; -0.4905  0  0  0];
B = [0;-1;0;0.5];C = [0  0  1  0];Ahat = [A zeros(4,1); -C  0];Bhat = [B;0];J = [-1+j*sqrt(3)  -1-j*sqrt(3)  -5  -5  -5];Khat = acker(Ahat,Bhat,J)
Khat =
-157.6336  -35.3733  -56.0652  -36.7466  50.9684
Thus, we get
and
Unit Step-Response Characteristics of the Designed System. Once we determine the feed-
back gain matrix Kand the integral gain constant kI,the step response in the cart position can be
obtained by solving the following equation, which is obtained by substituting Equation (10–49)
into Equation (10–35):
(10–53)
The output y(t) of the system is x3(t),or
(10–54)
Define the state matrix, control matrix, output matrix, and direct transmission matrix of the
system given by Equations (10–53) and (10–54) as AA, BB, CC, andDD, respectively. MATLAB
Program 10–7 may be used to obtain the step-response curves of the designed system. Noticethat, to obtain the unit-step response, we entered the command
[y,x,t] = step(AA,BB,CC,DD,1,t)
Figure 10–10 shows curves x1versus t, x2versus t, x3(=output y)versus t, x4versus t, andx5
(=j)versus t.Notice that y(t)C=x3(t)Dhas approximately 15 %overshoot and the settling time
is approximately 4.5 sec. j(t)C=x5(t)Dapproaches 1.1.This result can be derived as follows: Since
or
D0
000T=D0
20.601
0
-0.49051
0000
0000
010
TD00
r
0T+D0
-1
0
0.5Tu(q)x#(q)=0=Ax(q)+Bu(q)y=[0 0 1 0 0]Bx
jR+[0]rBx#
j#R=BA-BK
-CBkI
0RBx
jR+B01RrkI=-50.9684K=Ck1 k2 k3 k4D=[-157.6336 -35.3733 -56.0652 -36.7466]
750
Chapter 10 / Control Systems Design in State Space
MATLAB Program 10–7
%**** The following program is to obtain step response
% of the inverted-pendulum system just designed *****
A = [0  1  0  0;20.601  0  0  0;0  0  0  1;-0.4905  0  0  0];
B = [0;-1;0;0.5];
C = [0  0  1  0]
D = [0];
K = [-157.6336  -35.3733  -56.0652  -36.7466];
KI = -50.9684;
AA = [A - B*K  B*KI;-C  0];
BB = [0;0;0;0;1];
CC = [C  0];
DD = [0];
%***** To obtain response curves x1 versus t, x2 versus t,
% x3 versus t, x4 versus t, and x5 versus t, separately, enter
% the following command *****
t = 0:0.02:6;
[y,x,t] = step(AA,BB,CC,DD,1,t);
x1 = [1  0  0  0  0]*x';
x2 = [0  1  0  0  0]*x';
x3 = [0  0  1  0  0]*x';
x4 = [0  0  0  1  0]*x';
x5 = [0  0  0  0  1]*x';
subplot(3,2,1); plot(t,x1); grid
title('x1 versus t')
xlabel('t Sec'); ylabel('x1')
subplot(3,2,2); plot(t,x2); grid
title('x2 versus t')
xlabel('t Sec'); ylabel('x2')
subplot(3,2,3); plot(t,x3); grid
title('x3 versus t')
xlabel('t Sec'); ylabel('x3')
subplot(3,2,4); plot(t,x4); grid
title('x4 versus t')
xlabel('t Sec'); ylabel('x4')
subplot(3,2,5); plot(t,x5); grid
title('x5 versus t')
xlabel('t Sec'); ylabel('x5')
Openmirrors.com
Section 10–5 / State Observers 751we get
Since u(q)=0, we have, from Equation (10–33),
and so
Hence, for r=1, we have
It is noted that, as in any design problem, if the speed and damping are not quite satisfactory,
then we must modify the desired characteristic equation and determine a new matrix Computersimulations must be repeated until a satisfactory result is obtained.
10–5 STATE OBSERVERS
In the pole-placement approach to the design of control systems, we assumed that all
state variables are available for feedback. In practice, however, not all state variables areavailable for feedback. Then we need to estimate unavailable state variables.Kˆ.j(q)=1.1j(q)=1
kI CKx(q)D=1
kI k3 x3(q)=-56.0652
-50.9684 r=1.1ru(q)=0=-Kx(q)+kI j(q)u(q)=000.2x1 versus t
06 4 2
t Sec
02
–11x3 versus t
06 4 2
0.51.5x5 versus t
06 4 201t Sec
t Secx1 x3 x500.5
–0.5x2 versus t
06 4 2
t Sec
02
–11x4 versus t
06 4 2
t Secx2 x4
Figure 10–10
Curves x1versus t, x2
versus t, x3
(=output y) versus
t, x4versus t,and
x5 (=j) versus t.
752
Chapter 10 / Control Systems Design in State Space
Estimation of unmeasurable state variables is commonly called observation .A device (or
a computer program) that estimates or observes the state variables is called a state
observer , or simply an observer . If the state observer observes all state variables of the
system, regardless of whether some state variables are available for direct measurement,
it is called a full-order state observer .There are times when this will not be necessary, when
we will need observation of only the unmeasurable state variables, but not of those that
are directly measurable as well. For example, since the output variables are observable
and they are linearly related to the state variables, we need not observe all state variables,
but observe only n-m state variables, where nis the dimension of the state vector and
mis the dimension of the output vector.
An observer that estimates fewer than nstate variables, where nis the dimension of
the state vector, is called a reduced-order state observer or, simply, a reduced-order
observer . If the order of the reduced-order state observer is the minimum possible, the
observer is called a minimum-order state observer orminimum-order observer . In this
section, we shall discuss both the full-order state observer and the minimum-order state
observer.
State Observer. A state observer estimates the state variables based on the
measurements of the output and control variables. Here the concept of observability
discussed in Section 9–7 plays an important role. As we shall see later, state observers
can be designed if and only if the observability condition is satisfied.
In the following discussions of state observers, we shall use the notation to
designate the observed state vector. In many practical cases, the observed state vector
is used in the state feedback to generate the desired control vector.
Consider the plant defined by
(10–55)
(10–56)
The observer is a subsystem to reconstruct the state vector of the plant. The mathe-
matical model of the observer is basically the same as that of the plant, except that we
include an additional term that includes the estimation error to compensate for
inaccuracies in matrices AandBand the lack of the initial error. The estimation error
or observation error is the difference between the measured output and the estimated
output.The initial error is the difference between the initial state and the initial estimated
state. Thus, we define the mathematical model of the observer to be
(10–57)
where is the estimated state and is the estimated output.The inputs to the observer
are the output yand the control input u.Matrix K
e
, which is called the observer gain
matrix, is a weighting matrix to the correction term involving the difference between 
the measured output yand the estimated output This term continuously corrects
the model output and improves the performance of the observer. Figure 10–11 shows the
block diagram of the system and the full-order state observer.Cx/H33522.Cx/H33522x/H33522 =AA-K
e
  
CBx/H33522+Bu+K
e
 
y x
/H11343
=Ax/H33522+Bu+K
e
(y-Cx/H33522) y=Cx x#=Ax+Bux/H33522x/H33522
Openmirrors.com
Section 10–5 / State Observers 753uy
y~
Full-order state observerABC
Ke/H20848
ABC /H20848xx
~++
+++++–
Figure 10–11
Block diagram ofsystem and full-orderstate observer, wheninput uand output y
are scalars.
Full-Order State Observer. The order of the state observer that will be discussed
here is the same as that of the plant. Assume that the plant is defined by Equations(10–55) and (10–56) and the observer model is defined by Equation (10–57).
To obtain the observer error equation, let us subtract Equation (10–57) from
Equation (10–55):
(10–58)
Define the difference between xand as the error vector e,o r
Then Equation (10–58) becomes
(10–59)
From Equation (10–59), we see that the dynamic behavior of the error vector is deter-
mined by the eigenvalues of matrix A-K
eC. If matrix A-KeCis a stable matrix,
the error vector will converge to zero for any initial error vector e(0).That is, will
converge to x(t)regardless of the values of x(0)and If the eigenvalues of matrix
A-KeCare chosen in such a way that the dynamic behavior of the error vector is
asymptotically stable and is adequately fast, then any error vector will tend to zero (theorigin) with an adequate speed.
If the plant is completely observable, then it can be proved that it is possible to
choose matrix K
esuch that A-KeChas arbitrarily desired eigenvalues. That is, the
observer gain matrix Kecan be determined to yield the desired matrix A-KeC.W e
shall discuss this matter in what follows.x/H33522(0).x/H33522(t)e#=AA-Ke  CBee=x-x/H33522x/H33522=AA-Ke  CB(x-x/H33522)x#-x/H11343=Ax-Ax/H33522-Ke(Cx-Cx/H33522)
754
Chapter 10 / Control Systems Design in State Space
Dual Problem. The problem of designing a full-order observer becomes that of de-
termining the observer gain matrix K
e
such that the error dynamics defined by Equation
(10–59) are asymptotically stable with sufficient speed of response. (The asymptotic
stability and the speed of response of the error dynamics are determined by the
eigenvalues of matrix A-K
e
C.) Hence, the design of the full-order observer becomes
that of determining an appropriate K
e
such that A-K
e
Chas desired eigenvalues.Thus,
the problem here becomes the same as the pole-placement problem we discussed in
Section 10–2. In fact, the two problems are mathematically the same. This property is
called duality.
Consider the system defined by
In designing the full-order state observer, we may solve the dual problem, that is, solve
the pole-placement problem for the dual system
assuming the control signal vto be
If the dual system is completely state controllable, then the state feedback gain matrix
Kcan be determined such that matrix A*-C*Kwill yield a set of the desired
eigenvalues.
Ifm
1
,m
2
,p,m
n
are the desired eigenvalues of the state observer matrix, then by
taking the same m
i
’s as the desired eigenvalues of the state-feedback gain matrix of the
dual system, we obtain
Noting that the eigenvalues of A*-C*Kand those of A-K*Care the same, we have
Comparing the characteristic polynomial and the characteristic poly-
nomial for the observer system [refer to Equation (10–57)], we find
that K
e
andK* are related by
Thus, using the matrix Kdetermined by the pole-placement approach in the dual system,
the observer gain matrix K
e
for the original system can be determined by using the
relationship K
e
=K*. (See Problem A–10–10 for the details.)
Necessary and Sufficient Condition for State Observation. As discussed, a
necessary and sufficient condition for the determination of the observer gain matrix K
e
for the desired eigenvalues of A-K
e
Cis that the dual of the original system
z#=A*
 
z+C*vK
e
=K*@s
 
I-AA-K
e
  
CB@@s
 
I-(A-K*
 
C)@@s
 
I-(A*-C*
 
K)@=@s
 
I-(A-K*
 
C)@@s
 
I-(A*-C*
 
K)@=As-m
1
BAs-m
2
BpAs-m
n
Bv=-Kzn=B*
 
zz#=A*
 
z+C*v y=Cx x#=Ax+Bu
Openmirrors.com
Section 10–5 / State Observers 755be completely state controllable. The complete state controllability condition for this
dual system is that the rank of
ben.This is the condition for complete observability of the original system defined by
Equations (10–55) and (10–56).This means that a necessary and sufficient condition forthe observation of the state of the system defined by Equations (10–55) and (10–56) isthat the system be completely observable.
Once we select the desired eigenvalues (or desired characteristic equation), the full-
order state observer can be designed, provided the plant is completely observable. Thedesired eigenvalues of the characteristic equation should be chosen so that the stateobserver responds at least two to five times faster than the closed-loop systemconsidered. As stated earlier, the equation for the full-order state observer is
(10–60)
It is noted that thus far we have assumed the matrices A,B, and Cin the observer
to be exactly the same as those of the physical plant. If there are discrepancies in A,B,
andCin the observer and in the physical plant, the dynamics of the observer error are
no longer governed by Equation (10–59). This means that the error may not approachzero as expected.Therefore, we need to choose K
eso that the observer is stable and the
error remains acceptably small in the presence of small modeling errors.
Transformation Approach to Obtain State Observer Gain Matrix Ke.By
following the same approach as we used in deriving the equation for the state feedbackgain matrix K, we can obtain the following equation:
(10–61)
where K
eis an n*1 matrix,
and
[Refer to Problem A–10–10 for the derivation of Equation (10–61).] W=Gan-1
an-2
/H11080
/H11080/H11080
a
1
1an-2
an-3
/H11080
/H11080/H11080
10p
p
p
pa
1
1
/H11080/H11080/H11080
001
0
/H11080/H11080/H11080
00
W N=CC*/H21752A* C*/H21752p/H21752(A*)n-1C*DQ=(WN*)-1Ke=QFan-an
an-1-an-1
/H11080
/H11080/H11080
a
1-a1V=(WN*)-1Fan-an
an-1-an-1
/H11080
/H11080/H11080
a
1-a1Vx/H11343=AA-Ke  CBx/H33522+Bu+Ke yCC*/H21752A* C*/H21752p/H21752(A*)n-1
 C*D
756
Chapter 10 / Control Systems Design in State Space
Direct-Substitution Approach to Obtain State Observer Gain Matrix K
e
.
Similar to the case of pole placement, if the system is of low order, then direct substitution
of matrix K
e
into the desired characteristic polynomial may be simpler. For example, if
xis a 3-vector, then write the observer gain matrix K
e
as
Substitute this K
e
matrix into the desired characteristic polynomial:
By equating the coefficients of the like powers of son both sides of this last equation,
we can determine the values of k
e1
,k
e2
,and k
e3
.This approach is convenient if n= 1,
2, or 3, where nis the dimension of the state vector x. (Although this approach can be
used when n= 4, 5, 6, p, the computations involved may become very tedious.)
Another approach to the determination of the state observer gain matrix K
e
is to
use Ackermann’s formula. This approach is presented in the following.
Ackermann’s Formula. Consider the system defined by
(10–62)
(10–63)
In Section 10–2 we derived Ackermann’s formula for pole placement for the system
defined by Equation (10–62).The result was given by Equation (10–18), rewritten thus:
For the dual of the system defined by Equations (10–62) and (10–63),
the preceding Ackermann’s formula for pole placement is modified to
(10–64)
As stated earlier, the state observer gain matrix K
e
is given by K*, where Kis given by
Equation (10–64). Thus,
(10–65) K
e
=K*=f(A*)*
G
C
CA
/H11080
/H11080
/H11080
CA
n-2
CA
n-1
W
-1
G
0
0
/H11080
/H11080
/H11080
0
1
W
=f(A)
G
C
CA
/H11080
/H11080
/H11080
CA
n-2
CA
n-1
W
-1
G
0
0
/H11080
/H11080
/H11080
0
1
W
K=[0
 
0p  0
 
1]CC*/H21752A*
 
C*/H21752p/H21752(A*)
n-1
 
C*D
-1
f(A*)n=B*
 
zz#=A*
 
z+C*vK=[0
 
0p  0
 
1]CB/H21752AB/H21752p/H21752A
n-1
 
BD
-1
f(A) y=Cx x#=Ax+Bu@s
 
I-AA-K
e
  
CB@=As-m
1
BAs-m
2
BAs-m
3
BK
e
=
C
k
e1
k
e2
k
e3
S
Openmirrors.com
Section 10–5 / State Observers 757wheref(s)is the desired characteristic polynomial for the state observer, or
wherem1,m2,p,mnare the desired eigenvalues. Equation (10–65) is called Ackermann’s
formula for the determination of the observer gain matrix Ke.
Comments on Selecting the Best Ke.Referring to Figure 10–11, notice that the
feedback signal through the observer gain matrix Keserves as a correction signal to
the plant model to account for the unknowns in the plant. If significant unknowns areinvolved, the feedback signal through the matrix K
eshould be relatively large. Howev-
er, if the output signal is contaminated significantly by disturbances and measurementnoises, then the output yis not reliable and the feedback signal through the matrix K
e
should be relatively small. In determining the matrix Ke,we should carefully examine
the effects of disturbances and noises involved in the output y.
Remember that the observer gain matrix Kedepends on the desired characteristic
equation
The choice of a set of is, in many instances, not unique. As a general rule,
however, the observer poles must be two to five times faster than the controller polesto make sure the observation error (estimation error) converges to zero quickly. Thismeans that the observer estimation error decays two to five times faster than does thestate vector x. Such faster decay of the observer error compared with the desired
dynamics makes the controller poles dominate the system response.
It is important to note that if sensor noise is considerable, we may choose the observer
poles to be slower than two times the controller poles, so that the bandwidth of the sys-tem will become lower and smooth the noise. In this case the system response will bestrongly influenced by the observer poles. If the observer poles are located to the rightof the controller poles in the left-half splane, the system response will be dominated by
the observer poles rather than by the control poles.
In the design of the state observer, it is desirable to determine several observer gain
matrices K
ebased on several different desired characteristic equations. For each of the
several different matrices Ke,simulation tests must be run to evaluate the resulting
system performance. Then we select the best Kefrom the viewpoint of overall system
performance. In many practical cases, the selection of the best matrix Keboils down to
a compromise between speedy response and sensitivity to disturbances and noises.
EXAMPLE 10–6 Consider the system
where
We use the observed state feedback such that
u=-Kx/H33522A=B0
120.6
0R,  B=B0
1R,  C=[0 1] y=Cx x#=Ax+Bum1 , m2 ,p, mnAs-m1BAs-m2B p As-mnB=0f(s)=As-m1BAs-m2B p As-mnB
758
Chapter 10 / Control Systems Design in State Space
Design a full-order state observer, assuming that the system configuration is identical to that
shown in Figure 10–11. Assume that the desired eigenvalues of the observer matrix are
The design of the state observer reduces to the determination of an appropriate observer gain
matrix K
e
.
Let us examine the observability matrix. The rank of
is 2. Hence, the system is completely observable and the determination of the desired observer gain
matrix is possible. We shall solve this problem by three methods.
Method 1: We shall determine the observer gain matrix by use of Equation (10–61). The given
system is already in the observable canonical form. Hence, the transformation matrix
Q=(WN*)
–1
isI. Since the characteristic equation of the given system is
we have
The desired characteristic equation is
Hence,
Then the observer gain matrix K
e
can be obtained from Equation (10–61) as follows:
Method 2: Referring to Equation (10–59):
the characteristic equation for the observer becomes
Define
Then the characteristic equation becomes
(10–66) =s
2
+k
e2
 
s-20.6 +k
e1
=0
2B
s
00
s
R
-
B
0
120.6
0
R
+
B
k
e1
k
e2
R
[0
 
1]
2
=
2
s
-1-20.6 +k
e1
s+k
e2
2
K
e
=
B
k
e1
k
e2
R
@s
 
I-A+K
e
  
C@=0e#=AA-K
e
  
CBeK
e
=(WN*)
-1
B
a
2
-a
2
a
1
-a
1
R
=
B
1
00
1
RB
100 +20.6
20-0
R
=
B
120.6
20
R
a
1
=20,
  
a
2
=100(s+10)
2
=s
2
+20s +100 =s
2
+a
1
 
s+a
2
=0a
1
=0,
  
a
2
=-20.6∑s
 
I-A∑=
2
s
-1-20.6
s
2
=s
2
-20.6 =s
2
+a
1
 
s+a
2
=0[C*/H21752A*
 
C*]=
B
0
11
0
R
m
1
=-10,
  
m
2
=-10
Openmirrors.com
Section 10–5 / State Observers 759Since the desired characteristic equation is
by comparing Equation (10–66) with this last equation, we obtain
or
Method 3: We shall use Ackermann’s formula given by Equation (10–65):
where
Thus,
and
As a matter of course, we get the same Keregardless of the method employed.
The equation for the full-order state observer is given by Equation (10–57),
or
Finally, it is noted that, similar to the case of pole placement, if the system order nis 4 or
higher, methods 1 and 3 are preferred, because all matrix computations can be carried out by acomputer, while method 2 always requires hand computation of the characteristic equation
involving unknown parameters k
e1,ke2,p,ken.
Effects of the Addition of the Observer on a Closed-Loop System. In the
pole-placement design process, we assumed that the actual state x(t)was available for
feedback. In practice, however, the actual state x(t)may not be measurable, so we will
need to design an observer and use the observed state for feedback as shown in Fig-ure 10–12. The design process, therefore, becomes a two-stage process, the first stagebeing the determination of the feedback gain matrix Kto yield the desired characteristic
equation and the second stage being the determination of the observer gain matrix K
e
to yield the desired observer characteristic equation.
Let us now investigate the effects of the use of the observed state rather than
the actual state x(t),on the characteristic equation of a closed-loop control system.x/H33522(t),x/H33522(t)Bx/H11343
1
x/H11343
2R=B0
1-100
-20RBx/H33522
1
x/H33522
2R+B0
1Ru+B120.6
20Ryx/H11343=AA-Ke  CBx/H33522+Bu+Ke y =B120.6
20412
120.6RB011
0RB01R=B120.6
20R Ke=AA2+20A+100IBB0
11
0R-1
B0
1Rf(A)=A2+20A+100If(s)=As-m1BAs-m2B=s2+20s +100Ke=f(A)BC
CAR-1
B0
1RKe=B120.6
20Rke1=120.6,  ke2=20s2+20s +100 =0
760
Chapter 10 / Control Systems Design in State Space
Consider the completely state controllable and completely observable system defined
by the equations
For the state-feedback control based on the observed state 
With this control, the state equation becomes
(10–67)
The difference between the actual state x(t)and the observed state has been
defined as the error e(t):
Substitution of the error vector e(t)into Equation (10–67) gives
(10–68)
Note that the observer error equation was given by Equation (10–59), repeated here:
(10–69)
Combining Equations (10–68) and (10–69), we obtain
(10–70)
B
x#
e#
R
=
B
A-BK
0BK
A-K
e
  
C
RB
x
e
R
e#=AA-K
e
  
CBex#=(A-BK)
 
x+BKee(t)=x(t)-x/H33522(t)x/H33522(t)x#=Ax-BK x/H33522=(A-BK)
 
x+BK(x-x/H33522)u=-Kx/H33522x/H33522, y=Cx x#=Ax+Bu
u y
y~ABC
K
e
–K/H20848
ABC /H20848xx
~
++
++
++
+–
Figure 10–12
Observed-state
feedback control
system.
Openmirrors.com
Section 10–5 / State Observers 761Equation (10–70) describes the dynamics of the observed-state feedback control system.
The characteristic equation for the system is
or
Notice that the closed-loop poles of the observed-state feedback control system consist
of the poles due to the pole-placement design alone and the poles due to the observerdesign alone. This means that the pole-placement design and the observer design areindependent of each other. They can be designed separately and combined to form theobserved-state feedback control system. Note that, if the order of the plant is n,then the
observer is also of nth order (if the full-order state observer is used), and the resulting
characteristic equation for the entire closed-loop system becomes of order 2n.
Transfer Function of the Observer-Based Controller. Consider the plant defined by
Assume that the plant is completely observable. Assume that we use observed-state
feedback control Then, the equations for the observer are given by
(10–71)(10–72)
where Equation (10–71) is obtained by substituting into Equation (10–57).
By taking the Laplace transform of Equation (10–71), assuming a zero initial
condition, and solving for we obtain
By substituting this into the Laplace transform of Equation (10–72), we obtain
(10–73)
Then the transfer function U(s)/ Y(s) can be obtained as
Figure 10–13 shows the block diagram representation for the system. Notice that the
transfer function
acts as a controller for the system. Hence, we call the transfer function
(10–74)U(s)
-Y(s)=num
den=KAs I-A+Ke C+BKB-1
 KeKAs I-A+Ke  C+BKB-1
 KeU(s)
Y(s)=-KAs I-A+Ke C+BKB-1
 KeU(s) =-KAs I-A+Ke C+BKB-1Ke Y(s)X/H33522(s)X/H33522(s)=As I-A+Ke C+BKB-1
 Ke Y(s)X/H33522(s),u=-Kx/H33522 u=-Kx/H33522 x/H11343=AA-Ke C-BKBx/H33522+Ke yu=-Kx/H33522. y=Cx x#=Ax+Bu@s I-A+BK@@s I-A+Ke  C@=02s I-A+BK
0-BK
s I-A+Ke  C2=0
762
Chapter 10 / Control Systems Design in State Space
the observer-based controller transfer function or, simply, the observer-controller transfer
function.
Note that the observer-controller matrix
may or may not be stable, although A-BKandA-K
e
Care chosen to be stable. In
fact, in some cases the matrix A-K
e
C-BKmay be poorly stable or even unstable.
EXAMPLE 10–7
Consider the design of a regulator system for the following plant:
(10–75)
(10–76)
where
Suppose that we use the pole-placement approach to the design of the system and that the
desired closed-loop poles for this system are at s=m
i
(i=1, 2), wherem
1
=–1.8+j2.4 and
m
2
=–1.8-j2.4. The state-feedback gain matrix Kfor this case can be obtained as follows:
Using this state-feedback gain matrix K, the control signal uis given by
Suppose that we use the observed-state feedback control instead of the actual-state feedback
control, or
where we choose the observer poles to be at
s=–8, s=–8
Obtain the observer gain matrix K
e
and draw a block diagram for the observed-state feedback
control system. Then obtain the transfer function for the observer controller, and
draw another block diagram with the observer controller as a series controller in the feedforward
path. Finally, obtain the response of the system to the following initial condition:
x(0)=
B
1
0
R
,
  
e(0)=x(0)-x/H33522(0)=
B
0.5
0
R
U(s) /H20862[-Y(s)]u=-Kx/H33522=-[29.6
 
3.6]
B
x/H33522
1
x/H33522
2
R
u=-Kx=-[29.6
 
3.6]
B
x
1
x
2
R
K=[29.6
 
3.6]A=
B
0
20.61
0
R
,
  
B=
B
0
1
R
,
  
C=[1
 
0] y=Cx x#=Ax+Bu
A-K
e
  
C-BK
R(s)= 0 Y(s) U(s)
Plant–Y(s)
K(sI– A + K
e
C+ BK)
–1
K
e
+–
Figure 10–13
Block diagram
representation of
system with a
controller-observer.
Openmirrors.com
Section 10–5 / State Observers 763For the system defined by Equation (10–75), the characteristic polynomial is
Thus,
The desired characteristic polynomial for the observer is
Hence,
For the determination of the observer gain matrix, we use Equation (10–61), or
where
Hence,
(10–77)
Equation (10–77) gives the observer gain matrix Ke.The observer equation is given by Equation
(10–60):
(10–78)
Since
Equation (10–78) becomes
or
The block diagram of the system with observed-state feedback is shown in Figure 10–14(a). =B-16
-93.61
-3.6RBx/H33522
1
x/H33522
2R+B16
84.6Ry Bx/H11343
1
x/H11343
2R=bB0
20.61
0R-B16
84.6R[1 0]-B0
1R[29.6 3.6]rBx/H33522
1
x/H33522
2R+B16
84.6Ryx/H11343=AA-Ke  C-BKBx/H33522+Ke yu=-Kx/H33522x/H11343=AA-Ke  CBx/H33522+Bu+Ke y =B0
11
0RB84.6
16R=B16
84.6R Ke=bB0
11
0RB100
1Rr-1
B64+20.6
16-0R W=Ba1
11
0R=B011
0R N=[C*/H21752A*C*]=B1
00
1RKe=(WN*)-1Ba2-a2
a1-a1Ra1=16,  a2=64 =s2+a1 s+a2 As-m1BAs-m2B=(s+8)(s +8)=s2+16s +64a1=0,  a2=-20.6∑s I-A∑=2s
-20.6-1
s2=s2-20.6 =s2+a1 s+a2
764
Chapter 10 / Control Systems Design in State Space
Referring to Equation (10–74), the transfer function of the observer-controller is
As a matter of course, the same transfer function can be obtained with MATLAB. For example,
MATLAB Program 10–8 produces the transfer function of the observer controller. Figure 10–14(b)
shows a block diagram of the system.=778.2 s+3690.7
s
2
+19.6s+151.2=[29.6
 
3.6]
B
s+16
93.6-1
s+3.6
R
-1
B
16
84.6
R
U(s)
-Y(s)=KAs
 
I-A+K
e
  
C+BKB
-1
 
K
e
++
–+
R(s) = 0 Y(s) U(s) –Y(s)1
s
2
 – 20.6
+–
(b)
u/H20848
/H20848y
xx
~
CAC
–KB
B0
1
0
1
1  0
1  0
0
20.61
0
0
20.61
0
16
84.6
–29.6   –3.6
++
++
(a)
778.2 s + 3690.7
s
2
 + 19.6 s + 151.2
Figure 10–14
(a) Block diagram of
system with
observed-state
feedback; (b) block
diagram of transfer-
function system.
Openmirrors.com
Section 10–5 / State Observers 765MATLAB Program 10–8
% Obtaining transfer function of observer controller --- full-order observerA = [0  1;20.6  0];
B = [0;1];C = [1  0];K = [29.6  3.6];Ke = [16;84.6];AA = A-Ke*C-B*K;BB = Ke;CC = K;DD = 0;[num,den] = ss2tf(AA,BB,CC,DD)
num =
1.0e+003*
0   0.7782   3.6907
den =
1.0000  19.6000  151.2000
The dynamics of the observed-state feedback control system just designed can be described
by the following equations: For the plant,
For the observer,
The system, as a whole, is of fourth order. The characteristic equation for the system is
The characteristic equation can also be obtained from the block diagram for the system shown in
Figure 10–14(b). Since the closed-loop transfer function is
Y(s)
R(s)=778.2 s+3690.7
As2+19.6s+151.2BAs2-20.6B+778.2 s+3690.7=s4+19.6s3+130.6 s2+374.4 s+576 =0@s I-A+BK@@s I-A+Ke  C@=As2+3.6s+9BAs2+16s+64B u=-[29.6 3.6]Bx/H33522
1
x/H33522
2R Bx/H11343
1
x/H11343
2R=B-16
-93.61
-3.6RBx/H33522
1
x/H33522
2R+B16
84.6Ry y=[1 0]Bx1
x2R Bx#
1
x#
2R=B0
20.61
0RBx1
x2R+B01Ru
766
Chapter 10 / Control Systems Design in State Space
MATLAB Program 10–9
A = [0  1; 20.6  0];
B = [0;1];
C = [1  0];
K = [29.6  3.6];
Ke = [16; 84.6];
sys = ss([A-B*K  B*K; zeros(2,2)  A-Ke*C],eye(4),eye(4),eye(4));
t = 0:0.01:4;
z = initial(sys,[1;0;0.5;0],t);
x1 = [1  0  0  0]*z';
x2 = [0  1  0  0]*z';
e1 = [0  0  1  0]*z';
e2 = [0  0  0  1]*z';
subplot(2,2,1); plot(t,x1 ),grid
title('Response to Initial Condition')
ylabel('state variable x1')
subplot(2,2,2); plot(t,x2),grid
title('Response to Initial Condition')
ylabel('state variable x2')
subplot(2,2,3); plot(t,e1),grid
xlabel('t (sec)'), ylabel('error state variable e1')
subplot(2,2,4); plot(t,e2),grid
xlabel('t (sec)'), ylabel('error state variable e2')
the characteristic equation is
As a matter of course, the characteristic equation is the same for the system in state-space
representation and in transfer-function representation.
Finally, we shall obtain the response of the system to the following initial condition:
Referring to Equation (10–70), the response to the initial condition can be determined from
A MATLAB Program to obtain the response is shown in MATLAB Program 10–9.The resulting
response curves are shown in Figure 10–15.
B
x#
e#
R
=
B
A-BK
0BK
A-K
e
 
C
RB
x
e
R
,
  
B
x(0)
e(0)
R
=
D
1
0
0.5
0
T
x(0)=
B
1
0
R
,
  
e(0)=
B
0.5
0
R
=s
4
+19.6s
3
+130.6 s
2
+374.4 s+576 =0As
2
+19.6s+151.2BAs
2
-20.6B+778.2 s+3690.7
Openmirrors.com
Section 10–5 / State Observers 767uy x
y/H20848
PlantC
AB
–Kx~
Minimum-order
observerTransformation++
Figure 10–16
Observed-statefeedback control
system with a
minimum-orderobserver.Minimum-Order Observer. The observers discussed thus far are designed to
reconstruct all the state variables. In practice, some of the state variables may be accu-rately measured. Such accurately measurable state variables need not be estimated.
Suppose that the state vector xis an n-vector and the output vector yis an m-vector
that can be measured. Since moutput variables are linear combinations of the state
variables, mstate variables need not be estimated. We need to estimate only n-m
state variables. Then the reduced-order observer becomes an ( n-m )th-order observ-
er. Such an ( n-m )th-order observer is the minimum-order observer. Figure 10–16
shows the block diagram of a system with a minimum-order observer.Response to Initial Condition Response to Initial Conditionstate variable x1
state variable x2error state variable e1
error state variable e21.5
1
0.5
0
01234
0123401234
012
t (sec) t (sec)34−0.5
−0.100.10.20.30.40.50.6
−1.5−1−0.500.5
0
−0.5
−1.5−1
−2
−2.5
Figure 10–15
Response curves toinitial condition.
768
Chapter 10 / Control Systems Design in State Space
It is important to note, however, that if the measurement of output variables involves
significant noises and is relatively inaccurate, then the use of the full-order observer
may result in a better system performance.
To present the basic idea of the minimum-order observer, without undue mathe-
matical complications, we shall present the case where the output is a scalar (that is,
m=1 ) and derive the state equation for the minimum-order observer. Consider the
system
(10–79)
(10–80)
where the state vector xcan be partitioned into two parts x
a
(a scalar) and x
b
Can
(n-1) -vectorD. Here the state variable x
a
is equal to the output yand thus can be
directly measured, and x
b
is the unmeasurable portion of the state vector. Then the
partitioned state and output equations become
(10–81)
(10–82)
where
From Equation (10–81), the equation for the measured portion of the state becomes
or
(10–83)
The terms on the left-hand side of Equation (10–83) can be measured. Equation (10–83)
acts as the output equation. In designing the minimum-order observer, we consider the
left-hand side of Equation (10–83) to be known quantities.Thus, Equation (10–83) relates
the measurable quantities and unmeasurable quantities of the state.
From Equation (10–81), the equation for the unmeasured portion of the state
becomes
(10–84)
Noting that terms A
ba
x
a
andB
b
uare known quantities, Equation (10–84) describes the
dynamics of the unmeasured portion of the state.x#
b
=A
ba
 
x
a
+A
bb
  
x
b
+B
b
 
ux#
a
-A
aa
 
x
a
-B
a
 
u=A
ab
  
x
b
x#
a
=A
aa
 
x
a
+A
ab
  
x
b
+B
a
 
u B
b
=(n-1)*1 matrix B
a
=scalar A
bb
=(n-1)*(n-1) matrix A
ba
=(n-1)*1 matrix A
ab
=1*(n-1) matrix A
aa
=scalar y=[1/H217520]
c
x
a
x
b
d
 
c
x#
a
x#
b
d
=
c
A
aa
A
ba
 
A
ab
A
bb
dc
x
a
x
b
d
+
c
B
a
B
b
d
u y=Cx x#=Ax+Bu
Openmirrors.com
Section 10–5 / State Observers 769Full-Order State Observer Minimum-Order State Observer
AAbb
Bu
y
CAab
Ke    (n*1 matrix) Ke    [(n-1)*1 matrix]x#
a-Aaa xa-Ba uAba xa+Bb ux/H33522
b x/H33522Table 10–1 List of Necessary Substitutions for Writing
the Observer Equation for the Minimum-OrderState ObserverIn what follows we shall present a method for designing a minimum-order observer.
The design procedure can be simplified if we utilize the design technique developed forthe full-order state observer.
Let us compare the state equation for the full-order observer with that for the
minimum-order observer. The state equation for the full-order observer is
and the “state equation” for the minimum-order observer isThe output equation for the full-order observer isand the “output equation” for the minimum-order observer isThe design of the minimum-order observer can be carried out as follows: First, note that
the observer equation for the full-order observer was given by Equation (10–57), whichwe repeat here:
(10–85)
Then, making the substitutions of Table 10–1 into Equation (10–85), we obtain
(10–86)
where the state observer gain matrix K
eis an (n-1)*1 matrix. In Equation (10–86),
notice that in order to estimate , we need the derivative of xa.This presents a difficulty,
because differentiation amplifies noise. If xa(=y)is noisy, the use of is unacceptable. x#
ax/H33522
bx/H11343
b=AAbb-Ke  AabBx/H33522
b+Aba xa+Bb u+KeAx#
a-Aaa xa-Ba uBx/H11343=AA-Ke  CBx/H33522+Bu+Ke yx#
a-Aaa xa-Ba u=Aab  xby=Cxx#
b=Abb  xb+Aba xa+Bb ux#=Ax+Bu
770
Chapter 10 / Control Systems Design in State Space
To avoid this difficulty, we eliminate in the following way. First rewrite Equation
(10–86) as
(10–87)
Define
and
(10–88)
Then Equation (10–87) becomes
(10–89)
Define
Then Equation (10–89) becomes
(10–90)
Equation (10–90) and Equation (10–88) together define the minimum-order observer.
Since
where 0is a row vector consisting of (n-1) zeros, if we define
then we can write in terms of and yas follows:
(10–91)
This equation gives the transformation from 
Figure 10–17 shows the block diagram of the observed-state feedback control system
with the minimum-order observer, based on Equations (10–79), (10–80), (10–90), (10–91)
and
Next we shall derive the observer error equation. Using Equation (10–83), Equation
(10–86) can be modified to
(10–92) x
/H11343
b
=AA
bb
-K
e
  
A
ab
Bx/H33522
b
+A
ba
 
x
a
+B
b
 
u+K
e
  
A
ab
  
x
b
u=-Kx/H33522.H/H33522 to x/H33522.x/H33522=C
ˆ
H/H33522+D
ˆ
yH/H33522x/H33522C
ˆ
=
c
0
I
n-1
d
,
  
D
ˆ
=
c
1
K
e
d
x/H33522=
c
x
a
x/H33522
b
d
=
c
y
x/H33522
b
d
=
c
0
I
n-1
d
Cx/H33522
b
-K
e
 
yD+
c
1
K
e
d
yy=C1/H217520D
c
x
a
x
b
d
H
/H11343
=A
ˆ
H/H33522+B
ˆ
y+F
ˆ
u F
ˆ
=B
b
-K
e
  
B
a
 B
ˆ
=A
ˆ
K
e
+A
ba
-K
e
 
A
aa
 A
ˆ
=A
bb
-K
e
  
A
ab
 + A
ba
-K
e
 
A
aa
Dy+AB
b
-K
e
 
B
a
Bu H
/H11343
=AA
bb
-K
e
  
A
ab
BH/H33522+CAA
bb
-K
e
  
A
ab
BK
e
x/H33522
b
-K
e
 
y=x/H33522
b
-K
e
 
x
a
=H/H33522x
b
-K
e
 
y=x
b
-K
e
 
x
a
=H + AB
b
-K
e
 
B
a
Bu + CAA
bb
-K
e
  
A
ab
BK
e
+A
ba
-K
e
 
A
aa
Dy =AA
bb
-K
e
  
A
ab
BAx/H33522
b
-K
e
 
yB x
/H11343
b
-K
e
 
x#
a
=AA
bb
-K
e
  
A
ab
Bx/H33522
b
+AA
ba
-K
e
 
A
aa
By+AB
b
-K
e
 
B
a
Bux#
a
Openmirrors.com
Section 10–5 / State Observers 771u y x
x/H20848
/H20848C B
–K
Minimum-order observer
Transformation~
~h~h.++
+
++
+
+
DCF
ABx.
^
^^
^A
^
By subtracting Equation (10–92) from Equation (10–84), we obtain
(10–93)
Define
Then Equation (10–93) becomes
(10–94)
This is the error equation for the minimum-order observer. Note that eis an (n-1) -
vector.
The error dynamics can be chosen as desired by following the technique developed
for the full-order observer, provided that the rank of matrix
isn-1. (This is the complete observability condition applicable to the minimum-order
observer.)FAab
Aab  Abb
/H11080
/H11080/H11080
A
ab  An-2
bbVe#=AAbb-Ke  AabBee=xb-x/H33522
b=H-H/H33522x#
b-x/H11343
b=AAbb-Ke  AabBAxb-x/H33522
bBFigure 10–17
System withobserved-state
feedback, where the
observer is theminimum-orderobserver.
772
Chapter 10 / Control Systems Design in State Space
The characteristic equation for the minimum-order observer is obtained from
Equation (10–94) as follows:
(10–95)
where are desired eigenvalues for the minimum-order observer. The
observer gain matrix K
e
can be determined by first choosing the desired eigenvalues for
the minimum-order observer [that is, by placing the roots of the characteristic equation,
Equation (10–95), at the desired locations] and then using the procedure developed for
the full-order observer with appropriate modifications. For example, if the formula for
determining matrix K
e
given by Equation (10–61) is to be used, it should be modified to
(10–96)
where K
e
is an matrix and
Note that are coefficients in the characteristic equation for the state
equation
Also, if Ackermann’s formula given by Equation (10–65) is to be used, then it should be
modified to
(10–97) K
e
=fAA
bb
B
G
A
ab
A
ab
  
A
bb
/H11080
/H11080
/H11080
A
ab
  
A
n-3
bb
A
ab
  
A
n-2
bb
W
-1
G
0
0
/H11080
/H11080
/H11080
0
1
W
@s
 
I-A
bb
@=s
n-1
+a
ˆ
1
 
s
n-2
+p+a
ˆ
n-2
 
s+a
ˆ
n-1
=0a
ˆ
1
 
,a
ˆ
2
 
,p,a
ˆ
n-2
W
ˆ
=
G
a
ˆ
n-2
a
ˆ
n-3
/H11080
/H11080
/H11080
a
ˆ
1
1a
ˆ
n-3
a
ˆ
n-4
/H11080
/H11080
/H11080
1
0p
p
p
pa
ˆ
1
1
/H11080
/H11080
/H11080
0
01
0
/H11080
/H11080
/H11080
0
0
W
=(n-1)*(n-1) matrixN
ˆ
=CA
ab
*/H21752A
bb
*
 
A
ab
*/H21752p/H21752AA
bb
*B
n-2
 
A
ab
*D=(n-1)*(n-1) matrix(n-1)*1K
e
=Q
ˆ
F
a
ˆ
n-1
-a
ˆ
n-1
a
ˆ
n-2
-a
ˆ
n-2
/H11080
/H11080
/H11080
a
ˆ
1
-a
ˆ
1
V
=AW
ˆ
N
ˆ
*B
-1
F
a
ˆ
n-1
-a
ˆ
n-1
a
ˆ
n-2
-a
ˆ
n-2
/H11080
/H11080
/H11080
a
ˆ
1
-a
ˆ
1
V
m
1
 
, m
2
 
,p, m
n-1
 =s
n-1
+a
ˆ
1
 
s
n-2
+p+a
ˆ
n-2
 
s+a
ˆ
n-1
=0 @s
 
I-A
bb
+K
e
  
A
ab
@=As-m
1
BAs-m
2
B p As-m
n-1
B
Openmirrors.com
Section 10–5 / State Observers 773where
Observed-State Feedback Control System with Minimum-Order Observer.
For the case of the observed-state feedback control system with full-order state observer,we have shown that the closed-loop poles of the observed-state feedback control systemconsist of the poles due to the pole-placement design alone, plus the poles due to theobserver design alone. Hence, the pole-placement design and the full-order observerdesign are independent of each other.
For the observed-state feedback control system with minimum-order observer, the
same conclusion applies. The system characteristic equation can be derived as
(10–98)
(See Problem A–10–11 for the details.) The closed-loop poles of the observed-state feed-
back control system with a minimum-order observer comprise the closed-loop polesdue to pole placement Cthe eigenvalues of matrix ( A-BK)Dand the closed-loop poles
due to the minimum-order observer Cthe eigenvalues of matrix ( A
bb-KeAab)D.There-
fore, the pole-placement design and the design of the minimum-order observer areindependent of each other.
Determining Observer Gain Matrix K
ewith MATLAB. Because of the duality
of pole-placement and observer design, the same algorithm can be applied to both thepole-placement problem and the observer-design problem. Thus, the commands acker
andplace can be used to determine the observer gain matrix K
e.
The closed-loop poles of the observer are the eigenvalues of matrix A-KeC.T h e
closed-loop poles of the pole-placement are the eigenvalues of matrix A-BK.
Referring to the duality problem between the pole-placement problem and observer-
design problem, we can determine Keby considering the pole-placement problem for the
dual system. That is, we determine Keby placing the eigenvalues of A*-C*Keat the
desired place. Since Ke=K*, for the full-order observer we use the command
Ke= acker(A',C',L)'
where Lis the vector of the desired eigenvalues for the observer. Similarly, for the full-
order observer, we may use
Ke= place(A',C',L)'
provided Ldoes not include multiple poles. [In the above commands, prime ( ') indicates
the transpose.] For the minimum-order (or reduced-order) observers, use the followingcommands:
K
e= acker(Abb',Aab',L)'
or
Ke= place(Abb',Aab',L)'@s I-A+BK@@s I-Abb+Ke  Aab@=0fAAbbB=An-1
bb+aˆ1  An-2
bb+p+aˆn-2  Abb+aˆn-1  I
774
Chapter 10 / Control Systems Design in State Space
EXAMPLE 10–8
Consider the system
where
Let us assume that we want to place the closed-loop poles at
Then the necessary state-feedback gain matrix Kcan be obtained as follows:
K=[90 29 4]
(See MATLAB Program 10–10 for a MATLAB computation of this matrix K.)
Next, let us assume that the output ycan be measured accurately so that state variable x
1
(which is equal to y) need not be estimated. Let us design a minimum-order observer. (The
minimum-order observer is of second order.) Assume that we choose the desired observer poles
to be at
s=–10, s=–10
Referring to Equation (10–95), the characteristic equation for the minimum-order observer is
In what follows, we shall use Ackermann’s formula given by Equation (10–97).
(10–99)
where
Since
we have
A
bb
=
B
0
-111
-6
R
,
  
B
a
=0,
  
B
b
=
B
0
1
R
A
aa
=0,
  
A
ab
=[1
 
0],
  
A
ba
=
B
0
-6
R
x/H33522=
c
x
a
x/H33522
b
d
=
D
x
1
x/H33522
2
x/H33522
3
T
 
,
  
A=
D
0
0
-61
0
-110
1
-6
T
,
  
B=
D
0
0
1
T
fAA
bb
B=A
2
bb
+a
ˆ
1
  
A
bb
+a
ˆ
2
  
I=A
2
bb
+20A
bb
+100IK
e
=fAA
bb
B
C
A
ab
A
ab
  
A
bb
S
-1
B
0
1
R
 =s
2
+20s +100 =0 =(s+10)(s +10) @s
 
I-A
bb
+K
e
  
A
ab
@=As-m
1
BAs-m
2
Bs
1
=-2+j213
,
  
s
2
=-2-j213
,
  
s
3
=-6A=
C
0
0
-61
0
-110
1
-6
S
,
  
B=
C
0
0
1
S
,
  
C=[1
 
0
 
0] y=Cx x#=Ax+Bu
Openmirrors.com
Section 10–5 / State Observers 775MATLAB Program 10–10
A = [0  1  0;0  0  1;-6  -11  -6];
B = [0;0;1];J = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)  -6];K = acker(A,B,J)
K =
90.0000    29.0000    4.0000
Abb = [0  1;-11  -6];
Aab = [1  0];L = [-10  -10];Ke = acker(Abb',Aab',L)'
Ke =
14
5Equation (10–99) now becomes
(A MATLAB computation of this Keis given in MATLAB Program 10–10.) =B89
-15414
5RB01R=B14
5R Ke=bB0
-111
-6R2
+20B0
-111
-6R+100B1
00
1RrB100
1R-1
B0
1R
Referring to Equations (10–88) and (10–89), the equation for the minimum-order observer can
be given by
(10–100)
where
Noting that
the equation for the minimum-order observer, Equation (10–100), becomes
or
Bh/H11343
2
h/H11343
3R=B-14
-161
-6RBh/H33522
2
h/H33522
3R+B-191
-260Ry+B0
1Ru+B0
-6R-B14
5R0ry+bB0
1R-B14
5R0ruBh/H11343
2
h/H11343
3R=B-14
-161
-6RBh/H33522
2
h/H33522
3R+bB-14
-161
-6RB14
5RAbb-Ke  Aab=B0
-111
-6R-B14
5R[1 0]=B-14
-161
-6RH/H33522=x/H33522
b-Ke y=x/H33522
b-Ke x1H/H11343=AAbb-Ke  AabBH/H33522+CAAbb-Ke  AabBKe+Aba-Ke AaaDy+ABb-Ke BaBu
776
Chapter 10 / Control Systems Design in State Space
where
or
If the observed-state feedback is used, then the control signal ubecomes
where Kis the state feedback gain matrix. Figure 10–18 is a block diagram showing the configu-
ration of the system with observed-state feedback, where the observer is the minimum-order
observer.u=-Kx/H33522=-K
C
x
1
x/H33522
2
x/H33522
3
SB
x/H33522
2
x/H33522
3
R
=
B
h/H33522
2
h/H33522
3
R
+K
e
 
x
1
B
h/H33522
2
h/H33522
3
R
=
B
x/H33522
2
x/H33522
3
R
-K
e
 
y
u y x
x/H20848
/H20848PlantC
AB
Minimum-order observer
Transformation0
1
0
h
~~
~0
1
0
0
0
1
x
1
K
e
x
1
1
K
e
1
14
5
0
–6
14
5
–14
–16
1
–6B
b
– K
e
B
a
A
bb
– K
e
A
ab
A
ba
– K
e
A
aa
h~h.
K
e
++
+
++
+
+
+
+
[ –90–29–4 ]–K
Figure 10–18
System with observed state feedback, where the observer is the minimum-order observer designed in
Example 10–8.
Openmirrors.com
Section 10–5 / State Observers 777Transfer Function of Minimum-Order Observer-Based Controller. In the
minimum-order observer equation given by Equation (10–89):
define, similar to the case of the derivation of Equation (10–90),
Then, the following three equations define the minimum-order oberver:
(10–101)(10–102)(10–103)
Since Equation (10–103) can be rewritten as
(10–104)
by substituting Equation (10–104) into Equation (10–101), we obtain
(10–105)
Define
Then Equations (10–105) and (10–104) can be written as
(10–106)(10–107)
Equations (10–106) and (10–107) define the minimum-order observer-based controller.
By considering uas the output and –yas the input, U(s)can be written as
Since the input to the observer controller is –Y(s), rather than Y(s), the transfer function
of the observer controller is
(10–108)
This transfer function can be easily obtained by using the following MATLAB statement:
[num,den] = ss2tf(Atilde, Btilde, -Ctilde, -Dtilde) (10–109)U(s)
-Y(s)=num
den=-CC/H33522As I-A/H33522B-1B/H33522+D/H33522D =-CC/H33522As I-A/H33522B-1B/H33522+D/H33522D[-Y(s)] U(s) =CC/H33522As I-A/H33522B-1B/H33522+D/H33522DY(s) u=C/H33522H/H33522+D/H33522y H/H11343=A/H33522H/H33522+B/H33522yD/H33522=-AKa+Kb  KeBC/H33522=-KbB/H33522=Bˆ-FˆAKa+Kb  KeBA/H33522=Aˆ-FˆKb =AAˆ-FˆKbBH/H33522+CBˆ-FˆAKa+Kb  KeBDy H/H11343=AˆH/H33522+Bˆy+FˆC-KbH/H33522-AKa+Kb  KeByD =-KbH/H33522-AKa+Kb  KeBy u=-Kx/H33522=-CKa KbDBy
x/H33522
bR=-Ka y-Kb  x/H33522
b u=-Kx/H33522 H/H33522=x/H33522
b-Ke y H/H11343=AˆH/H33522+Bˆy+Fˆu Fˆ=Bb-Ke Ba Bˆ=AˆKe+Aba-Ke Aaa Aˆ=Abb-Ke AabH/H11343=AAbb-Ke AabBH/H33522+CAAbb-Ke  AabBKe+Aba-Ke  AaaDy+ABb-Ke BaBu
778
Chapter 10 / Control Systems Design in State Space
10–6 DESIGN OF REGULATOR SYSTEMS WITH OBSERVERS
In this section we shall consider a problem of designing regulator systems by using the
pole-placement-with-observer approach.
Consider the regulator system shown in Figure 10–19. (The reference input is zero.)
The plant transfer function is
Using the pole-placement approach, design a controller such that when the system is
subjected to the following initial condition:
where xis the state vector for the plant and eis the observer error vector, the maximum
undershoot of y(t) is 25 to 35 %and the settling time is about 4 sec.Assume that we use
the minimum-order observer. (We assume that only the output yis measurable.)
We shall use the following design procedure:
1.Derive a state-space model of the plant.
2.Choose the desired closed-loop poles for pole placement. Choose the desired
observer poles.
3.Determine the state feedback gain matrix Kand the observer gain matrix K
e
.
4.Using the gain matrices KandK
e
obtained in step 3, derive the transfer function of
the observer controller. If it is a stable controller, check the response to the given ini-
tial condition. If the response is not acceptable, adjust the closed-loop pole location
and/or observer pole location until an acceptable response is obtained.
Design step 1: We shall derive the state-space representation of the plant. Since the
plant transfer function is
the corresponding differential equation is
Referring to Section 2–5, let us define the state variables x
1
, x
2
,andx
3
as follows:
 x
3
=x#
2
-b
2
 
u x
2
=x#
1
-b
1
 
u x
1
=y-b
0
 
uy%+10y$+24y#=10u#+20uY(s)
U(s)=10(s +2)
s(s+4)(s +6)x(0)=
C
1
0
0
S
,
  
e(0)=
B
1
0
R
G(s) =10(s +2)
s(s+4)(s +6)
r= 0 y u
Plant–y
Controller
+–
Figure 10–19
Regulator system.
Openmirrors.com
Section 10–6 / Design of Regulator Systems with Observers 779Also, is defined by
where and
[See Equation (2–35) for the calculation of b’s.] Then the state-space equation and out-
put equation can be obtained as
Design step 2: As the first trial, let us choose the desired closed-loop poles at
s=–1+j2, s=–1-j2, s=–5
and choose the desired observer poles at
s=–10, s=–10
Design step 3: We shall use MATLAB to compute the state feedback gain matrix K
and the observer gain matrix Ke.MATLAB Program 10–11 produces matrices KandKe. y=[1 0 0]Cx1
x2
x3S+[0]u Cx#
1
x#
2
x#
3S=C0
001
0
-240
1
-10SCx1
x2
x3S+C0
10
-80Sub3=-80. b2=10, b1=0, b0=0,=-24x2-10x3+b3 ux#
3=-a3x1-a2x2-a1x3+b3ux#
3
MATLAB Program 10–11
% Obtaining the state feedback gain matrix KA = [0  1  0;0  0  1;0  -24  -10];
B = [0;10;-80];C = [1  0  0];J = [-1+j*2  -1-j*2  -5];K = acker(A,B,J)
K =
1.2500    1.2500    0.19375
% Obtaining the observer gain matrix KeAaa = 0; Aab = [1  0]; Aba = [0;0]; Abb = [0  1;-24  -10];Ba = 0; Bb = [10;-80];
L = [-10  -10];Ke = acker(Abb',Aab',L)'
Ke =
10
-24
780
Chapter 10 / Control Systems Design in State Space
MATLAB Program 10–12
% Determination of transfer function of observer controller
A = [0  1  0;0  0  1;0  -24  -10];
B = [0;10;-80];
Aaa = 0; Aab = [1  0]; Aba = [0;0]; Abb = [0  1;-24  -10];
Ba = 0; Bb = [10;-80];
Ka = 1.25; Kb = [1.25    0.19375];
Ke = [10;-24];
Ahat = Abb - Ke*Aab;
Bhat = Ahat*Ke + Aba - Ke*Aaa;
Fhat = Bb - Ke*Ba;
Atilde = Ahat - Fhat*Kb;
Btilde = Bhat - Fhat*(Ka + Kb*Ke);
Ctilde = -Kb;
Dtilde = -(Ka + Kb*Ke);
[num,den] = ss2tf(Atilde, Btilde, -Ctilde, -Dtilde)
num =
9.1000  73.5000  125.0000
den =
1.0000  17.0000  -30.0000
In the program, matrices JandLrepresent the desired closed-loop poles for pole place-
ment and the desired poles for the observer, respectively. The matrices Kand K
e
are
obtained as
Design step 4: We shall determine the transfer function of the observer controller.
Referring to Equation (10–108), the transfer function of the observer controller can be
given by
We shall use MATLAB to calculate the transfer function of the observer controller.
MATLAB Program 10–12 produces this transfer function. The result is
Define the system with this observer controller as System 1. Figure 10–20 shows the
block diagram of System 1. =9.1(s +5.6425)(s +2.4344)
(s+18.6119)(s -1.6119) G
c
(s)=9.1s
2
+73.5s +125
s
2
+17s -30G
c
(s)=U(s)
-Y(s)=num
den=-CC/H33522As
 
I-A/H33522B
-1
B/H33522+D/H33522D K
e
=
B
10
-24
R
 K=[1.25
 
1.25
 
0.19375]
Openmirrors.com
Section 10–6 / Design of Regulator Systems with Observers 781MATLAB Program 10–13
% Obtaining the characteristic equation[num1,den1] = ss2tf(A-B*K,eye(3),eye(3),eye(3),1);
[num2,den2] = ss2tf(Abb-Ke*Aab,eye(2),eye(2),eye(2),1);charact_eq = conv(den1,den2)
charact_eq =
1.0e+003*0.0010   0.0270   0.2550   1.0250   2.0000   2.5000r= 0 y u
+–9.1s2+ 73.5 s+ 125
s2+17s–3010(s+ 2)
s(s+ 4) (s+ 6)
Observer controller Plant
The observer controller has a pole in the right-half splane (s=1.6119). The exis-
tence of an open-loop right-half splane pole in the observer controller means that the
system is open-loop unstable, although the closed-loop system is stable. The latter canbe seen from the characteristic equation for the system:
(See MATLAB Program 10–13 for the calculation of the characteristic equation.)
A disadvantage of using an unstable controller is that the system becomes unstable
if the dc gain of the system becomes small. Such a control system is neither desirable noracceptable. Hence, to get a satisfactory system, we need to modify the closed-loop polelocation and/or observer pole location. =(s+1+j2)(s +1-j2)(s +5)(s +10)(s +10) =0 =s
5+27s4+255s3+1025s2+2000s +2500∑s I-A+BK∑/H11554@s I-Abb+Ke  Aab@Figure 10–20
Block diagram ofSystem 1.
Second trial: Let us keep the desired closed-loop poles for pole placement as before,
but modify the observer pole locations as follows:
s=–4.5, s=–4.5
Thus,
L=[–4.5 –4.5]
Using MATLAB, we find the new Keto be
Ke=B-1
6.25R
782
Chapter 10 / Control Systems Design in State Space
MATLAB Program 10–14
% Determination of transfer function of observer controller.
A = [0  1  0;0  0  1;0  -24  -10];
B = [0;10;-80];
Aaa = 0; Aab = [1  0]; Aba = [0;0]; Abb = [0  1;-24  -10];
Ba = 0; Bb = [10;-80];
Ka = 1.25; Kb = [1.25  0.19375];
Ke = [-1;6.25];
Ahat = Abb - Ke*Aab;
Bhat = Ahat*Ke + Aba - Ke*Aaa;
Fhat = Bb - Ke*Ba;
Atilde = Ahat - Fhat*Kb;
Btilde = Bhat - Fhat*(Ka + Kb*Ke);
Ctilde = -Kb;
Dtilde = -(Ka + Kb*Ke);
[num,den] = ss2tf(Atilde,Btilde,-Ctilde,-Dtilde)
num =
1.2109  11.2125  25.3125
den =
1.0000  6.0000  2.1406
Next, we shall obtain the transfer function of the observer controller. MATLAB
Program 10–14 produces this transfer function as follows:
 =1.2109(s +5.3582)(s +3.9012)
(s+5.619)(s +0.381) G
c
(s)=1.2109s
2
+11.2125s +25.3125
s
2
+6s+2.1406
Notice that this is a stable controller. Define the system with this observer controller as
System 2. We shall proceed to obtain the response of System 2 to the given initial
condition:
By substituting into the state-space equation for the plant, we obtain
(10–110) =Ax-BK
b
x-
B
0
e
R
r
=Ax-BKx +BCK
a
 
K
b
D
B
0
e
R
x#=Ax-BK x/H33522=Ax-BK
B
x
a
x/H33522
b
R
=Ax-BK
B
x
a
x
b
-e
R
u=-Kx/H33522x(0)=
C
1
0
0
S
,
  
e(0)=
B
1
0
R
Openmirrors.com
Section 10–6 / Design of Regulator Systems with Observers 783The error equation for the minimum-order observer is
(10–111)
By combining Equations (10–110) and (10–111), we get
with the initial condition
MATLAB Program 10–15 produces the response to the given initial condition. The
response curves are shown in Figure 10–21.They seem to be acceptable.Bx(0)
e(0)R=E1
0010
UBx#
e#R=BA-BK
0BKb
Abb-Ke AabRBx
eRe#=AAbb-Ke  AabBe
MATLAB Program 10–15
% Response to initial condition.
A = [0  1  0;0  0  1;0  -24  -10];
B = [0;10;-80];K = [1.25  1.25  0.19375];Kb = [1.25  0.19375];Ke = [-1;6.25];Aab = [1  0]; Abb = [0  1;-24  -10];AA = [A-B*K  B*Kb; zeros(2,3)  Abb-Ke*Aab];sys = ss(AA,eye(5),eye(5),eye(5));t = 0:0.01:8;x = initial(sys,[1;0;0;1;0],t);x1 = [1  0  0  0  0]*x';x2 = [0  1  0  0  0]*x';x3 = [0  0  1  0  0]*x';e1 = [0  0  0  1  0]*x';e2 = [0  0  0  0  1]*x';
subplot(3,2,1); plot(t,x1); grid
xlabel ('t (sec)'); ylabel('x1')
subplot(3,2,2); plot(t,x2); grid
xlabel ('t (sec)'); ylabel('x2')
subplot(3,2,3); plot(t,x3); grid
xlabel ('t (sec)'); ylabel('x3')
subplot(3,2,4); plot(t,e1); grid
xlabel('t (sec)'); ylabel('e1')
subplot(3,2,5); plot(t,e2); grid
xlabel('t (sec)'); ylabel('e2')
784
Chapter 10 / Control Systems Design in State Space
Next, we shall check the frequency-response characteristics.The Bode diagram of the
open-loop system just designed is shown in Figure 10–22.The phase margin is about 40°
and the gain margin is ±qdB.The Bode diagram of the closed-loop system is shown in
Figure 10–23. The bandwidth of the system is approximately 3.8 rad/sec.
x
1
02468
t (sec)
02468
t (sec)
02468
t (sec)
02468
t (sec)
02468
t (sec)
−0.500.51
e
2
−3−2−10
x
2
−1.5−0.5
−100.5
x
3
−55
01015
e
1
01
0.51.5
Figure 10–21
Response to the
given initial
condition; x
1
(0)=1,
x
2
(0)=0, x
3
(0)=0,
e
1
(0)=1, e
2
(0)=0.
Frequency (rad/sec)Bode Diagram of System 2 — Open Loop
−200−150−100−50−100
Phase (deg); Magnitude (dB)
−50050100
10
−3
10
−2
10
−1
10
0
10
1
10
2
Figure 10–22
Bode diagram for the
open-loop transfer
function of System 2.
Openmirrors.com
Section 10–6 / Design of Regulator Systems with Observers 785Finally, we shall compare the root-locus plots of the first system with L=[–10 –10]
and the second system with L=[–4.5 –4.5]. The plot for the first system given in
Figure 10–24(a) shows that the system is unstable for small dc gain and becomes stablefor large dc gain. The plot for the second system given in Figure 10–24(b), on the otherhand, shows that the system is stable for any positive dc gain.Frequency (rad/sec)Bode Diagram of System 2 — Closed Loop
−200−50
−100
−1500−60−40Phase (deg); Magnitude (dB)20
−200
10−1100101102Figure 10–23
Bode diagram for theclosed-loop transfer
function of System 2.
Root-Locus Plot of (91 s3 + 917 s2 + 2720 s + 2500)/
(s5 + 27 s4 + 164 s3 + 108 s2− 720s)
Real AxisImag Axis2
−4
−6
−8−14 −12 −10 −8 −6 −4 −20 24
−2068
(a)Root-Locus Plot of (12.109 s3 + 136.343 s2 + 477.375 s + 506.25)/
(s5 + 16 s4 + 86.1406 s3 + 165.406 s2 + 51.3744 s)
Real AxisImag Axis2
−3
−4
−5−8−7−6−5−4−3−2−10 1 23
−2−10145
(b)
Figure 10–24
(a) Root-locus plot of the system with observer poles at s=–10 ands=–10; (b) root-locus plot of the
system with observer poles at s=–4.5 ands=–4.5.
786
Chapter 10 / Control Systems Design in State Space
Comments
1.In designing regulator systems, note that if the dominant controller poles are placed
far to the left of the jvaxis, the elements of the state feedback gain matrix Kwill
become large. Large gain values will make the actuator output become large, so
that saturation may take place. Then the designed system will not behave as
designed.
2.Also, by placing the observer poles far to the left of the jvaxis, the observer
controller becomes unstable, although the closed-loop system is stable.An unstable
observer controller is not acceptable.
3.If the observer controller becomes unstable, move the observer poles to the right
in the left-half splane until the observer controller becomes stable.Also, the desired
closed-loop pole locations may need to be modified.
4.Note that if the observer poles are placed far to the left of the jvaxis, the band-
width of the observer will increase and will cause noise problems. If there is a
serious noise problem, the observer poles should not be placed too far to the left
of the jvaxis.The general requirement is that the bandwidth should be sufficiently
low so that the sensor noise will not become a problem.
5.The bandwidth of the system with the minimum-order observer is higher than that
of the system with the full-order observer, provided that the multiple observer
poles are placed at the same place for both observers. If the sensor noise is a seri-
ous problem, use of a full-order observer is recomnended.
10–7 DESIGN OF CONTROL SYSTEMS WITH OBSERVERS
In Section 10–6 we discussed the design of regulator systems with observers. (The systems
did not have reference or command inputs.) In this section we consider the design of
control systems with observers when the systems have reference inputs or command
inputs. The output of the control system must follow the input that is time varying. In
following the command input, the system must exhibit satisfactory performance (a
reasonable rise time, overshoot, settling time, and so on).
In this section we consider control systems that are designed by use of the pole-
placement-with-observer approach. Specifically, we consider control systems using
observer controllers. In Section 10–6 we discussed regulator systems, whose block
diagram is shown in Figure 10–25. This system has no reference input, or r=0. When
the system has a reference input, several different block diagram configurations are
conceivable, each having an observer controller.Two of these configurations are shown
in Figures 10–26 (a) and (b); we shall consider them in this section.
r= 0 y u
Plant–yObserver
controller
+–
Figure 10–25
Regulator system.
Openmirrors.com
Section 10–7 / Design of Control Systems with Observers 787ry
Plantr+ u
Observer
controller+–
–ur y u
Plantr–yObserver
controller+–
(a)
(b)
r y uObserver
controller+–1
s(s2+ 1)
PlantFigure 10–27
Control system withobserver controller
in the feedforward
path.Configuration 1: Consider the system shown in Figure 10–27. In this system the refer-
ence input is simply added at the summing point. We would like to design the observercontroller such that in the unit-step response the maximum overshoot is less than 30 %
and the settling time is about 5 sec.
In what follows we first design a regulator system.Then, using the observer controller
designed, we simply add the reference input rat the summing point.
Before we design the observer controller, we need to obtain a state-space represen-
tation of the plant. Since
we obtain
By choosing the state variables as
we get
 y=Cx x#=Ax+Bu x
3=y$ x2=y# x1=yy%+y#=uY(s)
U(s)=1
sAs2+1BFigure 10–26
(a) Control systemwith observer
controller in the
feedforward path;(b) Control systemwith observercontroller in the
feedback path.
788
Chapter 10 / Control Systems Design in State Space
where
Next, we choose the desired closed-loop poles for pole placement at
s=–1+j, s=–1-j, s=–8
and the desired observer poles at
s=–4, s=–4
The state feedback gain matrix Kand the observer gain matrix K
e
can be obtained as
follows:
See MATLAB Program 10–16. K
e
=
B
8
15
R
 K=[16
 
17
 
10]A=
C
0
0
01
0
-10
1
0
S
,
  
B=
C
0
0
1
S
,
  
C=[1
 
0
 
0]
MATLAB Program 10–16
A = [0  1  0;0  0  1;0  -1  0];
B = [0;0;1];
J = [-1+j  -1-j  -8];
K = acker(A,B,J)
K =
16  17  10
Aab = [1  0];
Abb = [0  1;-1  0];
L = [-4  -4];
Ke = acker(Abb',Aab',L)'
Ke =
8
15
The transfer function of the observer controller is obtained by use of MATLAB
Program 10–17. The result is
 =302(s +0.5017 +j0.772)(s +0.5017 -j0.772)
(s+9+j5.6569)(s +9-j5.6569) G
c
(s)=302s
2
+303s +256
s
2
+18s +113
Openmirrors.com
Section 10–7 / Design of Control Systems with Observers 789Figure 10–28 shows the block diagram of the regulator system just designed. Figure
10–29 shows the block diagram of a possible configuration of the control system basedon the regulator system shown in Figure 10–28. The unit-step response curve for thiscontrol system is shown in Figure 10–30.The maximum overshoot is about 28 %and the
settling time is about 4.5 sec.Thus, the designed system satisfies the design requirements.MATLAB Program 10–17
% Determination of transfer function of observer controllerA = [0  1  0;0  0  1;0  -1  0];
B = [0;0;1];Aaa = 0; Aab = [1  0]; Aba = [0;0]; Abb = [0  1;-1  0];Ba = 0; Bb = [0;1];Ka = 16; Kb=[17  10];Ke = [8;15];Ahat = Abb - Ke*Aab;Bhat = Ahat*Ke + Aba - Ke*Aaa;Fhat = Bb - Ke*Ba;Atilde = Ahat - Fhat*Kb;Btilde = Bhat - Fhat*(Ka + Kb*Ke);Ctilde = -Kb;Dtilde = -(Ka + Kb*Ke);[num,den] = ss2tf(Atilde,Btilde,-Ctilde,-Dtilde)
num =
302.0000  303.0000  256.0000
den =
1  18  113
y –yu
–302s2+ 303s+ 256
s2+18s+113
Observer controller1
s(s2+ 1)
Plant
y r–y ru
–+302s2+ 303s+ 256
s2+18s+1131
s(s2+ 1)
Observer controller PlantFigure 10–29
Control system withobserver controller
in the feedforward
path.Figure 10–28
Regulator system
with observer
controller.
790
Chapter 10 / Control Systems Design in State Space
Output y
t (sec)Unit-Step Response of
(302s
2
 + 303 s + 256)/( s
5
 +18s
4
 + 114 s
3
 + 320 s
2
 + 416 s + 256)
0.60.811.21.4
0.4
0.2
0
0123456789 1 0
Figure 10–30
Unit-step response of
the control system
shown in Figure
10–29.
Configuration 2: A different configuration of the control system is shown in Figure
10–31. The observer controller is placed in the feedback path. The input ris introduced
into the closed-loop system through the box with gain N. From this block diagram, the
closed-loop transfer function is obtained as
We determine the value of constant Nsuch that for a unit-step input r, the output yis
unity as tapproaches infinity. Thus we choose
The unit-step response of the system is shown in Figure 10–32. Notice that the maxi-
mum overshoot is very small, approximately 4 %. The settling time is about 5 sec.N=256
113=2.2655Y(s)
R(s)=NAs
2
+18s +113B
sAs
2
+1BAs
2
+18s +113B+302s
2
+303s +256
y Nr+u
–ur
–+
302s
2
+ 303s+ 256
s
2
+18s+113
1
s(s
2
+ 1)
N
Figure 10–31
Control system with
observer controller
in the feedback path.
Openmirrors.com
Section 10–7 / Design of Control Systems with Observers 791Output y
t (sec)Unit-Step Response of
(2.2655 s2 + 40.779 s + 256)/( s5 + 18 s4 + 114 s3 + 320 s2 + 416 s + 256)
0.60.811.21.4
0.4
0.2
0
0123456789 1 0Figure 10–32
The unit-stepresponse of the
system shown inFigure 10–31. (The
closed-loop poles forpole placement areats=–1 ;j,
s=–8. The observer
poles are at s=–4,
s=–4. )
Comments. We considered two possible configurations for the closed-loop control
systems using observer controllers. As stated earlier, other configurations are possible.
The first configuration, which places the observer controller in the feedforward path, gen-
erally gives a fairly large overshoot.The second configuration, which places the observer con-troller in the feedback path, gives a smaller overshoot.This response curve is quite similar tothat of the system designed by the pole-placement approach without using the observer con-troller. See the unit-step response curve of the system, shown in Figure 10–33, designed bythe pole-placement approach without observer. Here the desired closed-loop poles used are
s=-1+j,
  s=-1-j,  s=-8Output y
t (sec)Unit-Step Response of System without Observer
0.60.811.21.4
0.4
0.2
0
0123456789 1 0Figure 10–33
The unit-stepresponse of thecontrol system
designed by the pole
placement approachwithout observer.(The closed-looppoles are at
s=– 1;j, s=–8. )
792
Chapter 10 / Control Systems Design in State Space
Frequency (rad/sec)
Bode Diagrams of Closed-Loop Systems
−3000
−100
−200100−150−100
Phase (deg); Magnitude (dB)
50
−500
10
−1
10
0
10
1
10
2
System 1
System 2
System 1
System 2
Figure 10–34
Bode diagrams of
closed-loop system 1
(shown in Figure
10–29) and closed-
loop system 2 (shown
in Figure 10–31).
Note that, in these two systems, the rise time and settling time are determined primari-
ly by the desired closed-loop poles for pole placement. (See Figures 10–32 and 10–33.)
The Bode diagrams of closed-loop system 1 (shown in Figure 10–29) and closed-
loop system 2 (shown in Figure 10–31) are shown in Figure 10–34. From this figure, we
find that the bandwidth of system 1 is 5 rad /H20862sec and that of system 2 is 1.3 rad /H20862sec.
Summary of State-Space Design Method
1.The state-space design method based on the pole-placement-combined-with-
observer approach is very powerful. It is a time-domain method.The desired closed-
loop poles can be arbitrarily placed, provided the plant is completely state
controllable.
2.If not all state variables can be measured, an observer must be incorporated to
estimate the unmeasurable state variables.
3.In designing a system using the pole-placement approach, several different sets of
desired closed-loop poles need be considered, the response characteristics
compared, and the best one chosen.
4.The bandwidth of the observer controller is generally large, because we choose
observer poles far to the left in the splane. A large bandwidth passes high-
frequency noises and causes the noise problem.
5.Adding an observer to the system generally reduces the stability margin. In some
cases, an observer controller may have zero(s) in the right-half splane, which
means that the controller may be stable but of nonminimum phase. In other cases,
the controller may have pole(s) in the right-half splane—that is, the controller is
unstable. Then the designed system may become conditionally stable.
6.When the system is designed by the pole-placement-with-observer approach, it is
advisable to check the stability margins (phase margin and gain margin), using a
Openmirrors.com
Section 10–8 / Quadratic Optimal Regulator Systems 793frequency-response method. If the system designed has poor stability margins, it
is possible that the designed system may become unstable if the mathematicalmodel involves uncertainties.
7.Note that for nth-order systems, classical design methods (root-locus and
frequency-response methods) yield low-order compensators (first or second order).Since the observer-based controllers are nth-orderCor(N-m) th-order if the
minimum-order observer is used Dfor an nth-order system, the designed system
will become 2 nth order Cor(2n-m) th orderD. Since lower-order compensators are
cheaper than higher-order ones, the designer should first apply classical methodsand, if no suitable compensators can be determined, then try the pole-placement-with-observer design approach presented in this chapter.
10–8 QUADRATIC OPTIMAL REGULATOR SYSTEMS
An advantage of the quadratic optimal control method over the pole-placement method
is that the former provides a systematic way of computing the state feedback control gainmatrix.
Quadratic Optimal Regulator Problems. We shall now consider the optimal
regulator problem that, given the system equation 
(10–112)
determines the matrix Kof the optimal control vector
(10–113)
so as to minimize the performance index
(10–114)
where Qis a positive-definite (or positive-semidefinite) Hermitian or real symmetric
matrix and Ris a positive-definite Hermitian or real symmetric matrix. Note that the
second term on the right-hand side of Equation (10–114) accounts for the expenditureof the energy of the control signals. The matrices Qand Rdetermine the relative
importance of the error and the expenditure of this energy. In this problem, we assumethat the control vector u(t)is unconstrained.
As will be seen later, the linear control law given by Equation (10–113) is the optimal
control law. Therefore, if the unknown elements of the matrix Kare determined so as
to minimize the performance index, then u(t)=– Kx(t)is optimal for any initial state
x(0). The block diagram showing the optimal configuration is shown in Figure 10–35.J=
3
q
0(x*Qx+u* Ru)dtu(t)=-Kx(t)x#=Ax+Bu
x=Ax+ Bu.x u
–KFigure 10–35
Optimal regulatorsystem.
794
Chapter 10 / Control Systems Design in State Space
Now let us solve the optimization problem. Substituting Equation (10–113) into
Equation (10–112), we obtain
In the following derivations, we assume that the matrix A-BKis stable, or that the
eigenvalues of A-BKhave negative real parts.
Substituting Equation (10–113) into Equation (10–114) yields
Let us set
where Pis a positive-definite Hermitian or real symmetric matrix. Then we obtain
Comparing both sides of this last equation and noting that this equation must hold true
for any x, we require that
(10–115)
It can be proved that if A-BKis a stable matrix, there exists a positive-definite ma-
trixPthat satisfies Equation (10–115). (See Problem A–10–15 .)
Hence our procedure is to determine the elements of Pfrom Equation (10–115) and
see if it is positive definite. (Note that more than one matrix Pmay satisfy this equation.
If the system is stable, there always exists one positive-definite matrix Pto satisfy this
equation.This means that, if we solve this equation and find one positive-definite matrix
P, the system is stable. Other Pmatrices that satisfy this equation are not positive definite
and must be discarded.)
The performance index Jcan be evaluated as
Since all eigenvalues of A-BKare assumed to have negative real parts, we have
Therefore, we obtain
(10–116)
Thus, the performance index Jcan be obtained in terms of the initial condition x(0)
and P.
To obtain the solution to the quadratic optimal control problem, we proceed as
follows: Since Rhas been assumed to be a positive-definite Hermitian or real symmetric
matrix, we can write
R=T*
 
TJ=x*(0)
 
Px(0)x(q)S0.J=
3
q
0
x*(Q+K*
 
RK)xdt=-x*
 
Px
2
q
0
=-x*(q)
 
Px(q)+x*(0)
 
Px(0)(A-BK)*
 
P+P(A-BK)=-(Q+K*
 
RK)x*(Q+K*
 
RK)
 
x=-x#*
 
Px-x*
 
Px#=-x*C(A-BK)*
 
P+P(A-BK)D
 
xx*(Q+K*RK)
 
x=-d
dt(x*Px)=
3
q
0
x*(Q+K*RK)
 
xdtJ=
3
q
0
(x*Qx+x*K*RKx )dtx#=Ax-BKx =(A-BK)
 
x
Openmirrors.com
Section 10–8 / Quadratic Optimal Regulator Systems 795where Tis a nonsingular matrix. Then Equation (10–115) can be written as
which can be rewritten as
The minimization of Jwith respect to Krequires the minimization of
with respect to K. (See Problem A–10–16 .) Since this last expression is nonnegative, the
minimum occurs when it is zero, or when
Hence,
(10–117)
Equation (10–117) gives the optimal matrix K.Thus, the optimal control law to the quad-
ratic optimal control problem when the performance index is given by Equation (10–114)is linear and is given by
The matrix Pin Equation (10–117) must satisfy Equation (10–115) or the following
reduced equation:
(10–118)
Equation (10–118) is called the reduced-matrix Riccati equation. The design steps may
be stated as follows:
1.Solve Equation (10–118), the reduced-matrix Riccati equation, for the matrix P.
[If a positive-definite matrix Pexists (certain systems may not have a positive-
definite matrix P), the system is stable, or matrix A-BKis stable.]
2.Substitute this matrix Pinto Equation (10–117). The resulting matrix Kis the
optimal matrix.
A design example based on this approach is given in Example 10–9. Note that if the
matrix A-BKis stable, the present method always gives the correct result.
Finally, note that if the performance index is given in terms of the output vector
rather than the state vector, that is,
then the index can be modified by using the output equation
to
(10–119)
and the design steps presented in this section can be applied to obtain the optimal
matrix K.J=
3q
0(x* C* QCx +u* Ru)dty=CxJ=
3q
0(y* Qy+u* Ru)dtA* P+PA -PBR-1
 B* P+Q=0u(t)=-Kx(t)=-R-1
 B* Px(t)K=T-1(T*)-1
 B* P=R-1
 B* PTK =(T*)-1
 B* Px*CTK -(T*)-1
 B* PD*CTK -(T*)-1
 B* PD xA*P+PA +CTK -(T*)-1B *PD*CTK -(T*)-1B *PD-PBR-1B*P+Q=0(A*-K* B*) P+P(A-BK)+Q+K* T* TK =0
796
Chapter 10 / Control Systems Design in State Space
EXAMPLE 10–9
Consider the system shown in Figure 10–36. Assuming the control signal to be
determine the optimal feedback gain matrix Ksuch that the following performance index is
minimized:
where
(m/H113500)
From Figure 10–36, we find that the state equation for the plant is
where
We shall demonstrate the use of the reduced-matrix Riccati equation in the design of the
optimal control system. Let us solve Equation (10–118), rewritten as
Noting that matrix Ais real and matrix Qis real symmetric, we see that matrix Pis a real sym-
metric matrix. Hence, this last equation can be written as
This equation can be simplified to
B
0
p
11
0
p
12
R
+
B
0
0p
11
p
12
R
-
B
p
2
12
p
12
 
p
22
p
12
 
p
22
p
2
22
R
+
B
1
00
m
R
=
B
0
00
0
R
 -
B
p
11
p
12
p
12
p
22
RB
0
1
R
[1][0
 
1]
B
p
11
p
12
p
12
p
22
R
+
B
1
00
m
R
=
B
0
00
0
R
 
B
0
10
0
RB
p
11
p
12
p
12
p
22
R
+
B
p
11
p
12
p
12
p
22
RB
0
01
0
R
A*
 
P+PA -PBR
-1
 
B*
 
P+Q=0A=
B
0
01
0
R
,
  
B=
B
0
1
R
x#=Ax+BuQ=
B
1
00
m
R
J=
3
q
0
Ax
T
 
Qx+u
2
Bdtu(t) =-Kx(t)
ux
1
Plant
x
2
–K/H20848/H20848
Figure 10–36
Control system.
Openmirrors.com
Section 10–8 / Quadratic Optimal Regulator Systems 797from which we obtain the following three equations:
Solving these three simultaneous equations for p11, p12,andp22,requiring Pto be positive definite,
we obtain
Referring to Equation (10–117), the optimal feedback gain matrix Kis obtained as
Thus, the optimal control signal is
(10–120)
Note that the control law given by Equation (10–120) yields an optimal result for any initial state
under the given performance index. Figure 10–37 is the block diagram for this system.
Since the characteristic equation is
ifm=1, the two closed-loop poles are located at
These correspond to the desired closed-loop poles when m=1 .
Solving Quadratic Optimal Regulator Problems with MATLAB. In MATLAB,
the command
lqr(A,B,Q,R)s=-0.866 +j 0.5,  s=-0.866 -j 0.5∑s I-A+BK∑=s2+1m+2s+1=0u=-Kx=-x1-1m+2x2 =C1 1m+2D =Cp12 p22D =[1][0 1]Bp11
p12p12
p22R K=R-1
 B* PP=Bp11
p12p12
p22R=B1m+2
11
1m+2R m+2p12-p2
22=0 p11-p12 p22=0 1-p2
12=0––ux 1Plant
x2
/H20848/H20848
m + 2 /H20881Figure 10–37
Optimal control ofthe plant shown in
Figure 10–36.
798
Chapter 10 / Control Systems Design in State Space
solves the continuous-time, linear, quadratic regulator problem and the associated Riccati
equation. This command calculates the optimal feedback gain matrix Ksuch that the
feedback control law
minimizes the performance index
subject to the constraint equation
Another command
[K,P,E] = lqr(A,B,Q,R)
returns the gain matrix K, eigenvalue vector E, and matrix P, the unique positive-definite
solution to the associated matrix Riccati equation:
If matrix A-BKis a stable matrix, such a positive-definite solution Palways exists.The
eigenvalue vector Egives the closed-loop poles of A-BK.
It is important to note that for certain systems matrix A-BKcannot be made a sta-
ble matrix, whatever Kis chosen. In such a case, there does not exist a positive-definite
matrix Pfor the matrix Riccati equation. For such a case, the commands
K = lqr(A,B,Q,R)
[K,P,E] = lqr(A,B,Q,R)
do not give the solution. See MATLAB Program 10–18.
EXAMPLE 10–10
Consider the system defined by
Show that the system cannot be stabilized by the state-feedback control scheme
whatever matrix Kis chosen. (Notice that this system is not state controllable.)
Define
Then
 =
B
-1-k
1
01-k
2
2
R
 A-BK =
B
-1
01
2
R
-
B
1
0
R
Ck
1
 
k
2
DK=Ck
1
 
k
2
Du=-Kx
B
x#
1
x#
2
R
=
B
-1
01
2
RB
x
1
x
2
R
+
B
1
0
R
u
PA +A*
 
P-PBR
-1
 
B*
 
P+Q=0x#=Ax+BuJ=
3
q
0
(x*
 
Qx+u*
 
Ru)dtu=-Kx
Openmirrors.com
Section 10–8 / Quadratic Optimal Regulator Systems 799Hence, the characteristic equation becomes
The closed-loop poles are located at
Since the pole at s=2 is in the right-half s plane, the system is unstable whatever Kmatrix is
chosen. Hence, quadratic optimal control techniques cannot be applied to this system.
Let us assume that matrices QandRin the quadratic performance index are given by
and that we write MATLAB Program 10–18. The resulting MATLAB solution is
K = [NaN  NaN]
(NaN means ‘not a number.’) Whenever the solution to a quadratic optimal control problem does
not exist, MATLAB tells us that matrix Kconsists of NaN.Q=B1
00
1R,  R=[1]s=-1-k1 ,  s=2=As+1+k1B(s-2)=0∑s I-A+BK∑=2s+1+k1
0-1+k2
s-22
MATLAB Program 10–18
% ---------- Design of quadratic optimal regulator system ----------
A = [-1 1;0  2];
B = [1;0];Q = [1  0;0  1];R = [1];
K = lqr(A,B,Q,R)Warning: Matrix is singular to working precision.K =
NaN  NaN
% ***** If we enter the command [K,P,E] = lqr(A,B,Q,R), then *****[K,P,E] = lqr(A,B,Q,R)Warning: Matrix is singular to working precision.K =
NaN  NaN
P=
-Inf  -Inf
-Inf  -Inf
E =
-2.0000
-1.4142
800
Chapter 10 / Control Systems Design in State Space
EXAMPLE 10–11
Consider the system described by
where
The performance index Jis given by
where
Assume that the following control uis used.
Determine the optimal feedback gain matrix K.
The optimal feedback gain matrix Kcan be obtained by solving the following Riccati equation
for a positive-definite matrix P:
The result is
Substituting this Pmatrix into the following equation gives the optimal Kmatrix:
Thus, the optimal control signal is given by
MATLAB 10–19 also yields the solution to this problem.u=-Kx=-x
1
-x
2
=[1][0
 
1]
B
2
11
1
R
=[1
 
1] K=R
-1
 
B¿
 
PP=
B
2
11
1
R
A¿
 
P+PA -PBR
-1
 
B¿
 
P+Q=0u=-KxQ=
B
1
00
1
R
,
  
R=[1]J=
3
q
0
(x¿
 
Qx+u¿
 
Ru)dtA=
B
0
01
-1
R
,
  
B=
B
0
1
R
x#=Ax+Bu
MATLAB Program 10–19
% ---------- Design of quadratic optimal regulator system ----------
A = [0  1;0  -1];
B = [0;1];
Q = [1  0; 0  1];
R = [1];
K = lqr(A,B,Q,R)
K =
1.0000 1.0000
Openmirrors.com
Section 10–8 / Quadratic Optimal Regulator Systems 801EXAMPLE 10–12 Consider the system given by
where
The performance index Jis given by
where
Obtain the positive-definite solution matrix Pof the Riccati equation, the optimal feedback gain
matrix K, and the eigenvalues of matrix A-BK.
MATLAB Program 10–20 will solve this problem.Q=C1
000
100
01
S,  R=[1]J=
3q
0(x¿ Qx+u¿ Ru)dtA=C0
0
-351
0
-270
1
-9S,  B=C0
01Sx#=Ax+Bu
MATLAB Program 10–20
% ---------- Design of quadratic optimal regulator system ----------A = [0  1  0;0  0  1;-35  -27  -9];
B = [0;0;1];Q = [1  0  0;0  1  0;0  0  1];R = [1];[K,P,E] = lqr(A,B,Q,R)
K =
0.0143 0.1107 0.0676
P=
4.2625 2.4957 0.0143
2.4957 2.8150 0.11070.0143 0.1107 0.0676
E = 
-5.0958
-1.9859 + 1.7110i-1.9859 - 1.7110i
802
Chapter 10 / Control Systems Design in State Space
Next, let us obtain the response xof the regulator system to the initial condition x(0), where
With state feedback u=– Kx, the state equation for the system becomes
Then the system, or sys, can be given by
sys = ss(A-B*K, eye(3), eye(3), eye(3))
MATLAB Program 10–21 produces the response to the given initial condition. The response
curves are shown in Figure 10–38.x#=Ax+Bu=(A-BK)
 
xx(0)=
C
1
0
0
S
EXAMPLE 10–13
Consider the system shown in Figure 10–39. The plant is defined by the following state-space
equations:
where
The control signal uis given by
u=k
1
Ar-x
1
B-Ak
2
 
x
2
+k
3
 
x
3
B=k
1
 
r-Ak
1
 
x
1
+k
2
 
x
2
+k
3
 
x
3
BA=
C
0
0
01
0
-20
1
-3
S
,
 
B=
C
0
0
1
S
,
  
C=[1
 
0
 
0],
  
D=[0] y=Cx+Du x#=Ax+Bu
MATLAB Program 10–21
% Response to initial condition.
A = [0  1  0;0  0  1;-35  -27  -9];
B = [0;0;1];
K = [0.0143  0.1107  0.0676];
sys = ss(A-B*K, eye(3),eye(3),eye(3));
t = 0:0.01:8;
x = initial(sys,[1;0;0],t);
x1 = [1  0  0]*x';
x2 = [0  1  0]*x';
X3 = [0  0  1]*x';
subplot(2,2,1); plot(t,x1); grid
xlabel('t (sec)'); ylabel('x1')
subplot(2,2,2); plot(t,x2); grid
xlabel('t (sec)'); ylabel('x2)
subplot(2,2,3); plot(t,x3); grid
xlabel('t (sec)'); ylabel('x3')
Openmirrors.com
Section 10–8 / Quadratic Optimal Regulator Systems 803x1
x2x30.60.811.2
0.4
0.2
0
02468
0246802468−0.2
−3−2−101200.2
−0.2
−0.4
−0.8−0.6
−1
−1.2
t (sec)
t (sec)t (sec)
Figure 10–38
Response curves toinitial condition.
In determining an optimal control law, we assume that the input is zero, or r=0.
Let us determine the state-feedback gain matrix K, where
such that the following performance index is minimized:
where
Q=
Cq11
0
00
q22
00
0
q33S,  R=1,  x=Cx1
x2
x3S=Cy
y#
y$SJ=
3q
0(x¿ Qx+u¿ Ru)dtK=Ck1 k2 k3D
+–+–x=Ax+Bu.
k2
k3y=Cx k1rux
x2
x3y=x1
Figure 10–39
Control system.
804
Chapter 10 / Control Systems Design in State Space
To get a fast response, q
11
must be sufficiently large compared with q
22
, q
33
,andR. In this problem,
we choose
To solve this problem with MATLAB, we use the command
K = lqr(A,B,Q,R)
MATLAB Program 10–22 yields the solution to this problem.q
11
=100,
  
q
22
=q
33
=1,
  
R=0.01
MATLAB Program 10–22
% ---------- Design of quadratic optimal control system ----------
A = [0  1  0;0  0  1;0  -2  -3];
B = [0;0;1];
Q = [100  0  0;0  1  0;0  0  1];
R = [0.01];
K = Iqr(A,B,Q,R)
K =
100.0000    53.1200    11.6711
Next we shall investigate the step-response characteristics of the designed system using the
matrix Kthus determined. The state equation for the designed system is
and the output equation is
To obtain the unit-step response, use the following command:
[y,x,t] = step(AA,BB,CC,DD)
where
AA=A-BK, BB=Bk
1
, CC=C, DD=D
MATLAB Program 10–23 produces the unit-step response of the designed system. Figure 10–40
shows the response curves x
1
, x
2
,andx
3
versus ton one diagram.y=Cx=[1
 
0
 
0]
C
x
1
x
2
x
3
S
 =(A-BK)
 
x+Bk
1
 
r =Ax+BA-Kx+k
1
 
rB x#=Ax+Bu
Openmirrors.com
Section 10–8 / Quadratic Optimal Regulator Systems 805MATLAB Program 10–23
% ---------- Unit-step response of designed system ----------A = [0  1  0;0  0  1;0  -2  -3];
B = [0;0;1]C = [1  0  0];D = [0];K = [100.0000  53.1200  11.6711];k1 = K(1); k2 = K(2); k3 = K(3);
% ***** Define the state matrix, control matrix, output matrix,
% and direct transmission matrix of the designed systems as AA,% BB, CC, and DD *****
AA = A - B*K;
BB = B*k1;CC = C;DD = D;t = 0:0.01:8;[y,x,t] = step (AA,BB,CC,DD,1,t);
plot(t,x)
gridtitle('Response Curves x1, x2, x3, versus t')xlabel('t Sec')ylabel('x1,x2,x3')text(2.6,1.35,'x1')text(1.2,1.5,'x2')text(0.6,3.5,'x3')
Response Curves x1,x2,x3 versus tx1,x2,x35
–214
2
0
–13
t Sec05 2 3 1 48 6 7x3
x2x1
Figure 10–40
Response curves x1
versus t, x2versus t,
andx3versus t.
806
Chapter 10 / Control Systems Design in State Space
Concluding Comments on Optimal Regulator Systems
1.Given any initial state x(t
0
),the optimal regulator problem is to find an allowable
control vector u(t)that transfers the state to the desired region of the state space
and for which the performance index is minimized. For the existence of an optimal
control vector u(t),the system must be completely state controllable.
2.The system that minimizes (or maximizes, as the case may be) the selected
performance index is, by definition, optimal. Although the controller may have
nothing to do with “optimality” in many practical applications, the important point
is that the design based on the quadratic performance index yields a stable control
system.
3.The characteristic of an optimal control law based on a quadratic performance
index is that it is a linear function of the state variables, which implies that we need
to feed back all state variables.This requires that all such variables be available for
feedback. If not all state variables are available for feedback, then we need to
employ a state observer to estimate unmeasurable state variables and use the es-
timated values to generate optimal control signals.
Note that the closed-loop poles of the system designed by the use of the
quadratic optimal regulator approach can be found from
Since these closed-loop poles correspond to the desired closed-loop poles in the
pole-placement approach, the transfer functions of the observer controllers can
be obtained from either Equation (10–74) if the observer is of full-order type or
Equation (10–108) if the observer is of minimum-order type.
4.When the optimal control system is designed in the time domain, it is desirable to
investigate the frequency-response characteristics to compensate for noise effects.
The system frequency-response characteristics must be such that the system at-
tenuates highly in the frequency range where noise and resonance of components
are expected. (To compensate for noise effects, we must in some cases either modify
the optimal configuration and accept suboptimal performance or modify the
performance index.)
5.If the upper limit of integration in the performance index Jgiven by Equation
(10–114) is finite, then it can be shown that the optimal control vector is still a
linear function of the state variables, but with time-varying coefficients. (Therefore,
the determination of the optimal control vector involves that of optimal time-
varying matrices.)
10–9 ROBUST CONTROL SYSTEMS
Suppose that given a control object (i.e., a system with a flexible arm) we wish to de-
sign a control system. The first step in the design of a control system is to obtain a
mathematical model of the control object based on the physical law. Quite often the
model may be nonlinear and possibly with distributed parameters. Such a model may
be difficult to analyze. It is desirable to approximate it by a linear constant-coefficient
system that will approximate the actual object fairly well. Note that even though the∑s
 
I-A+BK∑=0
Openmirrors.com
model to be used for design purposes may be a simplified one, it is necessary that such
a model must include any intrinsic character of the actual object.Assuming that we canget a model that approximates the actual system quite well, we must get a simplifiedmodel for the purpose of designing the control system that will require a compensatorof lowest order possible. Thus, a model of a control object (whatever it may be) willprobably include an error in the modeling process. Note that in the frequency-responseapproach to control systems design, we use phase and gain margins to take care ofthe modeling errors. However, in the state-space approach, which is based on the dif-ferential equations of the plant dynamics, no such “margins” are involved in thedesign process.
Since the actual plant differs from the model used in the design, a question arises
whether the controller designed using a model will work satisfactorily with the actu-al plant. To ensure that it will do so, robust control theory has been developed sincearound 1980.
Robust control theory uses the assumption that the models we use in designing con-
trol systems have modeling errors.We shall present an introduction to this theory in thissection. Basically, the theory assumes that there is an uncertainty or error between theactual plant and its mathematical model and includes such uncertainty or error in thedesign process of the control system.
Systems designed based on the robust control theory will possess the following
properties:
(1)Robust stability . The control system designed is stable in the presence of
perturbation.
(2)Robust performance . The control system exhibits predetermined response
characteristics in the presence of perturbation.
This theory requires considerations based on frequency-response analysis and time-
domain analysis. Because of the mathematical complications associated with robust con-trol theory, detailed discussion of robust control theory is beyond the scope of the seniorengineering student. In this section, only introductory discussion of robust control the-ory is presented.
Uncertain Elements in Plant Dynamics. The term uncertainty refers to the dif-
ferences or errors between the model of the plant and the actual plant.
Uncertain elements that may appear in practical systems may be classified as struc-
tured uncertainty and unstructured uncertainty. An example of structured uncertainty is
any parametric variation in the plant dynamics, such as variations in poles and zerosof the plant transfer function. Examples of unstructured uncertainty include frequency-dependent uncertainty, such as high-frequency modes that we normally neglect in mod-eling plant dynamics. For example, in the modeling of a flexible-arm system, the modelmay include a finite number of modes of oscillation.The modes of oscillation that are notincluded in the modeling behave as uncertainty of the system. Another example of un-certainty occurs in the linearization of a nonlinear plant. If the actual plant is nonlinearand its model is linear, then the difference acts as unstructured uncertainty.
In this section we consider the case where the uncertainty is unstructured. In addi-
tion we assume that the plant involves only one uncertainty. (Some plants may involvemultiple uncertain elements.)
Section 10–9 / Robust Control Systems 807
In the robust control theory, we define unstructured uncertainty as . Since the
exact description of is unknown, we use an estimate of (as to the magnitude
and phase characteristics) and use this estimate in the design of the controller that sta-
bilizes the control system. Stability of a system with unstructured uncertainty can then
be examined by use of the small gain theorem to be given following the definition of the
norm.
Norm. The norm of a stable single-input–single-output system is the largest
possible amplification factor of the steady-state response to sinusoidal excitation.
For a scalar (s), gives the maximum value of . It is called the norm.
See Figure 10–41.
In robust control theory we measure the magnitude of the transfer function by the
norm. Assume that the transfer function is proper and stable. [Note that a
transfer function is called proper if is limited and definite. If = 0, it
is called strictly proper.] The norm of is defined by
means the maximum singular value of . ( means .) Note that
the singular value of a transfer function is defined by
where is the ith largest eigenvalue of and it is always a non-negative real
value. By making smaller, we make the effect of input won the output zsmaller.
It is frequently the case that instead of using the maximum singular value , we use
the inequality
and limit the magnitude of (s)by .To make the magnitude of small, we choose
a small and require that . 7£7
q
6g g7£7
q
g £7£7
q
6g7£7
q
7£7
q
£*£ l
i
(£*£)s
i
(£)=2l
i
(£*£)
£s
max
s
[£(jv)] s
[£(jv)]7£7
q
=s
[£(jv)]£(s) H
q
£(q) £(q) £(s)£(s) H
q
H
q
/H20895£(jv)/H20895 7£7
q
£H
q
H
/H11557
H
q
¢(s) ¢(s)¢(s)
808
Chapter 10 / Control Systems Design in State Space
F(s)
||F||
/H11009
|F(jv)| in db
v z
v
Figure 10–41
Bode diagram and
the norm .7£7
q
H
q
Openmirrors.com
Small-Gain Theorem. Consider the closed-loop system shown in Figure 10–42. In
the figure and M(s) are stable and proper transfer functions.
The small-gain theorem states that if
then this closed-loop system is stable. That is, if the norm of M(s) is smaller
than 1, this closed-loop system is stable. This theorem is an extension of the Nyquiststability criterion.
It is important to note that the small-gain theorem gives a sufficient condition for sta-
bility. That is, a system may be stable even if it does not satisfy this theorem. However,if a system satisfies the small-gain theorem, it is always stable.
System with Unstructured Uncertainty. In some cases an unstructured uncer-
tainty error may be considered multiplicative such that
where is the true plant dynamics and Gis the model plant dynamics. In other cases
an unstructured uncertainty error may be considered additive such that
In either case we assume that the norm of or is bounded such thatwhere and are positive constants.
EXAMPLE 10–14
Consider a control system with unstructured multiplicative uncertainty. We shall consider robust
stability and robust performance of the system. (A system with unstructured additive uncertain-ty will be discussed in Problem A–10–18 .)
Robust Stability. Let us define
true plant dynamics
G= model of plant dynamics
unstructured multiplicative uncertainty
We assume that is stable and its upper bound is known.We also assume that and Gare
related by
=G(I +¢m) G/H33522G/H33522¢m¢m=G/H33522=ga gm7¢m76gm,  7¢a76ga¢a ¢mG/H33522=G+¢aG/H33522G/H33522=G(1+¢m)¢(s) Hq7¢(s)M(s)7q61¢(s)
Section 10–9 / Robust Control Systems 809/H9004(s)
M(s)Figure 10–42
Closed-loop system.
Consider the system shown in Figure 10–43(a). Let us examine the transfer function between
point Aand point B. Notice that Figure 10–43(a) can be redrawn as shown in Figure 10-43(b).The
transfer function between point Aand point Bcan be given by
Define
(10–121)
Using Equation (10–121) we can redraw Figure 10–43(b) as Figure 10–43(c).Applying the small-
gain theorem to the system consisting of and Tas shown in Figure 10–43(c), we obtain the
condition for stability to be
(10–122)
In general, it is impossible to precisely model Therefore, let us use a scalar transfer function
such that
where is the largest singular value of .
Consider, instead of Inequality (10–122), the following inequality:
(10–123)
If Inequality (10–123) holds true, Inequality (10–122) will always be satisfied. By making 
the norm of to be less than 1, we obtain the controller Kthat will make the system
stable.
Suppose that we cut the line at point Ain Figure 10–43(a). Then we obtain Figure 10–43(d).
Replacing by , we obtain Figure 10–43(e). Redrawing Figure 10–43(e), we obtain Figure
10–43(f). Figure 10–43(f) is called a generalized plant diagram .
Referring to Equation (10–121), Tis given by
(10–124)
Then Inequality (10–123) can be rewritten as
(10–125)
Clearly, for a stable plant model G(s), K(s)= 0 will satisfy Inequality (10–125). However,
K(s)= 0 is not the desirable transfer function for the controller. To find an acceptable trans-
fer function for K(s) , we may add another condition—for example, that the resulting system will
have robust performance such that the system output follows the input with minimum error, or
another reasonable condition. In what follows we shall obtain the condition for robust
performance.
ß
W
m
K(s)G(s)
1+K(s)G(s)
ß
q
61T=KG
1+KGW
m
I ¢
m
W
m
T H
q
7W
m
T7
q
61¢
m
(jv) s
{¢
m
(jv)}s
{¢
m
(jv)}6/H20895W
m
(jv)/H20895W
m
(jv)¢
m
.7¢
m
T7
q
61¢
m
(1+KG)
-1
 KG =TKG
1+KG=(1+KG)
-1
KG
810
Chapter 10 / Control Systems Design in State Space
Openmirrors.com
Section 10–9 / Robust Control Systems 811K
(f)w
uz
yP
Gw
u
y
KWmI
(e)yz
++–/H9004m
TBA
(c)G
K/H9004m
(d)yuBzw
A
++
–/H9004m
K Gyu
+−A B G
K/H9004m
(a) (b)yuA
++
–B
Figure 10–43
(a) Block diagram of a system with unstructured multiplicative uncertainty;(b)–(d) successive modifications of the block diagram of (a);(e) block diagram showing a generalized plant with unstructured multiplicative uncertainty;(f) generalized plant diagram.
Robust Performance. Consider the system shown in Figure 10–44. Suppose that we want
the output y(t) to follow the input r(t) as closely as possible, or we wish to have
Since the transfer function Y(s)/R(s) is
we have
Define
where Sis commonly called the sensitivity function and Tdefined by Equation (10–124) is called
the complementary sensitivity function. In this robust performance problem we want to make
the norm of Ssmaller than the desired transfer function or which can be
written as 
(10–126)
Combining Inequalities (10–123) and (10–126), we get
where T+S=1, or
(10–127)
Our problem then becomes to find K(s) that will satisfy Inequality (10–127). Note that depend-
ing on the chosen W
m
(s)andW
s
(s) there may be many K(s) that satisfy Inequality (10–127), or
may be no K(s) that satisfies Inequality (10–127). Such a robust control problem using Inequality
(10–127) is called a mixed-sensitivity problem.
Figure 10–45(a) is a generalized plant diagram, where two conditions (robust stability and ro-
bust performance) are specified.A simplified version of this diagram is shown in Figure 10–45(b).
∑
W
m
(s) K(s)G(s)
1+K(s)G(s)
W
s
(s)1
1+K(s)G(s)
∑
q
61
g
W
m
T
W
s
S
g
q
617W
s 
S7
q
617S7
q
6W
s-1
W
s  -1
H
q
1
1+KG=SE(s)
R(s)=R(s) -Y(s)
R(s)=1-Y(s)
R(s)=1
1+KGY(s)
R(s) = KG
1 + KGlim
tSq
[r(t) -y(t)] = lim
tSq
e(t) S0
812
Chapter 10 / Control Systems Design in State Space
re y
K(s)
G(s)
+–
Figure 10–44
Closed-loop system.
Openmirrors.com
Section 10–9 / Robust Control Systems 813K
(b)w
uz
yPGw
u
y
KWmI WsI
(a)yz2z1
z
++–
Figure 10–45
(a) Generalized plant diagram;
(b) simplfied version
of the generalizedplant diagram shown in (a).
Finding Transfer Function z(s)/w(s) from a Generalized Plant Diagram. Consider
the generalized plant diagram shown in Figure 10–46.
In this diagram w(s) is the exogenous disturbance and u(s) is the manipulated vari-
able. z(s) is the controlled variable and y(s) is the observed variable.
Consider this control system consisting of the generalized plant P(s) and the con-
troller K(s) .The equation that relates the outputs z(s) andy(s) and the inputs w(s) and
u(s) of the generalized plant P(s) is
The equation that relates u(s) andy(s) is given by
u(s)=K(s)y(s)
Define the transfer function that relates the controlled variable z(s) to the exogenous
disturbance w(s) as (s). Then
z(s) =£ (s)w(s)£Bz(s)
y(s)R=BP11
P21P12
P22RBw(s)
u(s)R
Note that can be determined as follows: Since
z(s)=P
11
w(s)+P
12
u(s)
y(s)=P
21
w(s)+P
22
u(s)
u(s)=K(s)y(s)
we obtain
y(s)=P
21
w(s)+P
22
K(s)y(s)
Hence
or
Therefore,
Hence,
(10–128)
EXAMPLE 10–15
Let us determine the Pmatrix in the generalized plant diagram of the control system considered
in Example 10–14. We derived Inequality (10–125) for the control system to be robust stable.
Rewriting Inequality (10–125), we have
(10–129)
g
W
m
KG
1+KG
g
q
61£(s)=P
11
+P
12
K(s)[I -P
22
K(s)]
-1
P
21
={P
11
+P
12
K(s)[I -P
22
K(s)]
-1
P
21
}w(s)z(s) =P
11
w(s) +P
12
K(s)[I -P
22
K(s)]
-1
P
21
w(s)
y(s) =[I-P
22
K(s)]
-1
P
21
w(s)[I-P
22
K(s)]y(s) =P
21
w(s)
£(s)
814
Chapter 10 / Control Systems Design in State Space
K(s)P(s)
w
uz
yP
11
P
21
P
12
P
22
Figure 10–46
A generalized plant
diagram.
Openmirrors.com
If we define
(10–130)
then Inequality (10–129) can be written as
Referring to Equation (10–128), rewritten as
notice that if we choose the generalized plant Pmatrix as 
(10–131)
Then we obtain
which is exactly the same as in Equation (10–130).
We derived in Example 10–14 that if we wished to have the output yfollow the input ras
close as possible, we needed to make the norm of (s), where
(10–132)
less than 1. [See Inequality (10–126).]
Note that the controlled variable zis related to the exogenous disturbance wby
and referring to Equation (10–128)
Notice that if we choose the Pmatrix as
(10–133)
then we obtain
which is the same as in Equation (10–132). £2 =Ws c1
1+KGd =Ws c1-KG
1+KGd =Ws-WsKG(I +KG)-1 £= P11+P12K(I -P22K)-1P21P=cWs-WsG
I -Gd£(s)=P11+P12K(I -P22K)-1P21z=£ (s)w£2=Ws
I+KG£2 Hq£1 =WmKG(I +KG)-1£= P11+P12K(I -P22K)-1P21P=c0WmG
I-Gd£= P11+P12K(I -P22K)-1P217£17q61£1=WmKG
1+KG
Section 10–9 / Robust Control Systems 815
If both the robust stability and robust performance conditions are required, the control sys-
tem must satisfy the condition given by Inequality (10–127), rewritten as
(10–134)
For the Pmatrix, we combine Equations (10–133) and (10–131) and get
(10–135)
If we construct P(s) as given by Equation (10–135), then the problem of designing a control
system to satisfy both robust stability and robust performance conditions can be formulated by
using the generalized plant represented by Equation (10–135). As mentioned earlier, such a
problem is called a mixed-sensitivity problem. By using the generalized plant given by Equation
(10–135) we are able to determine the controller K(s) that satisfies Inequality (10–134). The
generalized plant diagram for the system considered in Example 10–14 becomes as shown in
Figure 10–47.
HInfinity Control Problem. To design a controller Kof a control system to sat-
isfy various stability and performance specifications, we utilize the concept of the gen-
eralized plant.
As mentioned earlier a generalized plant is a linear model consisting of a model of
the plant and weighting functions corresponding to the specifications for the required
performance. Referring to the generalized plant shown in Figure 10–48, the Hinfinity
control problem is a problem to design a controller Kthat will make the norm of
the transfer function from the exogenous disturbance wto the controlled variable zless
than a specified value.H
q
P=
C
W
s
0
I-W
s
G
W
m
G
-G
S∑
W
m 
KG
1+KG
W
s  
1
1+KG
∑
61
816
Chapter 10 / Control Systems Design in State Space
Kw
u
z
2
yO
IW
m
G
−G
z
1
W
s
−W
s
G
Figure 10–47
Generalized plant of
the system discussed
in Example 10–15.
Openmirrors.com
The reason to use generalized plants, rather than individual block diagrams of con-
trol systems, is that a number of control systems with uncertain elements have beendesigned using generalized plants and, consequently, established design approachesusing such plants are available.
Note that any weighting function, such as W(s) , is an important parameter to in-
fluence the resulting controller K(s) . In fact, the goodness of the resulting designed
system depends on the choice of the weighting function or functions used in the de-sign process.
Note that the controller that is the solution to the Hinfinity control problem is com-
monly called the Hinfinity controller.
Solving Robust Control Problems. There are three established approaches to
solve robust control problems. They are
1. Solve robust control problems by deriving the Riccati equations and solving them.
2.Solve robust control problems by using the linear matrix inequality approach.
3.Solve robust control problems that involve structural uncertainties by using the 
analysis and synthesis approach.
Solving robust control problems by use of any of the above methods requires a broad
mathematical background.
In this section we have presented only an introduction to the robust control theory.
Solving any robust control problem requires mathematical background beyond thescope of the senior engineering student. Therefore, an interested reader may take agraduate-level control course at an established college or university and study this sub-ject in detail.
EXAMPLE PROBLEMS AND SOLUTIONS
A–10–1. Consider the system defined by
Suppose that this system is not completely state controllable.Then the rank of the controllability
matrix is less than n,or
(10–136) rankCB /H21752 AB /H21752 p /H21752 An-1
 BD=q6nx#=Ax+Bumm
Example Problems and Solutions 817Kw
uz
yGeneralized
plant
Figure 10–48
A generalized plantdiagram.
This means that there are qlinearly independent column vectors in the controllability matrix. Let
us define such qlinearly independent column vectors as f
1
,f
2
,p,f
q
.Also, let us choose n-q
additional n-vectors v
q+1
,v
q+2
,p,v
n
such that
is of rank n.By using matrix Pas the transformation matrix, define
Show that can be given by
where A
11
is a q*q matrix, A
12
is a q*(n-q) matrix, A
22
is an (n-q)*(n-q) matrix, and
0is an (n-q)*q matrix. Show also that matrix can be given by
where B
11
is a q*1 matrix and 0is an (n-q)*1 matrix.
Solution. Notice that
or
(10–137)
Also,
(10–138)
Since we have qlinearly independent column vectors f
1
,f
2
,p,f
q
,we can use the Cayley–Hamilton
theorem to express vectors Af
1
,Af
2
,p,Af
q
in terms of these qvectors. That is,
Af
q
=a
1q
  
f
1
+a
2q
  
f
2
+p+a
qq
  
f
q
/H11080/H11080/H11080Af
2
=a
12
  
f
1
+a
22
  
f
2
+p+a
q2
  
f
q
Af
1
=a
11
  
f
1
+a
21
  
f
2
+p+a
q1
  
f
q
B=PB
ˆ
=Cf
1
/H21752f
2
/H21752p/H21752f
q
/H21752v
q+1
/H21752p/H21752v
n
D
 
A
ˆ
CAf
1
/H21752Af
2
/H21752p/H21752Af
q
/H21752Av
q+1
/H21752p/H21752Av
n
DAP =PA
ˆ
B
ˆ
=
c
B
11
0
d
B
ˆ
A
ˆ
=
c
A
11
0
 
A
12
A
22
d
A
ˆ
P
-1
 
AP =A
ˆ
,
  
P
-1
 
B=B
ˆ
P=Cf
1
/H21752f
2
/H21752p/H21752f
q
/H21752v
q+1
/H21752v
q+2
/H21752p/H21752v
n
D
818
Chapter 10 / Control Systems Design in State Space
Openmirrors.com
Example Problems and Solutions 819Hence, Equation (10–137) may be written as follows:
Define
Then Equation (10–137) can be written as
=Cf1/H21752f2/H21752p/H21752fq/H21752vq+1/H21752p/H21752vnDcA11
0 A12
A22dCAf1/H21752Af2/H21752p/H21752Afq/H21752Avq+1/H21752p/H21752AvnD Eaq+1q+1
/H11080
/H11080/H11080
a
nq+1p
paq+1n
/H11080
/H11080/H11080
a
nnU=A22 E0
/H11080/H11080/H11080
0p
p0
/H11080/H11080/H11080
0
U=A21=(n-q)*q zero matrix Fa1q+1
a2q+1
/H11080
/H11080/H11080
a
qq+1p
p
pa1n
a2n
/H11080
/H11080/H11080
a
qnV=A12 Fa11
a21
/H11080
/H11080/H11080
a
q1pp
pa
1q
a2q
/H11080
/H11080/H11080
a
qqV=A11=Cf1/H21752f2/H21752p/H21752fq/H21752vq+1/H21752p/H21752vnD a11
a21
/H11080
/H11080/H11080
a
q1
0
/H11080/H11080/H11080
0p
p
p
p
pa
1q
a2q
/H11080
/H11080/H11080
a
qq
0
/H11080/H11080/H11080
0a
1q+1
a2q+1
/H11080
/H11080/H11080
a
qq+1
aq+1q+1
/H11080
/H11080/H11080
a
nq+1p
p
p
p
pa1n
a2n
/H11080
/H11080/H11080
a
qn
aq+1n
/H11080
/H11080/H11080
a
nnCAf1/H21752Af2/H21752p/H21752Afq/H21752Avq+1/H21752p/H21752AvnD
Thus,
Hence,
Next, referring to Equation (10–138), we have
(10–139)
Referring to Equation (10–136), notice that vector Bcan be written in terms of qlinearly
independent column vectors f
1
,f
2
,p,f
q
.Thus, we have
Consequently, Equation (10–139) may be written as follows:
Thus,
where
A–10–2. Consider a completely state controllable system
Define the controllability matrix as M:
M=CB /H21752 AB /H21752 p /H21752 A
n-1
 
BDx#=Ax+BuB
11
=
F
b
11
b
21
/H11080
/H11080
/H11080
b
q1
V
B
ˆ
=
c
B
11
0
d
b
11
  
f
1
+b
21
  
f
2
+p+b
q1
  
f
q
=Cf
1
/H21752f
2
/H21752p/H21752f
q
/H21752v
q+1
/H21752p/H21752v
n
Db
11
b
21
/H11080
/H11080
/H11080
b
q1
0
/H11080
/H11080
/H11080
0B=b
11
  
f
1
+b
21
  
f
2
+p+b
q1
  
f
q
B=Cf
1
/H21752f
2
/H21752p/H21752f
q
/H21752v
q+1
/H21752p/H21752v
n
D
 
B
ˆ
P
-1
 
AP =A
ˆ
=
c
A
11
0
 
A
12
A
22
d
AP =P
c
A
11
0
 
A
12
A
22
d
820
Chapter 10 / Control Systems Design in State Space
Openmirrors.com
Show that
where a1,a2,p,anare the coefficients of the characteristic polynomial
Solution. Let us consider the case where n=3. We shall show that
(10–140)
The left-hand side of Equation (10–140) is
The right-hand side of Equation (10–140) is
(10–141)
The Cayley–Hamilton theorem states that matrix Asatisfies its own characteristic equation or, in
the case of n=3,
(10–142)
Using Equation (10–142), the third column of the right-hand side of Equation (10–141) becomes
Thus, Equation (10–141) becomes
Hence, the left-hand side and the right-hand side of Equation (10–140) are the same. We have
thus shown that Equation (10–140) is true. Consequently,
The preceding derivation can be easily extended to the general case of any positive integer n.
A–10–3. Consider a completely state controllable system
Define
M=CB /H21752 AB /H21752 p /H21752 An-1
 BDx#=Ax+BuM-1
 AM =C0
100
01-a
3
-a2
-a1SCB/H21752AB/H21752A2
 BDC0
100
01-a
3
-a2
-a1S=CAB/H21752A2
 B/H21752A3
 BD-a3  B-a2  AB -a1  A2
 B=A-a3  I-a2  A-a1  A2BB=A3
 BA3+a1  A2+a2  A+a3  I=0CB/H21752AB/H21752A2
 BDC0
100
01-a
3
-a2
-a1S=CAB/H21752A2
 B/H21752-a3  B-a2  AB -a1  A2
 BDAM =ACB /H21752 AB /H21752 A2
 BD=CAB /H21752 A2
 B /H21752 A3
 BDAM =MC0
100
01-a
3
-a2
-a1S∑s I-A∑=sn+a1 sn-1+p+an-1 s+anM-1
 AM =G0
10
/H11080/H11080/H11080
00
01
/H11080/H11080/H11080
0p
pp
p0
00
/H11080/H11080/H11080
1-a
n
-an-1
-an-2
/H11080
/H11080/H11080
-a
1W
Example Problems and Solutions 821
822
Chapter 10 / Control Systems Design in State Space
and
where the a
i
’s are coefficients of the characteristic polynomial
Define also
Show that
Solution. Let us consider the case where n=3. We shall show that
(10–143)
Referring to Problem A–10–2 , we have
Hence, Equation (10–143) can be rewritten as
Therefore, we need to show that
(10–144)
The left-hand side of Equation (10–144) is
C
0
1
00
0
1-a
3
-a
2
-a
1
SC
a
2
a
1
1a
1
1
01
0
0
S
=
C
-a
3
0
00
a
1
10
1
0
SC
0
1
00
0
1-a
3
-a
2
-a
1
S
 
W=W
C
0
0
-a
3
1
0
-a
2
0
1
-a
1
S
W
-1
C
0
1
00
0
1-a
3
-a
2
-a
1
S
 
W=
C
0
0
-a
3
1
0
-a
2
0
1
-a
1
S
M
-1
 
AM =
C
0
1
00
0
1-a
3
-a
2
-a
1
S
T
-1
 
AT =(MW )
-1
 
A(MW )=W
-1
(M
-1
 
AM)
 
W=
C
0
0
-a
3
1
0
-a
2
0
1
-a
1
S
T
-1
 
AT =
G
0
0
/H11080
/H11080
/H11080
0
-a
n
1
0
/H11080
/H11080
/H11080
0
-a
n-1
0
1
/H11080
/H11080
/H11080
0
-a
n-2
p
p
p
p0
0
/H11080
/H11080
/H11080
1
-a
1
W
,
  
T
-1
 
B=
G
0
0
/H11080
/H11080
/H11080
0
1
W
T=MW∑s
 
I-A∑=s
n
+a
1
 
s
n-1
+p+a
n-1
 
s+a
n
W=
G
a
n-1
a
n-2
/H11080
/H11080
/H11080
a
1
1a
n-2
a
n-3
/H11080
/H11080
/H11080
1
0p
p
p
pa
1
1
/H11080
/H11080
/H11080
0
01
0
/H11080
/H11080
/H11080
0
0
W
Openmirrors.com
Example Problems and Solutions 823The right-hand side of Equation (10–144) is
Clearly, Equation (10–144) holds true. Thus, we have shown thatNext, we shall show that
(10–145)
Note that Equation (10–145) can be written as
Noting that
we have
The derivation shown here can be easily extended to the general case of any positive integer n.
A–10–4. Consider the state equation
where
The rank of the controllability matrix M,
is 2.Thus, the system is completely state controllable.Transform the given state equation into the
controllable canonical form.
Solution. Since
 =s
2+2s+1=s2+a1 s+a2 ∑s I-A∑=2s-1
4-1
s+32=(s-1)(s +3)+4M=CB/H21752ABD=B0
22
-6RA=B1
-41
-3R,  B=B0
2Rx#=Ax+BuT-1
 B=C0
01STC001
S=CB/H21752AB/H21752A2
 BDCa2
a1
1a1
1
01
00SC001
S=CB/H21752AB/H21752A2
 BDC1
00S=BB=TC0
01S=MWC0
01ST-1
 B=C0
01ST-1
 AT =C0
0
-a31
0
-a20
1
-a1SCa2
a1
1a1
1
01
00SC00
-a
31
0
-a20
1
-a1S=C-a3
0
00
a1
10
10S
824
Chapter 10 / Control Systems Design in State Space
we have
Define
where
Then
and
Define
Then the state equation becomes
Since
and
we have
which is in the controllable canonical form.
A–10–5. Consider a system defined by
where
A=
B
0
-21
-3
R
,
  
B=
B
0
2
R
,
  
C=[1
 
0] y=Cx x#=Ax+Bu
B
x
ˆ
#
1
x
ˆ
#
2
R
=
B
0
-11
-2
RB
x
ˆ
1
x
ˆ
2
R
+
B
0
1
R
uT
-1
 
B=
B
0.5
0.50
0.5
RB
0
2
R
=
B
0
1
R
T
-1
AT =
B
0.5
0.50
0.5
RB
1
-41
-3
RB
2
-20
2
R
=
B
0
-11
-2
R
x
ˆ
#
=T
-1
 
ATx
ˆ
+T
-1
Bux=Tx
ˆ
T
-1
=
B
0.5
0.50
0.5
R
T=
B
0
22
-6
RB
2
11
0
R
=
B
2
-20
2
R
M=
B
0
22
-6
R
,
  
W=
B
2
11
0
R
T=MWa
1
=2,
  
a
2
=1
Openmirrors.com
Example Problems and Solutions 825The characteristic equation of the system is
The eigenvalues of matrix Aare–1and–2.
It is desired to have eigenvalues at –3and –5by using a state-feedback control u=– Kx.
Determine the necessary feedback gain matrix Kand the control signal u.
Solution. The given system is completely state controllable, since the rank of
is 2. Hence, arbitrary pole placement is possible.
Since the characteristic equation of the original system is
we have
The desired characteristic equation is
Hence,It is important to point out that the original state equation is not in the controllable canonical
form, because matrix Bis not
Hence, the transformation matrix Tmust be determined.
Hence,
Referring to Equation (10–13), the necessary feedback gain matrix is given by
Thus, the control signal ubecomes
u=-Kx=-[6.5
 2.5]Bx1
x2R =C15-2/H217528-3DB0.5
00
0.5R=[6.5 2.5] K=Ca2-a2/H21752a1-a1D T-1T-1=B0.5
00
0.5RT=MW =CB/H21752ABDBa1
11
0R=B022
-6RB3
11
0R=B200
2RB0
1Ra1=8,  a2=15(s+3)(s +5)=s2+8s+15=s2+a1 s+a2=0a1=3,  a2=2s2+3s+2=s2+a1 s+a2=0M=CB/H21752ABD=B0
22
-6R∑s I-A∑=2s
2-1
s+32=s2+3s+2=(s+1)(s +2)=0
826
Chapter 10 / Control Systems Design in State Space
A–10–6. A regulator system has a plant
Define state variables as
By use of the state-feedback control u=– Kx, it is desired to place the closed-loop poles at
Obtain the necessary state-feedback gain matrix Kwith MATLAB.
Solution. The state-space equations for the system become
Hence,
(Note that, for the pole placement, matrices Cand Ddo not affect the state-feedback gain
matrix K.)
Two MATLAB programs for obtaining state-feedback gain matrix Kare given in MATLAB
Programs 10–24 and 10–25. C=[1
 
0
 
0],  
  
D=[0] A=
C
0
0
-61
0
-110
1
-6
S
, 
  
B=
C
0
0
10
S
 y=[1
 
0
 
0]
C
x
1
x
2
x
3
S
+0u 
C
x#
1
x#
2
x#
3
S
=
C
0
0
-61
0
-110
1
-6
SC
x
1
x
2
x
3
S
+
C
0
0
10
S
us=-2+j213
,
  
s=-2-j213
,
  
s=-10 x
3
=x#
2
 x
2
=x#
1
 x
1
=yY(s)
U(s)=10
(s+1)(s +2)(s +3)
MATLAB Program 10–24
A = [0  1  0;0  0  1;-6  -11  -6];
B = [0;0;10];
J = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)  -10];
K = acker(A,B,J)
K =
15.4000    4.5000    0.8000
Openmirrors.com
Example Problems and Solutions 827A–10–7. Consider a completely observable system
Define the observability matrix as N:
Show that
(10–146)
where a1,a2,p,anare the coefficients of the characteristic polynomial
Solution. Let us consider the case where n=3. Then Equation (10–146) can be written as
(10–147)
Equation (10–147) may be rewritten as
(10–148)
We shall show that Equation (10–148) holds true. The left-hand side of Equation (10–148) is
(10–149) N*A=CC
CA
CA2S  A=CCA
CA2
CA3SN* A=C0
0
-a31
0
-a20
1
-a1S  N*N*A(N*)-1=C0
0
-a31
0
-a20
1
-a1S∑s I-A∑=sn+a1 sn-1+p+an-1 s+anN* A(N*)-1=G0
0
/H11080/H11080/H11080
0
-a
n1
0
/H11080/H11080/H11080
0
a
n-10
1
/H11080/H11080/H11080
0
-a
n-2p
p
p
p0
0
/H11080/H11080/H11080
1
-a
1WN=CC*/H21752A*C*/H21752p/H21752(A*)n-1
 C*D y=Cx x#=AxMATLAB Program 10–25
A = [0  1  0;0  0  1;  -6  -11  -6];
B = [0;0;10];J = [-2+j*2*sqrt(3)  -2-J*2*Sqrt(3)  -10];K = place(A,B,J)place: ndigits= 15
K =
15.4000    4.5000    0.8000
828
Chapter 10 / Control Systems Design in State Space
The right-hand side of Equation (10–148) is
(10–150)
The Cayley–Hamilton theorem states that matrix Asatisfies its own characteristic equation, or
Hence,
Thus, the right-hand side of Equation (10–150) becomes the same as the right-hand side of
Equation (10–149). Consequently,
which is Equation (10–148). This last equation can be modified to
The derivation presented here can be extended to the general case of any positive integer n.
A–10–8. Consider a completely observable system defined by
(10–151)
(10–152)
Define
and
where the a’s are coefficients of the characteristic polynomial
Define also
Q=(WN*)
-1
∑s
 
I-A∑=s
n
+a
1
 
s
n-1
+p+a
n-1
 
s+a
n
W=
G
a
n-1
a
n-2
/H11080
/H11080
/H11080
a
1
1a
n-2
a
n-3
/H11080
/H11080
/H11080
1
0p
p
p
pa
1
1
/H11080
/H11080
/H11080
0
01
0
/H11080
/H11080
/H11080
0
0
W
N=CC*/H21752A*
 
C*/H21752p/H21752(A*)
n-1
 
C*D y=Cx+Du x#=Ax+BuN*A(N*)
-1
=
C
0
0
-a
3
1
0
-a
2
0
1
-a
1
S
N*A=
C
0
0
-a
3
1
0
-a
2
0
1
-a
1
S
 
N*-a
1
  
CA
2
-a
2
  
CA -a
3
  
C=CA
3
A
3
+a
1
  
A
2
+a
2
  
A+a
3
  
I=0 =
C
CA
CA
2
-a
3
  
C-a
2
  
CA -a
1
  
CA
2
S
 
C
0
0
-a
3
1
0
-a
2
0
1
-a
1
S
 
N*=
C
0
0
-a
3
1
0
-a
2
0
1
-a
1
SC
C
CA
CA
2
S
Openmirrors.com
Example Problems and Solutions 829Show that
where the bk’s (k=0, 1, 2, p,n)are those coefficients appearing in the numerator of the transfer
function when C(sI-A)–1B+D is written as follows:
where D=b0.
Solution. Let us consider the case where n=3. We shall show that
(10–153)
Note that, by referring to Problem A–10–7 , we have
Hence, we need to show that
or
(10–154) WC0
0
-a31
0
-a20
1
-a1S  =C0
100
01-a
3
-a2
-a1SWWC0
0
-a31
0
-a20
1
-a1S  W-1=C0
100
01-a
3
-a2
-a1S(WN*) A(WN*)-1=WCN* A(N*)-1D W-1=WC0
0
-a31
0
-a20
1
-a1S  W-1Q-1
 AQ =(WN*) A(WN*)-1=C0
100
01-a
3
-a2
-a1SC(s  I-A)-1
 B+D=b0 sn+b1 sn-1+p+bn-1 s+bn
sn+a1 sn-1+p+an-1 s+anQ-1
 B=Fbn-an b0
bn-1-an-1 b0
/H11080
/H11080/H11080
b
1-a1 b0VCQ =[0 0p   0 1]Q-1
 AQ =G0
10
/H11080/H11080/H11080
00
01
/H11080/H11080/H11080
0p
pp
p0
00
/H11080/H11080/H11080
1-a
n
-an-1
-an-2
/H11080
/H11080/H11080
-a
1W
830
Chapter 10 / Control Systems Design in State Space
The left-hand side of Equation (10–154) is
The right-hand side of Equation (10–154) is
Thus, we see that Equation (10–154) holds true. Hence, we have proved Equation (10–153).
Next we shall show that
or
Notice that
Hence, we have shown that
Next define
Then Equation (10–151) becomes
(10–155)
and Equation (10–152) becomes
(10–156)
Referring to Equation (10–153) ,Equation (10–155) becomes
C
x
ˆ
#
1
x
ˆ
#
2
x
ˆ
#
3
S
=
C
0
1
00
0
1-a
3
-a
2
-a
1
SC
x
ˆ
1
x
ˆ
2
x
ˆ
3
S
+
C
g
3
g
2
g
1
S
uy=CQx
ˆ
+Dux
ˆ
#
=Q
-1
 
AQx
ˆ
+Q
-1
 
Bux=Qx
ˆ
[0
 
0
 
1]=C(WN*
 
)
-1
=CQ =[1
 
0
 
0]
C
C
CA
CA
2
S
=C[0
 
0
 
1](WN*
 
)=[0
 
0
 
1]
C
a
2
a
1
1a
1
1
01
0
0
SC
C
CA
CA
2
S
C(WN*)
-1
=[0
 
0
 
1]CQ =[0
 
0
 
1]=
C
-a
3
0
00
a
1
10
1
0
SC
0
1
00
0
1-a
3
-a
2
-a
1
S
 
W=
C
0
1
00
0
1-a
3
-a
2
-a
1
SC
a
2
a
1
1a
1
1
01
0
0
S
 =
C
-a
3
0
00
a
1
10
1
0
S
 W
 
C
0
0
-a
3
1
0
-a
2
0
1
-a
1
S
=
C
a
2
a
1
1a
1
1
01
0
0
SC
0
0
-a
3
1
0
-a
2
0
1
-a
1
S
Openmirrors.com
Example Problems and Solutions 831where
The transfer function G(s) for the system defined by Equations (10–155) and (10–156) is
Noting that
we have
Note that D=b0.Since
we have
Hence,
Thus, we have shown that
Note that what we have derived here can be easily extended to the case when nis any positive
integer.
A–10–9. Consider a system defined by
 y=Cxx#=Ax+BuQ-1
 B=Cg3
g2
g1S=Cb3-a3 b0
b2-a2 b0
b1-a1 b0Sg1=b1-a1 b0 ,g2=b2-a2 b0 ,g3=b3-a3 b0=b0 s3+b1 s2+b2 s+b3
s3+a1 s2+a2 s+a3=b0 s3+Ag1+a1 b0Bs2+Ag2+a2 b0Bs+g3+a3 b0
s3+a1 s2+a2 s+a3=g1 s2+g2 s+g3
s3+a1 s2+a2 s+a3+b0G(s) =1
s3+a1 s2+a2 s+a3C1 s s2DCg3
g2
g1S+DCs
-1
00
s
-1a3
a2
s+a1S-1
=1
s3+a1 s2+a2 s+a3Cs2+a1 s+a2
s+a1
1-a3
s2+a1 s
s-a3 s
-a2 s-a3
s2SG(s) =[0 0 1]Cs
-1
00
s
-1a3
a2
s+a1S-1
Cg3
g2
g1S+DCQ =[0 0 1]G(s) =CQAs I-Q-1
 AQB-1
 Q-1
 B+DCg3
g2
g1S=Q-1
 B
832
Chapter 10 / Control Systems Design in State Space
where
The rank of the observability matrix N,
is 2. Hence, the system is completely observable. Transform the system equations into the ob-
servable canonical form.
Solution. Since
we have
Define
where
Then
and
Define
Then the state equation becomes
or
(10–157)
The output equation becomes
y=CQx
ˆ
=
B
0
1-1
-2
RB
x
ˆ
1
x
ˆ
2
R
+
B
0
2
R
u
B
x
ˆ
#
1
x
ˆ
#
2
R
=
B
-1
10
1
RB
1
-41
-3
RB
-1
10
1
RB
x
ˆ
1
x
ˆ
2
R
+
B
-1
10
1
RB
0
2
R
ux
ˆ
#
=Q
-1
 
AQx
ˆ
+Q
-1
 
Bux=Qx
ˆ
Q
-1
=
B
-1
10
1
R
Q=
b
B
2
11
0
RB
1
-31
-2
R
r
-1
=
B
-1
10
1
R
-1
=
B
-1
10
1
R
N=
B
1
1-3
-2
R
,
  
W=
B
a
1
11
0
R
=
B
2
11
0
R
Q=(WN*)
-1
a
1
=2,
  
a
2
=1∑s
 
I-A∑=s
2
+2s+1=s
2
+a
1
 
s+a
2
N=CC*/H21752A*
 
C*D=
B
1
1-3
-2
R
A=
B
1
-41
-3
R
,
  
B=
B
0
2
R
,
  
C=[1
 
1]
Openmirrors.com
Example Problems and Solutions 833or
(10–158)
Equations (10–157) and (10–158) are in the observable canonical form.
A–10–10. For the system defined by
consider the problem of designing a state observer such that the desired eigenvalues for the
observer gain matrix are m1,m2,p,mn.
Show that the observer gain matrix given by Equation (10–61), rewritten as
(10–159)
can be obtained from Equation (10–13) by considering the dual problem. That is, the matrix Ke
can be determined by considering the pole-placement problem for the dual system, obtaining the
state-feedback gain matrix K, and taking its conjugate transpose, or Ke=K*.
Solution. The dual of the given system is
(10–160)
Using the state-feedback control
Equation (10–160) becomes
Equation (10–13), which is rewritten here, is
(10–161)
where
For the original system, the observability matrix is
Hence, matrix Tcan also be written as
Since we have
and
(T*)-1=(WN*)-1T*=W* N*=WN*W=W*,T=NWCC*/H21752A* C*/H21752p/H21752(A*)n-1
 C*D=NT=MW =CC*/H21752A* C*/H21752p/H21752(A*)n-1
 C*D WK=Can-an /H21752 an-1-an-1 /H21752 p /H21752 a2-a2 /H21752 a1-a1D T-1z#=(A*-C* K) zv=-Kzn=B* zz#=A* z+C* vKe=(WN*)-1Fan-an
an-1-an-1
/H11080
/H11080
/H11080
a1-a1V y=Cx x#=Ax+Buy=[1 1]B-1
10
1RBxˆ1
xˆ2R=[0 1]Bxˆ1
xˆ2R
834
Chapter 10 / Control Systems Design in State Space
Taking the conjugate transpose of both sides of Equation (10–146), we have
Since K
e
=K*, this last equation is the same as Equation (10–159). Thus, we obtained Equation
(10–159) by considering the dual problem.
A–10–11. Consider an observed-state feedback control system with a minimum-order observer described
by the following equations:
(10–162)
(10–163)
where
Ax
a
is the state variable that can be directly measured, and corresponds to the observed state
variables.B
Show that the closed-loop poles of the system comprise the closed-loop poles due to pole
placementCthe eigenvalues of matrix ( A-BK)] and the closed-loop poles due to the minimum-
order observer [the eigenvalues of matrix 
Solution. The error equation for the minimum-order observer may be derived as given by
Equation (10–94), rewritten thus:
(10–164)
where
From Equations (10–162) and (10–163), we obtain
(10–165)
Combining Equations (10–164) and (10–165) and writing
we obtain
(10–166)
Equation (10–166) describes the dynamics of the observed-state feedback control system with a
minimum-order observer. The characteristic equation for this system is
or
@s
 
I-A+BK@@s
 
I-A
bb
+K
e
  
A
ab
@=0
2
s
 
I-A+BK
0-BK
b
s
 
I-A
bb
+K
e
  
A
ab
2
=0
B
x#
e#
R
=
B
A-BK
0BK
b
A
bb
-K
e
  
A
ab
RB
x
e
R
K=CK
a
/H21752K
b
D =Ax-BK
e
x-
c
0
e
d
f
=(A-BK)
 
x+BK
c
0
e
d
 x#=Ax-BK x/H33522=Ax-BK
c
x
a
x/H33522
b
d
=Ax-BK
c
x
a
x
b
-e
d
e=x
b
-x/H33522
b
e#=AA
bb
-K
e
  
A
ab
B
 
eAA
bb
-K
e
  
A
ab
BDx/H33522
b
x=
c
x
a
x
b
d
,
  
x/H33522=
c
x
a
x/H33522
b
d
 u=-Kx/H33522 y=Cx x#=Ax+BuK*=AT
-1
B*
F
a
n
-a
n
a
n-1
-a
n-1
/H11080
/H11080
/H11080
a
1
-a
1
V
=(T*)
-1
F
a
n
-a
n
a
n-1
-a
n-1
/H11080
/H11080
/H11080
a
1
-a
1
V
=(WN*)
-1
F
a
n
-a
n
a
n-1
-a
n-1
/H11080
/H11080
/H11080
a
1
-a
1
V
Openmirrors.com
Example Problems and Solutions 835The closed-loop poles of the observed-state feedback control system with a minimum-order
observer consist of the closed-loop poles due to pole placement and the closed-loop poles due tothe minimum-order observer. (Therefore, the pole-placement design and the design of theminimum-order observer are independent of each other.)
A–10–12. Consider a completely state controllable system defined by
(10–167)
where
Suppose that the rank of the following matrix
isn+1 . Show that the system defined by
(10–168)
where
is completely state controllable.
Solution. Define
Because the system given by Equation (10–167) is completely state controllable, the rank of matrix
Misn. Then the rank of
isn+1. Consider the following equation:
(10–169)
Since matrix
is of rank n+1, the left-hand side of Equation (10–169) is of rank n+1. Therefore, the right-hand
side of Equation (10–169) is also of rank n+1. Since
=CA
ˆ Bˆ/H21752Aˆ2
 Bˆ/H21752p/H21752Aˆn
 Bˆ/H21752BˆD=BAB
-CB/H21752
/H21752A2
 B
-CAB/H21752p/H21752
/H21752p/H21752An
 B
-CAn-1
 B/H21752
/H21752B
0RBAM
-CMB
0R=BACB/H21752AB/H21752p/H21752An-1
 BD
-CCB/H21752AB/H21752p/H21752An-1
 BDB
0RBA
-CB
0RBA
-CB
0RBM
00
1R=BAM
-CMB
0RBM
00
1RM=CB /H21752 AB /H21752 p /H21752 An-1
 BDAˆ=BA
-C0
0R,  Bˆ=BB
0R  ,  ue=u(t) -u(q)e#=Aˆe+BˆueBA
-CB
0R(n+1)*(n+1)C=1*n constant matrixB=n*1 constant matrixA=n*n constant matrixy=output signal (scalar )u=control signal (scalar )x=state vector (n-vector ) y=Cx x#=Ax+Bu
836
Chapter 10 / Control Systems Design in State Space
we find that the rank of
isn+1. Thus, the system defined by Equation (10–168) is completely state controllable.
A–10–13. Consider the system shown in Figure 10–49. Using the pole-placement-with-observer approach,
design a regulator system such that the system will maintain the zero position Ay
1
=0 andy
2
=0B
in the presence of disturbances. Choose the desired closed-loop poles for the pole-placement part
to be
and the desired poles for the minimum-order observer to be
First, determine the state feedback gain matrix Kand observer gain matrix K
e
.Then, obtain
the response of the system to an arbitrary initial condition—for example,
where e
1
ande
2
are defined by
Assume that m
1
=1 kg,m
2
=2 kg,k=36 N/H20862m, and b=0.6 N-s /H20862m.
Solution. The equations for the system are
By substituting the given numerical values for m
1
, m
2
, k,andband simplifying, we obtain
Let us choose the state variables as follows:
 x
4
=y#
2
 x
3
=y#
1
 x
2
=y
2
 x
1
=y
1
 y$
2
=18y
1
-18y
2
+0.3y#
1
-0.3y#
2
 y$
1
=-36y
1
+36y
2
-0.6y#
1
+0.6y#
2
+u m
2
 
y$
2
=kAy
1
-y
2
B+bAy#
1
-y#
2
B m
1
 
y$
1
=kAy
2
-y
1
B+bAy#
2
-y#
1
B+u e
2
=y
2
-y/H33522
2
 e
1
=y
1
-y/H33522
1
e
1
(0)=0.1, 
  
e
2
(0)=0.05y
1
(0)=0.1,
  
y
2
(0)=0,
  
y#
1
(0)=0,
  
y#
2
(0)=0s=-15,
  
s=-16s=-2+j213
,
  
s=-2-j213
,
  
s=-10,
  
s=-10CB
ˆ
/H21752A
ˆ
 
B
ˆ
/H21752A
ˆ
2
 
B
ˆ
/H21752p/H21752A
ˆ
n
 
B
ˆ
D
m
1
m
2
y
1
y
2
u
k
b
Regulator
Figure 10–49
Mechanical system.
Openmirrors.com
Example Problems and Solutions 837Then, the state-space equations become
Define
The state feedback gain matrix Kand observer gain matrix Kecan be obtained easily by use of
MATLAB as follows:
(See MATLAB Program 10–26.) Ke=B14.4
0.30.6
15.7RK=[130.4444 -41.5556 23.1000 15.4185 ]A=E0
0
-36
180
0
36
-181
0
-0.6
0.30
1
0.6
-0.3U=CAaa
AbaAab
AbbS,  B=E0
0
/H21753
10U=CBa
/H21753
BbSBy1
y2R=B1
00
10
00
0RDx1
x2
x3
x4TDx#
1
x#
2
x#
3
x#
4T=D0
0
-36
180
0
36
-181
0
-0.6
0.30
10.6
-0.3TDx1
x2
x3
x4T+D0
010Tu
MATLAB Program 10–26
A = [0  0  1  0;0  0  0  1;-36  36  -0.6  0.6;18  -18  0.3  -0.3];
B = [0;0;1;0];J = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)  -10  -10];K = acker(A,B,J)
K =
130.4444    -41.5556    23.1000    15.4185
Aab = [1  0;0  1];
Abb = [-0.6  0.6;0.3  -0.3];L = [-15  -16];Ke = place(Abb',Aab',L)'place: ndigits= 15
Ke =
14.4000    0.6000
0.3000    15.7000
Response to Initial Condition: Next, we obtain the response of the designed system to the given
initial condition. Since
x/H33522=Bxa
x/H33522
bR=By
x/H33522
bRu=-Kx/H33522x#=Ax+Bu
we have
(10–170)
Note that
where
Then, Equation (10–170) can be written as
(10–171)
Since, from Equation (10–94), we have
(10–172)
by combining Equations (10–171) and (10–172) into one equation, we have
The state matrix here is a 6*6 matrix. The response of the system to the given initial condition
can be obtained easily with MATLAB. (See MATLAB Program 10–27.) The resulting response
curves are shown in Figure 10–50. The response curves seem to be acceptable.
c
x#
e#
d
=
c
A-BK
0
 
BKF       
A
bb
-K
e
  
A
ab
dc
x
e
d
e#=AA
bb
-K
e
  
A
ab
B
 
ex#=(A-BK)
 
x+BKFeF=
c
0
I
d
x-x/H33522=
c
x
a
x
b
d
-
c
x
a
x/H33522
b
d
=
c
0
x
b
-x/H33522
b
d
=
c
0
e
d
=
c
0
I
d
e=Fex#=Ax-BK x/H33522=(A-BK)
 
x+BKAx-x/H33522B
838
Chapter 10 / Control Systems Design in State Space
x
1
01234
t (sec)
01234
t (sec)
01234
t (sec)
01234
t (sec)
01234
t (sec)
−0.0500.1
0.050.15
e
1
00.050.1
01234
t (sec)
e
2
00.020.040.06
x
2
−0.020.02
00.040.06
x
3
−0.6−0.2
−0.400.2
x
4
−0.20.1
0
−0.10.2
Response to initial condition Response to initial condition
Figure 10–50
Response curves to
initial condition.
Openmirrors.com
Example Problems and Solutions 839MATLAB Program 10–27
% Response to initial condition
A = [0  0  1  0;0  0  0  1;-36  36  -0.6  0.6;18  -18  0.3  -0.3];
B = [0;0;1;0];K = [130.4444  -41.5556  23.1000  15.4185];Ke = [14.4  0.6;0.3  15.7];F = [0  0;0  0;1  0;0  1];Aab = [1  0;0  1];Abb = [-0.6  0.6;0.3  -0.3];AA = [A-B*K  B*K*F; zeros(2,4)  Abb-Ke*Aab];sys = ss(AA,eye(6),eye(6),eye(6));t = 0:0.01:4;y = initial(sys,[0.1;0;0;0;0.1;0.05],t);x1 = [1  0  0  0  0  0]*y';x2 = [0  1  0  0  0  0]*y';x3 = [0  0  1  0  0  0]*y';x4 = [0  0  0  1  0  0]*y';e1 = [0  0  0  0  1  0]*y';e2 = [0  0  0  0  0  1]*y';
subplot(3,2,1); plot(t,x1); grid; title('Response to initial condition'),
xlabel('t (sec)'); ylabel('x1')subplot(3,2,2); plot(t,x2); grid; title('Response to initial condition'),xlabel('t (sec)'); ylabel('x2')subplot(3,2,3); plot(t,x3); grid; xlabel('t (sec)'); ylabel('x3')subplot(3,2,4); plot(t,x4); grid; xlabel('t (sec)'); ylabel('x4')subplot(3,2,5); plot(t,e1); grid; xlabel('t (sec)');ylabel('e1')subplot(3,2,6); plot(t,e2); grid; xlabel('t (sec)'); ylabel('e2')
r=0 y u –yObserver
controller+–4
s(s+ 2)
PlantFigure 10–51
Regulator system.A–10–14. Consider the system shown in Figure 10–51. Design both the full-order and minimum-order observers
for the plant. Assume that the desired closed-loop poles for the pole-placement part are located at
Assume also that the desired observer poles are located at
(a)s=–8, s=–8 for the full-order observer
(b)s=–8 for the minimum-order observer
Compare the responses to the initial conditions specified below:
(a) for the full-order observer:
x1(0)=1,  x2(0)=0,  e1(0)=1,  e2(0)=0s=-2+j213,  s=-2-j213
840
Chapter 10 / Control Systems Design in State Space
(b) for the minimum-order observer:
Also, compare the bandwidths of both systems.
Solution. We first determine the state-space representation of the system. By defining state
variables x
1
andx
2
as
we obtain
For the pole-placement part, we determine the state feedback gain matrix K. Using MATLAB,
we find Kto be
K=[4 0.5]
(See MATLAB Program 10–28.)
Next, we determine the observer gain matrix K
e
for the full-order observer. Using MATLAB,
we find K
e
to be
(See MATLAB Program 10–28.)K
e
=
B
14
36
R
 y=[1
 
0]
B
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
0
01
-2
RB
x
1
x
2
R
+
B
0
4
R
u x
2
=y# x
1
=yx
1
(0)=1,
  
x
2
(0)=0,
  
e
1
(0)=1
MATLAB Program 10–28
% Obtaining matrices K and Ke.
A = [0  1;0  -2];
B = [0;4];
C = [1  0];
J = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)];
L = [-8  -8];
K = acker(A,B,J)
K =
4.0000  0.5000
Ke = acker(A',C',L)'
Ke =
14
36
Now we find the response of this system to the given initial condition. Referring to Equation
(10–70), we have
This equation defines the dynamics of the designed system using the full-order observer. MATLAB
Program 10–29 produces the response to the given initial condition.The resulting response curves
are shown in Figure 10–52.
B
x#
e#
R
=
B
A-BK
0BK
A-K
e
  
C
RB
x
e
R
Openmirrors.com
Example Problems and Solutions 841MATLAB Program 10–29
% Response to initial condition ---- full-order observer
A = [0  1;0  -2];
B = [0;4];C = [1  0];K = [4  0.5];Ke = [14;36];AA = [A-B*K  B*K; zeros(2,2)  A-Ke*C];sys = ss(AA, eye(4), eye(4), eye(4));t = 0:0.01:8;x = initial(sys, [1;0;1;0],t);x1 = [1  0  0  0]*x';x2 = [0  1  0  0]*x';e1 = [0  0  1  0]*x';e2 = [0  0  0  1]*x';
subplot(2,2,1); plot(t,x1); grid
xlabel('t (sec)'); ylabel('x1')
subplot(2,2,2); plot(t,x2); grid
xlabel('t (sec)'); ylabel('x2')
subplot(2,2,3); plot(t,e1); grid
xlabel('t (sec)'); ylabel('e1')
subplot(2,2,4); plot(t,e2); grid
xlabel('t (sec)'); ylabel('e2')x1
x2e1
e20.40.60.81
0.2
0
−0.2
02468
0246802468−0.4
0.60.811.2
0.4
0.2
0
−0.201
−1
−2
−0.50
−1
−1.5−3
−2t (sec)
t (sec)02468
t (sec)t (sec)
Figure 10–52
Response curves toinitial condition.
842
Chapter 10 / Control Systems Design in State Space
MATLAB Program 10–31
% Obtaining Ke ---- minimum-order observer
Aab = [1];
Abb = [-2];
LL = [-8];
Ke = acker(Abb',Aab',LL)'
Ke =
6
MATLAB Program 10–30
% Determination of transfer function of observer controller ---- full-order observer
A = [0  1;0  -2];
B = [0;4];
C = [1  0];
K = [4  0.5];
Ke = [14;36];
[num,den] = ss2tf(A-Ke*C-B*K, Ke,K,0)
num =
0   74.0000   256.0000
den =
1   18   108
To obtain the transfer function of the observer controller, we use MATLAB. MATLAB
Program 10–30 produces this transfer function. The result is
num
den=74s+256
s
2
+18s+108=74(s+3.4595 )
(s+9+j5.1962 )(s+9-j5.1962 )
Next, we obtain the observer gain matrix K
e
for the minimum-order observer. MATLAB
Program 10–31 produces K
e
.The result is
K
e
=6
The response of the system with minimum-order observer to the initial condition can be ob-
tained as follows: By substituting into the plant equation given by Equation (10–79) u=-Kx/H33522
Openmirrors.com
Example Problems and Solutions 843MATLAB Program 10–32
% Response to intial condition ---- minimum-order observer
A = [0  1;0  -2];
B = [0;4];K = [4  0.5];Kb = 0.5;Ke = 6;Aab = 1; Abb = -2;AA = [A-B*K  B*Kb; zeros(1,2)  Abb-Ke*Aab];sys = ss(AA,eye(3),eye(3),eye(3));t = 0:0.01:8;x = initial(sys,[1;0;1],t);x1 = [1  0  0]*x';x2 = [0  1  0]*x';e = [0  0  1]*x';
subplot(2,2,1); plot(t,x1); grid
xlabel('t (sec)'); ylabel('x1')
subplot(2,2,2); plot(t,x2); grid
xlabel('t (sec)'); ylabel('x2')
subplot(2,2,3); plot(t,e); grid
xlabel('t (sec)'); ylabel('e')we find
or
The error equation is
Hence the system dynamics are defined by
Based on this last equation, MATLAB Program 10–32 produces the response to the given initial
condition. The resulting response curves are shown in Figure 10–53.Bx#
e#R=BA-BK
0BKb
Abb-Ke AabRBx
eRe#=AAbb-Ke AabB ex#=(A-BK) x+BKb e=(A-BK) x+BCKa KbDB0
eRx#=Ax-BK x/H33522=Ax-BKx +BK(x-x/H33522)
844
Chapter 10 / Control Systems Design in State Space
e
0246800.20.40.60.81
t (sec)
x
1
x
2
0.60.811.2
0.4
0.2
0
02468 02468−0.200.5
−0.5
−1
−2−1.5
−2.5
t (sec) t (sec)
Figure 10–53
Response curves to
initial condition.
The transfer function of the observer controller, when the system uses the minimum-order
observer, can be obtained by use of MATLAB Program 10–33. The result is
num
den=7s+32
s+10=7(s+4.5714 )
s+10
MATLAB Program 10–33
% Determination of transfer function of observer controller ---- minimum-order observer
A = [0  1;0  -2];
B = [0;4];
Aaa = 0; Aab = 1; Aba = 0; Abb = -2;
Ba = 0; Bb = 4;
Ka = 4; Kb = 0.5;
Ke = 6;
Ahat = Abb - Ke*Aab;
Bhat = Ahat*Ke + Aba - Ke*Aaa;
Fhat = Bb - Ke*Ba;
Atilde = Ahat - Fhat*Kb;
Btilde = Bhat - Fhat*(Ka + Kb*Ke);
Ctilde = -Kb;
Dtilde = -(Ka + Kb*Ke);
[num,den] = ss2tf(Atilde, Btilde, -Ctilde, -Dtilde)
num =
7  32
den =
1  10
Openmirrors.com
Example Problems and Solutions 845The observer controller is clearly a lead compensator.
The Bode diagrams of System 1 (closed-loop system with full-order observer) and of Sys-
tem 2 (closed-loop system with minimum-order observer) are shown in Figure 10–54. Clearly, thebandwidth of System 2 is wider than that of System 1. System 1 has a better high-frequency noise-rejection characteristic than System 2.
A–10–15. Consider the system
where xis a state vector ( n-vector) and Ais an n*n constant matrix. We assume that Ais non-
singular. Prove that if the equilibrium state x=0of the system is asymptotically stable (that is, if
Ais a stable matrix), then there exists a positive-definite Hermitian matrix Psuch that
where Qis a positive-definite Hermitian matrix.
Solution. The matrix differential equation.
has the solution
Integrating both sides of this matrix differential equation from t=0 tot=q, we obtain
X(q)-X(0)=A*
a
3q
0Xdtb+a
3q
0Xdtb AX=eA* t
 QeAtX#=A* X+XA,  X(0)=QA* P+PA =-Qx#=AxFrequency (rad/sec)Bode Diagrams of Systems
−300−100
−200
−250−50
−1500−100−50Phase (deg); Magnitude (dB)50
0
10−1100101102System 1System 2
System 1System 2Figure 10–54
Bode diagrams of System 1(system with full-order
observer) and System 2
(system with minimum-order observer).System 1=
(296s+1024) /H20862
(s
4+20s3+144s2
+512s+1024 );
System 2= (28s+128) /H20862
(s3+12s2+48s+128 ).
846
Chapter 10 / Control Systems Design in State Space
Noting that Ais a stable matrix and, therefore, we obtain
Let us put
Note that the elements of are finite sums of terms like where the l
i
are
the eigenvalues of Aandm
i
is the multiplicity of l
i
.Since the l
i
possess negative real parts,
exists. Note that
Thus Pis Hermitian (or symmetric if Pis a real matrix). We have thus shown that for a stable A
and for a positive-definite Hermitian matrix Q, there exists a Hermitian matrix Psuch that
We now need to prove that Pis positive definite. Consider the following Her-
mitian form:
Hence, Pis positive definite. This completes the proof.
A–10–16. Consider the control system described by
(10–173)
where
Assuming the linear control law
(10–174)
determine the constants k
1
andk
2
so that the following performance index is minimized:
J=
3
q
0
x
T
 
xdtu=-Kx=-k
1
 
x
1
-k
2
 
x
2
A=
B
0
01
0
R
,
  
B=
B
0
1
R
x#=Ax+Bu=0,
  
 for x=0=
3
q
0
Ae
At
 
xB*
 
QAe
At
 
xBdt70,
  
 for xZ0x*
 
Px=x*
 
3
q
0
e
A*
 
t
 
Qe
At
dtxA*
 
P+PA =-Q.P*=
3
q
0
e
A*
 
t
 
Qe
At
dt=P3
q
0
e
A*
 
t
 
Qe
At
dtte
l
i
 
t
p,t
m
i
-1
e
l
i
 
t
, e
l
i
 
t
, e
At
P=
3
q
0
Xdt=
3
q
0
e
A*
 
t
 
Qe
At
dt-X(0)=-Q=A*
a
3
q
0
Xdt
b
+
a
3
q
0
Xdt
b
 
AX(q)=0,
Openmirrors.com
Example Problems and Solutions 847Consider only the case where the initial condition is
Choose the undamped natural frequency to be 2 rad /H20862sec.
Solution. Substituting Equation (10–174) into Equation (10–173), we obtain
or
(10–175)
Thus,
Elimination of x2from Equation (10–175) yields
Since the undamped natural frequency is specified as 2 rad /H20862sec, we obtain
Therefore,
is a stable matrix if k2>0. Our problem now is to determine the value of k2so that the
performance index
is minimized, where the matrix Pis determined from Equation (10–115), rewritten
Since in this system Q=IandR=0, this last equation can be simplified to
(10–176)
Since the system involves only real vectors and real matrices, Pbecomes a real symmetric matrix.
Then Equation (10–176) can be written as
B0
1-4
-k2RBp11
p12p12
p22R+Bp11
p12p12
p22RB0
-41
-k2R=B-1
00
-1R(A-BK)* P+P(A-BK)=-I(A-BK)* P+P(A-BK)=-(Q+K* RK)J=
3q
0xT
 xdt=xT(0)  P(0)  x(0)A-BKA-BK =B0
-41
-k2Rk1=4x$
1+k2 x#
1+k1 x1=0A-BK =B0
-k11
-k2R =B0
-k11
-k2RBx1
x2R Bx#
1
x#
2R=B0
01
0RBx1
x2R+B01RC-k1 x1-k2 x2Dx#=Ax-BKxx(0)=Bc
0R
848
Chapter 10 / Control Systems Design in State Space
Solving for the matrix P, we obtain
The performance index is then
(10–177)
To minimize J, we differentiate Jwith respect to k
2
and set equal to zero as follows:
Hence,
With this value of k
2
,we have Thus, the minimum value of Jis obtained by substi-
tuting into Equation (10–177), or
The designed system has the control law
The designed system is optimal in that it results in a minimum value for the performance index J
under the assumed initial condition.
A–10–17. Consider the same inverted-pendulum system as discussed in Example 10–5.The system is shown
in Figure 10–8, where M=2 kg,m=0.1 kg, and l=0.5 m. The block diagram for the system is
shown in Figure 10–9. The system equations are given by
j#
=r-y=r-Cxu=-Kx+k
I
 
jy=Cxx#=Ax+Buu=-4x
1
-120
x
2
J
min
=15
2 c
2
k
2
=120
0
2
J/H208620k
2
2
70.k
2
=120
0J
0k
2
=
a
-5
2k
2
2
+1
8
b
 
c
2
=00J/H208620k
2
=
a
5
2k
2
+k
2
8
b
 
c
2
=[c
 
0]
B
p
11
p
12
p
12
p
22
RB
c
0
R
=p
11
 
c
2
J=x
T
(0)
 
Px(0)P=
B
p
11
p
12
p
12
p
22
R
=
D
5
2k
2
+k
2
8
1
81
8
5
8k
2
T
Openmirrors.com
Example Problems and Solutions 849where
Referring to Equation (10–51), the error equation for the system is given by
where
and the control signal is given by Equation (10–41):
where
Using MATLAB, determine the state feedback gain matrix such that the following
performance index Jis minimized:
J=
3q
0(e* Qe+u* Ru)dtKˆx=Dx1
x2
x3
x4T=Du
u#
x
x#Te=Bxe
jeR=Bx(t)-x(q)
j(t)-j(q)RKˆ=CK/H21752-kID=Ck1 k2 k3 k4/H21752-kIDue=-KˆeAˆ=BA
-C0
0R=E0
20.601
0
-0.4905
01
0
0000
0
00
-10
0
1000
0
000
U,  Bˆ=BB
0R=E0
-1
0
0.5
0Ue#=Aˆe+BˆueA=D0
20.601
0
-0.49051
0000
0000
010
T  ,  B=D0
-1
0
0.5T,  C=[0 0 1 0]
850
Chapter 10 / Control Systems Design in State Space
where
Obtain the unit-step response of the system designed.
Solution. A MATLAB program to determine is given in MATLAB Program 10–34.The result is
k
1
=-188.0799,
  
k
2
=-37.0738,
  
k
3
=-26.6767,
  
k
4
=-30.5824,
  
k
I
=-10.0000K
ˆ
Q=
E
100
0
0
0
00
1
0
0
00
0
1
0
00
0
0
1
00
0
0
0
1
U
,
  
R=0.01
MATLAB Program 10–34
% Design of quadratic optimal control system
A = [0  1  0  0;20.601  0  0  0;0  0  0  1;-0.4905  0  0  0];
B = [0;-1;0;0.5];
C = [0  0  1  0];
D = [0];
Ahat = [A zeros(4,1);-C  0];
Bhat = [B;0];
Q = [100  0  0  0  0;0  1  0  0  0;0  0  1  0  0;0  0  0  1  0;0  0  0  0  1];
R = [0.01];
Khat = lqr(Ahat,Bhat,Q,R)
Khat =
-188.0799  -37.0738  -26.6767  -30.5824  10.0000
Unit-Step Response .Once we have determined the feedback gain matrix Kand the integral gain
constant k
I
,we can determine the unit-step response of the designed system.The system equation
is
(10–178)
[Refer to Equation (10–35).] Since
Equation (10–178) can be written as follows:
(10–179)
The output equation is
y=[C    0]
B
x
j
R
+[0]r
B
x#
j#
R
=
B
A-BK
-CBk
I
0
RB
x
j
R
+
B
0
1
R
ru=-Kx+k
I
 
j
B
x#
j#
R
=
B
A
-C0
0
RB
x
j
R
+
B
B
0
R
u+
B
0
1
R
r
Openmirrors.com
MATLAB Program 10–35 gives the unit-step response of the system given by Equation (10–179).
The resulting response curves are presented in Figure 10–55. It shows response curves 
versus t, versus t, versus t, versus t,and versus t,where
the input r(t) to the cart is a unit-step function All initial conditions are set equal
to zero. Figure 10–56 is an enlarged version of the cart position  versus t.The cart
moves backward a very small amount for the first 0.6 sec or so. (Notice that the cart velocity isnegative for the first 0.4 sec.) This is due to the fact that the inverted-pendulum-on-the-cart system
is a nonminimum-phase system.yC=x
3(t)DCr(t) =1 mD.jC=x5(t)D y#C=x4(t)D yC=x3(t)D u#
C=x2(t)DuC=x1(t)D
Example Problems and Solutions 851MATLAB Program 10–35
% Unit-step responseA = [0  1  0  0;20.601  0  0  0;0  0  0  1;-0.4905  0  0  0];
B = [0;-1;0;0.5];C = [0  0  1  0];D = [0];K = [-188.0799  -37.0738  -26.6767  -30.5824];kI = -10.0000;AA = [A-B*K  B*kI; -C  0];BB = [0;0;0;0;1];CC= [C  0];DD = D;t = 0:0.01:10;[y,x,t] = step(AA,BB,CC,DD,1,t);x1 = [1  0  0  0  0]*x';x2 = [0  1  0  0  0]*x';x3 = [0  0  1  0  0]*x';x4 = [0  0  0  1  0]*x';x5 = [0  0  0  0  1]*x';
subplot(3,2,1); plot(t,x1); grid;
xlabel('t (sec)'); ylabel('x1')
subplot(3,2,2); plot(t,x2); grid;
xlabel('t (sec)'); ylabel('x2')
subplot(3,2,3); plot(t,x3); grid;
xlabel('t (sec)'); ylabel('x3')
subplot(3,2,4); plot(t,x4); grid;
xlabel('t (sec)'); ylabel('x4')
subplot(3,2,5); plot(t,x5); grid;
xlabel('t (sec)'); ylabel('x5')
Comparing the step-response characteristics of this system with those of Example 10–5, we
notice that the response of the present system is less oscillatory and exhibits less maximum
overshoot in the position response Ax3versus tB. The system designed by use of the quadratic
optimal regulator approach generally gives such characteristics—less oscillatory and well damped.
852
Chapter 10 / Control Systems Design in State Space
x
1
02468 1 0
t (sec)
02468 1 0
t (sec)
02468 1 0
t (sec)
02468 1 0
t (sec)
02468 1 0
t (sec)
−0.0200.020.04
x
5
0123
x
2
−0.050.05
00.10.15
x
3
−0.50.5
011.5
x
4
−0.20.2
00.40.6
Figure 10–55
Response curves to a
unit-step input.
Cart Position x
3
 versus t
Cart Position x
3
t (sec)0123456789 1 01.2
1
0.8
0.6
0.4
0.2
0
−0.2
Figure 10–56
Cart position versus t
curve.
A–10–18. Consider the stability of a system with unstructured additive uncertainty as shown in Figure
10–57(a). Define
true plant dynamics
G= model of plant dynamics
unstructured additive uncertainty ¢
a
=G/H33522=
Openmirrors.com
Example Problems and Solutions 853Gw
u
KWaI
yz
−+
K
(f)
(e)w
uz
yPG
K/H9004a
(d)uzw
−+/H9004a
TaBA
(c)G
K/H9004a
(a)y uA
++
–B/H9004a
K
Gyu
+−A B
(b)
Figure 10–57
(a) Block diagram of a system with unstructured additive uncertainty;(b)–(d) successive modifications of the block diagram of (a);(e) block diagram showing a generalized plant with unstructured additive uncertainty;(f) generalized plant diagram.
854
Chapter 10 / Control Systems Design in State Space
Assume that is stable and its upper bound is known.Assume also that and Gare related by 
=G+
a
Obtain the condition that the controller Kmust satisfy for robust stability. Also, obtain a gener-
alized plant diagram for this system.
Solution. Let us obtain the transfer function between point Aand point Bin Figure 10–57(a).
Redrawing Figure 10–57(a), we obtain Figure 10–57(b).Then the transfer function between points
AandBcan be obtained as
Define
Then Figure 10–57(b) can be redrawn as Figure 10–57(c). By using the small-gain theorem, the con-
dition for the robust stability of the closed-loop system can be obtained as 
(10–180)
Since it is impossible to model precisely, we need to find a scalar transfer function 
such that
for all v
and use this instead of 
a
. Then, the condition for the robust stability of the closed-loop
system can be given by
(10–181)
If Inequality (10–181) holds true, then it is evident that Inequality (10–180) also holds true. So this
is the condition to guarantee the robust stability of the designed system. In Figure 10–57(e),
a
in Figure 10–57(d) was replaced by .
To summarize, if we make the norm of the transfer function from wtozto be less than
1, the controller Kthat satisfies Inequality (10–181) can be determined.
Figure 10–57(e) can be redrawn as that shown in Figure 10–57(f), which is the generalized
plant diagram for the system considered.
Note that for this problem the matrix that relates the controlled variable zand the exoge-
nous disturbance wis given by
Noting that u(s)=K(s)y(s) and referring to Equation (10–128), is given by the elements
of the Pmatrix as follows:
To make this equal to we may choose P
11
=0, P
12
=W
a
, P
21
=I, and
P
22
=/H11002G. Then, the Pmatrix for this problem can be obtained as
P=
B
0
IW
a
-G
R
W
a
K(I +GK)
-1
, £(s)£(s)=P
11
+P
12
K(I -P
22
K)
-1
P
21
£(s)z=£ (s)w =(W
a
T
a
)w=[W
a
K(I +GK)
-1
]w£H
q
W
a
I¢7W
a
T
a
7
q
61¢ W
a
(jv)s
{¢
a
(jv)}6/H20895W
a
(jv)/H20895W
a
(jv) ¢
a
7¢
a
T
a
7
q
61K(1 +GK)
-1
=T
a
K
1+GK =K(1 +GK)
-1
¢ G/H33522G/H33522¢
a
Openmirrors.com
Problems 855x=Ax+Bu.y=Cx
x2
x3k2k1
k3r ux
y=x1
+–+–
Figure 10–58
Type 1 servo system.PROBLEMS
B–10–1. Consider the system defined by
where
Transform the system equations into (a) controllable canon-
ical form and (b) observable canonical form.
B–10–2. Consider the system defined by
where
Transform the system equations into the observable canon-
ical form.
B–10–3. Consider the system defined by
where
By using the state-feedback control it is desired to
have the closed-loop poles at Deter-mine the state-feedback gain matrix K.
B–10–4. Solve Problem B–10–3 with MATLAB.s=-10. s=-2;j4,u=-Kx,A=
C0
0
-11
0
-50
1
-6S,  B=C0
11S x#=Ax+BuA=C-1
100
-2
01
0
-3S, B=C0
11S, C=[1 1 1] y=Cx x#=Ax+BuC=[1 1 0] A=C-1
100
-2
01
0
-3S,  B=C0
01S, y=Cx x#=Ax+BuB–10–5. Consider the system defined by
Show that this system cannot be stabilized by the state-
feedback control whatever matrix Kis chosen.
B–10–6. A regulator system has a plant
Define state variables as
By use of the state-feedback control it is desired
to place the closed-loop poles at
Determine the necessary state-feedback gain matrix K.
B–10–7. Solve Problem B–10–6 with MATLAB.
B–10–8. Consider the type 1 servo system shown in Figure
10–58. Matrices A,B, and Cin Figure 10–58 are given by
Determine the feedback gain constants k1, k2,and k3such
that the closed-loop poles are located at
Obtain the unit-step response and plot the output 
y(t)-versus- tcurve.s=-2+j4,  s=-2-j4,  s=-10A=C0
001
0
-50
1
-6S,  B=C0
01S,  C=[1 0 0]s=-2+j213,  s=-2-j213,  s=-10u=-Kx, x3=x#
2 x2=x#
1 x1=yY(s)
U(s)=10
(s+1)(s +2)(s +3)u=-Kx,Bx#
1
x#
2R=B0
01
2RBx1
x2R+B10Ru
856
Chapter 10 / Control Systems Design in State Space
B–10–9. Consider the inverted-pendulum system shown in
Figure 10–59. Assume that
M=2 kg, m=0.5 kg, l=1 m
Define state variables as
and output variables as
Derive the state-space equations for this system.
It is desired to have closed-loop poles at
Determine the state-feedback gain matrix K.
Using the state-feedback gain matrix Kthus determined,
examine the performance of the system by computer simu-
lation.Write a MATLAB program to obtain the response of
the system to an arbitrary initial condition. Obtain the
response curves x
1
(t)versus t, x
2
(t)versus t, x
3
(t)versus t,
andx
4
(t)versus tfor the following set of initial condition:
x
1
(0)=0,
 
x
2
(0)=0,
 
x
3
(0)=0,
 
x
4
(0)=1 m/H20862ss=-4+j4,
  
s=-4-j4,
  
s=-20,
  
s=-20y
1
=u=x
1
 
,
  
y
2
=x=x
3
x
1
=u,
  
x
2
=u#
,
  
x
3
=x,
  
x
4
=x#where
Design a full-order state observer. The desired observer
poles are s=–5 ands=–5.
B–10–11. Consider the system defined by
where
Design a full-order state observer, assuming that the desired
poles for the observer are located at
s=–10, s=–10, s=–15
B–10–12. Consider the system defined by
Given the set of desired poles for the observer to be
design a full-order observer.
B–10–13. Consider the double integrator system defined by
If we choose the state variables as
then the state-space representation for the system becomes
as follows:
 y=[1
 
0]
B
x
1
x
2
R
 
B
x#
1
x#
2
R
=
B
0
01
0
RB
x
1
x
2
R
+
B
0
1
R
u x
2
=y# x
1
=yy$=us=-5+j513
,
  
s=-5-j513
,
  
s=-10y=[1
 
0
 
0]
C
x
1
x
2
x
3
S
+
C
0
0
1.244
S
u
C
x#
1
x#
2
x#
3
S
=
C
0
0
1.2441
0
0.39560
1
-3.145
SC
x
1
x
2
x
3
S
A=
C
0
0
-51
0
-60
1
0
S
,
  
B=
C
0
0
1
S
,
  
C=[1
 
0
 
0] y=Cx x#=Ax+BuA=
B
-1
11
-2
R
,
  
C=[1
 
0]
0
MP
z
umgm/H5129 sin u
x
x
/H5129 cos u
/H5129u
Figure 10–59
Inverted-pendulum system.
B–10–10. Consider the system defined by
 y=Cx x#=Ax
Openmirrors.com
Problems 857Y(s) R(s) U(s)Observer
controller+–s2+ 2s+ 50
s(s+ 4) (s+ 6)
Figure 10–60
Control system with observer controller in thefeedforward path.It is desired to design a regulator for this system. Using the
pole-placement-with-observer approach, design an observercontroller.
Choose the desired closed-loop poles for the pole-
placement part to be
s=–0.7071+j0.7071, s=–0.7071-j0.7071
and assuming that we use a minimum-order observer, choose
the desired observer pole at
s=–5
B–10–14. Consider the system
where
Design a regulator system by the pole-placement-with-
observer approach. Assume that the desired closed-looppoles for pole placement are located at
s=–1+j, s=–1-j, s=–5
The desired observer poles are located at
s=–6, s=–6, s=–6
Also, obtain the transfer function of the observer controller.
B–10–15. Using the pole-placement-with-observer approach,
design observer controllers (one with a full-order observer andthe other with a minimum-order observer) for the systemshown in Figure 10–60. The desired closed-loop poles for the
pole-placement part are
s=–1+j2, s=–1-j2, s=–5A=
C0
0
-61
0
-110
1
-6S,   B=C0
01S,   C=[1 0 0] y=Cx x#=Ax+BuThe desired observer poles are
s=–10, s=–10, s=–10 for the full-order observer
s=–10, s=–10 for the minimum-order observer.
Compare the unit-step responses of the designed systems.
Compare also the bandwidths of both systems.
B–10–16. Using the pole-placement-with-observer approach,
design the control systems shown in Figures 10–61(a) and (b).
Assume that the desired closed-loop poles for the pole place-ment are located at
s=–2+j2, s=–2-j2
and the desired observer poles are located at
s=–8, s=–8
Obtain the transfer function of the observer controller.
Compare the unit-step responses of both systems. [In System(b), determine the constant Nso that the steady-state out-
puty(q) is unity when the input is a unit-step input.]
Y(s) R(s)Observer
controller+–1
s(s+ 1)
1
s(s+ 1)Y(s)
Observer
controller+–
(b)R(s)
N(a)
Plant
Figure 10–61
Control systems with observer controller: (a) observer
controller in the feedforward path; (b) observer controller
in the feedback path.
B–10–17. Consider the system defined by
where
a=adjustable parameter 70A=C0
0
-11
0
-20
1
-aSx#=Ax
858
Chapter 10 / Control Systems Design in State Space
Determine the value of the parameter aso as to minimize
the following performance index:
Assume that the initial state x(0) is given by
B–10–18. Consider the system shown in Figure 10–62.
Determine the value of the gain Kso that the damping ratio
zof the closed-loop system is equal to 0.5. Then determine
also the undamped natural frequency v
n
of the closed-loop
system. Assuming that e(0)=1 and evaluate
3
q
0
e
2
(t)dte#(0)=0,x(0)=
C
c
1
0
0
S
J=
3
q
0
x
T
 
xdtB–10–21. Consider the inverted-pendulum system shown
in Figure 10–59. It is desired to design a regulator system
that will maintain the inverted pendulum in a vertical po-
sition in the presence of disturbances in terms of angle u
and/or angular velocity The regulator system is required
to return the cart to its reference position at the end of
each control process. (There is no reference input to the
cart.)
The state-space equation for the system is given by
where
We shall use the state-feedback control scheme
Using MATLAB, determine the state-feedback gain matrix
such that the following performance
index Jis minimized:
where
Then obtain the system response to the following initial
condition:
Plot response curves uversus t,versus t, xversus t,and
versus t.x#u#
D
x
1
(0)
x
2
(0)
x
3
(0)
x
4
(0)
T
=
D
0.1
0
0
0
T
Q=
D
100
0
0
00
1
0
00
0
1
00
0
0
1
T
,
  
R=1J=
3
q
0
Ax*
 
Qx+u*
 
RuBdtK=Ck
1
k
2
k
3
k
4
Du=-KxB=
D
0
-1
0
0.5
T
,
  
x=
D
u
u#
x
x#
T
A=
D
0
20.601
0
-0.49051
0
0
00
0
0
00
0
1
0
T
x#=Ax+Buu#.
+–
r= 0 c u e
K5
(s+ 1) (2 s+ 1)
Figure 10–62
Control system.
B–10–19. Determine the optimal control signal ufor the
system defined by
where
such that the following performance index is minimized:
B–10–20. Consider the system
It is desired to find the optimal control signal usuch that
the performance index
is minimized. Determine the optimal signal u(t).J=
3
q
0
Ax
T
 
Qx+u
2
Bdt,
  
Q=
B
1
00
m
RB
x#
1
x#
2
R
=
B
0
01
0
RB
x
1
x
2
R
+
B
0
1
R
uJ=
3
q
0
Ax
T
 
x+u
2
BdtA=
B
0
01
-1
R
,
  
B=
B
0
1
R
x#=Ax+Bu
Openmirrors.com
A
859Appendix
Appendix A first presents the complex variable and complex function.Then it presents
tables of Laplace transform pairs and properties of Laplace transforms. Finally, it presentsfrequently used Laplace transform theorems and Laplace transforms of pulse functionand impulse function.
Complex Variable. A complex number has a real part and an imaginary part, both
of which are constant. If the real part and/or imaginary part are variables, a complexquantity is called a complex variable . In the Laplace transformation we use the notation
sas a complex variable; that is,
wheresis the real part and vis the imaginary part.
Complex Function. A complex function G(s) , a function of s, has a real part and
an imaginary part or
where G
xand Gyare real quantities. The magnitude of G(s) is and the
angleuofG(s) is The angle is measured counterclockwise from the pos-
itive real axis. The complex conjugate of G(s) is
Complex functions commonly encountered in linear control systems analysis are
single-valued functions of sand are uniquely determined for a given value of s.G–(s)=Gx-jGy .tan-1
 AGy/H20862GxB.2Gx2+Gy2,G(s) =Gx+jGys=s+jvLaplace Transform Tables
A complex function G(s) is said to be analytic in a region if G(s) and all its deriva-
tives exist in that region. The derivative of an analytic function G(s) is given by
Since can approach zero along an infinite number of different
paths. It can be shown, but is stated without a proof here, that if the derivatives taken
along two particular paths, that is, and are equal, then the deriva-
tive is unique for any other path and so the derivative exists.
For a particular path (which means that the path is parallel to the real
axis),
For another particular path (which means that the path is parallel to the
imaginary axis),
If these two values of the derivative are equal,
or if the following two conditions
are satisfied, then the derivative dG(s)/ dsis uniquely determined.These two conditions
are known as the Cauchy–Riemann conditions. If these conditions are satisfied, the func-
tion G(s) is analytic.
As an example, consider the following G(s) :
Then
G(s+jv)=1
s+jv+1=G
x
+jG
y
G(s) =1
s+10G
x
0s=0G
y
0v
  
and
  
0G
y
0s=-0G
x
0v0G
x
0s+j0G
y
0s=0G
y
0v-j0G
x
0vd
dsG(s) =lim
j¢vS0
 
a
¢G
x
j¢v+j¢G
y
j¢v
b
=-j0G
x
0v+¢G
y
0v¢s=j¢vd
dsG(s) =lim
¢sS0
 
a
¢G
x
¢s+j¢G
y
¢s
b
=0G
x
0s+j0G
y
0s¢s=¢s¢s=¢s+j¢v¢s=j¢v, ¢s=¢s¢s=¢s+j¢v, ¢sd
dsG(s) =lim
¢sS0
G(s +¢s)-G(s)
¢s=lim
¢sS0
¢G
¢s
860
Appendix A / Laplace Transform Tables
Openmirrors.com
where
It can be seen that, except at s=–1 ( that is, s=–1 ,v=0) ,G(s) satisfies the
Cauchy–Riemann conditions:
Hence G(s)=1/(s+1) is analytic in the entire splane except at s=–1 . The deriva-
tivedG(s)/ ds, except at s=1 , is found to be
Note that the derivative of an analytic function can be obtained simply by differentiat-
ingG(s) with respect to s. In this example,
Points in the splane at which the function G(s) is analytic are called ordinary
points, while points in the splane at which the function G(s) is not analytic are called
singular points. Singular points at which the function G(s) or its derivatives approach
infinity are called poles . Singular points at which the function G(s) equals zero are
called zeros .
IfG(s) approaches infinity as sapproaches –pand if the function
forn=1 ,2 ,3 , p
has a finite, nonzero value at s=–p , then s=–p is called a pole of order n. If n=1 ,
the pole is called a simple pole. If n=2 ,3 ,p, the pole is called a second-order pole, a
third-order pole, and so on.
To illustrate, consider the complex function
G(s) =K(s +2)(s +10)
s(s+1)(s +5)(s +15)2G(s)(s +p)n,d
dsa1
s+1b=-1
(s+1)2=-1
(s+jv+1)2=-1
(s+1)2d
dsG(s) =0Gx
0s+j0Gy
0s=0Gy
0v-j0Gx
dv0Gy
0s=-0Gx
0v=2v(s+1)
C(s+1)2+v2D20Gx
0s=0Gy
0v=v2-(s+1)2
C(s+1)2+v2D2Gx=s+1
(s+1)2+v2  and  Gy=-v
(s+1)2+v2
Appendix A / Laplace Transform Tables 861
G(s) has zeros at s=–2, s=–10 , simple poles at s=0, s=–1, s=–5 , and a double
pole (multiple pole of order 2) at s=–15 . Note that G(s) becomes zero at s= q. Since
for large values of s
G(s) possesses a triple zero (multiple zero of order 3) at s= q. If points at infinity are
included, G(s) has the same number of poles as zeros.To summarize, G(s) has five zeros
(s=–2, s=–10, s= q,s= q,s= q)and five poles (s=0, s=–1, s=–5,
s=–15, s=–15) .
Laplace Transformation. Let us define
f(t)= a function of time tsuch that f(t)=0 fort<0
s= a complex variable
l=an operational symbol indicating that the quantity that it prefixes is to
be transformed by the Laplace integral 
F(s)= Laplace transform of f(t)
Then the Laplace transform of f(t) is given by
The reverse process of finding the time function f(t) from the Laplace transform F(s)
is called the inverse Laplace transformation .The notation for the inverse Laplace trans-
formation is l
–1
, and the inverse Laplace transform can be found from F(s) by the fol-
lowing inversion integral:
where c, the abscissa of convergence, is a real constant and is chosen larger than the real
parts of all singular points of F(s) .Thus, the path of integration is parallel to the jvaxis
and is displaced by the amount cfrom it.This path of integration is to the right of all sin-
gular points.
Evaluating the inversion integral appears complicated. In practice, we seldom use this
integral for finding f(t). We frequently use the partial-fraction expansion method given
in Appendix B.
In what follows we give Table A–1, which presents Laplace transform pairs of com-
monly encountered functions, and Table A–2, which presents properties of Laplace
transforms.l
-1
CF(s)D=f(t) =1
2pj3
c+jq
c-jq
F(s)e
st
ds,
  
fort70lCf(t)D=F(s) =
3
q
0
e
-st
dtCf(t)D=
3
q
0
f(t)e
-st
dt1
q
0
e
-st
dtG(s)/H11216K
s
3
862
Appendix A / Laplace Transform Tables
Openmirrors.com
Appendix A / Laplace Transform Tables 863f(t) F(s)
1 Unit impulse d(t) 1
2 Unit step 1(t)
3 t
4
5 tn(n=1, 2, 3, p)
6 e–at
7 te–at
8
9 tne–at(n=1, 2, 3, p)
10 sin vt
11 cos vt
12 sinh vt
13 cosh vt
14
15
16
171
s(s+a)(s +b)1
abc1+1
a-bAbe-at-ae-btBds
(s+a)(s +b)1
b-aAbe-bt-ae-atB1
(s+a)(s +b)1
b-aAe-at-e-btB1
s(s+a)1
aA1-e-atBs
s2-v2v
s2-v2s
s2+v2v
s2+v2n!
(s+a)n+11
(s+a)n1
(n-1)!tn-1e-at  (n=1, 2, 3, p)1
(s+a)21
s+an!
sn+11
sntn-1
(n-1)!  (n=1, 2, 3, p)1
s21
sTable A–1 Laplace Transform Pairs
(continues on next page )
864
Appendix A / Laplace Transform Tables
18
19
20 e
–at
sinvt
21 e
–at
cosvt
22
23
24
25 1- cosvt
26 vt-sinvt
27 sin vt-vtcosvt
28
29 tcosvt
30
31s
2
As
2
+v
2
B
2
1
2v(sinvt+vtcosvt)s
As
2
+v
2
1
BAs
2
+v
2
2
B1
v
2
2
-v
2
1
Acosv
1
 
t-cosv
2
 
tB
  
Av
2
1
Zv
2
2
Bs
2
-v
2
As
2
+v
2
B
2
s
As
2
+v
2
B
2
1
2vtsinvt2v
3
As
2
+v
2
B
2
v
3
s
2
As
2
+v
2
Bv
2
sAs
2
+v
2
B(06z61,
 
06f6p/H208622)v
2
n
sAs
2
+2zv
n
 
s+v
2
n
B f=tan
-1
21-z
2
z1-1
21-z
2
e
-zv
n
 
t
sin
 
Av
n
21-z
2
t+fB(06z61,
 
06f6p/H208622)s
s
2
+2zv
n
 
s+v
2
n
f=tan
-1
21-z
2
z-1
21-z
2
e
-zv
n
 
t
sin
 
Av
n
21-z
2
t-fBv
2
n
s
2
+2zv
n
 
s+v
2
n
v
n
21-z
2
e
-zv
n
 
t
sinv
n
21-z
2
t
 
(06z61)s+a
(s+a)
2
+v
2
v
(s+a)
2
+v
2
1
s
2
(s+a)1
a
2
Aat-1+e
-at
B1
s(s+a)
2
1
a
2
A1-e
-at
-ate
-at
B
Table A–1
(continued )
Openmirrors.com
Appendix A / Laplace Transform Tables 8651
2
3
4
5
where
6
7
8
9
10
11
12
13
14
15
16
17
18 lCf(t)g(t)D=1
2pj3c+jq
c-jqF(p)G(s -p)dplc
3t
0f1(t-t)f2(t)dtd=F1(s)F2(s)lcfa1
abd=aF(as)lc1
tf(t)d=
3q
sF(s) ds  if lim
tS01
tf(t) existslCtnf(t)D=(-1)ndn
dsnF(s)  (n=1, 2, 3, p)lCt2f(t)D=d2
ds2F(s)lCtf(t)D=-dF(s)
dslCf(t-a)1(t -a)D=e-asF(s)  a/H113500lCe-atf(t)D=F(s +a)3q
0f(t) dt=lim
sS0F(s)  if
3q
0f(t) dt existslc
3t
0f(t) dtd=F(s)
sl;c
3p
3f(t)( dt)nd=F(s)
sn+an
k=11
sn-k+1c
3p
3f(t)( dt)kd
t=0 ;l;c
3f(t) dtd=F(s)
s+1
sc
3f(t) dtd
t=0 ;f(t)(k-1)
=dk-1
dtk-1f(t)l;cdn
dtnf(t)d=snF(s) -an
k=1sn-kf(0 ;)(k-1)l;cd2
dt2f(t)d=s2F(s) -sf(0  ;)-f#
(0  ;)l;cd
dtf(t)d=sF(s) -f(0  ;)lCf1(t);f2(t)D=F1(s);F2(s)lCAf(t)D=AF(s)Table A–2 Properties of Laplace Transforms
Finally, we present two frequently used theorems, together with Laplace transforms
of the pulse function and impulse function.
866
Appendix A / Laplace Transform Tables
Initial value theorem
Final value theorem
Pulse function
Impulse function
=As
s=A=lim
t
0
S0
d
dt
0
[A(1-e
-st
0
)]
d
dt
0
(t
0
s)  
 
=0,
    
 for t60,t
0
6tlCg(t)D=lim
t
0
S0
c
A
t
0
s(1-e
-st
0
)
d
g(t) =lim
t
0
S0
A
t
0
,
  
for 0 6t6t
0
lCf(t)D=A
t
0
s-A
t
0
se
-st
0
f(t) =A
t
0
1(t)-A
t
0
1(t-t
0
)f(q)=lim
tSq
f(t)=lim
sS0
sF(s)f(0+)=lim
tS0+
f(t)=lim
sSq
sF(s)
Openmirrors.com
B
867Appendix
Before we present MATLAB approach to the partial-fraction expansions of transfer
functions, we discuss the manual approach to the partial-fraction expansions of transferfunctions.
Partial-Fraction Expansion when F(s) Involves Distinct Poles Only. Consider
F(s) written in the factored form
form<n
where p
1,p2,p,pnandz1,z2,p,zmare either real or complex quantities, but for each com-
plex piorzjthere will occur the complex conjugate of piorzj, respectively. If F(s) involves
distinct poles only, then it can be expanded into a sum of simple partial fractions as follows:
(B–1)
where ak(k=1, 2,p,n) are constants.The coefficient akis called the residue at the pole
ats=–pk. The value of akcan be found by multiplying both sides of Equation (B–1)
byAs+pkBand letting s=–pk, which gives
 =ak+p+ak
s+pkAs+pkB+p+an
s+pnAs+pkBR
s=-pkcAs+pkBB(s)
A(s)d
s=-pk=ca1
s+p1 As+pkB+a2
s+p2As+pkBF(s) =B(s)
A(s)=a1
s+p1+a2
s+p2+p+an
s+pnF(s) =B(s)
A(s)=KAs+z1BAs+z2BpAs+zmB
As+p1BAs+p2BpAs+pnB,Partial-Fraction Expansion
We see that all the expanded terms drop out with the exception of a
k
. Thus the residue
a
k
is found from
Note that, since f(t) is a real function of time, if p
1
andp
2
are complex conjugates, then
the residues a
1
anda
2
are also complex conjugates. Only one of the conjugates, a
1
ora
2
,
needs to be evaluated, because the other is known automatically.
Since
f(t) is obtained as
fort/H113500
EXAMPLE B–1
Find the inverse Laplace transform of
The partial-fraction expansion of F(s) is
where a
1
anda
2
are found as
Thus
fort/H113500
EXAMPLE B–2
Obtain the inverse Laplace transform of
Here, since the degree of the numerator polynomial is higher than that of the denominator poly-
nomial, we must divide the numerator by the denominator.
G(s) =s+2+s+3
(s+1)(s+2)G(s) =s
3
+5s
2
+9s+7
(s+1)(s+2)=2e
-t
-e
-2t
,=l
-1
c
2
s+1
d
+l
-1
c
-1
s+2
d
f(t) =l
-1
CF(s)Da
2
=
c
(s+2)s+3
(s+1)(s +2)
d
s=-2
=
c
s+3
s+1
d
s=-2
=-1a
1
=
c
(s+1)s+3
(s+1)(s +2)
d
s=-1
=
c
s+3
s+2
d
s=-1
=2F(s) =s+3
(s+1)(s +2)=a
1
s+1+a
2
s+2F(s) =s+3
(s+1)(s +2)
f(t) =l
-1
CF(s)D=a
1
 
e
-p
1
 
t
+a
2
 
e
-p
2
 
t
+p+a
n
 
e
-p
n
 
t
,l
-1
c
a
k
s+p
k
d
=a
k
 
e
-p
k
 
t
a
k
=
c
As+p
k
BB(s)
A(s)
d
s=-p
k
868
Appendix B / Partial-Fraction Expansion
Openmirrors.com
Note that the Laplace transform of the unit-impulse function d(t)is 1 and that the Laplace
transform of dd(t)/ dtiss. The third term on the right-hand side of this last equation is F(s) in
Example B–1. So the inverse Laplace transform of G(s) is given as
fort/H113500–
EXAMPLE B–3 Find the inverse Laplace transform of
Notice that the denominator polynomial can be factored as
If the function F(s) involves a pair of complex-conjugate poles, it is convenient not to expand
F(s) into the usual partial fractions but to expand it into the sum of a damped sine and a damped
cosine function.
Noting that s2+2s+5=(s+1)2+22and referring to the Laplace transforms of e–atsinvt
ande–atcosvt, rewritten thus,
the given F(s) can be written as a sum of a damped sine and a damped cosine function:
It follows that
fort/H113500
Partial-Fraction Expansion when F(s) Involves Multiple Poles. Instead of dis-
cussing the general case, we shall use an example to show how to obtain the partial-fraction expansion of F(s) .
Consider the following F(s) :
The partial-fraction expansion of this F(s) involves three terms,
F(s) =B(s)
A(s)=b1
s+1+b2
(s+1)2+b3
(s+1)3F(s) =s2+2s+3
(s+1)3 =5e-tsin2t+2e-tcos2t, =5l-1c2
(s+1)2+22d+2l-1cs+1
(s+1)2+22d f(t) =l-1CF(s)D =5 2
(s+1)2+22+2 s+1
(s+1)2+22 F(s) =2s+12
s2+2s+5=10+2(s+1)
(s+1)2+22lCe-atcosvtD=s+a
(s+a)2+v2lCe-atsinvtD=v
(s+a)2+v2s2+2s+5=(s+1+j2)(s +1-j2)F(s) =2s+12
s2+2s+5g(t) =d
dtd(t)+2d(t)+2e-t-e-2t,
Appendix B / Partial-Fraction Expansion 869
where b
3
,b
2
, and b
1
are determined as follows. By multiplying both sides of this last
equation by (s+1)
3
, we have
(B–2)
Then letting s=–1 , Equation (B–2) gives
Also, differentiation of both sides of Equation (B–2) with respect to syields
(B–3)
If we let s=–1 in Equation (B–3), then
By differentiating both sides of Equation (B–3) with respect to s, the result is
From the preceding analysis it can be seen that the values of b
3
,b
2
, and b
1
are found
systematically as follows:
 =1
2 (2) =1 =1
2!
c
d
2
ds
2
 As
2
+2s+3B
d
s=-1
 b
1
=1
2!
e
d
2
ds
2
c
(s+1)
3
B(s)
A(s)
d
f
s=-1
 =0 =(2s+2)
s=-1
 =
c
d
ds As
2
+2s+3B
d
s=-1
 b
2
=
e
d
ds
c
(s+1)
3
 B(s)
A(s)
d
f
s=-1
 =2 =As
2
+2s+3B
s=-1
 b
3
=
c
(s+1)
3
 B(s)
A(s)
d
s=-1
d
2
ds
2
c
(s+1)
3
B(s)
A(s)
d
=2b
1
d
ds
c
(s+1)
3
B(s)
A(s)
d
s=-1
=b
2
d
ds
c
(s+1)
3
B(s)
A(s)
d
=b
2
+2b
1
(s+1)
c
(s+1)
3
B(s)
A(s)
d
s=-1
=b
3
(s+1)
3
B(s)
A(s)=b
1
(s+1)
2
+b
2
(s+1)+b
3
870
Appendix B / Partial-Fraction Expansion
Openmirrors.com
We thus obtain
fort/H113500
Comments. For complicated functions with denominators involving higher-order
polynomials, partial-fraction expansion may be quite time consuming. In such a case,use of MATLAB is recommended.
Partial-Fraction Expansion with MATLAB. MATLAB has a command to
obtain the partial-fraction expansion of B(s)/A(s) . Consider the following function
B(s)/A(s) :
where some of a
iandbjmay be zero. In MATLAB row vectors num and den specify the
coefficients of the numerator and denominator of the transfer function. That is,
num = [b0b1...  bn]
den = [1   a1...  an]
The command
[r,p,k] = residue(num,den)
finds the residues ( r), poles ( p), and direct terms ( k) of a partial-fraction expansion of
the ratio of two polynomials B(s) andA(s) .
The partial-fraction expansion of B(s)/A(s) is given by
(B–4)
Comparing Equations (B–1) and (B–4), we note that p(1)=–p1, p(2)=–p2,p,
p(n)=–pn;r(1)=a1, r(2)=a2,p,r(n)=an.[k(s) is a direct term.]
EXAMPLE B–4 Consider the following transfer function,
B(s)
A(s)=2s3+5s2+3s+6
s3+6s2+11s +6B(s)
A(s)=r(1)
s-p(1)+r(2)
s-p(2)+p+r(n)
s-p(n)+k(s)B(s)
A(s)=num
den=b0 sn+b1 sn-1+p+bn
sn+a1 sn-1+p+an =A1+t2Be-t, =e-t+0+t2e-t =l-1c1
s+1d+l-1c0
(s+1)2d+l-1c2
(s+1)3d f(t) =l-1CF(s)D
Appendix B / Partial-Fraction Expansion 871
For this function,
num= [2  5  3  6]
den = [1  6  11  6]
The command
[r,p,k] = residue(num,den)
gives the following result:
872
Appendix B / Partial-Fraction Expansion
[r,p,k] = residue(num,den)
r =
-6.0000
-4.0000
3.0000
p =
-3.0000
-2.0000
-1.0000
k =
2
(Note that the residues are returned in column vector r, the pole locations in column vector p, and
the direct term in row vector k.) This is the MATLAB representation of the following partial-
fraction expansion of B(s)/A(s) :
Note that if p(j)=p(j+1)= p=p(j+m-1) Cthat is, p
j
=p
j+1
=p=p
j+m-1
D, the
pole p(j) is a pole of multiplicity m. In such a case, the expansion includes terms of the form
For details, see Example B–5.r(j)
s-p(j)+r(j+1)
Cs-p(j)D
2
+p+r(j+m-1)
Cs-p(j)D
m
 =-6
s+3+-4
s+2+3
s+1+2 B(s)
A(s)=2s
3
+5s
2
+3s+6
s
3
+6s
2
+11s +6
Openmirrors.com
EXAMPLE B–5 Expand the following B(s)/A(s) into partial fractions with MATLAB.
For this function, we have
num = [1  2  3]
den = [1  3  3  1]
The command
[r,p,k] = residue(num,den)
gives the result shown next:B(s)
A(s)=s2+2s+3
(s+1)3=s2+2s+3
s3+3s2+3s+1
Appendix B / Partial-Fraction Expansion 873It is the MATLAB representation of the following partial-fraction expansion of B(s)/A(s) :
Note that the direct term kis zero.B(s)
A(s)=1
s+1+0
(s+1)2+2
(s+1)3num = [1  2  3];
den = [1  3  3  1];[r,p,k] = residue(num,den)
r =
1.0000
0.00002.0000
p =
-1.0000
-1.0000-1.0000
k =
[]
C
874
Appendix
In this appendix we first review the determinant of a matrix, then we define the adjoint
matrix, the inverse of a matrix, and the derivative and integral of a matrix.
Determinant of a Matrix. For each square matrix, there exists a determinant.The
determinant of a square matrix Ais usually written as or det A. The determinant has
the following properties:
1.If any two consecutive rows or columns are interchanged, the determinant changes
its sign.
2.If any row or any column consists only of zeros, then the value of the dererminant
is zero.
3.If the elements of any row (or any column) are exactly ktimes those of another
row (or another column), then the value of the determinant is zero.
4.If, to any row (or any column), any constant times another row (or column) is
added, the value of the determinant remains unchanged.
5.If a determinant is multiplied by a constant, then only one row (or one column) is
multiplied by that constant. Note, however, that the determinant of ktimes an
n*n matrix Aisk
n
times the determinant of A, or 
@kA@=k
n
@A@@A@
Vector-Matrix Algebra
Openmirrors.com
This is because
6.The determinant of the product of two square matrices AandBis the product of
determinants, or 
IfB=n*m matrix and C=m*n matrix, then 
det(In+BC)= det(Im+CB)
If andD=m*m matrix, then
where S=D-CA/H110021 B.
If , then
where T=A-BD/H110021C.
If or then
Rank of Matrix. A matrix Ais said to have rank mif there exists an m*m sub-
matrix MofAsuch that the determinant of Mis nonzero and the determinant of every
r*r submatrix (where ) of Ais zero.
As an example, consider the following matrix:
A=D12  34
01 -10
10  1211  02Tr/H11350m+1detcAB
0Dd=detA/H11080detDdetcA0
CDd=detA/H11080detDC=0, B=0detcAB
CDd=detD/H11080detTDZ0detcAB
CDd=detA/H11080detSAZ0@AB@=@A@@B@kA=Dka11 ka12 p ka1m
ka21ka22 p ka2m
oo o
kan1kan2p kanmT
Appendix C / Vector-Matrix Algebra 875
Note that =0 . One of a number of largest submatrices whose determinant is not
equal to zero is
Hence, the rank of the matrix Ais 3.
Minor M
ij
.If the ith row and jth column are deleted from an n*n matrix A,
the resulting matrix is an (n-1)*(n-1) matrix. The determinant of this 
(n-1) /H11003 (n-1) matrix is called the minor M
ij
of the matrix A.
Cofactor A
ij
.The cofactor A
ij
of the element a
ij
of the n*n matrix Ais defined
by the equation 
A
ij
=( /H110021)
i/H11001j
M
ij
That is, the cofactor A
ij
of the element a
ij
is(/H110021)
i/H11001j
times the determinant of the matrix
formed by deleting the ith row and the jth column from A. Note that the cofactor A
ij
of
the element a
ij
is the coefficient of the term a
ij
in the expansion of the determinant ,
since it can be shown that 
If are replaced by then
because the determinant of Ain this case possesses two identical rows. Hence, we obtain
Similarly,
Adjoint Matrix .The matrix Bwhose element in the ith row and jth column equals
A
ji
is called the adjoint of Aand is denoted by adj A,o r
B=(b
ij
)=(A
ji
)= adjA
That is, the adjoint of Ais the transpose of the matrix whose elements are the cofactors
ofA,o r
adjA=
D
A
11
A
21
p A
n1
A
12
A
22
p A
n2
oo o
A
1n
A
2n
p A
nm
T
a
n
k=1
a
ki
A
kj
=d
ij
@A@a
n
k=1
a
jk
A
ik
=d
ji
@A@a
j1
A
i1
+a
j2
A
i2
+p+a
jn
A
in
=0    iZja
j1
,a
j2
,p,a
jn
, a
i1
,a
i2
,p,a
in
a
i1
A
i1
+a
i2
A
i2
+p+a
in
A
in
=@A@@A@
C
1 2   3
01 -1
10   1
S
@A@
876
Appendix C / Vector-Matrix Algebra
Openmirrors.com
Note that the element of the jth row and ith column of the product A(adjA)is
Hence, A(adjA)is a diagonal matrix with diagonal elements equal to , or 
A(adjA)= I
Similarly, the element in the jth row and ith column of the product (adjA)Ais
Hence, we have the relationship 
A(adjA)=( adjA)A= I (C–1)
Thus
where Aijis the cofactor of aijof the matrix A. Thus, the terms in the ith column of A/H110021
are l/ times the cofactors of the ith row of the original matrix A. For example, if
then the adjoint of Aand the determinant are respectively found to be@A@A=C1   2   0
3-1-2
1  0 -3S@A@GA11
@A@A21
@A@pAn1
@A@
A12
@A@A22
@A@pAn2
@A@
oo o
A1n
@A@A2n
@A@pAnn
@A@W A-1=adjA
@A@=@A@an
k=1bjkaki=an
k=1Akjaki=dij@A@@A@@A@an
k=1ajkbki=an
k=1ajkAik=dji@A@
Appendix C / Vector-Matrix Algebra 877G W adjA=
=C3  6 -4
7-3    2
1   2 -7S`3-1
1  0`   -`12
10`    `1  23-1`-`3-2
1-3`   `1  0
1-3`  -`1  0
3-2``-1-2
  0 -3`  -`2  0
0-3`   `  2   0
-1-2`
and
=17
Hence, the inverse of Ais
In what follows, we give formulas for finding inverse matrices for the 2*2 matrix
and the 3*3 matrix. For the 2*2 matrix
the inverse matrix is given by
For the 3*3 matrix
the inverse matrix is given byA=
C
abc
def
ghi
S
    where@A@Z0A
-1
=1
ad-bc
c
d-b
-ca
d
A=
c
ab
cd
d
       where ad-bcZ0A
-1
=adjA
@A@=
C
3
176
17-4
17
7
17-3
172
17
1
172
17-7
17
S
@A@
878
Appendix C / Vector-Matrix Algebra
G W
`
de
gh
`
 -
`
ab
gh
`
   
`
ab
de
`
-
`
df
gi
`
   
`
ac
gi
`
  -
`
ac
df
`
A
-1
=1
@A@
`
ef
hi
`
  -
`
bc
hi
`
   
`
bc
ef
`
Note that
There are several more useful formulas available. Assume that A=n*n matrix,
B=n*m matrix, C=m*n matrix, and D=m*m matrix. Then
[A+BC]
-1
=A
-1
-A
-1
B[I
m
+CA
-1
B]
-1
CA
-1
(A
-1
)*=(A*)
-1
(A
-1
)¿=(A¿)
-1
(A
-1
)
-1
=A
Openmirrors.com
If and then
If then
If thenFinally, we present the MATLAB approach to obtain the inverse of a square matrix.
If all elements of the matrix are given as numerical values, this approach is best.
MATLAB Approach to Obtain the Inverse of a Square Matrix. The inverse of
a square matrix Acan be obtained with the command
inv(A)
For example, if matrix Ais given by
then the inverse of matrix Ais obtained as follows:A=
C112
340125ScAB
CDd-1
=cT-1-T-1 BD-1
-D-1 CT-1D-1+D-1 CT-1 BD-1d@D@Z0,T=A-BD-1 C, and @T@Z0,cAB
CDd-1
=cA-1+A-1 BS-1 CA-1-A-1 BS-1
-S-1 CA-1S-1d@A@Z0,S=D-CA-1B,@S@Z0,cA0
CDd-1
=cA-10
-D-1 CA-1D-1dcAB
0Dd-1
=cA-1-A-1BD-1
0D-1d@D@Z0, @A@Z0
Appendix C / Vector-Matrix Algebra 879A = [1  1  2;3  4  0;1  2  5];
inv(A)
ans =
2.2222 /H110020.1111 /H110020.8889
/H110021.6667 0.3333 0.6667
0.2222 /H110020.1111 0.1111
That is
MATLAB Is Case Sensitive. It is important to note that MATLAB is case sen-
sitive.That is, MATLAB distinguishes between upper- and lowercase letters.Thus, xand
Xare not the same variable. All function names must be in lowercase, such as inv(A) ,
eig(A) , and poly(A) .
Differentiation and Integration of Matrices. The derivative of an n*m matrix
A(t)is defined to be the n*m matrix, each element of which is the derivative of the
corresponding element of the original matrix, provided that all the elements a
ij
(t)have
derivatives with respect to t. That is,
Similarly, the integral of an n*m matrix A(t)is defined to be
Differentiation of the Product of Two Matrices. If the matrices A(t)andB(t)
can be differentiated with respect to t, then
Here again the multiplication of A(t)anddB(t)/dt [ordA(t)/dt andB(t)] is, in gener-
al, not commutative.d
dt[A(t)B(t)] =dA(t)
dtB(t)+A(t)dB(t)
dt
G
3a
11
(t) dt
3a
12
(t) dt p
3a
1m
(t) dt
3a
21
(t) dt
3a
22
(t) dt p
3a
2m
(t) dt
oo o
3a
n1
(t) dt
3a
2n
(t) dt p
3a
nm
(t) dt
W
3A(t) dt =
a
3a
ij
(t) dt
b
=
G
d
dta
11
(t)d
dta
12
(t) pd
dta
1m
(t)
d
dta
21
(t)d
dta
22
(t) pd
dta
2m
(t)
oo o
d
dta
n1
(t)d
dta
n2
(t) pd
dta
nm
(t)
W
d
dt A(t)=
a
d
dt a
ij
(t)
b
=A
-1
=
C
   2.2222 -0.1111 -0.8889
-1.6667    0.3333    0.6667
  0.2222 -0.1111    0.1111
S
880
Appendix C / Vector-Matrix Algebra
Openmirrors.com
Differentiation of A21(t).If a matrix A(t)and its inverse A/H110021(t)are differen-
tiable with respect to t, then the derivative of A/H110021(t)is given by 
The derivative may be obtained by differentiating A(t)A/H110021(t)with respect to t. Since
and
we obtainor
dA
-1(t)
dt=-A-1(t)dA(t)
dtA-1(t)A(t)dA-1(t)
dt=-dA(t)
dtA-1(t)d
dt[A(t)A-1(t)] =d
dtI=0d
dt[A(t)A-1(t)] =dA(t)
dtA-1(t)+A(t)dA-1(t)
dtdA-1(t)
dt=-A-1(t)dA(t)
dtA-1(t)
Appendix C / Vector-Matrix Algebra 881
R
882
References
A–1 Anderson, B. D. O., and J. B. Moore, Linear Optimal Control . Upper Saddle River, NJ:
Prentice Hall, 1971.
A–2 Athans, M., and P . L. Falb, Optimal Control: An Introduction to the Theory and Its Appli-
cations . New York: McGraw-Hill Book Company, 1965.
B–1 Barnet, S., “Matrices, Polynomials, and Linear Time-Invariant Systems,” IEEE Trans.
Automatic Control ,AC-18 (1973), pp. 1–10.
B–2 Bayliss, L. E., Living Control Systems. London: English Universities Press Limited, 1966.
B–3 Bellman, R., Introduction to Matrix Analysis . New York: McGraw-Hill Book Company,
1960.
B–4 Bode, H. W., Network Analysis and Feedback Design . New York: Van Nostrand Reinhold,
1945.
B–5 Brogan, W. L., Modern Control Theory . Upper Saddle River, NJ: Prentice Hall, 1985.
B–6 Butman, S., and R. Sivan (Sussman),“On Cancellations, Controllability and Observability,”
IEEE Trans. Automatic Control ,AC-9 (1964), pp. 317–8.
C–1 Campbell, D. P , Process Dynamics . New York: John Wiley & Sons, Inc., 1958.
C–2 Cannon, R., Dynamics of Physical Systems . New York: McGraw-Hill Book Company, 1967.
C–3 Chang, P . M., and S. Jayasuriya, “An Evaluation of Several Controller Synthesis Method-
ologies Using a Rotating Flexible Beam as a Test Bed,” ASME J. Dynamic Systems,
Measurement, and Control ,117(1995), pp. 360–73.
C–4 Cheng, D. K., Analysis of Linear Systems . Reading, MA: Addison-Wesley Publishing
Company, Inc., 1959.
C–5 Churchill, R.V ., Operational Mathematics , 3rd ed. New York: McGraw-Hill Book Company,
1972.
Openmirrors.com
C–6 Coddington, E.A., and N. Levinson, Theory of Ordinary Differential Equations . New York:
McGraw-Hill Book Company, 1955.
C–7 Craig, J. J., Introduction to Robotics, Mechanics and Control . Reading, MA:AddisonWesley
Publishing Company, Inc., 1986.
C–8 Cunningham, W J., Introduction to Nonlinear Analysis. New York: McGraw-Hill Book
Company, 1958.
D–1 Dorf, R. C., and R. H. Bishop, Modern Control Systems , 9th ed. Upper Saddle River, NJ:
Prentice Hall, 2001.
E–1 Enns, M., J. R. Greenwood III, J. E. Matheson, and F. T. Thompson, “Practical Aspects of
State-Space Methods Part I: System Formulation and Reduction,” IEEE Trans. Military
Electronics ,MIL-8 (1964), pp. 81–93.
E–2 Evans, W. R., “Graphical Analysis of Control Systems,” AIEE Trans. Part II ,67(1948),
pp. 547-51.
E–3 Evans, W. R., “Control System Synthesis by Root Locus Method,” AIEE Trans Part II ,69
(1950), pp. 66–9.
E–4 Evans,W. R.,“The Use of Zeros and Poles for Frequency Response or Transient Response,”
ASME Trans .76(1954), pp. 1135–44.
E–5 Evans, W. R., Control System Dynamics . New York: McGraw-Hill Book Company, 1954.
F–1 Franklin, G. F, J. D. Powell, and A. Emami-Naeini, Feedback Control of Dynamic Systems ,
3rd ed. Reading, MA: Addison-Wesley Publishing Company, Inc., 1994.
F–2 Friedland, B., Control System Design . New York: McGraw-Hill Book Company, 1986.
F–3 Fu, K. S., R. C. Gonzalez, and C. S. G. Lee, Robotics: Control, Sensing, Vision, and Intelli-
gence. New York: McGraw-Hill Book Company, 1987.
G–1 Gantmacher, F. R., Theory of Matrices , Vols. I and II. NewYork: Chelsea Publishing
Company, Inc., 1959.
G–2 Gardner, M. F, and J. L. Barnes, Transients in Linear Systems. New York: John Wiley &
Sons, Inc., 1942.
G–3 Gibson, J. E., Nonlinear Automatic Control . New York: McGraw-Hill Book Company, 1963.
G–4 Gilbert, E. G.,“Controllability and Observability in Multivariable Control Systems,” J.SIAM
Control , ser. A, 1(1963) , pp. 128–51.
G–5 Graham, D., and R. C. Lathrop, “The Synthesis of Optimum Response: Criteria and Stan-
dard Forms,” AIEE Trans. Part II ,72(1953), pp. 273–88.
H–1 Hahn, W., Theory and Application of Liapunov’s Direct Method . Upper Saddle River, NJ:
Prentice Hall, 1963.
H–2 Halmos, P . R., Finite Dimensional Vector Spaces. New York:Van Nostrand Reinhold, 1958.
H–3 Higdon, D. T., and R. H. Cannon, Jr., “On the Control of Unstable Multiple-Output
Mechanical Systems,” ASME Paper no. 63-WA-148 , 1963.
I–1 Irwin, J. D., Basic Engineering Circuit Analysis . New York: Macmillan, Inc., 1984.
J–1 Jayasuriya, S., “Frequency Domain Design for Robust Performance Under Parametric,
Unstructured, or Mixed Uncertainties,” ASME J. Dynamic Systems, Measurement, and
Control ,115(1993), pp. 439–51.
K–1 Kailath, T., Linear Systems . Upper Saddle River, NJ: Prentice Hall, 1980.
K–2 Kalman, R. E., “Contributions to the Theory of Optimal Control,” Bol. Soc Mat. Mex. ,5
(1960), pp. 102–19.
K–3 Kalman, R. E.,“On the General Theory of Control Systems,” Proc. First Intern. Cong. IFAC,
Moscow , 1960, Automatic and Remote Control . London: Butterworths & Company Limited,
1961, pp. 481–92.
References 883
K–4 Kalman, R. E.,“Canonical Structure of Linear Dynamical Systems,” Proc. Natl. Acad. Sci.,
USA ,48(1962), pp. 596–600.
K–5 Kalman, R. E., “When Is a Linear Control System Optimal?” ASMEJ. Basic Engineering ,
ser. D, 86(1964), pp. 51–60.
K–6 Kalman, R. E., and J. E. Bertram, “Control System Analysis and Design via the Second
Method of Lyapunov: I Continuous-Time Systems,” ASME J. Basic Engineering , ser. D, 82
(1960), pp. 371–93.
K–7 Kalman, R. E.,Y. C. Ho, and K. S. Narendra,“Controllability of Linear Dynamic Systems,”
inContributions to Differential Equations ,Vol. 1. New York:Wiley-Interscience Publishers,
Inc., 1962.
K–8 Kautsky, J., and N. Nichols, “Robust Pole Assignment in Linear State Feedback,” Intern. J.
Control ,41(1985), pp 1129–55.
K–9 Kreindler, E., and P . E. Sarachick, “On the Concepts of Controllability and Observability
of Linear Systems,” IEEE Trans. Automatic Control ,AC-9 (1964), pp. 129–36.
K–10 Kuo, B. C., Automatic Control Systems , 6th ed. Upper Saddle River, NJ: Prentice Hall, 1991.
L–1 LaSalle, J. P , and S. Lefschetz, Stability by Liapunov’s Direct Method with Applications . New
York: Academic Press, Inc., 1961.
L–2 Levin, W. S., The Control Handbook . Boca Raton, FL: CRC Press, 1996.
L–3 Levin, W. S. Control System Fundamentals . Boca Raton, FL: CRC Press, 2000.
L–4 Luenberger, D. G.,“Observing the State of a Linear System,” IEEE Trans. Military Electr .,
MIL-8 (1964), pp. 74–80.
L–5 Luenberger, D. G., “An Introduction to Observers,” IEEE Trans. Automatic Control ,
AC-16 (1971), pp. 596–602.
L–6 Lur’e,A. I., and E. N. Rozenvasser,“On Methods of Constructing Liapunov Functions in the
Theory of Nonlinear Control Systems,” Proc. First Intern. Cong. IFAC , Moscow, 1960, Auto-
matic and Remote Control . London: Butterworths & Company Limited, 1961, pp. 928–33.
M–1 MathWorks, Inc., The Student Edition of MATLAB , version 5. Upper Saddle River, NJ:
Prentice Hall, 1997.
M–2 Melbourne, W. G., “Three Dimensional Optimum Thrust Trajectories for Power-Limited
Propulsion Systems,” ARS J .,31(1961), pp. 1723–8.
M–3 Melbourne,W. G., and C. G. Sauer, Jr.,“Optimum Interplanetary Rendezvous with Power-
Limited Vehicles,” AIAA J .,1(1963), pp. 54–60.
M–4 Minorsky, N., Nonlinear Oscillations . New York: Van Nostrand Reinhold, 1962.
M–5 Monopoli, R.V .,“Controller Design for Nonlinear and Time-Varying Plants,” NASA CR152 ,
Jan., 1965.
N–1 Noble, B., and J. Daniel, Applied Linear Algebra , 2nd ed. Upper Saddle River, NJ: Prentice
Hall, 1977.
N–2 Nyquist, H., “Regeneration Theory,” Bell System Tech. J .,11(1932), pp. 126–47.
O–1 Ogata, K., State Space Analysis of Control Systems . Upper Saddle River, NJ: Prentice Hall,
1967.
O–2 Ogata, K., Solving Control Engineering Problems with MATLAB . Upper Saddle River,
NJ: Prentice Hall, 1994.
O–3 Ogata, K., Designing Linear Control Systems with MATLAB . Upper Saddle River, NJ:
Prentice Hall, 1994.
O–4 Ogata, K., Discrete-Time Control Systems , 2nd ed. Upper Saddle River, NJ: Prentice Hall,
1995.
O–5 Ogata, K., System Dynamics , 4th ed. Upper Saddle River, NJ: Prentice Hall, 2004.
884
References
Openmirrors.com
O–6 Ogata, K., MATLAB for Control Engineers. Upper Saddle River, NJ: Pearson Prentice
Hall, 2008.
P–1 Phillips, C. L., and R. D. Harbor, Feedback Control Systems . Upper Saddle River, NJ: Pren-
tice Hall, 1988.
P–2 Pontryagin, L. S., V . G. Boltyanskii, R. V . Gamkrelidze, and E. F. Mishchenko, The
Mathematical Theory of Optimal Processes . New York: John Wiley & Sons, Inc., 1962.
R–1 Rekasius, Z.V .,“A General Performance Index for Analytical Design of Control Systems,”
IRE Trans. Automatic Control ,AC-6 (1961), pp. 217–22.
R–2 Rowell, G., and D.Wormley, System Dynamics . Upper Saddle River, NJ: Prentice Hall, 1997.
S–1 Schultz, W. C., and V . C. Rideout, “Control System Performance Measures: Past, Present,
and Future,” IRE Trans. Automatic Control ,AC-6 (1961), pp. 22–35.
S–2 Smith, R. J., Electronics: Circuits and Devices , 2d ed. New York: John Wiley & Sons, Inc., 1980.
S–3 Staats, P . F. “A Survey of Adaptive Control Topics,” Plan B paper , Dept. of Mech. Eng.,
University of Minnesota, March 1966.
S–4 Strang, G., Linear Algebra and Its Applications . New York: Academic Press, Inc., 1976.
T–1 Truxal, J. G., Automatic Feedback Systems Synthesis . New York: McGraw-Hill Book
Company, 1955.
U–1 Umez-Eronini, E., System Dynamics and Control . Pacific Grove, CA: Brooks /H20862Cole
Publishing Company, 1999.
V–1 Valkenburg, M. E., Network Analysis. Upper Saddle River, NJ: Prentice Hall, 1974.
V–2 Van Landingham, H. F., and W. A. Blackwell, “Controller Design for Nonlinear and 
Time-Varying Plants,” Educational Monograph , College of Engineering, Oklahoma State
University, 1967.
W–1 Webster, J. G., Wiley Encyclopedia of Electrical and Electronics Engineering , Vol. 4. New
York: John Wiley & Sons, Inc., 1999.
W–2 Wilcox, R. B., “Analysis and Synthesis of Dynamic Performance of Industrial
Organizations—The Application of Feedback Control Techniques to Organizational Sys-tems,” IRE Trans. Automatic Control ,AC-7 (1962), pp. 55–67.
W–3 Willems, J. C., and S. K. Mitter, “Controllability, Observability, Pole Allocation, and State
Reconstruction,” IEEE Trans. Automatic Control ,AC-16 (1971), pp. 582–95.
W–4 Wojcik, C. K.,“Analytical Representation of the Root Locus,” ASME J. Basic Engineering ,
ser. D, 86(1964), pp. 37–43.
W–5 Wonham,W. M.,“On Pole Assignment in Multi-Input Controllable Linear Systems,” IEEE
Trans. Automatic Control ,AC-12 (1967), pp. 660–65.
Z–1 Zhou, K., J. C. Doyle, and K. Glover, Robust and Optimal Control. Upper Saddle River, NJ:
Prentice Hall, 1996.
Z–2 Zhou, K., and J. C. Doyle, Essentials of Robust Control, Upper Saddle River, NJ: Prentice
Hall, 1998.
Z–3 Ziegler, J. G., and N. B. Nichols, “Optimum Settings for Automatic Controllers,” ASME
Trans .64(1942), pp. 759–68.
Z–4 Ziegler, J. G., and N. B. Nichols,“Process Lags in Automatic Control Circuits,” ASME Trans .
65(1943), pp. 433–44.
References 885
I
886
Index
A
Absolute stability, 160
Ackermann’s formula:
for observer gain matrix, 756–57
for pole placement, 730–31
Actuating error, 8
Actuator, 21–22
Adjoint matrix, 876
Air heating system, 150
Aircraft elevator control system, 156
Analytic function, 860
Angle:
of arrival, 286
of departure, 280, 286
Angle condition, 271
Asymptotes:
Bode diagram, 406–07
root loci, 274–75, 284–85
Attenuation, 165
Attitude-rate control system, 386
Automatic controller, 21
Automobile suspension system, 86
Auxiliary polynomial, 216
B
Back emf, 95
constant, 95
Bandwidth, 474, 539
Basic control actions:
integral, 24
on-off, 22
proportional, 24
proportional-plus-derivative, 25
proportional-plus-integral, 24
proportional-plus-integral-plus-
derivative, 35
two-position, 22–23
Bleed-type relay, 111
Block, 17
Block diagram, 17–18
reduction, 27–28, 48
Bode diagram, 403
error in asymptotic expression of, 403
of first-order factors, 406–07, 409
general procedure for plotting, 413
plotting with MATLAB, 422–25
of quadratic factors, 410–12
of system defined in state space,
426–27
Branch point, 18
Break frequency, 406
Breakaway point, 275–76, 285–86, 351
Break-in point, 276, 281, 285–86, 351
Bridged-T networks, 90, 520
Business system, 5
Openmirrors.com
Index 887C
Canonical forms:
controllable, 649
diagonal, 650
Jordan, 651, 653observable, 650
Capacitance:
of pressure system, 107–09of thermal system, 137of water tank, 103
Cancellation of poles and zeros, 288
Cascaded system, 20
Cascaded transfer function, 20Cauchy–Riemann conditions, 860–61Cauchy’s theorem, 526Cayley–Hamilton theorem, 668, 701Characteristic equation, 652Characteristic polynomial, 34Characteristic roots, 652
Circular root locus, 282
Classical control theory, 2Classification of control systems, 225Closed-loop control system, 8Closed-loop system, 20Closed-loop frequency response, 477Closed-loop frequency response curves:
desirable shapes of, 492undesirable shapes of, 492
Closed-loop transfer function, 19–20Cofactor, 876
Command compensation, 630
Compensation:
feedback, 308parallel, 308series, 308
Compensator:
lag, 323, 503–04lag–lead, 332–34, 511–13lead, 312–13, 495–96
Complete observability, 683–84
conditions for, 684–85
in the splane, 684
Complete output controllablility, 714Complete state controllability, 676–81
in the splane, 680–81
Complex-conjugate poles:
cancellation of undesirable, 520
Complex function, 859
Complex impedence, 75
Complex variable, 859Computational optimization approach to
design PID controller, 583–89
Conditional stability, 299–300, 510–11Conditionally stable system, 299–300,
458, 510–11
Conduction heat transfer, 137Conformal mapping, 447, 462–64
Conical water tank system, 152
Constant-gain loci, 302–03
Constant-magnitude loci (M circles),
478–79
Constant phase-angle loci (N circles),
480–81
Constant v
nloci, 296
Constant zlines, 298
Constant zloci, 296
Control actions, 21
Control signal, 3
Controllability, 675–81
matrix, 677output, 681
Controllable canonical form, 649, 688Controlled variable, 3Controller, 22Convection heat transfer, 137Conventional control theory, 29
Convolution, integral, 16
Corner frequency, 406Critically damped system, 167Cutoff frequency, 474Cutoff rate, 475
D
Damped natural frequency, 167Damper, 64, 132Damping ratio, 165
lines of constant, 296
Dashpot, 64, 132–33Dead space, 43Decade, 405Decibel, 403
Delay time, 169–70
Derivative control action, 118–20, 222Derivative gain, 84Derivative time, 25, 61Detectability, 688Determinant, 874Diagonal canonical form, 694Diagonalization of n*nmatrix, 652
Differential amplifier, 78
Differential gap, 23, 24
Differentiating system, 231Differentiation:
of inverse matrix, 881of matrix, 880of product of two matrices, 880
Differentiator:
approximate, 617
Direct transmission matrix, 31Disturbance, 3, 26
Dominant closed-loop poles, 182
Duality, 754
E
e
At
:
computation of, 670–71
Eigenvalue, 652
invariance of, 655
Electromagnetic valve, 23
Electronic controller, 77, 83
Engineering organizational system, 5–6
Equivalent moment of inertia, 234
Equivalent spring constant, 64
Equivalent viscous-friction coefficient,
65, 234
Evans, W. R., 2, 11, 269
Exponential response curve, 162
F
Feedback compensation, 308–09, 342, 519
Feedback control, 3
Feedback control system, 7
Feedback system, 20
Feedforward transfer function, 19
Final value theorem, 866
First-order lag circuit, 80
First-order system, 161–64
unit-impulse response of, 163
unit-ramp response of, 162–63
unit-step response of, 161–62
Flapper, 110
valve, 156
Fluid systems:
mathematical modeling of, 100
Free-body diagram, 69–70
Frequency response, 398
correlation between step response
and, 471–74
lag compensation based on, 502–11
lag–lead compensation based on,
511–17
lead compensation based on, 493–502
Full-order state observer, 752–53
Functional block, 17
G
Gain crossover frequency, 467–69
Gain margin, 464–67
Gas constant, 108
for air, 142
universal, 108
Gear train, 232
system, 232–34
Generalized plant, 813, 815–17
diagram, 810–16, 853–54
H
H infinity control problem, 816
H infinity norm, 6, 808
888
Index
Hazen, 2, 11
High-pass filter, 495
Higher-order systems, 179
transient response of, 180–81
Hurwitz determinants, 252–58
Hurwitz stability criterion, 252–53, 255–58
equivalence of Routh’s stability 
criterion and, 255–57
Hydraulic controller:
integral, 130
jet-pipe, 147
proportional, 131
proportional-plus-derivative, 134–35
proportional-plus-integral, 133–34
proportional-plus-integral-plus-
derivative, 135–36
Hydraulic servo system, 124–25
Hydraulic servomotor, 128, 130, 156
Hydraulic system, 106, 123–39, 149
advantages and disadvantages of, 124
compared with pneumatic system, 106
I
Ideal gas law, 108
Impedance:
approach to obtain transfer function,
75–76
Impulse function, 866
Impulse response, 163, 178–79, 195–97
function, 16–17
Industrial controllers, 22
Initial condition:
response to, 203–11
Initial value theorem, 866
Input filter, 261, 630
Input matrix, 31
Integral control, 220
Integral control action, 24–25, 218
Integral controller, 22
Integral gain, 61
Integral time, 25, 61
Integration of matrix, 880
Inverse Laplace transform:
partial-fraction expansion method for
obtaining, 867–73
Inverse Laplace transformation, 862
Inverse of a matrix:
MATLAB approach to obtain, 879
Inverse polar plot, 461–62, 537–38
Inverted-pendulum system, 68–72, 98
Inverted-pendulum control system,
746–51
Inverting amplifier, 78
I-PD control, 591–92
I-PD-controlled system, 592, 628–29, 643
with feedforward control, 642
Openmirrors.com
Index 889J
Jet-pipe controller, 146–47
Jordan blocks, 679Jordan canonical form, 651, 695, 706–07
K
Kalman, R. E., 12, 675Kirchhoff’s current law, 72Kirchhoff’s loop law, 72Kirchhoff’s node law, 72Kirchhoff’s voltage law, 72
L
Lag compensation, 321Lag compensator, 311, 321, 502
Bode diagram of, 503
design by frequency-response method,
502–11
design by root-locus method, 321, 323polar plot of, 503
Lag network, 82, 542Lag–lead compensation, 330, 335, 338,
377, 511–18
Lag–lead compensator:
Bode diagram of, 558design by frequency-response method,
513–17
design by root-locus method, 331–32,
380–82
electronic, 330–32polar plot of, 512
Lag–lead network:
electronic, 330–32mechanical, 366
Lagrange polynomial, 708
Lagrange’s interpolation formula, 708
Laminar-flow resistance, 102Laplace transform, 862
properties of, 865table of, 863–64
Lead compensator, 311, 493
Bode diagram of, 494
design by frequency-response method,
493–502
design by root-locus method, 311–18polar plot of, 494
Lead, lag, and lag–lead compensators:
comparison of, 517–18
Lead network, 542
electronic, 82mechanical, 365
Lead time, 5Linear approximation:
of nonlinear mathematical models, 43
Linear system, 14
constant coefficient, 14Linear time-invariant system, 14, 164
Linear time-varying system, 14Linearization:
of nonlinear systems, 43
Liquid-level control system, 157
Liquid-level systems, 101, 103–04, 140–41
Log-magnitude curves of quadratic
transfer function, 411
Logarithmic decrement, 237Logarithmic plot, 403Log-magnitude versus phase plot, 403,
443–44
LRC circuit, 72–73
M
M circles, 478–79
a family of constant, 479
Magnitude condition, 271
Manipulated variable, 3Mapping theorem, 448–49
Mathematical model, 13
MATLAB commands:
MATLAB:
obtaining maximum overshoot with,
194
obtaining peak time with, 194
obtaining response to initial condition
with, 266
partial-fraction expansion with,
871–73
plotting Bode diagram with, 422–23plotting root loci with, 290–91writing text in diagrams with, 188–89
[A,B,C,D] = tf2ss(num,den), 40, 656,
698
bode(A,B,C,D), 422, 426
bode(A,B,C,D,iu), 426–27
bode(A,B,C,D,iu,w), 422
bode(A,B,C,D,w), 422
bode(num,den), 422bode(num,den,w), 422, 425, 551
bode(sys), 422
bode(sys,w), 552
c = step(num,den,t), 190
for loop, 243, 249, 584[Gm,pm,wcp,wcg,] = margin(sys),
468–69
gtext ('text'), 189
impulse(A,B,C,D), 195
impulse(num, den), 195initial(A,B,C,D,[initial condition],t), 209
inv(A), 879
K = acker(A,B,J), 736
K = lqr(A,B,Q,R), 798
K = place(A,B,J), 736
MATLAB commands (Cont. )
K
e
= acker(A',C',L)', 773
K
e
= acker(Abb,Aab,L)', 773
K
e
= place(A',C',L)', 773
K
e
= place(Abb',Aab',L)', 773
[K,P,E] = lqr(A,B,Q,R), 798
[K,r] = rlocfind(num,den), 303
logspace(d1,d2), 422
logspace(d1,d2,n), 422–23
lqr(A,B,Q,R), 797
lsim(A,B,C,D,u,t), 201
lsim(num,den,r,t), 201
magdB = 20*log10(mag), 422
[mag,phase,w] = bode(A,B,C,D), 422
[mag,phase,w] = bode(A,B,C,D,iu,w),
422
[mag,phase,w] = bode(A,B,C,D,w),
422
[mag,phase,w] = bode(num,den), 422
[mag,phase,w] = bode(num,den,w),
422, 476
[mag,phase,w] = bode(sys), 422
[mag,phase,w] = bode(sys,w), 476
mesh, 192
mesh(y), 192, 249
mesh(y'), 192, 249
[Mp,k] = max(mag), 476
NaN, 799
[num,den] = feedback(num1,den1,
num2,den2), 20–21
[num,den] = parallel(num1,den1,
num2,den2), 20–21
[num,den] = series(num1,den1,
num2,den2), 20–21
[num,den] = ss2tf(A,B,C,D), 41, 657
[num,den] = ss2tf(A,B,C,D,iu), 41–42,
58, 657
[NUM,den] = ss2tf(A,B,C,D,iu), 59,
659
nyquist(A,B,C,D), 436, 441–42
nyquist(A,B,C,D,iu), 441
nyquist(A,B,C,D,iu,w), 436, 441
nyquist(A,B,C,D,w), 436
nyquist(num,den), 436
nyquist(num, den,w), 436
nyquist(sys), 436
polar(theta,r), 545
printsys(num,den), 20–21, 189
printsys(num,den,'s'), 189
r = abs(z), 544
[r,p,k] = residue(num,den), 239, 871–72
[re,im,w] = nyquist(A,B,C,D), 436
[re,im,w] = nyquist(A,B,C,D,iu,w), 436
[re,im,w] = nyquist(A,B,C,D,w), 436
[re,im,w] = nyquist(num,den), 436
[re,im,w] = nyquist(num,den,w), 436
890
Index
[re,im,w] = nyquist(sys), 436
residue, 867
resonant_frequency = w(k), 476
resonant_peak = 20*log10(Mp), 476
rlocfind, 303
rlocus(A,B,C,D), 295
rlocus(A,B,C,D,K), 290, 295
rlocus(num,den), 290–91
rlocus(num,den,K), 290
sgrid, 297
sortsolution, 584
step(A,B,C,D), 184, 186
step(A,B,C,D,iu), 184
step(num,den), 184
step(num,den,t), 184
step(sys), 184
sys = ss(A,B,C,D), 184
sys = tf(num,den), 184
text, 188
theta = angle(z), 544
w = logspace(d2,d3,100), 425
y = lsim(A,B,C,D,u,t), 201
y = lsim(num,den,r,t), 201
[y, x, t] = impulse(A,B,C,D), 195
[y, x, t] = impulse(A,B,C,D,iu), 195
[y, x, t] = impulse(A,B,C,D,iu,t), 195
[y, x, t] = impulse(num,den), 195
[y, x, t] = impulse(num,den,t), 195
[y, x, t] = step(A,B,C,D,iu), 184
[y, x, t] = step(A,B,C,D,iu,t), 184
[y, x, t] = step(num,den,t), 184, 190
z = re+j*im, 544
End of MATLAB commands
Matrix exponential, 661, 669–674
closed solution for, 663
Matrix Riccati equation, 798, 800
Maximum overshoot:
in unit-impulse response, 179
in unit-step response, 170, 172
versuszcurve, 174
Maximum percent overshoot, 170
Maximum phase lead angle, 494, 498
Measuring element, 21
Mechanical lag–lead system, 366
Mechanical lead system, 365
Mechanical vibratory system, 236
Mercury thermometer system, 151
Minimal polynomial, 669, 704–06
Minimum-order observer, 767–77
based controller, 777
Minimum-order state observer, 752
Minimum-phase system, 415–16
Minimum-phase transfer function, 415
Minor, 876
Modern control theory, 7, 29
versus conventional control theory, 29
Openmirrors.com
Index 891Motor torque constant, 95
Motorcycle suspension system, 87
Multiple-loop system, 458–59
N
N circles, 480–81
a family of constant, 481
Newton’s second law, 66Nichols, 2, 11, 398Nichols chart, 482–85Nichols plots, 403
Nonbleed-type relay, 111
Nonhomogeneous state equation:
solution of, 666–67
Noninverting amplifier, 79
Nonlinear mathematical models:
linear approximation of, 43–45
Nonlinear system, 43
Nonminimum-phase systems, 300–01,
415, 417
Nonminimum-phase transfer function,
415, 488
Nonuniqueness:
of a set of state variables, 655
Nozzle-flapper amplifier, 110
Number-decibel conversion line, 404Nyquist, H., 2, 11, 398
Nyquist path, 545
Nyquist plot, 403, 439–40, 443
of positive-feedback system, 535–37
of system defined in state space, 440–43
Nyquist stability analysis, 454–62
Nyquist stability criterion, 445–54
applied to inverse polar plots, 461–62
O
Observability, 675, 682–88
complete, 683–85
matrix, 653
Observable canonical form, 650, 692
Observation, 752
Observed-state feedback control system,
761
Observer, 753
design of control system with, 786–93
full-order, 753
mathematical model of, 752
minimum-order, 767–73
Observer-based controller:
transfer function of, 761
Observer controller:
in the feedback path of control system,
787, 790–93
in the feedforward path of control
system, 787–90
Observer-controller matrix, 762Observer-controller transfer function,
761–62
Observer error equation, 753Observer gain matrix, 755
MATLAB determination of, 773
Octave, 405Offset, 258On-off control action, 22–23On-off controller, 22
One-degree-of-freedom control system,
593
op amps, 78Open-loop control system, 8
advantages of, 9disadvantages of, 9
Open-loop frequency response curves:
reshaping of, 493
Open-loop transfer function, 19
Operational amplifier, 78
Operational amplifier circuits, 93–94
for lead or lag compensator:table of, 85
Optimal regulator problem, 806Ordinary point, 861Orthogonality:
of root loci and constant gain loci,
301–02
Output controllability, 681
Output equation, 31
Output matrix, 31Overdamped system, 168–69Overlapped spool valve, 146Overlapped valve, 130
P
Parallel compensation, 308–09, 342–43Partial-fraction expansion, 867–73
with MATLAB, 871–73
PD control, 373
PD controller, 614–15Peak time, 170, 172, 193Performance index, 793Performance specifications, 9Phase crossover frequency, 467–69Phase margin, 464–67
versuszcurve, 472
PI controller, 2, 614–15PI-D control, 590–92
PID control system, 572–77, 583, 587,
617–21, 628–29, 642–43
basic, 590with input filter, 629two-degrees-of-freedom, 592–95
PID controller, 567, 577, 614–16, 620, 632
modified, 616using operational amplifiers, 83–84
Pilot valve, 124, 130
PI-PD control, 592
PID-PD control, 592
Plant, 3
Pneumatic actuating valve, 117–18
Pneumatic controllers, 144–45, 154–55
Pneumatic nozzle-flapper amplifier, 110
Pneumatic on-off controller, 115
Pneumatic pressure system, 142
Pneumatic proportional controller, 112–16
force-balance type, 115–16
force-distance type, 112–15
Pneumatic proportional-plus-derivative
controller, 119–20
Pneumatic proportional-plus-integral
control action, 120–22
Pneumatic proportional-plus-integral-
plus-derivative control action,
122–23
Pneumatic relay, 111
bleed type, 111
nonbleed type, 111
reverse acting, 112
Pneumatic systems, 106–23, 153
compared with hydraulic system, 106
Pneumatic two-position controller, 115
Polar grids, 297
Polar plot, 403, 427–28, 430, 432
Pole: 861
of order n, 861
simple, 861
Pole assignment technique, 723
Pole-placement:
necessary and sufficient conditions for
arbitrary, 725
Pole placement problem, 723–35
solving with MATLAB, 735–36
Positive-feedback system:
Nyquist plot for, 536–37
root loci for, 303–07
Positional servo system, 95–97
Pressure system, 107, 109
Principle of duality, 687
Principle of superposition, 43
Process, 3
Proportional control, 219
Proportional control action, 24
Proportional controller, 22
Proportional gain, 25, 61
Proportional-plus-derivative control:
of second-order system, 224
of system with inertia load, 223
Proportional-plus-derivative control
action, 25
Proportional-plus-derivative controller,
22, 542
892
Index
Proportional-plus-integral control action,
24
Proportional-plus-integral controller, 22,
121, 542
Proportional-plus-integral-plus-
derivative control action, 25
Proportional-plus-integral-plus-
derivative controller, 22
Pulse function, 866
Q
Quadratic factor, 410
log-magnitude curves of, 411
phase-angle curves of, 411
Quadratic optimal control problem:
MATLAB solution of, 804
Quadratic optimal regulator system,
793–95
MATLAB design of, 797
R
Ramp response, 197
Rank of matrix, 875
Reduced-matrix Riccati equation, 795–97
Reduced-order observer, 752
Reduced-order state observer, 752
Reference input, 21
Regulator system with observer
controller, 778–86, 789
Relative stability, 160, 217, 462
Residue, 867
Residue theorem, 527
Resistance:
gas-flow, 107
laminar-flow, 101–02
of pressure system, 107, 109
of thermal system, 137
turbulent-flow, 102
Resonant frequency, 430, 470
Resonant peak, 413, 430, 470
versuszcurve, 413
Resonant peak magnitude, 413, 470
Response:
to arbitrary input, 201
to initial condition, 203–11
to torque disturbance, 221
Reverse-acting relay, 112
Riccati equation, 795
Rise time, 169–171
obtaining with MATLAB, 193–94
Robust control:
system, 16, 806–17
theory, 2, 7
Robust performance, 7, 807, 812
Robust pole placement, 735
Robust stability, 7, 807, 809
Openmirrors.com
Index 893Root loci:
general rules for constructing, 283–87for positive-feedback system, 303–07
Root locus, 271
method, 269–70
Routh’s stability criterion, 212–18
S
Schwarz matrix, 268Second-order system, 164
impulse response of, 178–79standard form of, 166
step response of, 165–75transient-response specification of, 171
unit-step response curves of, 169
Sensor, 21Series compensation, 308–09, 342Servo system, 95, 164–65
design of, 739–51with tachometer feedback, 268with velocity feedback, 175–77
Servomechanism, 2
Set point, 21Set-point kick, 590Settling time, 170, 172–73
obtaining with MATLAB, 194versuszcurve, 174
Sign inverter, 79Simple pole, 861Singular points, 861
Sinusoidal signal generator, 486
Sinusoidal transfer function, 401Small gain theorem, 809Space vehicle control system, 367, 538–39Speed control system, 4, 148Spool valve:
linealized mathematical model of, 127
Spring-loaded pendulum system, 98Spring-mass-dashpot system, 66Square-law nonlinearity, 43
S-shaped curve, 569
Stability analysis, 454–62
in the complex plane, 182
Stabilizability, 688Stack controller, 115Standard second-order system, 189State, 29State controllability:
complete, 676, 678, 680
State equation, 31
solution of homogeneous, 660solution of nonhomogeneous, 666–67Laplace transform solution of, 663
State-feedback gain matrix, 724
MATLAB approach to determine,
735–36State matrix, 31
State observation:
necessary and sufficient conditions for,
754–55
State observer, 751–77
design with MATLAB, 773
type 1 servo system with, 746
State observer gain matrix: 755
Ackermann’s formula to obtain, 756–57direct substitution approach to obtain,
756
transformation approach to obtain, 755
State space, 30State-space equation, 30
correlation between transfer function
and, 649, 656
solution of, 660
State-space representation:
in canonical forms, 649ofnth order system, 36–39
State-transition matrix, 664
properties of, 665
State variable, 29State vector, 30
Static acceleration error constant,
228, 421
determination of, 421–22
Static position error constant,
226, 419
Static velocity error constant,
227, 420
Steady-state error, 160, 226
for unit parabolic input, 229
for unit ramp input, 228
in terms of gain K, 230
Steady-state response, 160Step response, 699–700
of second-order system, 165–69
Summing point, 18Suspension system:
automobile, 86–87motorcycle, 87
Sylvester’s interpolation formula, 673,
709–713
System, 3Sytem types, 419
type 0, 225, 230, 419, 433, 487–88type 1, 225, 230, 420, 433, 487–88type 2, 225, 230, 421, 433, 487–88
System response to initial condition:
MATLAB approach to obtain, 203–11
T
Tachometer, 176
feedback, 343
Taylor series expansion, 43–45
Temperature control systems, 4–5
Test signals, 159
Text:
writing on the graphic screen, 188
Thermal capacitance, 137
Thermal resistance, 137
Thermal systems, 100,136–39
Thermometer system, 151–52
Three-degrees-of-freedom system, 645
Three-dimensional plot, 192
of unit-step response curves with
MATLAB, 191–93
Traffic control system, 8
Transfer function, 15
of cascaded elements, 73–74
of cascaded systems, 20
closed-loop, 20
of closed-loop system, 20
experimental determination of, 489–90
expression in terms of A,B,C, and D,3 4
of feedback system, 19
feedforward, 19
of minimum-order observer-based
controller, 777
of nonloading cascaded elements,
77
observer-controller, 762, 780–82
open-loop, 19
of parallel systems, 20
sinusoidal, 401
Transfer matrix, 35
Transformation:
from state space to transfer function,
41–42, 657
from transfer function to state space,
40–41, 656
Transient response, 160
analysis with MATLAB, 183–211
of higher-order system, 180
specifications, 169, 171
Transport lag, 417
phase angle characteristics of, 417
Turbulent-flow resistance, 102
Two-degrees-of-freedom control system,
593–95, 599–614, 636–41, 646–47
Two-position control action, 22–23
Two-position controller, 22
Type 0 system, 225, 230, 488
log-magnitude curve for, 419, 488
polar plot of, 433
Type 1 servo system:
design of, 743–51
pole-placement design of, 739–46
Type 1 system, 420
log-magnitude curve for, 420, 488
polar plot of, 433
894
Index
Type 2 system, 421
log-magnitude curve for, 421, 488
polar plot of, 433
U
Uncontrollable system, 681
Undamped natural frequency, 165
Underdamped system, 166–67
Underlapped spool valve, 146
Unit acceleration input, 247
Unit-impulse response:
of first-order system, 163
of second-order system, 178
Unit-impulse response curves:
a family of, 178
obtained by use of MATLAB, 196–97
Unit-ramp response:
of first-order system, 162–63
of second-order system, 197–200
of system defined in state space,
199–200
Unit-step response:
of first-order system, 161
of second-order system, 163, 167, 169
Universal gas constant, 108
Unstructured uncertainty:
additive, 852–53
multiplicative, 809
system with, 809
V
Valve:
overlapped, 130
underlapped, 130
zero-lapped, 130
Valve coefficient, 127
Vectors:
linear dependence of, 674
linear independence of, 674
Velocity error, 227
Velocity feedback, 176, 343, 519
W
Watt’s speed governor, 4
Weighting function, 17
Z
Zero, 861
of order m, 862
Zero-lapped valve, 130
Zero placement, 595, 597, 612
approach to improve response charac-
teristics, 595–97
Ziegler–Nichols tuning rules, 11, 568–77
first method, 569–70
second method, 570–71
Openmirrors.com